*          DATA SET CBT990     AT LEVEL 086 AS OF 06/01/12              00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                00002
**************************************************************          00003
**************************************************************          00004
**                                                          **          00005
**                                                          **          00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **          00007
**                                                          **          00008
**           Extensively revised by Sam Golob.              **          00009
**                                                          **          00010
**      (See the documentation in the code, below.)         **          00011
**                                                          **          00012
**  ======================================================  **          00013
**                                                          **          00014
**  Important Note - ALL TAPE DD NAMES MUST HAVE LABEL=BLP  **          00015
**  --------- ----       ---- -- -----           ---------  **          00016
**                                                          **          00017
**      When you are running this program, the DD names     **          00018
**      in the JCL, for //IN and //OUTnn must specify       **          00019
**      LABEL=(1,BLP,EXPDT=98000).  It is essential to      **          00020
**      specify BLP in these DD names, so that all the      **          00021
**      tape labels are treated as plain data, and are      **          00022
**      ignored by the MVS system.  COPYMODS manipulates    **          00023
**      parts of the tape labels, and it copies many tape   **          00024
**      labels as though they were data, so it needs to     **          00025
**      keep its own control of the contents of all the     **          00026
**      tape labels, in all the tapes.                      **          00027
**                                                          **          00028
**      Example:  If you do not specify LABEL=(1,BLP) for   **          00029
**      an output tape, then the following error will       **          00030
**      occur.  The system will skip over the output        **          00031
**      tape's initial labels, and COPYMODS will start      **          00032
**      writing its output from a read point, starting      **          00033
**      past these labels.  So COPYMODS will write the      **          00034
**      input tape's volume label and headers AFTER the     **          00035
**      output tape's volume label and headers.  You will   **          00036
**      get both sets of VOL1 labels and header labels in   **          00037
**      the output tape, which is a serious error.          **          00038
**                                                          **          00039
**      Other errors will occur if LABEL=BLP is not         **          00040
**      specified for the input tape.                       **          00041
**                                                          **          00042
**      This program "officially" runs non-APF authorized.  **          00043
**      But BLP has to be YES for the jobclass under which  **          00044
**      the job is run.  It is possible to make a program   **          00045
**      "force BLP" from within, but that would require     **          00046
**      APF authorization.                                  **          00047
**                                                          **          00048
**  ** ================================================ **  **          00049
**  **  Defaults have purposely been left, so the       **  **          00050
**  **  output will resemble that of the original       **  **          00051
**  **  program version.  And all of your original JCL  **  **          00052
**  **  will still work.  However the list of "options  **  **          00053
**  **  in effect" will be printed in //SYSPRINT by     **  **          00054
**  **  default.  It will give you an idea about what   **  **          00055
**  **  kind of things are really possible to do,       **  **          00056
**  **  using this program.  IBM SL, and ASCII SL,      **  **          00057
**  **  are extensively supported.  So are 64K blocks.  **  **          00058
**  ** ================================================ **  **          00059
**  **  Options in COPYMODS may be coded in the PARM    **  **          00060
**  **  of the EXEC card or, more conveniently, in      **  **          00061
**  **  a separate //SYSIN DD card, which is automati-  **  **          00062
**  **  cally recognized if it is present in the JCL.   **  **          00063
**  ** ================================================ **  **          00064
**  **  Assembly time defaults can be changed by        **  **          00065
**  **  altering the (extremely flexible) PARMTABL.     **  **          00066
**  ** ================================================ **  **          00067
**                                                          **          00068
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **          00069
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **          00070
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **          00071
**                                                          **          00072
**     This has been revised, with the many new functions   **          00073
**     that have been added to COPYMODS.  Besides copying   **          00074
**     tapes, COPYMODS can read and measure tapes, as well  **          00075
**     as altering the copied tapes in many ways, such as   **          00076
**     stripping the labels or leading tape marks off.      **          00077
**     The VOLSER and OWNER can be altered in the copied    **          00078
**     tapes, and all labels can also be altered, through   **          00079
**     a process of dumping the labels to a FB-80 file      **          00080
**     (LABLDUMP option), editing the labels, stripping     **          00081
**     the labels in a copy operation (STRIP option), and   **          00082
**     splicing all the labels back in another copy         **          00083
**     operation (LABADDIN option).  COPYMODS can also      **          00084
**     INIT tapes, as many as 16 at a time.  No input tape  **          00085
**     is needed for an INIT operation (INITVOLS option).   **          00086
**                                                          **          00087
**     To see all the COPYMODS options, look at label       **          00088
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **          00089
**     parms for SYSIN, see the code a few lines after the  **          00090
**     label CARDREAD in the PARMCHEK CSECT.                **          00091
**                                                          **          00092
**     The different COPYMODS parms or options can be used  **          00093
**     in combination with each other, as long as they      **          00094
**     don't contradict each other.  In certain cases, the  **          00095
**     use of one option will cause the automatic turn-off  **          00096
**     of one or more other options that contradict with    **          00097
**     it.  This "adjustment" is done by the COPYMODS       **          00098
**     program just after it receives the options settings  **          00099
**     back from the PARMCHEK program.  For example, if     **          00100
**     both LABLDUMP and LABADDIN (which contradict each    **          00101
**     other) are set, COPYMODS will make a judgment that   **          00102
**     LABADDIN takes precedence, so it will turn off both  **          00103
**     the LABLDUMP and READ (read only) options.  On the   **          00104
**     other hand, the STRIP and LABLDUMP options do not    **          00105
**     contradict each other.  So in that case, when STRIP  **          00106
**     and LABLDUMP are both set, COPYMODS will dump all    **          00107
**     the labels from the input tape to the LABLDUMP file, **          00108
**     while at the same time, it will strip them from the  **          00109
**     tape copies.  To get the exact effect you want from  **          00110
**     a COPYMODS run, just be very careful to code the     **          00111
**     correct combination of options.  Look at the OPTIONS **          00112
**     report before you mount the tapes.  (The OPTIONS     **          00113
**     report in //SYSPRINT will be complete before the     **          00114
**     tapes are mounted.)  To see the exact effect of      **          00115
**     the COPYMODS option correction, code the CODEDPRM    **          00116
**     option to obtain a comparison report of the options  **          00117
**     before COPYMODS correction has been done.            **          00118
**                                                          **          00119
**     Up to 132 bytes of the beginning n records of each   **          00120
**     tape file can be dumped in Hex, similarly to the     **          00121
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **          00122
**     tion of the printables in this hex dump can be       **          00123
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **          00124
**     are COPYMODS PARM or SYSIN keywords also.            **          00125
**                                                          **          00126
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **          00127
**     has been added.  COPYMODS can init ASCII tapes       **          00128
**     with the INASC3 and INASC4 keywords.  Additionally,  **          00129
**     the other functions of COPYMODS such as LABLDUMP,    **          00130
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **          00131
**     option with the ASCII keyword allows you to print    **          00132
**     tape records in hex, with an ASCII interpretation    **          00133
**     of the printables.  EOV2EOF works for ASCII tapes.   **          00134
**                                                          **          00135
**     COPYMODS will automatically read past any number     **          00136
**     of leading tape marks on a tape, and will copy       **          00137
**     any real data that is after them.  The leading       **          00138
**     tape marks can be included in the copied tapes       **          00139
**     (option LTMCOPY - default) or they can be skipped    **          00140
**     from the copied tapes and left off, so the real      **          00141
**     data will be at the beginning of the copied tapes    **          00142
**     (option LTMSKIP).                                    **          00143
**                                                          **          00144
**     See the "New Features" section below for some more   **          00145
**     details.  See the #MANUAL member of the install pds  **          00146
**     (CBT Tape File 229) for even more details.           **          00147
**                                                          **          00148
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **          00149
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **          00150
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **          00151
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **          00152
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **          00153
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **          00154
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **          00155
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **          00156
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **          00157
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **          00158
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **          00159
**    PARTICULAR OUTPUT TAPE.                               **          00160
**                                                          **          00161
**    Any output DD names from //OUT1 thru //OUT16 may be   **          00162
**    coded in the execution JCL for COPYMODS, so that up   **          00163
**    to 16 output tapes may be created.  But, if none      **          00164
**    of these DD names is present, COPYMODS will force     **          00165
**    PARM=READ automatically, and it will issue a          **          00166
**    special message to //SYSPRINT saying that it did so.  **          00167
**                                                          **          00168
**  COPYMODS has some optional DD's which will be used      **          00169
**    if they are present.  These following DD's are used   **          00170
**    by the PARMCHEK program, when COPYMODS is executed.   **          00171
**                                                          **          00172
**  //SYSIN    - Extra space to enter PARM keywords.        **          00173
**               Also, the only place to enter the          **          00174
**               "quantity" keywords, which start in        **          00175
**               column 1 of a SYSIN card.                  **          00176
**                                                          **          00177
**         OUTVOLALL=volser      (up to 6 characters)       **          00178
**         TAPEOWNER=owner name  (up to 10 characters)      **          00179
**         FILELIMIT=nnn         (numeric)                  **          00180
**         LABELIMIT=nnn         (numeric)                  **          00181
**         PRINTRCDS=nnn         (numeric)                  **          00182
**                                                          **          00183
**  //PARMREPT - Diagnostic output from the PARMCHEK        **          00184
**               program.  LRECL=133,RECFM=FBA.             **          00185
**                                                          **          00186
**    In addition, the COPYMODS program itself has some     **          00187
**    extra DD's, which are required if the appropriate     **          00188
**    options are set:                                      **          00189
**                                                          **          00190
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **          00191
**               receive the images of all tape labels      **          00192
**               read, together with some control cards     **          00193
**               that COPYMODS generates.  This DD name     **          00194
**               is necessary if the LABLDUMP option is     **          00195
**               in effect.                                 **          00196
**                                                          **          00197
**  //LABADDIN - An FB-80 file, or member of a pds, which   **          00198
**               contains the set of labels to be spliced   **          00199
**               into an NL tape to create an SL tape.      **          00200
**               This DD name is necessary if the LABADDIN  **          00201
**               option of COPYMODS is in effect.  Usually  **          00202
**               the LABADDIN file is a previous result of  **          00203
**               a LABLDUMP operation, or it is an altered  **          00204
**               or edited version of a previously created  **          00205
**               LABLDUMP file.                             **          00206
**                                                          **          00207
**  This program has to be assembled with PARM=BATCH in     **          00208
**    the Assembler EXEC parms.  The entire PARMCHEK        **          00209
**    program has to be included in the assembly, because   **          00210
**    PARMCHEK has to be fitted to the current level of     **          00211
**    the COPYMODS program.                                 **          00212
**                                                          **          00213
**************************************************************          00214
**                                                          **          00215
**  REQUIRED DD NAMES (used by the COPYMODS program):       **          00216
**                                                          **          00217
**  //IN       -  Points to the Input Tape.  Only not       **          00218
**                required in a tape init operation, if     **          00219
**                the INITVOLS option is in effect.         **          00220
**                Otherwise, //IN is always required.       **          00221
**                                                          **          00222
**  //OUT1 thru - Any of these 16 DD names can be coded.    **          00223
**  //OUT16       These are for the output tapes.  These    **          00224
**                are not required if the READ (readonly)   **          00225
**                option is in effect.  Any one of these    **          00226
**                16 possible DD names may be coded, even   **          00227
**                if some numbers have been skipped.  For   **          00228
**                instance, if you have one output tape,    **          00229
**                it may be defined by //OUT13.  It is      **          00230
**                not necessary to code //OUT1.             **          00231
**                                                          **          00232
**  //SYSPRINT  - The output dataset to contain all the     **          00233
**                COPYMODS operation information that was   **          00234
**                called for by the various options set,    **          00235
**                including the OPTIONS display itself.     **          00236
**                This dataset should be LRECL=133,         **          00237
**                RECFM=FBA.                                **          00238
**                                                          **          00239
**************************************************************          00240
**                                                          **          00241
**  PROGRAM STRUCTURE:                                      **          00242
**                                                          **          00243
**  This program is no longer a single CSECT as it was in   **          00244
**    the old days.  There are now the following CSECTs,    **          00245
**    which should all be assembled together:               **          00246
**                                                          **          00247
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **          00248
**                                                          **          00249
**   COPYMODS - The main processing module, which contains  **          00250
**              most of the tape copy/reading processing.   **          00251
**                                                          **          00252
**   TRTCSECT - The translate tables for Hex printing of    **          00253
**              tape records, and for ASCII translation.    **          00254
**                                                          **          00255
**   COPYMOPT - The separate routine which reads the PARM   **          00256
**              bits that have been set, and which prints   **          00257
**              a report in SYSPRINT showing the options    **          00258
**              that are in effect.                         **          00259
**                                                          **          00260
**   PARMCHEK - All the PARM and SYSIN input processing is  **          00261
**              done here.  PARM bits are passed back to    **          00262
**              COPYMODS in R1, the User Area is passed     **          00263
**              back to COPYMODS in R2.                     **          00264
**                                                          **          00265
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **          00266
**              program, this table contains all the option **          00267
**              bit meanings and their default settings.    **          00268
**                                                          **          00269
**   LABELCHK - Now a separate CSECT to check whether a     **          00270
**              record read by COPYMODS is part of a set    **          00271
**              of label records or not.                    **          00272
**                                                          **          00273
**   PRINTLBL - A separate CSECT to interpret all tape      **          00274
**              label contents in a report line.            **          00275
**                                                          **          00276
**   MSGCSECT - Contains all the texts of the messages      **          00277
**              used by the COPYMODS CSECT.  Addressed      **          00278
**              by two new macros:  MVFMS which does        **          00279
**              operations on fields in the messages, and   **          00280
**              PTMS, which prints a message to SYSPRINT.   **          00281
**                                                          **          00282
**              Two new macros, ADRSMS and DROPMS, now can  **          00283
**              be used to address this area, and save      **          00284
**              a lot of addressability space, because      **          00285
**              normal assembler instructions can be used   **          00286
**              in between them, and the addressability     **          00287
**              will not be redundantly repeated.  The      **          00288
**              new PTMSN macro is PTMS without the         **          00289
**              addressability built in, to put in between  **          00290
**              ADRSMS and DROPMS.                          **          00291
**                                                          **          00292
**   FOOTAGE  - Code to calculate footage on a tape, as     **          00293
**              though the data were on a 6250 bpi reel.    **          00294
**              This code came from Florida Power Company   **          00295
**              SS0104 Tapemap program.  Used by the        **          00296
**              FOOTAGE keyword.                            **          00297
**                                                          **          00298
**   VOL1STOR - This CSECT contains storage for the images  **          00299
**              of VOL1 labels for the 16 output tapes,     **          00300
**              and the input tape.  It is used for the     **          00301
**              KEEPVOL option, to allow COPYMODS to reuse  **          00302
**              an existing VOL1 label on an output tape,   **          00303
**              when the volser of the output tape is not   **          00304
**              known in advance.  A particular use of the  **          00305
**              KEEPVOL option would be if you are copying  **          00306
**              a tape to SL scratch tapes with existing    **          00307
**              volsers that are necessary to know about.   **          00308
**              For example, perhaps the output tapes are   **          00309
**              being managed by a Tape Management System.  **          00310
**                                                          **          00311
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **          00312
**  but they must be coordinated, and at the same level, so **          00313
**  to be safe, they should always be assembled together.   **          00314
**  The LABELCHK program has the same status.  It must be   **          00315
**  assembled together with the COPYMODS program.  Same     **          00316
**  with the PRINTLBL program and the FOOTAGE program.      **          00317
**                                                          **          00318
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **          00319
**                                                          **          00320
**  GENERAL OUTLINE OF PROGRAM CALLS                        **          00321
**  ------- ------- -- ------- -----                        **          00322
**                                                          **          00323
**  COPYMODS is the first program to get control.  The      **          00324
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **          00325
**  and the entry locations are stored in fullwords for     **          00326
**  later use.  Same for PRINTLBL and FOOTAGE entry points. **          00327
**  And also, the VOL1STOR entry point is saved.            **          00328
**                                                          **          00329
**  PARMCHEK is immediately called, and it opens //SYSIN    **          00330
**  if that ddname is present.  If //PARMREPT is present,   **          00331
**  it is also used by the PARMCHEK program.                **          00332
**                                                          **          00333
**  After PARMCHEK has returned all parm bit settings to    **          00334
**  COPYMODS and all user-quantities, the settings are      **          00335
**  examined by COPYMODS and inconsistent settings are      **          00336
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **          00337
**  has to be turned off, because only one of these can be  **          00338
**  done in one run.  These inconsistencies are all fixed,  **          00339
**  and then COPYMODS processing starts.                    **          00340
**                                                          **          00341
**  (To examine the effect of the COPYMODS parm correction, **          00342
**  code the CODEDPRM option to obtain a "before and after" **          00343
**  option comparison report.)                              **          00344
**                                                          **          00345
**  COPYMOPT is called to display all the options that have **          00346
**  been set, if the OPTION parm has been set.  This is     **          00347
**  done to //SYSPRINT.  If any adjustments of options have **          00348
**  been made, you can see the final result in the SYSPRINT **          00349
**  report that has been produced by COPYMOPT.              **          00350
**                                                          **          00351
**  A PARM of CODEDPRM causes COPYMOPT to be called twice,  **          00352
**  once with the corrected parm bits, and the second time, **          00353
**  using the saved original parm bits, as returned by the  **          00354
**  PARMCHEK program.                                       **          00355
**                                                          **          00356
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **          00357
**  and opened again by COPYMODS.  This allows SYSPRINT     **          00358
**  to be viewed under SDSF before the tapes are mounted,   **          00359
**  so you can see the OPTIONS report(s) there.             **          00360
**                                                          **          00361
**  A significant note is, that the PARMREPT contains the   **          00362
**  options as they have been set by the PARMCHEK program,  **          00363
**  with no alteration.  The COPYMOPT call, which produces  **          00364
**  the OPTIONS display in //SYSPRINT, occurs after the     **          00365
**  adjustments for inconsistent parm settings has been     **          00366
**  made by COPYMODS.  If you want to see the effect of     **          00367
**  these adjustments, code the CODEDPRM keyword to obtain  **          00368
**  a comparison report showing the original options as     **          00369
**  originally coded.                                       **          00370
**                                                          **          00371
**  After that, COPYMODS does its things, depending on the  **          00372
**  options that have been set.  Most of the processing is  **          00373
**  done in the COPYMODS csect, except for the HEXPRT       **          00374
**  option, where the translation tables are in the         **          00375
**  TRTCSECT csect.                                         **          00376
**                                                          **          00377
**  The LABELCHK program is called whenever an 80-byte      **          00378
**  record is read, to see whether that record is part of   **          00379
**  a set of tape labels.                                   **          00380
**                                                          **          00381
**  Whenver a label is to be interpreted to SYSPRINT, the   **          00382
**  PRINTLBL program is called.                             **          00383
**                                                          **          00384
**  If the FOOTAGE keyword is used, the FOOTAGE program     **          00385
**  is called at approximately the end of each file read    **          00386
**  from the input tape.  FOOTAGE is driven by the contents **          00387
**  of fields in a workarea, which, in the COPYMODS CSECT,  **          00388
**  is at label LABELTYP.  Most of the fields in this       **          00389
**  workarea are fed from the end-of-file routine, after    **          00390
**  label MARKFILE, and from the EXCP READs, near label     **          00391
**  INFROMIN, and the BYTESCOP field of number of bytes     **          00392
**  moved by the latest EXCP READ.                          **          00393
**                                                          **          00394
**  The KEEPVOL keyword implies the use of the SHOOVL       **          00395
**  (Show Output Volumes) keyword.  KEEPVOL allows the      **          00396
**  recognition of some of the previous contents of each    **          00397
**  output volume.  The reason for the KEEPVOL keyword is   **          00398
**  to allow the use of SL scratch tapes that are managed   **          00399
**  by a Tape Management System.  Their volsers are not     **          00400
**  known in advance, but we want to keep them, in the      **          00401
**  output tapes, after we have copied the contents of the  **          00402
**  input tape.  If SHOOVL is coded, or is turned on by     **          00403
**  KEEPVOL, COPYMODS tries to read 80 bytes from each open **          00404
**  output tape, and saves them in a slot in the VOL1STOR   **          00405
**  csect.  Then that open output tape is unconditionally   **          00406
**  rewound.  The LABELCHK program is called for this data, **          00407
**  to determine if it is a VOL1 label, and if it is either **          00408
**  EBCDIC, or ASCII type 3 or type 4.  Depending on what   **          00409
**  LABELCHK has discovered, flags are set for each output  **          00410
**  tape, to show if it has an existing VOL1 label, and     **          00411
**  what type it is.  SHOOVL alone will just display this   **          00412
**  data on the SYSPRINT report.                            **          00413
**                                                          **          00414
**  When KEEPVOL is coded in addition to SHOOVL, COPYMODS   **          00415
**  analyzes the (possible) VOL1 label of the input tape    **          00416
**  too, and generates "typing" flags, as it did for the    **          00417
**  open output tapes.  If the input tape is SL, and for    **          00418
**  each output tape whose typing flags match those of the  **          00419
**  input tape, COPYMODS uses the output tape's VOL1 label  **          00420
**  in the copied tape instead of the input tape's VOL1     **          00421
**  label.  All the other tapes get a "straight copy" as    **          00422
**  before.                                                 **          00423
**                                                          **          00424
**  The TESTOVOL routine is associated with the SHOOVL      **          00425
**  option.  Routines affected by KEEPVOL are:  CHANGVOL,   **          00426
**  READKVOL, and GETVTABL.                                 **          00427
**                                                          **          00428
**************************************************************          00429
**                                                          **          00430
**  NEW FEATURES ADDED BY SAM GOLOB:                        **          00431
**                                                          **          00432
**  (Also please see the individual Level nnn changes, as   **          00433
**   listed in this code, below, for more information.)     **          00434
**                                                          **          00435
**   It is recommended that you view the PARMTABL entries   **          00436
**   and look at the supplied #MANUAL member in the         **          00437
**   distribution pds, CBT File 229, for even more info.    **          00438
**                                                          **          00439
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **          00440
**                                                          **          00441
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **          00442
**                                                          **          00443
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **          00444
**       BE CORRECTLY COPIED.                               **          00445
**                                                          **          00446
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **          00447
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **          00448
**       FOUND ON THE INPUT TAPE.                           **          00449
**                                                          **          00450
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **          00451
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **          00452
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **          00453
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **          00454
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **          00455
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **          00456
**       MAIN SOURCE CODE.                                  **          00457
**                                                          **          00458
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **          00459
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **          00460
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **          00461
**       INVOKE THIS ACTION.                                **          00462
**                                                          **          00463
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **          00464
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **          00465
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **          00466
**                                                          **          00467
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **          00468
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **          00469
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **          00470
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **          00471
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **          00472
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **          00473
**                                                          **          00474
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **          00475
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **          00476
**                                                          **          00477
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **          00478
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **          00479
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **          00480
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **          00481
**       SERVICE.                                           **          00482
**                                                          **          00483
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **          00484
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **          00485
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **          00486
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **          00487
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **          00488
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **          00489
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **          00490
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **          00491
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **          00492
**                                                          **          00493
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **          00494
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **          00495
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **          00496
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **          00497
**                                                          **          00498
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **          00499
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **          00500
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **          00501
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **          00502
**                                                          **          00503
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **          00504
**       TAPEOWNER=xxxxxxxxxx                               **          00505
**       FILELIMIT=nnnn                                     **          00506
**       LABELIMIT=nnnn                                     **          00507
**       PRINTRCDS=nnnn                                     **          00508
**         or                                               **          00509
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **          00510
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **          00511
**                                                          **          00512
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **          00513
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **          00514
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **          00515
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **          00516
**                                                          **          00517
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **          00518
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **          00519
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **          00520
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **          00521
**       IN THE EXTERNAL LABEL DATASET.                     **          00522
**                                                          **          00523
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **          00524
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **          00525
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **          00526
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **          00527
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **          00528
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **          00529
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **          00530
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **          00531
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **          00532
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **          00533
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **          00534
**                                                          **          00535
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **          00536
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **          00537
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **          00538
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **          00539
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **          00540
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **          00541
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **          00542
**       DATA FILE HAS BEEN WRITTEN.                        **          00543
**                                                          **          00544
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **          00545
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **          00546
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **          00547
**       EXTERNAL LABEL DATASET.                            **          00548
**                                                          **          00549
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **          00550
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **          00551
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **          00552
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **          00553
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **          00554
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **          00555
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **          00556
**       THE HDR2.                                          **          00557
**                                                          **          00558
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **          00559
**       INPUT TAPE.  USE A PARM OF INITVOLS.  ASCII TAPES  **          00560
**       ARE INITTED WITH A PARM OF EITHER INASC3 OR        **          00561
**       INASC4, FOR ASCII LEVEL 3 AND ASCII LEVEL 4        **          00562
**       RESPECTIVELY.  A PARM OF INASCII DEFAULTS TO       **          00563
**       ASCII LEVEL 3.                                     **          00564
**                                                          **          00565
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **          00566
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **          00567
**       IN A SYSIN CARD.  14 CHARACTER TAPE OWNERS ARE     **          00568
**       SUPPORTED FOR ASCII TAPES.  IBM SL TAPES HAVE      **          00569
**       10 CHARACTERS IN THE TAPE OWNER FIELD.             **          00570
**                                                          **          00571
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **          00572
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **          00573
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **          00574
**       IS INTERPRETED AS SL FILES, AND MULTIPLIED BY 3.   **          00575
**       IF NOT, THEN IT IS INTERPRETED AS NL.  SL          **          00576
**       INTERPRETATION OF FILE NUMBERS CAN BE FORCED,      **          00577
**       USING THE SLLIM PARM KEYWORD.  NL INTERPRETATION   **          00578
**       IS FORCED USING THE NLLIM PARM KEYWORD.            **          00579
**                                                          **          00580
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **          00581
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **          00582
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **          00583
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **          00584
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **          00585
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **          00586
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **          00587
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **          00588
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **          00589
**       BYTE TOTALS COMING FROM DATA FILES.                **          00590
**                                                          **          00591
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **          00592
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **          00593
**       TO PRINT THEM.)                                    **          00594
**                                                          **          00595
**       IF YOU ARE CONFUSED THAT THE OPTION REPORT DOES    **          00596
**       NOT SEEM TO REFLECT THE OPTION KEYWORDS YOU ARE    **          00597
**       CODING IN YOUR JCL, PLEASE BE AWARE THAT COPYMODS  **          00598
**       DOES SOME OPTION ADJUSTMENTS TO RESOLVE APPARENT   **          00599
**       INCONSISTENCIES WITH THE PARM SETTINGS.  TO GET    **          00600
**       A "BEFORE AND AFTER" REPORT FOR THIS ACTION, CODE  **          00601
**       THE "CODEDPRM" PARM KEYWORD.                       **          00602
**                                                          **          00603
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **          00604
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **          00605
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **          00606
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).  IF A TAPE      **          00607
**       FILE (EBCDIC SL TAPES ONLY) HAS MORE THAN 1        **          00608
**       MILLION BLOCKS IN IT, THEN THIS FIELD IS USED.     **          00609
**       OTHERWISE IT IS BLANKS.                            **          00610
**                                                          **          00611
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **          00612
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **          00613
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **          00614
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **          00615
**       DATA BLOCKS ON THE TAPE.                           **          00616
**                                                          **          00617
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **          00618
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **          00619
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **          00620
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **          00621
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **          00622
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **          00623
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **          00624
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **          00625
**       THESE WILL STILL BE CORRECTLY STRIPPED OFF.  IF    **          00626
**       FILE LIMITING IS IN EFFECT, THEN THE INPUT TAPE    **          00627
**       IS ASSUMED TO BE SL, AND THE NUMBER CODED IN THE   **          00628
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **          00629
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **          00630
**       INPUT TAPE.                                        **          00631
**                                                          **          00632
**       FOR PARM=STRIP OPERATIONS, COPYMODS USES THE       **          00633
**       LABELCHK ROUTINE TO DETERMINE IF A TAPE FILE IS    **          00634
**       REALLY A LABEL, SO IT WILL STRIP OFF A LABEL FILE  **          00635
**       WHEREVER IT OCCURS.  THIS IS NOT LIKE THE COPYSLNL **          00636
**       PROGRAM, WHICH ASSUMES THAT EACH DATA FILE IS      **          00637
**       SANDWICHED BETWEEN TWO LABEL FILES, AND WHICH      **          00638
**       DOES THE STRIPPING BY "COUNTING" AND NOT BY        **          00639
**       "FEELING".                                         **          00640
**                                                          **          00641
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **          00642
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **          00643
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **          00644
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **          00645
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **          00646
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **          00647
**                                                          **          00648
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **          00649
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **          00650
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **          00651
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **          00652
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **          00653
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **          00654
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **          00655
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **          00656
**                                                          **          00657
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **          00658
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **          00659
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **          00660
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **          00661
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **          00662
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **          00663
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **          00664
**                                                          **          00665
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **          00666
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **          00667
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **          00668
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **          00669
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **          00670
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **          00671
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **          00672
**                                                          **          00673
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **          00674
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **          00675
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **          00676
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **          00677
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **          00678
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **          00679
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **          00680
**                                                          **          00681
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **          00682
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **          00683
**       THESE INDICATORS (TURNED OFF) ARE:                 **          00684
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **          00685
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **          00686
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **          00687
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **          00688
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **          00689
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **          00690
**                                                          **          00691
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **          00692
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **          00693
**       COMPLETELY TURN THEM OFF AT THE TAPE LABEL LEVEL.  **          00694
**       THE NOSECOFF KEYWORD NULLIFIES THE EFFECT OF THE   **          00695
**       SECOFF KEYWORD.                                    **          00696
**                                                          **          00697
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **          00698
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **          00699
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **          00700
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **          00701
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **          00702
**       MORE EXTENSIVE "LTM SERVICE" HAS BEEN BUILT INTO   **          00703
**       THIS PROGRAM.                                      **          00704
**                                                          **          00705
**  31.  COPYMODS CAN DISPLAY 6250 BPI FOOTAGES FOR THE     **          00706
**       FILES ON THE TAPE, USING THE FOOTAGE KEYWORD.      **          00707
**       FOOTAGE CALCULATIONS FOR EACH FILE, AS WELL AS     **          00708
**       FOOTAGE FOR THE ENTIRE TAPE, UP TO THE CURRENT     **          00709
**       FILE, ARE DISPLAYED.                               **          00710
**                                                          **          00711
**  32.  COPYMODS WILL DISPLAY MINIMUM AND MAXIMUM BLOCK    **          00712
**       SIZES FOR EACH TAPE FILE READ, WHEN THE MINMAX     **          00713
**       OPTION IS CODED.                                   **          00714
**                                                          **          00715
**  33.  COPYMODS CAN OPTIONALLY SHOW THE SIZE OF EACH      **          00716
**       TAPE DATA BLOCK (TECHNICALLY CALLED A "RECORD")    **          00717
**       ON THE TAPE, USING THE RECSIZE OPTION.  AS CODED   **          00718
**       CURRENTLY, RECSIZE CAN PRODUCE A LOT OF SYSPRINT   **          00719
**       OUTPUT, SINCE IT PRODUCES ONE LINE PER TAPE DATA   **          00720
**       BLOCK.  THE RECSIZE OPTION DISPLAYS DETAILS,       **          00721
**       WHICH THE MINMAX OPTION SUMMARIZES.  IF RECSIZE    **          00722
**       IS CODED, THEN THE MINMAX OPTION IS FORCED ON.     **          00723
**                                                          **          00724
**  34.  THE KEEPVOL OPTION WILL ALLOW THE USE OF THE VOL1  **          00725
**       LABEL FROM A TARGET TAPE, IF THE VOL1 OF THE       **          00726
**       TARGET TAPE EXISTS, AND IF IT IS THE SAME TYPE     **          00727
**       AS THE VOL1 OF THE COPIED TAPE.  THIS ALLOWS FOR   **          00728
**       THE MOUNTING OF A SCRATCH TAPE, WHERE YOU DON'T    **          00729
**       KNOW THE VOLSER OF THE TARGET TAPE AHEAD OF TIME.  **          00730
**       THE KEEPVOL OPTION WILL ALLOW THE COPIED VOLUME    **          00731
**       TO KEEP THE SAME VOLSER AS THE SCRATCH TAPE, SO    **          00732
**       THAT A TAPE MANAGEMENT SYSTEM CAN KEEP TRACK OF    **          00733
**       IT.  EACH TARGET TAPE WILL GET DIFFERENT ACTION    **          00734
**       USING KEEPVOL, DEPENDING ON WHAT WAS ON IT BEFORE. **          00735
**       IF THE VOL1 LABEL ON THE TARGET TAPE IS NOT THE    **          00736
**       SAME TYPE AS THE SOURCE TAPE, OR IF THE TARGET     **          00737
**       TAPE IS NON-LABELED, THEN A "STRAIGHT COPY" IS     **          00738
**       DONE TO THAT PARTICULAR OUTPUT TAPE, AS BEFORE.    **          00739
**                                                          **          00740
**  35.  A COMBINATION OF THE OPTIONS "READ" AND "SHOOVL"   **          00741
**       (SHOW OUTPUT VOLUMES) WILL DO A "DRY RUN" TO SHOW  **          00742
**       YOU THE FUTURE RESULTS FROM A "KEEPVOL" RUN.       **          00743
**       "READ" WILL READ THE INPUT TAPE IN ITS ENTIRETY,   **          00744
**       AND "SHOOVL" WILL SHOW YOU THE FIRST 80 BYTES OF   **          00745
**       EACH OF THE OUTPUT TAPES.  NO ACTUAL COPY OF THE   **          00746
**       INPUT TAPE WILL BE DONE.  "KEEPVOL" IMPLIES        **          00747
**       "SHOOVL", BUT A TAPE COPY WILL ACTUALLY BE DONE.   **          00748
**                                                          **          00749
**************************************************************          00750
         EJECT                                                          00751
**************************************************************          00752
**  CHANGE LOG:                                             **          00753
**                                                          **          00754
** LEVEL 003                                                **          00755
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS                * **          00756
**                                                          **          00757
** LEVEL 004                                                **          00758
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER           * **          00759
**             A HEADER LABEL.  THIS MEANS AN SL          * **          00760
**             FILE WITHOUT ANY DATA IN IT.  AND          * **          00761
**             IF THIS IS THE CASE, DON'T STOP            * **          00762
**             COPYING FILES.                             * **          00763
**                                                          **          00764
** LEVEL 005                                                **          00765
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE             * **          00766
**             R12,R11.                                   * **          00767
**                                                          **          00768
** LEVEL 006                                                **          00769
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP           * **          00770
**             TO 16 OUTPUT TAPES FROM OUT1 TO            * **          00771
**             OUT16.                                     * **          00772
**                                                          **          00773
** LEVEL 007 AND 008                                        **          00774
**  03/14/00 - CLEANED UP SPELLING ON ERROR               * **          00775
**             MESSAGES AND FIXED DOCUMENTATION.          * **          00776
**             ADDED EYECATCHERS COSMETICALLY.            * **          00777
**                                                          **          00778
** LEVEL 009                                                **          00779
**  03/21/00 - STOP AFTER INITTED MVS TAPE                * **          00780
**                                                          **          00781
** LEVEL 010                                                **          00782
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS          * **          00783
**             FOR BLOCK SIZES FROM 32K TO 64K.           * **          00784
**                                                          **          00785
**             I MADE AN ATTEMPT TO COPY DOS/VSE          * **          00786
**             TAPES THAT HAVE LEADING TAPE               * **          00787
**             MARKS.  THERE IS A CHOICE TO               * **          00788
**             EITHER COPY ALL THE LEADING                * **          00789
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO         * **          00790
**             DISCARD THEM ALL.  YOU USE A PARM          * **          00791
**             OF LTMSKIP TO DISCARD LEADING              * **          00792
**             TAPEMARKS, AND ANY OTHER PARM, OR          * **          00793
**             NO PARM, WILL CAUSE THE PROGRAM TO         * **          00794
**             COPY THEM TO THE OUTPUT TAPES.             * **          00795
**                                                          **          00796
** LEVEL 011                                                **          00797
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE          * **          00798
**             BY ENDING THE JOB NORMALLY AFTER           * **          00799
**             ONE TAPEMARK.                              * **          00800
**                                                        * **          00801
**             IF VOL1 LABEL IS DETECTED, THEN            * **          00802
**             PUT OUT A MESSAGE SAYING SO, AND           * **          00803
**             INDICATING THE VOLSER THAT WAS             * **          00804
**             FOUND.  THIS PROGRAM WAS WRITTEN           * **          00805
**             ORIGINALLY WITH THE INTENT OF              * **          00806
**             HANDLING NL TAPES, SO THAT THE             * **          00807
**             CONDITIONS WHICH RESULT FROM               * **          00808
**             HAVING SL TAPES, HAD TO BE                 * **          00809
**             ACCOUNTED FOR LATER.                       * **          00810
**                                                          **          00811
** LEVEL 012                                                **          00812
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2               * **          00813
**             HAVING ONLY ONE TAPE MARK AFTER              **          00814
**             THEM.                                        **          00815
**                                                          **          00816
** LEVEL 013                                                **          00817
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD            * **          00818
**             LABEL TYPES, AND THE SETTING OF              **          00819
**             FLAGS TO INDICATE EACH TYPE.                 **          00820
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **          00821
**             MOVE NON-LABEL-RELATED FLAGS OUT             **          00822
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **          00823
**             EASY PRINTING OF LABEL CONTENTS,             **          00824
**             BUT NO EXTRA PRINTING IS DONE AT             **          00825
**             THIS LEVEL.                                  **          00826
**                                                          **          00827
** LEVEL 014                                                **          00828
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN              * **          00829
**             PARM SCANNER THAT IS EASY TO                 **          00830
**             MODIFY, AND TO SUPPLY SYNONYMS               **          00831
**             FOR THE PARMS.  ADDED SUPPORT,               **          00832
**             VIA THE LBLINFO PARM, TO PRINT               **          00833
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **          00834
**             EOV2 LABEL INFORMATION, IF IT IS             **          00835
**             FOUND ON THE INPUT TAPE.  THAT IS,           **          00836
**             IF THE INPUT TAPE IS SL.                     **          00837
**                                                          **          00838
**             FOR A LIST OF PERMISSIBLE PARMS,             **          00839
**             SEE LABEL PARMTABL.                          **          00840
**                                                          **          00841
** LEVEL 015                                                **          00842
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY          * **          00843
**             TO TURN OFF A PARM FLAG AS WELL AS           **          00844
**             THE ABILITY TO TURN IT ON. INCREASED         **          00845
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **          00846
**             BYTE.                                        **          00847
**                                                          **          00848
** LEVEL 016                                                **          00849
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY          * **          00850
**             TO SET ANY PARM SETTING AS A                 **          00851
**             DEFAULT.  A SETTING FOR A DEFAULT            **          00852
**             ENTRY THAT IS LATER IN THE TABLE,            **          00853
**             WILL OVERRIDE A SETTING FOR A                **          00854
**             DEFAULT THAT WAS SET EARLIER IN THE          **          00855
**             TABLE.  SETTING A PARM EXPLICITLY            **          00856
**             IN THE JCL, WILL OVERRIDE ANY                **          00857
**             DEFAULT SETTING FOR THAT PARM.               **          00858
**                                                          **          00859
** LEVEL 017                                                **          00860
**  05/11/00 - USED THE PARM SCANNER TO MAKE A            * **          00861
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **          00862
**             KINDS OF TAPE LABELS.  IF YOU WANT           **          00863
**             ALL OF THEM, YOU JUST HAVE A PARM            **          00864
**             THAT THROWS ALL OF THE FLAGS.  ALL           **          00865
**             OF THIS IS CODED IN PARMTABL AND             **          00866
**             THE FLAGS ARE USED IN PRTXXX1 AND            **          00867
**             PRTXXX2.                                     **          00868
**                                                          **          00869
** LEVEL 018                                                **          00870
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE          * **          00871
**             VOLSER OF THE COPIED TAPES, TO               **          00872
**             MATCH THE VOLSER INDICATED IN THE            **          00873
**             OUTXX DD NAMES.  THIS IS DONE WITH           **          00874
**             THE CHGVOL PARM KEYWORD.  THIS               **          00875
**             ACTION ONLY OCCURS IF THE INPUT              **          00876
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **          00877
**             DETECTED.  THE COPIED VOL1 LABEL             **          00878
**             IS ALTERED BEFORE THE WRITE.                 **          00879
**                                                          **          00880
** LEVEL 019                                                **          00881
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1            * **          00882
**             AND EOV2 LABELS THAT ARE IN THE              **          00883
**             MIDDLE OF A TAPE.  OF COURSE THIS            **          00884
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **          00885
**             CAN HAPPEN WHEN YOU COPY FILES               **          00886
**             WITH THE COPYFILE PROGRAM, FROM              **          00887
**             THE END OF ONE TAPE, TO THE                  **          00888
**             BEGINNING OR THE MIDDLE OF                   **          00889
**             ANOTHER.  COPYFILE HAS NOT BEEN              **          00890
**             FIXED AS YET NOT TO DO THIS, BUT IT          **          00891
**             COPIES THE EOV LABELS AS IS.  THIS           **          00892
**             NEW OPTION IS CALLED EOVCHG OR               **          00893
**             EOV2EOF; THE EOV LABELS ARE                  **          00894
**             CHANGED (IN THE COPIED TAPES) TO             **          00895
**             EOF, AND A MESSAGE IS WRITTEN THAT           **          00896
**             REPORTS THIS FACT.                           **          00897
**                                                          **          00898
** LEVEL 020                                                **          00899
**  06/29/00 - ADDED THE PARM OF READ OR READONLY         * **          00900
**             TO ALLOW A RUN OF COPYMODS THAT              **          00901
**             JUST READS THE INPUT TAPE, AND DOES          **          00902
**             NOT MAKE COPIES.                             **          00903
**                                                          **          00904
** LEVEL 021                                                **          00905
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY             * **          00906
**             IEHINITTED TAPES.                            **          00907
**                                                          **          00908
** LEVEL 022                                                **          00909
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD         * **          00910
**             LABELS FROM A TAPE, TO AN FB-80              **          00911
**             OUTPUT FILE.  PARM IS LABLDUMP.              **          00912
**                                                          **          00913
** LEVEL 023                                              * **          00914
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **          00915
**             ONLY IMPLEMENTATION SO FAR IS TO             **          00916
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **          00917
**             SAME VALUE, BUT NOT NECESSARILY TO           **          00918
**             WHAT IS IN THE OUTX  DD CARD.  IN            **          00919
**             ORDER TO USE THE FACILITY, YOU HAVE          **          00920
**             TO CODE                                      **          00921
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **          00922
**             OF THE SYSIN CARD FILE.  IF THERE            **          00923
**             ARE NO VALID OUTVOLALL= CARDS IN             **          00924
**             SYSIN, THEN THE EFFECT IS THE SAME           **          00925
**             AS CODING CHGVOL.                            **          00926
**                                                          **          00927
**             FIXED LABEL DUMP OPTION SO THAT THE          **          00928
**             DUMPED LABELS HAVE CONTROL CARDS             **          00929
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **          00930
**             FUNCTION IN LEVEL 24 NEEDS THESE             **          00931
**             CONTROL CARDS.                               **          00932
**                                                          **          00933
** LEVEL 024                                              * **          00934
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **          00935
**             OUTPUT COPIES FROM NL INPUT AND A            **          00936
**             SET OF LABELS CREATED BY LABLDUMP.           **          00937
**             CHANGED THE DCB NAMES AND DD CARDS           **          00938
**             AND OPTION NAMES FOR LABEL DUMP AND          **          00939
**             RESTORE.                                     **          00940
**                                                          **          00941
**             CHANGED PROGRAM INITIALIZATION TO            **          00942
**             A STANDARD FORM.  GOT RID OF PRIME           **          00943
**             AND TERME MACROS.  HAVE 5 BASE               **          00944
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **          00945
**                                                          **          00946
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **          00947
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **          00948
**             LABELS ON AN SL TAPE, AND WON'T              **          00949
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **          00950
**             TAPE IS SL, ACCIDENTALLY.                    **          00951
**                                                          **          00952
** LEVEL 025                                              * **          00953
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **          00954
**             SYSIN AND SEARCH FOR ALL PARMS.              **          00955
**                                                          **          00956
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **          00957
**             BE USED.                                     **          00958
**                                                          **          00959
**             ANY CARD IN SYSIN WHICH IS NOT A             **          00960
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **          00961
**                TAPEOWNER=xxxxxxxxxx                      **          00962
**                FILELIMIT=nnnn                            **          00963
**                LABELIMIT=nnnn                            **          00964
**                PRINTRCDS=nnnn                            **          00965
**                  or                                      **          00966
**                OUTVOLALL=volser ,                        **          00967
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **          00968
**             AND ANY PARM THAT IS CODED IN THE            **          00969
**             PARM TABLE, CAN BE CODED IN SYSIN,           **          00970
**             AND IT WILL OVERRIDE THE PARM IN             **          00971
**             THE EXEC CARD (SINCE SYSIN IS                **          00972
**             SCANNED LATER IN THE PROCESSING).            **          00973
**                                                          **          00974
**             INCLUDED A BLOCK COUNT CORRECTION AS         **          00975
**             DEFAULT, WHEN WRITING STANDARD LABELS        **          00976
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **          00977
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **          00978
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **          00979
**                                                          **          00980
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **          00981
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **          00982
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **          00983
**             THE CONTENTS OF STANDARD LABELS FOUND        **          00984
**             WHEN COPYING AN INPUT TAPE.                  **          00985
**                                                          **          00986
** LEVEL 026                                              * **          00987
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **          00988
**             RESPECT CHGVOL AND OUTVOLALL= .              **          00989
**                                                          **          00990
** LEVEL 027                                              * **          00991
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **          00992
**             BE ABLE TO DO EOV2EOF PROCESSING             **          00993
**                                                          **          00994
** LEVEL 028                                              * **          00995
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **          00996
**             STANDARD USER LABEL SUPPORT.                 **          00997
**                                                          **          00998
** LEVEL 029                                              * **          00999
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **          01000
**             STANDARD USER LABELS.                        **          01001
**                                                          **          01002
** LEVEL 030                                              * **          01003
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **          01004
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **          01005
**             OUTPUT TAPES, DURING THE COPY.               **          01006
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **          01007
**                                                          **          01008
**             FIXED THE EYECATCHERS A BIT.                 **          01009
**                                                          **          01010
**             AGAIN FIXED COPY OF INITTED TAPES.           **          01011
**                                                          **          01012
** LEVEL 031                                              * **          01013
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **          01014
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **          01015
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **          01016
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **          01017
**                                                          **          01018
** LEVEL 032                                              * **          01019
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **          01020
**             LABADDIN PROCESSING WHEN THERE ARE           **          01021
**             MORE LABELS IN THE EXTERNAL LABEL            **          01022
**             DATASET, THAN THERE ARE NL FILES             **          01023
**             IN THE INPUT TAPE.  DEFAULT IS TO            **          01024
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **          01025
**             SAYS TO STOP AT THE END OF NL FILES          **          01026
**             AND NOT WRITE NULL SL FILES TO               **          01027
**             CORRESPOND TO THE EXTRA EXTERNAL             **          01028
**             LABELS.                                      **          01029
**                                                          **          01030
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **          01031
**             OF WRITING AN EXTRA HEADER LABEL SET,        **          01032
**             AND THEN BACKING OVER IT AND CLOSING.        **          01033
**                                                          **          01034
** LEVEL 033                                              * **          01035
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **          01036
**             PROCESSING WHEN THE LAST LABEL SET           **          01037
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **          01038
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **          01039
**             A HDR2 LABEL IN THE LAST LABEL SET,          **          01040
**             AND COPYMODS (WITH LBLFIX ON) WILL           **          01041
**             ACT AS IF AN ENDOFLABELHEADER CARD           **          01042
**             WERE THERE (SO IT WRITES A TAPEMARK          **          01043
**             AND THE DATA AND A TAPEMARK), AND IT         **          01044
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **          01045
**             PLUS THE MEASURED BLOCK COUNTS FROM          **          01046
**             THE DATA FILE.  AN EOF2 IS COPIED            **          01047
**             FROM THE EXISTING HDR2 AND EOF IS            **          01048
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **          01049
**             THE END.                                     **          01050
**                                                          **          01051
** LEVEL 034                                              * **          01052
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **          01053
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **          01054
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **          01055
**             THE CLOSE.  THIS LETS THE CLOSE DO           **          01056
**             THE REWIND, AND LEAVES THE WRITTEN           **          01057
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **          01058
**             THAT WAS INCOMPLETELY WRITTEN IS             **          01059
**             NOT ERASED.                                  **          01060
**                                                          **          01061
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **          01062
**             CONDITION IS FLAGGED WITH A PROPER           **          01063
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **          01064
**             FOR THAT DRIVE IS BYPASSED.                  **          01065
**                                                          **          01066
**             THIS PROBLEM HAS EXISTED SINCE THE           **          01067
**             FIRST VERSION OF THIS PROGRAM.               **          01068
**                                                          **          01069
**             CAREFUL TO FLAG ALL THE EXTRA DD             **          01070
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **          01071
**             THESE ARE THE OPENDFLG SETTINGS.             **          01072
**                                                          **          01073
** LEVEL 035                                              * **          01074
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **          01075
**             TAPES, BY NOT REUSING THE WRITE              **          01076
**             IOB WITHOUT REFRESHING THE PARTS             **          01077
**             THAT ARE USED BY IOS.  THIS IS THE           **          01078
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **          01079
**                                                          **          01080
**             LABLDUMP OF AN IEHINITTED TAPE               **          01081
**             PRODUCES AN ENDOFLABELHEADERINIT             **          01082
**             CARD, IN ANTICIPATION OF CREATING            **          01083
**             A TAPE INITIALIZATION ROUTINE FROM           **          01084
**             EXTERNAL LABELS.  (INITVOLS IN THE           **          01085
**             NEXT LEVEL, IS BETTER.)                      **          01086
**                                                          **          01087
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **          01088
**                                                          **          01089
** LEVEL 036                                              * **          01090
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **          01091
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **          01092
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **          01093
**             ALSO CHANGE TAPE OWNER INFORMATION           **          01094
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **          01095
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **          01096
**                                                          **          01097
**             TO INIT TAPES WITH NO INPUT TAPE,            **          01098
**             USE A PARM OF INITVOLS.                      **          01099
**                                                          **          01100
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **          01101
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **          01102
**                                                          **          01103
**             CONSOLIDATED CHGVOL CODE INTO A              **          01104
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **          01105
**                                                          **          01106
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **          01107
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **          01108
**             STEPPING ON EACH OTHER.                      **          01109
**                                                          **          01110
** LEVEL 037                                              * **          01111
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **          01112
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **          01113
**             NL TAPES ON THE INPUT TAPE.  IF THE          **          01114
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **          01115
**             IS MULTIPLIED BY 3, AND THE BIGGER           **          01116
**             VALUE IS USED.                               **          01117
**                                                          **          01118
**             COPYMODS WILL ONLY COPY INPUT TAPE           **          01119
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **          01120
**             VALUE, IF THERE IS ONE.                      **          01121
**                                                          **          01122
**             INTERNALLY, THE FILELIMIT= KEYWORD           **          01123
**             SETS THE PARM VALUE OF LIMFILE OR            **          01124
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **          01125
**             THE PROGRAM ACTION.                          **          01126
**                                                          **          01127
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **          01128
**             PROGRAM COUNTS BYTES READ FROM THE           **          01129
**             INPUT TAPE FILES, AND TOTALS THEM AT         **          01130
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **          01131
**             THIS ACTION.                                 **          01132
**                                                          **          01133
** LEVEL 038                                              * **          01134
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **          01135
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **          01136
**             RUNNING BYTE TOTALS AS WELL AS THE           **          01137
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **          01138
**             FILES.                                       **          01139
**                                                          **          01140
** LEVEL 039                                              * **          01141
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **          01142
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **          01143
**             THEREFORE WE HAVE PARMFLG1 THRU              **          01144
**             PARMFLG5 TO USE AS OPTION BYTES.             **          01145
**                                                          **          01146
** LEVEL 040                                              * **          01147
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **          01148
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **          01149
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **          01150
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **          01151
**             AND I WANT TO BE ABLE TO MATCH THEIR         **          01152
**             COUNT, SO A USER WILL BE ABLE TO             **          01153
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **          01154
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **          01155
**                                                          **          01156
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **          01157
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **          01158
**             NOT INITTING TAPES, YOU DON'T GET AN         **          01159
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **          01160
**             WHAT TO DO.                                  **          01161
**                                                          **          01162
** LEVEL 041                                              * **          01163
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **          01164
**             OF LABEL SETS IN THE LABADDIN FILE           **          01165
**             THAT COPYMODS WILL PROCESS.  EVEN            **          01166
**             IF THE LABADDIN FILE CONTAINS MANY           **          01167
**             LABEL SETS, THE NUMBER PROCESSED WILL        **          01168
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **          01169
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **          01170
**                                                          **          01171
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **          01172
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **          01173
**             THE LABADDIN FILE, AND CONSIDERS THE         **          01174
**             FILE TO END AFTER NNN OF THEM.               **          01175
**                                                          **          01176
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **          01177
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **          01178
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **          01179
**             THIS CHOPS PROCESSING OFF TOO SOON           **          01180
**             WHEN EOV LABELS ARE PRESENT.                 **          01181
**                                                          **          01182
** LEVEL 042                                              * **          01183
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **          01184
**             BAL R7, AND USED R6 AS SIXTH BASE            **          01185
**             REGISTER.                                    **          01186
**                                                          **          01187
** LEVEL 043                                              * **          01188
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **          01189
**             "OPTION" PARAMETER.  CALL IS TO A            **          01190
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **          01191
**             PROGRAM COPYMOPT SHOULD BE BATCH             **          01192
**             ASSEMBLED AND LINKEDITED WITH                **          01193
**             THE COPYMODS PROGRAM.                        **          01194
**                                                          **          01195
**             CHANGED THE WORDING OF SOME OF THE           **          01196
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **          01197
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **          01198
**                                                          **          01199
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **          01200
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **          01201
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **          01202
**             LABADDIN WAS IN EFFECT.                      **          01203
**                                                          **          01204
** LEVEL 044                                              * **          01205
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **          01206
**                                                          **          01207
** LEVEL 045                                              * **          01208
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **          01209
**             COMPLETION OF THE COPY. SUPPWTO.             **          01210
**                                                          **          01211
** LEVEL 046                                              * **          01212
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **          01213
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **          01214
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **          01215
**             TO HI ORDER FIELD WHEN DOING BLOCK           **          01216
**             COUNT CORRECTION.                            **          01217
**                                                          **          01218
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **          01219
**                                                          **          01220
** LEVEL 047                                              * **          01221
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **          01222
**             DUMP OF TAPES WHICH CONTAIN LARGE            **          01223
**             NUMBERS OF DATA RECORDS.  IF THE             **          01224
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **          01225
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **          01226
**                                                          **          01227
** LEVEL 048                                              * **          01228
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **          01229
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **          01230
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **          01231
**             IS THERE IN THE JCL, THEN OPEN IT.           **          01232
**                                                          **          01233
** LEVEL 049                                              * **          01234
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **          01235
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **          01236
**             BYTE COUNTS AND DATA BYTE COUNTS,            **          01237
**             INSTEAD OF TOTAL BYTE COUNTS.                **          01238
**                                                          **          01239
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE           * **          01240
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **          01241
**             EACH LABEL.  IT DOES NOT MATTER              **          01242
**             WHERE THE LABELS ARE, IN THE INPUT           **          01243
**             TAPE--THEY WILL BE STRIPPED OFF THE          **          01244
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **          01245
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **          01246
**             NUMBER IS MULTIPLIED BY 3, AND THE           **          01247
**             COPYING IS CUT OFF AFTER 3*nnn,              **          01248
**             TREATED AS BLP, ON THE INPUT TAPE.           **          01249
**                                                          **          01250
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **          01251
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **          01252
**             COPYMODS TRIES TO DETECT WHETHER THE         **          01253
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **          01254
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **          01255
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **          01256
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **          01257
**             WE CAN NOW FORCE THE nnn TO BE               **          01258
**             INTERPRETED AS NL USING THE NLLIM            **          01259
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **          01260
**             INTERPRETED AS 3*nnn USING THE SLLIM         **          01261
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **          01262
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **          01263
**             OTHER KEYWORD IS ALSO CODED.                 **          01264
**                                                          **          01265
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **          01266
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **          01267
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **          01268
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **          01269
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **          01270
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **          01271
**             DURING THE WRITE OF THE TAPE MARK.           **          01272
**                                                          **          01273
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **          01274
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **          01275
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **          01276
**             BEFORE ISSUING ABEND 069.                    **          01277
**                                                          **          01278
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **          01279
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **          01280
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **          01281
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **          01282
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **          01283
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **          01284
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **          01285
**             SYSPRINT DATASET.                            **          01286
**                                                          **          01287
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **          01288
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **          01289
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **          01290
**                                                          **          01291
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **          01292
**             OF THE MAIN CSECT.                           **          01293
**                                                          **          01294
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **          01295
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **          01296
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **          01297
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **          01298
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **          01299
**             PARM SCAN IN DETAIL.                         **          01300
**                                                          **          01301
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **          01302
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **          01303
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **          01304
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **          01305
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **          01306
**                                                          **          01307
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **          01308
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **          01309
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **          01310
**             PROGRAM AND NOT BY COPYMODS.                 **          01311
**                                                          **          01312
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **          01313
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **          01314
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **          01315
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **          01316
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **          01317
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **          01318
**             COPIES THIS DATA INTO THE CORRESPONDING      **          01319
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **          01320
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **          01321
**             PROGRAM.                                     **          01322
**                                                          **          01323
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **          01324
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **          01325
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **          01326
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **          01327
**             USER FIELD AREA.                             **          01328
**                                                          **          01329
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **          01330
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **          01331
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **          01332
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **          01333
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **          01334
**             TAPES--TO FIGURE OUT HOW SHORT....           **          01335
**                                                          **          01336
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **          01337
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **          01338
**             POSSIBLE.                                    **          01339
**                                                          **          01340
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **          01341
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **          01342
**             IN ERROR.                                    **          01343
**                                                          **          01344
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **          01345
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **          01346
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **          01347
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **          01348
**                                                          **          01349
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **          01350
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **          01351
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **          01352
**                                                          **          01353
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **          01354
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **          01355
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **          01356
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **          01357
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **          01358
**             PROGRAM.                                     **          01359
**                                                          **          01360
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **          01361
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **          01362
**                                                          **          01363
** LEVEL 062 - FIX DOC A BIT MORE.                          **          01364
**             TEN PARM BITS INSTEAD OF FIVE.               **          01365
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **          01366
**                                                          **          01367
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **          01368
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **          01369
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **          01370
**             OCCURRED, WITHOUT ISSUING A WTOR.            **          01371
**                                                          **          01372
** LEVEL 064 - Return Code adjustments.                     **          01373
**                                                          **          01374
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **          01375
**             processing.                                  **          01376
**             HEXPRT now works for INITVOLS.               **          01377
**             HEXPRT now prints the external labels in a   **          01378
**             LABADDIN operation.                          **          01379
**             TAPEOWNER= is now honored for an INITVOLS    **          01380
**             operation (this fixes a bug).                **          01381
**             Number for FILELIMIT=nnn is now filled in,   **          01382
**             in the message, when the EBCDIC value        **          01383
**             exists.                                      **          01384
**             Fix another bug--Tape Owner not altered--    **          01385
**             now use the value of tape owner passed from  **          01386
**             the PARMCHEK program.                        **          01387
**                                                          **          01388
** LEVEL 066 - Cosmetic changes.                            **          01389
**             Save original PARM pointer in COPYMODS       **          01390
**             csect itself.  (It got lost after PARMCHEK   **          01391
**             call.)                                       **          01392
**                                                          **          01393
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **          01394
**             (ISO/ANSI) Level 3 or Level 4, with the      **          01395
**             INASC3 or INASC4 keywords.  You can control  **          01396
**             if the HEXPRT is interpreted in EBCDIC or    **          01397
**             ASCII using the ASCII or the EBCDIC          **          01398
**             keywords.  For an ASCII tape init, ASCII     **          01399
**             print interpretation is turned on by         **          01400
**             default.  If you are initting an ASCII       **          01401
**             tape using the INASCII keyword, a Level 3    **          01402
**             ASCII tape will be created.                  **          01403
**                                                          **          01404
**             ASCII Level 4 is only supported in MVS at    **          01405
**             the OS/390 2.4 level and higher.             **          01406
**                                                          **          01407
** LEVEL 068 - Split off label checking routine into a      **          01408
**             separate program, LABELCHK, which is         **          01409
**             assembled with COPYMODS together.            **          01410
**                                                          **          01411
** LEVEL 069 - More ASCII label detection support.          **          01412
**             LABLDUMP now works for ASCII tapes.  The     **          01413
**             control cards in the LABLDUMP DD name have   **          01414
**             been translated into ASCII, the same as the  **          01415
**             labels and the data.  PARM=STRIP now works   **          01416
**             for ASCII tapes.                             **          01417
**                                                          **          01418
**             Fixed a bug where OUTVOLALL didn't work      **          01419
**             for volumes other than VOLUME1.              **          01420
**                                                          **          01421
** LEVEL 070 - More ASCII label detection support.          **          01422
**             LABADDIN works for ASCII tapes now.          **          01423
**             BLKCNT option fixed to convert corrected     **          01424
**             block counts to ASCII when necessary.        **          01425
**             EOVTOEOF now works for ASCII and IBM tapes,  **          01426
**             because a call to LABELCHK now returns the   **          01427
**             altered copy of INAREA to the main program.  **          01428
**             A parm of EOV2 now requires a space after    **          01429
**             it, so as not to interfere with EOV2EOF.     **          01430
**                                                          **          01431
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **          01432
**                                                          **          01433
**             LBI support for XXX2 print of label          **          01434
**             contents.  Big blocksizes are printed        **          01435
**             in the XXX2 print message if they exist      **          01436
**             in the labels.  This is for IBM labels.      **          01437
**                                                          **          01438
**             Support 14-character tape owner for          **          01439
**             ANSI/ISO (ASCII) tapes.                      **          01440
**                                                          **          01441
**             Other cosmetic changes and many bug fixes.   **          01442
**                                                          **          01443
** LEVEL 072 - Separate all label print operations into a   **          01444
**             call to a separate CSECT called PRINTLBL.    **          01445
**             Now there is a unified label print routine   **          01446
**             for both EXTLBLIN and INAREA label input.    **          01447
**                                                          **          01448
** LEVEL 073 - Separate messages into their own CSECT.      **          01449
**             Address with PTMS macro, and special setup.  **          01450
**             Assembler instructions which access fields   **          01451
**             in the MSGCSECT CSECT are created with the   **          01452
**             new MVFMS macro.                             **          01453
**                                                          **          01454
** LEVEL 074 - Fix LTM service and reporting.               **          01455
**                                                          **          01456
** LEVEL 075 - Implement SECOFF (security indicators in     **          01457
**             labels turned off in the copied tapes).      **          01458
**             Involves VOL1 (byte 11) for ASCII tapes.     **          01459
**             XXX1 (byte 54) which is turned to C'0' for   **          01460
**             EBCDIC (IBM) tapes, and which is turned to   **          01461
**             ASCII space (X'20') for ASCII tapes.         **          01462
**                                                          **          01463
** LEVEL 076 - Implement FOOTAGE keyword to measure each    **          01464
**             tape file approximately, giving a 6250 bpi   **          01465
**             footage calculation.  This code originally   **          01466
**             came from the SS0104 tape mapping program    **          01467
**             from the Florida Power Corporation.          **          01468
**             Cumulative footages for the entire tape up   **          01469
**             to the current file, are also displayed.     **          01470
**                                                          **          01471
**             Introduced the FOOTDIAG keyword, to print    **          01472
**             diagnostics in the footage calculation.      **          01473
**             Most of the FOOTAGE workarea fields are      **          01474
**             displayed.                                   **          01475
**                                                          **          01476
** LEVEL 077 - Save addressability space by replacing       **          01477
**             multiple MVFMS invocations with ADRSMS and   **          01478
**             DROPMS macros, to get addressability to      **          01479
**             MSGCSECT, and keep it for a while.  Also     **          01480
**             further reduced the program size by making   **          01481
**             a PTMSN macro that doesn't re-do the         **          01482
**             addressability that PTMS does.  This is for  **          01483
**             putting in between a ADRSMS and a DROPMS.    **          01484
**                                                          **          01485
** LEVEL 078   Add CODEDPRM option to report PARM options   **          01486
**             before they were adjusted by COPYMODS.       **          01487
**                                                          **          01488
**             There was no way to turn off the INITVOLS    **          01489
**             option with a parm.  So I coded the NOINITVO **          01490
**             option, to turn off the INITVOLS option      **          01491
**             bit.  So tape init will only be in effect    **          01492
**             if INITVOLS is explicitly coded.  Report     **          01493
**             NOINITVO in the options report, if this      **          01494
**             option is set off.  Remember that coding     **          01495
**             the INITVOLS keyword also turns on the       **          01496
**             CHGVOL option, so that the JCL volser gets   **          01497
**             propagated into the newly initiated tape.    **          01498
**             Coding NOINITVO only turns off the INITVOLS  **          01499
**             parm bit, and not the CHGVOL bit, as this    **          01500
**             should be the proper way to do it.           **          01501
**                                                          **          01502
**             If no //OUTn DD cards are coded in the JCL,  **          01503
**             COPYMODS would have run through the WRITEs   **          01504
**             without writing, and it would look like a    **          01505
**             normal run.  The logical fix would be to     **          01506
**             force READONLY on, and say in a message      **          01507
**             that you have done so. (That's what I did.)  **          01508
**                                                          **          01509
** LEVEL 079   Added MINMAX option to report largest and    **          01510
**             smallest block sizes for each file read.     **          01511
**                                                          **          01512
** LEVEL 080   Added RECSIZE option to report individual    **          01513
**             size of tape blocks, one at a time.  This    **          01514
**             option produces one record in SYSPRINT for   **          01515
**             each tape data block because it is reporting **          01516
**             that block's size.  So this option should    **          01517
**             not be a default since it makes a lot of     **          01518
**             output.  Shows details of the MINMAX         **          01519
**             display, so RECSIZE implies MINMAX.  If      **          01520
**             RECSIZE is coded, MINMAX is switched on.     **          01521
**                                                          **          01522
**             Got rid of "SBG MM/YY" type comments.        **          01523
**                                                          **          01524
** LEVEL 081   Fix problem in PARM=STRIP code where a       **          01525
**             label image in the middle of tape data was   **          01526
**             stripped off.                                **          01527
**                                                          **          01528
** LEVEL 082   Fix problem in PARM=STRIP code where an      **          01529
**             80-byte tape block would cause no tape mark  **          01530
**             to be written at the end of the current      **          01531
**             file.  Made STRIP diagnostics a separate     **          01532
**             parm called DGSTRI and NODGSTRI.             **          01533
**                                                          **          01534
** LEVEL 083   Fix carriage control column for STRIP        **          01535
**             diagnostic messages.  Option DGSTRI.         **          01536
**                                                          **          01537
** LEVEL 084   Added option SHOOVL, which displays          **          01538
**             the first 80 bytes of the first block of     **          01539
**             each output tape, to determine if it is      **          01540
**             a VOL1 label, and what kind of VOL1 label.   **          01541
**             Added option KEEPVOL, KEEPVL.  This option   **          01542
**             looks at the VOL1 label of the output tape,  **          01543
**             and keeps it in the copied tape, if the      **          01544
**             input tape VOL1 label is compatible with it. **          01545
**             The principal reason for having this, is if  **          01546
**             a scratch tape is the copied tape, you do    **          01547
**             not necessarily know its volser in advance.  **          01548
**                                                          **          01549
** LEVEL 085   Size constraint relief.  Already ran out of  **          01550
**             6 base registers.  GETMAIN a workarea and    **          01551
**             put extra stuff there, addressable with R13. **          01552
**                                                          **          01553
**             Allow READ and SHOOVL at the same time,      **          01554
**             so that you can do a "dry run" without tape  **          01555
**             copying.  Now you can see what is on the     **          01556
**             output tapes you have mounted, without       **          01557
**             overlaying them as soon as you saw what      **          01558
**             used to be there.                            **          01559
**                                                          **          01560
** LEVEL 086   Revamp the MSGCSECT processing to handle     **          01561
**             messages of any length, not only 133.        **          01562
**             Also allow insertion of any print control    **          01563
**             characters via the macro, and not in the     **          01564
**             message itself.  Redo macros PTMS and PTMSN. **          01565
**                                                          **          01566
**************************************************************          01567
**************************************************************          01568
         MACRO                                                          01569
.* ----------------------------------------------------------------- *  01570
.*  Establish addressability to fields in MSGCSECT.                  *  01571
.* ----------------------------------------------------------------- *  01572
&NAME    ADRSMS                                                         01573
*                                         Operate with a message field  01574
         STM   R4,R5,SAV45MSG             Store work registers          01575
         USING MSGCSECT,R5,R4             Address MSGCSECT              01576
         L     R5,=V(MSGCSECT)            Load CSECT entry              01577
         LA    R4,4095(,R5)               Second base                   01578
         LA    R4,1(,R4)                    completed                   01579
         MEND                                                           01580
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01581
         MACRO                                                          01582
.* ----------------------------------------------------------------- *  01583
.*  DROP addressability to fields in MSGCSECT.                       *  01584
.* ----------------------------------------------------------------- *  01585
&NAME    DROPMS                                                         01586
         LM    R4,R5,SAV45MSG             Restore work registers        01587
         DROP  R5,R4                      And tell that they're gone    01588
         MEND                                                           01589
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01590
         MACRO                                                          01591
.* ----------------------------------------------------------------- *  01592
.*  Print a message to SYSPRINT from any length message line that    *  01593
.*  is in the MSGCSECT CSECT, provided that addressability has been  *  01594
.*  previously established, using the ADRSMS and DROPMS macros.      *  01595
.* ----------------------------------------------------------------- *  01596
&NAME    PTMSN &MSGLINE,&CC=                                            01597
*                                 Print a message line to SYSPRINT      01598
*                                 with MSGCSECT addressability there    01599
         MVI   LINE-1,X'40'               Move in blank                 01600
         MVC   LINE(133),LINE-1           And blank line                01601
         MVC   LINE(L'&MSGLINE),&MSGLINE  Move message to line & print  01602
         AIF   ('&CC' EQ '0').PTMSN0      Skip 1 line                   01603
         AIF   ('&CC' EQ '-').PTMSND      Skip 2 lines                  01604
         AIF   ('&CC' EQ '1').PTMSN1      Skip to top of page           01605
         AGO   .PTMSNE                                                  01606
.PTMSN0  MVI   LINE,C'0'                  Move cc 0 to LINE             01607
         AGO   .PTMSNE                                                  01608
.PTMSND  MVI   LINE,C'-'                  Move cc - to LINE             01609
         AGO   .PTMSNE                                                  01610
.PTMSN1  MVI   LINE,C'1'                  Move cc 1 to LINE             01611
.PTMSNE  ANOP                                                           01612
         PUT   SYSPRINT,LINE                                            01613
         MEND                                                           01614
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01615
         MACRO                                                          01616
.* ----------------------------------------------------------------- *  01617
.*  Print a message to SYSPRINT from any length message line that    *  01618
.*  that is in the MSGCSECT CSECT.                                   *  01619
.* ----------------------------------------------------------------- *  01620
&NAME    PTMS  &MSGLINE,&CC=                                            01621
*                                   Print a message line to SYSPRINT    01622
         STM   R4,R5,SAV45MSG             Store work registers          01623
         USING MSGCSECT,R5,R4             Address MSGCSECT              01624
         L     R5,=V(MSGCSECT)            Load CSECT entry              01625
         LA    R4,4095(,R5)               Second base                   01626
         LA    R4,1(,R4)                    completed                   01627
         MVI   LINE-1,X'40'               Move in blank                 01628
         MVC   LINE(133),LINE-1           And blank line                01629
         MVC   LINE(L'&MSGLINE),&MSGLINE  Move message to line & print  01630
         AIF   ('&CC' EQ '0').PTML0       Skip 1 line                   01631
         AIF   ('&CC' EQ '-').PTMLD       Skip 2 lines                  01632
         AIF   ('&CC' EQ '1').PTML1       Skip to top of page           01633
         AGO   .PTMLE                                                   01634
.PTML0   MVI   LINE,C'0'                  Move cc 0 to LINE             01635
         AGO   .PTMLE                                                   01636
.PTMLD   MVI   LINE,C'-'                  Move cc - to LINE             01637
         AGO   .PTMLE                                                   01638
.PTML1   MVI   LINE,C'1'                  Move cc 1 to LINE             01639
.PTMLE   ANOP                                                           01640
         PUT   SYSPRINT,LINE                                            01641
         LM    R4,R5,SAV45MSG             Restore work registers        01642
         DROP  R5,R4                      And tell that they're gone    01643
         MEND                                                           01644
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01645
         MACRO                                                          01646
.* ----------------------------------------------------------------- *  01647
.*  Perform an instruction with one or more operands from MSGCSECT.  *  01648
.* ----------------------------------------------------------------- *  01649
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC                                   01650
*                                         Operate with a message field  01651
         STM   R4,R5,SAV45MSG             Store work registers          01652
         USING MSGCSECT,R5,R4             Address MSGCSECT              01653
         L     R5,=V(MSGCSECT)            Load CSECT entry              01654
         LA    R4,4095(,R5)               Second base                   01655
         LA    R4,1(,R4)                    completed                   01656
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field    01657
         LM    R4,R5,SAV45MSG             Restore work registers        01658
         DROP  R5,R4                      And tell that they're gone    01659
         MEND                                                           01660
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01661
         MACRO                                                          01662
&NAME    HEX   &TO,&LEN,&FROM                                           01663
&NAME    DS    0H                                                       01664
         ST    R4,SAV4HEX                                               01665
         STM   R15,R1,HEXSAVE                                           01666
         LA    R1,&FROM                                                 01667
         LA    R0,&LEN                                                  01668
         LA    R15,&TO                                                  01669
         BAL   R4,HEX                                                   01670
         L     R4,SAV4HEX                                               01671
         LM    R15,R1,HEXSAVE                                           01672
         MEND                                                           01673
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01674
         EJECT                                                          01675
         YREGS                                                          01676
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                               01677
         GBLA  &HEXDFLA                                                 01678
* ------------------------------------------------------------------ *  01679
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *  01680
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *  01681
* ------------------------------------------------------------------ *  01682
&HEXDFLA SETA  4                                                        01683
&HEXDFLC SETC  '&HEXDFLA'                                               01684
COPYMODS CSECT                                                          01685
         USING *,R15                                                  * 01686
         B     EYECATCH                                               * 01687
         DC    C'HEX DUMP '                                             01688
HEXDFLCC DC    C'&HEXDFLC'                                              01689
         DC    C' RECORDS '                                             01690
HEXDFLL  EQU   L'HEXDFLCC                                               01691
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                01692
         DC    C'--- '            MAKE EYECATCHER VISIBLE             * 01693
         DC    C'COPYMODS Level 086 '                                 * 01694
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 * 01695
         DC    C'SYSIN IN PARMCHEK PGM'                                 01696
EYECATCH DS    0D             ENSURE ALIGNMENT                        * 01697
         SAVE  (14,12)                                                  01698
         LR    R5,R1          SAVE PARM POINTER                         01699
* -----                       SET UP SIX BASE REGISTERS                 01700
         LR    R12,R15                                                  01701
         DROP  R15                                                      01702
         LA    R11,4095(,R12)                                           01703
         LA    R11,1(,R11)                                              01704
         LA    R10,4095(,R11)                                           01705
         LA    R10,1(,R10)                                              01706
         LA    R9,4095(,R10)                                            01707
         LA    R9,1(,R9)                                                01708
         LA    R8,4095(,R9)                                             01709
         LA    R8,1(,R8)                                                01710
         LA    R6,4095(,R8)                                             01711
         LA    R6,1(,R6)                                                01712
         USING COPYMODS,R12,R11,R10,R9,R8,R6                            01713
         GETMAIN R,LV=WORKLENG,SP=0                                     01714
         LR    R3,R1                                                    01715
         ST    R13,4(,R3)          SAVE THE CALLER'S R13                01716
         ST    R3,8(,R13)                                               01717
         LR    R13,R3                                                   01718
         USING WORKAREA,R13                                             01719
         LR    R1,R5          RESTORE PARM POINTER                      01720
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN        01721
*                             BE PASSED TO THE PARMCHEK PROGRAM.        01722
         ST    R1,PARMSAVE    And store the PARM pointer into this      01723
*                             program too, so it doesn't get lost.      01724
         L     R1,0(,R1)                                                01725
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                     01726
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                 01727
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE         01728
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER   01729
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.        01730
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm 01731
         ST    R0,LABCHENT           Save entry point for calling later 01732
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm 01733
         ST    R0,PRTLBENT           Save entry point for calling later 01734
         L     R0,=V(FOOTAGE)        Entry point of called FOOTAGE pgm  01735
         ST    R0,FOOTGENT           Save entry point for calling later 01736
         L     R0,=V(VOL1STOR)       Entry point for VOL1 storage table 01737
         ST    R0,VOL1SENT           Save entry point for calling later 01738
CONSINIT DS    0H                                                       01739
         MVI   FLAGCODE,X'00'                                           01740
         MVI   VOLALL-1,X'40'                                           01741
         MVC   VOLALL,VOLALL-1                                          01742
         MVI   LINE-1,X'40'                                             01743
         MVC   LINE,LINE-1                                              01744
         MVI   LLINE-1,X'40'                                            01745
         MVC   LLINE,LLINE-1                                            01746
         MVI   SAVELINE-1,X'40'                                         01747
         MVC   SAVELINE,SAVELINE-1                                      01748
         MVI   INVOLFLG,X'00'        ONLY USED BY KEEPVOL.              01749
         MVI   READKFLG,X'00'        ONLY USED BY KEEPVOL.              01750
*   Initialization for 6250 footage calculations ---- below             01751
         MVI   LABELTYP,C'N'         Assume NL for footage calculations 01752
         MVI   DENSITY,C'4'          Assume 6250 density for footage    01753
         MVC   FILENO,=H'1'          Start with first file              01754
         XC    BLKSZE,BLKSZE         Zero                               01755
         XC    NUMBLKS,NUMBLKS         These                            01756
         XC    USERLBLS,USERLBLS         Fields                         01757
         XC    CUMTOTAL,CUMTOTAL           Initially                    01758
         XC    BLKSZWRK,BLKSZWRK                                        01759
         MVC   FILEFT,=C'        '                                      01760
         MVC   REELFT,=C'        '                                      01761
*   Initialization for 6250 footage calculations ---- above             01762
* --- >   Initialize max and min blocksize calculation  < --- * below   01763
         MVC   MAXBLK,=F'0'                 Start small                 01764
         MVC   MINBLK,=F'268435455'         Start big                   01765
* --- >   Initialize max and min blocksize calculation  < --- * above   01766
* ----------------------------------------------------------------- *   01767
*                                                                   *   01768
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *   01769
*                                                                   *   01770
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *   01771
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *   01772
*              FIELDS.                                              *   01773
*                                                                   *   01774
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *   01775
*              FILLED IN.                                           *   01776
*                                                                   *   01777
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *   01778
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *   01779
*              THE PARM SCAN.                                       *   01780
*                                                                   *   01781
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *   01782
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *   01783
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *   01784
*                                                                   *   01785
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *   01786
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *   01787
*                                                                   *   01788
* ------------------------------------------------------------------*   01789
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *   01790
* ------------------------------------------------------------------*   01791
         L     R0,=V(PARMCHEK)                                          01792
         ST    R0,ENTRYPT                                               01793
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM     01794
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.       01795
         BALR  R14,R15                 DO CALL                          01796
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS    01797
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA    01798
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS     01799
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK    01800
* -- >  After PARMS gotten...........                                   01801
         MVC   PARMCOPY(PARMFLLN),0(R1)   Preserve unchanged parms.     01802
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name   01803
         TM    PARMFLG5,X'04'                                           01804
         BO    LTMNUMB0                                                 01805
         MVC   LTMCNTR(4),=F'0'           Init LTM count fullword       01806
         B     LTMNUMB1                                                 01807
LTMNUMB0 DS    0H                                                       01808
         MVC   LTMCNTR(4),LTMNUMB         Init LTM count fullword       01809
LTMNUMB1 DS    0H                                                       01810
         ZAP   LTMCOUNT,=P'0'             Init LTM ascending counter    01811
         MVC   LTMBINAD,=F'0'             Init LTM binary counter       01812
* ----------------------------------------------------------------- *   01813
* ----------------------------------------------------------------- *   01814
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *   01815
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *   01816
* ----------------------------------------------------------------- *   01817
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON        01818
SKIPLTMS DS    0H                                                     * 01819
* ------- >> ------- >>                                                 01820
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?               01821
         BZ    NOASCII4            NO. DON'T ADJUST.                    01822
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.          01823
NOASCII4 DS    0H                                                       01824
* ------- >> ------- >>                                                 01825
* ----- * ----- * ------                                                01826
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?               01827
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                   01828
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                   01829
NONOEXNL DS    0H                                                       01830
* ----- * ----- * ------                                                01831
* ----- * ----- * ------ *------                                        01832
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                           01833
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                   01834
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON             01835
NOCUMSEP DS    0H                                                       01836
* ----- * ----- * ------ *------                                        01837
* ----- * -----                                                         01838
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                       01839
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                   01840
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON       01841
NOCUMTOT DS    0H                                                       01842
* ----- * -----                                                         01843
         TM    PARMFLG6,X'80'   Do we want an options comparison?       01844
         BZ    NOCODDPR         No. Don't force OPTIONS on.             01845
         OI    PARMFLG4,X'20'   Make sure OPTIONS is also on.           01846
NOCODDPR DS    0H                                                       01847
* ----- * -----                                                         01848
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR             01849
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *     01850
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?          01851
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.          01852
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP           01853
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO      01854
*                                      BECAUSE WE'RE COPYING TO SL.     01855
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS            01856
CANLBDMP DS    0H                                                       01857
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *   01858
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                         01859
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS            01860
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                  01861
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                   01862
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF               01863
NOLBDQUI DS    0H                                                       01864
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *   01865
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *    01866
         TM    PARMFLG4,X'02'      IS STRIP ON?                         01867
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS        01868
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF               01869
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF               01870
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF               01871
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                           01872
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                          01873
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                       01874
         NI    PARMFLG6,FF-X'08'   KEEPVOL HAS TO BE OFF                01875
         NI    PARMFLG7,FF-X'10'   SHOOVL  HAS TO BE OFF                01876
NOSTRADJ DS    0H                  END of the STRIP adjustments         01877
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *    01878
         TM    PARMFLG2,X'08'      IS THIS RUN READ-ONLY?               01879
         BZ    SKIXLTMS            NO. DON'T CHANGE INDICATOR           01880
         MVFMS LTMRPTI,READDD      INDICATE LTM'S HAVE BEEN READ        01881
SKIXLTMS DS    0H                                                       01882
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   below                01883
*  Explanation:  If you're already displaying the size of each tape     01884
*                block, you might as well summarize the largest and     01885
*                smallest block size found in that file.                01886
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01887
         TM    PARMFLG6,X'02'      Displaying individual block sizes?   01888
         BZ    NOMMXADJ            NO. Skip this code.                  01889
         OI    PARMFLG6,X'01'      YES. Summarize largest and smallest  01890
NOMMXADJ DS    0H                                                       01891
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   above                01892
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01893
** - * - * - >>>>   KEEPVOL  implies  SHOOVL   -   below                01894
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01895
* Explanation:  KEEPVOL tells COPYMODS to reuse an eligible output   *  01896
*               volume's VOL1 label in the copied volume, instead    *  01897
*               of overlaying it with the input volume's VOL1 label. *  01898
*               So you have to look at all the output tapes, to see  *  01899
*               if they have VOL1 labels that are appropriate to     *  01900
*               keep.  Also you have to look at the input tape's     *  01901
*               VOL1 label, if it exists, and compare it with each   *  01902
*               output tape's VOL1 label, if IT exists. Then decide. *  01903
** - - - - - - -- - - - - - - - - - - - - - - - - - - - - - - - - -  *  01904
         TM    PARMFLG6,X'08'      Keeping the output volume's VOL1?    01905
         BZ    NOSHVADJ            NO. Don't adjust necessary options.  01906
         OI    PARMFLG7,X'10'      YES. Have to look at Output VOL1's.  01907
         OI    PARMFLG2,X'01'      CHGVOL has to be ON                  01908
         NI    PARMFLG2,FF-X'80'   LABADDIN has to be OFF               01909
NOSHVADJ DS    0H                                                       01910
** - * - * - >>>>   KEEPVOL  implies  SHOOVL   -   above                01911
* ----------------------------------------------------------------- *   01912
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *   01913
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *   01914
* ----------------------------------------------------------------- *   01915
* --                                                             -- *   01916
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?            01917
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM       01918
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                   01919
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED         01920
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM              01921
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                01922
         BZ    NOOPTRP1          NO. DON'T CALL IT                      01923
         BALR  R14,R15           CALL SUBPROGRAM                        01924
         TM    PARMFLG6,X'80'    IS CODEDPRM CODED?                     01925
         BZ    NOOPTRP2          NO. DON'T PRINT CODED OPTIONS.         01926
NOOPTRP1 DS    0H                                                       01927
         LA    R1,PARMCOPY       POINT TO QUANTITY TO BE PASSED         01928
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM              01929
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                01930
         BZ    NOOPTRP2          NO. DON'T CALL IT                      01931
         BALR  R14,R15           CALL SUBPROGRAM                        01932
NOOPTRP2 DS    0H                                                       01933
         LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                01934
NOOPTRPT DS    0H                                                       01935
*  -------------------------------------------------------------- *     01936
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL          * 01937
         RDJFCB IN                                                      01938
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL       01939
         ADRSMS                                                         01940
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG         * 01941
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG         * 01942
         DROPMS                                                         01943
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST  01944
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA                     * 01945
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                01946
         MVC   FILNOSAW,=C'00001'  One more than FILNOSAV, for blk size 01947
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET           01948
         SPACE 3                                                        01949
OPENSYSP DS    0H                                                       01950
* ----------------------------------------------------------------- *   01951
*                                                                   *   01952
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                          *   01953
*                                                                   *   01954
* --- READ ONLY CODE ------------------------ below --------------- *   01955
         TM    PARMFLG7,X'10'     Is SHOOVL on for output volumes?  *   01956
         BO    TIOTSHOV           Yes. Don't skip output TIOT's.    *   01957
         TM    PARMFLG2,X'08'     Is this run read-only?            *   01958
         BO    OPENS          Yes--skip the TIOT loop for OUT DD's. *   01959
TIOTSHOV DS    0H                                                   *   01960
* --- READ ONLY CODE ------------------------ above --------------- *   01961
         L     R2,16          R2=CVT                                    01962
         L     R2,0(,R2)      R2=TCB WORDS                              01963
         L     R2,4(,R2)      R2=MY TCB                                 01964
         L     R2,12(,R2)     R2=TIOT                                   01965
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                         01966
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                            01967
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES       01968
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                   01969
         BNE   TIOT1          NO                                        01970
         OI    FLAG1,OP1      SHOW IT                                   01971
         STM   R14,R3,SAV14T03                                    TEST  01972
         RDJFCB OUT1                                                    01973
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL             01974
         MVC   VOLDD,DDOUT1                                             01975
         LM    R14,R3,SAV14T03                                    TEST  01976
         B     TIOTNEXT       CONTINUE                                  01977
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                   01978
         BNE   TIOT2          NO                                        01979
         OI    FLAG1,OP2      SHOW IT                                   01980
         STM   R14,R3,SAV14T03                                    TEST  01981
         RDJFCB OUT2                                                    01982
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL             01983
         MVC   VOLDD,DDOUT2                                             01984
         LM    R14,R3,SAV14T03                                    TEST  01985
         B     TIOTNEXT       CONTINUE                                  01986
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                   01987
         BNE   TIOT3          NO                                        01988
         OI    FLAG1,OP3      SHOW IT                                   01989
         STM   R14,R3,SAV14T03                                    TEST  01990
         RDJFCB OUT3                                                    01991
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL             01992
         MVC   VOLDD,DDOUT3                                             01993
         LM    R14,R3,SAV14T03                                    TEST  01994
         B     TIOTNEXT       CONTINUE                                  01995
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                   01996
         BNE   TIOT4          NO                                        01997
         OI    FLAG1,OP4      SHOW IT                                   01998
         STM   R14,R3,SAV14T03                                    TEST  01999
         RDJFCB OUT4                                                    02000
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL             02001
         MVC   VOLDD,DDOUT4                                             02002
         LM    R14,R3,SAV14T03                                    TEST  02003
         B     TIOTNEXT       CONTINUE                                  02004
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                   02005
         BNE   TIOT5          NO                                        02006
         OI    FLAG1,OP5      SHOW IT                                   02007
         STM   R14,R3,SAV14T03                                    TEST  02008
         RDJFCB OUT5                                                    02009
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL             02010
         MVC   VOLDD,DDOUT5                                             02011
         LM    R14,R3,SAV14T03                                    TEST  02012
         B     TIOTNEXT       CONTINUE                                  02013
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                   02014
         BNE   TIOT6          NO                                        02015
         OI    FLAG1,OP6      SHOW IT                                   02016
         STM   R14,R3,SAV14T03                                    TEST  02017
         RDJFCB OUT6                                                    02018
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL             02019
         MVC   VOLDD,DDOUT6                                             02020
         LM    R14,R3,SAV14T03                                    TEST  02021
         B     TIOTNEXT       CONTINUE                                  02022
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                   02023
         BNE   TIOT7          NO                                        02024
         OI    FLAG1,OP7      SHOW IT                                   02025
         STM   R14,R3,SAV14T03                                    TEST  02026
         RDJFCB OUT7                                                    02027
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL             02028
         MVC   VOLDD,DDOUT7                                             02029
         LM    R14,R3,SAV14T03                                    TEST  02030
         B     TIOTNEXT       CONTINUE                                  02031
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                   02032
         BNE   TIOT8          NO                                        02033
         OI    FLAG1,OP8      SHOW IT                                   02034
         STM   R14,R3,SAV14T03                                    TEST  02035
         RDJFCB OUT8                                                    02036
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL             02037
         MVC   VOLDD,DDOUT8                                             02038
         LM    R14,R3,SAV14T03                                    TEST  02039
         B     TIOTNEXT       CONTINUE                                  02040
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                   02041
         BNE   TIOT9          NO                                        02042
         OI    FLAG2,OP9      SHOW IT                                   02043
         STM   R14,R3,SAV14T03                                    TEST  02044
         RDJFCB OUT9                                                    02045
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL             02046
         MVC   VOLDD,DDOUT9                                             02047
         LM    R14,R3,SAV14T03                                    TEST  02048
         B     TIOTNEXT       CONTINUE                                  02049
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                 02050
         BNE   TIOT10         NO                                        02051
         OI    FLAG2,OP10     SHOW IT                                   02052
         STM   R14,R3,SAV14T03                                    TEST  02053
         RDJFCB OUT10                                                   02054
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL            02055
         MVC   VOLDD,DDOUT10                                            02056
         LM    R14,R3,SAV14T03                                    TEST  02057
         B     TIOTNEXT       CONTINUE                                  02058
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                 02059
         BNE   TIOT11         NO                                        02060
         OI    FLAG2,OP11     SHOW IT                                   02061
         STM   R14,R3,SAV14T03                                    TEST  02062
         RDJFCB OUT11                                                   02063
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL            02064
         MVC   VOLDD,DDOUT11                                            02065
         LM    R14,R3,SAV14T03                                    TEST  02066
         B     TIOTNEXT       CONTINUE                                  02067
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                 02068
         BNE   TIOT12         NO                                        02069
         OI    FLAG2,OP12     SHOW IT                                   02070
         STM   R14,R3,SAV14T03                                    TEST  02071
         RDJFCB OUT12                                                   02072
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL            02073
         MVC   VOLDD,DDOUT12                                            02074
         LM    R14,R3,SAV14T03                                    TEST  02075
         B     TIOTNEXT       CONTINUE                                  02076
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                 02077
         BNE   TIOT13         NO                                        02078
         OI    FLAG2,OP13     SHOW IT                                   02079
         STM   R14,R3,SAV14T03                                    TEST  02080
         RDJFCB OUT13                                                   02081
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL            02082
         MVC   VOLDD,DDOUT13                                            02083
         LM    R14,R3,SAV14T03                                    TEST  02084
         B     TIOTNEXT       CONTINUE                                  02085
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                 02086
         BNE   TIOT14         NO                                        02087
         OI    FLAG2,OP14     SHOW IT                                   02088
         STM   R14,R3,SAV14T03                                    TEST  02089
         RDJFCB OUT14                                                   02090
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL            02091
         MVC   VOLDD,DDOUT14                                            02092
         LM    R14,R3,SAV14T03                                    TEST  02093
         B     TIOTNEXT       CONTINUE                                  02094
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                 02095
         BNE   TIOT15         NO                                        02096
         OI    FLAG2,OP15     SHOW IT                                   02097
         STM   R14,R3,SAV14T03                                    TEST  02098
         RDJFCB OUT15                                                   02099
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL            02100
         MVC   VOLDD,DDOUT15                                            02101
         LM    R14,R3,SAV14T03                                    TEST  02102
         B     TIOTNEXT       CONTINUE                                  02103
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                 02104
         BNE   TIOTNEXT       NO                                        02105
         OI    FLAG2,OP16     SHOW IT                                   02106
         STM   R14,R3,SAV14T03                                    TEST  02107
         RDJFCB OUT16                                                   02108
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL            02109
         MVC   VOLDD,DDOUT16                                            02110
         LM    R14,R3,SAV14T03                                    TEST  02111
         B     TIOTNEXT       CONTINUE                                  02112
TIOTNEXT SR    R3,R3                                                    02113
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                     02114
         AR    R2,R3          R2=NEXT DD ENTRY                          02115
         B     TIOTLOOP       GO CHECK IT                               02116
*  ---------------------------------------------------------          * 02117
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*   02118
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                       02119
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.     02120
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?          02121
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                   02122
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER           02123
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                              02124
NOVOLOV  DS    0H                                                       02125
         CLC   FLAG1(2),=X'0000' No output files open?                  02126
         BNE   OPENS                                                    02127
         OI    PARMFLG2,X'08'    Force READONLY                         02128
         OI    NOUTSFLG,X'01'    Show we were here                      02129
         B     OPENS             Go OPEN files.                         02130
*  ---------------------------------------------------------          * 02131
         SPACE 3                                                        02132
*  -----------------------------------------------------------------  * 02133
*                                                                       02134
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY          02135
*                                                                       02136
*  -----------------------------------------------------------------  * 02137
OPENS    DS    0H               START OPENING FILES                     02138
         OPEN  (SYSPRINT,OUTPUT)                                        02139
*-- + -- + -- >>    below       READONLY forced because no OUTnn DD     02140
         TM    NOUTSFLG,X'01'                                           02141
         BZ    HASOUTPT                                                 02142
         ADRSMS                                                         02143
         PTMSN FORCREAD                                                 02144
         DROPMS                                                         02145
HASOUTPT DS    0H                                                       02146
*-- + -- + -- >>    above       READONLY forced because no OUTnn DD     02147
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                       02148
         BO    OPENMOVE                                                 02149
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                      02150
         BO    OPENMOVE                                                 02151
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                      02152
         BO    OPENMOVE                                                 02153
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.    02154
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    * 02155
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00 02156
         OPEN  (LABLDUMP,OUTPUT)                                      * 02157
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                  02158
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.        02159
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.           02160
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME             02161
NOLBLDD  DS    0H                                                       02162
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE            02163
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.          02164
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                  02165
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD       02166
         OPEN  (LABADDIN,INPUT)                                         02167
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                     02168
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE              02169
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.           02170
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.           02171
NOLABIN  DS    0H                                                       02172
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE            02173
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.          02174
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END               02175
         BZ    OPENIN             NOTHING WRONG.  GO ON.                02176
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?    02177
         CLOSE (SYSPRINT)                                               02178
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                  02179
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.             02180
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                   02181
         CLOSE (LABLDUMP)                                               02182
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                  02183
         BZ    REALYEND           NO. GET OUT.                          02184
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   02185
         CLOSE (LABADDIN)                                               02186
REALYEND B     THEEND                                                   02187
         EJECT                                                          02188
OPENIN   OPEN  (IN,INPUT)                                               02189
         TM    IN+48,X'10'                                              02190
         BO    INISOPEN                                                 02191
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *        02192
         TM    PARMFLG3,X'01'       INITTING TAPES?                     02193
         BO    INISOPEN             OK. //IN DD is not needed.          02194
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?               02195
         BO    INISOPEN             OK. //IN DD is not needed.          02196
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?               02197
         BO    INISOPEN             OK. //IN DD is not needed.          02198
** --- >>>   //IN DD is really needed, but is not OPEN.                 02199
         PTMS  INNOTOPN             Print message that //IN not open.   02200
         B     ENDEM                Go to CLOSE files, and get out.     02201
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *        02202
INISOPEN DS    0H                                                       02203
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?             02204
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO             02205
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *  02206
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?               02207
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN         02208
* ----                                                                  02209
OPENINCK DS    0H                                                       02210
         OI    DATFLAG,X'20'      Initialize "no data read yet" flag.   02211
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02212
         MVC   LTMBINAD,=F'0'                                           02213
         LA    R2,IN              POINT TO IN DCB                       02214
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                 02215
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                  02216
         EXCP  REWIOB                                                   02217
         WAIT  ECB=REWECB                                               02218
OPINREAD DS    0H                                                       02219
         TM    DATFLAG,X'20'      Still no legitimate data read?        02220
         BZ    OPINCHEK           Legitimate data. Look for VOL1.       02221
         MVC   INECB,=F'0'        Initialize IN's ECB                   02222
         EXCP  INIOB                                                    02223
         WAIT  ECB=INECB                                                02224
* ->->->       Break in to bypass LTMs    ->->->   below                02225
         TM    INCSW+4,X'01'      Was a tape mark read?                 02226
         BZ    OPINCHEK           No. This is legitimate data.          02227
         AP    LTMCOUNT,=P'1'     Add 1 to Tape Mark count.             02228
         L     R0,LTMBINAD                                              02229
         A     R0,=F'1'                                                 02230
         ST    R0,LTMBINAD                                              02231
         ADRSMS                                                         02232
         MVC   LTMRPTI,PASSED     Report tape mark was passed.          02233
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern            02234
         ED    LTMRNUM(11),LTMCOUNT+1           Put count in message    02235
         PTMSN LTMRPT             Report leading TM passed.             02236
         DROPMS                                                         02237
         B     OPINREAD           Do another read until real data found 02238
* ->->->       Break in to bypass LTMs    ->->->   above                02239
OPINCHEK DS    0H                                                       02240
         NI    DATFLAG,FF-X'20'   Show legitimate data read now.        02241
         OI    DATFLAG,X'40'      Show we came thru here.               02242
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                  02243
         BE    OPENINSL                 Yes, turn on SL flag.           02244
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                    02245
         BE    OPENINSL                 Yes, turn on SL flag.           02246
         B     RESETIN            No. Just rewind to reposition.        02247
OPENINSL DS    0H                                                       02248
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL             02249
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?             02250
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN   02251
****** ------ BELOW ------ SL FILE NUMBERS.                             02252
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?          02253
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                02254
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?     02255
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG     02256
**** ----- >>>>>   Force file limiting by SL   - - -  below             02257
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim  02258
         BZ    NOSLFLIM              Not set, bypass code for it        02259
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number         02260
         L     R0,LTGFILE                                               02261
         A     R0,LTMBINAD                                              02262
         ST    R0,LTGFILE                                               02263
         ADRSMS                                                         02264
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02265
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning    02266
         PTMSN FORCESLM              Say you'll force limiting by SL    02267
         DROPMS                                                         02268
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?    02269
         BNO   SLLIMRES              No. only SLLIM. So go on.          02270
         PTMS  TWOFORCE              Say you'll force limiting by SL    02271
SLLIMRES DS    0H                                                       02272
         B     RESETIN                                                  02273
NOSLFLIM DS    0H                                                       02274
**** ----- >>>>>   Force file limiting by SL   - - -  above             02275
**** ----- >>>>>   Force file limiting by NL   - - -  below             02276
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim  02277
         BZ    NONLFLIM              Not set, bypass code for it        02278
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number         02279
         L     R0,LTGFILE                                               02280
         A     R0,LTMBINAD                                              02281
         ST    R0,LTGFILE                                               02282
         ADRSMS                                                         02283
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02284
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning    02285
         PTMSN FORCENLM              Say you'll force limiting by NL    02286
         DROPMS                                                         02287
         B     RESETIN                                                  02288
NONLFLIM DS    0H                                                       02289
**** ----- >>>>>   Force file limiting by NL   - - -  above             02290
* -- > Strip test                                                       02291
         TM    PARMFLG4,X'02'        Are we stripping labels?           02292
         BZ    OPENINXW              No. Bypass this section.           02293
         TM    PARMFLG3,X'02'        Are we limiting files also?        02294
         BO    OPENINXW              Yes. Use SL number.                02295
* --- >>   Diagnostics for stripping   << --- *   below                 02296
         TM    PARMFLG6,X'04'                                           02297
         BZ    DGSTRI0B                                                 02298
         MVI   LINE-1,X'40'                                             02299
         MVC   LINE,LINE-1                                              02300
         MVC   LINE(11),=C' STRIPFLG: '                                 02301
         HEX   LINE+11,1,STRIPFLG                                       02302
         MVI   LINE+15,C'B'                                             02303
         MVC   LINE+20(10),=C'ISLBLFLG: '                               02304
         HEX   LINE+30,1,ISLBLFLG                                       02305
         MVC   LINE+40(10),=C'LBLFLAG:  '                               02306
         HEX   LINE+50,1,LBLFLAG                                        02307
         PUT   SYSPRINT,LINE                                            02308
DGSTRI0B DS    0H                                                       02309
* --- >>   Diagnostics for stripping   << --- *   above                 02310
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.  02311
         L     R0,LTGFILE                                               02312
         A     R0,LTMBINAD                                              02313
         ST    R0,LTGFILE                                               02314
         ADRSMS                                                         02315
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02316
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL      02317
         DROPMS                                                         02318
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG   02319
OPENINXW DS    0H                                                       02320
* -- > Strip test                                                       02321
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL   02322
         L     R0,LTGFILE                                               02323
         A     R0,LTMBINAD                                              02324
         ST    R0,LTGFILE                                               02325
         ADRSMS                                                         02326
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02327
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE   02328
         DROPMS                                                         02329
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG   02330
OPENINXX DS    0H                                                       02331
****** ------ ABOVE ------ SL FILE NUMBERS.                             02332
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.    02333
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG               02334
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                  02335
         BZ    RESETEND           NO. GET OUT.                          02336
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   02337
         CLOSE (LABADDIN)                                               02338
RESETEND CLOSE (IN)                                                     02339
         B     THEEND                                                   02340
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.    02341
RESETIN  DS    0H                                                       02342
         TM    PARMFLG2,X'80'     Came here for LABADDIN?               02343
         BZ    RESETSLD           No. Do complete rewind.               02344
         MVC   LTMCNTR(4),LTMBINAD                                      02345
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02346
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.   02347
         OI    RESLTMWF,X'01'                                           02348
         LA    R2,IN              POINT TO IN DCB                       02349
         ST    R2,BKBDCBPT        TELL IOB TO BACKSPACE ONLY ONE BLOCK  02350
         MVC   BK1BECB,=F'0'                                            02351
         EXCP  BK1BIOB                                                  02352
         WAIT  ECB=BK1BECB                                              02353
         B     NOLBLDMP                                                 02354
RESETSLD DS    0H                                                       02355
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02356
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.   02357
         MVC   REWECB,=F'0'                                             02358
         EXCP  REWIOB                                                   02359
         WAIT  ECB=REWECB                                               02360
NOINITOP DS    0H                                                       02361
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *  02362
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.           02363
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.            02364
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA               02365
         LTR   R15,R15                  DDNAME SHOULD BE THERE          02366
         BNZ   NOLBLDD                  IF NOT, FLAG                    02367
         ST    R7,SAVE7REG              SAVE R7                         02368
         LA    R7,LBLJFCB               POINT TO JFCB AREA              02369
         USING JFCBLK,R7                MAP THE AREA                    02370
         ADRSMS                                                         02371
         MVC   LDMPOUTM+38(44),JFCBDSNM                                 02372
         MVC   LDMPOUTM+89(8),JFCBELNM                                  02373
         MVC   LDMPOUTM+105(6),JFCBVOLS                                 02374
         PTMSN LDMPOUTM                                                 02375
         DROPMS                                                         02376
         DROP  R7                                                       02377
         L     R7,SAVE7REG              RESTORE R7                      02378
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.                 * 02379
         TM    PARMFLG2,X'80'     TEST IF LABADDIN IS NEEDED.           02380
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.            02381
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA               02382
         LTR   R15,R15                  DDNAME SHOULD BE THERE          02383
         BNZ   NOLABIN                  IF NOT, FLAG                    02384
         ST    R7,SAVE7REG              SAVE R7                         02385
         LA    R7,LBNJFCB               POINT TO JFCB AREA              02386
         USING JFCBLK,R7                MAP THE AREA                    02387
         ADRSMS                                                         02388
         MVC   LDMPINMS+38(44),JFCBDSNM                                 02389
         MVC   LDMPINMS+89(8),JFCBELNM                                  02390
         MVC   LDMPINMS+105(6),JFCBVOLS                                 02391
         PTMSN LDMPINMS                                                 02392
         DROPMS                                                         02393
         DROP  R7                                                       02394
         L     R7,SAVE7REG              RESTORE R7                      02395
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.                 * 02396
* --- READ ONLY CODE ------------------ BELOW ---------------         * 02397
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 02398
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.            * 02399
*                         OTHERWISE PUT INITIAL READONLY MSG          * 02400
         PTMS  READOMSG,CC=0         MOVE READ-ONLY MESSAGE             02401
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02402
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?           02403
         BZ    NOLIMFMR         NO, SKIP MESSAGE                        02404
         ADRSMS                                                         02405
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02406
         PTMSN LIMFMSG                  MOVE MESSAGE TEXT IN            02407
         DROPMS                                                         02408
NOLIMFMR DS    0H                                                       02409
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02410
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                 02411
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?         02412
         BZ    N1LIMHEX         NO, SKIP MESSAGE                        02413
         TM    PARMFLG7,X'10'   IS SHOOVL THERE, COMBINED WITH READ?    02414
         BO    N1LIMHEX         YES. DON'T PRINT MESSAGE TWICE.         02415
         MVC   LINE,LINE-1      CLEAR MSG LINE                          02416
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?            02417
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.          02418
         MVFMS LINE(L'LIMHMSG),LIMHMSG    MOVE MESSAGE TEXT IN          02419
         B     N1LIMPRT                   AND PRINT IT                  02420
N1LIMDEF DS    0H                                                       02421
         ADRSMS                                                         02422
         MVC   LIMPMSG+11(10),PRTCHAR                                   02423
         MVC   LINE(L'LIMPMSG),LIMPMSG MOVE MESSAGE TEXT IN             02424
         DROPMS                                                         02425
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                        02426
N1LIMHEX DS    0H                                                       02427
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                 02428
         TM    PARMFLG7,X'10'   SHOOVL IN EFFECT?                       02429
         BO    OPENMOVE         YES. WE HAVE TO OPEN OUTPUT FILES.      02430
         B     READIN                                                 * 02431
* --- READ ONLY CODE ------------------ ABOVE ---------------         * 02432
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE   02433
*                             THIS ALSO MOVES FLAG2 TO FLAG4          * 02434
*  ---------------------------------------------------------          * 02435
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                 02436
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?         02437
         BZ    NOLIMHEX         NO, SKIP MESSAGE                        02438
         MVC   LINE,LINE-1      CLEAR MSG LINE                          02439
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?            02440
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.          02441
         MVFMS LINE(L'LIMHMSG),LIMHMSG    MOVE MESSAGE TEXT IN          02442
         B     NOLIMPRT                   AND PRINT IT                  02443
NOLIMDEF DS    0H                                                       02444
         ADRSMS                                                         02445
         MVC   LIMPMSG+11(10),PRTCHAR                                   02446
         MVC   LINE(L'LIMPMSG),LIMPMSG MOVE MESSAGE TEXT IN             02447
         DROPMS                                                         02448
NOLIMPRT PUT   SYSPRINT,LINE                                            02449
NOLIMHEX DS    0H                                                       02450
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                 02451
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                        02452
         BO    INITEBCD                                                 02453
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                02454
         BO    INITAS3                                                  02455
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                02456
         BO    INITAS4                                                  02457
         B     OPENOINT                                                 02458
INITEBCD DS    0H                                                       02459
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN         02460
         B     NOCORPRT                                                 02461
INITAS3  DS    0H                                                       02462
         ADRSMS                                                         02463
         MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN         02464
         MVC   INITCOPD,INITCREA                                        02465
         DROPMS                                                         02466
         B     NOCORPRT                                                 02467
INITAS4  DS    0H                                                       02468
         ADRSMS                                                         02469
         MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN         02470
         MVC   INITCOPD,INITCREA                                        02471
         DROPMS                                                         02472
         B     NOCORPRT                                                 02473
OPENOINT DS    0H                                                       02474
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *   02475
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT     02476
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE             02477
         ST    R7,SAVE7REG                                              02478
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE      02479
         L     R7,SAVE7REG                                              02480
NOCORPRT DS    0H                                                       02481
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *   02482
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02483
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?           02484
         BZ    NOLIMFMS         NO, SKIP MESSAGE                        02485
         ADRSMS                                                         02486
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02487
         PTMSN LIMFMSG          MOVE MESSAGE TEXT IN                    02488
         DROPMS                                                         02489
NOLIMFMS DS    0H                                                       02490
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02491
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02492
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?          02493
         BZ    NOLIMLMR         NO, SKIP MESSAGE                        02494
         ADRSMS                                                         02495
         MVC   LIMLMSG+11(10),LABCHAR                                   02496
         PTMSN LIMLMSG          MOVE MESSAGE TEXT IN                    02497
         DROPMS                                                         02498
NOLIMLMR DS    0H                                                       02499
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02500
         TM    PARMFLG5,X'04'       WRITE LTMS ENABLED?                 02501
         BZ    NOLTMSG0             NO. DON'T PRINT MESSAGE.            02502
         ADRSMS                                                         02503
         MVC   LTMWMSG+11(10),LTMCHAR                                   02504
         MVC   LINE(133),LTMWMSG    MOVE MESSAGE TEXT IN                02505
         DROPMS                                                         02506
         PUT   SYSPRINT,LINE        AND PRINT IT                        02507
NOLTMSG0 DS    0H                                                       02508
**** ---- >>> Message that labels are being stripped <<< ---- below *** 02509
         TM    PARMFLG4,X'02'     Are labels being stripped?            02510
         BZ    NOSTRMSG                                                 02511
         PTMS  STRPMSG            Show we're stripping labels           02512
NOSTRMSG DS    0H                                                       02513
**** ---- >>> Message that labels are being stripped <<< ---- above *** 02514
OPENSHOO DS    0H                                                       02515
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02516
         BZ    OPENSHOE                   NO. DON'T PRINT SHOOVL HEADER 02522
         ADRSMS                                                         02517
         PTMSN SHOOVLHU,CC=0                                            02518
         PTMSN SHOOVLHD                   PRINT HEADER FOR SHOOVL       02519
         PTMSN SHOOVLHU                                                 02520
         DROPMS                                                         02521
OPENSHOE DS    0H                                                       02523
OPEN0    DS    0H                                                       02524
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                         02525
         BZ    OPEN1          NO                                        02526
*        OPEN  (OUT1,OUTPUT)                                            02527
         L     R2,=A(OUT1)                                              02528
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02529
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02530
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02531
         BZ    OPEN0EN                    NO. SKIP ITS CODE.            02532
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02533
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02534
         LA    R2,OUT1                    LOAD DCB ADDRESS IN IOB       02535
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02536
         MVC   OVOLMSGH+1(5),DDOUT1       MOVE DD NAME LIT INTO MSG     02537
         L     R2,SAVER2X1                RESTORE R2                    02538
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02539
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02540
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02541
         USING VOL1STOR,R2                TELL ASSEMBLER                02542
         MVC   VOL1LB1,VOL1AREA           STORE IMAGE IN PROPER SLOT    02543
         MVC   VOL1LB1-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02544
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02545
         DROP  R2                                                       02546
OPEN0EN  DS    0H                                                       02547
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02548
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                         02549
         BZ    OPEN2          NO                                        02550
*        OPEN  (OUT2,OUTPUT)                                            02551
         L     R2,=A(OUT2)                                              02552
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02553
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02554
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02555
         BZ    OPEN1EN                    NO. SKIP ITS CODE.            02556
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02557
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02558
         LA    R2,OUT2                    LOAD DCB ADDRESS IN IOB       02559
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02560
         MVC   OVOLMSGH+1(5),DDOUT2       MOVE DD NAME LIT INTO MSG     02561
         L     R2,SAVER2X1                RESTORE R2                    02562
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02563
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02564
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02565
         USING VOL1STOR,R2                TELL ASSEMBLER                02566
         MVC   VOL1LB2,VOL1AREA           STORE IMAGE IN PROPER SLOT    02567
         MVC   VOL1LB2-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02568
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02569
         DROP  R2                                                       02570
OPEN1EN  DS    0H                                                       02571
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02572
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                         02573
         BZ    OPEN3          NO                                        02574
*        OPEN  (OUT3,OUTPUT)                                            02575
         L     R2,=A(OUT3)                                              02576
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02577
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02578
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02579
         BZ    OPEN2EN                    NO. SKIP ITS CODE.            02580
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02581
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02582
         LA    R2,OUT3                    LOAD DCB ADDRESS IN IOB       02583
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02584
         MVC   OVOLMSGH+1(5),DDOUT3       MOVE DD NAME LIT INTO MSG     02585
         L     R2,SAVER2X1                RESTORE R2                    02586
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02587
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02588
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02589
         USING VOL1STOR,R2                TELL ASSEMBLER                02590
         MVC   VOL1LB3,VOL1AREA           STORE IMAGE IN PROPER SLOT    02591
         MVC   VOL1LB3-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02592
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02593
         DROP  R2                                                       02594
OPEN2EN  DS    0H                                                       02595
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02596
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                         02597
         BZ    OPEN4          NO                                        02598
*        OPEN  (OUT4,OUTPUT)                                            02599
         L     R2,=A(OUT4)                                              02600
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02601
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02602
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02603
         BZ    OPEN3EN                    NO. SKIP ITS CODE.            02604
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02605
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02606
         LA    R2,OUT4                    LOAD DCB ADDRESS IN IOB       02607
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02608
         MVC   OVOLMSGH+1(5),DDOUT4       MOVE DD NAME LIT INTO MSG     02609
         L     R2,SAVER2X1                RESTORE R2                    02610
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02611
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02612
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02613
         USING VOL1STOR,R2                TELL ASSEMBLER                02614
         MVC   VOL1LB4,VOL1AREA           STORE IMAGE IN PROPER SLOT    02615
         MVC   VOL1LB4-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02616
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02617
         DROP  R2                                                       02618
OPEN3EN  DS    0H                                                       02619
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02620
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                         02621
         BZ    OPEN5          NO                                        02622
*        OPEN  (OUT5,OUTPUT)                                            02623
         L     R2,=A(OUT5)                                              02624
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02625
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02626
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02627
         BZ    OPEN4EN                    NO. SKIP ITS CODE.            02628
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02629
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02630
         LA    R2,OUT5                    LOAD DCB ADDRESS IN IOB       02631
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02632
         MVC   OVOLMSGH+1(5),DDOUT5       MOVE DD NAME LIT INTO MSG     02633
         L     R2,SAVER2X1                RESTORE R2                    02634
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02635
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02636
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02637
         USING VOL1STOR,R2                TELL ASSEMBLER                02638
         MVC   VOL1LB5,VOL1AREA           STORE IMAGE IN PROPER SLOT    02639
         MVC   VOL1LB5-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02640
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02641
         DROP  R2                                                       02642
OPEN4EN  DS    0H                                                       02643
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02644
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                         02645
         BZ    OPEN6          NO                                        02646
*        OPEN  (OUT6,OUTPUT)                                            02647
         L     R2,=A(OUT6)                                              02648
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02649
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02650
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02651
         BZ    OPEN5EN                    NO. SKIP ITS CODE.            02652
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02653
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02654
         LA    R2,OUT6                    LOAD DCB ADDRESS IN IOB       02655
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02656
         MVC   OVOLMSGH+1(5),DDOUT6       MOVE DD NAME LIT INTO MSG     02657
         L     R2,SAVER2X1                RESTORE R2                    02658
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02659
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02660
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02661
         USING VOL1STOR,R2                TELL ASSEMBLER                02662
         MVC   VOL1LB6,VOL1AREA           STORE IMAGE IN PROPER SLOT    02663
         MVC   VOL1LB6-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02664
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02665
         DROP  R2                                                       02666
OPEN5EN  DS    0H                                                       02667
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02668
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                         02669
         BZ    OPEN7          NO                                        02670
*        OPEN  (OUT7,OUTPUT)                                            02671
         L     R2,=A(OUT7)                                              02672
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02673
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02674
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02675
         BZ    OPEN6EN                    NO. SKIP ITS CODE.            02676
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02677
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02678
         LA    R2,OUT7                    LOAD DCB ADDRESS IN IOB       02679
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02680
         MVC   OVOLMSGH+1(5),DDOUT7       MOVE DD NAME LIT INTO MSG     02681
         L     R2,SAVER2X1                RESTORE R2                    02682
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02683
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02684
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02685
         USING VOL1STOR,R2                TELL ASSEMBLER                02686
         MVC   VOL1LB7,VOL1AREA           STORE IMAGE IN PROPER SLOT    02687
         MVC   VOL1LB7-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02688
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02689
         DROP  R2                                                       02690
OPEN6EN  DS    0H                                                       02691
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02692
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                         02693
         BZ    OPEN8          NO                                        02694
         OPEN  (OUT8,OUTPUT)                                            02695
         L     R2,=A(OUT8)                                              02696
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02697
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02698
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02699
         BZ    OPEN7EN                    NO. SKIP ITS CODE.            02700
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02701
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02702
         LA    R2,OUT8                    LOAD DCB ADDRESS IN IOB       02703
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02704
         MVC   OVOLMSGH+1(5),DDOUT8       MOVE DD NAME LIT INTO MSG     02705
         L     R2,SAVER2X1                RESTORE R2                    02706
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02707
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02708
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02709
         USING VOL1STOR,R2                TELL ASSEMBLER                02710
         MVC   VOL1LB8,VOL1AREA           STORE IMAGE IN PROPER SLOT    02711
         MVC   VOL1LB8-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02712
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02713
         DROP  R2                                                       02714
OPEN7EN  DS    0H                                                       02715
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02716
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                         02717
         BZ    OPEN9          NO                                        02718
*        OPEN  (OUT9,OUTPUT)                                            02719
         L     R2,=A(OUT9)                                              02720
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02721
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02722
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02723
         BZ    OPEN8EN                    NO. SKIP ITS CODE.            02724
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02725
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02726
         LA    R2,OUT9                    LOAD DCB ADDRESS IN IOB       02727
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02728
         MVC   OVOLMSGH+1(5),DDOUT9       MOVE DD NAME LIT INTO MSG     02729
         L     R2,SAVER2X1                RESTORE R2                    02730
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02731
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02732
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02733
         USING VOL1STOR,R2                TELL ASSEMBLER                02734
         MVC   VOL1LB9,VOL1AREA           STORE IMAGE IN PROPER SLOT    02735
         MVC   VOL1LB9-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL   02736
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02737
         DROP  R2                                                       02738
OPEN8EN  DS    0H                                                       02739
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02740
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                        02741
         BZ    OPEN10         NO                                        02742
*        OPEN  (OUT10,OUTPUT)                                           02743
         L     R2,=A(OUT10)                                             02744
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02745
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02746
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02747
         BZ    OPEN9EN                    NO. SKIP ITS CODE.            02748
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02749
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02750
         LA    R2,OUT10                   LOAD DCB ADDRESS IN IOB       02751
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02752
         MVC   OVOLMSGH+1(5),DDOUT10      MOVE DD NAME LIT INTO MSG     02753
         L     R2,SAVER2X1                RESTORE R2                    02754
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02755
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02756
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02757
         USING VOL1STOR,R2                TELL ASSEMBLER                02758
         MVC   VOL1LB10,VOL1AREA          STORE IMAGE IN PROPER SLOT    02759
         MVC   VOL1LB10-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02760
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02761
         DROP  R2                                                       02762
OPEN9EN  DS    0H                                                       02763
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02764
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                        02765
         BZ    OPEN11         NO                                        02766
*        OPEN  (OUT11,OUTPUT)                                           02767
         L     R2,=A(OUT11)                                             02768
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02769
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02770
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02771
         BZ    OPEN10EN                   NO. SKIP ITS CODE.            02772
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02773
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02774
         LA    R2,OUT11                   LOAD DCB ADDRESS IN IOB       02775
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02776
         MVC   OVOLMSGH+1(5),DDOUT11      MOVE DD NAME LIT INTO MSG     02777
         L     R2,SAVER2X1                RESTORE R2                    02778
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02779
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02780
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02781
         USING VOL1STOR,R2                TELL ASSEMBLER                02782
         MVC   VOL1LB11,VOL1AREA          STORE IMAGE IN PROPER SLOT    02783
         MVC   VOL1LB11-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02784
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02785
         DROP  R2                                                       02786
OPEN10EN DS    0H                                                       02787
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02788
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                        02789
         BZ    OPEN12         NO                                        02790
*        OPEN  (OUT12,OUTPUT)                                           02791
         L     R2,=A(OUT12)                                             02792
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02793
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02794
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02795
         BZ    OPEN11EN                   NO. SKIP ITS CODE.            02796
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02797
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02798
         LA    R2,OUT12                   LOAD DCB ADDRESS IN IOB       02799
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02800
         MVC   OVOLMSGH+1(5),DDOUT12      MOVE DD NAME LIT INTO MSG     02801
         L     R2,SAVER2X1                RESTORE R2                    02802
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02803
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02804
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02805
         USING VOL1STOR,R2                TELL ASSEMBLER                02806
         MVC   VOL1LB12,VOL1AREA          STORE IMAGE IN PROPER SLOT    02807
         MVC   VOL1LB12-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02808
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02809
         DROP  R2                                                       02810
OPEN11EN DS    0H                                                       02811
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02812
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                        02813
         BZ    OPEN13         NO                                        02814
*        OPEN  (OUT13,OUTPUT)                                           02815
         L     R2,=A(OUT13)                                             02816
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02817
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02818
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02819
         BZ    OPEN12EN                   NO. SKIP ITS CODE.            02820
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02821
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02822
         LA    R2,OUT13                   LOAD DCB ADDRESS IN IOB       02823
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02824
         MVC   OVOLMSGH+1(5),DDOUT13      MOVE DD NAME LIT INTO MSG     02825
         L     R2,SAVER2X1                RESTORE R2                    02826
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02827
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02828
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02829
         USING VOL1STOR,R2                TELL ASSEMBLER                02830
         MVC   VOL1LB13,VOL1AREA          STORE IMAGE IN PROPER SLOT    02831
         MVC   VOL1LB13-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02832
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02833
         DROP  R2                                                       02834
OPEN12EN DS    0H                                                       02835
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02836
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                        02837
         BZ    OPEN14         NO                                        02838
*        OPEN  (OUT14,OUTPUT)                                           02839
         L     R2,=A(OUT14)                                             02840
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02841
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02842
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02843
         BZ    OPEN13EN                   NO. SKIP ITS CODE.            02844
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02845
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02846
         LA    R2,OUT14                   LOAD DCB ADDRESS IN IOB       02847
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02848
         MVC   OVOLMSGH+1(5),DDOUT14      MOVE DD NAME LIT INTO MSG     02849
         L     R2,SAVER2X1                RESTORE R2                    02850
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02851
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02852
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02853
         USING VOL1STOR,R2                TELL ASSEMBLER                02854
         MVC   VOL1LB14,VOL1AREA          STORE IMAGE IN PROPER SLOT    02855
         MVC   VOL1LB14-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02856
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02857
         DROP  R2                                                       02858
OPEN13EN DS    0H                                                       02859
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02860
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                        02861
         BZ    OPEN15         NO                                        02862
*        OPEN  (OUT15,OUTPUT)                                           02863
         L     R2,=A(OUT15)                                             02864
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02865
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02866
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02867
         BZ    OPEN14EN                   NO. SKIP ITS CODE.            02868
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02869
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02870
         LA    R2,OUT15                   LOAD DCB ADDRESS IN IOB       02871
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02872
         MVC   OVOLMSGH+1(5),DDOUT15      MOVE DD NAME LIT INTO MSG     02873
         L     R2,SAVER2X1                RESTORE R2                    02874
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02875
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02876
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02877
         USING VOL1STOR,R2                TELL ASSEMBLER                02878
         MVC   VOL1LB15,VOL1AREA          STORE IMAGE IN PROPER SLOT    02879
         MVC   VOL1LB15-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02880
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02881
         DROP  R2                                                       02882
OPEN14EN DS    0H                                                       02883
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02884
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                        02885
         BZ    READIN         NO                                        02886
*        OPEN  (OUT16,OUTPUT)                                           02887
         L     R2,=A(OUT16)                                             02888
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.  02889
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below                02890
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?   02891
         BZ    OPEN15EN                   NO. SKIP ITS CODE.            02892
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE        02893
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE           02894
         LA    R2,OUT16                   LOAD DCB ADDRESS IN IOB       02895
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB           02896
         MVC   OVOLMSGH+1(5),DDOUT16      MOVE DD NAME LIT INTO MSG     02897
         L     R2,SAVER2X1                RESTORE R2                    02898
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE    02899
         ST    R2,SAVER2X1                SAVE R2 AGAIN                 02900
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA        02901
         USING VOL1STOR,R2                TELL ASSEMBLER                02902
         MVC   VOL1LB16,VOL1AREA          STORE IMAGE IN PROPER SLOT    02903
         MVC   VOL1LB16-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL   02904
         L     R2,SAVER2X1                RESTORE R2 AGAIN              02905
         DROP  R2                                                       02906
OPEN15EN DS    0H                                                       02907
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above                02908
         EJECT                                                          02909
* --------------------------------------------------------- *           02910
*                                                           *           02911
*  READ INPUT                                               *           02912
*                                                           *           02913
* --------------------------------------------------------- *           02914
*                                                           *           02915
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *           02916
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *           02917
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *           02918
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *           02919
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *           02920
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *           02921
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *           02922
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*           02923
*                                                           *           02924
* --------------------------------------------------------- *           02925
READIN   DS    0H                                                       02926
*---------------------------- Write Leading Tapemarks ----- below -->   02927
         TM    PARMFLG1,X'20'       Is LTMSKIP on?                      02928
         BO    NOWRLTMS             Yes. Don't manufacture passed LTMs. 02929
         TM    RESLTMWF,X'01'       Come from RESETIN for LABADDIN?     02930
         BO    READWLTM             Yes. Manufacture LTMs if any.       02931
         TM    PARMFLG5,X'08'       Set to write leading tapemarks?     02932
         BZ    NOWRLTMS             No. Only regular processing.        02933
READWLTM DS    0H                                                       02934
         L     R1,LTMCNTR           Check descending LTM counter        02935
*                                   Previously initialized to LTMNUMB   02936
         C     R1,=F'0'             Is it zero now?                     02937
         BE    NOWRLTMS             Yes. No more writing LTMs.          02938
         AP    LTMCOUNT,=P'1'                                           02939
         L     R0,LTMBINAD                                              02940
         A     R0,=F'1'                                                 02941
         ST    R0,LTMBINAD                                              02942
         BCTR  R1,0                 Not yet 0. Lower it by one.         02943
         ST    R1,LTMCNTR           And store it away for next pass.    02944
* --- >>   Diagnostics for tape mark writing << --- * below             02945
         TM    PARMFLG6,X'04'                                           02946
         BZ    DGSTRI01                                                 02947
         MVI   LINE-1,X'40'                                             02948
         MVC   LINE,LINE-1                                              02949
         MVC   LINE(11),=C' STRIPFLG: '                                 02950
         HEX   LINE+11,1,STRIPFLG                                       02951
         MVI   LINE+15,C'1'                                             02952
         MVC   LINE+20(10),=C'ISLBLFLG: '                               02953
         HEX   LINE+30,1,ISLBLFLG                                       02954
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         02955
         PUT   SYSPRINT,LINE                                            02956
DGSTRI01 DS    0H                                                       02957
* --- >>   Diagnostics for tape mark writing << --- * above             02958
         MVI   OUTCCW,X'1F'         Load tape mark CCW opcode.          02959
         MVC   OUTCCW+6(2),=X'0001'    Put 1 in bytes field, and        02960
         ADRSMS                                                         02961
         MVC   LTMRNUM(11),LTMCTPAT                                     02962
         ED    LTMRNUM(11),LTMCOUNT+1                                   02963
         MVC   LTMRPTI,WRITTEN      Report tape mark written.           02964
         PTMSN LTMRPT               Write report line.                  02965
         DROPMS                                                         02966
         B     WRITE1               Write the tape mark to outputs.     02967
NOWRLTMS DS    0H                                                       02968
*---------------------------- Write Leading Tapemarks ----- above -->   02969
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                  02970
         BO    TLITWRIT                                                 02971
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?          02972
         BO    TLITASCI                                                 02973
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?          02974
         BO    TLITASCI                                                 02975
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR          * 02976
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                    02977
         MVI   INECB,X'00'    INITIALIZE ECB                            02978
* ------------------------------------------------------------------ *  02979
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *  02980
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *  02981
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *  02982
* ------------------------------------------------------------------ *  02983
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                 02984
         BZ    NONLSL0        NO. IGNORE THIS CODE                      02985
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN         02986
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE          02987
NONLSL0  DS    0H                                                       02988
* -----------------------------------------------------------         * 02989
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE              02990
***** --------------- LIMITING FILES ------------------ ***** BELOW *   02991
         TM    PARMFLG3,X'02'     LIMITING FILES?                       02992
         BZ    INOLIMIT           NO - BYPASS THIS CODE                 02993
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?              02994
         BZ    INOLIMIT           NOT YET - JUST GO ON                  02995
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE    02996
*                                 AND DON'T DO MORE READS OF INPUT TAPE 02997
INOLIMIT DS    0H                                                       02998
***** --------------- LIMITING FILES ------------------ ***** ABOVE *   02999
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *   03000
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                 03001
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS    03002
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK    03003
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                    03004
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ     03005
         L     R7,SAVE7RG3        RESTORE R7                            03006
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                    03007
NOLBDADJ DS    0H                                                       03008
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *   03009
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*        03010
*                                                                       03011
*       Since there is a possibility that the WRITE will                03012
*       not work for one of the output ddnames, we have                 03013
*       to save the total bytes successfully moved to the               03014
*       currently open output tapes.  Also file count for               03015
*       this tape, and block count for this file.                       03016
*                                                                       03017
         MVC   PRVBY,TOTBY        Total bytes before this READ          03018
         MVC   FILECNTP,FILECNT   Total file count before this READ     03019
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ    03020
*                                                                       03021
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*        03022
         EXCP  INIOB          READ                                      03023
         WAIT  ECB=INECB      WAIT FOR READ                             03024
* -- >  Display Tape Mark Reads  -  BELOW                               03025
         TM    INCSW+4,X'01'  WAS TM READ?                              03026
*        BO    READIN1        YES                                       03027
         BO    SHOWTMRD                                                 03028
         B     NOTMREAD                                                 03029
SHOWTMRD DS    0H                                                       03030
         TM    PARMFLG6,X'04'                                           03031
         BZ    DGSTRI0R                                                 03032
         MVI   LINE-1,X'40'                                             03033
         MVC   LINE,LINE-1                                              03034
         MVC   LINE+1(31),=C'A Tape Mark has been read !!    1'         03035
         PUT   SYSPRINT,LINE                                            03036
DGSTRI0R DS    0H                                                       03037
         B     READIN1                                                  03038
NOTMREAD DS    0H                                                       03039
* -- >  Display Tape Mark Reads  -  ABOVE                               03040
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?               03041
         BNE   INERR          NO -- ERROR                               03042
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                   03043
*        LH    R2,INCCW+6     R2=READ LENGTH                          * 03044
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY            * 03045
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                      * 03046
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER             * 03047
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT                  * 03048
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT              * 03049
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER             * 03050
         SR    R2,R3          R2=ACTUAL LENGTH READ                     03051
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED             03052
         MVC   BYTESCOH(2),=H'0'  Make sure upper halfword is X'0000'   03053
* ------------------------------------------------------------------- * 03054
*  The BYTESMVD field is now a fullword that should contain the number  03055
*  of bytes moved by the currently executed EXCP READ.                  03056
*                                                                       03057
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***        03058
         TM    PARMFLG6,X'20'     Reporting footages?                   03059
         BZ    NOFEET01           No. Don't execute this code           03060
         MVC   BLKSZWRK(4),BYTESMVD   No longer dependent on R2.        03061
*        ST    R2,BLKSZWRK        Fullword arithmetic, save count       03062
         CLC   BLKSZE,BLKSZWRK    Compare to what was there before      03063
         BNL   NOFEET01           Prev BLKSZE not higher than current?  03064
         MVC   BLKSZE,BLKSZWRK    Less, replace with current blocksize  03065
NOFEET01 DS    0H                                                       03066
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***        03067
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below  03068
         TM    PARMFLG6,X'01'     Are we reporting Max-Min blocksizes?  03069
         BZ    NOMNMXRP           No. Skip all this code.               03070
         ST    R1,SAVE1RG1        Yes. Start by saving work reg.        03071
         L     R1,BYTESMVD        Load it with number of bytes moved.   03072
         C     R1,MAXBLK          Bigger than previous maximum?         03073
         BNH   TRYMINBK           No. Don't adjust maxmimum.            03074
         ST    R1,MAXBLK          Yes. Set new maximum.                 03075
TRYMINBK DS    0H                                                       03076
         C     R1,MINBLK          Smaller than previous minimum?        03077
         BNL   TRYNOMOR           No. Don't adjust minimum.             03078
         ST    R1,MINBLK          Yes. Reduce minimum to current quant. 03079
TRYNOMOR DS    0H                                                       03080
         L     R1,SAVE1RG1        Restore work register.                03081
NOMNMXRP DS    0H                                                       03082
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above  03083
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ         03084
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO          03085
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*        03086
         ST    R7,TOTB7REG        Save BAL Register                     03087
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          03088
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER      03089
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK             03090
         L     R7,TOTB7REG        Restore BAL Register                  03091
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*        03092
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*            03093
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                    03094
         BZ    NPRTHEX           NO. SKIP THIS CODE.                    03095
         ST    R7,R7HXPRT        SAVE R7.                               03096
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.           03097
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT            03098
         BCTR  R1,0              LOWER BY ONE                           03099
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS              03100
         L     R7,R7HXPRT        RESTORE R7.                            03101
NPRTHEX  DS    0H                                                       03102
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*            03103
**** ----  BYTE COUNTS ---- BELOW                                       03104
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                    03105
         BZ    INNOBYTE       NO, SKIP INCREMENT                        03106
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED              03107
         LA    R3,DBIN        POINT REGISTER TO COUNTER                 03108
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                 03109
INNOBYTE DS    0H                                                       03110
**** ----  BYTE COUNTS ---- ABOVE                                       03111
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              * 03112
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST?         * 03113
         BNE   READGO1        NO. SKIP THIS PROCESSING.               * 03114
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ            * 03115
* ------------------------------------------------------------------*   03116
*    Call the LABELCHK program and get the returns.                 *   03117
* ------------------------------------------------------------------*   03118
         L     R15,LABCHENT       Get entry point of called program     03119
         STM   R1,R3,SAVE13LC     Save R1 and R2 and R3.                03120
         LA    R1,PARMFLGS        Point R1 to parm flags.               03121
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   03122
         L     R3,=A(INAREA)      Point R3 to address of INAREA.        03123
         BALR  R14,R15                 Do CALL.                         03124
         ST    R2,SAVELBCK             Address of returned user area    03125
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   03126
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          03127
*                                 A call to LABCHECK overlays INAREA,   03128
*                                 so if a LABCHECK routine alters       03129
*                                 a label, the alteration will be       03130
*                                 written out to the output tapes.      03131
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA    03132
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   03133
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?  03134
         BO    CLOSMALL           Yes. Close all files and finish up.   03135
* ------------------------------------------------------------------*   03136
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL               * 03137
*                             FORMATS, AND SET FLAGS                  * 03138
*                             ACCORDINGLY.  OPTIONALLY                * 03139
*                             PRINT LABEL INFO FOUND.                 * 03140
* ------------------------------------------------------------------ *  03141
* --------------------------------- KEEPVOL processing - below          03142
READKVOL DS    0H         Only do this code for one VOL1 label,         03143
*                         because maybe we have a pernicious input      03144
*                         tape with more than one VOL1 label.           03145
* ------------------------------------------------------------------ *  03146
         TM    PARMFLG6,X'08'     Keep output VOL1 (KEEPVOL) in effect? 03147
         BZ    READKVEN           No. Skip this code.                   03148
         TM    READKFLG,X'01'     Don't execute this code twice.        03149
         BO    READKVEN           Flag on, we were already here.        03150
         OI    READKFLG,X'01'     Turn this flag on after first time.   03151
         TM    LBLFLAG,X'04'      Is this a VOL1 label?                 03152
         BZ    READKVEN           No. Nothing to do here.               03153
         TM    ISLBLFLG,X'01'     EBCDIC?                               03154
         BO    READKVEB           Yes. Deal with EBCDIC VOL1 label.     03155
         TM    ISLBLFLG,X'02'     ASCII?                                03156
         BO    READKVAS           Yes. Deal with ASCII VOL1 label.      03157
         B     READKVEN           Fall through. Get out.                03158
READKVEB DS    0H                                                       03159
         OI    INVOLFLG,X'11'     Turn on eligibility flag + EBCDIC     03160
         B     READKVDM           Finished setting flags.               03161
READKVAS DS    0H                                                       03162
         OI    INVOLFLG,X'02'     Show ASCII.                           03163
         CLI   INAREA+79,X'33'    Is ASCII VOL1 a Type 3?               03164
         BE    READKVT3           Yes. Turn on appropriate flags.       03165
         CLI   INAREA+79,X'34'    Is ASCII VOL1 a Type 4?               03166
         BE    READKVT4           Yes. Turn on appropriate flags.       03167
         NI    INVOLFLG,X'FF'-X'10'    Turn off eligibility flag.       03168
         B     READKVEN           No. Not eligible to keep this VOL1.   03169
READKVT3 DS    0H                                                       03170
         OI    INVOLFLG,X'14'     Eligibility plus Type 3               03171
         B     READKVDM                                                 03172
READKVT4 DS    0H                                                       03173
         OI    INVOLFLG,X'18'     Eligibility plus Type 4               03174
READKVDM DS    0H                 Copy input VOL1 to storage slot.      03175
         ST    R2,SAVER2X1             Save R2                          03176
         L     R2,VOL1SENT             Load VOL1 storage area CSECT     03177
         USING VOL1STOR,R2             Tell Assembler                   03178
         MVC   VOL1LBIN,INAREA         Store VOL1 image in proper slot  03179
         MVC   VOL1LBIN-1(1),INVOLFLG  Flag eligible VOL1 label + type  03180
         L     R2,SAVER2X1             Restore R2                       03181
         DROP  R2                                                       03182
READKVEN DS    0H                                                       03183
* --------------------------------- KEEPVOL processing - above          03184
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW             03185
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?               03186
         BZ    LBLNOCNT                                                 03187
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?        03188
         BZ    LBLNOCNT                                                 03189
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          03190
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER       03191
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL             03192
LBLNOCNT DS    0H                                                       03193
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW             03194
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?              03195
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING       03196
****-->>                below  -  Test of LRECL=80 and not a label      03197
         ST    R2,SAVER2A         Save contents of R2                   03198
         L     R2,BYTESMVD        Get size of this record.              03199
         C     R2,=F'80'          80 bytes exactly in record?           03200
         BNE   YSTRPFLG           No. Not an exception.                 03201
         TM    ISLBLFLG,X'03'     Was last input record a label?        03202
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.           03203
YSTRPFLG DS    0H                                                       03204
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING             03205
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.    03206
         L     R2,SAVER2A                                               03207
****-->>                above  -  Test of LRECL=80 and not a label      03208
         B     READGO1            AND CONTINUE READ PROCESSING          03209
STRNOSKP DS    0H                                                       03210
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE             03211
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE             03212
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              * 03213
*                                                                     * 03214
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.              * 03215
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                 03216
         BZ    READGO1            NO. WE CAN GO ON.                     03217
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?             03218
         BZ    READGO1            NO DON'T CHECK FOR SL                 03219
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG               03220
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   03221
         CLOSE (LABADDIN)                                               03222
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM           03223
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.              * 03224
         EJECT                                                          03225
*  ----------------------------------------------------------------  *  03226
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.  03227
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE      03228
*                           INPUT IS FROM THE EXTERNAL LABEL FILE       03229
*  ----------------------------------------------------------------  *  03230
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?              03231
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.              03232
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****       03233
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?            03234
         BZ    STILTAPE                                                 03235
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?       03236
         BZ    STILTAPE                                                 03237
         B     WRTTAPMK                                                 03238
STILTAPE DS    0H                                                       03239
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****       03240
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?   03241
         BZ    DOTHEGET             NO. DO THE FILE GETS.               03242
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                03243
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA   03244
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.         03245
DOTHEGET DS    0H                                                       03246
*** ---                                                                 03247
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?             03248
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                  03249
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?              03250
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                03251
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.  03252
DOGETALW DS    0H                                                       03253
*** ---                                                                 03254
         GET   LABADDIN,EXTLBLIN                                        03255
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                   03256
         BE    INEXTLAB         IF IT IS, IGNORE IT.                    03257
*------------------------------------> Hex Print Limit - Below          03258
         TM    PARMFLG5,X'20'          HEX PRINT ON?                    03259
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT           03260
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?    03261
         BE    NOHXPRAX                          Yes. Reset count.      03262
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?     03263
         BNE   NOHXPREX                        No. Don't reset count.   03264
NOHXPRAX DS    0H                                                       03265
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF          03266
NOHXPREX DS    0H                                                       03267
*------------------------------------> Hex Print Limit - Above          03268
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                       03269
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE       03270
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN    03271
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                03272
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                       03273
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS          03274
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN  03275
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER               03276
* ---------------------------------  EOV2EOF  BELOW  ------------- *    03277
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN 03278
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV            03279
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                    03280
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT           03281
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER         03282
TRAIXEOV DS    0H                                                       03283
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD    03284
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER              03285
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?     03286
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT            03287
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER            03288
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.          03289
NTRALEOV DS    0H                                                       03290
* ---------------------------------  EOV2EOF  ABOVE  ------------- *    03291
*                                                                       03292
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.   03293
*                                                                       03294
* ------     Hex Print records from External Labels    ----  below      03295
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?             03296
         BZ    EXTNOPRT             NO, SO BYPASS THIS                  03297
         ST    R7,R7HXPRT           SAVE R7.                            03298
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.        03299
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT         03300
         BCTR  R1,0                 LOWER BY ONE                        03301
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS           03302
         L     R7,R7HXPRT           RESTORE R7.                         03303
EXTNOPRT DS    0H                                                       03304
* ------     Hex Print records from External Labels    ----  above      03305
* -- >                                                                  03306
ASCIITST DS    0H                                                       03307
         CLI   EXTLBLIN,X'56'              ASCII V                      03308
         BE    ISASCIIG                                                 03309
         CLI   EXTLBLIN,X'45'              ASCII E                      03310
         BE    ISASCIIG                                                 03311
         CLI   EXTLBLIN,X'48'              ASCII H                      03312
         BE    ISASCIIG                                                 03313
         CLI   EXTLBLIN,X'55'              ASCII U                      03314
         BE    ISASCIIG                                                 03315
         CLI   EXTLBLIN,X'2D'              ASCII DASH                   03316
         BE    ISASCIIG                                                 03317
         B     ISNTASCI                                                 03318
ISASCIIG DS    0H                                                       03319
         OI    ASCIIFLG,X'01'              ASSUME ASCII                 03320
         OI    EXASCFLG,X'01'              ASSUME ASCII                 03321
         B     ASCIITSE                                                 03322
ISNTASCI DS    0H                                                       03323
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC   03324
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC   03325
ASCIITSE DS    0H                                                       03326
* -- >                                                                  03327
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                  03328
         BE    NASCVOL1                    YES. TREAT AS A VOL1.        03329
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                 03330
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS           03331
NASCVOL1 DS    0H                                                       03332
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS   03333
*** --- >>  Security off?  -  below                                     03334
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 03335
         BZ    NOSECV01             No. Don't affect these fields.      03336
         TM    ASCIIFLG,X'01'       Only turn off security if ASCII.    03337
         BO    NOSECV01             Otherwise, no security byte here.   03338
         MVI   EXTLBLIN+10,X'20'    Move in ASCII blank.                03339
NOSECV01 DS    0H                                                       03340
*** --- >>  Security off?  -  above                                     03341
         B     GOTVOL01             PROCESS THE VOL1                    03342
NLABVOL1 DS    0H                                                       03343
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW               03344
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                  03345
         BE    NASCHDR1                    YES. TREAT AS A HDR1.        03346
         CLC   EXTLBLIN(4),=C'HDR1'                                     03347
         BNE   NLABHDR1                                                 03348
NASCHDR1 DS    0H                                                       03349
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN             03350
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                   03351
*** --- >>  Security off?  -  below                                     03352
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 03353
         BZ    NOSCEHE2             No. Don't affect these fields.      03354
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        03355
         BO    NOSCEHA1             Yes, turn off appropriate security. 03356
         B     NOSCEHE1             Otherwise do it in EBCDIC.          03357
NOSCEHA1 DS    0H                                                       03358
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                03359
         B     NOSCEHE2                                                 03360
NOSCEHE1 DS    0H                                                       03361
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                03362
NOSCEHE2 DS    0H                                                       03363
*** --- >>  Security off?  -  above                                     03364
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                     03365
         B     ENDIBMSL                                                 03366
NLABHDR1 DS    0H                                                       03367
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                  03368
         BE    NASCHDR2                    YES. TREAT AS A HDR2.        03369
         CLC   EXTLBLIN(4),=C'HDR2'                                     03370
         BNE   NLABHDR2                                                 03371
NASCHDR2 DS    0H                                                       03372
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN             03373
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                   03374
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                     03375
         B     ENDIBMSL                                                 03376
NLABHDR2 DS    0H                                                       03377
***** ----- *****                                                       03378
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                  03379
         BE    NASCEOF1                    YES. TREAT AS A EOF1.        03380
         CLC   EXTLBLIN(4),=C'EOF1'                                     03381
         BNE   NLABEOF1                                                 03382
NASCEOF1 DS    0H                                                       03383
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN             03384
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            03385
*** --- >>  Security off?  -  below                                     03386
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 03387
         BZ    NOSCEEE2             No. Don't affect these fields.      03388
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        03389
         BO    NOSCEEA1             Yes, turn off appropriate security. 03390
         B     NOSCEEE1             Otherwise do it in EBCDIC.          03391
NOSCEEA1 DS    0H                                                       03392
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                03393
         B     NOSCEEE2                                                 03394
NOSCEEE1 DS    0H                                                       03395
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                03396
NOSCEEE2 DS    0H                                                       03397
*** --- >>  Security off?  -  above                                     03398
         B     ENDIBMSL                                                 03399
NLABEOF1 DS    0H                                                       03400
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                  03401
         BE    NASCEOF2                    YES. TREAT AS A EOF2.        03402
         CLC   EXTLBLIN(4),=C'EOF2'                                     03403
         BNE   NLABEOF2                                                 03404
NASCEOF2 DS    0H                                                       03405
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN             03406
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            03407
         B     ENDIBMSL                                                 03408
NLABEOF2 DS    0H                                                       03409
***** ----- *****                                                       03410
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                  03411
         BE    NASCEOV1                    YES. TREAT AS A EOV1.        03412
         CLC   EXTLBLIN(4),=C'EOV1'                                     03413
         BNE   NLABEOV1                                                 03414
NASCEOV1 DS    0H                                                       03415
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN            03416
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            03417
*** --- >>  Security off?  -  below                                     03418
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 03419
         BZ    NOSCEVE2             No. Don't affect these fields.      03420
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        03421
         BO    NOSCEVA1             Yes, turn off appropriate security. 03422
         B     NOSCEVE1             Otherwise do it in EBCDIC.          03423
NOSCEVA1 DS    0H                                                       03424
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                03425
         B     NOSCEVE2                                                 03426
NOSCEVE1 DS    0H                                                       03427
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                03428
NOSCEVE2 DS    0H                                                       03429
*** --- >>  Security off?  -  above                                     03430
         B     ENDIBMSL                                                 03431
NLABEOV1 DS    0H                                                       03432
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                  03433
         BE    NASCEOV2                    YES. TREAT AS A EOV2.        03434
         CLC   EXTLBLIN(4),=C'EOV2'                                     03435
         BNE   NLABEOV2                                                 03436
NASCEOV2 DS    0H                                                       03437
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN            03438
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            03439
         B     ENDIBMSL                                                 03440
NLABEOV2 DS    0H                                                       03441
ENDIBMSL DS    0H                                                       03442
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE               03443
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                  03444
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW             03445
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                    03446
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR      03447
* -------------- EOV2EOF BELOW ----------------- *                      03448
ISITEOV  DS    0H                                                       03449
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                    03450
         BE    ISASCEOV                   TREAT AS ASCII EOV            03451
         CLC   EXTLBLIN(3),=C'EOV'                                      03452
         BNE   NOEOF2V                                                  03453
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?               03454
         BZ    NOEOF2V                                                  03455
         MVC   EXTLBLIN(3),=C'EOF'                                      03456
         PTMS  EOVCHG                     MOVE IN MESSAGE               03457
         B     NOEOF2V                                                  03458
ISASCEOV DS    0H                                                       03459
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?               03460
         BZ    NOEOF2V                                                  03461
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD      03462
         PTMS  EOVCHG                     MOVE IN MESSAGE               03463
NOEOF2V  DS    0H                                                       03464
* -------------- EOV2EOF ABOVE ----------------- *                      03465
* ----------                                                            03466
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?     03467
         BZ    BLNOCORR             NO. SKIP THIS.                      03468
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                      03469
         BE    CORBLKCT                                                 03470
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1               03471
         BE    CORBLKCT                                                 03472
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                      03473
         BE    CORBLKCT                                                 03474
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1               03475
         BE    CORBLKCT                                                 03476
BLNOCORR B     EOFOREOV                                                 03477
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW         03478
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?               03479
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.        03480
         TM    PARMFLG3,X'80'       FIXING LABELS?                      03481
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING      03482
         MVC   EXTLBLIN(80),HDR2SAV                                     03483
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDR?                   03484
         BNE   MAKEEOF2                                                 03485
         MVC   EXTLBLIN(3),=X'454F46'      REPLACE IT WITH ASCII EOF.   03486
         B     NOMKEOF2                                                 03487
MAKEEOF2 DS    0H                                                       03488
         MVC   EXTLBLIN(3),=C'EOF'                                      03489
NOMKEOF2 DS    0H                                                       03490
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE         03491
* ----------                                                            03492
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                        03493
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET         03494
         CLC   EXTLBLIN(2),=X'454F'                                     03495
         BE    WRTLABEL                                                 03496
**** ---- ****                                                          03497
         CLC   EXTLBLIN(3),=X'55484C'                                   03498
         BE    ISASUHL                                                  03499
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                 03500
         BNE   NOTLUHL                                                  03501
ISASUHL  DS    0H                                                       03502
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS    03503
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS 03504
NOTLUHL  DS    0H                                                       03505
**** ---- ****                                                          03506
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                03507
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.            03508
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                    03509
         BE    WRTLABEL                                                 03510
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD        03511
ENDHEADR DS    0H                                                       03512
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD  03513
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE 03514
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER            03515
*** -----                                                               03516
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE           03517
         BZ    NOEODFL1                                                 03518
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK    03519
         B     ENDTRAIL                                                 03520
NOEODFL1 DS    0H                                                       03521
*** -----                                                               03522
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME           03523
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA        03524
ENDTRAIL DS    0H                                                       03525
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS        03526
         A     R0,=F'1'         ADD 1 TO COUNT                          03527
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                 03528
*** ---                                                                 03529
         TM    PARMFLG4,X'10'       LIMITING LABELS?                    03530
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.             03531
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?     03532
         BL    ENDNOLIM             NOT YET. GET OUT.                   03533
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.      03534
ENDNOLIM DS    0H                                                       03535
*** ---                                                                 03536
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                 03537
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN    03538
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD 03539
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS             03540
         B     WRTTAPMK                                                 03541
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS   03542
CORBLKCT DS    0H                                                       03543
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED    03544
         BZ    NOCORBLK          NO. BYPASS.                            03545
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED  03546
         BZ    NOCORBLK          NO. BYPASS.                            03547
*** ---  FIXING LABELS  --- ***                                         03548
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                03549
         BZ    NOFIXL1           NO. DON'T FIX.                         03550
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?              03551
         BO    NOFIXL1           YES. DON'T CREATE ONE.                 03552
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1           03553
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                   03554
         BNE   NOTASCHD                   NO.                           03555
         MVC   EXTLBLIN(3),=X'454F46'     YES. MOVE IN ASCII EOF        03556
         B     NOFIXL1                    AND GET OUT.                  03557
NOTASCHD DS    0H                                                       03558
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL             03559
NOFIXL1  DS    0H                                                       03560
*** ---  FIXING LABELS  --- ***                                         03561
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                   03562
         BE    NOFIXL1A                                                 03563
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                   03564
         BNE   NOFIXL1B                                                 03565
NOFIXL1A DS    0H                                                       03566
         ST    R5,R5HXPRT              Save register.                   03567
         L     R5,SAVTRTCS             Point to translation table CSECT 03568
         USING TRTCSECT,R5                                              03569
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  03570
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         03571
         L     R5,R5HXPRT              Restore R5                       03572
         DROP  R5                                                       03573
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                03574
         B     NOFIXL2                      AND NOT THE EBCDIC ONE      03575
NOFIXL1B DS    0H                                                       03576
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT     03577
NOFIXL2  DS    0H                                                       03578
         STM   R2,R3,SAVE2TO3                                           03579
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD    03580
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   03581
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                03582
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       03583
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             03584
         LM    R2,R3,SAVE2TO3                                           03585
NOCORBLK B     EOFOREOV                                                 03586
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS   03587
GOTVOL01 DS    0H                                                       03588
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT   03589
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"        03590
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                       03591
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?             03592
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT        03593
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS  03594
NOOVLALL DS    0H                                                       03595
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                       03596
         B     WRTLABEL                                                 03597
WRTLABEL OI    WRLBLFLG,X'01'                                           03598
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *       03599
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN      03600
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM         03601
* ----------------------------------------------------------------- *   03602
         L     R15,PRTLBENT       Get entry point of called program     03603
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                      03604
         LA    R1,PARMFLGS        Point R1 to parm flags.               03605
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.    03606
         BALR  R14,R15                 Do CALL.                         03607
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.    03608
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN     03609
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   03610
* ----------------------------------------------------------------- *   03611
NOPRTEXT DS    0H             Don't print external label on report      03612
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *       03613
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           03614
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE         03615
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                   03616
         B     WRITE1         WRITE LABEL RECORD                        03617
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE            03618
WRTTAPMK DS    0H                                                       03619
*** ----------------                                                    03620
         TM    INEODFLG,X'02'                                           03621
         BZ    NOEODNOW                                                 03622
         TM    WRLBLFLG,X'04'                                           03623
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR 03624
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?      03625
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.               03626
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS       03627
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR  03628
NOEODNOW DS    0H                                                       03629
*** ----------------                                                    03630
* --- >>   Diagnostics for tape mark writing << --- * below             03631
         TM    PARMFLG6,X'04'                                           03632
         BZ    DGSTRI02                                                 03633
         MVI   LINE-1,X'40'                                             03634
         MVC   LINE,LINE-1                                              03635
         MVC   LINE(11),=C' STRIPFLG: '                                 03636
         HEX   LINE+11,1,STRIPFLG                                       03637
         MVI   LINE+15,C'2'                                             03638
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03639
         HEX   LINE+30,1,ISLBLFLG                                       03640
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         03641
         PUT   SYSPRINT,LINE                                            03642
DGSTRI02 DS    0H                                                       03643
* --- >>   Diagnostics for tape mark writing << --- * above             03644
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                          03645
         B     WRITE1         WRITE TAPE MARK                           03646
* ------------------ SPECIAL ROUTINES ------------------------------- * 03647
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD   03648
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN        03649
         B     READIN             AND GO BACK WHERE YOU STARTED         03650
* ------------------ SPECIAL ROUTINES ------------------------------- * 03651
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS  03652
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                   03653
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- ** 03654
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                   03655
         BZ    NOFIXLBL          NO. DON'T TRY IT.                      03656
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING   03657
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                 03658
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE             03659
         B     CLOSMALL          FINISHED, GET OUT.                     03660
NOFIXLBL DS    0H                                                       03661
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- ** 03662
* --- >>   Diagnostics for tape mark writing << --- * below             03663
         TM    PARMFLG6,X'04'                                           03664
         BZ    DGSTRI03                                                 03665
         MVI   LINE-1,X'40'                                             03666
         MVC   LINE,LINE-1                                              03667
         MVC   LINE(11),=C' STRIPFLG: '                                 03668
         HEX   LINE+11,1,STRIPFLG                                       03669
         MVI   LINE+15,C'3'                                             03670
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03671
         HEX   LINE+30,1,ISLBLFLG                                       03672
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         03673
         PUT   SYSPRINT,LINE                                            03674
DGSTRI03 DS    0H                                                       03675
* --- >>   Diagnostics for tape mark writing << --- * above             03676
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN      03677
         B     READIN2        WRITE OUTPUTS AND FINISH                  03678
* ------------------------------------------------------------------- * 03679
*                                                                       03680
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                          03681
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                       03682
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                     03683
*      ALREADY.                                                         03684
*                                                                       03685
* ------------------ SPECIAL ROUTINES ------------------------------- * 03686
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.  03687
         EJECT                                                          03688
READGO1  DS    0H                                                       03689
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW         03690
         TM    PARMFLG3,X'04'  COUNTING BYTES?                          03691
         BZ    READNCNT                                                 03692
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                       03693
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE       03694
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          03695
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY     03696
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL             03697
READNCNT DS    0H                                                       03698
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE         03699
**---->            LABEL STRIPPING CODE          BELOW                  03700
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?              03701
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING       03702
* --- >>   Diagnostics for stripping   << --- *   below                 03703
         TM    PARMFLG6,X'04'                                           03704
         BZ    DGSTRI0A                                                 03705
         MVI   LINE-1,X'40'                                             03706
         MVC   LINE,LINE-1                                              03707
         MVC   LINE(11),=C' STRIPFLG: '                                 03708
         HEX   LINE+11,1,STRIPFLG                                       03709
         MVI   LINE+15,C'A'                                             03710
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03711
         HEX   LINE+30,1,ISLBLFLG                                       03712
         MVC   LINE+40(10),=C'LBLFLAG:  '                               03713
         HEX   LINE+50,1,LBLFLAG                                        03714
         PUT   SYSPRINT,LINE                                            03715
DGSTRI0A DS    0H                                                       03716
* --- >>   Diagnostics for stripping   << --- *   above                 03717
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW      03718
         BZ    RDNOSTRP           NO IT WASN'T                          03719
         TM    ISLBLFLG,X'03'     LAST READ A LABEL?                    03720
         BZ    RDNOSTRP           NO. DON'T STRIP ANYTHING.             03721
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.  03722
RDNOSTRP DS    0H                                                       03723
**---->            LABEL STRIPPING CODE          ABOVE                  03724
         STH   R2,OUTCCW+6    STORE FOR WRITE                         * 03725
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER       03726
         ST    R7,STOR7REG                                              03727
         L     R7,BLOKCNT                                               03728
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS             03729
         ST    R7,BLOKCNT                                               03730
         L     R7,STOR7REG                                              03731
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - below     03732
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   03733
* Output of this option looks like:                                     03734
*  File 00002 Record number: 0000000140 Size of record: 0000032720      03735
*  File 00002 Record number: 0000000141 Size of record: 0000032720      03736
*  File 00002 Record number: 0000000142 Size of record: 0000006400      03737
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   03738
         TM    PARMFLG6,X'02'   Are we reporting individual blk sizes?  03739
         BZ    NORCSIZ1         No. Don't do this routine.              03740
         ST    R7,SAVE7RG7      Save BAL register                       03741
         BAL   R7,CLRCSZMS      Clear data fields from message          03742
         L     R7,SAVE7RG7      Restore BAL register                    03743
         ST    R7,STOR7REG      Save register for safety                03744
         L     R7,BLOKCNT       Get current block count                 03745
         CVD   R7,DWORD         CONVERT BLOCK COUNT TO DECIMAL          03746
         L     R7,STOR7REG      Restore register                        03747
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE                      03748
         MVC   BLKCNTRN,BLKCNTRN-1        INITIALIZE TO ZEROS           03749
         UNPK  BLKCNTRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   03750
         ST    R7,STOR7REG      Save register for safety                03751
         L     R7,BYTESMVD      Get current block size                  03752
         CVD   R7,DWORD         CONVERT BYTES MOVED TO DECIMAL          03753
         L     R7,STOR7REG      Restore register                        03754
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE                      03755
         MVC   BMOVEDRN,BMOVEDRN-1        INITIALIZE TO ZEROS           03756
         UNPK  BMOVEDRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLKSIZE     03757
         ADRSMS                                                         03758
         MVC   RECSZFNM(5),FILNOSAW       Move File number to message   03759
         MVC   RECSZRCD(10),BLKCNTRN      Move Record number for file   03760
         MVC   RECSZSIZ(10),BMOVEDRN      Move Block Size (byte count)  03761
         PTMSN RECSZMSG                                                 03762
         DROPMS                                                         03763
NORCSIZ1 DS    0H                                                       03764
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - above     03765
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *      03766
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                  03767
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT          03768
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.  03769
NOINITT1 DS    0H                                                       03770
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *      03771
         B     WRITE1           CONTINUE                                03772
*                                                                     * 03773
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           * 03774
READIN1  DS    0H             COME HERE IF TM WAS READ                * 03775
**** ------------------- Leading Tape Marks ------- below               03776
         TM    DATFLAG,X'10'    Has any real data been read?            03777
         BZ    NOSKLTME         Yes, bypass this entire routine.        03778
         TM    PARMFLG1,X'20'   Are we skipping LTMs?                   03779
         BZ    NOSKLTMO         PARM is off, we copy them.              03780
         AP    LTMCOUNT,=P'1'   Increment counter                       03781
         L     R0,LTMBINAD      Increment binary counter                03782
         A     R0,=F'1'                                                 03783
         ST    R0,LTMBINAD                                              03784
         ADRSMS                                                         03785
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern            03786
         ED    LTMRNUM(11),LTMCOUNT+1           Put number in report    03787
         MVC   LTMRPTI,SKIPPED      Report tape mark skipped.           03788
         PTMSN LTMRPT               Write report line.                  03789
         DROPMS                                                         03790
         B     READIN           Skip this tapemark.                     03791
NOSKLTMO DS    0H                                                       03792
         TM    PARMFLG2,X'08'       Is this run READ only?              03793
         BO    NOSKLTMR                                                 03794
         MVFMS LTMRPTI,COPIED       Report tape mark copied.            03795
         B     NOSKLTME                                                 03796
NOSKLTMR DS    0H                                                       03797
         MVFMS LTMRPTI,READDD       Report tape mark read.              03798
NOSKLTME DS    0H                                                       03799
**** ------------------- Leading Tape Marks ------- above               03800
* ------------------------- ADD LABEL TO NL CODE ----------- *          03801
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                03802
         BZ    NONLSL1          NO.  BYPASS.                            03803
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS           03804
*** ---                                                                 03805
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?        03806
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.   03807
*                               DO NOT COLLECT 200 DOLLARS.             03808
*** ---                                                                 03809
NONLSL1  DS    0H                                                       03810
* ------------------------- ADD LABEL TO NL CODE ----------- *          03811
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- * 03812
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?        03813
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.       03814
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?       03815
         BO    WRCTLHDR         YES. PUT IT OUT.                        03816
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?       03817
         BO    WRCTLEOF         YES. PUT IT OUT.                        03818
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?       03819
         BO    WRCTLEOV         YES. PUT IT OUT.                        03820
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.      03821
WRCTLHDR DS    0H                                                       03822
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03823
         MVC   LLINE(80),LABELITH   MARK END OF LABEL                 * 03824
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03825
         BZ    WRCTLAS1         No. Don't translate the control card.   03826
         ST    R5,R5HXPRT       Yes.   Save register.                   03827
         L     R5,SAVTRTCS             Point to translation table CSECT 03828
         USING TRTCSECT,R5                                              03829
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03830
         L     R5,R5HXPRT              Restore R5                       03831
         DROP  R5                                                       03832
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.     03833
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03834
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03835
WRCTLEOF DS    0H                                                       03836
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03837
         MVC   LLINE(80),LABELITR   MARK END OF LABEL                 * 03838
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03839
         BZ    WRCTLAS2         No. Don't translate the control card.   03840
         ST    R5,R5HXPRT       Yes.   Save register.                   03841
         L     R5,SAVTRTCS             Point to translation table CSECT 03842
         USING TRTCSECT,R5                                              03843
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03844
         L     R5,R5HXPRT              Restore R5                       03845
         DROP  R5                                                       03846
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.     03847
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03848
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03849
WRCTLEOV DS    0H                                                       03850
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03851
         MVC   LLINE(80),LABELITV   MARK END OF LABEL                 * 03852
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03853
         BZ    WRCTLAS4         No. Don't translate the control card.   03854
         ST    R5,R5HXPRT       Yes.   Save register.                   03855
         L     R5,SAVTRTCS             Point to translation table CSECT 03856
         USING TRTCSECT,R5                                              03857
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03858
         L     R5,R5HXPRT              Restore R5                       03859
         DROP  R5                                                       03860
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.     03861
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03862
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03863
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE         03864
NOCNTLWR DS    0H                                                       03865
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- * 03866
         TM    DATFLAG,X'10'  NO DATA READ YET?                       * 03867
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY          * 03868
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?     03869
         BNE   RDNOSKIP                                               * 03870
         AP    LTMCOUNT,=P'1'                                           03871
         L     R0,LTMBINAD                                              03872
         A     R0,=F'1'                                                 03873
         ST    R0,LTMBINAD                                              03874
         ADRSMS                                                         03875
         MVC   LTMRNUM(11),LTMCTPAT                                     03876
         ED    LTMRNUM(11),LTMCOUNT+1                                   03877
         PTMSN LTMRPT            INDICATE LEADING TM SKIPPED            03878
         DROPMS                                                         03879
         B     READIN         DO ANOTHER READ                         * 03880
RDNOSKIP DS    0H                                                     * 03881
         AP    LTMCOUNT,=P'1'                                           03882
         L     R0,LTMBINAD                                              03883
         A     R0,=F'1'                                                 03884
         ST    R0,LTMBINAD                                              03885
         ADRSMS                                                         03886
         MVC   LTMRNUM(11),LTMCTPAT                                     03887
         ED    LTMRNUM(11),LTMCOUNT+1                                   03888
         PTMSN LTMRPT            INDICATE LEADING TM COPIED           * 03889
         DROPMS                                                         03890
         B     MARKFILE                                               * 03891
READINGO DS    0H                                                     * 03892
*------------------------------------> HEX PRINT LIMIT - BELOW          03893
         TM    PARMFLG5,X'20'          HEX PRINT ON?                    03894
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT           03895
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF          03896
NOHXPRST DS    0H                                                       03897
*------------------------------------> HEX PRINT LIMIT - ABOVE          03898
         ST    R7,STOR7REG                                              03899
         L     R7,FILECNT                                               03900
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          * 03901
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        03902
         ADRSMS                                                         03903
         UNPK  FILEDONE+6(5),DWORD+5(3)    UNPACK FILE NUMBER           03904
         MVC   FILNOSAV(5),FILEDONE+6      SAVE DISPLAY NUMBER          03905
         DROPMS                                                         03906
         ST    R7,FILECNT                                               03907
         STH   R7,FILENO      Save File number for FOOTAGE routine      03908
         A     R7,=F'1'       Save one more than current file number    03909
         CVD   R7,DWORD                                                 03910
         OI    DWORD+7,X'0F'                                            03911
         UNPK  FILNOSAW(5),DWORD+5(3)                                   03912
         L     R7,BLOKCNT                                               03913
         ST    R7,NUMBLKS     Save Block Count for FOOTAGE routine      03914
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL            03915
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        03916
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT   03917
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS           03918
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   03919
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****       03920
         TM    PARMFLG3,X'04'     COUNTING BYTES?                       03921
         BZ    MARKNCNT           NO-SKIP ROUTINE                       03922
         ADRSMS                                                         03923
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                  03924
         MVC   FILECONT,=C'CONTAINING'                                  03925
         DROPMS                                                         03926
         L     R4,DBINH           LOAD REG WITH HI ORDER                03927
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED            03928
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA          03929
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                 03930
         L     R4,DBINL           LOAD REG WITH LOW ORDER               03931
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED           03932
         AP    QWORD,DWORD        AND ADD IT IN                         03933
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE          03934
** ----                                                                 03935
         LM    R4,R5,TOTBYTES                                           03936
         A     R5,DBINL            LOW ORDER COUNT                      03937
         BNO   MARKNOVR            B IF NO OVERFLOW                     03938
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03939
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03940
MARKNOVR DS    0H                                                       03941
         A     R4,DBINH            HIGH ORDER                           03942
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL              03943
** ----                                                                 03944
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?            03945
         BZ    MARKISNL            NO. DON'T ADD TOTALS                 03946
         LM    R4,R5,LABBYTES                                           03947
         A     R5,LABINL           LOW ORDER COUNT                      03948
         BNO   MARKNOVL            B IF NO OVERFLOW                     03949
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03950
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03951
MARKNOVL DS    0H                                                       03952
         A     R4,LABINH           HIGH ORDER                           03953
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL              03954
* - >                                                                   03955
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                         03956
         BZ    NOSEPLBL                                                 03957
         ADRSMS                                                         03958
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  03959
         MVC   FILECUMT,=C'CUM LABEL:'                                  03960
         DROPMS                                                         03961
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                  03962
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          03963
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       03964
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  03965
         CVD   R5,DWORD          LOW ORDER WORD                         03966
         AP    QWORD,DWORD       AND ADD IT IN                          03967
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE         03968
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL       03969
NOSEPLBL DS    0H                                                       03970
* - >                                                                   03971
         B     MARKNOLB                                                 03972
MARKISNL DS    0H                                                       03973
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?            03974
         BO    MARKNOLB                                                 03975
         LM    R4,R5,FILBYTES                                           03976
         A     R5,DBINFL           LOW ORDER COUNT                      03977
         BNO   MARKNOVF            B IF NO OVERFLOW                     03978
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03979
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03980
MARKNOVF DS    0H                                                       03981
         A     R4,DBINFH           HIGH ORDER                           03982
         STM   R4,R5,FILBYTES                                           03983
* - >                                                                   03984
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                         03985
         BZ    NOSEPDAT                                                 03986
         ADRSMS                                                         03987
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  03988
         MVC   FILECUMT,=C'CUM DATA :'                                  03989
         DROPMS                                                         03990
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                  03991
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          03992
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       03993
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  03994
         CVD   R5,DWORD          LOW ORDER WORD                         03995
         AP    QWORD,DWORD       AND ADD IT IN                          03996
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE        03997
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL       03998
NOSEPDAT DS    0H                                                       03999
* - >                                                                   04000
MARKNOLB DS    0H                                                       04001
** ----                                                                 04002
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?               04003
         BZ    MARKNCN2           NO-SKIP ROUTINE                       04004
* - >                                                                   04005
         ADRSMS                                                         04006
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  04007
         MVC   FILECUMT,=C'CUM TOTAL:'                                  04008
         DROPMS                                                         04009
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                  04010
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04011
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04012
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04013
         CVD   R5,DWORD          LOW ORDER WORD                         04014
         AP    QWORD,DWORD       AND ADD IT IN                          04015
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE        04016
* - >                                                                   04017
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE               04018
MARKNCNT DS    0H                                                       04019
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE     04020
MARKNCN2 DS    0H                                                       04021
         MVFMS FILETBYT(47),LINE44   BLANK OUT THIS PART OF MESSAGE     04022
MARKNCNE DS    0H                                                       04023
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****       04024
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below  04025
* Output of this option looks like:                                 *   04026
*  File 00002 Min Blksize:     6400 Max Blksize:    32720           *   04027
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   04028
         TM    PARMFLG6,X'01'               Reporting Min-Max blksize?  04029
         BZ    XMINMAX                      No. Skip all this code.     04030
         STM   R1,R5,SAVE1TO5               Save regs                   04031
         L     R1,MINBLK                    Minimum blksize for file    04032
         XC    DWORD,DWORD                  Clear DWORD to zeros.       04033
         CVD   R1,DWORD                     Convert to decimal.         04034
         OI    DWORD+7,X'0F'                Make sign readable.         04035
         ADRSMS                                                         04036
*        UNPK  MNMXMIN+1(7),DWORD+4(4)      Display number in message   04037
         MVC   MNMXMIN(8),MXPATTRN                                      04038
         ED    MNMXMIN+1(8),DWORD+4                                     04039
         DROPMS                                                         04040
         L     R1,MAXBLK                    Maximum blksize for file    04041
         XC    DWORD,DWORD                  Clear DWORD to zeros.       04042
         CVD   R1,DWORD                     Convert to decimal.         04043
         OI    DWORD+7,X'0F'                Make sign readable.         04044
         ADRSMS                                                         04045
*        UNPK  MNMXMAX+1(7),DWORD+4(4)      Display number in message   04046
         MVC   MNMXMAX(8),MXPATTRN                                      04047
         ED    MNMXMAX+1(8),DWORD+4                                     04048
         MVC   MNMXFNUM(5),FILNOSAV         Display saved file number   04049
         CLC   MNMXMIN+1(7),=C'8435455'     End of input tape?          04050
         BNE   NOPRMSXE                     No. Print msg unchanged.    04051
         MVC   MNMXMIN+1(7),=C'0000000'     Make message reasonable.    04052
         B     NOPRMSXF                     And don't even print it.    04053
NOPRMSXE DS    0H                                                       04054
         PTMSN MNMXMSG1                     Print message               04055
NOPRMSXF DS    0H                                                       04056
         DROPMS                                                         04057
         LM    R1,R5,SAVE1TO5               Restore work regs           04058
XMINMAX  B     XMINMAX1                                                 04059
MXPATTRN DC    X'4020202020202120'          8 bytes of pattern          04060
XMINMAX1 DS    0H                                                       04061
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above  04062
         PTMS  FILEDONE            WRITE IT                             04063
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                   04064
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.        04065
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****       04066
         TM    PARMFLG3,X'04'     COUNTING BYTES?                       04067
         BZ    MARKNTOT           NO-SKIP ROUTINE                       04068
         ADRSMS                                                         04069
         MVC   FILECONT,=C'          '                                  04070
         MVC   FILECUMT,=C'          '                                  04071
         DROPMS                                                         04072
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE             04073
         ST    R4,DBINH            ZERO BYTE COUNT                      04074
         ST    R4,DBINL            ZERO BYTE COUNT                      04075
         ST    R4,LABINH           ZERO BYTE COUNT                      04076
         ST    R4,LABINL           ZERO BYTE COUNT                      04077
         ST    R4,DBINFH           ZERO BYTE COUNT                      04078
         ST    R4,DBINFL           ZERO BYTE COUNT                      04079
MARKNTOT DS    0H                                                       04080
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****       04081
MARKFILE DS    0H                                                       04082
* -- >      Max - Min reporting    -   below                            04083
         TM    PARMFLG6,X'01'               MINMAX on?                  04084
         BZ    NOMXMNRS                     No. No reset necessary.     04085
         MVC   MAXBLK,=F'0'                 Start small - RESET MAX     04086
         MVC   MINBLK,=F'268435455'         Start big   - RESET MIN     04087
NOMXMNRS DS    0H                                                       04088
* -- >      Max - Min reporting    -   above                            04089
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE             04090
         ST    R7,BLOKCNT                                               04091
         L     R7,FILECNT                                               04092
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                      04093
         ST    R7,FILECNT                                               04094
         L     R7,STOR7REG                                              04095
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?                * 04096
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK             * 04097
*                                                                       04098
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***        04099
         TM    PARMFLG6,X'20'     Reporting footages?                   04100
         BZ    NOFEET02           No. Don't execute this code           04101
         LA    R1,LABELTYP        Point to footage work area            04102
         L     R15,FOOTGENT       Load entry point for FOOTAGE routine  04103
         BALR  R14,R15            Call FOOTAGE                          04104
*                                 FOOTAGE workarea has now been updated 04105
         ST    R7,SAVE7RG6                                              04106
         LA    R7,0                                                     04107
         LH    R7,FILENO                                                04108
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL            04109
         L     R7,SAVE7RG6                                              04110
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        04111
         ADRSMS                                                         04112
         UNPK  FOOTMNUM(5),DWORD+5(3)           UNPACK FILE             04113
         MVC   FOOTMFT,FILEFT                                           04114
         MVC   FOOTMCFT,REELFT                                          04115
         DROPMS                                                         04116
*  TEST TEST TEST TEST TEST TEST - below                                04117
FEETDIAG DS    0H                                                       04118
         TM    PARMFLG6,X'40'     Diagnostics wanted?                   04119
         BZ    NOFEETDI           Not requested. Skip printing them.    04120
         STM   R4,R5,SAV45MSG     Register save                         04121
         USING MSGCSECT,R5,R4                                           04122
         L     R5,=V(MSGCSECT)          Load Messages CSECT             04123
         LA    R4,4095(,R5)             Addressability                  04124
         LA    R4,1(,R4)                                                04125
         HEX   FOOTMFIL+2,2,FILENO      File Number from FOOTAGE block  04126
         HEX   FOOTMFIL+8,4,BLKSZE      Block Size  from FOOTAGE block  04127
         HEX   FOOTMFIL+18,4,NUMBLKS    Block Count from FOOTAGE block  04128
         HEX   FOOTMFIL+28,4,CUMTOTAL   Running Total in FOOTAGE block  04129
         MVC   FOOTMFIL+37(10),FILEFT                                   04130
         MVC   FOOTMFIL+47(10),REELFT                                   04131
         LM    R4,R5,SAV45MSG     Register restore                      04132
         DROP  R5,R4                                                    04133
NOFEETDI DS    0H                                                       04134
*  TEST TEST TEST TEST TEST TEST - above                                04135
         ADRSMS                                                         04136
         CLC   FILEDONE+21(7),=C'0000000'                               04137
         BE    NOLASTFT                                                 04138
         PTMSN FOOTMSG1                                                 04139
NOLASTFT DS    0H                                                       04140
         DROPMS                                                         04141
         XC    BLKSZE,BLKSZE  Set max block size to 0 in footage block  04142
NOFEET02 DS    0H                                                       04143
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***        04144
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                         04145
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES            04146
         BZ    MARKFILA          NO - SKIP THIS CODE                    04147
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?    04148
         BNL   MARKFILA          NO - NO RESTRICTIONS                   04149
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA    04150
MARKFILA DS    0H                                                       04151
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                         04152
         TM    PARMFLG4,X'02'   Stripping labels?                       04153
         BZ    MARKSTRX         no - bypass strip-related code          04154
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?               04155
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                 04156
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.    04157
         B     READIN           YES. SKIP WRITING THE T.M. TOO          04158
MARKSTRX DS    0H                                                       04159
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK              * 04160
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?             * 04161
         BZ    MARKGO         NO. TEST FOR 2ND TM                     * 04162
         B     READIN2        YES. WRITE TO OUTPUTS & END             * 04163
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                          04164
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS         * 04165
NOLBL    DS    0H                                                       04166
* --- >>   Diagnostics for tape mark writing << --- * below             04167
         TM    PARMFLG6,X'04'                                           04168
         BZ    DGSTRI04                                                 04169
         MVI   LINE-1,X'40'                                             04170
         MVC   LINE,LINE-1                                              04171
         MVC   LINE(11),=C' STRIPFLG: '                                 04172
         HEX   LINE+11,1,STRIPFLG                                       04173
         MVI   LINE+15,C'4'                                             04174
         MVC   LINE+20(10),=C'ISLBLFLG: '                               04175
         HEX   LINE+30,1,ISLBLFLG                                       04176
         MVC   LINE+40(10),=C'LBLFLAG:  '                               04177
         HEX   LINE+50,1,LBLFLAG                                        04178
         MVC   LINE+55(32),=C'We are writing a Tape Mark now!!'         04179
         PUT   SYSPRINT,LINE                                            04180
DGSTRI04 DS    0H                                                       04181
* --- >>   Diagnostics for tape mark writing << --- * above             04182
         MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM              * 04183
         B     WRITE1         GO WRITE TM TO OUTPUTS                    04184
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         * 04185
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2              * 04186
         BZ    INEODATA       NOT EITHER. END AS USUAL.               * 04187
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ         * 04188
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG          * 04189
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         * 04190
*                                                                     * 04191
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           * 04192
INEODATA DS    0H                                                       04193
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE      04194
*                                                                       04195
READIN2  DS    0H                                                       04196
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?      04197
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?     04198
         BZ    READ2GO           NO. BYPASS THIS CODE.                  04199
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA 04200
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS          04201
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?             04202
         BZ    NOEXTMK           NO                                     04203
         B     WRTTAPMK                                                 04204
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?          04205
         BZ    READ2GO           NO. BYPASS REST OF CODE.               04206
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.         04207
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                   04208
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS   04209
         B     READIN            DON'T WRITE FINAL TAPE MARK YET        04210
READ2STP DS    0H                                                       04211
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS           04212
READ2GO  DS    0H                                                       04213
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?      04214
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                  04215
* --- >>>  ------------------ below -------- Skip writing last T.M.     04216
* -------------------------------------------------------------- *      04217
*            When stripping labels, somehow an extra             *      04218
*            tape mark gets written.  This is a kludge           *      04219
*            to correct that.....                                *      04220
* -------------------------------------------------------------- *      04221
         TM    PARMFLG4,X'02'    Stripping Labels?                      04222
         BZ    READ2GNS          No. don't skip writing last t.m.       04223
*        MVC   LINE(133),LINE-1       CLEAR LINE                        04224
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1             04225
*        PUT   SYSPRINT,LINE                                            04226
         B     WRITE17           Do not write the extra tape mark       04227
READ2GNS DS    0H                                                       04228
* --- >>>  ------------------ above -------- Skip writing last T.M.     04229
         B     WRITE1                                                   04230
         SPACE 3                                                        04231
* -------------------- Code for Initting Tapes ---------->>>>> below    04232
TLITWRIT DS    0H                                                       04233
         TM    PARMFLG3,X'01'                                           04234
         BZ    TLITWRIE                                                 04235
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.   04236
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?        04237
         BO    TLITREW2                YES. SET WRITE CCW BACK.         04238
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.       04239
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.              04240
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.   04241
TLITREW2 DS    0H                      ALREADY DID THE REWIND.          04242
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES. 04243
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           04244
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.         04245
TLITSKP1 DS    0H                                                       04246
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?             04247
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1       04248
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT    04249
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2         04250
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS    04251
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2         04252
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1   04253
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any      04254
* --> Hex printing - below                                              04255
         TM    PARMFLG5,X'20'          Is Hex Printing On?              04256
         BZ    NPRHINT1                No. Bypass it.                   04257
         ST    R7,R7HXPRT              Save BAL register.               04258
         BAL   R7,HEXPRNEX             Hex print from external labels.  04259
         L     R7,R7HXPRT              Restore BAL register.            04260
NPRHINT1 DS    0H                                                       04261
* --> Hex printing - above                                              04262
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      04263
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN       04264
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS       04265
TLITSKP2 DS    0H                                                       04266
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1   04267
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS    04268
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1   04269
* --> Hex printing - below                                              04270
         TM    PARMFLG5,X'20'          Is Hex Printing On?              04271
         BZ    NPRHINT2                No. Bypass it.                   04272
         ST    R7,R7HXPRT              Save BAL register.               04273
         BAL   R7,HEXPRNEX             Hex print from external labels.  04274
         L     R7,R7HXPRT              Restore BAL register.            04275
NPRHINT2 DS    0H                                                       04276
* --> Hex printing - above                                              04277
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      04278
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT            04279
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE   04280
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS    04281
TLITWRIE DS    0H                                                       04282
* -------------------- Code for Initting Tapes ---------->>>>> above    04283
* -------------------- Code for Initting ASCII Tapes ---->>>>> below    04284
TLITASCI DS    0H               INIT ASCII TAPES.                       04285
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape? 04286
         BZ    TLITASCE         No. Bypass this code.                   04287
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.   04288
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?        04289
         BO    TLITRAS2                YES. SET WRITE CCW BACK.         04290
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.       04291
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.              04292
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.   04293
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.          04294
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES. 04295
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           04296
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.         04297
TLITSKA1 DS    0H                                                       04298
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?             04299
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1       04300
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT    04301
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2         04302
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS    04303
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2         04304
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1   04305
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any      04306
* --> Hex printing - below                                              04307
         TM    PARMFLG5,X'20'          Is Hex Printing On?              04308
         BZ    NPRHINA1                No. Bypass it.                   04309
*           Temporary ASCII translation is done here.           *       04310
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area          04311
         ST    R5,R5HXPRT              Save register.                   04312
         L     R5,SAVTRTCS             Point to translation table CSECT 04313
         USING TRTCSECT,R5                                              04314
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII 04315
         ST    R7,R7HXPRT              Save BAL register.               04316
         BAL   R7,HEXPRNEX             Hex print from external labels.  04317
         L     R7,R7HXPRT              Restore BAL register.            04318
         L     R5,R5HXPRT              Restore R5                       04319
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area      04320
         DROP  R5                                                       04321
NPRHINA1 DS    0H                                                       04322
* --> Hex printing - above                                              04323
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      04324
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN       04325
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS       04326
TLITSKA2 DS    0H                                                       04327
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1   04328
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS    04329
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1   04330
* --------------------------------------------------------------*       04331
*           Note:  The real ASCII translation is                *       04332
*                  done in the CHANGVOL routine that            *       04333
*                  gets executed just before each               *       04334
*                  output write.  Please note that              *       04335
*                  INASC3 and INASC4 imply CHGVOL.              *       04336
* --------------------------------------------------------------*       04337
* --> Hex printing - below                                              04338
         TM    PARMFLG5,X'20'          Is Hex Printing On?              04339
         BZ    NPRHINA2                No. Bypass it.                   04340
*           Temporary ASCII translation is done here.           *       04341
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area          04342
         ST    R5,R5HXPRT              Save register.                   04343
         L     R5,SAVTRTCS             Point to translation table CSECT 04344
         USING TRTCSECT,R5                                              04345
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII 04346
         ST    R7,R7HXPRT              Save BAL register.               04347
         BAL   R7,HEXPRNEX             Hex print from external labels.  04348
         L     R7,R7HXPRT              Restore BAL register.            04349
         L     R5,R5HXPRT              Restore R5                       04350
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area      04351
         DROP  R5                                                       04352
NPRHINA2 DS    0H                                                       04353
* --> Hex printing - above                                              04354
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      04355
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT            04356
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE   04357
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS    04358
TLITASCE DS    0H                                                       04359
* -------------------- Code for Initting ASCII Tapes ---->>>>> above    04360
*                                                                       04361
*  WRITE TO OUTPUT TAPES                                                04362
*                                                                       04363
* ------------------------------------------------------------------- * 04364
WRITE1   DS    0H                                                     * 04365
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?             04366
         BNE   WRNOTPMK         No. Don't touch bytes to be moved       04367
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved             04368
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.       04369
WRNOTPMK DS    0H                                                       04370
* --- READ ONLY CODE ------------------------------- BELOW --         * 04371
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 04372
         BO    WRITE17    YES--NO WRITES - ONLY READS                 * 04373
* --- READ ONLY CODE ------------------------------- ABOVE --         * 04374
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                   04375
         BZ    WRITE2         NO                                        04376
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER    04377
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE 04378
* ------ KEEPVOL ONLY ---- below --------------------------------       04379
         MVI   V1INDEX,X'00'         Index into table.                  04380
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04381
* ------ KEEPVOL ONLY ---- above --------------------------------       04382
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04383
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04384
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                 04385
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04386
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04387
         EXCP  OUTIOB         WRITE IT                                  04388
         WAIT  ECB=OUTECB     WAIT FOR IT                               04389
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04390
         BNE   OUTERR         NO - ERROR                                04391
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                   04392
         BZ    WRITE3         NO                                        04393
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER    04394
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE 04395
* ------ KEEPVOL ONLY ---- below --------------------------------       04396
         MVI   V1INDEX,X'01'         Index into table.                  04397
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04398
* ------ KEEPVOL ONLY ---- above --------------------------------       04399
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04400
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04401
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                 04402
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04403
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04404
         EXCP  OUTIOB         WRITE IT                                  04405
         WAIT  ECB=OUTECB     WAIT FOR IT                               04406
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04407
         BNE   OUTERR         NO - ERROR                                04408
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                   04409
         BZ    WRITE4         NO                                        04410
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER    04411
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE 04412
* ------ KEEPVOL ONLY ---- below --------------------------------       04413
         MVI   V1INDEX,X'02'         Index into table.                  04414
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04415
* ------ KEEPVOL ONLY ---- above --------------------------------       04416
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04417
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04418
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                 04419
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04420
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04421
         EXCP  OUTIOB         WRITE IT                                  04422
         WAIT  ECB=OUTECB     WAIT FOR IT                               04423
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04424
         BNE   OUTERR         NO - ERROR                                04425
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                   04426
         BZ    WRITE5         NO                                        04427
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER    04428
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE 04429
* ------ KEEPVOL ONLY ---- below --------------------------------       04430
         MVI   V1INDEX,X'03'         Index into table.                  04431
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04432
* ------ KEEPVOL ONLY ---- above --------------------------------       04433
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04434
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04435
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                 04436
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04437
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04438
         EXCP  OUTIOB         WRITE IT                                  04439
         WAIT  ECB=OUTECB     WAIT FOR IT                               04440
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04441
         BNE   OUTERR         NO - ERROR                                04442
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                   04443
         BZ    WRITE6         NO                                        04444
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER    04445
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE 04446
* ------ KEEPVOL ONLY ---- below --------------------------------       04447
         MVI   V1INDEX,X'04'         Index into table.                  04448
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04449
* ------ KEEPVOL ONLY ---- above --------------------------------       04450
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04451
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04452
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                 04453
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04454
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04455
         EXCP  OUTIOB         WRITE IT                                  04456
         WAIT  ECB=OUTECB     WAIT FOR IT                               04457
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04458
         BNE   OUTERR         NO - ERROR                                04459
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                   04460
         BZ    WRITE7         NO                                        04461
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER    04462
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE 04463
* ------ KEEPVOL ONLY ---- below --------------------------------       04464
         MVI   V1INDEX,X'05'         Index into table.                  04465
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04466
* ------ KEEPVOL ONLY ---- above --------------------------------       04467
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04468
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04469
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                 04470
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04471
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04472
         EXCP  OUTIOB         WRITE IT                                  04473
         WAIT  ECB=OUTECB     WAIT FOR IT                               04474
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04475
         BNE   OUTERR         NO - ERROR                                04476
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                   04477
         BZ    WRITE8         NO                                        04478
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER    04479
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE 04480
* ------ KEEPVOL ONLY ---- below --------------------------------       04481
         MVI   V1INDEX,X'06'         Index into table.                  04482
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04483
* ------ KEEPVOL ONLY ---- above --------------------------------       04484
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04485
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04486
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                 04487
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04488
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04489
         EXCP  OUTIOB         WRITE IT                                  04490
         WAIT  ECB=OUTECB     WAIT FOR IT                               04491
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04492
         BNE   OUTERR         NO - ERROR                                04493
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                   04494
         BZ    WRITE9         NO                                        04495
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER    04496
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE 04497
* ------ KEEPVOL ONLY ---- below --------------------------------       04498
         MVI   V1INDEX,X'07'         Index into table.                  04499
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04500
* ------ KEEPVOL ONLY ---- above --------------------------------       04501
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04502
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04503
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                 04504
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04505
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04506
         EXCP  OUTIOB         WRITE IT                                  04507
         WAIT  ECB=OUTECB     WAIT FOR IT                               04508
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04509
         BNE   OUTERR         NO - ERROR                                04510
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                   04511
         BZ    WRITE10        NO                                        04512
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER    04513
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE 04514
* ------ KEEPVOL ONLY ---- below --------------------------------       04515
         MVI   V1INDEX,X'08'         Index into table.                  04516
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04517
* ------ KEEPVOL ONLY ---- above --------------------------------       04518
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04519
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04520
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                 04521
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04522
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04523
         EXCP  OUTIOB         WRITE IT                                  04524
         WAIT  ECB=OUTECB     WAIT FOR IT                               04525
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04526
         BNE   OUTERR         NO - ERROR                                04527
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                   04528
         BZ    WRITE11        NO                                        04529
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER    04530
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE 04531
* ------ KEEPVOL ONLY ---- below --------------------------------       04532
         MVI   V1INDEX,X'09'         Index into table.                  04533
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04534
* ------ KEEPVOL ONLY ---- above --------------------------------       04535
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04536
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04537
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                 04538
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04539
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04540
         EXCP  OUTIOB         WRITE IT                                  04541
         WAIT  ECB=OUTECB     WAIT FOR IT                               04542
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04543
         BNE   OUTERR         NO - ERROR                                04544
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                   04545
         BZ    WRITE12        NO                                        04546
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER    04547
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE 04548
* ------ KEEPVOL ONLY ---- below --------------------------------       04549
         MVI   V1INDEX,X'0A'         Index into table.                  04550
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04551
* ------ KEEPVOL ONLY ---- above --------------------------------       04552
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04553
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04554
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                 04555
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04556
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04557
         EXCP  OUTIOB         WRITE IT                                  04558
         WAIT  ECB=OUTECB     WAIT FOR IT                               04559
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04560
         BNE   OUTERR         NO - ERROR                                04561
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                   04562
         BZ    WRITE13        NO                                        04563
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER    04564
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE 04565
* ------ KEEPVOL ONLY ---- below --------------------------------       04566
         MVI   V1INDEX,X'0B'         Index into table.                  04567
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04568
* ------ KEEPVOL ONLY ---- above --------------------------------       04569
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04570
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04571
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                 04572
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04573
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04574
         EXCP  OUTIOB         WRITE IT                                  04575
         WAIT  ECB=OUTECB     WAIT FOR IT                               04576
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04577
         BNE   OUTERR         NO - ERROR                                04578
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                   04579
         BZ    WRITE14        NO                                        04580
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER    04581
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE 04582
* ------ KEEPVOL ONLY ---- below --------------------------------       04583
         MVI   V1INDEX,X'0C'         Index into table.                  04584
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04585
* ------ KEEPVOL ONLY ---- above --------------------------------       04586
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04587
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04588
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                 04589
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04590
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04591
         EXCP  OUTIOB         WRITE IT                                  04592
         WAIT  ECB=OUTECB     WAIT FOR IT                               04593
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04594
         BNE   OUTERR         NO - ERROR                                04595
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                   04596
         BZ    WRITE15        NO                                        04597
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER    04598
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE 04599
* ------ KEEPVOL ONLY ---- below --------------------------------       04600
         MVI   V1INDEX,X'0D'         Index into table.                  04601
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04602
* ------ KEEPVOL ONLY ---- above --------------------------------       04603
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04604
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04605
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                 04606
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04607
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04608
         EXCP  OUTIOB         WRITE IT                                  04609
         WAIT  ECB=OUTECB     WAIT FOR IT                               04610
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04611
         BNE   OUTERR         NO - ERROR                                04612
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                   04613
         BZ    WRITE16        NO                                        04614
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER    04615
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE 04616
* ------ KEEPVOL ONLY ---- below --------------------------------       04617
         MVI   V1INDEX,X'0E'         Index into table.                  04618
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04619
* ------ KEEPVOL ONLY ---- above --------------------------------       04620
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04621
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04622
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                 04623
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04624
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04625
         EXCP  OUTIOB         WRITE IT                                  04626
         WAIT  ECB=OUTECB     WAIT FOR IT                               04627
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04628
         BNE   OUTERR         NO - ERROR                                04629
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                   04630
         BZ    WRITE17        NO                                        04631
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER    04632
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE 04633
* ------ KEEPVOL ONLY ---- below --------------------------------       04634
         MVI   V1INDEX,X'0F'         Index into table.                  04635
         BAL   R7,GETVTABL           Get table entry for KEEPVOL        04636
* ------ KEEPVOL ONLY ---- above --------------------------------       04637
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04638
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04639
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                 04640
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04641
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04642
         EXCP  OUTIOB         WRITE IT                                  04643
         WAIT  ECB=OUTECB     WAIT FOR IT                               04644
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04645
         BNE   OUTERR         NO - ERROR                                04646
WRITE17  DS    0H                                                       04647
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?              04648
         BNE   WR17NTPM       No. Don't correct bytes moved field       04649
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field   04650
WR17NTPM DS    0H                                                       04651
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                        04652
         BO    ENDINPUT       YES. CLOSE.                               04653
         TM    FLAG2A,EOV     END OF INPUT?                             04654
         BO    ENDINPUT       YES - QUIT                                04655
         B     READIN         NO - LOOP                                 04656
         SPACE 3                                                        04657
*                                                                       04658
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                            04659
*                                                                       04660
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                               04661
         BZ    INERR1         NO - ASSUME DATA CHECK                    04662
         ADRSMS                                                         04663
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                       04664
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR       04665
         DROPMS                                                         04666
         B     INERR2         CONTINUE                                  04667
INERR1   DS    0H                                                       04668
         ADRSMS                                                         04669
         MVC   LINE(133),INDCK  SET ERROR MESSAGE                       04670
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR       04671
         DROPMS                                                         04672
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                       04673
         MVI   INECB,X'00'    RESET ECB                                 04674
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X04675
               6,INECB,ROUTCDE=(3)                                      04676
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE      04677
*                             WHO CARES WHAT THE REPLY IS               04678
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                     04679
         B     CLOSMALL                                                 04680
*        ABEND 69             QUIT                                      04681
         SPACE 3                                                        04682
*                                                                       04683
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY     04684
*                                                                       04685
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG      04686
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                     04687
         TM    OUTCSW+4,X'02' UNIT CHECK?                               04688
         BO    OUTERUC        YES. HANDLE IT.                           04689
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                  04690
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                    04691
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION      04692
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE      04693
         B     OUTERR2            GO FILL IN REST OF THE INFO           04694
OUTERUC  DS    0H                                                       04695
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                      04696
         B     OUTERR2        CONTINUE                                  04697
OUTERR1  DS    0H                                                       04698
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                      04699
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                            04700
         L     R5,16          R5=CVT                                    04701
         L     R5,0(,R5)      R5=TCB WORDS                              04702
         L     R5,4(,R5)      R5=MY TCB                                 04703
         L     R5,12(,R5)     R5=TIOT                                   04704
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT             04705
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                 04706
         MVC   SAVDDN(5),4(R4)   Save DDNAME                            04707
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                    04708
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE          04709
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE               04710
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                    04711
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                04712
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY         04713
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE      04714
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                04715
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                      04716
         MVC   SAVELINE(133),LINE                                       04717
         PUT   SYSPRINT,LINE  WRITE MESSAGE                             04718
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.     04719
         MVC   LINE(133),LINE-1      CLEAR LINE                         04720
         MVFMS LINE(133),OUTCOUNT    How much was copied?               04721
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE  04722
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE             04723
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE       04724
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE             04725
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ       04726
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP     04727
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          * 04728
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        04729
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                04730
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ      04731
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ         04732
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL            04733
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        04734
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS           04735
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   04736
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE          04737
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ       04738
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                04739
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED            04740
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA          04741
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                 04742
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER               04743
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED           04744
         AP    QWORD,DWORD        AND ADD IT IN                         04745
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN              04746
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE             04747
         PUT   SYSPRINT,LINE  WRITE MESSAGE                             04748
* ---- >    WTO on a Unit Exception   < ---- Below                      04749
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?          04750
         BO    OUTERR2A         Yes. WTO anyway, as of old.             04751
* ---- >    WTO on a Unit Exception   < ---- Above                      04752
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY          04753
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE            04754
*                               THIS IS A SEMI-NORMAL CONDITION         04755
*                               AND WHY INVOLVE THE OPERATOR?           04756
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR   04757
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                 04758
OUTERR4  DS    0H                                                       04759
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED              04760
         WTOR  '                                                       X04761
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)      04762
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                04763
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                          04764
         BNE   OUTERR3        NO - TRY AGAIN                            04765
* ------------------------------------------------------------------- * 04766
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   * 04767
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             * 04768
* ------------------------------------------------------------------- * 04769
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB             04770
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                04771
*                             DON'T BOTHER WAITING FOR REWIND           04772
* ------------------------------------------------------------------- * 04773
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR          04774
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                       04775
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04776
         BNE   OUTERR5        NO                                        04777
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04778
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                04779
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                       04780
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04781
         BNE   OUTERR6        NO                                        04782
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04783
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                04784
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                       04785
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04786
         BNE   OUTERR7        NO                                        04787
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04788
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                04789
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                       04790
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04791
         BNE   OUTERR8        NO                                        04792
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04793
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                04794
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                       04795
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04796
         BNE   OUTERR9        NO                                        04797
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04798
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                04799
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                       04800
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04801
         BNE   OUTERR10       NO                                        04802
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04803
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                04804
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                       04805
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04806
         BNE   OUTERR11       NO                                        04807
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04808
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                04809
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                       04810
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04811
         BNE   OUTERR12       NO                                        04812
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04813
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                04814
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                       04815
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04816
         BNE   OUTERR13       NO                                        04817
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04818
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                04819
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                      04820
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04821
         BNE   OUTERR14       NO                                        04822
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04823
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                04824
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                      04825
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04826
         BNE   OUTERR15       NO                                        04827
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04828
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                04829
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                      04830
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04831
         BNE   OUTERR16       NO                                        04832
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04833
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                04834
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                      04835
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04836
         BNE   OUTERR17       NO                                        04837
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04838
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                04839
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                      04840
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04841
         BNE   OUTERR18       NO                                        04842
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04843
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                04844
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                      04845
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04846
         BNE   OUTERR19       NO                                        04847
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04848
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                04849
*                             THEN IT MUST BE OUTPUT 16                 04850
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04851
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                04852
         SPACE 3                                                        04853
*                                                                       04854
*  END OF INPUT -- FINISH UP                                            04855
*                                                                       04856
ENDINPUT DS    0H                                                       04857
         SPACE 3                                                        04858
* --- READ ONLY CODE ----------------------------------------         * 04859
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 04860
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE               * 04861
         MVC   LINE,LINE-1                  CLEAR OUTPUT LINE           04862
         MVFMS LINE(L'SUCCESSR),SUCCESSR    MOVE READ-ONLY MESSAGE    * 04863
         B     ENDIN16                      WRITE OUT MESSAGE         * 04864
* --- READ ONLY CODE ----------------------------------------         * 04865
ENDIN0   DS    0H                                                       04866
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                  04867
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                      04868
         BO    ENDIN1         YES - CONTINUE                            04869
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                  04870
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                      04871
         BO    ENDIN2         YES - CONTINUE                            04872
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                04873
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                      04874
         BO    ENDIN3         YES - CONTINUE                            04875
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                04876
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                      04877
         BO    ENDIN4         YES - CONTINUE                            04878
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                04879
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                      04880
         BO    ENDIN5         YES - CONTINUE                            04881
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                 04882
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                      04883
         BO    ENDIN6         YES - CONTINUE                            04884
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                  04885
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                      04886
         BO    ENDIN7         YES - CONTINUE                            04887
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                  04888
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                       04889
         BO    ENDIN8         YES - CONTINUE                            04890
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                  04891
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                       04892
         BO    ENDIN9         YES - CONTINUE                            04893
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                  04894
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                       04895
         BO    ENDIN10        YES - CONTINUE                            04896
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                  04897
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                       04898
         BO    ENDIN11        YES - CONTINUE                            04899
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                  04900
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                       04901
         BO    ENDIN12        YES - CONTINUE                            04902
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                  04903
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                       04904
         BO    ENDIN13        YES - CONTINUE                            04905
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                  04906
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                       04907
         BO    ENDIN14        YES - CONTINUE                            04908
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                  04909
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                       04910
         BO    ENDIN15        YES - CONTINUE                            04911
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                  04912
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                       04913
         BO    ENDIN16        YES - CONTINUE                            04914
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                 04915
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                  04916
         SPACE 3                                                        04917
*                                                                       04918
*  CLOSE ALL FILES                                                      04919
*                                                                       04920
CLOSMALL DS    0H                                                       04921
*        B     OUTERR        REMOVE - REMOVE - REMOVE                   04922
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *             04923
         TM    PARMFLG3,X'04'    COUNTING BYTES?                        04924
         BZ    ENDINTOT          NO - SKIP ROUTINE                      04925
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES              04926
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04927
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04928
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04929
         CVD   R5,DWORD          LOW ORDER WORD                         04930
         AP    QWORD,DWORD       AND ADD IT IN                          04931
         ADRSMS                                                         04932
         ED    TOTBPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04933
         PTMSN TOTBLINE                                                 04934
         DROPMS                                                         04935
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS    04936
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04937
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04938
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04939
         CVD   R5,DWORD          LOW ORDER WORD                         04940
         AP    QWORD,DWORD       AND ADD IT IN                          04941
         ADRSMS                                                         04942
         ED    TOTLPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04943
         PTMSN TOTLLINE                                                 04944
         DROPMS                                                         04945
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES     04946
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04947
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04948
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04949
         CVD   R5,DWORD          LOW ORDER WORD                         04950
         AP    QWORD,DWORD       AND ADD IT IN                          04951
         ADRSMS                                                         04952
         ED    TOTWPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04953
         PTMSN TOTWLINE                                                 04954
         DROPMS                                                         04955
         MVI   LINE,C' '                                                04956
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                         04957
ENDINTOT DS    0H                                                       04958
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *             04959
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - * 04960
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?    04961
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.      04962
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?             04963
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE      04964
         ADRSMS                                                         04965
         MVC   INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1           04966
         PTMSN INITMSG               MSG-WE'RE DOING INITTED TAPE       04967
         DROPMS                                                         04968
NOINITT3 DS    0H                                                       04969
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - * 04970
         TM    PARMFLG3,X'01'   INIT ONLY?                              04971
         BO    NOCLOSIN                                                 04972
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                     04973
         BO    NOCLOSIN                                                 04974
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                     04975
         BO    NOCLOSIN                                                 04976
         CLOSE (IN)                                                     04977
NOCLOSIN DS    0H                                                       04978
         CLOSE (SYSPRINT)                                               04979
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    * 04980
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE                  * 04981
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                   04982
         CLOSE (LABLDUMP)                                               04983
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE           04984
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                       04985
         BZ    NOLABACL         NO. NO FILE TO CLOSE                    04986
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                       04987
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                    04988
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   04989
         CLOSE (LABADDIN)                                               04990
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE       04991
* --- READ ONLY CODE ------------------------- below ---------------- * 04992
         TM    PARMFLG7,X'10'   Is SHOOVL on?                         * 04993
         BO    CLOOVL           Yes. Then we must close output files. * 04994
         TM    PARMFLG2,X'08'   Is this run read-only?                * 04995
         BO    THEEND           Yes. Only CLOSE input and SYSPRINT.   * 04996
CLOOVL   DS    0H               CLOSE the OPEN OUTnn files.           * 04997
* --- READ ONLY CODE ------------------------- above ---------------- * 04998
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                            04999
         BZ    CLOSE1         NO                                        05000
         CLOSE (OUT1)         CLOSE OUTPUT 1                            05001
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                            05002
         BZ    CLOSE2         NO                                        05003
         CLOSE (OUT2)         CLOSE OUTPUT 2                            05004
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                            05005
         BZ    CLOSE3         NO                                        05006
         CLOSE (OUT3)         CLOSE OUTPUT 3                            05007
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                            05008
         BZ    CLOSE4         NO                                        05009
         CLOSE (OUT4)         CLOSE OUTPUT 4                            05010
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                            05011
         BZ    CLOSE5         NO                                        05012
         CLOSE (OUT5)         CLOSE OUTPUT 5                            05013
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                            05014
         BZ    CLOSE6         NO                                        05015
         CLOSE (OUT6)         CLOSE OUTPUT 6                            05016
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                            05017
         BZ    CLOSE7         NO                                        05018
         CLOSE (OUT7)         CLOSE OUTPUT 7                            05019
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                            05020
         BZ    CLOSE8         NO                                        05021
         CLOSE (OUT8)         CLOSE OUTPUT 8                            05022
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                            05023
         BZ    CLOSE9         NO                                        05024
         CLOSE (OUT9)         CLOSE OUTPUT 9                            05025
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                           05026
         BZ    CLOSE10        NO                                        05027
         CLOSE (OUT10)        CLOSE OUTPUT 10                           05028
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                           05029
         BZ    CLOSE11        NO                                        05030
         CLOSE (OUT11)        CLOSE OUTPUT 11                           05031
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                           05032
         BZ    CLOSE12        NO                                        05033
         CLOSE (OUT12)        CLOSE OUTPUT 12                           05034
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                           05035
         BZ    CLOSE13        NO                                        05036
         CLOSE (OUT13)        CLOSE OUTPUT 13                           05037
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                           05038
         BZ    CLOSE14        NO                                        05039
         CLOSE (OUT14)        CLOSE OUTPUT 14                           05040
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                           05041
         BZ    CLOSE15        NO                                        05042
         CLOSE (OUT15)        CLOSE OUTPUT 15                           05043
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                           05044
         BZ    THEEND         NO                                        05045
         CLOSE (OUT16)        CLOSE OUTPUT 16                           05046
         SPACE 3                                                        05047
*                                                                       05048
*  Test for ABEND 069 first.  Did we come from an Input Error?          05049
*                                                                       05050
         TM    ABENDFLG,X'01'    Is ABEND flag on?                      05051
         BZ    THEEND            No.  End normally.                     05052
         ABEND 69                QUIT                                   05053
*                                                                       05054
*  THE END                                                              05055
*                                                                       05056
THEEND   DS    0H                                                       05057
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                05058
         BO    THEEND0           YES WE DO.  Issue RC = 0.              05059
         MVFMS WTOCBT+16(41),FILEDONE                                   05060
WTOCBT   WTO   'CBT990                                              '   05061
THEENDS  DS    0H                                                       05062
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?              05063
         BO    THEEND16         Yes, issue RC = 16                      05064
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                     05065
         BO    THEEND8          Yes, issue RC = 8                       05066
         B     THEEND0          Otherwise, issue RC = 0                 05067
*                               FLAGCODE must be in COPYMODS CSECT      05068
*                                 and not in GETMAINED area.            05069
THEEND16 MVI   FLAGCODE,X'04'           Code 16 flagged                 05070
         B     THEEND2                                                  05071
THEEND8  MVI   FLAGCODE,X'02'           Code  8 flagged                 05072
         B     THEEND2                                                  05073
THEEND0  MVI   FLAGCODE,X'00'           Code  0 flagged                 05074
*                                                                       05075
THEEND2  DS    0H                       FREEMAIN gotten storage.        05076
         LR    R3,R13                   Address of Getmained area       05077
         L     R13,4(,R13)              Restore caller's R13            05078
         FREEMAIN RC,A=(3),LV=WORKLENG,SP=0   Free Getmained storage.   05079
         TM    FLAGCODE,X'06'           Code 8 or 16?                   05080
         BZ    THEENC00                 Neither, end with code 0        05081
         TM    FLAGCODE,X'04'           Code 16?                        05082
         BZ    THEENC08                 No.  Do code 8.                 05083
THEENC16 DS    0H                       Yes. Do code 16.                05084
         MVC   16(4,R13),=F'16'         Return code 16    in R15        05085
         B     THEENDEN                 And get out.                    05086
THEENC08 DS    0H                                                       05087
         MVC   16(4,R13),=F'8'          Return code 8     in R15        05088
         B     THEENDEN                 And get out.                    05089
THEENC00 DS    0H                                                       05090
         MVC   16(4,R13),=F'0'          Return code 0     in R15        05091
THEENDEN LM    R14,R12,12(R13)                                          05092
         BR    R14                                                      05093
         EJECT                                                          05094
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *     05095
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     05096
*    BAL REGISTER IS R4.                                                05097
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     05098
HEX      DS    0H                                                       05099
         MVC   1(1,R15),0(R1)        Move byte                          05100
         UNPK  0(3,R15),1(2,R15)     Unpack                             05101
         TR    0(2,R15),HEXTAB-240                                      05102
         LA    R15,2(,R15)           Increment output pointer           05103
         LA    R1,1(,R1)             Increment input pointer            05104
         BCT   R0,HEX                Decrement length, then loop        05105
         MVI   0(R15),C' '           Blank the trailing byte            05106
         BR    R4                    Return to caller                   05107
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    05108
         SPACE                                                          05109
* --------------------------------------------------------- *           05110
*    BAL REGISTER IS R7.                                    *           05111
* --------------------------------------------------------- *           05112
*** ---  Conditionally open OUTnn either for OUTPUT or for INPUT  --- * 05113
*                                                                     * 05114
*   If you are doing READ and SHOOVL (Show Output Volumes) at the     * 05115
*   same time, then you have to OPEN the output volumes for INPUT     * 05116
*   instead of for OUTPUT.  Otherwise, when the output volumes are    * 05117
*   rewound after being OPEN for output, and then CLOSE'd, their      * 05118
*   previous contents will be wiped out. (You don't want to do that.  * 05119
*   READ is supposed to be "read-only", even for the output tapes.)   * 05120
*                                                                     * 05121
*** ----------------------------------------------------------------- * 05122
OPENOUT  DS    0H                    Address of DCB to OPEN is in R2.   05123
         ST    R7,SAVER7OP           Save BAL register.                 05124
         TM    PARMFLG2,X'08'        Is this READ only?                 05125
         BZ    OPENOUTP              No. Do OPEN normally.              05126
         TM    PARMFLG7,X'10'        Yes, but is it also SHOOVL?        05127
         BO    OPENINPT              SHOOVL and READ only, OPEN input.  05128
         B     OPENOUTP              Default. OPEN for output.          05129
OPENINPT DS    0H                                                       05130
         MVI   OPENODIS,X'80'        Move INPUT flags into OPEN.        05131
         B     OPENIDCB              Move in DCB info and OPEN.         05132
OPENOUTP DS    0H                                                       05133
         MVI   OPENODIS,X'8F'        Move OUTPUT flags into OPEN.       05134
OPENIDCB DS    0H                                                       05135
         STCM  R2,7,OPENODCB         Move in correct DCB and OPEN.      05136
*                          below --- Expansion of OPEN macro.           05137
         CNOP  0,4                                                      05138
         BAS   1,*+8                                                    05139
OPENODIS DC    AL1(143)                                                 05140
OPENODCB DC    AL3(OUT1)                                                05141
         SVC   19                                                       05142
*                          above --- Expansion of OPEN macro.           05143
OPENEND  DS    0H                                                       05144
         L     R7,SAVER7OP           Restore BAL register.              05145
         BR    R7                                                       05146
* --------------------------------------------------------- *           05147
*    BAL REGISTER IS R7.                                                05148
* --------------------------------------------------------- *           05149
CLRCSZMS DS    0H                Clear data fields from RECSZMSG        05150
         ADRSMS                                                         05151
         MVI   RECSZFNM,X'40'                                           05152
         MVC   RECSZFNM+1(4),RECSZFNM                                   05153
         MVI   RECSZRCD,C'0'                                            05154
         MVC   RECSZRCD+1(9),RECSZRCD                                   05155
         MVI   RECSZSIZ,C'0'                                            05156
         MVC   RECSZSIZ+1(9),RECSZSIZ                                   05157
         DROPMS                                                         05158
         BR    R7                                                       05159
* --------------------------------------------------------- *           05160
*    BAL REGISTER IS R7.                                                05161
* --------------------------------------------------------- *           05162
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS             05163
*                         ALTERED.                                      05164
         ADRSMS                                                         05165
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG          05166
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG          05167
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                05168
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                05169
* ----                                                                  05170
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS? 05171
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS            05172
         MVC   VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG       05173
INDVVOLS DS    0H                                                       05174
* ----                                                                  05175
         MVC   VOLDDN(5),LINE        CLEAR FIELD                        05176
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                    05177
         PTMSN VOLALT                MOVE MESSAGE TO PRT                05178
         DROPMS                                                         05179
         BR    R7                    RETURN TO CALLER                   05180
* --------------------------------------------------------- *           05181
VOL1KPRT DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS             05182
*                         ALTERED.                                      05183
         ADRSMS                                                         05184
         MVC   VOLKEPT+13(6),LINE    CLEAR OLDVOL FIELD IN MSG          05185
         MVC   VOLKEPT+13(6),VOLCHG  MOVE NEW VOL TO MSG                05186
* ----                                                                  05187
         MVC   VOLKDDN(5),LINE       CLEAR FIELD                        05188
         MVC   VOLKDDN(5),VOLDD      MOVE DD NAME IN                    05189
         PTMSN VOLKEPT               MOVE MESSAGE TO PRT                05190
         DROPMS                                                         05191
         BR    R7                    RETURN TO CALLER                   05192
* --------------------------------------------------------- *           05193
*    BAL REGISTER IS R7.                                                05194
* --------------------------------------------------------- *           05195
PRTBLCNT DS    0H                                                       05196
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE              05197
PRTBLCNE BR    R7                                                       05198
* --------------------------------------------------------- *           05199
*    BAL REGISTER IS R7.                                                05200
* --------------------------------------------------------- *           05201
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS        05202
         ST    R7,SAVE7REG                                              05203
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                 05204
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET   05205
         MVC   OUTCCWPT(4),=A(BACKCCW)                                  05206
BACKEXT1 L     R7,SAVE7REG                                              05207
BACKEXTE BR    R7                                                       05208
* --------------------------------------------------------- *           05209
*    BAL REGISTER IS R7.                                                05210
* --------------------------------------------------------- *           05211
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS      05212
         ST    R7,SAVE7REG                                              05213
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?        05214
         BZ    CLEARSV1                 NO. BYPASS CLEAR                05215
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                05216
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                         05217
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                      05218
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                      05219
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                   05220
CLEARSV1 L     R7,SAVE7REG                                              05221
CLEARSVE BR    R7                                                       05222
* --------------------------------------------------------- *           05223
*    BAL REGISTER IS R7.                                                05224
* --------------------------------------------------------- *           05225
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE      05226
         ST    R7,SAVE7REG                                              05227
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?        05228
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION          05229
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *  05230
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2         05231
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX     05232
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?          05233
         BZ    FIXALL3                                                  05234
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?             05235
         BZ    FIXLAST2                                                 05236
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                      05237
         BZ    FIXLAST1                                                 05238
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR      05239
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *  05240
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2             05241
         L     R7,SAVE7REG                                              05242
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG   05243
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                   05244
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                          05245
         L     R7,SAVE7REG                                              05246
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE  05247
FIXLAST1 DS    0H               REPLACE EOF2                            05248
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                          05249
         L     R7,SAVE7REG                                              05250
         B     ADDEOF2          CREATE THE EOF2                         05251
FIXEXTL1 DS    0H                                                       05252
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                     05253
         L     R7,SAVE7REG                                              05254
FIXEXTLE BR    R7                                                       05255
* --------------------------------------------------------- *           05256
*    BAL REGISTER IS R7.                                                05257
* --------------------------------------------------------- *           05258
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT     05259
*                             IOS USES DURING EXCP PROCESSING.          05260
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.   05261
* ------------------------------------------------------------------- * 05262
         MVC   OUTIOB(4),IOB01                                          05263
         MVC   OUTCSW(8),FUL2ZERO                                       05264
         MVC   OUTDCBPT(4),FUL2ZERO                                     05265
         MVC   OUTDCBPT+4(4),FUL2ZERO                                   05266
         MVC   OUTDCBPT+8(4),IOB02                                      05267
CLEARIOE BR    R7                                                       05268
* --------------------------------------------------------- *           05269
CLVL1IOB DS    0H                                                       05270
         MVC   VOL1IOB(4),IOB01                                         05271
         MVC   VOL1CSW(8),FUL2ZERO                                      05272
         MVC   VOL1DCBP(4),FUL2ZERO                                     05273
         MVC   VOL1DCBP+4(4),FUL2ZERO                                   05274
         MVC   VOL1DCBP+8(4),IOB02                                      05275
CLVL1IOE BR    R7                                                       05276
* --------------------------------------------------------- *           05277
CLVLRIOB DS    0H                                                       05278
         ST    R7,SAVER7C                                               05279
         MVC   VOLRIOB(4),IOB01                                         05280
         MVC   VOLRCSW(8),FUL2ZERO                                      05281
         MVC   VOLRDCBP(4),FUL2ZERO                                     05282
         MVC   VOLRDCBP+4(4),FUL2ZERO                                   05283
         MVC   VOLRDCBP+8(4),IOB02                                      05284
         L     R7,SAVER7C                                               05285
CLVLRIOE BR    R7                                                       05286
* --------------------------------------------------------- *           05287
*    BAL REGISTER IS R7.                                                05288
* --------------------------------------------------------- *           05289
TESTOPRT DS    0H                         Print beginnings of open      05290
*                                          output tapes.                05291
         ST    R7,SAVER7A                 Protect BAL register.         05292
         TM    PARMFLG7,X'10'             IS SHOOVL IN EFFECT?          05293
         BZ    TESTOPND                   NO. DON'T DO THIS ROUTINE.    05294
         MVC   LINE,LINE-1                CLEAR OUTPUT LINE             05295
         MVC   LINE(L'OVOLMSGH),OVOLMSGH  OUTPUT VOL1 HEADER            05296
         PUT   SYSPRINT,LINE                                            05297
         MVC   LINE,LINE-1                CLEAR OUTPUT LINE             05298
         MVC   LINE+1(80),VOL1AREA        MOVE LABEL TEXT ITSELF        05299
         HEX   LINE+106,1,VOL1FLAG        SHOW IF ELIGIBLE LABEL        05300
         TM    ASCIIFLG,X'01'             ASCII FLAG SET FROM LABELCHK? 05301
         BO    TESTOASC                   YES. TREAT LABEL AS ASCII     05302
         MVC   LINE+85(6),EBCDL           NO. SHOW IT'S EBCDIC          05303
         B     TESTODPR                   GO PRINT THE RECORD           05304
TESTOASC DS    0H                                                       05305
         ST    R5,SAVE5ASC                SAVE R5                       05306
         L     R5,SAVTRTCS                POINT TO TRANS TBL DSECT      05307
         USING TRTCSECT,R5                                              05308
         TR    LINE+1(80),TRTA2E          TRANSLATE RCD IMAGE TO EBCDIC 05309
         L     R5,SAVE5ASC                RESTORE R5                    05310
         DROP  R5                                                       05311
         MVC   LINE+85(6),ASCIL           SHOW IT'S ASCII               05312
TESTODPR DS    0H                         DO THE PRINT                  05313
         TM    ISLBLFLG,X'03'             IS IMAGE A LABEL?             05314
         BZ    TESTONLB                   NO. SAY IT'S NOT.             05315
         TM    LBLFLAG,X'04'              IS IT VOL1?                   05316
         BZ    TESTONV1                   NO. SAY THAT.                 05317
         MVC   LINE+93(10),=C'VOL1 LABEL'   YES. TELL EM.               05318
         B     TESTORPT                                                 05319
TESTONV1 DS    0H                           SAY NOT VOL1.               05320
         MVC   LINE+93(10),=C'NOT A VOL1'                               05321
         B     TESTORPT                                                 05322
TESTONLB DS    0H                           SAY NOT A LABEL AT ALL.     05323
         MVC   LINE+93(10),=C'NOT  LABEL'                               05324
TESTORPT DS    0H                                                       05325
         PUT   SYSPRINT,LINE                                            05326
TESTOPND DS    0H                                                       05327
         L     R7,SAVER7A                                               05328
         BR    R7                                                       05329
* --------------------------------------------------------- *           05330
*    BAL REGISTER IS R7.                                    *           05331
* ----------------------------------------------------------------- *   05332
TESTOVOL DS    0H     Test output volumes to see what VOL1 labels   *   05333
*                      that they may have, and if they have any.    *   05334
* ------------------------------------------------------------------*   05335
         ST    R7,SAVER7B                 Protect BAL register.         05336
         TM    PARMFLG7,X'10'             Is SHOOVL in effect?          05337
         BZ    TESTOVOE                   No. Don't do this routine.    05338
* ------------------------------------------------------------------*   05339
TESTOV1  DS    0H                         Try to read 80 bytes of       05340
*                                          each output volume.          05341
         MVC   VOL1AREA,VOL1AREA-1        Clear the staging area.       05342
         MVI   VOL1ECB,X'00'              Initialize ECB.               05343
         EXCP  VOL1IOB                    Read 80 bytes of output tape. 05344
         WAIT  ECB=VOL1ECB                                              05345
*        CLI   VOL1ECB,X'7F'              Read complete normally?   *   05346
*           (Don't test, because there may not be 80 bytes there.)  *   05347
* ------------------------------------------------------------------*   05348
TESTOREW DS    0H                         Now rewind each output volume 05349
         BAL   R7,CLVLRIOB                Clear IOB for next use.       05350
         MVC   VOLRDCBP(4),VOL1DCBP       Use the same DCB.             05351
         MVI   VOLRECB,X'00'              Initialize ECB.               05352
         EXCP  VOLRIOB                    Rewind the output tape.       05353
         WAIT  ECB=VOLRECB                                              05354
*        CLI   VOLRECB,X'7F'              Read complete normally?   *   05355
*                                (Rewind unconditionally.....)      *   05356
* ------------------------------------------------------------------*   05357
*    Call the LABELCHK program and get the returns.                 *   05358
* ------------------------------------------------------------------*   05359
         L     R15,LABCHENT       Get entry point of called program     05360
         STM   R1,R3,SAVE13LC     Save R1 and R2 and R3.                05361
         LA    R1,PARMFLGS        Point R1 to parm flags.               05362
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   05363
         L     R3,=A(VOL1AREA)    Point R3 to address of INAREA.        05364
         BALR  R14,R15                 Do CALL.                         05365
         ST    R2,SAVELBCK             Address of returned user area    05366
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   05367
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          05368
*                                 A call to LABCHECK overlays INAREA,   05369
*                                 so if a LABCHECK routine alters       05370
*                                 a label, the alteration will be       05371
*                                 written out to the output tapes.      05372
         MVC   VOL1AREA(80),0(R3)         Overlay 80 bytes of VOL1AREA  05373
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   05374
         MVI   VOL1FLAG,X'00'     Clear eligibility flags.              05375
         TM    ISLBLFLG,X'03'     Test VOL1AREA if eligible VOL1 label. 05376
         BNZ   TESTOLBL           Is a label. See if VOL1.              05377
         B     TESTOLEN           Not a label.                          05378
* ------------------------------------------------------------------*   05379
TESTOLBL DS    0H                 LABELCHK has now been done.           05380
         TM    LBLFLAG,X'04'      Is this label a VOL1?                 05381
         BZ    TESTOLEN           No. Leave eligibilty flag zeros.      05382
         MVC   VOL1FLAG(1),ISLBLFLG   Yes. Show if EBCDIC or ASCII.     05383
         TM    ISLBLFLG,X'02'     ASCII tape?                           05384
         BZ    TESTONAS           No. Must be EBCDIC. Set eligibility.  05385
         CLI   VOL1AREA+79,X'33'  ASCII VOL1 Type 3?                    05386
         BE    TESTONT3           Yes. Set appropriate flags.           05387
         CLI   VOL1AREA+79,X'34'  ASCII VOL1 Type 4?                    05388
         BE    TESTONT4           Yes. Set appropriate flags.           05389
         B     TESTOLEN           No indicator, not eligible for keep.  05390
TESTONT3 DS    0H                 Deal with Type 3.                     05391
         OI    VOL1FLAG,X'04'     Turn on type 3 bit in flag            05392
         B     TESTONAS           Set eligibility bit.                  05393
TESTONT4 DS    0H                 Deal with Type 4.                     05394
         OI    VOL1FLAG,X'08'     Turn on type 4 bit in flag            05395
TESTONAS DS    0H                 Turn on eligibility for VOL1 keep.    05396
         OI    VOL1FLAG,X'10'     Set eligibility bit.                  05397
TESTOLEN DS    0H                 Print image of what we found.         05398
         BAL   R7,TESTOPRT        Do it even if it isn't appropriate.   05399
TESTOVOE DS    0H                 End of routine.                       05400
         L     R7,SAVER7B         Restore BAL register.                 05401
         BR    R7                                                       05402
* ------------  CONSTANTS  ---------------- *  BELOW                    05403
READKFLG DC    X'00'                                                    05404
EBCDL    DC    C'EBCDIC'          Mark as EBCDIC                        05405
ASCIL    DC    C'ASCII '          Mark as ASCII                         05406
* ------------  CONSTANTS  ---------------- *  ABOVE                    05407
* --------------------------------------------------------- *           05408
*    BAL REGISTER IS R7.                                                05409
* --------------------------------------------------------- *           05410
CHANGVOL DS    0H       PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL     * 05411
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 05412
* ------------------------------------------------------------------- * 05413
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?   05414
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                 05415
         TM    LBLFLAG,X'04'   ARE WE WRITING A VOL1 LABEL?           * 05416
         BZ    CHANGVOE        NO, GET OUT OF THIS ROUTINE.             05417
         TM    LBLFLAG,X'03'   IS THIS A HDR1 OR A HDR2?                05418
         BNZ   CHANGVOE        NO. DON'T ATTEMPT TO CHANGE THIS.        05419
         TM    PARMFLG2,X'41'  ARE WE CHANGING OUTPUT VOLSERS?        * 05420
         BZ    CHANGVOE        NO, GET OUT OF THIS ROUTINE.             05421
* - - - - - - - -  KEEPVOL PROCESSING   - - - - - - - - below - - - *   05422
*    This routine assumes that BAL R7,GETVTABL was done first....   *   05423
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   05424
         TM    PARMFLG6,X'08'       Doing KEEPVOL processing?           05425
         BZ    CHANNOKE             No. Skip this routine.              05426
*                                                                       05427
* --- >   TEST                 Comparison of input and output flags.    05428
*        MVC   LINE,LINE-1       (Takes up X'7D' bytes of CSECT space   05429
*        HEX   LINE+8,1,V1FLAG        when uncommented.)                05430
*        HEX   LINE+18,1,INVOLFLG                                       05431
*        MVC   LINE+2(3),=C'V1F'                                        05432
*        MVC   LINE+12(4),=C'INVF'                                      05433
*        PUT   SYSPRINT,LINE                                            05434
* --- >   TEST                 Being kept here for reference.           05435
*                                                                       05436
         TM    INVOLFLG,X'10'       If the input tape isn't SL,         05437
*                                    i.e. the input tape's eligibility  05438
*                                    flag is not on, then there's       05439
         BZ    CHANNOKE              nothing to do here.                05440
*                                   First, we make sure the original    05441
*                                    VOL1 label is defaulted in place.  05442
         ST    R2,SAVER2X1          Save R2.                            05443
         L     R2,VOL1SENT          Load VOL1 storage area CSECT.       05444
         USING VOL1STOR,R2          Tell assembler.                     05445
         MVC   INAREA(80),VOL1LBIN  Overlay VOL1 label with original.   05446
         L     R2,SAVER2X1          Restore R2.                         05447
         DROP  R2
* ----                                                                  05448
*   Now, we see if we should use the output tape's VOL1 label, which    05449
*    has been placed in V1VOL1 by the GETVTABL routine.                 05450
*   If V1FLAG doesn't have the eligibility bit on, this will be the     05451
*    original VOL1 label.  See GETVTABL routine.                        05452
* ----                                                                  05453
         CLC   INVOLFLG,V1FLAG      Compare type of VOL1 that we have.  05454
         BNE   CHANNOKE             Not equal to IN VOL1? No action.    05455
         TM    V1FLAG,X'10'         Eligibility bit on for output?      05456
         BZ    CHANNOKE             No. No action.                      05457
         MVC   INAREA(80),V1VOL1    Yes. Overlay VOL1 from output tape. 05458
         MVC   VOLCHG(6),INAREA+4   Grab VOLSER from output VOL1.       05459
         MVC   VOLDD(5),DDOCHG      Move this output DDNAME in.         05460
         TM    ISLBLFLG,X'02'       ASCII?                              05461
         BZ    CHAAKVPR             No. Print in message as is.         05462
         ST    R5,R5HXPRT           Save register.                      05463
         L     R5,SAVTRTCS          Point to translation table CSECT.   05464
         USING TRTCSECT,R5                                              05465
         TR    VOLCHG(6),TRTA2E     Translate VOLSER to EBCDIC to print 05466
         DROP  R5                                                       05467
CHAAKVPR DS    0H                                                       05468
         ST    R7,SAVE7RG5                                              05469
         BAL   R7,VOL1KPRT          Print VOL1 from output reused msg.  05470
         L     R7,SAVE7RG5                                              05471
         B     CHCHANOW             See if you need to change owner.    05472
CHANNOKE DS    0H                                                       05473
* - - - - - - - -  KEEPVOL PROCESSING   - - - - - - - - above - - - *   05474
*                                   Change VOLSER here.             *   05475
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   05476
         TM    PARMFLG6,X'08'       KEEPVOL processing on?              05477
         BO    CHCHANOW             Yes. Don't change volser.           05478
         TM    ISLBLFLG,X'02'       Is this an ASCII label?             05479
         BZ    CHEBCVID             No. No translation of volser.       05480
         ST    R5,R5HXPRT           Save register.                      05481
         L     R5,SAVTRTCS          Point to translation table CSECT.   05482
         USING TRTCSECT,R5                                              05483
         MVC   VOLASC(6),VOLCHG                                         05484
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.          05485
         DROP  R5                                                       05486
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace         05487
         B     CHASCVID             And not the EBCDIC one.             05488
CHEBCVID DS    0H                                                       05489
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                      05490
         B     CHCHANOW                                                 05491
CHASCVID DS    0H                                                       05492
CHCHANOW DS    0H                                                       05493
* -- >>                                                                 05494
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                 05495
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION       05496
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                05497
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE  05498
* -- >>                                                                 05499
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             05500
         BZ    CHEBCTOW             NO. NO TRANSLATION OF OWNER.        05501
         ST    R5,R5HXPRT           Save register.                      05502
         L     R5,SAVTRTCS          Point to translation table CSECT.   05503
         USING TRTCSECT,R5                                              05504
         MVC   TAPEOASC(14),TAPEOWN                                     05505
         TR    TAPEOASC(14),TRTE2A       Translate owner to ASCII.      05506
         DROP  R5                                                       05507
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace       05508
         B     CHASCTOW                  And not the EBCDIC one.        05509
CHEBCTOW DS    0H                                                       05510
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner         05511
CHASCTOW DS    0H                                                       05512
* -- >>                                                                 05513
         MVC   LINE(133),LINE-1                                         05514
         ADRSMS                                                         05515
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    05516
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       05517
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    05518
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    05519
         PTMSN OWNRMSG                                                  05520
         DROPMS                                                         05521
CHNOTOWN DS    0H                                                       05522
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS     05523
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS            05524
CHEXTLAB DS    0H                                                       05525
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?         05526
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING           05527
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.          05528
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?       05529
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN            05530
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          05531
         BO    CHNOZAPV            YES, SKIP SECOND WRITE               05532
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                  05533
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                05534
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?              05535
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.          05536
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?      05537
         BZ    CHNOZAPV            NO. BYPASS.                          05538
* -- >>                                                                 05539
         TM    ASCIIFLG,X'01'                                           05540
         BO    CHASCVE1                                                 05541
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             05542
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER        05543
CHASCVE1 DS    0H                                                       05544
         ST    R5,R5HXPRT           Save register.                      05545
         L     R5,SAVTRTCS          Point to translation table CSECT.   05546
         USING TRTCSECT,R5                                              05547
         MVC   VOLASC(6),VOLCHG                                         05548
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.          05549
         DROP  R5                                                       05550
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace         05551
         B     CHASCVEX             And not the EBCDIC one.             05552
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL   05553
CHASCVEX DS    0H                                                       05554
* -- >>                                                                 05555
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                 05556
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION       05557
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?      05558
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE          05559
* -- >>                                                                 05560
         TM    ASCIIFLG,X'01'                                           05561
         BO    CHASCVE2                                                 05562
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             05563
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER        05564
CHASCVE2 DS    0H                                                       05565
         ST    R5,R5HXPRT           Save register.                      05566
         L     R5,SAVTRTCS          Point to translation table CSECT.   05567
         USING TRTCSECT,R5                                              05568
         MVC   TAPEOASC(14),TAPEOWN                                     05569
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.     05570
         DROP  R5                                                       05571
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace       05572
         B     CHASCTEX                  And not the EBCDIC one.        05573
CHEBCTEX DS    0H                                                       05574
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner         05575
CHASCTEX DS    0H                                                       05576
* -- >>                                                                 05577
         MVC   LINE(133),LINE-1                                         05578
         ADRSMS                                                         05579
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    05580
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       05581
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    05582
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    05583
         PTMSN OWNRMSG                                                  05584
         DROPMS                                                         05585
CHNOZAPV DS    0H                                                       05586
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS            05587
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          05588
         BO    CHGWRIT             YES, SKIP SECOND WRITE               05589
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?            05590
         BO    CHGPRINT            YES, PRINT.                          05591
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?      05592
         BO    CHGPRINT            YES, PRINT                           05593
         B     CHGWRIT                                                  05594
CHGPRINT DS    0H                                                       05595
         TM    PARMFLG6,X'08'      KEEPVOL processing on?               05596
         BO    CHGWRIT             Yes. Don't print message.            05597
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                 05598
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG       05599
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL  05600
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG       05601
         TM    PARMFLG2,X'01'      CHGVOL processing on?                05602
         BO    CHGCHGVL            Yes. Print appropriate messages.     05603
         TM    V1FLAG,X'10'        KEEPVOL output eligibility flag on?  05604
         BZ    CHGWRIT             No. Suppress VOLSER change message.  05605
CHGCHGVL DS    0H                                                       05606
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                  05607
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN           05608
         TM    EXASCFLG,X'01'                                           05609
         BZ    CHGPRANT                                                 05610
         ST    R5,R5HXPRT        Save register.                         05611
         L     R5,SAVTRTCS       Point to translation table CSECT.      05612
         USING TRTCSECT,R5                                              05613
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC           05614
         ST    R7,SAVE7RG5                                              05615
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         * 05616
         L     R7,SAVE7RG5                                              05617
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII            05618
         L     R5,R5HXPRT        Restore register.                      05619
         DROP  R5                                                       05620
         B     CHGWRIT                                                  05621
CHGPRANT DS    0H                                                       05622
         ST    R7,SAVE7RG5                                              05623
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         * 05624
         L     R7,SAVE7RG5                                              05625
CHGWRIT  DS    0H                                                     * 05626
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 05627
CHANGVOE BR    R7                  END OF ROUTINE - RETURN              05628
         SPACE 3                                                        05629
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII  05630
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 05631
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.       05632
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS      05633
CHASCLAB DS    0H                                                       05634
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          05635
         BO    CHNOASCV            YES, SKIP SECOND WRITE               05636
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL   05637
         MVC   EXTLBLIN(4),AVOL1LIT                                     05638
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?              05639
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.         05640
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.        05641
CHASCLX1 DS    0H                                                       05642
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI  05643
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT             05644
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION   05645
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?      05646
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE          05647
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO         05648
         MVC   LINE(133),LINE-1                                         05649
         ADRSMS                                                         05650
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    05651
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       05652
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    05653
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    05654
         PTMSN OWNRMSG                                                  05655
         DROPMS                                                         05656
CHNOASCV DS    0H                                                       05657
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS      05658
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          05659
         BO    CHGWRASX            YES, SKIP SECOND WRITE               05660
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?            05661
         BO    CHGASPRT            YES, PRINT.                          05662
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?      05663
         BO    CHGASPRT            YES, PRINT                           05664
         B     CHGWRAS                                                  05665
CHGASPRT DS    0H                                                       05666
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                 05667
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG       05668
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL  05669
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG       05670
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                  05671
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN           05672
         ST    R7,SAVE7RG5                                              05673
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED    05674
         L     R7,SAVE7RG5                                              05675
         B     CHGWRAS                                                  05676
CHGWRASX DS    0H                                                       05677
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal      05678
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.   05679
CHGWRAS  DS    0H                                                       05680
         ST    R5,R5HXPRT        Save register.                         05681
         L     R5,SAVTRTCS       Point to translation table CSECT.      05682
         USING TRTCSECT,R5                                              05683
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.   05684
         DROP  R5                                                       05685
         L     R5,R5HXPRT        Restore register.                      05686
CHASCEND BR    R7                  END OF ROUTINE - RETURN              05687
         SPACE 3                                                        05688
* --------------------------------------------------------- *           05689
*    BAL REGISTER IS R7.                                                05690
* --------------------------------------------------------- *           05691
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                 05692
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED         05693
* --------------------------------------------------------- *           05694
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE            05695
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER              05696
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER              05697
         AR    R5,R2               ADD TO BYTE COUNT                    05698
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH             05699
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD          05700
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                  05701
ADDCNOOV DS    0H                                                       05702
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE       05703
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE       05704
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN              05705
* --------------------------------------------------------- *           05706
*    BAL REGISTER IS R7.                                                05707
* --------------------------------------------------------- *           05708
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.           05709
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76             05710
* --------------------------------------------------------- *           05711
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT         05712
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       05713
         BE    MOVEHI09                                                 05714
         MVC   0(4,R3),0(R2)                                            05715
         B     MOVEHIEN                                                 05716
         LA    R2,1(,R2)                                                05717
         LA    R3,1(,R3)                                                05718
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       05719
         BE    MOVEHI08                                                 05720
         MVC   0(3,R3),0(R2)                                            05721
         B     MOVEHIEN                                                 05722
         LA    R2,1(,R2)                                                05723
         LA    R3,1(,R3)                                                05724
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       05725
         BE    MOVEHI07                                                 05726
         MVC   0(2,R3),0(R2)                                            05727
         B     MOVEHIEN                                                 05728
         LA    R2,1(,R2)                                                05729
         LA    R3,1(,R3)                                                05730
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       05731
         BE    MOVEHIEN                                                 05732
         MVC   0(1,R3),0(R2)                                            05733
MOVEHIEN BR    R7                                                       05734
* --------------------------------------------------------- *           05735
*    BAL REGISTER IS R7.                                                05736
* --------------------------------------------------------- *           05737
****                                                                    05738
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                            05739
****                                                                    05740
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                05741
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                   05742
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,     05743
****                      THEN BACK SPACE FILE OVER TAPE MARK.          05744
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR        05745
****                                                                    05746
* --------------------------------------------------------- *           05747
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO    05748
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       05749
         EXCP  INIOB          READ                                      05750
         WAIT  ECB=INECB      WAIT FOR READ                             05751
         TM    INCSW+4,X'01'  WAS TM READ?                              05752
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.              05753
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?               05754
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                 05755
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY              05756
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                        05757
         L     R2,FULLWORK           LOAD FULLWORD LENGTH               05758
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY              05759
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                05760
         L     R3,FULLWORK           LOAD FULLWORD LENGTH               05761
         SR    R2,R3                 R2=ACTUAL LENGTH READ              05762
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS           05763
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?          05764
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE     05765
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                         05766
* ------------------------------------------------------------------*   05767
*    Call the LABELCHK program and get the returns.                 *   05768
* ------------------------------------------------------------------*   05769
         L     R15,LABCHENT       Get entry point of called program     05770
         STM   R1,R3,SAVE13LC     Save R1 and R2.                       05771
         LA    R1,PARMFLGS        Point R1 to parm flags.               05772
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   05773
         L     R3,=A(INAREA)      Point R3 to address of INAREA.        05774
         BALR  R14,R15                 Do CALL.                         05775
         ST    R2,SAVELBCK             Address of returned user area    05776
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   05777
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          05778
*                                 A call to LABCHECK overlays INAREA,   05779
*                                 so if a LABCHECK routine alters       05780
*                                 a label, the alteration will be       05781
*                                 written out to the output tapes.      05782
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA    05783
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   05784
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?  05785
         BO    CLOSMALL           Yes. Close all files and finish up.   05786
* ------------------------------------------------------------------*   05787
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE            05788
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                      05789
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?         05790
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS        05791
         TM    ISLBLFLG,X'02'                                           05792
         BO    LBDQLABL                                                 05793
*                             NORMALLY WITHOUT CHANGING ANYTHING.       05794
*                             BUT IF IT IS A DATA FILE,                 05795
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE  05796
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK         05797
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       05798
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.           05799
         EXCP  INIOB          DO THIS EXCP                              05800
         WAIT  ECB=INECB      WAIT FOR READ                             05801
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               05802
         BNE   LBDQINER       NO -- ERROR                               05803
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     05804
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            05805
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR            05806
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR    05807
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE        05808
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       05809
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ     05810
         EXCP  INIOB          DO THIS EXCP                              05811
         WAIT  ECB=INECB      WAIT FOR READ                             05812
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               05813
         BNE   LBDQINER       NO -- ERROR                               05814
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     05815
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            05816
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE         05817
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       05818
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE    05819
         EXCP  INIOB          DO THIS EXCP                              05820
         WAIT  ECB=INECB      WAIT FOR READ                             05821
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               05822
         BNE   LBDQINER       NO -- ERROR                               05823
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     05824
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            05825
LBDQREND BR    R7                                                       05826
* --------------------------------------------------------- *           05827
*    BAL REGISTER IS R7.                                                05828
* --------------------------------------------------------- *           05829
****                                                                    05830
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.       05831
****                                                                    05832
* --------------------------------------------------------- *           05833
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)      05834
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                05835
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                05836
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.    05837
         ST    R5,R5HXPRT        Save register.                         05838
         L     R5,SAVTRTCS       Point to translation table CSECT.      05839
         USING TRTCSECT,R5                                              05840
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE              05841
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?           05842
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.       05843
         B     HEXPRNXX          Bypass Hex Print from external labels  05844
*                                                                       05845
HEXPRNEX DS    0H                Hex Print from External Label Input    05846
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                05847
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                05848
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.     05849
         ST    R5,R5HXPRT        Save register.                         05850
         L     R5,SAVTRTCS       Point to translation table CSECT.      05851
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE              05852
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?           05853
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.       05854
         L     R2,=F'80'         We know to print exactly 80 bytes.     05855
         B     MOVESIZ1          Now go print them.                     05856
*                                                                       05857
HEXPRNXX DS    0H                                                       05858
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT     05859
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?          05860
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.          05861
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                  05862
MOVESIZ1 DS    0H                                                       05863
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA               05864
         BCTR  R2,0                ONE LESS FOR EXECUTE                 05865
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05866
         EX    R2,MOVRULER         PUT IN HEX RULER                     05867
         PUT   SYSPRINT,LINE                                            05868
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05869
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  05870
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.    05871
         EX    R2,MOVDATIN         No. Move the record from INAREA.     05872
         B     HEXEN000            and continue to print.               05873
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.             05874
HEXEN000 DS    0H                                                       05875
         TM    PARMFLG5,X'80'      Is ASCII on?                         05876
         BZ    HEXEN001            No. Use EBCDIC printables.           05877
         EX    R2,PRHEXAS          Yes. Use ASCII printables.           05878
         B     HEXENSK1                                                 05879
HEXEN001 DS    0H                                                       05880
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES     05881
HEXENSK1 DS    0H                                                       05882
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05883
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT       05884
         PUT   SYSPRINT,LINE                                            05885
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  05886
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.    05887
         EX    R2,MOVDATIN         No. Move the record from INAREA.     05888
         B     HEXEN002            and continue to print.               05889
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.             05890
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE      05891
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05892
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT       05893
         PUT   SYSPRINT,LINE                                            05894
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  05895
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.    05896
         EX    R2,MOVDATIN         No. Move the record from INAREA.     05897
         B     HEXEN003            and continue to print.               05898
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.             05899
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE       05900
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05901
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT       05902
         PUT   SYSPRINT,LINE                                            05903
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK     05904
         B     HEXPREND                                                 05905
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***            05906
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***            05907
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***            05908
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***            05909
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***            05910
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***            05911
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***            05912
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***            05913
HEXPREND DS    0H                                                       05914
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE             05915
NOHEXPRO DS    0H                                                       05916
         L     R5,R5HXPRT                                               05917
         DROP  R5                                                       05918
         BR    R7             RETURN TO CALLER                          05919
* --------------------------------------------------------- *           05920
*    BAL REGISTER IS R7.                                    *           05921
* --------------------------------------------------------- *           05922
GETVTABL DS    0H        ***  Get stored entry from VOL1 table  ***     05923
*                        ***    and place it into our CSECT     ***     05924
*                        ***  --------------------------------  ***     05925
         ST    R7,SV7VTABL             Protect this routine's BAL reg.  05926
         TM    PARMFLG6,X'08'          Changing entire VOL1 label?      05927
         BZ    GETVTABE                No. Skip this routine entirely.  05928
         TM    LBLFLAG,X'04'           Is this a VOL1 label?            05929
         BZ    GETVTABE                No. Don't do this routine.       05930
         STM   R2,R5,SAVER2T5          Save a bunch of registers.       05931
         LA    R4,0                    Clear Reg 4                      05932
         LA    R5,0                    Clear Reg 5                      05933
         IC    R5,V1INDEX              Load index into table.           05934
         LA    R3,L'V1TABENT           Load table entry size.           05935
         MR    R4,R3                   Multiply index by size of entry  05936
         L     R2,VOL1SENT             Entry point of VOL1STOR CSECT,   05937
*                                       which is beginning of the table 05938
         USING VOL1STOR,R2             Tell assembler.                  05939
         AR    R2,R5                   Point to actual table entry.     05940
         MVC   V1TABENT(L'V1TABENT),0(R2)  Dump entry into our CSECT.   05941
*                                      This is the "found" VOL1 label,  05942
*                                      and its associated flag bits.    05943
         TM    0(R2),X'10'             Is the target tape's             05944
*                                       eligibility flag on?            05945
         BO    GETVTELG                Yes. Keep the found VOL1 label.  05946
*                                      Otherwise.......                 05947
         MVC   V1VOL1(80),VOL1LBIN     No. Use the original VOL1 label. 05948
         MVI   V1FLAG,X'00'            Turn eligibility flag, etc. off. 05949
*                          ....... This is a safety net, that at        05950
*                                   least, the orig VOL1 is in place.   05951
GETVTELG DS    0H                                                       05952
         LM    R2,R5,SAVER2T5          Restore the work registers.      05953
         DROP  R2                                                       05954
GETVTABE DS    0H                                                       05955
         L     R7,SV7VTABL             Restore BAL register for routine 05956
         BR    R7                      Return to caller.                05957
* --- Constants associated with this routine. ------- *                 05958
V1INDEX  DC    X'00'                   Index into VOL1 storage table.   05959
V1TABENT DS    0CL81                   Image of this VOL1 table entry.  05960
V1FLAG   DC    X'00'                   Image of gotten flag.            05961
*              X'00'                   No VOL1 label found              05962
*              X'10'                   Eligibility flag                 05963
*              X'01'                   EBCDIC VOL1 label                05964
*              X'02'                   ASCII  VOL1 label                05965
*              X'04'                   ASCII Type 3                     05966
*              X'08'                   ASCII Type 4                     05967
V1VOL1   DC    CL80' '                 Image of gotten VOL1 label.      05968
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - -         * 05969
         EJECT                                                          05970
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - * 05971
MAXBLK   DC    F'0'           Maximum Blocksize for file                05972
MINBLK   DC    F'0'           Minimum Blocksize for file                05973
FILNOSAV DC    CL5' '                                                   05974
FILNOSAW DC    CL5' '         One more than FILNOSAV                    05975
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED           05976
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO          05977
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT 05978
FUL2ZERO DC    2F'0'                                                    05979
IOB01    DC    X'02000000'                                              05980
IOB02    DC    X'00010000'                                              05981
PL4NO3   DC    PL4'3'                                                   05982
BLOKCNTP DC    F'0'                                                     05983
FILECNTP DC    F'1'                                                     05984
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES      05985
TOTBYH   DC    F'0'                                                     05986
TOTBYL   DC    F'0'                                                     05987
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES 05988
PRVBYH   DC    F'0'                                                     05989
PRVBYL   DC    F'0'                                                     05990
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE       05991
DBINFH   DC    F'0'                                                     05992
DBINFL   DC    F'0'                                                     05993
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL      05994
DBINH    DC    F'0'                                                     05995
DBINL    DC    F'0'                                                     05996
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS     05997
LABINH   DC    F'0'                                                     05998
LABINL   DC    F'0'                                                     05999
WORKA    DC    D'0'                                                     06000
WORKL    DC    D'0'                                                     06001
WORKP    DC    D'0'                                                     06002
BLOKCNT  DC    F'0'                                                     06003
FILECNT  DC    F'1'                                                     06004
LABELCNT DC    F'0'                                                     06005
SAVUNIT  DC    CL4' '                                                   06006
         DC    CL1' '         Need this to absorb blank from HEX macro  06007
SAVDDN   DC    CL5' '                                                   06008
SAVVOLSR DC    CL6' '                                                   06009
         DC    C'0'                                                     06010
BLKCNTRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES   06011
         DC    C'0'                                                     06012
BMOVEDRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES   06013
SAVBYTES DC    X'0000'                                                  06014
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE      06015
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT     06016
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT    06017
NOUTSFLG DC    X'00'          NO OUTxx DDs were coded in JCL            06018
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                       06019
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT 06020
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT 06021
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND            06022
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL        06023
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE      06024
*              X'01'          TAPE IS SL                                06025
HEXEXFLG DC    X'00'          Hex printing from INAREA.                 06026
*              X'01'          Hex printing from EXTLBLIN.               06027
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS     06028
*              X'00'          WE ARE NOW WRITING DATA FROM THE          06029
*                             INPUT TAPE. X'01' IS OFF.                 06030
*              X'01'          WE ARE NOW WRITING LABELS FROM THE        06031
*                             EXTERNAL FILE                             06032
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK         06033
*              X'04'          WE CAME FROM THE ENDHEADR LABEL           06034
*              X'08'          WE CAME FROM THE LBLINEND LABEL           06035
*                             THIS MEANS EOF OF THE LABADDIN FILE       06036
*              X'10'          FINISHED FIXING LABELS                    06037
RESLTMWF DC    X'00'                                                    06038
*              X'01'          CAME FROM RESETIN FOR LABADDIN            06039
FLAGCODE DC    X'00'                                                    06040
CODE00   EQU   X'00'                                                    06041
CODE04   EQU   X'01'                                                    06042
CODE08   EQU   X'02'                                                    06043
CODE16   EQU   X'04'                                                    06044
**** ----- LABELCHK -------------------->>>>  Passed area, below        06045
*                                                                       06046
LCHKPASS DS    0H                                                       06047
*                                                                       06048
INAREAX  DC    CL80' '        Read labels into here.                    06049
         DC    CL10' '        Padding for possible overflow.            06050
* --------------------------------------------------------- *           06051
*                                                                       06052
*                                                                       06053
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL      06054
*              X'00'          DATA IS NOT A LABEL                       06055
*              X'01'          DATA IS A LABEL                           06056
*              X'02'          DATA IS AN ASCII LABEL                    06057
*                                                                       06058
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST              06059
*              X'01'          BECAUSE OF LABLDUMP DD MISSING            06060
*              X'02'          BECAUSE OF SYSIN    DD MISSING            06061
*              X'04'          BECAUSE OF LABADDIN DD MISSING            06062
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               06063
*              X'01'          LABLDUMP DD IS OPEN                       06064
*              X'02'          SYSIN    DD IS OPEN                       06065
*              X'04'          LABADDIN DD IS OPEN                       06066
L80FLAG  DC    X'00'                                                    06067
*              X'01'          LAST DATA WAS 80 BYTE RECORD              06068
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN   06069
*              X'01'          HDR1 HAS BEEN SEEN                        06070
*              X'02'          HDR2 HAS BEEN SEEN                        06071
*              X'04'          VOL1 HAS BEEN SEEN                        06072
*              X'08'          HDR1 IS FROM AN INITTED TAPE              06073
*              X'10'          EOF1 HAS BEEN SEEN                        06074
*              X'20'          EOF2 HAS BEEN SEEN                        06075
*              X'40'          EOV1 HAS BEEN SEEN                        06076
*              X'80'          EOV2 HAS BEEN SEEN                        06077
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                   06078
EXASCFLG DC    X'00'          External Label is ASCII if X'01'          06079
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK  06080
LABADFLG DC    X'00'          If X'01' then close LABADDIN file         06081
CLOSMFLG DC    X'00'          If X'01' then close all open files        06082
* --------------------------                                            06083
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP    06084
*              X'01'          WE ARE IN A HDR GROUP                     06085
*              X'02'          WE ARE IN A EOF GROUP                     06086
*              X'04'          WE ARE IN A EOV GROUP                     06087
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND   06088
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL   06089
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES      06090
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII    06091
* ---------- *                                                          06092
* --------------------------------------------------------- *           06093
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE       06094
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL          06095
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME          06096
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL          06097
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE            06098
VOLCHG   DC    C'      '                                                06099
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS       06100
VOLASC   DC    C'      '     ASCII VOLUME                               06101
LCHKPASE EQU   *-LCHKPASS                                               06102
**** ----- LABELCHK -------------------->>>>  Passed area, above        06103
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR   06104
*              X'01'          ERROR WAS PRESENT                         06105
OUTBYT   DS    0F                                                       06106
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER       06107
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE            06108
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY) 06109
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS       06110
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES        06111
LTMCNTR  DC    F'0'                                                     06112
LTMBINAD DC    F'0'                                                     06113
LTMCOUNT DC    PL6'0'                                                   06114
TWO31    DC    P'2147483648'       2 TO THE 31ST                        06115
         DC    C'      '                                                06116
         DC    C'0'                                                     06117
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES     06118
         DC    C'      '                                                06119
DWORD    DC    D'0'                                                     06120
QWORD    DS    PL16                                                     06121
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1                * 06122
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1            06123
         CNOP  0,8                                                      06124
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                        06125
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                        06126
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                        06127
         DC    X'03',AL3(INAREA),X'2000',X'0001'                        06128
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES  06129
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE 06130
         DC    X'03',AL3(INAREA),X'2000',X'0001'                        06131
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK    06132
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                        06133
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK    06134
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE     06135
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.     06136
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                        06137
VOL1CCW  DC    X'07',AL3(VOL1AREA),X'6000',X'0001'   REWIND             06138
         DC    X'02',AL3(VOL1AREA),X'2000',X'0050'   READ 80 BYTES      06139
VOLRCCW  DC    X'07',AL3(VOL1AREA),X'6000',X'0001'   REWIND             06140
         DC    X'03',AL3(VOL1AREA),X'2000',X'0001'   NOOP CCW           06141
VOL1ECB  DC    F'0'                                                     06142
VOL1IOB  DC    X'02000000'                                              06143
         DC    A(VOL1ECB)                                               06144
VOL1CSW  DC    2F'0'                                                    06145
VOL1CCWP DC    A(VOL1CCW)                                               06146
VOL1DCBP DC    A(OUT1)                                                  06147
         DC    F'0'                                                     06148
         DC    X'00010000'                                              06149
VOLRECB  DC    F'0'                                                     06150
VOLRIOB  DC    X'02000000'                                              06151
         DC    A(VOLRECB)                                               06152
VOLRCSW  DC    2F'0'                                                    06153
VOLRCCWP DC    A(VOLRCCW)                                               06154
VOLRDCBP DC    A(OUT1)                                                  06155
         DC    F'0'                                                     06156
         DC    X'00010000'                                              06157
INECB    DC    F'0'                                                     06158
INIOB    DC    X'02000000'                                              06159
         DC    A(INECB)                                                 06160
INCSW    DC    2F'0'                                                    06161
INCCWPT  DC    A(INCCW)                                                 06162
         DC    A(IN)                                                    06163
         DC    F'0'                                                     06164
         DC    X'00010000'                                              06165
OUTECB   DC    F'0'                                                     06166
OUTIOB   DC    X'02000000'                                              06167
         DC    A(OUTECB)                                                06168
OUTCSW   DC    2F'0'                                                    06169
OUTCCWPT DC    A(OUTCCW)                                                06170
OUTDCBPT DC    A(OUT1)                                                  06171
         DC    F'0'                                                     06172
         DC    X'00010000'                                              06173
REWECB   DC    F'0'                                                     06174
REWIOB   DC    X'02000000'                                              06175
         DC    A(REWECB)                                                06176
REWCSW   DC    2F'0'                                                    06177
REWCCWPT DC    A(REWCCW)                                                06178
REWDCBPT DC    A(OUT1)                                                  06179
         DC    F'0'                                                     06180
         DC    X'00010000'                                              06181
BK1BECB  DC    F'0'                                                     06182
BK1BIOB  DC    X'02000000'                                              06183
         DC    A(BK1BECB)                                               06184
BK1BCSW  DC    2F'0'                                                    06185
BKBCCWPT DC    A(BK1BCCW)                                               06186
BKBDCBPT DC    A(IN)                                                    06187
         DC    F'0'                                                     06188
         DC    X'00010000'                                              06189
         SPACE 3                                                        06190
DDOCHG   DC    C'     '                                                 06191
DDOUT1   DC    C'OUT1 '                                                 06192
DDOUT2   DC    C'OUT2 '                                                 06193
DDOUT3   DC    C'OUT3 '                                                 06194
DDOUT4   DC    C'OUT4 '                                                 06195
DDOUT5   DC    C'OUT5 '                                                 06196
DDOUT6   DC    C'OUT6 '                                                 06197
DDOUT7   DC    C'OUT7 '                                                 06198
DDOUT8   DC    C'OUT8 '                                                 06199
DDOUT9   DC    C'OUT9 '                                                 06200
DDOUT10  DC    C'OUT10'                                                 06201
DDOUT11  DC    C'OUT11'                                                 06202
DDOUT12  DC    C'OUT12'                                                 06203
DDOUT13  DC    C'OUT13'                                                 06204
DDOUT14  DC    C'OUT14'                                                 06205
DDOUT15  DC    C'OUT15'                                                 06206
DDOUT16  DC    C'OUT16'                                                 06207
FLAGLIT  DC    C' - FLAGS - '                                           06208
* --------------------------                                            06209
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE     06210
* ------------------------------------------------------------------ *  06211
FLAG1    DC    X'00'             KEEP FLAG1 AND FLAG2 TOGETHER          06212
OP1      EQU   X'80'             OUT1  IS CODED IN JCL                  06213
OP2      EQU   X'40'             OUT2  IS CODED IN JCL                  06214
OP3      EQU   X'20'             OUT3  IS CODED IN JCL                  06215
OP4      EQU   X'10'             OUT4  IS CODED IN JCL                  06216
OP5      EQU   X'08'             OUT5  IS CODED IN JCL                  06217
OP6      EQU   X'04'             OUT6  IS CODED IN JCL                  06218
OP7      EQU   X'02'             OUT7  IS CODED IN JCL                  06219
OP8      EQU   X'01'             OUT8  IS CODED IN JCL                  06220
FLAG2    DC    X'00'                                                    06221
OP9      EQU   X'80'             OUT9  IS CODED IN JCL                  06222
OP10     EQU   X'40'             OUT10 IS CODED IN JCL                  06223
OP11     EQU   X'20'             OUT11 IS CODED IN JCL                  06224
OP12     EQU   X'10'             OUT12 IS CODED IN JCL                  06225
OP13     EQU   X'08'             OUT13 IS CODED IN JCL                  06226
OP14     EQU   X'04'             OUT14 IS CODED IN JCL                  06227
OP15     EQU   X'02'             OUT15 IS CODED IN JCL                  06228
OP16     EQU   X'01'             OUT16 IS CODED IN JCL                  06229
* ------------------------------------------------------------------ *  06230
FLAG2A   DC    X'00'                                                  * 06231
ERR      EQU   X'02'                                                    06232
EOV      EQU   X'01'                                                    06233
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                  06234
FF       EQU   X'FF'                                                    06235
FLAG3    DC    X'00'                                                    06236
FLAG4    DC    X'00'                                                    06237
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE             * 06238
* ---------- *                                                          06239
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                     06240
*              x'01'    Yes.                                            06241
* ---------- *                                                          06242
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN  06243
*              X'01'    HDR1 HAS BEEN READ IN                           06244
*              X'02'    HDR2 HAS BEEN READ IN                           06245
*              X'04'    VOL1 HAS BEEN READ IN                           06246
*              X'08'    UHL  HAS BEEN READ IN                           06247
*              X'10'    EOF1 HAS BEEN READ IN                           06248
*              X'20'    EOF2 HAS BEEN READ IN                           06249
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN          06250
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN          06251
* ---------- *                                                          06252
STRIPFLG DC    X'00'                                                    06253
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.   06254
DATFLAG  DC    X'00'                                                  * 06255
*              X'10'    NO REAL DATA HAS BEEN READ YET                * 06256
* --------------------------------------------------------- *         * 06257
VOLDD    DC    C'     '                                                 06258
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  06259
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                       06260
         SPACE 3                                                        06261
LABELITH DC    CL80'----ENDOFLABELHEADER '                              06262
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           06263
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              06264
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           06265
LTMCTPAT DC    X'4020202020202020202120'                                06266
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *  06267
VOL1LABL DS    0CL80                                                    06268
VOL1LIT  DC    CL4'VOL1'                                                06269
VOL1SERL DC    CL6' '                                                   06270
VOL1FIL1 DC    CL31' '                                                  06271
VOL1ONER DC    CL10' '                                                  06272
VOL1FIL2 DC    CL29' '                                                  06273
* ------------------------ INITIALIZATION OF VOLUMES --------------- *  06274
HDR1INIT DS    0CL80                                                    06275
HDR1ILIT DC    CL4'HDR1'                                                06276
HDR1IFIL DC    76C'0'                                                   06277
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *  06278
AVOL1LAB DS    0CL80                                                    06279
AVOL1LIT DC    CL4'VOL1'                                                06280
AVOL1SER DC    CL6' '                                                   06281
AVOL1ACC DC    CL1' '                                                   06282
AVOL1RS1 DC    CL13' '                                                  06283
AVOL1IMP DC    CL13' '                                                  06284
AVOL1OWN DC    CL14' '                                                  06285
AVOL1RS2 DC    CL28' '                                                  06286
AVOL1LVL DC    CL1'3'                                                   06287
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *  06288
AHDR1INI DS    0CL80                                                    06289
AHDR1LIT DC    CL4'HDR1'                                                06290
AHDR1ID1 DC    23C'0'                                                   06291
AHDR1FSN DC    CL4'0001'                                                06292
AHDR1FSQ DC    CL4'0001'                                                06293
AHDR1GNM DC    CL4'0001'                                                06294
AHDR1VNM DC    CL2'00'                                                  06295
AHDR1CRD DC    CL6' 00000'                                              06296
AHDR1EXD DC    CL6' 00000'                                              06297
AHDR1ACC DC    CL1' '                                                   06298
AHDR1BKC DC    CL6'000000'                                              06299
AHDR1OSC DC    CL20'IBMZLA '                                            06300
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *  06301
MSGCSECT CSECT                                                          06302
TOTWLINE DS    0CL65                                                    06303
         DC    C' TOTAL BYTES WITHOUT LABELS: '                         06304
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  06305
         DC    CL10' '                                                  06306
TOTLLINE DS    0CL65                                                    06307
         DC    C' TOTAL BYTES IN TAPE LABELS: '                         06308
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  06309
         DC    CL10' '                                                  06310
TOTBLINE DS    0CL65                                                    06311
         DC    C' TOTAL BYTES READ ON INPUT : '                         06312
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  06313
         DC    CL10' '                                                  06314
BLKCNTMS DS    0CL96                                                    06315
         DC    C' BLOCK COUNTS in EOF1 and EOV1 are being corrected fo' 06316
         DC    C'r TAPE COPY operation, when outputs are SL.'           06317
INNOTOPN DS    0CL125                                                   06318
         DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM' 06319
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE ' 06320
         DC    C'A PARM OF INITVOLS.'                                   06321
LDMPOUTM DS    0CL112                                                   06322
         DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               ' 06323
         DC    C'                             MEMBER=         VOLUME= ' 06324
         DC    C'      '                                                06325
LDMPINMS DS    0CL112                                                   06326
         DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               ' 06327
         DC    C'                             MEMBER=         VOLUME= ' 06328
         DC    C'      '                                                06329
LDMPMSG  DS    0CL122                                                   06330
         DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L' 06331
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A' 06332
         DC    C' MULTIPLE OF 80 '         '                            06333
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N' 06334
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT' 06335
         DC    C' TAPES. '                                              06336
         DC    CL19' '                                                  06337
LIMFMSG  DS    0CL72                                                    06338
         DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 06339
         DC    C' IS TREATED AS NL. '                                   06340
LIMLMSG  DS    0CL106                                                   06341
         DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 06342
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  ' 06343
LIMPMSG  DS    0CL106                                                   06344
         DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER' 06345
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   ' 06346
LIMHMSG  DS    0CL116                                                   06347
         DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                06348
         DC    CL6'&HEXDFLM'                                            06349
         DC    C' RECORDS WILL'                                         06350
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in ' 06351
         DC    C'SYSIN.'                                                06352
STRPMSG  DS    0CL115                                                   06353
         DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS ' 06354
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP' 06355
         DC    C'UT TAPES.'                                             06356
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S' 06357
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A' 06358
         DC    C' MULTIPLE OF 80           '                            06359
NLABMSG  DS    0CL114                                                   06360
         DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C' 06361
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL ' 06362
         DC    C'IMAGES. '                 '                            06363
NOLABSL  DS    0CL96                                                    06364
         DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS ' 06365
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.  '         06366
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ' 06367
         DC    C'ing a Tape Mark right now.                           ' 06368
         DC    C'                           '                           06369
FORCENLM DS    0CL94                                                    06370
         DC    C' *** File Limiting by NL file numbers has been forced' 06371
         DC    C'.  Divide by 3 for the SL file number ***'             06372
FORCESLM DS    0CL96                                                    06373
         DC    C' *** File Limiting by SL file numbers has been forced' 06374
         DC    C'.  Multiply by 3 for the NL file number ***'           06375
TWOFORCE DS    0CL124                                                   06376
         DC    C' *** File Limiting by SL and NL file numbers both spe' 06377
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no' 06378
         DC    C't code PARM=SLLIM.'                                    06379
FORCREAD DC    C' Option READONLY has been forced by not having any OU' 06380
         DC    C'Txx DDNAMES coded in the JCL.'                         06381
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '        06382
         DC    C'TERMINATED '                                           06383
         DC    76C'*'                                                   06384
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '   06385
         DC    82C'*'                                                   06386
VOLALT   DS    0CL58                                                    06387
         DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'           * 06388
         DC    C' FOR DDNAME '                                          06389
VOLDDN   DC    C'     '                                                 06390
VOLKEPT  DS    0CL58                                                    06391
         DC    C' VOL1 VOLSER XXXXXX WAS KEPT FOR OUTPUT U'           * 06392
         DC    C'SING DDNAME '                                          06393
VOLKDDN  DC    C'     '                                                 06394
OWNRMSG  DS    0CL69                                                    06395
         DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                06396
OWNRTID  DC    C'          '                                            06397
OWNRTIDE DC    C'    '                                                  06398
OWNRLIT1 DC    C' FOR DDNAME '                                          06399
OWNRDDO  DC    C'     '                                                 06400
LTMRPT   DS    0CL55                                                    06401
         DC    C' LEADING TAPE MARK WAS '                             * 06402
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED          * 06403
         DC    C'  '                                                    06404
         DC    C'LTM Number ='                                          06405
LTMRNUM  DC    C'           '                                           06406
EOVCHG   DS    0CL64                                                    06407
         DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '          * 06408
         DC    C'EOV2EOF PARM OR OPTION'                              * 06409
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                               06410
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                               06411
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                          06412
INITMSG  DS    0CL57                                                    06413
         DC    C' INITTED TAPE HAS BEEN '                               06414
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                          06415
INITSER  DC    C'      '                                              * 06416
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '       06417
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '              06418
OUTCFCNT DC    C'XXXXXXXXXX'                                            06419
         DC    C'  Bytes:'                                              06420
OUTCBCNT DC    CL26' '                                                  06421
         DC    C' '                                                     06422
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '       06423
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        06424
         DC    40C'*'                                                   06425
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '       06426
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        06427
         DC    40C'*'                                                   06428
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '       06429
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        06430
         DC    40C'*'                                                   06431
FILEDONE DS    0CL133                                                   06432
         DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'              06433
FILEPBYT DS    0CL44                                                    06434
FILEDFL1 DC    C' '                                                     06435
FILECONT DC    C'          '                                            06436
FILEDFL2 DC    C' '                                                     06437
FILEBYTE DC    C' 9,999,999,999,999,999,999'                            06438
         DC    C' bytes'                                                06439
FILETBYT DS    0CL47                                                    06440
FILEDFL3 DC    C'    '                                                  06441
FILECUMT DC    C'          '                                            06442
FILEDFL4 DC    C' '                                                     06443
FILETBYE DC    C' 9,999,999,999,999,999,999'                            06444
         DC    C' bytes'                                                06445
         DC    4C' '                                                    06446
FOOTMSG1 DS    0CL83                                                    06447
         DC    C' File '                                                06448
FOOTMNUM DC    C'     '                                                 06449
         DC    C' Ft @ 6250: '                                          06450
FOOTMFT  DC    C'          '                                            06451
         DC    C' Cumulative Feet for this Tape: '                      06452
FOOTMCFT DC    C'          '                                            06453
FOOTMFIL DC    8C' '                                                    06454
MNMXMSG1 DS    0CL63                                                    06455
         DC    C' File '                                                06456
MNMXFNUM DC    C'     '                                                 06457
         DC    C' Min Blksize: '                                        06458
MNMXMIN  DC    C'        '                                              06459
         DC    C' Max Blksize: '                                        06460
MNMXMAX  DC    C'        '                                              06461
         DC    8C' '                                                    06462
RECSZMSG DS    0CL73                                                    06463
         DC    C' File '                                                06464
RECSZFNM DC    C'     '                                                 06465
         DC    C' Record number: '                                      06466
RECSZRCD DC    C'          '                                            06467
         DC    C' Size of record: '                                     06468
RECSZSIZ DC    C'          '                                            06469
         DC    9C' '                                                    06470
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'    06471
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'    06472
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                     06473
         DC    C'       '          BLANKS FOR COVERING UP             * 06474
READOMSG DS    0CL67                                                    06475
         DC    C' THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX06476
               LSER: XXXXXX '                                         * 06477
SUCCESSR DS    0CL68                                                    06478
         DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX06479
               ERIAL XXXXXX  '                                        * 06480
         DC    C' '                                                     06481
LINE44   DC    CL47' '         A bit bigger to clear line               06482
SHOOVLHD DC    CL64' ***  ---  SHOW OUTPUT VOLUME FIRST 80 BYTES BY DDNx06483
               AME  ---  ***'                                           06484
SHOOVLHU DC    CL64' ***  ---  ----------------------------------------x06485
               ---  ---  ***'                                           06486
COPYMODS CSECT                                                          06487
HEXPRTWK DC    CL133' '                                                 06488
RULERHEX DS    0CL132                                                   06489
         DC    C'----+----1----+----2----+----3----+----4----+----5--'  06490
         DC    C'--+----6----+----7----+----8----+----9----+----0----+' 06491
         DC    C'----1----+----2----+----3----+----4'                   06492
REPLY    DC    C'      '                                                06493
COPIED   DC    C'COPIED '                                             * 06494
SKIPPED  DC    C'SKIPPED'                                             * 06495
WRITTEN  DC    C'WRITTEN'                                               06496
READDD   DC    C'READ   '                                               06497
PASSED   DC    C'PASSED '                                               06498
OVOLMSGH DC    C'       FIRST 80 BYTES OF OUTPUT TAPE, IF THAT MUCH EXI-06499
               STS: '                                                   06500
OVOLMSGT DC    CL81' '                                                  06501
FULLWORK DS    0F                                                     * 06502
         DC    H'0'                                                   * 06503
HALFWORK DC    H'0'                HALFWORD WORK AREA                 * 06504
         DC    2F'0'               FILLER                             * 06505
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.    06506
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW   06507
* --------------------------------------------------------- *         * 06508
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS               06509
PARMFLG1 DC    X'00'                                                    06510
*              X'DE'    LABEL INFORMATION WILL BE PRINTED               06511
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED              06512
PARMFLG2 DC    X'00'                                                    06513
PARMFLG3 DC    X'00'                                                    06514
PARMFLG4 DC    X'00'                                                    06515
PARMFLG5 DC    X'00'                                                    06516
PARMFLG6 DC    X'00'                                                    06517
PARMFLG7 DC    X'00'                                                    06518
PARMFLG8 DC    X'00'                                                    06519
PARMFLG9 DC    X'00'                                                    06520
PARMFLGA DC    X'00'                                                    06521
PARMFLLN EQU   *-PARMFLGS                                               06522
PARMCOPY DS    XL10                Copy of options before correction    06523
* --------------------------------------------------------- *         * 06524
         DS    0F                                                       06525
STRTVALU DS    0CL(ENDVALUE)                                            06526
         DC    A(ENDVALUE)                                              06527
PARMSLEN DC    F'0'                LENGTH OF PARMS                      06528
*                                  Upon entry to PARMCHEK, contains     06529
*                                  the PARM address from COPYMODS,      06530
*                                  which gets overlaid.                 06531
SAVMSLEN DC    F'0'                LENGTH OF PARMS                      06532
*                                  Upon entry to PARMCHEK, contains     06533
*                                  the PARM address from COPYMODS,      06534
*                                  which gets overlaid.                 06535
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS              06536
*                                  Upon entry to PARMCHEK, contains     06537
*                                  the PARM length from COPYMODS,       06538
*                                  which gets overlaid.                 06539
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            06540
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            06541
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            06542
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                  06543
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                  06544
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                  06545
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 06546
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 06547
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 06548
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                06549
         DC    CL7' '              FILLER                               06550
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES           06551
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program    06552
LINLABEL DC    F'0'           LABEL LIMIT VALUE                         06553
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS 06554
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4     06555
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL        06556
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE        06557
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE        06558
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN      06559
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS      06560
TAPEOWN  DC    CL10' '                                                  06561
TAPEOEXT DC    CL4' '                                                   06562
TAPEOASC DC    CL14' '                                                  06563
OVERFLAG DC    X'00'                                                    06564
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL              06565
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                   06566
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN        06567
LIMCHAR  DC    CL10' '                                                  06568
LABCHAR  DC    CL10' '                                                  06569
PRTCHAR  DC    CL10' '                                                  06570
LTMCHAR  DC    CL10' '                                                  06571
ENDVALUE EQU   (*-PARMSLEN)+4                                           06572
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program    06573
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE   06574
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.    06575
* --------------------------------------------------------- *           06576
*              FORMAT OF PARM TABLE                                     06577
*              ONE ENTRY IS 20 BYTES                                    06578
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX              06579
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                06580
*                               X'00' SAYS TURN FLAG ON                 06581
*                               X'10' SET ENTRY AS A DEFAULT            06582
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED              06583
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,               06584
*                                WHICH ALLOWS FOR 80 PARMS              06585
*                                THAT DON'T HAVE TO BE                  06586
*                                SEPARATED BY A COMMA.                  06587
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES             06588
* --------------------------------------------------------- *           06589
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'              06590
* --------------------------------------------------------- *           06591
         SPACE 3                                                        06592
         LTORG                                                          06593
         SPACE 3                                                        06594
         DS    0D                                                     * 06595
LBNEXLST DC    X'87',AL3(LBNJFCB)                                       06596
LBNJFCB  DC    44F'0'                                                   06597
         DS    0D                                                     * 06598
LBLEXLST DC    X'87',AL3(LBLJFCB)                                       06599
LBLJFCB  DC    44F'0'                                                   06600
         DS    0D                                                     * 06601
OUTEXLST DC    X'87',AL3(OUTJFCB)                                       06602
OUTJFCB  DC    44F'0'                                                   06603
         DS    0D                                                     * 06604
INEXLST  DC    X'87',AL3(INJFCB)                                      * 06605
INJFCB   DC    44F'0'                                                 * 06606
         SPACE 3                                                        06607
* --------------------------------------------------------- *         * 06608
         SPACE 3                                                        06609
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X06610
               EXLST=INEXLST                                            06611
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X06612
               EXLST=OUTEXLST                                           06613
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X06614
               EXLST=OUTEXLST                                           06615
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X06616
               EXLST=OUTEXLST                                           06617
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X06618
               EXLST=OUTEXLST                                           06619
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X06620
               EXLST=OUTEXLST                                           06621
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X06622
               EXLST=OUTEXLST                                           06623
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X06624
               EXLST=OUTEXLST                                           06625
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X06626
               EXLST=OUTEXLST                                           06627
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X06628
               EXLST=OUTEXLST                                           06629
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X06630
               EXLST=OUTEXLST                                           06631
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X06632
               EXLST=OUTEXLST                                           06633
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X06634
               EXLST=OUTEXLST                                           06635
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X06636
               EXLST=OUTEXLST                                           06637
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X06638
               EXLST=OUTEXLST                                           06639
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X06640
               EXLST=OUTEXLST                                           06641
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X06642
               EXLST=OUTEXLST                                           06643
         ENTRY SYSPRINT                                                 06644
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X06645
               BLKSIZE=133                                              06646
         ENTRY LABLDUMP                                                 06647
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X06648
               EXLST=LBLEXLST                                           06649
         ENTRY LABADDIN                                                 06650
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X06651
               EXLST=LBNEXLST,EODAD=LBLINEND                            06652
         DC    CL4' '                                                   06653
HDR1SAV  DC    CL80' '                                                  06654
HDR2SAV  DC    CL80' '                                                  06655
UHL1SAV  DC    CL80' '                                                  06656
UHL2SAV  DC    CL80' '                                                  06657
UHL3SAV  DC    CL80' '                                                  06658
UHL4SAV  DC    CL80' '                                                  06659
UHL5SAV  DC    CL80' '                                                  06660
UHL6SAV  DC    CL80' '                                                  06661
UHL7SAV  DC    CL80' '                                                  06662
UHL8SAV  DC    CL80' '                                                  06663
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                         06664
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                     06665
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                06666
         DC    CL20' '    PADDING TO SEPARATE FROM INAREA             * 06667
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                   06668
*   This area must match the FOOTWORK DSECT in the FOOTAGE routine.     06669
LABELTYP DS    C                       LABEL TYPE                       06670
DENSITY  DS    C                       DENSITY CODE                     06671
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY   06672
BLKSZE   DS    F                       BLOCK SIZE IN BINARY             06673
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY       06674
USERLBLS DS    F                       USER LABELS IN BINARY            06675
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL            06676
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC           06677
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC           06678
*--------END OF FOOTAGE ROUTINE PARAMETERS                              06679
TRTCSECT CSECT                                                          06680
* ------------------------------------------------------------------- * 06681
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    * 06682
*   (and possibly other places) in synchronization with this CSECT.   * 06683
* ------------------------------------------------------------------- * 06684
TRTBL0   DS    0D                                                       06685
         DC    XL16'40404040404040404040404040404040'                   06686
         DC    XL16'40404040404040404040404040404040'                   06687
         DC    XL16'40404040404040404040404040404040'                   06688
         DC    XL16'40404040404040404040404040404040'                   06689
         DC    XL16'404040404040404040404A4B4C4D4E4F'                   06690
         DC    XL16'504040404040404040405A5B5C5D5E5F'                   06691
         DC    XL16'606140404040404040406A6B6C6D6E6F'                   06692
         DC    XL16'404040404040404040407A7B7C7D7E7F'                   06693
         DC    XL16'40818283848586878889404040404040'                   06694
         DC    XL16'40919293949596979899404040404040'                   06695
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                   06696
         DC    XL16'40404040404040404040404040404040'                   06697
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                   06698
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                   06699
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                   06700
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                   06701
TRTBL1   DS    0D                                                       06702
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                   06703
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                   06704
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                   06705
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                   06706
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                   06707
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                   06708
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                   06709
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                   06710
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                   06711
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                   06712
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                   06713
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                   06714
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                   06715
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                   06716
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                   06717
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                   06718
TRTBL2   DS    0D                                                       06719
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06720
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06721
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06722
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06723
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06724
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06725
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06726
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06727
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06728
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06729
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06730
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06731
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06732
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06733
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06734
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   06735
TRTE2A   DS    0D                                                       06736
         DC    XL16'000102030405060708090A0B0C0D0E0F'                   06737
         DC    XL16'101112131415161718191A1B1C1D1E1F'                   06738
         DC    XL16'202122232425262728292A2B2C2D2E2F'                   06739
         DC    XL16'303132333435363738393A3B3C3D3E3F'                   06740
         DC    XL16'20414243444546474849A22E3C282B7C'                   06741
         DC    XL16'2651525354555657585921242A293B5E'                   06742
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                   06743
         DC    XL16'707172737475767778603A2340273D22'                   06744
         DC    XL16'806162636465666768698ABBF0FDFEB1'                   06745
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                   06746
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                   06747
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                   06748
         DC    XL16'7B414243444546474849CACBCCCDCECF'                   06749
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                   06750
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                   06751
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                   06752
TRTA2E   DS    0D                                                       06753
         DC    XL16'000102030405060708090A0B0C0D0E0F'                   06754
         DC    XL16'101112131415161718191A1B1C1D1E1F'                   06755
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                   06756
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                   06757
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                   06758
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                   06759
         DC    XL16'79818283848586878889919293949596'                   06760
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                   06761
         DC    XL16'808182838485868788898A8B8C8D8E8F'                   06762
         DC    XL16'909192939495969798999A9B9C9D9E9F'                   06763
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                   06764
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                   06765
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                   06766
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                   06767
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                   06768
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                   06769
TRTASPRT DS    0D                                                       06770
         DC    XL16'40404040404040404040404040404040'                   06771
         DC    XL16'40404040404040404040404040404040'                   06772
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                   06773
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                   06774
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                   06775
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                   06776
         DC    XL16'40818283848586878889919293949596'                   06777
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                   06778
         DC    XL16'40404040404040404040404040404040'                   06779
         DC    XL16'40404040404040404040404040404040'                   06780
         DC    XL16'40404040404040404040404040404040'                   06781
         DC    XL16'40404040404040404040404040404040'                   06782
         DC    XL16'40404040404040404040404040404040'                   06783
         DC    XL16'40404040404040404040404040404040'                   06784
         DC    XL16'40404040404040404040404040404040'                   06785
         DC    XL16'40404040404040404040404040404040'                   06786
         EJECT                                                          06787
JFCBLK   DSECT                                                          06788
         IEFJFCBN LIST=YES                                              06789
*                                                                       06790
VOL1STOR CSECT                                                          06791
*                          Used for KEEPVOL and SHOOVL processing.      06792
         DS    0D                Place to store VOL1 images.            06793
VOL1LB   DS    0CL1377                                                  06794
*                                                                       06795
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT1              06796
VOL1LBL  EQU   *-VOL1LB             Table entry length                  06797
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT2              06798
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT3              06799
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT4              06800
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT5              06801
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT6              06802
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT7              06803
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT8              06804
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT9              06805
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT10             06806
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT11             06807
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT12             06808
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT13             06809
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT14             06810
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT15             06811
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT16             06812
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR IN                06813
VOL1LB1  EQU   VOL1LB+1,80                                              06814
VOL1LB2  EQU   VOL1LB+82,80                                             06815
VOL1LB3  EQU   VOL1LB+163,80                                            06816
VOL1LB4  EQU   VOL1LB+244,80                                            06817
VOL1LB5  EQU   VOL1LB+325,80                                            06818
VOL1LB6  EQU   VOL1LB+406,80                                            06819
VOL1LB7  EQU   VOL1LB+487,80                                            06820
VOL1LB8  EQU   VOL1LB+568,80                                            06821
VOL1LB9  EQU   VOL1LB+649,80                                            06822
VOL1LB10 EQU   VOL1LB+730,80                                            06823
VOL1LB11 EQU   VOL1LB+811,80                                            06824
VOL1LB12 EQU   VOL1LB+892,80                                            06825
VOL1LB13 EQU   VOL1LB+973,80                                            06826
VOL1LB14 EQU   VOL1LB+1054,80                                           06827
VOL1LB15 EQU   VOL1LB+1135,80                                           06828
VOL1LB16 EQU   VOL1LB+1216,80                                           06829
VOL1LBIN EQU   VOL1LB+1297,80                                           06830
*                                                                       06831
COPYMODS CSECT                                                          06832
INVOLFLG DC    X'00'          Same meanings as VOL1FLAG for input tape  06833
VOL1FLAG DC    X'00'          First record of each output tape.         06834
*              X'01'          EBCDIC VOL1 LABEL                         06835
*              X'02'          ASCII  VOL1 LABEL                         06836
*              X'04'          ASCII Type 3 VOL1 Label                   06837
*              X'08'          ASCII Type 4 VOL1 Label                   06838
*              X'10'          Eligible for VOL1 overlay, bit.           06839
         DC    C' '                                                     06840
VOL1AREA DC    CL80' '                                                  06841
INAREA   DS    CL65535                                                * 06842
*                                                                       06843
WORKAREA DSECT                                                          06844
SAVEAREA DS    18F                                                      06845
         DC    C' '              BLANK FOR CLEARING AREA              * 06846
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP           * 06847
         DC    C' '                                                     06848
LINE     DC    CL133' '                                                 06849
         DC    C' '                                                     06850
SAVELINE DC    CL133' '                                                 06851
SAVER2X1 DC    F'0'               Register save areas                   06852
SAVER2T5 DC    4F'0'                                                    06853
SAVER7A  DC    F'0'                                                     06854
SAVER7B  DC    F'0'                                                     06855
SAVER7C  DC    F'0'                                                     06856
SAVER7OP DC    F'0'                                                     06857
SAVE1TO5 DC    5F'0'                                                    06858
SAVE1RG1 DC    F'0'                                                     06859
SAVER2A  DC    F'0'                                                     06860
SAVE5ASC DC    F'0'                                                     06861
STOR7REG DS    F                                                        06862
TOTB7REG DS    F                                                        06863
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST      06864
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST      06865
SAVE13LC DC    3F'0'                                                    06866
SAV45MSG DC    2F'0'                                                    06867
SV7VTABL DC    F'0'                    Saved BAL register for GETVTABL. 06868
SAV01MLT DC    D'0'                                                     06869
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro    06870
HEXSAVE  DS    3F                    Register save for HEX macro        06871
SAVE2TO3 DC    2F'0'                                                    06872
SAVE3REG DC    F'0'                                                     06873
SAVE7BA1 DC    F'0'                                                     06874
SAVE7REG DC    F'0'                                                     06875
SAVE7BAL DC    F'0'                                                     06876
SAVE7RG1 DC    F'0'                                                     06877
SAVE7RG2 DC    F'0'                                                     06878
SAVE7RG3 DC    F'0'                                                     06879
SAVE7RG4 DC    F'0'                                                     06880
SAVE7RG5 DC    F'0'                                                     06881
SAVE7RG6 DC    F'0'                                                     06882
SAVE7RG7 DC    F'0'                                                     06883
R5HXPRT  DC    F'0'                                                     06884
R7HXPRT  DC    F'0'                                                     06885
SAVTRTCS DC    F'0'                                                     06886
ENTRYPT  DC    F'0'                                                     06887
LABCHENT DC    F'0'                                                     06888
VOL1SENT DC    F'0'                                                     06889
PRTLBENT DC    F'0'                                                     06890
FOOTGENT DC    F'0'                                                     06891
PARMSAVE DC    F'0'                                                     06892
PARMADDR DC    F'0'                                                     06893
USERSAVE DC    F'0'                                                     06894
SAVELBCK DC    F'0'                                                     06895
BLKSZWRK DS    F          Work area to calculate maximum BLKSZE         06896
         DS    X                                                        06897
VOLALL   DS    0CL96         16 X 6                                     06898
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06899
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06900
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06901
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06902
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06903
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06904
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06905
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06906
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06907
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06908
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06909
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06910
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06911
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06912
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06913
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              06914
VOLALLLN EQU   *-VOLALL                                                 06915
WORKLENG EQU   *-WORKAREA                                               06916
*                                                                       06917
         END                                                            06920
*          PRINT OPTION LIST   AT LEVEL 086 AS OF 06/01/12              06921
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                06922
**************************************************************          06923
**************************************************************          06924
**                                                          **          06925
**                                                          **          06926
**  MODULE: COPYMOPT                                        **          06927
**                                                          **          06928
**                                                          **          06929
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **          06930
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **          06931
**            PROGRAM.                                      **          06932
**                                                          **          06933
**                                                          **          06934
**  Technique Note:  A separate SYSPRINT DCB is coded here  **          06935
**            in this CSECT, besides the SYSPRINT DCB       **          06936
**            that was coded in the main COPYMODS CSECT.    **          06937
**            The SYSPRINT DCB that is here, is OPENed      **          06938
**            and CLOSEd by this CSECT before COPYMODS'     **          06939
**            SYSPRINT DCB is OPENed for the first time.    **          06940
**            This gives a "DISP=MOD" effect for the        **          06941
**            //SYSPRINT DD name, and it also allows SDSF   **          06942
**            or any other spool browser program to show    **          06943
**            the options in effect in SYSPRINT, before     **          06944
**            any tapes have been mounted yet.              **          06945
**                                                          **          06946
**************************************************************          06947
**************************************************************          06948
         EJECT                                                          06949
         YREGS                                                          06950
COPYMOPT CSECT                                                          06951
         USING *,R15                                                  * 06952
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.    06953
         B     EYECATCH                                               * 06954
         DC    C'--- '            MAKE EYECATCHER VISIBLE             * 06955
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '  06956
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 * 06957
SAVEAREA DC    18F'0'                                                   06958
EYECATCH DS    0D             ENSURE ALIGNMENT                        * 06959
         SAVE  (14,12)                                                  06960
         LR    R5,R1          SAVE PASSED QUANTITY                      06961
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  06962
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         06963
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        06964
         LR    R13,R1               NEW SAVE AREA ADDRESS               06965
         DROP  R15                                                      06966
* -----                       SET UP TWO BASE REGISTERS                 06967
         USING COPYMOPT,R12,R11                                         06968
         LR    R12,R15                                                  06969
         LA    R11,4095(,R12)                                           06970
         LA    R11,1(,R11)                                              06971
         LR    R1,R5          RESTORE PARM POINTER                      06972
OPTMOVE  DS    0H                                                       06973
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM          06974
         TM    TWICEFLG,X'02'         Second call to program?           06975
         BO    OPTMOVEO               Don't move ten bytes past....     06976
         MVC   PARMTCPY(10),10(R1)    Move original parms if first call 06977
         MVC   PARMFSAV(10),0(R1)     And save changed parms            06978
         OI    TWICEFLG,X'02'         Show original parms moved already 06979
OPTMOVEO DS    0H                                                       06980
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM      06981
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM      06982
         OPEN  (SYSPRINT,OUTPUT)                                        06983
         TM    TWICEFLG,X'01'         Is this the second time here?     06984
         BZ    WRITORIG               No. Write the original headers.   06985
         TM    PARMTBIN+5,X'80'       Is CODEDPRM coded?                06986
         BO    NOWRTHDR               Yes. Write different headers.     06987
WRITORIG DS    0H                     Write original OPTIONS headers.   06988
         OI    TWICEFLG,X'01'         Show we were here once already.   06989
         MVC   LINE(133),LINE-1       CLEAR LINE                        06990
         MVC   LINE(133),DISPLINH     Write original header 1.          06991
         PUT   SYSPRINT,LINE                                            06992
         MVC   LINE(133),LINE-1       CLEAR LINE                        06993
         MVC   LINE(133),DISPLINO     Write original header 2.          06994
         PUT   SYSPRINT,LINE                                            06995
         B     YSWRTHDR                                                 06996
NOWRTHDR DS    0H                     Write CODEDPRM different headers. 06997
         MVC   LINE(133),LINE-1       CLEAR LINE                        06998
         MVC   LINE(133),DISPNCOR     Write "before correction" hdr 1.  06999
         PUT   SYSPRINT,LINE                                            07000
         MVC   LINE(133),LINE-1       CLEAR LINE                        07001
         MVC   LINE(133),DISPNCRO     Write "before correction" hdr 2.  07002
         PUT   SYSPRINT,LINE                                            07003
YSWRTHDR DS    0H                                                       07004
         MVC   LINE(133),LINE-1       CLEAR LINE                        07005
         PUT   SYSPRINT,LINE                                            07006
         BAL   R7,FILLOPTS                                              07007
         MVC   LINE(133),LINE-1       CLEAR LINE                        07008
         MVC   LINE(133),DISPOP02                                       07009
         PUT   SYSPRINT,LINE                                            07010
         MVC   LINE(133),LINE-1       CLEAR LINE                        07011
         MVC   LINE(133),DISPOP01                                       07012
         PUT   SYSPRINT,LINE                                            07013
         MVC   LINE(133),LINE-1       CLEAR LINE                        07014
         MVC   LINE(133),DISPOP03                                       07015
         PUT   SYSPRINT,LINE                                            07016
         TM    TWICEFLG,X'04'         Don't do changed report on        07017
         BO    PARMGHNC                second call.                     07018
         CLC   PARMFSAV(10),PARMTCPY  COMPARE TO SEE IF PARMS CHANGED   07019
         BNE   PARMCHGD               Not equal, report that.           07020
         MVC   LINE(133),LINE-1       CLEAR LINE                        07021
         MVC   LINE(133),DISPSHNC     Display that parms not changed    07022
         PUT   SYSPRINT,LINE                                            07023
         B     PARMGHNC               And go on with other print lines  07024
PARMCHGD DS    0H                     Parms have changed                07025
         MVC   LINE(133),LINE-1       CLEAR LINE                        07026
         MVC   LINE(133),DISPSHCR     Display that parms have changed   07027
         PUT   SYSPRINT,LINE                                            07028
PARMGHNC DS    0H                     Go on with other print lines      07029
         MVC   LINE(133),LINE-1       CLEAR LINE                        07030
         MVC   LINE(133),DISPHEXM                                       07031
         PUT   SYSPRINT,LINE                                            07032
         MVC   LINE(133),LINE-1       CLEAR LINE                        07033
         PUT   SYSPRINT,LINE                                            07034
         CLOSE (SYSPRINT)                                               07035
* ----------------------------------------------------------------- *   07036
THEEND   EQU   *                                                        07037
         TM    TWICEFLG,X'04'         Second call, unconditionally?     07038
         BO    OPTMOVE2               Yes. No need to set flag.         07039
         OI    TWICEFLG,X'04'         No. Set flag for next time.       07040
OPTMOVE2 DS    0H                                                       07041
THEEND1  DS    0H                                                       07042
         L     R13,4(,R13)                                              07043
         RETURN (14,12),RC=0                                            07044
         EJECT                                                          07045
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *   07046
* ----------------------------------------------------------------- *   07047
*    BAL REGISTER IS R7.                                            *   07048
* ------------------------------------------------------------------*   07049
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT           07050
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE       07051
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE       07052
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION    07053
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                 07054
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                       07055
         BE    FILOPEND                                                 07056
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED           07057
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON               07058
         BZ    FILLZER                                                  07059
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON   07060
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY          07061
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA         07062
         BCT   R4,FILLOOP             LOOP BACK                         07063
         B     FILNEXTB                                                 07064
FILLZER  DS    0H                                                       07065
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF  07066
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY          07067
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA         07068
         BCT   R4,FILLOOP             LOOP BACK                         07069
FILNEXTB DS    0H                                                       07070
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                 07071
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE     07072
         PUT   SYSPRINT,LINE                                            07073
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE   07074
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE    07075
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP    07076
FILOPEND BR    R7                                                       07077
* ----------------------------------------------------------------- *   07078
* ----------  CONSTANTS  ------------------------------------------ *   07079
         LTORG                                                          07080
         DS    0F                                                       07081
PARMTBIN DC    X'00000000000000000000'                                  07082
PARMTCPY DC    X'00000000000000000000'                                  07083
PARMFSAV DC    X'00000000000000000000'                                  07084
PARMWORK DC    X'00000000000000000000'                                  07085
PARMZERO DC    X'00000000000000000000'                                  07086
OPTABLE  DS    0D                                                       07087
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '      07088
OPTENTLN EQU   *-OPTABLE                                                07089
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '      07090
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '      07091
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '      07092
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '      07093
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '      07094
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '      07095
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '      07096
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '      07097
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '      07098
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '      07099
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '      07100
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '      07101
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '      07102
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '      07103
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '      07104
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '      07105
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '      07106
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '      07107
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '      07108
         DC    X'00000100000000000000',C'INITVOLS  ',C'NOINITVO  '      07109
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '      07110
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '      07111
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '      07112
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '      07113
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '      07114
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '      07115
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '      07116
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '      07117
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '      07118
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '      07119
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '      07120
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '      07121
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '      07122
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '      07123
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '      07124
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '      07125
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '      07126
         DC    X'00000000040000000000',C'          ',C'NOENABLT  '      07127
         DC    X'00000000080000000000',C'WRTLTM    ',C'          '      07128
         DC    X'00000000001000000000',C'SECOFF    ',C'NOSECOFF  '      07129
         DC    X'00000000002000000000',C'FOOTAGE   ',C'NOFOOTAGE '      07130
         DC    X'00000000004000000000',C'FOOTDIAG  ',C'NOFOOTDI  '      07131
         DC    X'00000000008000000000',C'CODEDPRM  ',C'NOCODEDP  '      07132
         DC    X'00000000000100000000',C'MINMAX    ',C'NOMINMAX  '      07133
         DC    X'00000000000200000000',C'RECSIZE   ',C'NORECSIZ  '      07134
         DC    X'00000000000400000000',C'DGSTRI    ',C'NODGSTRI  '      07135
         DC    X'00000000000800000000',C'KEEPVOL   ',C'NOKEEPVL  '      07136
         DC    X'00000000000010000000',C'SHOOVL    ',C'NOSHOOVL  '      07137
         DC    X'00000000000020000000',C'          ',C'          '      07138
         DC    X'00000000000040000000',C'          ',C'          '      07139
         DC    X'00000000000080000000',C'          ',C'          '      07140
         DC    X'00000000000001000000',C'          ',C'          '      07141
         DC    X'00000000000002000000',C'          ',C'          '      07142
         DC    X'00000000000004000000',C'          ',C'          '      07143
         DC    X'00000000000008000000',C'          ',C'          '      07144
         DC    X'00000000000000100000',C'          ',C'          '      07145
         DC    X'00000000000000200000',C'          ',C'          '      07146
         DC    X'00000000000000400000',C'          ',C'          '      07147
         DC    X'00000000000000800000',C'          ',C'          '      07148
         DC    X'00000000000000010000',C'          ',C'          '      07149
         DC    X'00000000000000020000',C'          ',C'          '      07150
         DC    X'00000000000000040000',C'          ',C'          '      07151
         DC    X'00000000000000080000',C'          ',C'          '      07152
         DC    X'00000000000000001000',C'          ',C'          '      07153
         DC    X'00000000000000002000',C'          ',C'          '      07154
         DC    X'00000000000000004000',C'          ',C'          '      07155
         DC    X'00000000000000008000',C'          ',C'          '      07156
         DC    X'00000000000000000100',C'          ',C'          '      07157
         DC    X'00000000000000000200',C'          ',C'          '      07158
         DC    X'00000000000000000400',C'          ',C'          '      07159
         DC    X'00000000000000000800',C'          ',C'          '      07160
         DC    X'00000000000000000010',C'          ',C'          '      07161
         DC    X'00000000000000000020',C'          ',C'          '      07162
         DC    X'00000000000000000040',C'          ',C'          '      07163
         DC    X'00000000000000000080',C'          ',C'          '      07164
         DC    X'00000000000000000001',C'          ',C'          '      07165
         DC    X'00000000000000000002',C'          ',C'          '      07166
         DC    X'00000000000000000004',C'          ',C'          '      07167
         DC    X'00000000000000000008',C'          ',C'          '      07168
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                  07169
*  -----                                                                07170
TWICEFLG DC    X'00'     X'00' shows first invocation of this program.  07171
DISPAREA DS    0D                                                       07172
DISPSHNC DS    0CL133                                                   07173
         DC    C'     COPYMODS has not had to correct any of the optio' 07174
         DC    C'ns as coded in the JCL.                              ' 07175
         DC    27C' '                                                   07176
DISPSHCR DS    0CL133                                                   07177
         DC    C'     COPYMODS attempts to keep the options consistent' 07178
         DC    C' and has changed some options. For a comparison repor' 07179
         DC    C't, code the CODEDPRM parm. '                           07180
DISPNCOR DS    0CL133                                                   07181
         DC    C'-    CODED PARMS BEFORE BEING CORRECTED BY THE COPYMO' 07182
         DC    C'DS PROGRAM  -  List of Uncorrected Options           ' 07183
         DC    27C' '                                                   07184
DISPNCRO DS    0CL133                                                   07185
         DC    C'     OPTIONS:  As coded in the JCL and interpreted by' 07186
         DC    C' the PARMCHEK routine --                             ' 07187
         DC    27C' '                                                   07188
DISPLINH DS    0CL133                                                   07189
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - ' 07190
         DC    C'LEVEL 086 - OPTIONS DISPLAY                          ' 07191
         DC    27C' '                                                   07192
DISPLINO DS    0CL133                                                   07193
         DC    C'-    OPTIONS IN EFFECT:                              ' 07194
         DC    C'                                                     ' 07195
         DC    27C' '                                                   07196
DISPOP01 DS    0CL133                                                   07197
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE' 07198
         DC    C'LIMIT=   SYSIN CARD                                  ' 07199
         DC    27C' '                                                   07200
DISPOP02 DS    0CL133                                                   07201
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE' 07202
         DC    C'LIMIT=   SYSIN CARD                                  ' 07203
         DC    27C' '                                                   07204
DISPOP03 DS    0CL133                                                   07205
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE' 07206
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 ' 07207
         DC    27C' '                                                   07208
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco' 07209
         DC    C'rds before they have been changed by the COPYMODS pro' 07210
         DC    C'gram.                     '                            07211
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X07212
               BLKSIZE=133                                              07213
         DC    C' '                                                     07214
LINE     DS    CL133                                                    07215
DISPLIN1 DS    0CL133                                                   07216
         DC    C'0    '                                                 07217
DISPL1A  DC    8CL12' '                                                 07218
         DC    32C' '                                                   07219
DISPLIN2 DS    0CL133                                                   07220
         DC    C'     '                                                 07221
DISPL2A  DC    8CL12' '                                                 07222
         DC    32C' '                                                   07223
DISPLIN3 DS    0CL133                                                   07224
         DC    C'     '                                                 07225
DISPL3A  DC    8CL12' '                                                 07226
         DC    32C' '                                                   07227
DISPLIN4 DS    0CL133                                                   07228
         DC    C'     '                                                 07229
DISPL4A  DC    8CL12' '                                                 07230
         DC    32C' '                                                   07231
DISPLIN5 DS    0CL133                                                   07232
         DC    C'     '                                                 07233
DISPL5A  DC    8CL12' '                                                 07234
         DC    32C' '                                                   07235
DISPLIN6 DS    0CL133                                                   07236
         DC    C'     '                                                 07237
DISPL6A  DC    8CL12' '                                                 07238
         DC    32C' '                                                   07239
DISPLIN7 DS    0CL133                                                   07240
         DC    C'     '                                                 07241
DISPL7A  DC    8CL12' '                                                 07242
         DC    32C' '                                                   07243
DISPLIN8 DS    0CL133                                                   07244
         DC    C'     '                                                 07245
DISPL8A  DC    8CL12' '                                                 07246
         DC    32C' '                                                   07247
DISPLIN9 DS    0CL133                                                   07248
         DC    C'     '                                                 07249
DISPL9A  DC    8CL12' '                                                 07250
         DC    32C' '                                                   07251
DISPLINA DS    0CL133                                                   07252
         DC    C'     '                                                 07253
DISPLAA  DC    8CL12' '                                                 07254
         DC    32C' '                                                   07255
         SPACE 3                                                        07256
         EJECT                                                          07257
         END                                                            07260
*          PARM CHECKER        AT LEVEL 1.6 AS OF 03/13/05              07261
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                      07262
**************************************************************          07263
**************************************************************          07264
**                                                          **          07265
**                                                          **          07266
**  MODULE:   PARMCHEK - Set option bits, based on          **          07267
**                       keywords coded in PARM and/or      **          07268
**                       SYSIN.                             **          07269
**                                                          **          07270
**  AUTHOR:   Sam Golob                                     **          07271
**                                                          **          07272
**  PURPOSE:  This program converts keywords in a PARM      **          07273
**            field or in SYSIN, into bit settings that     **          07274
**            a program can use, to control options in      **          07275
**            its execution.                                **          07276
**                                                          **          07277
**            This program can be run as a subroutine       **          07278
**            which is called, to set up to 10 bytes of     **          07279
**            bits, up to 80 bits in all, based on the      **          07280
**            settings of keywords in a table.              **          07281
**                                                          **          07282
**            This routine makes it easy to put a lot of    **          07283
**            options into a program.  If you want to       **          07284
**            add options, or use other words in PARM or    **          07285
**            SYSIN to call the same options, all you       **          07286
**            have to do, is to change or add entries in    **          07287
**            a table.  There is no extra coding to be      **          07288
**            done.                                         **          07289
**                                                          **          07290
**            Keywords in the PARM or SYSIN areas do not    **          07291
**            have to be delimited by commas or spaces or   **          07292
**            anything else.  Although for clarity, I'd     **          07293
**            certainly recommend that you put commas or    **          07294
**            spaces between the PARM field keywords.       **          07295
**            Therefore, I'd also advise that when you      **          07296
**            design keywords to put into the table to      **          07297
**            designate options, that you make them         **          07298
**            significantly different from each other.      **          07299
**            There is a length field in the table,         **          07300
**            however, which gives you some more control    **          07301
**            in this area.                                 **          07302
**                                                          **          07303
**            From a calling program, it would be possible  **          07304
**            to call PARMCHEK twice, against two different **          07305
**            tables, to set 20 bytes of options, instead   **          07306
**            of 10 bytes of options, and so forth...       **          07307
**                                                          **          07308
**            This gives you the opportunity of having      **          07309
**            a tremendous number of options, set by        **          07310
**            keywords, in your program, without using      **          07311
**            up valuable "base register space" for such    **          07312
**            coding.                                       **          07313
**                                                          **          07314
**                                                          **          07315
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **          07316
**            from a table, based on assembled defaults.    **          07317
**            These default settings are then overridden    **          07318
**            from a scan of words in the PARM field of     **          07319
**            the EXEC card.                                **          07320
**                                                          **          07321
**            If a SYSIN DD card is present, its cards      **          07322
**            are scanned against the table entries, to     **          07323
**            further override the bit settings which       **          07324
**            have already been done by the defaults and    **          07325
**            the PARM field.                               **          07326
**                                                          **          07327
**            The main purpose of this routine is to set    **          07328
**            bits from words.  However, if you need some   **          07329
**            keywords with values, such as (for example)   **          07330
**            FILELIMIT=69  in your program, you may use    **          07331
**            the "user code" section of this program       **          07332
**            to code that stuff in, so that these special  **          07333
**            keywords can be coded in SYSIN.               **          07334
**                                                          **          07335
**            Two sample keywords expecting number values:  **          07336
**            FILELIMIT=nnn  or                             **          07337
**            LABELIMIT=mmm                                 **          07338
**            have been coded here, just to illustrate      **          07339
**            how the user coding might work.               **          07340
**                                                          **          07341
**            Search order is:  Defaults, then PARM in      **          07342
**            the EXEC card, then SYSIN.                    **          07343
**                                                          **          07344
**            As coded here, the FILELIMIT= and             **          07345
**            LABELIMIT= keywords in SYSIN have to be in    **          07346
**            column 1 of the SYSIN cards, and if these     **          07347
**            "special keywords" are present in a card,     **          07348
**            the rest of that card is not scanned for      **          07349
**            the table keywords.                           **          07350
**                                                          **          07351
**            As coded here, the PARMTABL is a separate     **          07352
**            CSECT, addressable by V-CONs from the         **          07353
**            PARMCHEK CSECT.                               **          07354
**                                                          **          07355
**            It would probably be best to invoke the       **          07356
**            PARMCHEK program as a separate CSECT which    **          07357
**            is linkedited with the calling program,       **          07358
**            but it may be LOADed and BALR 14,15 'ed to,   **          07359
**            and run as a separate program.  (See the      **          07360
**            PARMDRVR program that is included in this     **          07361
**            package, as a sample.)                        **          07362
**                                                          **          07363
**    Input:  A fullword containing the address of the      **          07364
**            saved Register 1 from the calling program,    **          07365
**            which points to its parms.                    **          07366
**                                                          **          07367
**            A table containing parms, which is coded      **          07368
**            according to the following rules, and which   **          07369
**            has entries of 20 bytes apiece.               **          07370
**                                                          **          07371
**      FORMAT OF THE PARM TABLE                            **          07372
**                                                          **          07373
**        ONE ENTRY IS 20 BYTES                             **          07374
**                                                          **          07375
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **          07376
**                         (This is the word which          **          07377
**                          controls the bit settings.)     **          07378
**                         (up to and including 8 bytes)    **          07379
**                                                          **          07380
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **          07381
**                         X'00' says turn bit flag(s) ON   **          07382
**                         X'10' set entry as a DEFAULT     **          07383
**                                                          **          07384
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **          07385
**                         (This is the word searched on,   **          07386
**                          in the EXEC PARM and SYSIN      **          07387
**                          areas.)                         **          07388
**                                                          **          07389
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **          07390
**                          this keyword.                   **          07391
**                                                          **          07392
**                         These are the bits which the     **          07393
**                          keyword will flip on (or off).  **          07394
**                                                          **          07395
**                         You may control multiple bits    **          07396
**                          using one keyword.  All bits    **          07397
**                          controlled by this keyword      **          07398
**                          are coded in this entry field.  **          07399
**                                                          **          07400
**          The table is ended by an entry of X'FF's.       **          07401
**                                                          **          07402
**                                                          **          07403
**    Output:  R1 points to a 10-byte area containing the   **          07404
**             80 switch settings.                          **          07405
**                                                          **          07406
**             Sample code to use PARMCHEK output:          **          07407
**                                                          **          07408
**                      ST    R1,PARMADDR                   **          07409
**                      USING PARMFLGS,R1                   **          07410
**             *                                            **          07411
**             PARMFLGS DSECT                               **          07412
**             PARMFLG1 DS    X                             **          07413
**             PARMFLG2 DS    X                             **          07414
**             PARMFLG3 DS    X                             **          07415
**             PARMFLG4 DS    X                             **          07416
**             PARMFLG5 DS    X                             **          07417
**             PARMFLG6 DS    X                             **          07418
**             PARMFLG7 DS    X                             **          07419
**             PARMFLG8 DS    X                             **          07420
**             PARMFLG9 DS    X                             **          07421
**             PARMFLGA DS    X                             **          07422
**                                                          **          07423
**               then ....                                  **          07424
**                                                          **          07425
**                      TM    PARMFLG2,X'04'                **          07426
**                      BZ    some location                 **          07427
**                        ....                              **          07428
**                                                          **          07429
**             R2 points to the address of a data area      **          07430
**             containing values generated by this          **          07431
**             program.  It's address is at label STRTVALU  **          07432
**             and its length is in the first fullword      **          07433
**             at STRTVALU.                                 **          07434
**                                                          **          07435
**             R2 is accessed in a similar manner to R1.    **          07436
**             See the PARMDRVR program for an example      **          07437
**             illustrating one way in which PARMCHEK       **          07438
**             may be called.                               **          07439
**                                                          **          07440
**                                                          **          07441
**************************************************************          07442
         EJECT                                                          07443
**************************************************************          07444
**                                                          **          07445
**  CHANGE LOG:                                             **          07446
**                                                          **          07447
**    Version 1.1 - Separate Parm Table into different      **          07448
**       CSECT.  Detailed reporting in PARMREPT ddname.     **          07449
**                                                          **          07450
**    Version 1.2 - Uppercase keyword before comparing      **          07451
**       against the table entries.  This assumes you       **          07452
**       will code your table with all uppercase keyword    **          07453
**       entries.                                           **          07454
**                                                          **          07455
**    Version 1.3 - Option for requiring commas or spaces   **          07456
**       as delimiters between parms.  Comment out one      **          07457
**       instruction to require delimiters.                 **          07458
**                                                          **          07459
**    Version 1.4 - Fitted to COPYMODS Level 061.           **          07460
**                                                          **          07461
**    Version 1.5 - Fitted to COPYMODS Level 086.           **          07462
**                  Ten parm bits instead of five.          **          07463
**                                                          **          07464
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **          07465
**                                                          **          07466
**                                                          **          07467
**************************************************************          07468
**************************************************************          07469
         EJECT                                                          07470
**************************************************************          07471
*  ---------------------------------------------------------------  *   07472
*    This macro is used to display hex values in a printed report.      07473
*  ---------------------------------------------------------------  *   07474
         MACRO                                                          07475
&NAME    HEX   &TO,&LEN,&FROM                                           07476
&NAME    DS    0H                                                       07477
         ST    R4,SAV4HEX                                               07478
         STM   R15,R1,HEXSAVE                                           07479
         LA    R1,&FROM                                                 07480
         LA    R0,&LEN                                                  07481
         LA    R15,&TO                                                  07482
         BAL   R4,HEX                                                   07483
         L     R4,SAV4HEX                                               07484
         LM    R15,R1,HEXSAVE                                           07485
         MEND                                                           07486
         SPACE                                                          07487
**************************************************************          07488
         GBLC  &LLEV                                                    07489
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                               07490
         GBLA  &HEXDFLA                                                 07491
&LLEV    SETC  '1.6 '                                                   07492
         YREGS                                                          07493
* ------------------------------------------------------------------ *  07494
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *  07495
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *  07496
* ------------------------------------------------------------------ *  07497
         ENTRY CARDREAD                                                 07498
         ENTRY PARMCHEK                                                 07499
&HEXDFLA SETA  4                                                        07500
&HEXDFLC SETC  '&HEXDFLA'                                               07501
PARMCHEK CSECT                                                          07502
         USING *,R15                                                    07503
         B     EYECATCH                                                 07504
         DC    C'HEX DUMP '                                             07505
HEXDFLCC DC    C'&HEXDFLC'                                              07506
         DC    C' RECORDS '                                             07507
HEXDFLL  EQU   L'HEXDFLCC                                               07508
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                07509
         DC    C'--- '            MAKE EYECATCHER VISIBLE               07510
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '               07511
         DC    C' - '                                                   07512
         DC    C'PARM INPUT IN SYSIN '                                  07513
         DC    C' - '                                                   07514
         DC    C'LEVEL '                                                07515
SYSLEV   DC    C'&LLEV'                                                 07516
         DC    C' - '                                                   07517
SYSDAT   DC    C'&SYSDATE'                                              07518
         DC    C'  ',C'&SYSTIME ',C'--- '                               07519
         DC    C'--- '            MAKE EYECATCHER VISIBLE               07520
SAVEAREA DC    18F'0'                                                   07521
EYECATCH DS    0D             ENSURE ALIGNMENT                          07522
         SAVE  (14,12)                                                  07523
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  07524
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         07525
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        07526
         LR    R13,R1               NEW SAVE AREA ADDRESS               07527
         DROP  R15                                                      07528
* -----                       SET UP BASE REGISTERS                     07529
         USING PARMCHEK,R12,R11,R10                                     07530
         LR    R12,R15                                                  07531
         LA    R11,4095(,R12)                                           07532
         LA    R11,1(,R11)                                              07533
         LA    R10,4095(,R11)                                           07534
         LA    R10,1(,R10)                                              07535
*                                                                       07536
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                     07537
*                                                                       07538
         LR    R6,R2          SAVE USER AREA POINTER                    07539
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS         07540
         LR    R1,R6          RESTORE PARM POINTER                      07541
         ST    R1,PARMSAVE                                              07542
* ----------------------------------------------------------------- *   07543
TIOTSCAN DS    0H             Determine the presence of Optional        07544
*                             DDNAMES:  SYSIN AND PARMREPT.             07545
* ----->                      OPEN them if there is JCL for them.       07546
* ----------------------------------------------------------------- *   07547
         L     R5,16          R5=CVT                                    07548
         L     R5,0(,R5)      R5=TCB WORDS                              07549
         L     R5,4(,R5)      R5=MY TCB                                 07550
         L     R5,12(,R5)     R5=TIOT                                   07551
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                         07552
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                            07553
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES       07554
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?              07555
         BNE   TIOTSYSN       NO                                        07556
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD        07557
         B     TIOTNEXT       CONTINUE                                  07558
TIOTSYSN CLC   4(8,R5),SYSIN+40                                         07559
         BNE   TIOTNEXT                                                 07560
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD        07561
         B     TIOTNEXT                                                 07562
TIOTNEXT SR    R3,R3                                                    07563
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                     07564
         AR    R5,R3          R5=NEXT DD ENTRY                          07565
         B     TIOTLOOP       GO CHECK IT                               07566
TIOTSEND DS    0H                                                       07567
*********************************************************************** 07568
* GET SYSTEM DATE AND TIME - A standard way to get date and time      * 07569
*********************************************************************** 07570
         STM   R14,R2,SAVE1402                                          07571
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY            07572
         OI    DATE+4,X'0F'                                             07573
         UNPK  DATED,DATE                                               07574
         OI    TIME+3,X'0F'                                             07575
         UNPK  TIMED,TIME                                               07576
*                          FILL HEADDATE AREA WITH INFO TO REUSE        07577
         MVC   HEADDATE(2),DATED                                        07578
         MVI   HEADDATE+2,C'/'                                          07579
         MVC   HEADDATE+3(2),DATED+2                                    07580
         MVI   HEADDATE+5,C'/'                                          07581
         MVC   HEADDATE+6(4),DATED+4                                    07582
         MVC   HEADDATE+12(2),TIMED                                     07583
         MVI   HEADDATE+14,C':'                                         07584
         MVC   HEADDATE+15(2),TIMED+2                                   07585
         MVI   HEADDATE+17,C':'                                         07586
         MVC   HEADDATE+18(2),TIMED+4                                   07587
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME        07588
         LM    R14,R2,SAVE1402                                          07589
*********************************************************************** 07590
         MVC   LEVDATE(8),SYSDAT                                        07591
*********************************************************************** 07592
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND            07593
* ----------------------------------------------------------------- *   07594
INITCONS DS    0H                                                       07595
         ZAP   TOTMLCNT,=P'0'                                           07596
* ----------------------------------------------------------------- *   07597
CHEKPRNT DS    0H                                                       07598
         TM    FLAGSYST,X'01'                                           07599
         BZ    CHEKPREN                                                 07600
         OPEN  (PARMREPT,OUTPUT)                                        07601
         OI    OPENDFLG,X'01'                                           07602
         MVC   PRTLINE,PRTLINE-1                                        07603
         MVC   PRTLINE,MESSAGE1                                         07604
         PUT   PARMREPT,MESSAGE1                                        07605
         MVC   PRTLINE,PRTLINE-1                                        07606
         PUT   PARMREPT,PRTLINE                                         07607
CHEKPREN DS    0H                                                       07608
* ----------------------------------------------------------------- *   07609
* --------------------------------------------------------- *           07610
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                    07611
*                         PRESENCE OR ABSENCE.                          07612
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                 07613
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                        07614
         L     R1,0(,R1)      Get PARM field                            07615
         LH    R5,0(,R1)      SAVE PARM LENGTH                          07616
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                      07617
         MVC   SAVMSLEN,PARMSLEN                                        07618
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                07619
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS               07620
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE              07621
         LA    R1,0           USE R1 TO MEASURE LENGTH READ             07622
* -----------------------------------------------------------           07623
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE              07624
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                              07625
* -----------------------------------------------------------           07626
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE              07627
         CLI   0(R2),X'FF'    END OF PARM TABLE?                        07628
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.           07629
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                  07630
         BO    PARMDSET       YES, GO SET IT.                           07631
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              07632
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                07633
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                 07634
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..               07635
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.       07636
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              07637
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                 07638
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK           07639
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES             07640
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF       07641
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              07642
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE            07643
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER              07644
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                07645
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE              07646
* ----------------------------------------------------------------- *   07647
SCANPARM DS    0H                                                       07648
         ST    R7,SAVE7BA0                                              07649
         ZAP   PARMLCNT,=P'0'                                           07650
         ZAP   PARMHITS,=P'0'                                           07651
         MVC   PARMSLEN,SAVMSLEN                                        07652
         BAL   R7,PARMLOOP      Now check the PARM field                07653
         MVC   SAVPHITS,PARMHITS                                        07654
         MVC   SAVCHRCT,PRMCHRCT                                        07655
         MVC   SAVELCNT,PARMLCNT                                        07656
         AP    TOTMHITS,PARMHITS                                        07657
         AP    TOTMLCNT,PARMLCNT                                        07658
         L     R7,SAVE7BA0                                              07659
* ----------------------------------------------------------------- *   07660
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                  07661
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING            07662
         OPEN  (SYSIN,INPUT)                                            07663
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                  07664
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE              07665
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN               07666
         B     OPNSYSNE           AND CONTINUE PROCESSING.              07667
NOSYSIN  DS    0H                                                       07668
         B     CARDREND                                                 07669
OPNSYSNE DS    0H                                                       07670
* ----------------------------------------------------------------- *   07671
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT              07672
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.        07673
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                       07674
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.      07675
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS       07676
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07677
*              Insert User Code Here for Keywords                       07678
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07679
         GET   SYSIN,CARDIN                                             07680
*                                                                       07681
* -- >>              <-- Intercept any keywords you want in SYSIN -->   07682
* -- >>              <--    before you start the table scan       -->   07683
*                                                                       07684
* ----------------------------------------------------------------- *   07685
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS   07686
         MVC   CARDWORK+1(79),CARDWORK                                  07687
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA     07688
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                       07689
* ----------------------------------------------------------------- *   07690
*      CARDWORK now contains an uppercased version of CARDIN.           07691
* ----------------------------------------------------------------- *   07692
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07693
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD          07694
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07695
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD          07696
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07697
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD          07698
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07699
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD          07700
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07701
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD          07702
         CLC   =C'WRITELTMS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   07703
         BE    LTMNMGET          PROCESS THIS CARD FOR KEYWORD          07704
         CLC   =C'/*',CARDIN                                            07705
         BE    SYSINEND                                                 07706
*                                                                       07707
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07708
* ----         Resume Checking SYSIN in PARM Table                      07709
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07710
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL       07711
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                        07712
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD   07713
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH            07714
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE       07715
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                 07716
         L     R1,TOTCHRCT                                              07717
         A     R1,PRMCHRCT                                              07718
         ST    R1,TOTCHRCT                                              07719
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN         07720
         ZAP   PARMHITS,=P'0'                                           07721
         ZAP   PARMLCNT,=P'0'                                           07722
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                07723
         AP    TOTMHITS,PARMHITS                                        07724
         AP    TOTMLCNT,PARMLCNT                                        07725
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                     07726
         B     CARDREAD        GET ANOTHER CARD                         07727
* ----                                                                  07728
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07729
*              Handle User Code Here for Keywords                       07730
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07731
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?       07732
         BE    CARDREAD                 YES. IGNORE CARD                07733
         MVC   VOLSTG1(6),CARDIN+10                                     07734
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                     07735
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER  07736
         B     CARDREAD          GET ANOTHER CARD                       07737
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?       07738
         BE    CARDREAD                 YES. IGNORE CARD                07739
         MVC   TAPEOWN(14),CARDIN+10                                    07740
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                     07741
         B     CARDREAD                                                 07742
FILELGET DS    0H                                                       07743
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           07744
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                07745
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     07746
         BL    CARDREAD          YES. IGNORE.                           07747
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         07748
         BH    CARDREAD          YES. IGNORE.                           07749
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON               07750
         LA    R15,CARDIN+10     STARTING ADDRESS                       07751
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              07752
FILELNUM DS    0H                                                       07753
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 07754
         C     R15,=A(CARDIN+71) END OF CARD?                           07755
         BH    FILELGNM          YES, GET NUMBER                        07756
         CLI   0(R15),C' '       BLANK HERE?                            07757
         BE    FILELGNM          YES, GET NUMBER                        07758
         B     FILELNUM          NO. STEP UP ONE PLACE                  07759
FILELGNM DS    0H                                                       07760
         SR    R15,R1            HOW BIG IS THE NUMBER                  07761
         BCTR  R15,0             LOWER IT FOR EXECUTE                   07762
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA           07763
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA        07764
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA      07765
         CVB   R0,WORKA          CONVERT IT TO BINARY                   07766
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE          07767
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES              07768
         CVB   R0,WORKA          CONVERT IT TO BINARY                   07769
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE          07770
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS      07771
FILELCLG DS    0H                                                       07772
         B     CARDREAD                                                 07773
LABELGET DS    0H                                                       07774
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           07775
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                07776
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     07777
         BL    CARDREAD          YES. IGNORE.                           07778
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         07779
         BH    CARDREAD          YES. IGNORE.                           07780
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON              07781
         LA    R15,CARDIN+10     STARTING ADDRESS                       07782
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              07783
LABELNUM DS    0H                                                       07784
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 07785
         C     R15,=A(CARDIN+71) END OF CARD?                           07786
         BH    LABELGNM          YES, GET NUMBER                        07787
         CLI   0(R15),C' '       BLANK HERE?                            07788
         BE    LABELGNM          YES, GET NUMBER                        07789
         B     LABELNUM          NO. STEP UP ONE PLACE                  07790
LABELGNM DS    0H                                                       07791
         SR    R15,R1            HOW BIG IS THE NUMBER                  07792
         BCTR  R15,0             LOWER IT FOR EXECUTE                   07793
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA           07794
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA        07795
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA           07796
         CVB   R0,WORKL          CONVERT IT TO BINARY                   07797
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE          07798
LABELCLG DS    0H                                                       07799
         B     CARDREAD                                                 07800
PRINTGET DS    0H                                                       07801
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           07802
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                07803
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     07804
         BL    CARDREAD          YES. IGNORE.                           07805
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         07806
         BH    CARDREAD          YES. IGNORE.                           07807
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ        07808
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                   07809
         LA    R15,CARDIN+10     STARTING ADDRESS                       07810
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              07811
PRINTNUM DS    0H                                                       07812
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 07813
         C     R15,=A(CARDIN+71) END OF CARD?                           07814
         BH    PRINTGNM          YES, GET NUMBER                        07815
         CLI   0(R15),C' '       BLANK HERE?                            07816
         BE    PRINTGNM          YES, GET NUMBER                        07817
         B     PRINTNUM          NO. STEP UP ONE PLACE                  07818
PRINTGNM DS    0H                                                       07819
         SR    R15,R1            HOW BIG IS THE NUMBER                  07820
         BCTR  R15,0             LOWER IT FOR EXECUTE                   07821
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA           07822
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA        07823
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA           07824
         CVB   R0,WORKP          CONVERT IT TO BINARY                   07825
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE          07826
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER           07827
PRINTCLG DS    0H                                                       07828
         B     CARDREAD                                                 07829
LTMNMGET DS    0H                                                       07830
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           07831
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                07832
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     07833
         BL    CARDREAD          YES. IGNORE.                           07834
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         07835
         BH    CARDREAD          YES. IGNORE.                           07836
         OI    PARMFLG5,X'08'    SET WRTLTM OPTION ON                   07837
         LA    R15,CARDIN+10     STARTING ADDRESS                       07838
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              07839
LTMNMNUM DS    0H                                                       07840
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 07841
         C     R15,=A(CARDIN+71) END OF CARD?                           07842
         BH    LTMNMGNM          YES, GET NUMBER                        07843
         CLI   0(R15),C' '       BLANK HERE?                            07844
         BE    LTMNMGNM          YES, GET NUMBER                        07845
         B     LTMNMNUM          NO. STEP UP ONE PLACE                  07846
LTMNMGNM DS    0H                                                       07847
         SR    R15,R1            HOW BIG IS THE NUMBER                  07848
         BCTR  R15,0             LOWER IT FOR EXECUTE                   07849
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA           07850
         EX    R15,MVLTMNUM      COPY THE NUMBER TO MESSAGE AREA        07851
         EX    R15,MVLTMCHR      COPY THE NUMBER TO USER PASS AREA      07852
         CVB   R0,WORKA          CONVERT IT TO BINARY                   07853
         ST    R0,LTMNUMB        STORE THE VALUE FOR LATER USE          07854
LTMNMCLG DS    0H                                                       07855
         B     CARDREAD                                                 07856
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07857
*              End of User Code Here for Keywords                       07858
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   07859
CHECKEND DS    0H                                                       07860
* -----------------------------------------------------------           07861
SYSINEND DS    0H                                                       07862
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                    07863
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.           07864
* ------- Correct Error - SYSIN not shown if not coded explicitly.      07865
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.            07866
* ------- Correct Error - SYSIN not shown if not coded explicitly.      07867
         L     R1,TOTCHRCT                                              07868
         A     R1,PRMCHRCT         Final totals for last card           07869
         ST    R1,TOTCHRCT                                              07870
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED            07871
         CLOSE (SYSIN)                                                  07872
         B     CARDREND                                                 07873
CARNOSYS DS    0H                                                       07874
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.        07875
CARDREND DS    0H                                                       07876
         BAL   R7,SUMMREPT                                              07877
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                    07878
         BZ    PARMRPEN         NO.  GET OUT.                           07879
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED            07880
         CLOSE (PARMREPT)                                               07881
PARMRPEN DS    0H                                                       07882
THEEND   DS    0H                                                       07883
         L     R13,4(,R13)                                              07884
         MVC   16(4,R13),=F'0'          Return code 0     in R15        07885
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1         07886
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2         07887
         LM    R14,R12,12(R13)                                          07888
         BR    R14                                                      07889
* -----------------------------------------------------------           07890
*        S U B R O U T I N E S                                          07891
* -----------------------------------------------------------           07892
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.             07893
* -----------------------------------------------------------           07894
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                    07895
         BNL   PARMFIN        YES - GET OUT                             07896
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE        07897
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING           07898
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                        07899
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                  07900
*        ------------------------------------------------------------   07901
*--->                    code to require a delimiter (space, etc)       07902
*                        to enable, comment out the next instruction    07903
*        ------------------------------------------------------------   07904
         B     PRMNODLM         comment this line to require delimiter  07905
         TM    PRMFDFLG,X'01'                                           07906
         BO    PRMNFND                                                  07907
PRMNODLM DS    0H                                                       07908
*--->                                                                   07909
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE             07910
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                07911
         BCTR  R5,0           ONE LESS FOR EXECUTE                      07912
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE      07913
*                                                                       07914
*   If you want to require parm comparisons as case sensitive,          07915
*    then comment out the following instruction....                     07916
*                                                                       07917
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM      07918
*                                                                       07919
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM    07920
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION               07921
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                         07922
         B     BOPPTBL        INNER LOOP                                07923
*                                                                       07924
PRMNFND  DS    0H                                                       07925
*--->                 below - Parm Found flagging to require delimiter  07926
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters  07927
         BE    PRMFDOFF                                                 07928
         CLI   0(R4),C','                                               07929
         BE    PRMFDOFF                                                 07930
         B     PRMFDEND                                                 07931
PRMFDOFF DS    0H                                                       07932
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag        07933
PRMFDEND DS    0H                                                       07934
*--->                 above - Parm Found flagging to require delimiter  07935
*                                                                       07936
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                      07937
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                 07938
*                                                                       07939
         B     PARMLOOP       TRY AGAIN                                 07940
*                                                                       07941
PRMFOUND DS    0H                                                       07942
*                                                                       07943
*--->                 below - Parm Found flagging to require delimiter  07944
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                07945
*--->                 above - Parm Found flagging to require delimiter  07946
PRMNOSEP DS    0H                                                       07947
         AP    PARMHITS,=P'1'    COUNT PARM HITS                        07948
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND           07949
         TM    1(R2),X'01'         PARM ON OR OFF?                      07950
         BO    PARMOFF             OFF                                  07951
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND    07952
         B     PARMGO                        AND GO ON                  07953
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK          07954
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS             07955
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF       07956
PARMGO   DS    0H                                                       07957
         XR    R5,R5          Clear Work Reg befor IC                   07958
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE            07959
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                 07960
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                  07961
         B     PARMLOOP       LOOK FOR MORE PARMS                       07962
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --             07963
*                             COUNT FOR DEBUGGING                       07964
PRMCHEND DS    0H                                                       07965
         BR    R7                                                       07966
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                   07967
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                   07968
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                   07969
* --------------------------------------------------------- *           07970
SUMMREPT DS    0H                  Print details of PARMREPT            07971
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                 07972
         BZ    SUMMREND            No. Bypass this routine.             07973
         MVC   PRTLINE,PRTLINE-1                                        07974
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                       07975
         HEX   PRTLINE+27,1,PARMFLG1                                    07976
         HEX   PRTLINE+30,1,PARMFLG2                                    07977
         HEX   PRTLINE+33,1,PARMFLG3                                    07978
         HEX   PRTLINE+36,1,PARMFLG4                                    07979
         HEX   PRTLINE+39,1,PARMFLG5                                    07980
         HEX   PRTLINE+42,1,PARMFLG6                                    07981
         HEX   PRTLINE+45,1,PARMFLG7                                    07982
         HEX   PRTLINE+48,1,PARMFLG8                                    07983
         HEX   PRTLINE+51,1,PARMFLG9                                    07984
         HEX   PRTLINE+54,1,PARMFLGA                                    07985
         PUT   PARMREPT,PRTLINE                                         07986
         MVC   PRTLINE,PRTLINE-1                                        07987
         PUT   PARMREPT,PRTLINE                                         07988
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first. 07989
         MVC   PRTLINE+4(12),=C'User Area : '                           07990
         HEX   PRTLINE+16,48,STRTVALU                                   07991
         PUT   PARMREPT,PRTLINE                                         07992
         MVC   PRTLINE,PRTLINE-1                                        07993
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                         07994
         HEX   PRTLINE+16,48,STRTVALU+48                                07995
         PUT   PARMREPT,PRTLINE                                         07996
         MVC   PRTLINE,PRTLINE-1                                        07997
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                         07998
         HEX   PRTLINE+16,48,STRTVALU+96                                07999
         PUT   PARMREPT,PRTLINE                                         08000
         MVC   PRTLINE,PRTLINE-1                                        08001
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                         08002
         HEX   PRTLINE+16,38,STRTVALU+144                               08003
         PUT   PARMREPT,PRTLINE                                         08004
         MVC   PRTLINE,PRTLINE-1                                        08005
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                 08006
         HEX   PRTLINE+30,4,STRTVALU                                    08007
         MVC   PRTLINE+42(6),=C'Hex   '                                 08008
         PUT   PARMREPT,PRTLINE                                         08009
         MVC   PRTLINE,PRTLINE-1                                        08010
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                 08011
         HEX   PRTLINE+30,4,PARMSLEN                                    08012
         MVC   PRTLINE+42(6),=C'Hex   '                                 08013
         PUT   PARMREPT,PRTLINE                                         08014
         MVC   PRTLINE,PRTLINE-1                                        08015
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                 08016
         HEX   PRTLINE+30,4,SAVMSLEN                                    08017
         MVC   PRTLINE+42(6),=C'Hex   '                                 08018
         PUT   PARMREPT,PRTLINE                                         08019
         MVC   PRTLINE,PRTLINE-1                                        08020
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                 08021
         HEX   PRTLINE+30,4,PARMSTRT                                    08022
         MVC   PRTLINE+42(6),=C'Hex   '                                 08023
         PUT   PARMREPT,PRTLINE                                         08024
         MVC   PRTLINE,PRTLINE-1                                        08025
         MVC   PRTLINE+4(22),=C'Last Character Count :'                 08026
         HEX   PRTLINE+30,4,PRMCHRCT                                    08027
         MVC   PRTLINE+42(6),=C'Hex   '                                 08028
         PUT   PARMREPT,PRTLINE                                         08029
         MVC   PRTLINE,PRTLINE-1                                        08030
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                 08031
         HEX   PRTLINE+30,4,SAVCHRCT                                    08032
         MVC   PRTLINE+42(6),=C'Hex   '                                 08033
         PUT   PARMREPT,PRTLINE                                         08034
         MVC   PRTLINE,PRTLINE-1                                        08035
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                 08036
         HEX   PRTLINE+30,4,TOTCHRCT                                    08037
         MVC   PRTLINE+42(6),=C'Hex   '                                 08038
         PUT   PARMREPT,PRTLINE                                         08039
         MVC   PRTLINE,PRTLINE-1                                        08040
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                 08041
         HEX   PRTLINE+30,4,SAVPHITS                                    08042
         MVC   PRTLINE+42(6),=C'Packed'                                 08043
         PUT   PARMREPT,PRTLINE                                         08044
         MVC   PRTLINE,PRTLINE-1                                        08045
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                 08046
         HEX   PRTLINE+30,4,PARMHITS                                    08047
         MVC   PRTLINE+42(6),=C'Packed'                                 08048
         PUT   PARMREPT,PRTLINE                                         08049
         MVC   PRTLINE,PRTLINE-1                                        08050
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                 08051
         HEX   PRTLINE+30,4,TOTMHITS                                    08052
         MVC   PRTLINE+42(6),=C'Packed'                                 08053
         PUT   PARMREPT,PRTLINE                                         08054
         MVC   PRTLINE,PRTLINE-1                                        08055
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                 08056
         HEX   PRTLINE+30,4,SAVELCNT                                    08057
         MVC   PRTLINE+42(6),=C'Packed'                                 08058
         PUT   PARMREPT,PRTLINE                                         08059
         MVC   PRTLINE,PRTLINE-1                                        08060
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                 08061
         HEX   PRTLINE+30,4,PARMLCNT                                    08062
         MVC   PRTLINE+42(6),=C'Packed'                                 08063
         PUT   PARMREPT,PRTLINE                                         08064
         MVC   PRTLINE,PRTLINE-1                                        08065
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                 08066
         HEX   PRTLINE+30,4,TOTMLCNT                                    08067
         MVC   PRTLINE+42(6),=C'Packed'                                 08068
         PUT   PARMREPT,PRTLINE                                         08069
         MVC   PRTLINE,PRTLINE-1                                        08070
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                 08071
         HEX   PRTLINE+30,20,PARMTENT                                   08072
         PUT   PARMREPT,PRTLINE                                         08073
SUMMREND DS    0H                                                       08074
         BR    R7                                                       08075
* --------------------------------------------------------- *           08076
* --------------------------------------------------------- *           08077
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                   08078
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                   08079
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                   08080
MVLTMNUM MVC   LTMWMSG+11(0),0(R1)   <<< EXECUTED >>>                   08081
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                   08082
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                   08083
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                   08084
MVLTMCHR MVC   LTMCHAR(0),0(R1)      <<< EXECUTED >>>                   08085
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                   08086
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                   08087
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                   08088
         LTORG                                                          08089
         EJECT                                                          08090
* --------------------------------------------------------- *           08091
WORKA    DC    D'0'                                                     08092
WORKL    DC    D'0'                                                     08093
WORKP    DC    D'0'                                                     08094
PL4NO3   DC    PL4'3'                                                   08095
FF       EQU   X'FF'                                                    08096
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N' 08097
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT' 08098
         DC    C'S.'                                                    08099
         DC    CL25' '                                                  08100
LIMFMSG  DS    0CL72                                                    08101
         DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 08102
         DC    C' IS TREATED AS NL. '                                 ' 08103
LIMLMSG  DS    0CL106                                                   08104
         DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 08105
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  ' 08106
LIMPMSG  DS    0CL106                                                   08107
         DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER' 08108
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   ' 08109
LIMHMSG  DS    0CL116                                                   08110
         DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                08111
         DC    CL6'&HEXDFLM'                                            08112
         DC    C' RECORDS WILL'                                         08113
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in ' 08114
         DC    C'SYSIN.'                                                08115
*                                                                       08116
         DC    CL10' '             Padding                              08117
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.    08118
* --------------------------------------------------------- *           08119
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS               08120
PARMFLG1 DC    X'00'                                                    08121
PARMFLG2 DC    X'00'                                                    08122
PARMFLG3 DC    X'00'                                                    08123
PARMFLG4 DC    X'00'                                                    08124
PARMFLG5 DC    X'00'                                                    08125
PARMFLG6 DC    X'00'                                                    08126
PARMFLG7 DC    X'00'                                                    08127
PARMFLG8 DC    X'00'                                                    08128
PARMFLG9 DC    X'00'                                                    08129
PARMFLGA DC    X'00'                                                    08130
PARMCOPY DS    XL10                Copy of options before correction    08131
* --------------------------------------------------------- *           08132
         DS    0F                                                       08133
STRTVALU DS    0CL(ENDVALUE)                                            08134
         DC    A(ENDVALUE)                                              08135
PARMSLEN DC    F'0'                LENGTH OF PARMS                      08136
*                                  Upon entry, this field contains      08137
*                                  the PARM address from COPYMODS,      08138
*                                  which gets overlaid by PARMCHEK.     08139
SAVMSLEN DC    F'0'                LENGTH OF PARMS                      08140
*                                  Upon entry, this field contains      08141
*                                  the PARM address from COPYMODS,      08142
*                                  which gets overlaid by PARMCHEK.     08143
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS              08144
*                                  Upon entry, this field contains      08145
*                                  the PARM length from COPYMODS,       08146
*                                  which gets overlaid by PARMCHEK.     08147
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            08148
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            08149
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            08150
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                  08151
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                  08152
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                  08153
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 08154
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 08155
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 08156
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                08157
         DC    CL7' '              FILLER                               08158
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES           08159
*  -----    User Stuff                                                  08160
LINLABEL DC    F'0'           LABEL LIMIT VALUE                         08161
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS 08162
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4     08163
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL        08164
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE        08165
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE        08166
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN      08167
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS      08168
TAPEOWN  DC    CL10' '                                                  08169
TAPEOEXT DC    CL4' '                                                   08170
TAPEOASC DC    CL14' '                                                  08171
OVERFLAG DC    X'00'                                                    08172
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL              08173
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                   08174
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN        08175
LIMCHAR  DC    CL10' '                                                  08176
LABCHAR  DC    CL10' '                                                  08177
PRTCHAR  DC    CL10' '                                                  08178
LTMCHAR  DC    CL10' '                                                  08179
ENDVALUE EQU   (*-PARMSLEN)+4                                           08180
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.    08181
* --------------------------------------------------------- *           08182
*              FORMAT OF PARM TABLE                                     08183
*              ONE ENTRY IS 20 BYTES                                    08184
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX              08185
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                08186
*                               X'00' SAYS TURN FLAG ON                 08187
*                               X'10' SET ENTRY AS A DEFAULT            08188
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED              08189
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,               08190
*                                WHICH ALLOWS FOR 80 PARMS              08191
*                                THAT DON'T HAVE TO BE                  08192
*                                SEPARATED BY A COMMA.                  08193
PBYTES   EQU   10               Number of bytes of parm switches        08194
PTELEN   EQU   20               Length of each table entry              08195
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes 08196
EFFS     DC    20X'FF'          X'FF' bytes for XORing                  08197
* --------------------------------------------------------- *           08198
PARMTABL CSECT                                                          08199
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'          08200
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'          08201
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'          08202
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'          08203
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'          08204
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'          08205
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'          08206
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'          08207
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'          08208
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'          08209
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'          08210
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'          08211
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'          08212
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'          08213
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'          08214
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'          08215
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'          08216
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'          08217
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'          08218
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space  08219
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'          08220
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'          08221
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'          08222
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'          08223
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'          08224
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'          08225
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'          08226
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'          08227
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'          08228
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'          08229
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'          08230
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'          08231
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'          08232
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'          08233
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'          08234
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'          08235
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'          08236
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'          08237
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'          08238
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'          08239
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'          08240
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'          08241
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'          08242
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'          08243
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'          08244
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'          08245
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'          08246
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'          08247
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'          08248
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'          08249
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'          08250
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'          08251
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'          08252
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'          08253
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'          08254
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'          08255
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'          08256
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'          08257
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'          08258
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'          08259
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'          08260
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'          08261
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'          08262
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'          08263
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'          08264
         DC    X'08',X'11',C'NOINITVO',X'00000100000000000000'          08265
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'          08266
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'          08267
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'          08268
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'          08269
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'          08270
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'          08271
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'          08272
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'          08273
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'          08274
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'          08275
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'          08276
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'          08277
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'          08278
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'          08279
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'          08280
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'          08281
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'          08282
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'          08283
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'          08284
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'          08285
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'          08286
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'          08287
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'          08288
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'          08289
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'          08290
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'          08291
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'          08292
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'          08293
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'          08294
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'          08295
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'          08296
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'          08297
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'          08298
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'          08299
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'          08300
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'          08301
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'          08302
         DC    X'08',X'00',C'ENABLTMW',X'00000000040000000000'          08303
         DC    X'08',X'01',C'NOENABLT',X'00000000040000000000'          08304
         DC    X'06',X'00',C'WRTLTM  ',X'00000000080000000000'          08305
         DC    X'08',X'11',C'NOWRTLTM',X'00000000080000000000'          08306
         DC    X'06',X'00',C'SECOFF  ',X'00000000001000000000'          08307
         DC    X'08',X'01',C'NOSECOFF',X'00000000001000000000'          08308
         DC    X'07',X'00',C'FOOTAGE ',X'00000000002000000000'          08309
         DC    X'08',X'01',C'NOFOOTAG',X'00000000002000000000'          08310
         DC    X'08',X'00',C'FOOTDIAG',X'00000000004000000000'          08311
         DC    X'08',X'11',C'NOFOOTDI',X'00000000004000000000'          08312
         DC    X'08',X'00',C'CODEDPRM',X'00000000008000000000'          08313
         DC    X'08',X'11',C'NOCODEDP',X'00000000008000000000'          08314
         DC    X'06',X'00',C'MINMAX  ',X'00000000000100000000'          08315
         DC    X'08',X'01',C'NOMINMAX',X'00000000000100000000'          08316
         DC    X'07',X'00',C'RECSIZE ',X'00000000000200000000'          08317
         DC    X'08',X'01',C'NORECSIZ',X'00000000000200000000'          08318
         DC    X'06',X'00',C'DGSTRI  ',X'00000000000400000000'          08319
         DC    X'08',X'11',C'NODGSTRI',X'00000000000400000000'          08320
         DC    X'06',X'00',C'KEEPVL  ',X'00000000000800000000'          08321
         DC    X'07',X'00',C'KEEPVOL ',X'00000000000800000000'          08322
         DC    X'08',X'11',C'NOKEEPVL',X'00000000000800000000'          08323
         DC    X'06',X'00',C'SHOOVL  ',X'00000000000010000000'          08324
         DC    X'08',X'11',C'NOSHOOVL',X'00000000000010000000'          08325
         DC    X'FFFFFFFFFFFFFFFF'                                      08326
* --------------------------------------------------------- *           08327
PARMCHEK CSECT                                                          08328
         SPACE 3                                                        08329
         LTORG                                                          08330
         SPACE 3                                                        08331
         DS    0D                                                       08332
* --------------------------------------------------------- *           08333
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR -08334
               COPYMODS LVL-086'                                        08335
* --------------------------------------------------------- *           08336
         SPACE 3                                                        08337
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X08338
               EODAD=SYSINEND                                           08339
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA    08340
* --------------------------------------------------------- *           08341
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08342
HEX      DS    0H                                                       08343
         MVC   1(1,R15),0(R1)        Move byte                          08344
         UNPK  0(3,R15),1(2,R15)     Unpack                             08345
         TR    0(2,R15),HEXTAB-240                                      08346
         LA    R15,2(,R15)           Increment output pointer           08347
         LA    R1,1(,R1)             Increment input pointer            08348
         BCT   R0,HEX                Decrement length, then loop        08349
         MVI   0(R15),C' '           Blank the trailing byte            08350
         BR    R4                    Return to caller                   08351
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    08352
         SPACE                                                          08353
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08354
HEXSAVE  DS    3F                    Register save for HEX macro        08355
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08356
* --------------------------------------------------------- *           08357
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT            08358
*              X'01'          PARMREPT DD IS PRESENT                    08359
*              X'02'          SYSIN    DD IS PRESENT                    08360
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               08361
*              X'01'          PARMREPT DD IS OPEN                       08362
*              X'02'          SYSIN    DD IS OPEN                       08363
* --------------------------------------------------------- *           08364
         SPACE 3                                                        08365
PARMSAVE DC    F'0'                                                     08366
SAV4HEX  DC    F'0'                                                     08367
SAVE2TO3 DC    2F'0'                                                    08368
SAVE3REG DC    F'0'                                                     08369
SAVE7BA0 DC    F'0'                                                     08370
SAVE7BA1 DC    F'0'                                                     08371
PARMWORK DC    CL8' '                                                   08372
UPCASEOR DC    CL8' '                                                   08373
         DC    CL4' '                                                   08374
*    ------------------------ >   Constants for Date and Time - below   08375
SAVE1402 DS    6F                 Extra fullword for safety             08376
TIMED    DS    CL7                                                      08377
DATED    DS    CL9                                                      08378
DATETIME DS    4F                                                       08379
         ORG   DATETIME                                                 08380
TIME     DS    CL4                                                      08381
         DS    CL4                                                      08382
DATE     DS    CL5                                                      08383
         DS    CL3                                                      08384
HEADDLIT DS    0CL31              Literal for headings - date and time  08385
         DC    CL6'Today:'                                              08386
         DC    CL2' '                                                   08387
HEADDATE DC    CL23' '                                                  08388
LEVELLIT DS    0CL21              Level number display for headings     08389
         DC    CL6'Level '                                              08390
LEVELL   DC    CL4'&LLEV'                                               08391
         DC    CL2' ('                                                  08392
LEVDATE  DC    CL8' '             Assembly date for this program        08393
         DC    CL1')'                                                   08394
*    ------------------------ >   Constants for Date and Time - above   08395
*    --------------- >            Output line buffers - below           08396
PRMFDFLG DC    X'00'              Parm Found Flag                       08397
*              X'01'              Parm has been found in this record    08398
         DC    CL3' '                                                   08399
         DC    C' '                                                     08400
LINE     DC    CL133' '                                                 08401
         DC    C' '                                                     08402
CNTLINE  DC    CL133' '                                                 08403
         DC    C' '                                                     08404
OUTLINE  DC    CL133' '                                                 08405
         DC    C' '                                                     08406
PRTLINE  DC    CL133' '                                                 08407
         DC    CL80' '            Padding                               08408
*    --------------- >            Output line buffers - above           08409
*                                                                       08410
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                      08411
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                 08412
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                  08413
         END                                                            08414
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 03/13/05              08415
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                      08416
**************************************************************          08417
**************************************************************          08418
**                                                          **          08419
**                                                          **          08420
**  MODULE:   LABELCHK - Check tape files to see if they    **          08421
**                       are tape labels.                   **          08422
**                                                          **          08423
**  AUTHOR:   Sam Golob                                     **          08424
**                                                          **          08425
**  PURPOSE:  This is a subroutine for programs which read  **          08426
**            tapes under BLP, so that tape label files     **          08427
**            would appear as ordinary files to the calling **          08428
**            program.  As file contents are passed to      **          08429
**            this program, LABELCHK detects whether they   **          08430
**            are tape labels, and tells the caller what    **          08431
**            type of labels they are.  If labels need to   **          08432
**            be interpreted, the PRINTLBL program is       **          08433
**            called.                                       **          08434
**                                                          **          08435
**  METHOD:   Label headers (usually the first 4 bytes)     **          08436
**            are scanned, and if a match to a known label  **          08437
**            type is found, then that type of label is     **          08438
**            processed appropriately.                      **          08439
**                                                          **          08440
**  Flags Set:  The principal flag set by this routine is   **          08441
**            the ISLABEL byte:                             **          08442
**                                                          **          08443
**   Setting of ISLABEL:   X'01'  - record is an IBM        **          08444
**                                  standard label          **          08445
**                                                          **          08446
**                         X'02'  - record is an ANSI/ISO   **          08447
**                                  (ASCII) standard label  **          08448
**                                                          **          08449
**                         X'00'  - the tested record is    **          08450
**                                  not a tape label        **          08451
**                                                          **          08452
**   Other flags and quantities are also set by this        **          08453
**   routine.  They are passed back to the caller in the    **          08454
**   LCHKPASS user area, in register 2.  Sometimes the      **          08455
**   PARMFLGS are changed.  These are passed back to the    **          08456
**   caller in register 1.  Sometimes the INAREA (record    **          08457
**   input area, usually containing a label image) is       **          08458
**   changed.  The altered label image is passed back to    **          08459
**   the caller in register 3.  At present, 80 bytes are    **          08460
**   passed back in register 3.                             **          08461
**                                                          **          08462
**************************************************************          08463
         EJECT                                                          08464
**************************************************************          08465
**                                                          **          08466
**  CHANGE LOG:                                             **          08467
**                                                          **          08468
**    Version 1.0 - Base program to detect IBM tape labels. **          08469
**                                                          **          08470
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **          08471
**                                                          **          08472
**                                                          **          08473
**************************************************************          08474
**************************************************************          08475
         EJECT                                                          08476
**************************************************************          08477
*  ---------------------------------------------------------------  *   08478
*    This macro is used to display hex values in a printed report.      08479
*  ---------------------------------------------------------------  *   08480
         MACRO                                                          08481
&NAME    HEX   &TO,&LEN,&FROM                                           08482
&NAME    DS    0H                                                       08483
         ST    R4,SAV4HEX                                               08484
         STM   R15,R1,HEXSAVE                                           08485
         LA    R1,&FROM                                                 08486
         LA    R0,&LEN                                                  08487
         LA    R15,&TO                                                  08488
         BAL   R4,HEX                                                   08489
         L     R4,SAV4HEX                                               08490
         LM    R15,R1,HEXSAVE                                           08491
         MEND                                                           08492
         SPACE                                                          08493
**************************************************************          08494
         GBLC  &LLEV                                                    08495
&LLEV    SETC  '1.1 '                                                   08496
         YREGS                                                          08497
         ENTRY LABELCHK                                                 08498
LABELCHK CSECT                                                          08499
         USING *,R15                                                    08500
         B     EYECATCH                                                 08501
         DC    C'--- '            MAKE EYECATCHER VISIBLE               08502
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'        08503
         DC    C' - '                                                   08504
         DC    C'LEVEL '                                                08505
SYSLEV   DC    C'&LLEV'                                                 08506
         DC    C' - '                                                   08507
SYSDAT   DC    C'&SYSDATE'                                              08508
         DC    C'  ',C'&SYSTIME ',C'--- '                               08509
         DC    C'Copyright (c) 2003-2012 by Sam Golob '                 08510
         DC    C'--- '              MAKE EYECATCHER VISIBLE             08511
SAVEAREA DC    18F'0'                                                   08512
EYECATCH DS    0D                   ENSURE ALIGNMENT                    08513
         SAVE  (14,12)                                                  08514
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM    08515
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  08516
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         08517
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        08518
         LR    R13,R1               NEW SAVE AREA ADDRESS               08519
         DROP  R15                                                      08520
* -----                             SET UP BASE REGISTERS               08521
         USING LABELCHK,R12,R11,R10,R9                                  08522
         LR    R12,R15                                                  08523
         LA    R11,4095(,R12)                                           08524
         LA    R11,1(,R11)                                              08525
         LA    R10,4095(,R11)                                           08526
         LA    R10,1(,R10)                                              08527
         LA    R9,4095(,R10)                                            08528
         LA    R9,1(,R9)                                                08529
         LR    R1,R5                RESTORE REGISTER 1 INPUT            08530
* ----------------------------------------------------------------- *   08531
         ST    R1,PARMSAVE          Address of parm flags in caller     08532
         ST    R2,USERSAVE          Address of user area in caller      08533
         ST    R3,INARSAVE          Address of INAREA in caller         08534
* ----------------------------------------------------------------- *   08535
*********************************************************************** 08536
* GET SYSTEM DATE AND TIME - A standard way to get date and time      * 08537
*********************************************************************** 08538
         STM   R14,R2,SAVE1402                                          08539
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY            08540
         OI    DATE+4,X'0F'                                             08541
         UNPK  DATED,DATE                                               08542
         OI    TIME+3,X'0F'                                             08543
         UNPK  TIMED,TIME                                               08544
*                          FILL HEADDATE AREA WITH INFO TO REUSE        08545
         MVC   HEADDATE(2),DATED                                        08546
         MVI   HEADDATE+2,C'/'                                          08547
         MVC   HEADDATE+3(2),DATED+2                                    08548
         MVI   HEADDATE+5,C'/'                                          08549
         MVC   HEADDATE+6(4),DATED+4                                    08550
         MVC   HEADDATE+12(2),TIMED                                     08551
         MVI   HEADDATE+14,C':'                                         08552
         MVC   HEADDATE+15(2),TIMED+2                                   08553
         MVI   HEADDATE+17,C':'                                         08554
         MVC   HEADDATE+18(2),TIMED+4                                   08555
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME        08556
         LM    R14,R2,SAVE1402                                          08557
*********************************************************************** 08558
         MVC   LEVDATE(8),SYSDAT                                        08559
*********************************************************************** 08560
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES     08561
* ----------------------------------------------------------------- *   08562
INITCONS DS    0H                    Initialize necessary quantities.   08563
         MVI   LINE-1,X'40'          Make sure the print line is blank. 08564
         MVC   LINE,LINE-1                                              08565
         L     R0,SYSPRINV           SYSPRINT DCB address in caller     08566
         ST    R0,SYSPRDCB             store for the program's use      08567
         L     R0,LABLDUMV           LABLDUMP DCB address in caller     08568
         ST    R0,LABLDDCB             store for the program's use      08569
         L     R0,LABADDIV           LABADDIN DCB address in caller     08570
         ST    R0,LABADDCB             store for the program's use      08571
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer   08572
         ST    R0,SAVTRTCS             store it for later use           08573
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm 08574
         ST    R0,PRTLBENT           Save entry point for calling later 08575
* ----------------------------------------------------------------*     08576
PROCESS  DS    0H                    First copy over passed areas.      08577
* ----------------------------------------------------------------*     08578
         L     R1,PARMSAVE              Point to caller's parm flags    08579
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.     08580
         L     R2,USERSAVE              Point to caller's user area.    08581
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.     08582
         L     R3,INARSAVE              Point to INAREA in caller.      08583
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.   08584
* ----------------------------------------------------------------*     08585
*   Then execute this entire program as a called subroutine.      *     08586
* ----------------------------------------------------------------*     08587
         BAL   R7,LABLCHEK                                              08588
* ----------------------------------------------------------------*     08589
*                                                                       08590
         B     THEEND                                                   08591
LBLINEND DS    0H                                                       08592
         OI    LBLINENF,X'01'                                           08593
THEEND   DS    0H                                                       08594
         L     R13,4(,R13)                                              08595
         MVC   16(4,R13),=F'0'          Return code 0     in R15        08596
* - - - - - - - - - - - - - Pass addresses of our passed areas back.    08597
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1   08598
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2  08599
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3     08600
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08601
         LM    R14,R12,12(R13)                                          08602
         BR    R14                                                      08603
         EJECT                                                          08604
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08605
*    BAL REGISTER IS R7.                                                08606
* --------------------------------------------------------- *           08607
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS             08608
*                         AND SET LABEL FLAGS, ACCORDINGLY,             08609
*                         IN THE LBLFLAG BYTE.                          08610
* --------------------------------------------------------- *           08611
*     The type of labels last seen on the input tape                    08612
*     are generally flagged by bits in the LBLFLAG byte.                08613
*     These bit settings are set by this program as                     08614
*     follows:   (These are for both IBM and ASCII labels)              08615
* --------------------------------------------------------- *           08616
*              X'01'    HDR1 HAS BEEN SEEN                              08617
*              X'02'    HDR2 HAS BEEN SEEN                              08618
*              X'04'    VOL1 HAS BEEN SEEN                              08619
*              X'08'    HDR1 IS FROM AN INITTED TAPE                    08620
*              X'10'    EOF1 HAS BEEN SEEN                              08621
*              X'20'    EOF2 HAS BEEN SEEN                              08622
*              X'40'    EOV1 HAS BEEN SEEN                              08623
*              X'80'    EOV2 HAS BEEN SEEN                              08624
* --------------------------------------------------------- *           08625
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *           08626
* -                                                       - *           08627
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *           08628
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *           08629
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *           08630
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *           08631
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *           08632
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *           08633
* --------------------------------------------------------- *           08634
*                                                           *           08635
*   Beginning of processing:                                *           08636
*                                                           *           08637
*     Check the input record (that has been copied to       *           08638
*     INAREA) for each possible type of label, and direct   *           08639
*     the processing to the appropriate routine, if a       *           08640
*     label type has been found.                            *           08641
*                                                           *           08642
*     If an input record does not fit any of these          *           08643
*     criteria, it is not considered a tape label.          *           08644
*                                                           *           08645
* --------------------------------------------------------- *           08646
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START     08647
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                    08648
         BE    CVOL1                PROCESS THE VOL1                    08649
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                    08650
         BE    CHDR1                PROCESS HDR1                        08651
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                       08652
         BE    CHDR2                PROCESS HDR2                        08653
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                      08654
         BE    CEOF1                PROCESS EOF1                        08655
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                      08656
         BE    CEOF2                PROCESS EOF2                        08657
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                      08658
         BE    CEOV1                PROCESS EOV1                        08659
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                      08660
         BE    CEOV2                PROCESS EOV2                        08661
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?           08662
         BE    CUHL                 PROCESS UHL                         08663
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?          08664
         BE    CUTL                 PROCESS UTL                         08665
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                        08666
         BE    ASC                     PROCESS ALL VOL TYPES            08667
         CLC   INAREA(3),=X'484452'   ASCII HDR?                        08668
         BE    ASC                     PROCESS ALL HDR TYPES            08669
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                        08670
         BE    ASC                     PROCESS ALL EOF TYPES            08671
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                        08672
         BE    ASC                     PROCESS ALL EOV TYPES            08673
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)    08674
         BE    ASC                     PROCESS ALL UVL TYPES            08675
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)    08676
         BE    ASC                     PROCESS ALL UHL TYPES            08677
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)   08678
         BE    ASC                     PROCESS ALL UTL TYPES            08679
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL  08680
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------            08681
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            08682
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG      08683
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW         08684
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  08685
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                   08686
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1     08687
CLRIDRCV DS    0H                                                       08688
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE         08689
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE           08690
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE            08691
* ---------------- LABEL ADDING CODE ---------------------- *           08692
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?               08693
         BZ    CVOLNPRB             NO. WE CAN GO ON.                   08694
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                  08695
         MVC   LINE(L'NOLABSL),NOLABSL     DISPLAY NO SL ON SL MSG      08696
         ST    R6,SAVER6                                                08697
         L     R6,SYSPRDCB                                              08698
         PUT   (6),LINE                                                 08699
         L     R6,SAVER6                                                08700
*        PUT   SYSPRINT,LINE        WRITE MSG                           08701
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                 08702
*        CLOSE (LABADDIN)                                               08703
         OI    LABADFLG,X'01'                                           08704
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM           08705
         OI    CLOSMFLG,X'01'                                           08706
         B     THEEND                                                   08707
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.         08708
* ---------------- LABEL ADDING CODE ---------------------- *           08709
* ---------------- LABEL DUMPING CODE --------------------- *           08710
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08711
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                08712
         ST    R7,SAVE7LDM          Save BAL register.                  08713
         LA    R4,INAREA            Point to area to be dumped.         08714
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08715
         L     R7,SAVE7LDM          Restore BAL register.               08716
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE           08717
* ---------------- LABEL DUMPING CODE --------------------- *           08718
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                      08719
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                   08720
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND            08721
*                                                                       08722
* ------ Call PRINTLBL routine to print this label.....   below         08723
         ST    R7,SAVE7BA2        Save BAL register.                    08724
         BAL   R7,PRNTLABL        Print the current label.              08725
         L     R7,SAVE7BA2                                              08726
* ------ Call PRINTLBL routine to print this label.....   above         08727
*                                                                       08728
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08729
         B     LABCHEND                                                 08730
CHDR1    DS    0H                                                       08731
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08732
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG     08733
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR      08734
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                      08735
* ---------------- LABEL DUMPING CODE --------------------- *           08736
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08737
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                08738
         ST    R7,SAVE7LDM          Save BAL register.                  08739
         LA    R4,INAREA            Point to area to be dumped.         08740
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08741
         L     R7,SAVE7LDM          Restore BAL register.               08742
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE           08743
* ---------------- LABEL DUMPING CODE --------------------- *           08744
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?             08745
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET            08746
* ---------------- LABEL DUMPING CODE --------------------- *           08747
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08748
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT     08749
         ST    R7,SAVE7LDM          Save BAL register.                  08750
         ST    R4,SAVE4LDM                                              08751
         LA    R4,LABELITI          Point to area to be dumped.         08752
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08753
         L     R4,SAVE4LDM                                              08754
         L     R7,SAVE7LDM          Restore BAL register.               08755
CHDR1NDM DS    0H                                                       08756
* ---------------- LABEL DUMPING CODE --------------------- *           08757
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE             08758
CHDR1A   DS    0H                                                       08759
*** --- >>  Security off?  -  below                                     08760
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08761
         BZ    NOSECCH1             No. Don't affect these fields.      08762
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                08763
NOSECCH1 DS    0H                                                       08764
*** --- >>  Security off?  -  above                                     08765
         TM    PARMFLG1,X'02' DO WE PRINT LABELS?                       08766
         BZ    CHDR1Z         NO. DON'T PRINT.                          08767
*                                                                       08768
* ------ Call PRINTLBL routine to print this label.....   below         08769
         ST    R7,SAVE7BA2        Save BAL register.                    08770
         BAL   R7,PRNTLABL        Print the current label.              08771
         L     R7,SAVE7BA2                                              08772
* ------ Call PRINTLBL routine to print this label.....   above         08773
*                                                                       08774
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08775
         B     LABCHEND                                                 08776
CHDR2    DS    0H                                                       08777
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08778
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG     08779
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW         08780
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  08781
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                   08782
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            08783
         BNE   CLRIDRH2                                                 08784
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     08785
CLRIDRH2 DS    0H                                                       08786
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE         08787
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2           08788
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                      08789
* ---------------- LABEL DUMPING CODE --------------------- *           08790
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08791
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                08792
         ST    R7,SAVE7LDM          Save BAL register.                  08793
         LA    R4,INAREA            Point to area to be dumped.         08794
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08795
         L     R7,SAVE7LDM          Restore BAL register.               08796
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE          08797
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE           08798
* ---------------- LABEL DUMPING CODE --------------------- *           08799
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                     08800
         BZ    CHDR2Z           NO.                                     08801
*                                                                       08802
* ------ Call PRINTLBL routine to print this label.....   below         08803
         ST    R7,SAVE7BA2        Save BAL register.                    08804
         BAL   R7,PRNTLABL        Print the current label.              08805
         L     R7,SAVE7BA2                                              08806
* ------ Call PRINTLBL routine to print this label.....   above         08807
*                                                                       08808
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08809
         B     LABCHEND                                                 08810
CEOF1    DS    0H                                                       08811
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08812
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG     08813
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                08814
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                      08815
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08816
BCTCEOF1 DS    0H                                                       08817
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         08818
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                 08819
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT        08820
         STM   R2,R3,SAVE2TO3                                           08821
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD    08822
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   08823
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                08824
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       08825
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             08826
         LM    R2,R3,SAVE2TO3                                           08827
BCTCEOFX DS    0H                                                       08828
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08829
* ---------------- LABEL DUMPING CODE --------------------- *           08830
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08831
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                08832
         ST    R7,SAVE7LDM          Save BAL register.                  08833
         LA    R4,INAREA            Point to area to be dumped.         08834
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08835
         L     R7,SAVE7LDM          Restore BAL register.               08836
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE           08837
* ---------------- LABEL DUMPING CODE --------------------- *           08838
CEOF1A   DS    0H                                                       08839
*** --- >>  Security off?  -  below                                     08840
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08841
         BZ    NOSECCF1             No. Don't affect these fields.      08842
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                08843
NOSECCF1 DS    0H                                                       08844
*** --- >>  Security off?  -  above                                     08845
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                     08846
         BZ    CEOF1Z           NO.                                     08847
*                                                                       08848
* ------ Call PRINTLBL routine to print this label.....   below         08849
         ST    R7,SAVE7BA2        Save BAL register.                    08850
         BAL   R7,PRNTLABL        Print the current label.              08851
         L     R7,SAVE7BA2                                              08852
* ------ Call PRINTLBL routine to print this label.....   above         08853
*                                                                       08854
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08855
         B     LABCHEND                                                 08856
CEOF2    DS    0H                                                       08857
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08858
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG     08859
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW         08860
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  08861
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                   08862
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            08863
         BNE   CLRIDRF2                                                 08864
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     08865
CLRIDRF2 DS    0H                                                       08866
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE         08867
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                08868
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                      08869
* ---------------- LABEL DUMPING CODE --------------------- *           08870
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08871
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                08872
         ST    R7,SAVE7LDM          Save BAL register.                  08873
         LA    R4,INAREA            Point to area to be dumped.         08874
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08875
         L     R7,SAVE7LDM          Restore BAL register.               08876
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          08877
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE           08878
* ---------------- LABEL DUMPING CODE --------------------- *           08879
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                     08880
         BZ    CEOF2Z           NO.                                     08881
*                                                                       08882
* ------ Call PRINTLBL routine to print this label.....   below         08883
         ST    R7,SAVE7BA2        Save BAL register.                    08884
         BAL   R7,PRNTLABL        Print the current label.              08885
         L     R7,SAVE7BA2                                              08886
* ------ Call PRINTLBL routine to print this label.....   above         08887
*                                                                       08888
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08889
         B     LABCHEND                                                 08890
CEOV1    DS    0H                                                       08891
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08892
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG     08893
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                08894
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        08895
         BZ    CEOVN1         NO, PROCESS ORDINARILY                    08896
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                   08897
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                           08898
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                08899
         MVI   LINE-1,C' '                                              08900
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          08901
         MVC   LINE(L'EOVCHG),EOVCHG     MOVE IN MESSAGE                08902
         ST    R6,SAVER6                                                08903
         L     R6,SYSPRDCB                                              08904
         PUT   (6),LINE                                                 08905
         L     R6,SAVER6                                                08906
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.              08907
         B     CEOVY1                                                   08908
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                      08909
CEOVY1   DS    0H                                                       08910
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08911
BCTCEOV1 DS    0H                                                       08912
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         08913
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                 08914
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT        08915
         STM   R2,R3,SAVE2TO3                                           08916
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD    08917
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   08918
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                08919
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       08920
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             08921
         LM    R2,R3,SAVE2TO3                                           08922
BCTCEOVX DS    0H                                                       08923
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08924
* ---------------- LABEL DUMPING CODE --------------------- *           08925
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08926
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                08927
         ST    R7,SAVE7LDM          Save BAL register.                  08928
         LA    R4,INAREA            Point to area to be dumped.         08929
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08930
         L     R7,SAVE7LDM          Restore BAL register.               08931
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE           08932
* ---------------- LABEL DUMPING CODE --------------------- *           08933
CEOV1A   DS    0H                                                       08934
*** --- >>  Security off?  -  below                                     08935
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08936
         BZ    NOSECCV1             No. Don't affect these fields.      08937
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                08938
NOSECCV1 DS    0H                                                       08939
*** --- >>  Security off?  -  above                                     08940
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                     08941
         BZ    CEOV1Z           NO.                                     08942
*                                                                       08943
* ------ Call PRINTLBL routine to print this label.....   below         08944
         ST    R7,SAVE7BA2        Save BAL register.                    08945
         BAL   R7,PRNTLABL        Print the current label.              08946
         L     R7,SAVE7BA2                                              08947
* ------ Call PRINTLBL routine to print this label.....   above         08948
*                                                                       08949
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08950
         B     LABCHEND                                                 08951
CEOV2    DS    0H                                                       08952
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08953
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG     08954
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW         08955
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  08956
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                   08957
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            08958
         BNE   CLRIDRV2                                                 08959
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     08960
CLRIDRV2 DS    0H                                                       08961
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE         08962
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                08963
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        08964
         BZ    CEOVN2         NO, PROCESS ORDINARILY                    08965
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                   08966
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                           08967
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                08968
         B     CEOVY2                                                   08969
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                      08970
CEOVY2   DS    0H                                                       08971
* ---------------- LABEL DUMPING CODE --------------------- *           08972
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08973
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                08974
         ST    R7,SAVE7LDM          Save BAL register.                  08975
         LA    R4,INAREA            Point to area to be dumped.         08976
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08977
         L     R7,SAVE7LDM          Restore BAL register.               08978
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                  08979
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2       08980
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE          08981
         B     CEOV2ND              AND GET OUT                         08982
CEOV2F   DS    0H                                                       08983
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          08984
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE           08985
* ---------------- LABEL DUMPING CODE --------------------- *           08986
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                     08987
         BZ    CEOV2Z           NO.                                     08988
*                                                                       08989
* ------ Call PRINTLBL routine to print this label.....   below         08990
         ST    R7,SAVE7BA2        Save BAL register.                    08991
         BAL   R7,PRNTLABL        Print the current label.              08992
         L     R7,SAVE7BA2                                              08993
* ------ Call PRINTLBL routine to print this label.....   above         08994
*                                                                       08995
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             08996
         B     LABCHEND                                                 08997
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *           08998
CUHL     DS    0H             HANDLE USER HEADER LABELS                 08999
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09000
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG     09001
*                                                                       09002
* ------ Call PRINTLBL routine to print this label.....   below         09003
         ST    R7,SAVE7BA2        Save BAL register.                    09004
         BAL   R7,PRNTLABL        Print the current label.              09005
         L     R7,SAVE7BA2                                              09006
* ------ Call PRINTLBL routine to print this label.....   above         09007
*                                                                       09008
* ---------------- LABEL DUMPING CODE --------------------- *           09009
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09010
         BZ    CUHLEN               NO. SKIP PUTTING OUT                09011
         ST    R7,SAVE7LDM          Save BAL register.                  09012
         LA    R4,INAREA            Point to area to be dumped.         09013
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09014
         L     R7,SAVE7LDM          Restore BAL register.               09015
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE           09016
* ---------------- LABEL DUMPING CODE --------------------- *           09017
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             09018
         B     LABCHEND                                                 09019
CUTL     DS    0H             HANDLE USER TRAILER LABELS                09020
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09021
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG     09022
*                                                                       09023
* ------ Call PRINTLBL routine to print this label.....   below         09024
         ST    R7,SAVE7BA2        Save BAL register.                    09025
         BAL   R7,PRNTLABL        Print the current label.              09026
         L     R7,SAVE7BA2                                              09027
* ------ Call PRINTLBL routine to print this label.....   above         09028
*                                                                       09029
* ---------------- LABEL DUMPING CODE --------------------- *           09030
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09031
         BZ    CUTLEN               NO. SKIP PUTTING OUT                09032
         ST    R7,SAVE7LDM          Save BAL register.                  09033
         LA    R4,INAREA            Point to area to be dumped.         09034
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09035
         L     R7,SAVE7LDM          Restore BAL register.               09036
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE           09037
* ---------------- LABEL DUMPING CODE --------------------- *           09038
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             09039
         B     LABCHEND                                                 09040
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *           09041
         EJECT                                                          09042
* ----------------  ASCII   Labels  ----------------------- *           09043
* --------------------------------------------------------- *           09044
*  ANSI/ISO label rules are a bit more relaxed than IBM     *           09045
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *           09046
*  UTLx are all considered labels, with a lot of latitude   *           09047
*  as to what the "x" is.  Therefore, for ASCII tape        *           09048
*  labels, we check the first 3 characters in each label    *           09049
*  category, and then further subdivide within that         *           09050
*  category if necessary.                                   *           09051
* --------------------------------------------------------- *           09052
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE     09053
*                                                                       09054
*        Common ASCII preparation routines......                        09055
*                                                                       09056
         OI    ASCIIFLG,X'01'       Say we're working in ASCII          09057
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation   09058
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label  09059
*                                   This is being done early for ASCII  09060
*                                                                       09061
* -- >  Make an EBCDIC version of this label in the INASCI field.       09062
         ST    R5,R5HXPRT              Save register.                   09063
         L     R5,SAVTRTCS             Point to translation table CSECT 09064
         USING TRTDSECT,R5                                              09065
         MVC   INASCI(80),INAREA       Move LABEL area to workarea      09066
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print    09067
         L     R5,R5HXPRT              Restore R5                       09068
         DROP  R5                                                       09069
* -- >                                                                  09070
* ----------------------------------------------------- *               09071
* --   Again pick which type of ASCII label we have     *               09072
* ----------------------------------------------------- *               09073
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                        09074
         BE    ASCVOL                  PROCESS ALL VOL TYPES            09075
         CLC   INAREA(3),=X'484452'   ASCII HDR?                        09076
         BE    ASCHDR                  PROCESS ALL HDR TYPES            09077
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                        09078
         BE    ASCEOF                  PROCESS ALL EOF TYPES            09079
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                        09080
         BE    ASCEOV                  PROCESS ALL EOV TYPES            09081
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)    09082
         BE    ASCUVL                  PROCESS ALL UVL TYPES            09083
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)    09084
         BE    ASCUHL                  PROCESS ALL UHL TYPES            09085
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)   09086
         BE    ASCUTL                  PROCESS ALL UTL TYPES            09087
* ----------------------------------                                    09088
ASCVOL   DS    0H                                                       09089
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09090
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG     09091
* ---------------- LABEL ADDING CODE ---------------------- *           09092
*       Forbid adding new labels to an already AL tape.     *           09093
* --------------------------------------------------------- *           09094
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?               09095
         BZ    ASCVOLNS             NO. WE CAN GO ON.                   09096
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                  09097
         MVC   LINE(L'NOLABSL),NOLABSL    DISPLAY NO SL ON SL MSG       09098
         ST    R6,SAVER6                                                09099
         L     R6,SYSPRDCB                                              09100
         PUT   (6),LINE                                                 09101
         L     R6,SAVER6                                                09102
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                 09103
*        CLOSE (LABADDIN)                                               09104
         OI    LABADFLG,X'01'                                           09105
         OI    CLOSMFLG,X'01'                                           09106
         B     THEEND                                                   09107
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.         09108
* ---------------- LABEL ADDING CODE ---------------------- *           09109
* ---------------- LABEL DUMPING CODE ------ below -------- *           09110
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09111
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                09112
         ST    R7,SAVE7LDM          Save BAL register.                  09113
         LA    R4,INAREA            Point to area to be dumped.         09114
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09115
         L     R7,SAVE7LDM          Restore BAL register.               09116
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE           09117
* ---------------- LABEL DUMPING CODE ------ above -------- *           09118
* --------------------------------------------------------- *           09119
*  At this point, we specifically check for a VOL1 label.   *           09120
* --------------------------------------------------------- *           09121
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?            09122
         BNE   ASCVOLLB             No. Just mark as an ASCII label.    09123
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                     09124
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there      09125
         MVC   INVOLUME(6),INASCI+4    Send to message too              09126
*** --- >>  Security off?  -  below                                     09127
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 09128
         BZ    NOSECF01             No. Don't affect these fields.      09129
         MVI   INAREA+10,X'20'      Move in ASCII blank.                09130
NOSECF01 DS    0H                                                       09131
*** --- >>  Security off?  -  above                                     09132
* --- >>>    VOL1  Label Printing   -----   below                       09133
         TM    PARMFLG2,X'02'          Printing Volume Labels?          09134
         BZ    ASCVOLLB                No. Skip this code.              09135
*                                                                       09136
* ------ Call PRINTLBL routine to print this label.....   below         09137
         ST    R7,SAVE7BA2        Save BAL register.                    09138
         BAL   R7,PRNTLABL        Print the current label.              09139
         L     R7,SAVE7BA2                                              09140
* ------ Call PRINTLBL routine to print this label.....   above         09141
*                                                                       09142
* --- >>>    VOL1  Label Printing   -----   above                       09143
ASCVOLLB DS    0H                                                       09144
ASCVOLE  DS    0H                                                       09145
         B     LABCHEND                                                 09146
*                                                                       09147
ASCHDR   DS    0H                                                       09148
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?          09149
         BE    ASCHDR1                                                  09150
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?          09151
         BE    ASCHDR2                                                  09152
         B     ASCHDRO                                                  09153
ASCHDR1  DS    0H                   ASCII Header 1                      09154
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            09155
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.       09156
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR      09157
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                     09158
* ---------------- LABEL DUMPING CODE --------------------- *           09159
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09160
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                09161
         ST    R7,SAVE7LDM          Save BAL register.                  09162
         LA    R4,INAREA            Point to area to be dumped.         09163
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09164
         L     R7,SAVE7LDM          Restore BAL register.               09165
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE           09166
* ---------------- LABEL DUMPING CODE --------------------- *           09167
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?            09168
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET    09169
* ---------------- LABEL DUMPING CODE --------------------- *           09170
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09171
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT     09172
         ST    R7,SAVE7LDM          Save BAL register.                  09173
         ST    R4,SAVE4LDM                                              09174
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII. 09175
         LA    R4,LABELITI          Point to area to be dumped.         09176
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09177
         L     R4,SAVE4LDM                                              09178
         L     R7,SAVE7LDM          Restore BAL register.               09179
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                09180
CASC1NDM DS    0H                                                       09181
* ---------------- LABEL DUMPING CODE --------------------- *           09182
         OI    LBLFLAG,X'08'        Show initted header label found.    09183
CASC1A   DS    0H                                                       09184
*** --- >>  Security off?  -  below                                     09185
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 09186
         BZ    NOSECAH1             No. Don't affect these fields.      09187
         MVI   INAREA+53,X'20'      Move in ASCII blank.                09188
NOSECAH1 DS    0H                                                       09189
*** --- >>  Security off?  -  above                                     09190
* --- >      Print  Labels     - -   below                              09191
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?              09192
         BZ    ASCHDR1Z                NO. DON'T PRINT.                 09193
*                                                                       09194
* ------ Call PRINTLBL routine to print this label.....   below         09195
         ST    R7,SAVE7BA2        Save BAL register.                    09196
         BAL   R7,PRNTLABL        Print the current label.              09197
         L     R7,SAVE7BA2                                              09198
* ------ Call PRINTLBL routine to print this label.....   above         09199
*                                                                       09200
ASCHDR1Z DS    0H                                                       09201
* --- >      Print  Labels     - -   above                              09202
         B     LABCHEND                                                 09203
ASCHDR2  DS    0H                   ASCII Header 2                      09204
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            09205
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.   09206
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2     09207
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                09208
* ---------------- LABEL DUMPING CODE --------------------- *           09209
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09210
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                09211
         ST    R7,SAVE7LDM          Save BAL register.                  09212
         LA    R4,INAREA            Point to area to be dumped.         09213
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09214
         L     R7,SAVE7LDM          Restore BAL register.               09215
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE          09216
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE           09217
* ---------------- LABEL DUMPING CODE --------------------- *           09218
ASCHDR2A DS    0H                                                       09219
* --- >      Print  Labels     - -   below                              09220
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?              09221
         BZ    ASCHDR2Z                NO. DON'T PRINT.                 09222
*                                                                       09223
* ------ Call PRINTLBL routine to print this label.....   below         09224
         ST    R7,SAVE7BA2        Save BAL register.                    09225
         BAL   R7,PRNTLABL        Print the current label.              09226
         L     R7,SAVE7BA2                                              09227
* ------ Call PRINTLBL routine to print this label.....   above         09228
*                                                                       09229
ASCHDR2Z DS    0H                                                       09230
* --- >      Print  Labels     - -   above                              09231
         B     LABCHEND                                                 09232
ASCHDRO  DS    0H                    ASCII Other header labels          09233
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09234
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED. 09235
*                                                                       09236
* ------ Call PRINTLBL routine to print this label.....   below         09237
         ST    R7,SAVE7BA2        Save BAL register.                    09238
         BAL   R7,PRNTLABL        Print the current label.              09239
         L     R7,SAVE7BA2                                              09240
* ------ Call PRINTLBL routine to print this label.....   above         09241
*                                                                       09242
* ---------------- LABEL DUMPING CODE --------------------- *           09243
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09244
         BZ    AHDROND              NO. SKIP PUTTING OUT                09245
         ST    R7,SAVE7LDM          Save BAL register.                  09246
         LA    R4,INAREA            Point to area to be dumped.         09247
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09248
         L     R7,SAVE7LDM          Restore BAL register.               09249
AHDROND  DS    0H                   END OF LABEL DUMPING CODE           09250
* ---------------- LABEL DUMPING CODE --------------------- *           09251
ASCHDRE  DS    0H                                                       09252
         B     LABCHEND                                                 09253
ASCEOF   DS    0H                                                       09254
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?         09255
         BE    ASCEOF1                                                  09256
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?         09257
         BE    ASCEOF2                                                  09258
         B     ASCEOFO                                                  09259
ASCEOF1  DS    0H                    ASCII EOF 1                        09260
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09261
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED. 09262
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1         09263
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                    09264
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           09265
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         09266
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.       09267
         TM    PARMFLG1,X'01'          Is block count correction on?    09268
         BZ    NOTASCEF                No-don't plug in corrected value 09269
ASCBLKF1 DS    0H                                                       09270
         ST    R5,R5HXPRT              Save register.                   09271
         L     R5,SAVTRTCS             Point to translation table CSECT 09272
         USING TRTDSECT,R5                                              09273
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  09274
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         09275
         L     R5,R5HXPRT              Restore R5                       09276
         DROP  R5                                                       09277
         MVC   INAREA+54(6),BLKCNASC+4                                  09278
NOTASCEF DS    0H                                                       09279
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           09280
* ---------------- LABEL DUMPING CODE --------------------- *           09281
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09282
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                09283
         ST    R7,SAVE7LDM          Save BAL register.                  09284
         LA    R4,INAREA            Point to area to be dumped.         09285
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09286
         L     R7,SAVE7LDM          Restore BAL register.               09287
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE           09288
* ---------------- LABEL DUMPING CODE --------------------- *           09289
*** --- >>  Security off?  -  below                                     09290
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 09291
         BZ    NOSECAF1             No. Don't affect these fields.      09292
         MVI   INAREA+53,X'20'      Move in ASCII blank.                09293
NOSECAF1 DS    0H                                                       09294
*** --- >>  Security off?  -  above                                     09295
ASCEOF1A DS    0H                                                       09296
* --- >      Print  Labels     - -   below                              09297
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?              09298
         BZ    ASCEOF1Z                NO. DON'T PRINT.                 09299
*                                                                       09300
* ------ Call PRINTLBL routine to print this label.....   below         09301
         ST    R7,SAVE7BA2        Save BAL register.                    09302
         BAL   R7,PRNTLABL        Print the current label.              09303
         L     R7,SAVE7BA2                                              09304
* ------ Call PRINTLBL routine to print this label.....   above         09305
*                                                                       09306
ASCEOF1Z DS    0H                                                       09307
* --- >      Print  Labels     - -   above                              09308
         B     LABCHEND                                                 09309
ASCEOF2  DS    0H                   ASCII EOF 2                         09310
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            09311
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG      09312
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2          09313
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                09314
* ---------------- LABEL DUMPING CODE --------------------- *           09315
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09316
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                09317
         ST    R7,SAVE7LDM          Save BAL register.                  09318
         LA    R4,INAREA            Point to area to be dumped.         09319
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09320
         L     R7,SAVE7LDM          Restore BAL register.               09321
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          09322
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE           09323
* ---------------- LABEL DUMPING CODE --------------------- *           09324
ASCEOF2A DS    0H                                                       09325
* --- >      Print  Labels     - -   below                              09326
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?              09327
         BZ    ASCEOF2Z                NO. DON'T PRINT.                 09328
*                                                                       09329
* ------ Call PRINTLBL routine to print this label.....   below         09330
         ST    R7,SAVE7BA2        Save BAL register.                    09331
         BAL   R7,PRNTLABL        Print the current label.              09332
         L     R7,SAVE7BA2                                              09333
* ------ Call PRINTLBL routine to print this label.....   above         09334
*                                                                       09335
ASCEOF2Z DS    0H                                                       09336
* --- >      Print  Labels     - -   above                              09337
         B     LABCHEND                                                 09338
ASCEOFO  DS    0H                    ASCII Other EOF labels             09339
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09340
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED. 09341
*                                                                       09342
* ------ Call PRINTLBL routine to print this label.....   below         09343
         ST    R7,SAVE7BA2        Save BAL register.                    09344
         BAL   R7,PRNTLABL        Print the current label.              09345
         L     R7,SAVE7BA2                                              09346
* ------ Call PRINTLBL routine to print this label.....   above         09347
*                                                                       09348
* ---------------- LABEL DUMPING CODE --------------------- *           09349
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09350
         BZ    AEOFOND              NO. SKIP PUTTING OUT                09351
         ST    R7,SAVE7LDM          Save BAL register.                  09352
         LA    R4,INAREA            Point to area to be dumped.         09353
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09354
         L     R7,SAVE7LDM          Restore BAL register.               09355
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE           09356
* ---------------- LABEL DUMPING CODE --------------------- *           09357
ASCEOFE  DS    0H                                                       09358
         B     LABCHEND                                                 09359
ASCEOV   DS    0H                                                       09360
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?         09361
         BE    ASCEOV1                                                  09362
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?         09363
         BE    ASCEOV2                                                  09364
         B     ASCEOVO                                                  09365
ASCEOV1  DS    0H                    ASCII EOV 1                        09366
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09367
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG     09368
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                09369
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        09370
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                    09371
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                   09372
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                        09373
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                  09374
         MVI   LINE-1,C' '                                              09375
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          09376
         MVC   LINE(L'EOVCHG),EOVCHG   MOVE IN MESSAGE                  09377
         ST    R6,SAVER6                                                09378
         L     R6,SYSPRDCB                                              09379
         PUT   (6),LINE                                                 09380
         L     R6,SAVER6                                                09381
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.              09382
         B     ASCEOVY1                                                 09383
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                      09384
ASCEOVY1 DS    0H                                                       09385
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           09386
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         09387
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.       09388
         TM    PARMFLG1,X'01'          Is block count correction on?    09389
         BZ    NOTASCEV                No-don't plug in corrected value 09390
ASCBLKV1 DS    0H                                                       09391
         ST    R5,R5HXPRT              Save register.                   09392
         L     R5,SAVTRTCS             Point to translation table CSECT 09393
         USING TRTDSECT,R5                                              09394
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  09395
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         09396
         L     R5,R5HXPRT              Restore R5                       09397
         DROP  R5                                                       09398
         MVC   INAREA+54(6),BLKCNASC+4                                  09399
NOTASCEV DS    0H                                                       09400
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           09401
* ---------------- LABEL DUMPING CODE --------------------- *           09402
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09403
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                09404
         ST    R7,SAVE7LDM          Save BAL register.                  09405
         LA    R4,INAREA            Point to area to be dumped.         09406
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09407
         L     R7,SAVE7LDM          Restore BAL register.               09408
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE           09409
* ---------------- LABEL DUMPING CODE --------------------- *           09410
*** --- >>  Security off?  -  below                                     09411
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 09412
         BZ    NOSECAV1             No. Don't affect these fields.      09413
         MVI   INAREA+53,X'20'      Move in ASCII blank.                09414
NOSECAV1 DS    0H                                                       09415
*** --- >>  Security off?  -  above                                     09416
* --- >      Print  Labels     - -   below                              09417
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?              09418
         BZ    ASCEOV1Z                NO. DON'T PRINT.                 09419
*                                                                       09420
* ------ Call PRINTLBL routine to print this label.....   below         09421
         ST    R7,SAVE7BA2        Save BAL register.                    09422
         BAL   R7,PRNTLABL        Print the current label.              09423
         L     R7,SAVE7BA2                                              09424
* ------ Call PRINTLBL routine to print this label.....   above         09425
*                                                                       09426
ASCEOV1Z DS    0H                                                       09427
* --- >      Print  Labels     - -   above                              09428
         B     LABCHEND                                                 09429
ASCEOV2  DS    0H                    ASCII EOV 2                        09430
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09431
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.   09432
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2         09433
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                 09434
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY             09435
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN            09436
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                        09437
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                 09438
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE         09439
         B     ASCEOVY2                                                 09440
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.               09441
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE         09442
ASCEOVY2 DS    0H                                                       09443
* ---------------- LABEL DUMPING CODE --------------------- *           09444
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09445
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                09446
         ST    R7,SAVE7LDM          Save BAL register.                  09447
         LA    R4,INAREA            Point to area to be dumped.         09448
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09449
         L     R7,SAVE7LDM          Restore BAL register.               09450
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE          09451
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE           09452
* ---------------- LABEL DUMPING CODE --------------------- *           09453
ASCEOV2N DS    0H                                                       09454
* --- >      Print  Labels     - -   below                              09455
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?              09456
         BZ    ASCEOV2Z                NO. DON'T PRINT.                 09457
*                                                                       09458
* ------ Call PRINTLBL routine to print this label.....   below         09459
         ST    R7,SAVE7BA2        Save BAL register.                    09460
         BAL   R7,PRNTLABL        Print the current label.              09461
         L     R7,SAVE7BA2                                              09462
* ------ Call PRINTLBL routine to print this label.....   above         09463
*                                                                       09464
ASCEOV2Z DS    0H                                                       09465
* --- >      Print  Labels     - -   above                              09466
         B     LABCHEND                                                 09467
ASCEOVO  DS    0H                    ASCII Other EOV labels             09468
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09469
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED. 09470
*                                                                       09471
* ------ Call PRINTLBL routine to print this label.....   below         09472
         ST    R7,SAVE7BA2        Save BAL register.                    09473
         BAL   R7,PRNTLABL        Print the current label.              09474
         L     R7,SAVE7BA2                                              09475
* ------ Call PRINTLBL routine to print this label.....   above         09476
*                                                                       09477
* ---------------- LABEL DUMPING CODE --------------------- *           09478
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09479
         BZ    AEOVOND              NO. SKIP PUTTING OUT                09480
         ST    R7,SAVE7LDM          Save BAL register.                  09481
         LA    R4,INAREA            Point to area to be dumped.         09482
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09483
         L     R7,SAVE7LDM          Restore BAL register.               09484
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE           09485
* ---------------- LABEL DUMPING CODE --------------------- *           09486
ASCEOVE  DS    0H                                                       09487
         B     LABCHEND                                                 09488
ASCUVL   DS    0H                                                       09489
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09490
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG     09491
*                                                                       09492
* ------ Call PRINTLBL routine to print this label.....   below         09493
         ST    R7,SAVE7BA2        Save BAL register.                    09494
         BAL   R7,PRNTLABL        Print the current label.              09495
         L     R7,SAVE7BA2                                              09496
* ------ Call PRINTLBL routine to print this label.....   above         09497
*                                                                       09498
* ---------------- LABEL DUMPING CODE --------------------- *           09499
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09500
         BZ    AUVLEND              NO. SKIP PUTTING OUT                09501
         ST    R7,SAVE7LDM          Save BAL register.                  09502
         LA    R4,INAREA            Point to area to be dumped.         09503
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09504
         L     R7,SAVE7LDM          Restore BAL register.               09505
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE           09506
* ---------------- LABEL DUMPING CODE --------------------- *           09507
ASCUVLE  DS    0H                                                       09508
         B     LABCHEND                                                 09509
ASCUHL   DS    0H                                                       09510
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09511
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG     09512
*                                                                       09513
* ------ Call PRINTLBL routine to print this label.....   below         09514
         ST    R7,SAVE7BA2        Save BAL register.                    09515
         BAL   R7,PRNTLABL        Print the current label.              09516
         L     R7,SAVE7BA2                                              09517
* ------ Call PRINTLBL routine to print this label.....   above         09518
*                                                                       09519
* ---------------- LABEL DUMPING CODE --------------------- *           09520
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09521
         BZ    AUHLEND              NO. SKIP PUTTING OUT                09522
         ST    R7,SAVE7LDM          Save BAL register.                  09523
         LA    R4,INAREA            Point to area to be dumped.         09524
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09525
         L     R7,SAVE7LDM          Restore BAL register.               09526
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE           09527
* ---------------- LABEL DUMPING CODE --------------------- *           09528
ASCUHLE  DS    0H                                                       09529
         B     LABCHEND                                                 09530
ASCUTL   DS    0H                                                       09531
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           09532
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG     09533
*                                                                       09534
* ------ Call PRINTLBL routine to print this label.....   below         09535
         ST    R7,SAVE7BA2        Save BAL register.                    09536
         BAL   R7,PRNTLABL        Print the current label.              09537
         L     R7,SAVE7BA2                                              09538
* ------ Call PRINTLBL routine to print this label.....   above         09539
*                                                                       09540
* ---------------- LABEL DUMPING CODE --------------------- *           09541
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              09542
         BZ    AUTLEND              NO. SKIP PUTTING OUT                09543
         ST    R7,SAVE7LDM          Save BAL register.                  09544
         LA    R4,INAREA            Point to area to be dumped.         09545
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 09546
         L     R7,SAVE7LDM          Restore BAL register.               09547
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE           09548
* ---------------- LABEL DUMPING CODE --------------------- *           09549
ASCUTLE  DS    0H                                                       09550
         B     LABCHEND                                                 09551
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG              09552
LABCHEND DS    0H                                                       09553
         BR    R7                                                       09554
* --------------------------------------------------------- *           09555
*    BAL REGISTER IS R7.                                                09556
* --------------------------------------------------------- *           09557
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.           09558
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76             09559
* --------------------------------------------------------- *           09560
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT         09561
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       09562
         BE    MOVEHI09                                                 09563
         MVC   0(4,R3),0(R2)                                            09564
         B     MOVEHIEN                                                 09565
         LA    R2,1(,R2)                                                09566
         LA    R3,1(,R3)                                                09567
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       09568
         BE    MOVEHI08                                                 09569
         MVC   0(3,R3),0(R2)                                            09570
         B     MOVEHIEN                                                 09571
         LA    R2,1(,R2)                                                09572
         LA    R3,1(,R3)                                                09573
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       09574
         BE    MOVEHI07                                                 09575
         MVC   0(2,R3),0(R2)                                            09576
         B     MOVEHIEN                                                 09577
         LA    R2,1(,R2)                                                09578
         LA    R3,1(,R3)                                                09579
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       09580
         BE    MOVEHIEN                                                 09581
         MVC   0(1,R3),0(R2)                                            09582
MOVEHIEN BR    R7                                                       09583
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09584
*    BAL REGISTER IS R7.                                                09585
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09586
*              Upon entry, R4 points to the 80-byte record              09587
*              to be dumped into the LABLDUMP DD.                       09588
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09589
DUMLABRC DS    0H                                                       09590
         TM    PARMFLG2,X'10'       Are we dumping labels?              09591
         BZ    DUMLABRN             No. Skip putting out.               09592
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.        09593
         MVC   LLINE(80),0(R4)      Move in record info to line.        09594
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            09595
         BZ    NOASCIID             No. Don't translate label bytes.    09596
         MVI   LLINE,X'20'                  Clear to ASCII blanks       09597
         MVC   LLINE+1(L'LLINE-1),LLINE                                 09598
         MVC   LLINE(80),0(R4)      Move in record info to line.        09599
         ST    R5,SAVE5LDM          Save register.                      09600
         L     R5,SAVTRTCS          Point to translation table CSECT    09601
         USING TRTDSECT,R5          Map it.                             09602
         TM    ATRNLFLG,X'01'       Is this record to be translated?    09603
         BZ    ANOTRANS             No. Dump it as is.                  09604
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII  09605
ANOTRANS DS    0H                                                       09606
         L     R5,SAVE5LDM          Restore register.                   09607
         DROP  R5                                                       09608
NOASCIID DS    0H                                                       09609
         ST    R6,SAVER6            Prepare to write record. Save reg.  09610
         L     R6,LABLDDCB          Point to LABLDUMP DCB.              09611
         PUT   (6),LLINE                                                09612
         L     R6,SAVER6            Restore register.                   09613
*        PUT   LABLDUMP,LLINE       Write out label info.               09614
DUMLABRN DS    0H                                                       09615
         BR    R7                                                       09616
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09617
*    BAL REGISTER IS R4.                                                09618
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09619
HEX      DS    0H                                                       09620
         MVC   1(1,R15),0(R1)        Move byte                          09621
         UNPK  0(3,R15),1(2,R15)     Unpack                             09622
         TR    0(2,R15),HEXTAB-240                                      09623
         LA    R15,2(,R15)           Increment output pointer           09624
         LA    R1,1(,R1)             Increment input pointer            09625
         BCT   R0,HEX                Decrement length, then loop        09626
         MVI   0(R15),C' '           Blank the trailing byte            09627
         BR    R4                    Return to caller                   09628
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    09629
         SPACE                                                          09630
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09631
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09632
*    BAL REGISTER IS R7.                                                09633
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09634
PRNTLABL DS    0H                                                       09635
*                                                                       09636
* ------ Call PRINTLBL routine to print this label.....   below         09637
         L     R15,PRTLBENT       Get entry point of called program     09638
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                      09639
         LA    R1,PARMFLGS        Point R1 to parm flags.               09640
         L     R3,=A(INAREA)      Point R3 to address of input area.    09641
         BALR  R14,R15                 Do CALL.                         09642
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.    09643
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA       09644
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   09645
* ------ Call PRINTLBL routine to print this label.....   above         09646
*                                                                       09647
         BR    R7                                                       09648
* --------------------------------------------------------- *           09649
* ---        C O N S T A N T S                          --- *           09650
* --------------------------------------------------------- *           09651
*    ------------------------ >   Constants for Date and Time - below   09652
SAVE1402 DS    6F                 Extra fullword for safety             09653
TIMED    DS    CL7                                                      09654
DATED    DS    CL9                                                      09655
DATETIME DS    4F                                                       09656
         ORG   DATETIME                                                 09657
TIME     DS    CL4                                                      09658
         DS    CL4                                                      09659
DATE     DS    CL5                                                      09660
         DS    CL3                                                      09661
HEADDLIT DS    0CL31              Literal for headings - date and time  09662
         DC    CL6'Today:'                                              09663
         DC    CL2' '                                                   09664
HEADDATE DC    CL23' '                                                  09665
LEVELLIT DS    0CL21              Level number display for headings     09666
         DC    CL6'Level '                                              09667
LEVELL   DC    CL4'&LLEV'                                               09668
         DC    CL2' ('                                                  09669
LEVDATE  DC    CL8' '             Assembly date for this program        09670
         DC    CL1')'                                                   09671
*    ------------------------ >   Constants for Date and Time - above   09672
         LTORG                                                          09673
FF       EQU   X'FF'                                                    09674
LABELITH DC    CL80'----ENDOFLABELHEADER '                              09675
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           09676
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              09677
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           09678
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR-09679
               AM              '                                        09680
EOVCHG   DS    0CL64                                                    09681
         DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '            09682
         DC    C'EOV2EOF PARM OR OPTION'                                09683
NOLABSL  DS    0CL96                                                    09684
         DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS ' 09685
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.  '         09686
         DC    C'0'                                                     09687
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                   09688
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1             09689
* --------------------------------------------------------- *           09690
         DC    C' '                                                     09691
LINE     DC    CL133' '                                                 09692
* ---------------------  Register Save Areas  ---------------->>>       09693
SYSPRINV DC    V(SYSPRINT)                                              09694
LABLDUMV DC    V(LABLDUMP)                                              09695
LABADDIV DC    V(LABADDIN)                                              09696
SAVTRTCS DC    F'0'                                                     09697
PRTLBENT DC    F'0'                                                     09698
PARMSAVE DC    F'0'                                                     09699
USERSAVE DC    F'0'                                                     09700
INARSAVE DC    F'0'                                                     09701
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro    09702
HEXSAVE  DS    3F                    Register save for HEX macro        09703
SAVE2TO3 DC    2F'0'                                                    09704
SAVER6   DC    F'0'                                                     09705
SAVE3REG DC    F'0'                                                     09706
SAVE7BA1 DC    F'0'                                                     09707
SAVE7BA2 DC    F'0'                                                     09708
SAVE7REG DC    F'0'                                                     09709
SAVE7BAL DC    F'0'                                                     09710
SAVE4LDM DC    F'0'                                                     09711
SAVE5LDM DC    F'0'                                                     09712
R5HXPRT  DC    F'0'                                                     09713
SAVE7LDM DC    F'0'                                                     09714
SAVE7RG1 DC    F'0'                                                     09715
SAVE7RG2 DC    F'0'                                                     09716
SAVE7RG3 DC    F'0'                                                     09717
SAVE7RG4 DC    F'0'                                                     09718
SAVE7RG5 DC    F'0'                                                     09719
SAVE13LC DC    3F'0'                                                    09720
* ---------- *           Save V(CON)s to DCBs                           09721
SYSPRDCB DC    F'0'                                                     09722
LABLDDCB DC    F'0'                                                     09723
LABADDCB DC    F'0'                                                     09724
* ---------- *                                                          09725
         DC    C' '          BLANK FOR CLEARING AREA                    09726
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                 09727
INASCI   DC    CL80' '       Read labels from here.                     09728
INAREA   DC    CL80' '       Read labels from here.                     09729
         DC    CL40' '       Padding for possible overflow.             09730
* ---------- *                                                          09731
**** ----------------------------------->>>>  Passed area, below        09732
* --------------------------------------------------------- *           09733
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS          09734
PARMFLG1 DC    X'00'                                                    09735
PARMFLG2 DC    X'00'                                                    09736
PARMFLG3 DC    X'00'                                                    09737
PARMFLG4 DC    X'00'                                                    09738
PARMFLG5 DC    X'00'                                                    09739
PARMFLG6 DC    X'00'                                                    09740
PARMFLG7 DC    X'00'                                                    09741
PARMFLG8 DC    X'00'                                                    09742
PARMFLG9 DC    X'00'                                                    09743
PARMFLGA DC    X'00'                                                    09744
PARMFLLN EQU   *-PARMFLGS                                               09745
PARMCOPY DS    XL10           Copy of options before correction         09746
* --------------------------------------------------------- *           09747
**** ----- LABELCHK -------------------->>>>  Passed area, below        09748
*                                                                       09749
LCHKPASS DS    0H                                                       09750
*                                                                       09751
INAREAX  DC    CL80' '        Read labels into here.                    09752
         DC    CL10' '        Padding for possible overflow.            09753
* --------------------------------------------------------- *           09754
*                                                                       09755
*                                                                       09756
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL      09757
*              X'00'          DATA IS NOT A LABEL                       09758
*              X'01'          DATA IS A LABEL                           09759
*              X'02'          DATA IS AN ASCII LABEL                    09760
*                                                                       09761
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST              09762
*              X'01'          BECAUSE OF LABLDUMP DD MISSING            09763
*              X'02'          BECAUSE OF SYSIN    DD MISSING            09764
*              X'04'          BECAUSE OF LABADDIN DD MISSING            09765
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               09766
*              X'01'          LABLDUMP DD IS OPEN                       09767
*              X'02'          SYSIN    DD IS OPEN                       09768
*              X'04'          LABADDIN DD IS OPEN                       09769
L80FLAG  DC    X'00'                                                    09770
*              X'01'          LAST DATA WAS 80 BYTE RECORD              09771
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN   09772
*              X'01'          HDR1 HAS BEEN SEEN                        09773
*              X'02'          HDR2 HAS BEEN SEEN                        09774
*              X'04'          VOL1 HAS BEEN SEEN                        09775
*              X'08'          HDR1 IS FROM AN INITTED TAPE              09776
*              X'10'          EOF1 HAS BEEN SEEN                        09777
*              X'20'          EOF2 HAS BEEN SEEN                        09778
*              X'40'          EOV1 HAS BEEN SEEN                        09779
*              X'80'          EOV2 HAS BEEN SEEN                        09780
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                   09781
EXASCFLG DC    X'00'          External Label is ASCII if X'01'          09782
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK  09783
LABADFLG DC    X'00'          If X'01' then close LABADDIN file         09784
CLOSMFLG DC    X'00'          If X'01' then close all open files        09785
* --------------------------                                            09786
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP    09787
*              X'01'          WE ARE IN A HDR GROUP                     09788
*              X'02'          WE ARE IN A EOF GROUP                     09789
*              X'04'          WE ARE IN A EOV GROUP                     09790
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND   09791
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL   09792
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES      09793
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII    09794
* ---------- *                                                          09795
* --------------------------------------------------------- *           09796
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE       09797
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL          09798
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME          09799
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL          09800
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE            09801
VOLCHG   DC    C'      '                                                09802
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS       09803
VOLASC   DC    C'      '     ASCII VOLUME                               09804
LCHKPASE EQU   *-LCHKPASS                                               09805
**** ----- LABELCHK -------------------->>>>  Passed area, above        09806
** ---------------------------------------------------------------- **  09807
TRTDSECT DSECT                 Displacements must match TRTCSECT.       09808
TRTBL0   DS    256X                                                     09809
TRTBL1   DS    256X                                                     09810
TRTBL2   DS    256X                                                     09811
TRTE2A   DS    256X                                                     09812
TRTA2E   DS    256X                                                     09813
TRTASPRT DS    256X                                                     09814
** ---------------------------------------------------------------- **  09815
         END                                                            09816
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 03/13/05              09817
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'             09818
         GBLC  &LLEV                                                    09819
&LLEV    SETC  '1.1 '                                                   09820
         YREGS                                                          09821
         ENTRY PRINTLBL                                                 09822
PRINTLBL CSECT                                                          09823
         USING *,R15                                                    09824
         B     EYECATCH                                                 09825
         DC    C'--- '            MAKE EYECATCHER VISIBLE               09826
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'        09827
         DC    C' - '                                                   09828
         DC    C'LEVEL '                                                09829
SYSLEV   DC    C'&LLEV'                                                 09830
         DC    C' - '                                                   09831
SYSDAT   DC    C'&SYSDATE'                                              09832
         DC    C'  ',C'&SYSTIME ',C'--- '                               09833
         DC    C'Copyright (c) 2003-2012 by Sam Golob '                 09834
         DC    C'--- '              MAKE EYECATCHER VISIBLE             09835
SAVEAREA DC    18F'0'                                                   09836
EYECATCH DS    0D                   ENSURE ALIGNMENT                    09837
         SAVE  (14,12)                                                  09838
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM    09839
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  09840
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         09841
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        09842
         LR    R13,R1               NEW SAVE AREA ADDRESS               09843
         DROP  R15                                                      09844
* -----                             SET UP BASE REGISTERS               09845
         USING PRINTLBL,R12,R11,R10,R9                                  09846
         LR    R12,R15                                                  09847
         LA    R11,4095(,R12)                                           09848
         LA    R11,1(,R11)                                              09849
         LA    R10,4095(,R11)                                           09850
         LA    R10,1(,R10)                                              09851
         LA    R9,4095(,R10)                                            09852
         LA    R9,1(,R9)                                                09853
         LR    R1,R5                RESTORE REGISTER 1 INPUT            09854
* ----------------------------------------------------------------- *   09855
         ST    R1,PARMSAVE          Address of parm flags in caller     09856
         ST    R3,INARSAVE          Address of input area in caller     09857
* ----------------------------------------------------------------- *   09858
INITCONS DS    0H                    Initialize necessary quantities.   09859
         MVI   LINE-1,X'40'          Make sure the print line is blank. 09860
         MVC   LINE,LINE-1                                              09861
         L     R0,SYSPRINV           SYSPRINT DCB address in caller     09862
         ST    R0,SYSPRDCB             store for the program's use      09863
         L     R0,LABLDUMV           LABLDUMP DCB address in caller     09864
         ST    R0,LABLDDCB             store for the program's use      09865
         L     R0,LABADDIV           LABADDIN DCB address in caller     09866
         ST    R0,LABADDCB             store for the program's use      09867
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer   09868
         ST    R0,SAVTRTCS             store it for later use           09869
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.     09870
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.  09871
* ----------------------------------------------------------------- *   09872
WHATLBL  DS    0H                                                       09873
         CLC   EXTLBLIN(4),=C'VOL1'                                     09874
         BE    WHATLBLE                                                 09875
         CLC   EXTLBLIN(4),=C'HDR1'                                     09876
         BE    WHATLBLE                                                 09877
         CLC   EXTLBLIN(4),=C'EOF1'                                     09878
         BE    WHATLBLE                                                 09879
         CLC   EXTLBLIN(4),=C'EOV1'                                     09880
         BE    WHATLBLE                                                 09881
         CLC   EXTLBLIN(4),=C'HDR2'                                     09882
         BE    WHATLBLE                                                 09883
         CLC   EXTLBLIN(4),=C'EOF2'                                     09884
         BE    WHATLBLE                                                 09885
         CLC   EXTLBLIN(4),=C'EOV2'                                     09886
         BE    WHATLBLE                                                 09887
         CLC   EXTLBLIN(3),=C'UHL'                                      09888
         BE    WHATLBLE                                                 09889
         CLC   EXTLBLIN(3),=C'UTL'                                      09890
         BE    WHATLBLE                                                 09891
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                   09892
         BE    WHATLBLA                                                 09893
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                   09894
         BE    WHATLBLA                                                 09895
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                   09896
         BE    WHATLBLA                                                 09897
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                   09898
         BE    WHATLBLA                                                 09899
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                   09900
         BE    WHATLBLA                                                 09901
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                   09902
         BE    WHATLBLA                                                 09903
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                   09904
         BE    WHATLBLA                                                 09905
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                   09906
         BE    WHATLBLA                                                 09907
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                   09908
         BE    WHATLBLA                                                 09909
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                   09910
         BE    WHATLBLA                                                 09911
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                   09912
         BE    WHATLBLA                                                 09913
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                   09914
         BE    WHATLBLA                                                 09915
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                   09916
         BE    WHATLBLA                                                 09917
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                   09918
         BE    WHATLBLA                                                 09919
         B     NOPRTEXT                    Not a label format           09920
*                                                                       09921
WHATLBLE DS    0H                          EBCDIC Labels                09922
*                                          Go to appropriate routine    09923
         CLC   EXTLBLIN(4),=C'VOL1'                                     09924
         BE    PXTVOL1                                                  09925
         CLC   EXTLBLIN(4),=C'HDR1'                                     09926
         BE    PXT1PR                                                   09927
         CLC   EXTLBLIN(4),=C'EOF1'                                     09928
         BE    PXT1PR                                                   09929
         CLC   EXTLBLIN(4),=C'EOV1'                                     09930
         BE    PXT1PR                                                   09931
         CLC   EXTLBLIN(4),=C'HDR2'                                     09932
         BE    PXT2PR                                                   09933
         CLC   EXTLBLIN(4),=C'EOF2'                                     09934
         BE    PXT2PR                                                   09935
         CLC   EXTLBLIN(4),=C'EOV2'                                     09936
         BE    PXT2PR                                                   09937
         CLC   EXTLBLIN(3),=C'UHL'                                      09938
         BE    PXTUSE                                                   09939
         CLC   EXTLBLIN(3),=C'UTL'                                      09940
         BE    PXTUSE                                                   09941
         B     NOPRTEXT                    Not a label format           09942
WHATLBLA DS    0H                          ASCII  Labels                09943
*                                                                       09944
*        Common ASCII preparation routines......                        09945
*                                                                       09946
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation   09947
*                                                                       09948
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.     09949
         ST    R5,R5HXPRT              Save register.                   09950
         L     R5,SAVTRTCS             Point to translation table CSECT 09951
         USING TRTDSECT,R5                                              09952
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea      09953
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print    09954
         L     R5,R5HXPRT              Restore R5                       09955
         DROP  R5                                                       09956
* -- >                                                                  09957
*                                                                       09958
*        ASCII preparations done......                                  09959
*                                          Go to appropriate routine    09960
*                                                                       09961
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                   09962
         BE    PXTVOL1A                                                 09963
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                   09964
         BE    PXT1PRA                                                  09965
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                   09966
         BE    PXT1PRA                                                  09967
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                   09968
         BE    PXT1PRA                                                  09969
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                   09970
         BE    PXT2PRA                                                  09971
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                   09972
         BE    PXT2PRA                                                  09973
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                   09974
         BE    PXT2PRA                                                  09975
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                   09976
         BE    PXTUSEA                                                  09977
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                   09978
         BE    PXTUSEA                                                  09979
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                   09980
         BE    PXTUSEA                                                  09981
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                   09982
         BE    PXTUSEA                                                  09983
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                   09984
         BE    PXTUSEA                                                  09985
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                   09986
         BE    PXTUSEA                                                  09987
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                   09988
         BE    PXTUSEA                                                  09989
         B     NOPRTEXT                    Not a label format           09990
* ----------------------------------------------------------------- *   09991
*                                                                   *   09992
*   Various Label Printing Routines follow at this point.           *   09993
*                                                                   *   09994
* ----------------------------------------------------------------- *   09995
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label          09996
         MVI   LINE-1,C' '                                              09997
         MVC   LINE,LINE-1             CLEAR PRINT LINE                 09998
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS            09999
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL             10000
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS            10001
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION             10002
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND         10003
         ST    R6,SAVER6                                                10004
         L     R6,SYSPRDCB                                              10005
         PUT   (6),LINE                                                 10006
         L     R6,SAVER6                                                10007
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER        10008
         B     NOPRTEXT                                                 10009
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label          10010
         MVI   LINE-1,C' '                                              10011
         MVC   LINE,LINE-1             CLEAR PRINT LINE                 10012
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS            10013
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL             10014
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS            10015
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION             10016
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4    10017
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message       10018
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND         10019
         ST    R6,SAVER6                                                10020
         L     R6,SYSPRDCB                                              10021
         PUT   (6),LINE                                                 10022
         L     R6,SAVER6                                                10023
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER        10024
         B     NOPRTEXT                                                 10025
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label          10026
         ST    R3,SAVE3REG                                              10027
         LA    R3,EXTLBLIN                                              10028
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10029
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT          10030
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10031
         L     R3,SAVE3REG                                              10032
         B     NOPRTEXT                                                 10033
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label          10034
         ST    R3,SAVE3REG                                              10035
         LA    R3,EXTLBLWK             Point to label area to print     10036
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10037
         BAL   R7,PRTXXX1              PRINT LABEL INFO                 10038
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10039
         L     R3,SAVE3REG                                              10040
         B     NOPRTEXT                                                 10041
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label          10042
         ST    R3,SAVE3REG                                              10043
         LA    R3,EXTLBLIN             Point to label area to print     10044
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10045
         BAL   R7,PRTXXX2              PRINT LABEL INFO                 10046
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10047
         L     R3,SAVE3REG                                              10048
         B     NOPRTEXT                                                 10049
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label          10050
         ST    R3,SAVE3REG                                              10051
         LA    R3,EXTLBLWK             Point to label area to print     10052
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10053
         BAL   R7,PRTAXX2              PRINT LABEL INFO                 10054
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10055
         L     R3,SAVE3REG                                              10056
         B     NOPRTEXT                                                 10057
PXTUSE   DS    0H                      Print EBCDIC USER Label          10058
         ST    R3,SAVE3REG                                              10059
         LA    R3,EXTLBLIN             Point to label area to print     10060
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10061
         BAL   R7,PRTUSER              PRINT LABEL INFO                 10062
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10063
         L     R3,SAVE3REG                                              10064
         B     NOPRTEXT                                                 10065
PXTUSEA  DS    0H                      Print ASCII  USER Label          10066
         ST    R3,SAVE3REG                                              10067
         LA    R3,EXTLBLWK             Point to label area to print     10068
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      10069
         BAL   R7,PRTUSER              PRINT LABEL INFO                 10070
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     10071
         L     R3,SAVE3REG                                              10072
         B     NOPRTEXT                                                 10073
* ----------------------------------------------------------------- *   10074
NOPRTEXT DS    0H             Don't print external label on report      10075
* ----------------------------------------------------------------- *   10076
THEEND   DS    0H                                                       10077
         L     R13,4(,R13)                                              10078
         MVC   16(4,R13),=F'0'          Return code 0     in R15        10079
* - - - - - - - - - - - - - Pass addresses of our passed areas back.    10080
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1   10081
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3   10082
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     10083
         LM    R14,R12,12(R13)                                          10084
         BR    R14                                                      10085
         EJECT                                                          10086
* --------------------------------------------------------- *           10087
*    BAL REGISTER IS R7.                                                10088
* --------------------------------------------------------- *           10089
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII    10090
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         10091
         MVI   LINE-1,C' '                                              10092
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          10093
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG           10094
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS              10095
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL               10096
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS              10097
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                       10098
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS              10099
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER            10100
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS              10101
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER             10102
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS              10103
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS             10104
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS              10105
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS        10106
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS              10107
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS             10108
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS              10109
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS             10110
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE               10111
         ST    R6,SAVER6                                                10112
         L     R6,SYSPRDCB                                              10113
         PUT   (6),LINE                                                 10114
         L     R6,SAVER6                                                10115
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 10116
PRTXXX1R BR    R7                                                       10117
* --------------------------------------------------------- *           10118
*    BAL REGISTER IS R7.                                                10119
* --------------------------------------------------------- *           10120
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC       10121
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         10122
         MVI   LINE-1,C' '                                              10123
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          10124
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG           10125
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS              10126
         MVC   XXX2RFM(1),4(R3)      RECFM                              10127
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                    10128
         MVC   XXX2RFM+2(1),36(R3)   Control Character                  10129
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS              10130
         CLC   =C'00000',5(R3)       Is Block Length 00000?             10131
         BNE   PRX2NLBI              No. No LBI. Print what's here.     10132
         CLI   70(R3),X'40'          Is first LBI field a blank?        10133
         BNE   PRX2NLBI              No LBI field either. Print zeros.  10134
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display  10135
         B     PRX2LBI               And not the old blksize field.     10136
PRX2NLBI DS    0H                                                       10137
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                       10138
PRX2LBI  DS    0H                                                       10139
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS              10140
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                      10141
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS              10142
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                       10143
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS              10144
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                     10145
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS              10146
         CLI   34(R3),C'P'           INDICATE IDRC?                     10147
         BNE   PRX2NOI               NO. SAY NO                         10148
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                  10149
         B     PRX2MOV                                                  10150
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                       10151
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE               10152
         ST    R6,SAVER6                                                10153
         L     R6,SYSPRDCB                                              10154
         PUT   (6),LINE                                                 10155
         L     R6,SAVER6                                                10156
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 10157
PRTXXX2R BR    R7                                                       10158
* --------------------------------------------------------- *           10159
*    BAL REGISTER IS R7.                                                10160
* --------------------------------------------------------- *           10161
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII        10162
*                                                                       10163
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.   10164
*                                                                       10165
         MVI   LINE-1,C' '                                              10166
         MVC   LINE,LINE-1           CLEAR PRINT LINE                   10167
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE         10168
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS              10169
         MVC   AXX2RFM(1),4(R3)      RECFM                              10170
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                    10171
         MVC   AXX2RFM+2(1),36(R3)   Control Character                  10172
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS              10173
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                       10174
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS              10175
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                      10176
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS              10177
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                       10178
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS              10179
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                     10180
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS              10181
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                  10182
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE            10183
         ST    R6,SAVER6                                                10184
         L     R6,SYSPRDCB                                              10185
         PUT   (6),LINE                                                 10186
         L     R6,SAVER6                                                10187
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL             10188
PRTAXX2R BR    R7                                                       10189
* --------------------------------------------------------- *           10190
*    BAL REGISTER IS R7.                                                10191
* --------------------------------------------------------- *           10192
PRTUSER  DS    0H                                                       10193
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         10194
         MVI   LINE-1,C' '                                              10195
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          10196
         MVI   USERLBL-1,C' '                                           10197
         MVC   USERLBL(133),USERLBL-1                                   10198
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE         10199
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE               10200
         ST    R6,SAVER6                                                10201
         L     R6,SYSPRDCB                                              10202
         PUT   (6),LINE                                                 10203
         L     R6,SAVER6                                                10204
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 10205
PRTUSERR BR    R7                                                       10206
* ----------------------------------------------------------------- *   10207
* ---               C  O  N  S  T  A  N  T  S                   --- *   10208
* ----------------------------------------------------------------- *   10209
         LTORG                                                          10210
FF       EQU   X'FF'                                                    10211
LABELITH DC    CL80'----ENDOFLABELHEADER '                              10212
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           10213
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              10214
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           10215
         DC    C'0'                                                     10216
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                   10217
         DC    X'30'                                                    10218
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1             10219
* --------------------------------------------------------- *           10220
         DC    C' '                                                     10221
LINE     DC    CL133' '                                                 10222
* ---------------------  Register Save Areas  ---------------->>>       10223
SYSPRINV DC    V(SYSPRINT)                                              10224
LABLDUMV DC    V(LABLDUMP)                                              10225
LABADDIV DC    V(LABADDIN)                                              10226
SAVTRTCS DC    F'0'                                                     10227
SYSPRDCB DC    F'0'                                                     10228
LABLDDCB DC    F'0'                                                     10229
LABADDCB DC    F'0'                                                     10230
SAVER6   DC    F'0'                                                     10231
SAVE3REG DC    F'0'                                                     10232
SAVE7BA1 DC    F'0'                                                     10233
SAVE7REG DC    F'0'                                                     10234
SAVE7BAL DC    F'0'                                                     10235
SAVE4LDM DC    F'0'                                                     10236
SAVE5LDM DC    F'0'                                                     10237
R5HXPRT  DC    F'0'                                                     10238
SAVE7LDM DC    F'0'                                                     10239
SAVE7RG1 DC    F'0'                                                     10240
SAVE7RG2 DC    F'0'                                                     10241
SAVE7RG3 DC    F'0'                                                     10242
SAVE7RG4 DC    F'0'                                                     10243
* ----------------------------------------------------------------- *   10244
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW   10245
VOL1LBL  DC    C'0VOL1 LABEL HAS BEEN DETECTED - VOLSER = '             10246
VOL1SER  DC    C'      '                                                10247
VOL1OWNT DC    C'     OWNER = '                                         10248
VOL1OWNR DC    C'          '                                            10249
VOL1OWNE DC    C'    '                                                  10250
VOL1BLNK DC    59C' '                                                   10251
         DC    C' '                                                     10252
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW   10253
USERLBL  DC    81C' '                                                   10254
         DC    52C' '                                                   10255
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW   10256
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                 10257
XXX1VOL  DC    C'      '                                                10258
XXX1DSNL DC    C' DSN='                                                 10259
XXX1DSN  DC    C'                 '                                     10260
XXX1DSQL DC    C' DS SEQ #: '                                           10261
XXX1DSQ  DC    C'    '                                                  10262
XXX1VSQL DC    C' VOL SEQ #: '                                          10263
XXX1VSQ  DC    C'    '                                                  10264
XXX1BLCL DC    C' BLK CNT: '                                            10265
XXX1BLCH DC    C'    '                                                  10266
XXX1BLC  DC    C'      '                                                10267
XXX1CRDL DC    C' CRDATE: '                                             10268
XXX1CRD  DC    C'      '                                                10269
XXX1EXDL DC    C' EXDATE: '                                             10270
XXX1EXD  DC    C'      '                                                10271
XXX1BLNK DC    30C' '                                                   10272
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW   10273
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                   10274
XXX2RFM  DC    C' '                                                     10275
XXX2BKLL DC    C'    BLOCK LENGTH: '                                    10276
XXX2BKLE DS    0CL10                                                    10277
XXX2BKL  DC    C'     '                                                 10278
         DC    C'     '                                                 10279
XXX2RCLL DC    C'   RECORD LENGTH: '                                    10280
XXX2RCL  DC    C'     '                                                 10281
XXX2TDNL DC    C'  TAPE DEN: '                                          10282
XXX2TDN  DC    C' '                                                     10283
XXX2JSTL DC    C'   JOB/JOB STEP: '                                     10284
XXX2JST  DC    C'                 '                                     10285
XXX2IDRL DC    C'   IDRC? '                                             10286
XXX2IDR  DC    C'   '                                                   10287
XXX2BLNK DC    8C' '                                                    10288
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW   10289
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                   10290
AXX2RFM  DC    C' '                                                     10291
AXX2BKLL DC    C'    BLOCK LENGTH: '                                    10292
AXX2BKLE DS    0CL10                                                    10293
AXX2BKL  DC    C'     '                                                 10294
         DC    C'     '                                                 10295
AXX2RCLL DC    C'   RECORD LENGTH: '                                    10296
AXX2RCL  DC    C'     '                                                 10297
AXX2TDNL DC    C'  TAPE DEN: '                                          10298
AXX2TDN  DC    C' '                                                     10299
AXX2JSTL DC    C'   JOB/JOB STEP: '                                     10300
AXX2JST  DC    C'                 '                                     10301
AXX2CCSL DC    C'   CCSID '                                             10302
AXX2CCS  DC    C'     '                                                 10303
AXX2BLNK DC    6C' '                                                    10304
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE   10305
* --------------------------------------------------------- *           10306
* ----------------------------------------------------------------- *   10307
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                         10308
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                     10309
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                10310
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA             * 10311
PARMSAVE DC    F'0'                                                     10312
USERSAVE DC    F'0'                                                     10313
INARSAVE DC    F'0'                                                     10314
** ---------------------------------------------------------------- **  10315
**** ----------------------------------->>>>  Passed area, below        10316
* --------------------------------------------------------- *           10317
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS          10318
PARMFLG1 DC    X'00'                                                    10319
PARMFLG2 DC    X'00'                                                    10320
PARMFLG3 DC    X'00'                                                    10321
PARMFLG4 DC    X'00'                                                    10322
PARMFLG5 DC    X'00'                                                    10323
PARMFLG6 DC    X'00'                                                    10324
PARMFLG7 DC    X'00'                                                    10325
PARMFLG8 DC    X'00'                                                    10326
PARMFLG9 DC    X'00'                                                    10327
PARMFLGA DC    X'00'                                                    10328
PARMFLLN EQU   *-PARMFLGS                                               10329
PARMCOPY DS    XL10           Copy of options before correction         10330
* --------------------------------------------------------- *           10331
TRTDSECT DSECT                 Displacements must match TRTCSECT.       10332
TRTBL0   DS    256X                                                     10333
TRTBL1   DS    256X                                                     10334
TRTBL2   DS    256X                                                     10335
TRTE2A   DS    256X                                                     10336
TRTA2E   DS    256X                                                     10337
TRTASPRT DS    256X                                                     10338
** ---------------------------------------------------------------- **  10339
         END                                                            10340
         TITLE 'FOOTAGE CALCULATION AS IF THE TAPE WERE 6250 BPI'       10341
         YREGS                                                          10342
*********************************************************************** 10343
*                                                                     * 10344
* NAME             FOOTAGE                                            * 10345
*                                                                     * 10346
* PURPOSE          Footage calculations on modern 3590 or 3490        * 10347
*                  cartridges don't mean much.  In order to give      * 10348
*                  us a much better idea of the true size of the      * 10349
*                  data on a tape, it would give us a better          * 10350
*                  picture to imagine that the data would reside      * 10351
*                  on a (very long) 6250 bpi tape reel.  Of course,   * 10352
*                  it might be too much data for an actual reel,      * 10353
*                  but we would get a good uniform picture of the     * 10354
*                  actual data size.                                  * 10355
*                                                                     * 10356
* FUNCTION         Calculate 6250 bpi footage for the last file       * 10357
*                  read, and accumulate total 6250 bpi footage        * 10358
*                  for the entire tape, up to the last file read.     * 10359
*                                                                     * 10360
* Calling FOOTAGE from COPYMODS -                                     * 10361
*                                                                     * 10362
*                  Register 1 passes the address of a workarea        * 10363
*                  within the COPYMODS program.  The FOOTWORK         * 10364
*                  DSECT describes the labels in this workarea.       * 10365
*                  The contents of the workarea contains all the      * 10366
*                  input information necessary for the FOOTAGE        * 10367
*                  routine.                                           * 10368
*                                                                     * 10369
*                  COPYMODS provides FOOTAGE with initial values,     * 10370
*                  in the workarea.  FOOTAGE uses these values,       * 10371
*                  and recalculates the footages (for the file, and   * 10372
*                  for the entire tape, up to here), based on block   * 10373
*                  sizes, etc. that were provided in the workarea.    * 10374
*                  FOOTAGE then changes the two footage measurement   * 10375
*                  values in the workarea, along with possibly other  * 10376
*                  workarea changes, and then returns control back    * 10377
*                  to COPYMODS.                                       * 10378
*                                                                     * 10379
* DESCRIPTION      FOOTAGE IS CALLED FROM THE COPYMODS READIN CODE    * 10380
*                  & IS PROVIDED WITH A WORK AREA.  THE FOOTAGE FOR   * 10381
*                  THE FILE (BASED ON BLKSIZE, NUMBER OF BLOCKS,      * 10382
*                  AND 6250 BPI TAPE DENSITY IS CALCULATED AND MOVED  * 10383
*                  INTO THE OUTPUT AREA.  TOTAL REEL LENGTH IS ALSO   * 10384
*                  CALCULATED AND MOVED INTO THE OUTPUT AREA.         * 10385
*                                                                     * 10386
* PARAMETERS       FOOTAGE IS PASSED THE ADDRESS OF A WORK AREA       * 10387
*                  WHICH CONTAINS INPUT DATA AND IS UPDATED BY        * 10388
*                  FOOTAGE.  THE WORK AREA INCLUDES -                 * 10389
*                                                                     * 10390
*                  TAPE LABEL TYPE INDICATOR (ALWAYS NON-LABELLED)    * 10391
*                  DENSITY CODE (ALWAYS 4)                            * 10392
*                  RECORD LENGTH                                      * 10393
*                  NUMBER OF RECORDS                                  * 10394
*                  NUMBER OF USER LABELS                              * 10395
*                  CUMULATIVE REEL COUNT   (UPDATED)                  * 10396
*                  FILE FOOTAGE IN EBCDIC  (UPDATED)                  * 10397
*                  REEL FOOTAGE IN EBCDIC  (UPDATED)                  * 10398
*                                                                     * 10399
* REGISTER USAGE   R0  - LINKAGE                                      * 10400
*                  R1  - LINKAGE                                      * 10401
*                  R2  - POINTER TO DENSITY CONSTANTS                 * 10402
*                  R3  - NOT USED                                     * 10403
*                  R4  - FOOTAGE CALCULATION WORK                     * 10404
*                  R5  - FOOTAGE CALCULATION WORK                     * 10405
*                  R6  - NOT USED                                     * 10406
*                  R7  - NOT USED                                     * 10407
*                  R8  - NOT USED                                     * 10408
*                  R9  - NOT USED                                     * 10409
*                  R10 - NOT USED                                     * 10410
*                  R11 - WORK AREA POINTER                            * 10411
*                  R12 - PROGRAM BASE                                 * 10412
*                  R13 - SAVE AREA                                    * 10413
*                  R14 - LINKAGE                                      * 10414
*                  R15 - LINKAGE                                      * 10415
*                                                                     * 10416
*********************************************************************** 10417
         TITLE 'ENTRY CODING'                                           10418
FOOTAGE  CSECT                                                          10419
         USING FOOTAGE,R15              DEFINE BASE REGISTER            10420
         B     JUMPID                   BRANCH AROUND ID                10421
         DC    AL1(28)                  IDENTIFIER LENGTH               10422
         DC    CL8'FOOTAGE'             CSECT NAME                      10423
         DC    CL1' '                   SPACER                          10424
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY                10425
         DC    CL1' '                   SPACER                          10426
         DC    CL8'&SYSTIME'            TIME OF ASSEMBLY                10427
         DC    CL1' '                   SPACER                          10428
JUMPID   DS    0H                                                       10429
         STM   R14,R12,12(R13)          SAVE REGISTERS                  10430
         LR    R12,R15                  LOAD BASE ADDRESS               10431
         DROP  R15                      DISCONTINUE R15 BASE            10432
         USING FOOTAGE,R12              DEFINE BASE REGISTERS           10433
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR          10434
         BAL   R13,JUMPSAVE             LOAD SAVEAREA ADDR              10435
         DC    18F'0'                   SAVE AREA                       10436
JUMPSAVE DS    0H                                                       10437
         ST    R15,4(,R13)              CHAIN SAVE AREAS                10438
         ST    R13,8(,R15)                                              10439
         LR    R11,R1                   LOAD WORK AREA ADDRESS          10440
         USING FOOTWORK,R11             WORK AREA ADDRESSABILITY        10441
         B     CALC6250        ONLY CALCULATE AS 6250 FOR ALL TAPES.    10442
         TITLE 'FOOTAGE CALCULATIONS FOR 6250 BPI, GCR'                 10443
*********************************************************************** 10444
*                                                                     * 10445
*        FOOTAGE CALCULATIONS FOR 6250 BPI, GCR                       * 10446
*                                                                     * 10447
*        FULL REEL COUNT = 260,409,600                                * 10448
*                                                                     * 10449
*********************************************************************** 10450
         SPACE                                                          10451
CALC6250 SR    R4,R4                   CLEAR FOR DIVIDE                 10452
         L     R5,BLKSZE               LOAD BLOCKSIZE                   10453
         D     R4,=F'1106'             DIVIDE BY 1106                   10454
         LR    R1,R4                   SAVE REMAINDER                   10455
         M     R4,=F'1600'             FOR EVERY 1106, 1580 + 20 RESYNC 10456
         SR    R0,R0                                                    10457
         D     R0,=F'7'                7 BYTE GROUPS                    10458
         LA    R1,1(R1)                ADD 1 TO QUOTIENT                10459
         MH    R1,=H'10'               FOR EVERY 7, YOU GET 10          10460
         AR    R5,R1                   ADD IT TO TOTAL                  10461
         A     R5,=F'2898'             ADD 2898 FOR IBG AND CONTROL     10462
         M     R4,NUMBLKS              MULTIPLY BY NUMBER OF BLOCKS     10463
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS         10464
         BNE   SAVE6250                                                 10465
         L     R1,USERLBLS             LOAD USER LABEL COUNT            10466
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS        10467
         MH    R1,=H'6036'             MULTIPLY BY 6036                 10468
         AR    R5,R1                   ADD TO TOTAL                     10469
         CLC   =H'1',FILENO            TEST FOR FIRST FILE              10470
         BNE   SAVE6250                                                 10471
         A     R5,=F'3018'             ADD 3018 FOR VOL LABEL           10472
SAVE6250 LA    R2,DATA6250             ADDRESS OF 6250 BPI CONSTANTS    10473
         TITLE 'CONVERT THE BIT COUNTS TO FEET AND EDIT'                10474
*********************************************************************** 10475
*                                                                     * 10476
*        CONVERT THE BIT COUNTS TO FEET AND EDIT                      * 10477
*                                                                     * 10478
*********************************************************************** 10479
         SPACE                                                          10480
FOOTEDIT LR    R1,R5                   COPY                             10481
         A     R1,CUMTOTAL             ADD PREVIOUS TOTAL               10482
         ST    R1,CUMTOTAL             STORE NEW TOTAL                  10483
         A     R5,0(,R2)               ROUND OFF                        10484
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12            10485
         CVD   R5,PACKDEC              CONVERT TO DECIMAL               10486
         MVC   FILEFT,=X'40402020202021204B20'  MOVE IN MASK            10487
         ED    FILEFT,PACKDEC+4        EDIT IT                          10488
         LR    R5,R1                   COPY CUMULATIVE TOTAL            10489
         SR    R4,R4                                                    10490
         A     R5,0(,R2)               ROUND OFF                        10491
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12            10492
         CVD   R5,PACKDEC              CONVERT TO DECIMAL               10493
         MVC   REELFT,=X'40402020202021204B20'  MOVE IN MASK            10494
         ED    REELFT,PACKDEC+4                                         10495
         DROP  R11                                                      10496
FOOTRTRN L     R13,4(,R13)              RESTORE OLD SAVEAREA            10497
         MVC   16(4,R13),=F'0'          RETURN CODE 0     IN R15        10498
         LM    R14,R12,12(R13)                                          10499
         BR    R14                      RETURN                          10500
         TITLE 'DATA AREAS'                                             10501
*********************************************************************** 10502
*                                                                     * 10503
*        DATA AREAS                                                   * 10504
*                                                                     * 10505
*********************************************************************** 10506
         SPACE                                                          10507
         LTORG                                                          10508
         SPACE                                                          10509
DATA6250 DC    F'5425'                                                  10510
         DC    F'10850'                9042/10*12 (BITS PER FOOT/10)    10511
PACKDEC  DS    D                                                        10512
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                   10513
*   THIS DSECT MUST MATCH THE LABELTYP WORK AREA IN COPYMODS.           10514
FOOTWORK DSECT                                                          10515
LABELTYP DS    C                       LABEL TYPE                       10516
DENSITY  DS    C                       DENSITY CODE                     10517
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY   10518
BLKSZE   DS    F                       BLOCK SIZE IN BINARY             10519
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY       10520
USERLBLS DS    F                       USER LABELS IN BINARY            10521
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL            10522
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC           10523
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC           10524
*--------END OF FOOTAGE ROUTINE PARAMETERS                              10525
         END                                                            10526
