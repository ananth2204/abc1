                Tape Label Printing and Dumping
                   with COPYFILE and COPYSLNL


If you run COPYFILE and COPYSLNL with PARM=TAPEL, then if you add
a //LABLDUMP statement, pointing to an FB-80 output file or pds
member, then you'll get a dump of all the tape labels for files
copied, in COPYMODS LABLDUMP format, with extra control cards in
the appropriate places:

----ENDOFLABELHEADER
----ENDOFLABELHEADERINIT
----ENDOFLABELTRAILER
----ENDOFLABELTRAILEREOV

so the resulting tape label dump looks something like:

VOL1V468MT                               Sam Golob
HDR1FILE0001         V468MT00010001      005045 980000000000IBM OS/VS 370
HDR2F327200008000SBGOLOB1/COPY1       B   00000
----ENDOFLABELHEADER
EOF1FILE0001         V468MT00010001      005045 980000000146IBM OS/VS 370
EOF2F327200008000SBGOLOB1/COPY1       B   00000
----ENDOFLABELTRAILER
HDR1FILE0002         V468MT00010002      005045 980000000000IBM OS/VS 370
HDR2F327200008000SBGOLOB1/COPY2       B   00000
----ENDOFLABELHEADER
EOF1FILE0002         V468MT00010002      005045 980000000001IBM OS/VS 370
EOF2F327200008000SBGOLOB1/COPY2       B   00000
----ENDOFLABELTRAILER
HDR1FILE0003         V468MT00010003      005045 980000000000IBM OS/VS 370
HDR2F327200008000SBGOLOB1/COPY3       B   00000
----ENDOFLABELHEADER
EOV1FILE0003         V468MT00010003      005045 980000000006IBM OS/VS 370
EOV2F327200008000SBGOLOB1/COPY3       B   00000
----ENDOFLABELTRAILEREOV


    This set of dumped labels, with the ----ENDOFLABEL.... control
cards, can be run against a NL version of the copied tape, to produce
a new SL tape, using the LABADDIN option of the COPYMODS program.
Meanwhile, you can edit the label set with a file editor, to produce
a new set of labels so the files are renamed, expiration dates changed,
and so forth.  Also, the COPYMODS program can produce from one to 16
output tapes at once, with varying options to set the VOLSER.  So you
can shorten your work if you want to produce a lot of altered output
tapes.

    To dump labels to the //LABLDUMP dataset, you need to code
PARM='TAPEL' in the EXEC card as well as having the //LABLDUMP
ddname coded in the JCL.  The tape dumping function (internally)
is an extension of the TLPRNT program, which produces the print
of the tape labels.  So PARM=TAPEL has to also be in effect, for
the tape labels to be dumped to the //LABLDUMP ddname.

    All of the above stuff can be accomplished as follows:

//SBGOLOBB  JOB (ACCT#),S-GOLOB,
// NOTIFY=&SYSUID,
// CLASS=B,MSGCLASS=X
//******************************************************************//
//*   COPYSLNL PROGRAM EXECUTION - CBT TAPE - FILE 229 UTILITIES   *//
//*         COPY AND STRIP LABELS FROM TAPE, AND DUMP LABELS.      *//
//******************************************************************//
//COPYSLNL PROC FROM=,TO=,DSP=KEEP,UN1=564,UN2=565
//COPYSTEP EXEC PGM=COPYSLNL,REGION=7000K,PARM='TAPEL' <==TAPEL needed
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB
//MSG      DD SYSOUT=*
//TAPELOUT DD SYSOUT=*
//SELREPT  DD SYSOUT=*
//LABLDUMP DD DISP=SHR,DSN=SBGOLOB.CBT.CNTL(AMUR30L2)  <== Dump labels
//SYSABEND DD SYSOUT=*
//IN       DD DSN=INPUT.FILE,UNIT=&UN1,DISP=OLD,
//            LABEL=(1,BLP,EXPDT=98000),
//            VOL=(,RETAIN,SER=&FROM)
//TAPELIN  DD DSN=OUTPUT.FILE,UNIT=&UN2,VOL=SER=&TO,
//            DISP=(NEW,&DSP),
//            LABEL=(1,BLP,EXPDT=98000)
//         PEND
//******************************************************************//
//COPYSTRP EXEC COPYSLNL,FROM=AMUR30,TO=AMUR3M
//SYSIN    DD *
 1/1  ALL
/*
//******************************************************************//
//*  COPY 2 TAPES - EVERYTHING - CHANGE ALL VOLSERS TO NEW VALUE   *//
//*     Two output tapes with the new values. VOL=SER=AMURSL,      *//
//*     will be produced by this JCL, as coded.                    *//
//*  ------------------------------------------------------------- *//
//*     If you want the VOLSER to be the JCL values, then leave    *//
//*     out the OUTVOLALL= keyword and code CHGVOL in the EXEC     *//
//*     PARM field, or in SYSIN.  To keep the output VOLSERs at    *//
//*     the original value (in the tape labels), don't code CHGVOL *//
//*     and leave out the OUTVOLALL= keyword from SYSIN.           *//
//******************************************************************//
//*
//COPY   EXEC  PGM=COPYMODS,REGION=4096K
//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB
//LABADDIN DD DISP=SHR,DSN=SBGOLOB.CBT.CNTL(AMUR30L2)
//SYSPRINT DD  SYSOUT=*
//IN    DD VOL=SER=AMUR3M,DISP=OLD,UNIT=565,LABEL=(,BLP,EXPDT=98000)
//OUT1  DD VOL=SER=AMURSL,DISP=OLD,UNIT=562,LABEL=(,BLP,EXPDT=98000)
//OUT2  DD VOL=SER=AMURSN,DISP=OLD,UNIT=563,LABEL=(,BLP,EXPDT=98000)
//SYSIN DD *
LABADDIN
CUMSEP
OUTVOLALL=AMURSL
/*

Important note:  //LABLDUMP with COPYFILE, as opposed to COPYSLNL,
--------- ----   works like TAPEL.  They are a bit different in
                 the two programs, as follows:

          With COPYFILE, the tape labels reported belong to the
          output tape.  Likewise, the tape labels dumped to the
          //LABLDUMP ddname are from the output tape.

          With COPYSLNL, the tape labels reported belong to the
          input tape.  Likewise, the tape labels dumped to the
          //LABLDUMP ddname are from the input tape.  This is
          because the output tape with COPYSLNL has no labels.
          It is by definition an NL tape, so the labels, both
          for the TAPEL report and for the //LABLDUMP label dump
          file, must come from the input tape.

   Best of everything.  Need help?  Please write:

   Sam Golob     sbgolob@cbttape.org     or  sbgolob@att.net

