{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012421000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 705432, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 12, "INMDSNAM": "CBT.V500.FILE589.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE589.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0c\\x0f'", "DS1TRBAL": "b'\\t\\xd4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04T\\x00\\x03\\x04U\\x00\\x00\\x00\\r'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1e\\x00\\x12\\x01\\x02#\\x9f\\x01\\x04\\x14\\x7f\\tP\\x02N\\x00\\x01\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.30", "flags": 0, "createdate": "2002-08-27T00:00:00", "modifydate": "2004-05-26T09:50:12", "lines": 590, "newlines": 1, "modlines": 0, "user": "UX90603"}, "text": "\n               H S C T O O L   Version 1.1.4\n\n\n   HSCTOOL is an REXX external function that works as an interface\n   between a REXX Exec and HSC (StorageTek Robots). The following\n   features are implemented in the HSCTOOL:\n\n   EJECT    - Eject volume from an ACS.\n   MOUNT    - Mount volume.\n   DISMOUNT - Dismount volume.\n   MOVE     - Move a Volume to another LSM.\n   QCAP     - Query capacity and status of a CAP.\n   QCONFIG  - Get configuration data.\n   QHSC     - Determine HSC status.\n   QDSN     - Get Data set information.\n   QDRIVES  - Get Drive information.\n   QSCRATCH - Get LSM scratch counts.\n   QVOLUME  - Get volume status.\n   SCRATCH  - Return a volume to scratch status.\n   UNSCRATCH - Remove a volume from scratch status.\n\n   HSCTOOL was tested successfully in HSC versions:\n\n   * 2.1\n   * 4.0\n   * 5.0\n   * 5.1\n\n EJECT function:\n ==============\n\n  The EJECT request causes the HSC to eject a specific volume from the\n library using the parameter VOLSER. The volume is ejected to the\n available CAP with the highest preference.\n\n\n SYNTAX:   HSCTOOL('EJECT','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('EJECT','011000')\n if result = 0 then say \"Eject successful\"\n\n\n MOUNT Function:\n ==============\n\n The MOUNT request directs the HSC to mount a volume.\n\n\n SYNTAX:   HSCTOOL('MOUNT','Drive','Volume') or\n           HSCTOOL('MOUNT','Drive','SCRATCH')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('MOUNT','04B0','022000')\n if result = 0 then say \"Mount successful\"\n\n\n\n MOVE  Function:\n ==============\n\n  The MOVE request permits you to request the HSC to move a single\n  volume to another location within a library complex.\n\n\n SYNTAX:   HSCTOOL('MOVE','Volume','to_LSMID')\n\n 'to_LSMID' is in format AA0L:\n\n           AA => ACS ID (in hex)\n           0L => LSM ID (in hex)\n\n           Ex.: '010B'  ACS 01 and LSM 11\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('MOVE','022000','010A')\n if result = 0 then say \"Move successful\"\n\n\n DISMOUNT Function:\n =================\n\n The DISMOUNT request directs the HSC to dismount a volume from a\n specified transport.\n\n\n SYNTAX:   HSCTOOL('DISMOUNT','Drive')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('DISMOUNT','04B0')\n if result = 0 then say \"Dismount successful\"\n\n\n SCRATCH Function:\n ================\n\n The SCRATCH request causes a volume to be placed in scratch status in\n the library control data set.\n\n\n SYNTAX:   HSCTOOL('SCRATCH','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('SCRATCH','033000')\n if result = 0 then say \"Scratch successful\"\n\n\n UNSCRATCH Function:\n ==================\n\n The UNSCRATCH request causes a volume to be removed from scratch status\n in the HSC control data set.\n\n\n SYNTAX:   HSCTOOL('UNSCRATCH','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('UNSCRATCH','033000')\n if result = 0 then say \"Unscratch successful\"\n\n\n QHSC Function:\n ==============\n\n This request may be used to determine if the HSC is active or not. This\n permits programs to poll periodically to determine when the HSC\n becomes active.\n\n\n SYNTAX:   HSCTOOL('QHSC')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QHSC')\n if result = 0 then say \"HSC is available\"\n\n\n QVOLUME Function:\n =================\n\n The QVOLUME request is used to obtain the library status of a\n cartridge.\n\n\n SYNTAX:   HSCTOOL('QVOLUME','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n    @SLXVILB  - IN LIBRARY ?  - YES or NO\n    @SLXVOHST - IN USE BY ANOTHER HOST ? - YES or NO\n    @SLXVSCR  - SCRATCH ?  - YES or NO\n    @SLXVMAL  - MANUAL MODE LSM ?  - YES or NO\n    @SLXVDSC  - DISCONNECTED ?  - YES or NO\n    @SLXVMNT  - MOUNTED ON A DRIVE ?  - YES or NO\n    @SLXVERR  - ERRANT ?  - YES or NO\n    @SLXVACS  - ACS ID (in Hex)\n    @SLXVLSM  - LSM ID (in Hex)\n    @SLXVPNL  - PANEL  (Only if @SLXVMNT = NO)\n    @SLXVROW  - ROW    (Only if @SLXVMNT = NO)\n    @SLXVCOL  - COLUMN (Only if @SLXVMNT = NO)\n    @SLXDRIV  - DRIVE  (Only if @SLXVMNT = YES)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QVOLUME','044000')\n if result = 0 then say \"Volume is in library\"\n\n\n QCONFIG Function:\n =================\n\n This request is provided to enable the requestor to get information\n about the library configuration.\n\n\n SYNTAX:   HSCTOOL('QCONFIG')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n    @SLXLHNAM - Host ID\n    @SLXLCMPF - Command Prefix Character\n    @SLXLQNAM - ENQ Major Name\n    @SLXLSMF  - SMF Record Number\n    @SLXQMDR  - Largest Number of Drives in any ACS\n    @SLXQDRCT - Number of Drives in the Library\n    @SLXQACNT - Number of ACS's in the Library\n    @SLXQLCNT - Number of LSM's in the Library\n    @SLXQLCAP - Number of CAP's in the Library\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QCONFIG')\n\n\n QDSN Function:\n ==============\n\n   This request is provided to enable the requestor to get information\n   about the current data sets in use by HSC.\n\n\n SYNTAX:   HSCTOOL('QDSN')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXDSNAM.0 - Number of DSN's\n\n    @SLXDSNAM.  - Data Set Name\n    @SLXDSMBR.  - Member Name\n    @SLXDSTYP.  - Data Set Name Type\n    @SLXDSVOL.  - Volume Name\n    @SLXDSUNT.  - Unit Name\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QDSN')\n if result = 0 then\n   do I=1 to @SLXDSNAM.0\n   say \"DSNAME = \"@SLXDSNAM.I\n   say \"MEMBER = \"@SLXDSMBR.I\n   say \"TYPE   = \"@SLXDSTYP.I\n   say \"VOLUME = \"@SLXDSVOL.I\n   say \"UNIT   = \"@SLXDSUNT.I\n   end\n\n\n QCAP Function:\n ==============\n\n   This request is used to query the capacity and status of a CAP.\n\n\n SYNTAX:   HSCTOOL('QCAP')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXCACS.0  - Number of DSN's\n\n    @SLXCACS.   - ACS ID  (in Hex)\n    @SLXCLSM.   - LSM ID  (in Hex)\n    @SLXCCAP.   - CAP ID  (in Hex)\n    @SLXCSTCA.  - ACTIVE   Status  (YES or NO)\n    @SLXCSTNR.  - RECOVERY Status  (YES or NO)\n    @SLXCSTAM.  - AUTOMATIC Status (YES or NO)\n    @SLXCSTCL.  - LINKED Status    (YES or NO)\n    @SLXCSTCO.  - ONLINE Status    (YES or NO)\n    @SLXCMODE.  - CAP Mode\n    @SLXCTYPE.  - CAP Type\n    @SLXCCELL.  - Number of CELLS in CAP\n    @SLXCNROW.  - Number of Rows\n    @SLXCNCOL.  - Number of Columns\n    @SLXCCMAG.  - Number of Magazines\n    @SLXCCMGC.  - Number of CELLS in Magazines\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QCAP')\n if result = 0 then\n    do I=1 to @SLXCACS.0\n    say \"ACS    = \"@SLXCACS.I\n    say \"LSM    = \"@SLXCLSM.I\n    say \"CAP    = \"@SLXCCAP.I\n    say \"ACTIVE    = \"@SLXCSTCA.I\n    say \"RECOVERY  = \"@SLXCSTNR.I\n    say \"AUTOMATIC = \"@SLXCSTAM.I\n    say \"LINKED    = \"@SLXCSTCL.I\n    say \"ONLINE    = \"@SLXCSTCO.I\n    say \"MODE      = \"@SLXCMODE.I\n    say \"TYPE      = \"@SLXCTYPE.I\n    say \"CELLS IN CAP  = \"@SLXCCELL.I\n    say \"NUMB. OF ROWS = \"@SLXCNROW.I\n    say \"NUMB. OF COLS = \"@SLXCNCOL.I\n    say \"MAGAZINES     = \"@SLXCCMAG.I\n    say \"CELLS IN MAGS = \"@SLXCCMGC.I\n    end\n\n\n QDRIVES Function:\n ================\n\n This request retrieves drive related configuration data. The response\n includes the ACS and LSM address of the transports, whether or not an\n enhanced CAP is present, and LSM pass-thru connections.\n\n\n SYNTAX:   HSCTOOL('QDRIVES')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXQDEAC.0 - Number of Drives\n\n    @SLXQDEAC.  - ACS ID (in Hex)\n    @SLXQDELS.  - LSM ID (in Hex)\n    @SLXQDECU.  - Drive Address\n    @SLXQDRT.   - Recording Technique of Drive\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QDRIVES')\n if result = 0 then\n   do I=1 to @SLXQDEAC.0\n   say \"ACS    = \"@SLXQDEAC.I\n   say \"LSM    = \"@SLXQDELS.I\n   say \"UNIT   = \"@SLXQDECU.I\n   say \"REC TEC= \"@SLXQDRT.I\n   end\n\n\n QSCRATCH Function:\n =================\n\n The QSCRATCH request is used to obtain detailed information about the\n number of scratch volumes in each LSM and ACS.\n\n\n SYNTAX:   HSCTOOL('QSCRATCH')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXMACS.0  - Number of LSM's\n\n    @SLXMACS.   - ACS ID\n    @SLXMLSM.   - LSM ID\n    @SLXMADJN.  - Number of Adjacent LSM's\n    @SLXMNSCR.  - Scratch Count for LSM\n    @SLXMTCEL.  - Total Cells in LSM\n    @SLXMFCEL.  - Free Cells in LSM\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QSCRATCH')\n if result = 0 then\n   do I=1 to @SLXMACS.0\n   say \"ACS    = \"@SLXMACS.I\n   say \"LSM    = \"@SLXMLSM.I\n   say \"N ADJ  = \"@SLXMADJN.I\n   say \"SCRATCH COUNT = \"@SLXMNSCR.I\n   say \"TOTAL CELLS   = \"@SLXMTCEL.I\n   say \"FREE  CELLS   = \"@SLXMFCEL.I\n   end\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$$#DATE": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x00E\\x01\\x13\\x16\\x1f\\x01\\x13\\x16\\x1f\\x00\\x07\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-06-10T00:00:00", "modifydate": "2013-06-10T00:07:45", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-487"}, "text": "REGULAR CBT TAPE - VERSION 487    FILE:  589\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT487.FILE589\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 37 MEMBERS COUNTED; CUMULATIVE SIZE IS 6,310 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/10/13    00:07:44    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$INDEX": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "UX90603"}, "text": "DEV2VOL - REXX external function to convert a given device number to\n          volume serial\nHSC@XXXX - HSCTOOL Function CSECTs\nHSCDOC   - HSCTOOL Documentation\nHSCTOOL  - HSCTOOL Main  CSECT\nHSCTOOLJ - JOB to compile/linkedit HSCTOOL program\nHSCWAREA - HSCTOOL Work area DSECT\nLOADSVCX - Utility to dynamically LOAD a Normal/Extended SVC.\nMVSCMDL  - Utility to issue system commands and capture response.\nVOL2DEV - REXX external function to convert a given volume serial to\n          device number\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE1": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x02%?\\x01\\x10\\x10\\x9f\\x12I\\x00\\x16\\x00\\x15\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-09-10T00:00:00", "modifydate": "2010-04-19T12:49:41", "lines": 22, "newlines": 21, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:   HSCTOOL\n   Date:   Tue, 10 Sep 2002 12:07 +0100\n   From:   PHILIPPE LEITE <PHILIPPE.LEITE@BBVA.PT>\n   New email address:  pbleite@br.ibm.com\n     To:   SBGOLOB@ATTGLOBAL.NET\n\n--- Recebido de   POINFOR.UX90603 351.21.4676864    10-09-02 12.07\n\n  -> SBGOLOB(a)ATTGLOBAL.NET\n\nHi Sam,\n\nThe HSCTOOL is in XMIT format. I made a little documentation in\nthe member $$$$DOC. The member HSCTOOLJ is a sample to compile\nand linkedit the program.\n\n\nThanks for your help !\n\nPhilippe Leite\nMVS Systems Programmer\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE2": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x035\\x7f\\x01\\x10\\x10\\x9f\\x12P\\x00\\x0f\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-12-23T00:00:00", "modifydate": "2010-04-19T12:50:14", "lines": 15, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "Hi Sam,\n\nI received some corrections/bug fixes from Mr. Tom Ritter\nand I'm sending you the updated code.\n\nThank you very much.\n\nBest regards,\n\nPhilippe Leite\nSystems Programmer\nBBVA - Portugal\n\nNew email address:  pbleite@br.ibm.com\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE3": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00I\\x01\\x07 ?\\x01\\x07 ?\\t\\x12\\x00!\\x00\\xbd\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-07-22T00:00:00", "modifydate": "2007-07-22T09:12:49", "lines": 33, "newlines": 189, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  CBT 589\nFrom:     \"Philippe Bernardino Leite \u00ddCE\u00a8 (SSI)\" <philippe.leite@cgd.pt>\nDate:     Thu, 19 Jul 2007 13:56:52 +0100\nTo:       \"Sam Golob\" <sbgolob@cbttape.org>\n\nHi Sam,\n\nI'm sending you a little program that I wrote some time ago, it's\nnamed HERCMD. It's a TSO command processor to issue Hercules\n(MVS emulator) commands, capture the responses and display\nthrough PUTLINE. I'm using DIAG X'0008' to do it. Could you add\nthis program to File 589 ?\n\nBy the way, I forgot to mention in my previous email that I've\nrenamed some members and deleted others in the PDS:\n\n$$$$DOC was renamed to HSCDOC.\n\nIGC0023A was deleted because is no longer used by DEV2VOL and\nVOL2DEV functions. I've converted these programs to use UCBSCAN\ninstead UCBLOOK (through SVC).\n\nMany thanks for all your great work in CBT universe.\n\nAll the best for you and your family.  ;-)\n\nPhilippe Leite\n\nz/OS Systems Programmer\n\nPortugal\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE4": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00D\\x01\\x13\\x16\\x0f\\x01\\x13\\x16\\x0f\\x14\\x04\\x00\\n\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-06-09T00:00:00", "modifydate": "2013-06-09T14:04:44", "lines": 10, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "Update to HERCMD command processor to execute\nHercules commands from TSO.\n\nFixed by Philippe Leite and uploaded to the files section of\nthe Hercules-390 Yahoo group.  (dated April 12, 2012)\n\nUpdated here via phone conversation with the author.  (SBG)\n\nSeems to work fine.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CHANGES": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x00\\x13\\x00\\x13\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "UX90603"}, "text": "  Changes in HSCTOOL since version 1.0.0\n\n Version 1.1.0\n =============\n- Added MOVE funcion\n- Added QCAP funcion\n- Code partially re-written\n\n Version 1.1.2\n =============\n- Some bug fixes in QVOL funcion (HSC@QVOL) from Mr.Tom Ritter (USA)\n\n Version 1.1.4\n =============\n- Some bug fixes and Performance improvements from Mr.Tom Ritter (USA)\n\n Version 1.1.5 (10/07/2007)\n =============\n- Some bug fixes and compatibility changes in QVOL and QCAP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$COPYING": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x02&\\x1f\\x01\\x02&\\x1f\\x17\\x08\\x01T\\x01T\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-18T00:00:00", "modifydate": "2002-09-18T17:08:40", "lines": 340, "newlines": 340, "modlines": 0, "user": "UX90603"}, "text": "\n      GNU GENERAL PUBLIC LICENSE\n         Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                          675 Mass Ave, Cambridge, MA 02139, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n       Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n      GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n       NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n       END OF TERMS AND CONDITIONS\n\n Appendix: How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) 19yy  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) 19yy name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE589": {"ttr": 789, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x00\\x16\\x01\\x13\\x16\\x1f\\x01\\x13\\x16\\x1f\\x00\\x07\\x00O\\x00O\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-06-10T00:00:00", "modifydate": "2013-06-10T00:07:16", "lines": 79, "newlines": 79, "modlines": 0, "user": "CBT-487"}, "text": "//***FILE 589 is from Philippe Leite and contains a REXX function   *   FILE 589\n//*           package to handle STK silo commands.  The package is  *   FILE 589\n//*           called HSCTOOL.  Also added to this file is a TSO     *   FILE 589\n//*           command to issue Hercules commands if MVS is running  *   FILE 589\n//*           under Hercules.  The command is called HERCMD.        *   FILE 589\n//*                                                                 *   FILE 589\n//*    email:  Philippe Leite <pbleite@br.ibm.com>                  *   FILE 589\n//*                                                                 *   FILE 589\n//*    Program:       HSCTOOL                                       *   FILE 589\n//*    Author:        PHILIPPE LEITE                                *   FILE 589\n//*    Objective:     HSC (STORAGETEK) - REXX EXTERNAL FUNCTION     *   FILE 589\n//*    Creation Date: 26/05/2004                                    *   FILE 589\n//*                                                                 *   FILE 589\n//*                   H S C T O O L   Version 1.1.5                 *   FILE 589\n//*                                                                 *   FILE 589\n//*       HSCTOOL is an REXX external function that works as        *   FILE 589\n//*       an interface between a REXX Exec and HSC (StorageTek      *   FILE 589\n//*       Robots). The following features are implemented in        *   FILE 589\n//*       the HSCTOOL:                                              *   FILE 589\n//*                                                                 *   FILE 589\n//*       EJECT    - Eject volume from an ACS.                      *   FILE 589\n//*       MOUNT    - Mount volume.                                  *   FILE 589\n//*       DISMOUNT - Dismount volume.                               *   FILE 589\n//*       MOVE     - Move a Volume to another LSM.                  *   FILE 589\n//*       QCAP     - Query capacity and status of a CAP.            *   FILE 589\n//*       QCONFIG  - Get configuration data.                        *   FILE 589\n//*       QHSC     - Determine HSC status.                          *   FILE 589\n//*       QDSN     - Get Data set information.                      *   FILE 589\n//*       QDRIVES  - Get Drive information.                         *   FILE 589\n//*       QSCRATCH - Get LSM scratch counts.                        *   FILE 589\n//*       QVOLUME  - Get volume status.                             *   FILE 589\n//*       SCRATCH  - Return a volume to scratch status.             *   FILE 589\n//*       UNSCRATCH - Remove a volume from scratch status.          *   FILE 589\n//*                                                                 *   FILE 589\n//*      Illustration of one function:  see member $$$$DOC for      *   FILE 589\n//*      complete details for all functions:                        *   FILE 589\n//*                                                                 *   FILE 589\n//*      EJECT function:                                            *   FILE 589\n//*      ==============                                             *   FILE 589\n//*                                                                 *   FILE 589\n//*      SYNTAX:   HSCTOOL('EJECT','Volume')                        *   FILE 589\n//*                                                                 *   FILE 589\n//*      Variables returned:                                        *   FILE 589\n//*                                                                 *   FILE 589\n//*         RESULT    - Return Code                                 *   FILE 589\n//*         @SLXCMDRC - Return Code (in hex)                        *   FILE 589\n//*         @SLXSRC   - Reason Code (HSC Message Code in hex)       *   FILE 589\n//*                                                                 *   FILE 589\n//*      Possible Return Codes:                                     *   FILE 589\n//*                                                                 *   FILE 589\n//*         00  -  Successful operation.                            *   FILE 589\n//*         08  -  Invalid Parm specified.                          *   FILE 589\n//*         16  -  Operation failed. Look at @SLXSRC for the        *   FILE 589\n//*                reason rode                                      *   FILE 589\n//*         20  -  HSC is not available.                            *   FILE 589\n//*         24  -  User not Authorized. The request was failed      *   FILE 589\n//*                by Exit SLSUX05 or the HSC Default               *   FILE 589\n//*                authorization.                                   *   FILE 589\n//*         50  -  Invalid Return Code by SLSXCAL.                  *   FILE 589\n//*         60  -  Error in SET Varibles CSECT.                     *   FILE 589\n//*                                                                 *   FILE 589\n//*      Example:                                                   *   FILE 589\n//*                                                                 *   FILE 589\n//*      /* rexx */                                                 *   FILE 589\n//*                                                                 *   FILE 589\n//*      result = HSCTOOL('EJECT','011000')                         *   FILE 589\n//*      if result = 0 then say \"Eject successful\"                  *   FILE 589\n//*                                                                 *   FILE 589\n//*      -------------------------------------------------------    *   FILE 589\n//*                                                                 *   FILE 589\n//*      Description of HERCMD.                                     *   FILE 589\n//*                                                                 *   FILE 589\n//*         TSO command processor to issue Hercules commands        *   FILE 589\n//*         through Diagnose instruction (function code x'008')     *   FILE 589\n//*         and display response from Hercules virtual machine.     *   FILE 589\n//*         The Hercules parameter diag8cmd must be enabled.        *   FILE 589\n//*                                                                 *   FILE 589\n//*      Example:  TSO HERCMD ATTACH 0A90 3390 disk.0a90            *   FILE 589\n//*                                                                 *   FILE 589\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEV2VOL": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x00\\xb9\\x00\\xb9\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 185, "newlines": 185, "modlines": 0, "user": "UX90603"}, "text": "DEV2VOL  CSECT\nDEV2VOL  AMODE 31\nDEV2VOL  RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING DEV2VOL,R12\n         MODID ,\n**********************************************************************\n* PROGRAM: DEV2VOL                                                   *\n*                                                                    *\n* AUTHOR: PHILIPPE LEITE                                             *\n*                                                                    *\n* OBJECTIVE: REXX EXTERNAL FUNCTION TO CONVERT DEVICE NUMBER TO      *\n*            VOLUME SERIAL.                                          *\n*                                                                    *\n* VARIABLES RETURNED:                                                *\n*                                                                    *\n*   @DEV2VOL - VOLUME SERIAL                                         *\n*                                                                    *\n*  POSSIBLE RETURN CODES:                                            *\n*                                                                    *\n*   00 - SUCCESSFUL EXECUTION                                        *\n*   04 - UCB NOT FOUND                                               *\n*   08 - DEVICE IS OFFLINE                                           *\n*   16 - INVALID PARAMETER                                           *\n*                                                                    *\n* EXAMPLE:                                                           *\n*                                                                    *\n*      /* REXX */                                                    *\n*      RC = DEV2VOL('E774')                                          *\n*      IF RC = 0 THEN SAY @DEV2VOL                                   *\n*                                                                    *\n* CREATION DATE: 27/05/2004                                          *\n*                                                                    *\n**********************************************************************\n         LR    R7,R0              SAVE ENV BLOCK ADDRESS\n         LR    R9,R1              SAVE EFPL ADDRESS\n         USING EFPL,R9\n*\n         STORAGE OBTAIN,LENGTH=WAREALEN\n         LR    R8,R1\n         USING WKAREA,R8\n*\n         USING ENVBLOCK,R7          SET ADDRESSABILITY TO ENVBLOCK\n         L     R6,ENVBLOCK_IRXEXTE  EXTERNAL ENTRY VECTOR ADDRESS\n         USING IRXEXTE,R6           SET ADDRESSABILITY TO EXTE\n         L     R0,IRXEXCOM          IRXEXCOM ENTRY ADDRESS\n         ST    R0,IRXEXCO@\n         DROP  R6\n         DROP  R7\n*\n         L     R10,EFPLARG\n         USING ARGTABLE_ENTRY,R10\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'4'           PARAMETER LENGTH = 4 ?\n         JE    CONTMOVD\n         MVC   RETRCODE,=F'16'    NO, SET RC = 16\n         J     CONVRETR\nCONTMOVD EQU   *\n         MVC   DEVICE,0(R5)\n         TR    DEVICE(4),CHRTABLE\n         PACK  DEVICE(4),DEVICE(4)\n         L     R5,DEVICE\n         SRL   R5,4\n         STH   R5,DEV\n*\nSCANLOOP EQU   *\n         UCBSCAN COPY,                                                 X\n               DEVN=DEV,                                               X\n               UCBAREA=UCBCOPY,                                        X\n               WORKAREA=SCANWORK,                                      X\n               DYNAMIC=YES,                                            X\n               NONBASE=NO,                                             X\n               RANGE=ALL,                                              X\n               DEVCLASS=DASD,                                          X\n               MF=(E,UCBSCANL)\n         ST    R15,RETRCODE\n         LA    R11,UCBCOPY\n         USING UCBCMSEG,R11\n         CLC   DEV,UCBCHAN        DEVICE EXISTS ?\n         JE    CONTCHAN\n         LA    R0,4               NO, SET RC = 4\n         ST    R0,RETRCODE\n         J     CONVRETR\nCONTCHAN EQU   *\n         TM    UCBSTAT,UCBONLI    DEVICE IS ONLINE ?\n         JO    CONTSCAN\n         LA    R0,8               NO, SET RC = 8\n         ST    R0,RETRCODE\n         J     CONVRETR\nCONTSCAN EQU   *\n         MVC   VOLUME,UCBVOLI     MOVE VOLSER\n*\nCONVRETR EQU   *\n         L     R11,EFPLEVAL\n         L     R11,0(R11)\n         USING EVALBLOCK,R11\n         L     R5,RETRCODE\n         CVD   R5,PACKCODE\n         UNPK  EBCDCODE,PACKCODE\n         OC    EBCDCODE,=2X'F0'\n         MVC   EVALBLOCK_EVLEN,=F'2'\n         MVC   EVALBLOCK_EVDATA(2),EBCDCODE\n         LTR   R5,R5\n         BNZ   ENDD2V\n*\nCONTSETV EQU   *\n         LA    R7,PARAM4\n         USING SHVBLOCK,R7\n         MVC   NAMEVAR,=C'@DEV2VOL'    SET VARIABLE NAME\n         MVC   SHVNAML,=F'8'           SET VARIABLE NAME LENGTH\n         MVC   SHVVALL,=F'6'           SET VARIABLE LENGTH\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,VOLUME\n         ST    R15,SHVVALA\n         BAS   R6,DEV@SETV\n*\nENDD2V   EQU   *\n         STORAGE RELEASE,LENGTH=WAREALEN,ADDR=(R8)\n         XR    R15,R15\n         PR\nDEV@SETV EQU   *\n         MVC   PARAM1,=C'IRXEXCOM'\n         MVI   SHVCODE,C'S'\n         L     R15,IRXEXCO@\n         CALL  (15),(PARAM1,0,0,PARAM4),VL,MF=(E,EXCOPLST)\n         BR    R6\n*\n         YREGS\n         LTORG\n*---------------------------------------------------------------------*\n*  WORK AREA                                                          *\n*---------------------------------------------------------------------*\nCHRTABLE DC    X'00000000000000000000000000000000'   00-0F\n         DC    X'00000000000000000000000000000000'   10-1F\n         DC    X'00000000000000000000000000000000'   20-2F\n         DC    X'00000000000000000000000000000000'   30-3F\n         DC    X'00000000000000000000000000000000'   40-4F\n         DC    X'00000000000000000000000000000000'   50-5F\n         DC    X'00000000000000000000000000000000'   60-6F\n         DC    X'00000000000000000000000000000000'   70-7F\n         DC    X'000A0B0C0D0E0F000000000000000000'   80-8F\n         DC    X'00000000000000000000000000000000'   90-9F\n         DC    X'00000000000000000000000000000000'   A0-AF\n         DC    X'00000000000000000000000000000000'   B0-BF\n         DC    X'000A0B0C0D0E0F000000000000000000'   C0-CF\n         DC    X'00000000000000000000000000000000'   D0-DF\n         DC    X'00000000000000000000000000000000'   E0-EF\n         DC    X'00010203040506070809000000000000'   F0-FF\n*---------------------------------------------------------------------*\n*  DSECT WORK AREA                                                    *\n*---------------------------------------------------------------------*\nWKAREA   DSECT\nPACKCODE DS    PL8\nEBCDCODE DS    CL2\nRETRCODE DS    F\nIRXEXCO@ DS    F\nEXCOPLST DS    4F\nNAMEVAR  DS    CL8\nDEVICE   DS    CL4\nDEV      DS    H\nVOLUME   DS    CL6\nTOKEN    DS    CL48\nUCBCOPY  DS    CL48\nSCANWORK DS    CL100\n* IRXEXCOM PARAMETER AREA\nPARAM1   DS    CL8\nPARAM2   DS    A\nPARAM3   DS    A\nPARAM4   DS    XL32\n         UCBSCAN MF=(L,UCBSCANL)\nWAREALEN EQU   *-WKAREA\n*---------------------------------------------------------------------*\n*  DSECTS AREA                                                        *\n*---------------------------------------------------------------------*\n         IRXEFPL\n         IRXENVB\n         IRXEXTE\n         IRXSHVB\n         IRXARGTB\n         IRXEVALB\n         IEFUCBOB DEVCLAS=DA\n         END   DEV2VOL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HERCMD": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x13\\x16\\x0f\\x01\\x13\\x16\\x0f\\x13S\\x00\\x98\\x00\\x98\\x00\\x00\\xd7`\\xd3\\xc5\\xc9\\xe3\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-06-09T00:00:00", "modifydate": "2013-06-09T13:53:25", "lines": 152, "newlines": 152, "modlines": 0, "user": "P-LEITE"}, "text": "***********************************************************************\n* PROGRAM: HERCMD                                                     *\n* AUTHOR: PHILIPPE LEITE                                              *\n* DATE: 31/05/2006                                                    *\n* DESCRIPTION:                                                        *\n*    TSO COMMAND PROCESSOR TO ISSUE HERCULES COMMANDS THROUGH         *\n*    DIAGNOSE INTRUCTION (FUNCTION CODE X'008').                      *\n*    THE HERCULES PARAMETER DIAG8CMD MUST BE ENABLED.                 *\n*                                                                     *\n* EXAMPLE:  TSO HERCMD ATTACH 0A90 3390 DISK.0A90                     *\n*                                                                     *\n* NOTES:                                                              *\n*                                                                     *\n*       1) This program must be authorized in SYS1.PARMLIB(IKJTSO00)  *\n*       2) Linkage editor parameters: RENT,REUS,AC(1)                 *\n*                                                                     *\n***********************************************************************\nHERCMD   CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         USING HERCMD,R12\n         STM   R14,R12,12(R13)    Save registers\n         LR    R12,R15            Base register\n         LR    R11,R13            Save SArea address\n         LR    R7,R1              Save PARM Address\n         MODESET MODE=SUP,KEY=ZERO Change to supervisor mode, key zero\n         GETMAIN RU,LV=WRKLEN,SP=245,BNDRY=PAGE  Get SQA Fixed area\n         LR    R10,R1             Copy Getmained address\n         USING WORKAREA,R10\n         LA    R13,SAVEAREA\n         ST    R13,8(R11)\n         ST    R11,4(R13)\n*\n         L     R2,4(R7)           SAVE UPT PTR FOR PUTLINE\n         L     R3,12(R7)          SAVE ECT PTR  ..   ..\n         LA    R4,TSOECB          SAVE ECB PTR  ..   ..\n         LA    R5,IOPB            SAVE IOPB PTR ..   ..\n         STM   R2,R5,IOPL\n*\n* Command Buffer Layout:\n*\n*  +--------+--------+---------------------+\n*  | Length | offset |  Text               |\n*  +--------+--------+---------------------+\n*   2 bytes  2 bytes\n*  |______________ length _________________|\n*\n*\n         L     R2,0(R7)           Load Command buffer address from CPPL\n         LH    R4,0(R2)           Load length in R4\n         LA    R6,10\n         SR    R4,R6              subtract 10 from length\n         LTR   R4,R4              Test ZERO\n         BZ    FIM1               Yes, go to end\n         BCTR  R4,0               subtract 1 from length\n         LA    R2,11(R2)          Add  11 to find command start\n         BCTR  R4,0               subtract 1 to Execute\n         EX    R4,MOVEBUFF        Move command string\n         LA    R4,1(R4)           add 1 to correct length\n         O     R4,=X'40000000'    Turn on RESPONSE flag\n*ERR     LRA   R2,0(R2)           Load Command buffer REAL address\n         LRA   R2,BUFFER          Load Comm. buffer Fixed REAL address\n         LRA   R3,RESULT          Load Response buffer REAL address\n         L     R5,=A(MAXRLEN)     Load MAX Response Length\n*  DIAG INSTRUCTION (NO MNEMONIC AVAILABLE IN HLA)\n         DC    X'83'              OPCODE\n         DC    X'24'              Parameters in Regs R2, R3, R4 and R5\n         DC    X'0008'            DIAG FUNCTION CODE\n         BC    8,CONT0            Test PSW CC to check if\n*                                  resplen>maxrlen (vm.c)\n         XC    TSOECB,TSOECB\n         PUTLINE OUTPUT=(MSG1L,SINGLE,DATA),MF=(E,IOPL)\nCONT0    EQU   *\n*\n*  Display command response\n*\n         LTR   R5,R5              Check if response exists\n         BZ    FIM2               No, go to end\n         LA    R6,RESULT          Load response buffer address\n         LR    R2,R6              Copy to R2\nLOOP1    EQU   *\n         CLI   0(R6),X'00'        Check if end of buffer\n         BE    FIM                Yes, go to end\n         CLI   0(R6),X'25'        Check if end of line\n         BNE   CONT1              No, go to next byte\n         LR    R8,R6              Copy to R8\n         SR    R8,R2              Compute line length\n         C     R8,=F'256'         Check if line length > 256\n         BNH   CONT256            NO, continue\n         LA    R8,256             Load max line length\nCONT256  EQU   *\n         LA    R4,4\n         AR    R4,R8              Add 4 to length - PUTLINE\n         STH   R4,LENGTH          Save in PUTLINE buffer length\n         BCTR  R8,0               Subtract 1 to EXECUTE\n         EX    R8,MOVEBUFF        Move line to PUTLINE buffer\n         XC    TSOECB,TSOECB      Clear ECB\n         PUTLINE OUTPUT=(LENGTH,SINGLE,DATA),MF=(E,IOPL)\n         LA    R6,1(R6)           Next byte\n         LR    R2,R6              Restablish base address for next line\n         B     LOOP1              Go back to LOOP\nCONT1    EQU   *\n         LA    R6,1(R6)           Next byte\n         B     LOOP1              Go back to LOOP\nFIM      EQU   *\n         L     R13,SAVEAREA+4     Load SArea address\n         FREEMAIN RU,LV=WRKLEN,SP=245,A=(R10)\n         LM    R14,R12,12(R13)    Restore registers\n         SR    R15,R15            Reset R15\n         BR    R14                Go back to OS\nFIM1     EQU   *\n         XC    TSOECB,TSOECB      Clear ECB\n         PUTLINE OUTPUT=(MSG2L,SINGLE,DATA),MF=(E,IOPL)\n         B     FIM\nFIM2     EQU   *\n         XC    TSOECB,TSOECB      Clear ECB\n         PUTLINE OUTPUT=(MSG3L,SINGLE,DATA),MF=(E,IOPL)\n         B     FIM\nMOVEBUFF MVC   BUFFER(0),0(R2)\nMSG1L    DC    Y(L'MSG1+4),Y(0)\nMSG1     DC    C'*** Response length is higher than local buffer ***'\nMSG2L    DC    Y(L'MSG2+4),Y(0)\nMSG2     DC    C'*** No parameters passed ***'\nMSG3L    DC    Y(L'MSG3+4),Y(0)\nMSG3     DC    C'*** No command result ***'\n         LTORG\n* Work Area\nWORKAREA DSECT\nSAVEAREA DS    9D\nIOPB     PUTLINE MF=L\nTSOECB   DS    F\nIOPL     DS    4F\nLENGTH   DS    H\n         DS    H\nBUFFER   DS    CL256              General buffer\nMAXRLEN  EQU   (8192-(*-WORKAREA))\nRESULT   DS    (MAXRLEN)C         Response buffer\nWRKLEN   EQU   *-WORKAREA         Length\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HERCMD$": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x05\\x01\\x126?\\x01\\x13\\x16\\x0f\\x14I\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2012-12-28T00:00:00", "modifydate": "2013-06-09T14:49:05", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT487.FILE589(HERCMD)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT,REUS'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n ORDER   HERCMD\n SETSSI  CB487589\n SETCODE AC(1)\n ENTRY   HERCMD\n NAME    HERCMD(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@DISM": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00A\\x01\\x02!O\\x01\\x034\\x9f\\x10I\\x00\\xa1\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:49:41", "lines": 161, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@DISM CSECT\nHSC@DISM AMODE 31\nHSC@DISM RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@DISM,R12\n***********************************************************************\n* DISMOUNT FUNCTION IMPLEMENTATION                                    *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'4'\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEADDR\n         TR    DRIVEADR(4),CHRTABLE\n         PACK  DRIVEADR(4),DRIVEADR(4)\n         L     R5,DRIVEADR\n         SRL   R5,4\n         STH   R5,CUAADDR\n*\n         SLSXREQ DISMOUNT,                                             X\n               OPTION=SYNCH,                                           X\n               DRIVE=CUAADDR,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERRODISM                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         L     R4,SLXXVOLL\n         L     R2,SLXXVOLO\n         LA    R2,SLX(2)\n         USING SLXSVOL,R2\n         BAS   R6,SETVAR\n         PR\n*\nERRODISM EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         BR    R6\nMOVEADDR MVC   DRIVEADR(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\nCHRTABLE DC    X'00000000000000000000000000000000'   00-0F\n         DC    X'00000000000000000000000000000000'   10-1F\n         DC    X'00000000000000000000000000000000'   20-2F\n         DC    X'00000000000000000000000000000000'   30-3F\n         DC    X'00000000000000000000000000000000'   40-4F\n         DC    X'00000000000000000000000000000000'   50-5F\n         DC    X'00000000000000000000000000000000'   60-6F\n         DC    X'00000000000000000000000000000000'   70-7F\n         DC    X'000A0B0C0D0E0F000000000000000000'   80-8F\n         DC    X'00000000000000000000000000000000'   90-9F\n         DC    X'00000000000000000000000000000000'   A0-AF\n         DC    X'00000000000000000000000000000000'   B0-BF\n         DC    X'000A0B0C0D0E0F000000000000000000'   C0-CF\n         DC    X'00000000000000000000000000000000'   D0-DF\n         DC    X'00000000000000000000000000000000'   E0-EF\n         DC    X'00010203040506070809000000000000'   F0-FF\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@DISM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@EJCT": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00W\\x01\\x02!O\\x01\\x034\\x9f\\x10I\\x00\\x88\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:49:57", "lines": 136, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@EJCT CSECT\nHSC@EJCT AMODE 31\nHSC@EJCT RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@EJCT,R12\n***********************************************************************\n* EJECT   FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n*\n         SLSXREQ EJECT,                                                X\n               OPTION=SYNCH,                                           X\n               VOLSER=VOLUME,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROEJCT                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         BAS   R6,SETVAR\n         PR\nERROEJCT EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R6\n*\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         YREGS\n         END   HSC@EJCT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@MONT": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00\\x11\\x01\\x02!O\\x01\\x034\\x9f\\x10P\\x00\\xb9\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:50:11", "lines": 185, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@MONT CSECT\nHSC@MONT AMODE 31\nHSC@MONT RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@MONT,R12\n***********************************************************************\n* MOUNT   FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'4'                IF DRIVE > 4 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEADDR\n         TR    DRIVEADR(4),CHRTABLE\n         PACK  DRIVEADR(4),DRIVEADR(4)\n         L     R5,DRIVEADR\n         SRL   R5,4\n         STH   R5,CUAADDR\n*\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n         CLC   VOLUME(7),=C'SCRATCH'\n         BE    SCRATCH\n*\n         SLSXREQ MOUNT,                                                X\n               OPTION=SYNCH,                                           X\n               DRIVE=CUAADDR,                                          X\n               VOLSER=VOLUME,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         B     CONTMONT\nSCRATCH  EQU   *\n         SLSXREQ MOUNT,                                                X\n               OPTION=SYNCH,                                           X\n               DRIVE=CUAADDR,                                          X\n               SCRATCH=YES,                                            X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\nCONTMONT EQU   *\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROMONT                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         L     R4,SLXXVOLL\n         L     R2,SLXXVOLO\n         LA    R2,SLX(2)\n         USING SLXSVOL,R2\n         BAS   R6,SETVAR\n         PR\nERROMONT EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         BR    R6\nMOVEADDR MVC   DRIVEADR(0),0(R5)\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\nCHRTABLE DC    X'00000000000000000000000000000000'   00-0F\n         DC    X'00000000000000000000000000000000'   10-1F\n         DC    X'00000000000000000000000000000000'   20-2F\n         DC    X'00000000000000000000000000000000'   30-3F\n         DC    X'00000000000000000000000000000000'   40-4F\n         DC    X'00000000000000000000000000000000'   50-5F\n         DC    X'00000000000000000000000000000000'   60-6F\n         DC    X'00000000000000000000000000000000'   70-7F\n         DC    X'000A0B0C0D0E0F000000000000000000'   80-8F\n         DC    X'00000000000000000000000000000000'   90-9F\n         DC    X'00000000000000000000000000000000'   A0-AF\n         DC    X'00000000000000000000000000000000'   B0-BF\n         DC    X'000A0B0C0D0E0F000000000000000000'   C0-CF\n         DC    X'00000000000000000000000000000000'   D0-DF\n         DC    X'00000000000000000000000000000000'   E0-EF\n         DC    X'00010203040506070809000000000000'   F0-FF\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@MONT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@MOVE": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x18\\x01\\x02%?\\x01\\x034\\x9f\\x10P\\x00\\xa9\\x00\\x81\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "2002-09-10T00:00:00", "modifydate": "2003-12-15T10:50:18", "lines": 169, "newlines": 129, "modlines": 0, "user": "UX90603"}, "text": "HSC@MOVE CSECT\nHSC@MOVE AMODE 31\nHSC@MOVE RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@MOVE,R12\n***********************************************************************\n* MOVE    FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n*\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'4'                IF LSMID > 4 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEADDR\n         TR    DRIVEADR(4),CHRTABLE\n         PACK  DRIVEADR(4),DRIVEADR(4)\n         L     R5,DRIVEADR\n         SRL   R5,4\n         STH   R5,TOLSMID\n*\n         SLSXREQ MOVE,                                                 X\n               OPTION=SYNCH,                                           X\n               VOLSER=VOLUME,                                          X\n               TOLSM=TOLSMID,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROMOVE                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         BAS   R6,SETVAR\n         PR\nERROMOVE EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R6\n*\nMOVEADDR MVC   DRIVEADR(0),0(R5)\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\nCHRTABLE DC    X'00000000000000000000000000000000'   00-0F\n         DC    X'00000000000000000000000000000000'   10-1F\n         DC    X'00000000000000000000000000000000'   20-2F\n         DC    X'00000000000000000000000000000000'   30-3F\n         DC    X'00000000000000000000000000000000'   40-4F\n         DC    X'00000000000000000000000000000000'   50-5F\n         DC    X'00000000000000000000000000000000'   60-6F\n         DC    X'00000000000000000000000000000000'   70-7F\n         DC    X'000A0B0C0D0E0F000000000000000000'   80-8F\n         DC    X'00000000000000000000000000000000'   90-9F\n         DC    X'00000000000000000000000000000000'   A0-AF\n         DC    X'00000000000000000000000000000000'   B0-BF\n         DC    X'000A0B0C0D0E0F000000000000000000'   C0-CF\n         DC    X'00000000000000000000000000000000'   D0-DF\n         DC    X'00000000000000000000000000000000'   E0-EF\n         DC    X'00010203040506070809000000000000'   F0-FF\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         YREGS\n         END   HSC@MOVE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QCAP": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x02'\\x02'\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 551, "newlines": 551, "modlines": 0, "user": "UX90603"}, "text": "HSC@QCAP CSECT\nHSC@QCAP AMODE 31\nHSC@QCAP RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QCAP,R12\n***********************************************************************\n* QDRIVES  FUNCTION IMPLEMENTATION                                    *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QCAP,                                                 X\n               OPTION=SYNCH,                                           X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQCAP                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R5,SLXXCAPN\n         L     R4,SLXXCAPL\n         L     R2,SLXXCAPO\n         LA    R2,SLX(2)\n         USING SLXSCAP,R2\n         BAS   R6,SETVAR\n         PR\nERROQCAP EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n         ZAP   STEMCONT(2),=P'1'\n*\n* SET VARIABLE @SLXCACS.0 => NUMBER OF ENTRIES\n*\n         MVC   NAMEVAR(10),=C'@SLXCACS.0'\n         MVC   SHVNAML(4),=F'10'\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\nNEXTSTEM EQU   *\n*\n* SET STEM @SLXCACS.  => ACS ID\n*\n         MVC   NAMEVAR(11),=C'@SLXCACS.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCAC1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTCAC2\nCONTCAC1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTCAC2 EQU   *\n         MVC   HEXNUMBR(1),SLXCACS\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCLSM => LSM ID\n*\n         MVC   NAMEVAR(11),=C'@SLXCLSM.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCLS1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTCLS2\nCONTCLS1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTCLS2 EQU   *\n         MVC   HEXNUMBR(1),SLXCLSM\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCCAP => CAP ID\n*\n         MVC   NAMEVAR(11),=C'@SLXCCAP.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCCA1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTCCA2\nCONTCCA1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTCCA2 EQU   *\n         MVC   HEXNUMBR(1),SLXCCAP\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCSTCA => ACTIVE STATUS\n*\n         MVC   NAMEVAR(12),=C'@SLXCSTCA.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTSTC1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTSTC2\nCONTSTC1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTSTC2 EQU   *\n         TM    SLXCSTB1,SLXCSTCA        CAP IS ACTIVE ?\n         BNO   CONTSTCA\n         MVC   VALUEVAR(3),=C'YES'      SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'         SET VARIABLE LENGTH\n         BAS   R8,HSCSETV               CALL HSC@SETV\n         B     STSTNR\nCONTSTCA EQU   *\n         MVC   VALUEVAR(2),=C'NO'       SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCSTNR => 'NEEDS RECOVERY' STATUS\n*\nSTSTNR   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCSTNR.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTSTN1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTSTN2\nCONTSTN1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTSTN2 EQU   *\n         TM    SLXCSTB1,SLXCSTNR       CAP NEEDS RECOVERY ?\n         BNO   CONTSTNR\n         MVC   VALUEVAR(3),=C'YES'     SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'        SET VARIABLE LENGTH\n         BAS   R8,HSCSETV              CALL HSC@SETV\n         B     STSTAM\nCONTSTNR EQU   *\n         MVC   VALUEVAR(2),=C'NO'      SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCSTAM => AUTOMATIC STATUS\n*\nSTSTAM   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCSTAM.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTSTA1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTSTA2\nCONTSTA1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTSTA2 EQU   *\n         TM    SLXCSTB1,SLXCSTAM       CAP IS IN AUTOMATIC MODE ?\n         BNO   CONTSTAM\n         MVC   VALUEVAR(3),=C'YES'     SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'        SET VARIABLE LENGTH\n         BAS   R8,HSCSETV              CALL HSC@SETV\n         B     STSTCL\nCONTSTAM EQU   *\n         MVC   VALUEVAR(2),=C'NO'      SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCSTCL => LINKED STATUS\n*\nSTSTCL   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCSTCL.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTSTL1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTSTL2\nCONTSTL1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTSTL2 EQU   *\n         TM    SLXCSTB1,SLXCSTCL       CAP IS LINKED ?\n         BNO   CONTSTCL\n         MVC   VALUEVAR(3),=C'YES'     SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'        SET VARIABLE LENGTH\n         BAS   R8,HSCSETV              CALL HSC@SETV\n         B     STSTCO\nCONTSTCL EQU   *\n         MVC   VALUEVAR(2),=C'NO'      SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCSTCO => ONLINE STATUS\n*\nSTSTCO   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCSTCO.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTSTO1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTSTO2\nCONTSTO1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTSTO2 EQU   *\n         TM    SLXCSTB1,SLXCSTCO       CAP IS ONLINE ?\n         BNO   CONTSTCO\n         MVC   VALUEVAR(3),=C'YES'     SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'        SET VARIABLE LENGTH\n         BAS   R8,HSCSETV              CALL HSC@SETV\n         B     STMODE\nCONTSTCO EQU   *\n         MVC   VALUEVAR(2),=C'NO'      SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCMODE = CAP MODE\n*\nSTMODE   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCMODE.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMOD1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTMOD2\nCONTMOD1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTMOD2 EQU   *\n         TM    SLXCSTB2,SLXCSTIE       CAP IS ENTERING ?\n         BNO   CONTSTIE\n         MVC   VALUEVAR(8),=C'ENTERING' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'        SET VARIABLE LENGTH\nCONTSTIE EQU   *\n         TM    SLXCSTB2,SLXCSTID       CAP IS DRAINING ?\n         BNO   CONTSTID\n         MVC   VALUEVAR(8),=C'DRAINING' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'        SET VARIABLE LENGTH\nCONTSTID EQU   *\n         TM    SLXCSTB2,SLXCSTIJ       CAP IS EJECTING ?\n         BNO   CONTSTIJ\n         MVC   VALUEVAR(8),=C'EJECTING' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'        SET VARIABLE LENGTH\nCONTSTIJ EQU   *\n         TM    SLXCSTB2,SLXCSTIC       CAP IS CLEANING ?\n         BNO   CONTSTIC\n         MVC   VALUEVAR(8),=C'CLEANING' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'        SET VARIABLE LENGTH\nCONTSTIC EQU   *\n         TM    SLXCSTB2,SLXCSTII       CAP IS IDLE ?\n         BNO   CONTSTII\n         MVC   VALUEVAR(4),=C'IDLE'    SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'4'        SET VARIABLE LENGTH\nCONTSTII EQU   *\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCTYPE => CAP TYPE\n*\nSTTYPE   EQU   *\n         MVC   NAMEVAR(12),=C'@SLXCTYPE.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTTYP1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTTYP2\nCONTTYP1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTTYP2 EQU   *\n         UNPK  BCDNUMBR(3),SLXCTYPE(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'        SET VARIABLE LENGTH\n*\n         CLI   SLXCTYPE,SLXCTPC        PRIORITY CAP ?\n         BNE   CONTTPC\n         MVC   VALUEVAR(12),=C'PRIORITY CAP' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'12'       SET VARIABLE LENGTH\nCONTTPC  EQU   *\n         CLI   SLXCTYPE,SLXCTCIM       CIMARRON ?\n         BNE   CONTTCIM\n         MVC   VALUEVAR(8),=C'CIMARRON' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'        SET VARIABLE LENGTH\nCONTTCIM EQU   *\n         CLI   SLXCTYPE,SLXCTCLP       CLIPPER ?\n         BNE   CONTTCLP\n         MVC   VALUEVAR(7),=C'CLIPPER' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'7'        SET VARIABLE LENGTH\nCONTTCLP EQU   *\n         CLI   SLXCTYPE,SLXCTTWS       STANDARD CLIPPER ?\n         BNE   CONTTTWS\n         MVC   VALUEVAR(16),=C'STANDARD CLIPPER' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'16'       SET VARIABLE LENGTH\nCONTTTWS EQU   *\n         CLI   SLXCTYPE,SLXCTTWO       OPTIONAL CLIPPER ?\n         BNE   CONTTTWO\n         MVC   VALUEVAR(16),=C'OPTIONAL CLIPPER' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'16'       SET VARIABLE LENGTH\nCONTTTWO EQU   *\n         CLI   SLXCTYPE,SLXCTTIM       TIMBERWOLF (9740) ?\n         BNE   CONTTTIM\n         MVC   VALUEVAR(17),=C'TIMBERWOLF (9740)' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'17'       SET VARIABLE LENGTH\nCONTTTIM EQU   *\n         CLI   SLXCTYPE,X'07'         SL8500 ?\n         BNE   CONTTTI2\n         MVC   VALUEVAR(6),=C'SL8500' SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'6'       SET VARIABLE LENGTH\nCONTTTI2 EQU   *\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCCELL => NUMBER OF CELLS IN CAP\n*\n         MVC   NAMEVAR(12),=C'@SLXCCELL.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCCE1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTCCE2\nCONTCCE1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTCCE2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0011',SLXCCELL\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(4),DECNUMBR(8)\n         OC    BCDNUMBR(4),=4X'F0'\n         MVC   VALUEVAR(4),BCDNUMBR\n         MVC   SHVVALL(4),=F'4'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCNROW => NUMBER OF ROWS\n*\n         MVC   NAMEVAR(12),=C'@SLXCNROW.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTNRO1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTNRO2\nCONTNRO1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTNRO2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0001',SLXCNROW\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(4),DECNUMBR(8)\n         OC    BCDNUMBR(4),=4X'F0'\n         MVC   VALUEVAR(4),BCDNUMBR\n         MVC   SHVVALL(4),=F'4'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCNCOL => NUMBER OF COLUMNS\n*\n         MVC   NAMEVAR(12),=C'@SLXCNCOL.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTNCO1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTNCO2\nCONTNCO1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTNCO2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0001',SLXCNCOL\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(4),DECNUMBR(8)\n         OC    BCDNUMBR(4),=4X'F0'\n         MVC   VALUEVAR(4),BCDNUMBR\n         MVC   SHVVALL(4),=F'4'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCCMAG => NUMBER OF MAGAZINES\n*\n         MVC   NAMEVAR(12),=C'@SLXCCMAG.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCMA1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTCMA2\nCONTCMA1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTCMA2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0001',SLXCCMAG\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(4),DECNUMBR(8)\n         OC    BCDNUMBR(4),=4X'F0'\n         MVC   VALUEVAR(4),BCDNUMBR\n         MVC   SHVVALL(4),=F'4'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXCCMGC => NUMBER OF CELLS IN MAGAZINE\n*\n         MVC   NAMEVAR(12),=C'@SLXCCMGC.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTCMG1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTCMG2\nCONTCMG1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTCMG2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0001',SLXCCMGC\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(4),DECNUMBR(8)\n         OC    BCDNUMBR(4),=4X'F0'\n         MVC   VALUEVAR(4),BCDNUMBR\n         MVC   SHVVALL(4),=F'4'\n         BAS   R8,HSCSETV\n*\n         LA    R2,SLXSCAPL(,R2)        NEXT DSN ELEMENT\n         AP    STEMCONT(2),=P'1'\n         BCT   R5,NEXTSTEM\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\nSETVARER EQU   *\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         BAS   R8,HSCSETV\n*\n         BR    R6\n*\n*     CALL HSC@SETV (SET VARIABLE ROUTINE)\n*\nHSCSETV  EQU   *\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R8\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QCAP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QCON": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1a\\x004\\x01\\x02!O\\x01\\x034\\x9f\\x10P\\x01\\x1f\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.26", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:50:34", "lines": 287, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@QCON CSECT\nHSC@QCON AMODE 31\nHSC@QCON RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QCON,R12\n***********************************************************************\n* QCONFIG FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QCONFIG,                                              X\n               OPTION=SYNCH,                                           X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQCON                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R4,SLXXCFGL\n         L     R2,SLXXCFGO\n         LA    R2,SLX(2)\n         USING SLXSCFG,R2\n         BAS   R6,SETVAR\n         PR\nERROQCON EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXLHNAM => HOST ID\n*\n         MVC   NAMEVAR(9),=C'@SLXLHNAM'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(8),SLXLHNAM\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXLCMPF => COMMAND PREFIX CHARACTER\n*\n         MVC   NAMEVAR(9),=C'@SLXLCMPF'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(1),SLXLCMPF\n         MVC   SHVVALL(4),=F'1'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXLQNAM => ENQ MAJOR NAME\n*\n         MVC   NAMEVAR(9),=C'@SLXLQNAM'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(8),SLXLQNAM\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXLSMF => SMF RECORD NUMBER\n*\n         MVC   NAMEVAR(9),=C'@SLXLSMF'\n         MVC   SHVNAML(4),=F'8'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         ICM   R4,B'0001',SLXLSMF\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(3),DECNUMBR(8)\n         OC    VALUEVAR(3),=X'F0F0F0'\n         MVC   SHVVALL(4),=F'3'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXQMDR => LARGEST NUMBER OF DRIVES IN ANY ACS\n*\n         MVC   NAMEVAR(9),=C'@SLXQMDR'\n         MVC   SHVNAML(4),=F'8'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         L     R4,SLXQMDR\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(4),DECNUMBR(8)\n         OC    VALUEVAR(4),=X'F0F0F0F0'\n         MVC   SHVVALL(4),=F'4'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXQDRCT => NUMBER OF DRIVES IN THE LIBRARY\n*\n         MVC   NAMEVAR(9),=C'@SLXQDRCT'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         L     R4,SLXQDRCT\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(4),DECNUMBR(8)\n         OC    VALUEVAR(4),=X'F0F0F0F0'\n         MVC   SHVVALL(4),=F'4'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXQACNT => NUMBER OF ACS'S IN THE LIBRARY\n*\n         MVC   NAMEVAR(9),=C'@SLXQACNT'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         L     R4,SLXQACNT\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(4),DECNUMBR(8)\n         OC    VALUEVAR(4),=X'F0F0F0F0'\n         MVC   SHVVALL(4),=F'4'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXQLCNT => NUMBER OF LSM'S IN THE LIBRARY\n*\n         MVC   NAMEVAR(9),=C'@SLXQLCNT'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         L     R4,SLXQLCNT\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(4),DECNUMBR(8)\n         OC    VALUEVAR(4),=X'F0F0F0F0'\n         MVC   SHVVALL(4),=F'4'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXQLCAP => NUMBER OF CAP'S IN THE LIBRARY\n*\n         MVC   NAMEVAR(9),=C'@SLXQLCAP'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         L     R4,SLXQLCAP\n         CVD   R4,DECNUMBR\n         UNPK  VALUEVAR(4),DECNUMBR(8)\n         OC    VALUEVAR(4),=X'F0F0F0F0'\n         MVC   SHVVALL(4),=F'4'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\nSETVARER EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         BR    R6\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QCON\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QDRV": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00B\\x01\\x02$\\x7f\\x01\\x034\\x9f\\x10P\\x00\\xe1\\x01\\x11\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2002-09-04T00:00:00", "modifydate": "2003-12-15T10:50:42", "lines": 225, "newlines": 273, "modlines": 0, "user": "UX90603"}, "text": "HSC@QDRV CSECT\nHSC@QDRV AMODE 31\nHSC@QDRV RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QDRV,R12\n***********************************************************************\n* QDRIVES  FUNCTION IMPLEMENTATION                                    *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QDRIVES,                                              X\n               OPTION=SYNCH,                                           X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQDRV                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R5,SLXXDRVN\n         L     R4,SLXXDRVL\n         L     R2,SLXXDRVO\n         LA    R2,SLX(2)\n         USING SLXSDRV,R2\n         BAS   R6,SETVAR\n         PR\nERROQDRV EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n         ZAP   STEMCONT(2),=P'1'\n*\n* SET VARIABLE @SLXQDEAC.0 => NUMBER OF ENTRIES\n*\n         MVC   NAMEVAR(11),=C'@SLXQDEAC.0'\n         MVC   SHVNAML(4),=F'11'\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\nNEXTSTEM EQU   *\n*\n* SET VARIABLE @SLXQDEAC => ACS ID\n*\n         MVC   NAMEVAR(12),=C'@SLXQDEAC.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTDEA1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTDEA2\nCONTDEA1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTDEA2 EQU   *\n         MVC   HEXNUMBR(1),SLXQDEAC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXQDELS => LSM ID\n*\n         MVC   NAMEVAR(12),=C'@SLXQDELS.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTDEL1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTDEL2\nCONTDEL1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTDEL2 EQU   *\n         MVC   HEXNUMBR(1),SLXQDELS\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXQDECU => DRIVE ADDRESS\n*\n         MVC   NAMEVAR(12),=C'@SLXQDECU.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTDEC1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTDEC2\nCONTDEC1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTDEC2 EQU   *\n         MVC   HEXNUMBR(2),SLXQDECU\n         UNPK  BCDNUMBR(5),HEXNUMBR(3)\n         NC    BCDNUMBR,=4X'0F'\n         TR    BCDNUMBR(4),HEXTABLE\n         MVC   VALUEVAR(4),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'4'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXQDRT => RECORDING TECHNIQUE OF DRIVE\n*\n         MVC   NAMEVAR(11),=C'@SLXQDRT.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTDRT1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTDRT2\nCONTDRT1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTDRT2 EQU   *\n         MVC   VALUEVAR(8),SLXQDRT\n         MVC   SHVVALL(4),=F'8'\n         BAS   R8,HSCSETV\n*\n         LA    R2,SLXSDRVL(,R2)        NEXT DSN ELEMENT\n         AP    STEMCONT(2),=P'1'\n         BCT   R5,NEXTSTEM\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\nSETVARER EQU   *\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         BAS   R8,HSCSETV\n*\n         BR    R6\n*\n*     CALL HSC@SETV (SET VARIABLE ROUTINE)\n*\nHSCSETV  EQU   *\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R8\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QDRV\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QDSN": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00I\\x01\\x02$\\x7f\\x01\\x034\\x9f\\x10P\\x01&\\x01\\x05\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2002-09-04T00:00:00", "modifydate": "2003-12-15T10:50:49", "lines": 294, "newlines": 261, "modlines": 0, "user": "UX90603"}, "text": "HSC@QDSN CSECT\nHSC@QDSN AMODE 31\nHSC@QDSN RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QDSN,R12\n***********************************************************************\n* QDSN  FUNCTION IMPLEMENTATION                                       *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QDSN,                                                 X\n               OPTION=SYNCH,                                           X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQDSN                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R5,SLXXQDSN\n         L     R4,SLXXQDSL\n         L     R2,SLXXQDSO\n         LA    R2,SLX(2)\n         USING SLXDSNIM,R2\n         BAS   R6,SETVAR\n         PR\nERROQDSN EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n         ZAP   STEMCONT(2),=P'1'\n*\n* SET VARIABLE @SLXDSNAM.0 => NUMBER OF ENTRIES\n*\n         MVC   NAMEVAR(11),=C'@SLXDSNAM.0'\n         MVC   SHVNAML(4),=F'11'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(1),DECNUMBR(8)\n         OI    BCDNUMBR,X'F0'\n         MVC   VALUEVAR(1),BCDNUMBR\n         MVC   SHVVALL(4),=F'1'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\nNEXTSTEM EQU   *\n*\n* SET STEM @SLXDSNAM. => DATA SET NAME\n*\n         MVC   NAMEVAR(11),=C'@SLXDSNAM. '\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(44),SLXDSNAM\n         MVC   SHVVALL(4),=F'44'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET STEM @SLXDSMBR. => MEMBER NAME\n*\n         MVC   NAMEVAR(11),=C'@SLXDSMBR. '\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(8),SLXDSMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET STEM @SLXDSTYP. => DATA SET TYPE\n*\n         MVC   NAMEVAR(11),=C'@SLXDSTYP. '\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n*\n         CLI   SLXDSFLG,SLXDSPRM       PRIMARY ?\n         BNE   CONTPRM\n         MVC   VALUEVAR(20),=CL20'CDS PRIMARY'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTPRM  EQU   *\n         CLI   SLXDSFLG,SLXDSSEC       SECONDARY ?\n         BNE   CONTSEC\n         MVC   VALUEVAR(20),=CL20'CDS SECONDARY'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTSEC  EQU   *\n         CLI   SLXDSFLG,SLXDSSBY       STANDBY ?\n         BNE   CONTSBY\n         MVC   VALUEVAR(20),=CL20'CDS STANDBY'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTSBY  EQU   *\n         CLI   SLXDSFLG,SLXDSVAT       VOLUME ATTRIBUTES ?\n         BNE   CONTVAT\n         MVC   VALUEVAR(20),=CL20'VOLUME ATTRIBUTES'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTVAT  EQU   *\n         CLI   SLXDSFLG,SLXDSUAT       UNIT ATTRIBUTES ?\n         BNE   CONTUAT\n         MVC   VALUEVAR(20),=CL20'UNIT ATTRIBUTES'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTUAT  EQU   *\n         CLI   SLXDSFLG,SLXDSTRQ       TAPEREQS ?\n         BNE   CONTTRQ\n         MVC   VALUEVAR(20),=CL20'TAPEREQS'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTTRQ  EQU   *\n         CLI   SLXDSFLG,SLXDSPLB       PARMLIB ?\n         BNE   CONTPLB\n         MVC   VALUEVAR(20),=CL20'PARMLIB'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTPLB  EQU   *\n         CLI   SLXDSFLG,SLXDSJNP       PRIMARY JOURNAL ?\n         BNE   CONTJNP\n         MVC   VALUEVAR(20),=CL20'PRIMARY JOURNAL'\n         MVC   SHVVALL(4),=F'20'\n         B     CONTJNA\nCONTJNP  EQU   *\n         CLI   SLXDSFLG,SLXDSJNA       ALTERNATE JOURNAL ?\n         BNE   CONTJNA\n         MVC   VALUEVAR(20),=CL20'ALTERNATE JOURNAL'\n         MVC   SHVVALL(4),=F'20'\nCONTJNA  EQU   *\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET STEM @SLXDSVOL. => VOLUME NAME\n*\n         MVC   NAMEVAR(11),=C'@SLXDSVOL. '\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(6),SLXDSVOL\n         MVC   SHVVALL(4),=F'6'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET STEM @SLXDSUNT. => UNIT NAME\n*\n         MVC   NAMEVAR(11),=C'@SLXDSUNT. '\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   VALUEVAR(8),SLXDSUNT\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         LA    R2,SLXDSNEL(,R2)        NEXT DSN ELEMENT\n         AP    STEMCONT(2),=P'1'\n         BCT   R5,NEXTSTEM\n*\nSETVARER EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         BR    R6\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QDSN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QHSC": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00V\\x01\\x02!O\\x01\\x034\\x9f\\x10P\\x00#\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:50:56", "lines": 35, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@QHSC CSECT\nHSC@QHSC AMODE 31\nHSC@QHSC RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QHSC,R12\n***********************************************************************\n* QHSC    FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QHSC,                                                 X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         SLR   R15,R15\n         PR\nERROQHSC EQU   *\n         LA    R15,4\n         PR\nHSCNOACT EQU   *\n         LA    R15,20\n         PR\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QHSC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QSCR": {"ttr": 2054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x04\\x01\\x02$\\x8f\\x01\\x034\\x9f\\x10Q\\x01\\x15\\x00\\xd1\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2002-09-05T00:00:00", "modifydate": "2003-12-15T10:51:04", "lines": 277, "newlines": 209, "modlines": 0, "user": "UX90603"}, "text": "HSC@QSCR CSECT\nHSC@QSCR AMODE 31\nHSC@QSCR RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@QSCR,R12\n***********************************************************************\n* QSCRATCH FUNCTION IMPLEMENTATION                                    *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         SLSXREQ QSCRATCH,                                             X\n               OPTION=SYNCH,                                           X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQSCR                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R5,SLXXLSMN\n         L     R4,SLXXLSML\n         L     R2,SLXXLSMO\n         LA    R2,SLX(2)\n         USING SLXSLSM,R2\n         BAS   R6,SETVAR\n         PR\nERROQSCR EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n         ZAP   STEMCONT(2),=P'1'\n*\n* SET VARIABLE @SLXMACS.0 => NUMBER OF ENTRIES\n*\n         MVC   NAMEVAR(10),=C'@SLXMACS.0'\n         MVC   SHVNAML(4),=F'10'\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\nNEXTSTEM EQU   *\n*\n* SET STEM @SLXMACS  => ACS ID\n*\n         MVC   NAMEVAR(11),=C'@SLXMACS.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMAC1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTMAC2\nCONTMAC1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTMAC2 EQU   *\n         MVC   HEXNUMBR(1),SLXMACS\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXMLSM  => LSM ID\n*\n         MVC   NAMEVAR(11),=C'@SLXMLSM.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMLS1\n         MVC   SHVNAML(4),=F'10'\n         UNPK  NAMEVAR+9(1),STEMCONT(2)\n         OI    NAMEVAR+9,X'F0'\n         B     CONTMLS2\nCONTMLS1 EQU   *\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+9(2),STEMCONT(2)\n         OC    NAMEVAR+9,=X'F0F0'\nCONTMLS2 EQU   *\n         MVC   HEXNUMBR(1),SLXMLSM\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXMADJN => NUMBER OF ADJACENTS LSM'S\n*\n         MVC   NAMEVAR(12),=C'@SLXMADJN.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMAD1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTMAD2\nCONTMAD1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTMAD2 EQU   *\n         SLR   R9,R9\n         ICM   R9,B'0001',SLXMADJN\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXMNSCR => SCRATCH COUNT FOR LSM\n*\n         MVC   NAMEVAR(12),=C'@SLXMNSCR.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMNS1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTMNS2\nCONTMNS1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTMNS2 EQU   *\n         SLR   R9,R9\n         L     R9,SLXMNSCR\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(5),DECNUMBR(8)\n         OC    BCDNUMBR(5),=5X'F0'\n         MVC   VALUEVAR(5),BCDNUMBR\n         MVC   SHVVALL(4),=F'5'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXMTCEL => TOTAL CELLS IN LSM\n*\n         MVC   NAMEVAR(12),=C'@SLXMTCEL.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMTC1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTMTC2\nCONTMTC1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTMTC2 EQU   *\n         SLR   R9,R9\n         L     R9,SLXMTCEL\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(5),DECNUMBR(8)\n         OC    BCDNUMBR(5),=5X'F0'\n         MVC   VALUEVAR(5),BCDNUMBR\n         MVC   SHVVALL(4),=F'5'\n         BAS   R8,HSCSETV\n*\n* SET STEM @SLXMFCEL => FREE CELLS IN LSM\n*\n         MVC   NAMEVAR(12),=C'@SLXMFCEL.  '\n         CP    STEMCONT(2),=P'9'\n         BH    CONTMFC1\n         MVC   SHVNAML(4),=F'11'\n         UNPK  NAMEVAR+10(1),STEMCONT(2)\n         OI    NAMEVAR+10,X'F0'\n         B     CONTMFC2\nCONTMFC1 EQU   *\n         MVC   SHVNAML(4),=F'12'\n         UNPK  NAMEVAR+10(2),STEMCONT(2)\n         OC    NAMEVAR+10,=X'F0F0'\nCONTMFC2 EQU   *\n         SLR   R9,R9\n         L     R9,SLXMFCEL\n         CVD   R9,DECNUMBR\n         UNPK  BCDNUMBR(5),DECNUMBR(8)\n         OC    BCDNUMBR(5),=5X'F0'\n         MVC   VALUEVAR(5),BCDNUMBR\n         MVC   SHVVALL(4),=F'5'\n         BAS   R8,HSCSETV\n*\n         LA    R2,SLXSLSML(,R2)        NEXT DSN ELEMENT\n         AP    STEMCONT(2),=P'1'\n         BCT   R5,NEXTSTEM\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\nSETVARER EQU   *\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         BAS   R8,HSCSETV\n*\n         BR    R6\n*\n*     CALL HSC@SETV (SET VARIABLE ROUTINE)\n*\nHSCSETV  EQU   *\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R8\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QSCR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@QVOL": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x01K\\x01K\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 331, "newlines": 331, "modlines": 0, "user": "UX90603"}, "text": "HSC@QVOL CSECT\nHSC@QVOL AMODE 31\nHSC@QVOL RMODE ANY\n         BAKR  R14,0                   LINKAGE STACK\n         LR    R12,R15                 R12 IS THE BASE\n         USING HSC@QVOL,R12\n***********************************************************************\n* QVOLUME FUNCTION IMPLEMENTATION                                     *\n*                                                                     *\n* 12/12/03  Tom Ritter  Used equates from STK macros                  *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n*\n         SLSXREQ QVOLUME,                                              X\n               OPTION=SYNCH,                                           X\n               VOLSER=VOLUME,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROQVOL                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\nCMDOK    EQU   *\n         L     R4,SLXXVOLL\n         L     R2,SLXXVOLO\n         LA    R2,SLX(2)\n         USING SLXSVOL,R2\n         BAS   R6,SETVAR\n         SLR   R15,R15\n         PR\nERROQVOL EQU   *\n         BAS   R6,SETVARER\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVARER\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXVILB => IN LIBRARY\n*\n         MVC   NAMEVAR(8),=C'@SLXVILB' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVILB      VOLUME IS IN LIBRAY ?\n         BNO   CONTVILB\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVOHST\nCONTVILB EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVOHST => IN USE BY ANOTHER HOST\n*\nSTVOHST  EQU   *\n         MVC   NAMEVAR(9),=C'@SLXVOHST' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'9'         SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVOHST     VOLUME IS IN USE BY ANOTHER HOST ?\n         BNO   CONTOHST\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVSCR\nCONTOHST EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVSCR  => SCRATCH\n*\nSTVSCR   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVSCR' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVSCR      VOLUME IS CONSIDERED SCRATCH ?\n         BNO   CONTSCR\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVMAL\nCONTSCR  EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVMAL  => MANUAL MODE LSM\n*\nSTVMAL   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVMAL' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVMAL      VOLUME IS IN MANUAL-MODE LSM ?\n         BNO   CONTMAL\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVDSC\nCONTMAL  EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVDSC  => DISCONNECTED ACS\n*\nSTVDSC   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVDSC' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVDSC      VOLUME IS IN DISCONNECTED ACS ?\n         BNO   CONTDSC\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVMNT\nCONTDSC  EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVMNT  => MOUNTED ON A DRIVE\n*\nSTVMNT   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVMNT' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVMNT      VOLUME IS MOUNTED ON A DRIVE ?\n         BNO   CONTMNT\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVERR\nCONTMNT  EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVERR  => VOLUME ERRANT\n*\nSTVERR   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVERR' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         TM    SLXVSTA,SLXVERR      VOLUME IS 'ERRANT' ?\n         BNO   CONTERR\n         MVC   VALUEVAR(3),=C'YES'  SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'3'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     STVACS\nCONTERR  EQU   *\n         MVC   VALUEVAR(2),=C'NO'   SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVACS  => ACS ID\n*\nSTVACS   EQU   *\n         MVC   NAMEVAR(8),=C'@SLXVACS' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         MVC   HEXNUMBR(1),SLXVACS\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVLSM  => LSM ID\n*\n         MVC   NAMEVAR(8),=C'@SLXVLSM' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         MVC   HEXNUMBR(1),SLXVLSM\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=2X'0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVPNL  => PANEL\n*\n         CLI   SLXVLC,X'02'         LOCATION DATA IS A DRIVE ADDRESS ?\n         BE    SETDRIVE\n         MVC   NAMEVAR(8),=C'@SLXVPNL' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'     SET VARIABLE NAME LENGTH\n         SLR   R5,R5\n         ICM   R5,B'0001',SLXVPNL\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVROW  => ROW\n*\n         MVC   NAMEVAR(8),=C'@SLXVROW' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'     SET VARIABLE NAME LENGTH\n         SLR   R5,R5\n         ICM   R5,B'0001',SLXVPNL+1\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXVCOL  => COLUMN\n*\n         MVC   NAMEVAR(8),=C'@SLXVCOL' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'8'        SET VARIABLE NAME LENGTH\n         SLR   R5,R5\n         ICM   R5,B'0001',SLXVPNL+2\n         CVD   R5,DECNUMBR\n         UNPK  BCDNUMBR(2),DECNUMBR(8)\n         OC    BCDNUMBR(2),=X'F0F0'\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         B     SETVARER\n*\n* SET VARIABLE @SLXVDRIV => DRIVE ADDRESS\n*\nSETDRIVE EQU   *\n         MVC   NAMEVAR(9),=C'@SLXVDRIV' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'9'         SET VARIABLE NAME LENGTH\n         MVC   HEXNUMBR(2),SLXVDRIV\n         UNPK  BCDNUMBR(5),HEXNUMBR(3)\n         NC    BCDNUMBR,=4X'0F'\n         TR    BCDNUMBR(4),HEXTABLE\n         MVC   VALUEVAR(4),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'4'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\nSETVARER EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'9'         SET VARIABLE NAME LENGTH\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'2'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC' SET VARIABLE NAME\n         MVC   SHVNAML(4),=F'7'       SET VARIABLE NAME LENGTH\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR SET VARIABLE VALUE\n         MVC   SHVVALL(4),=F'8'     SET VARIABLE LENGTH\n         BAS   R8,HSCSETV           CALL HSC@SETV\n         BR    R6\n*\n*     CALL HSC@SETV (SET VARIABLE ROUTINE)\n*\nHSCSETV  EQU   *\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R8\n*\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n         YREGS\n         END   HSC@QVOL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HSC@SCRT": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00%\\x01\\x02!O\\x01\\x034\\x9f\\x10Q\\x00\\x88\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:51:25", "lines": 136, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@SCRT CSECT\nHSC@SCRT AMODE 31\nHSC@SCRT RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@SCRT,R12\n***********************************************************************\n* SCRATCH FUNCTION IMPLEMENTATION                                     *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n*\n         SLSXREQ SCRATCH,                                              X\n               OPTION=SYNCH,                                           X\n               VOLSER=VOLUME,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3\n         BH    ERROINVL\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROSCRT                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         BAS   R6,SETVAR\n         PR\nERROSCRT EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n*\n* SET VARIABLE @SLXCMDRC => RETURN CODE\n*\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n* SET VARIABLE @SLXSRC => REASON CODE\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R6\n*\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         YREGS\n         END   HSC@SCRT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSC@SETV": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x05\\x01\\x04\\x14\\x7f\\x01\\x04\\x14\\x7f\\tC\\x00\\x1d\\x00\\x1c\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-05-26T00:00:00", "modifydate": "2004-05-26T09:43:05", "lines": 29, "newlines": 28, "modlines": 0, "user": "UX90603"}, "text": "HSC@SETV CSECT\nHSC@SETV AMODE 31\nHSC@SETV RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@SETV,R12\n         LR    R11,R1\n         USING WORKAREA,R11\n***********************************************************************\n* SET VARIABLES FOR OUTPUT                                            *\n***********************************************************************\nSETVOUTP EQU   *\n         MVC   PARAM1(8),=C'IRXEXCOM'          literal\n         MVC   SHVCODE(1),=C'S'                \"set\" variable\n         L     R15,IRXEXCO@                    get addr of irxexcom\n         CALL  (15),(PARAM1,0,0,SHVNEXT),VL,MF=(E,EXCOPLST)\n         LTR   R15,R15\n         BNZ   ERROEXCO\n*\nENDSETV  EQU   *\n         PR\nERROEXCO EQU   *\n         LA    R15,4\n         B     ENDSETV\n         LTORG\n*\n         HSCWAREA\n         YREGS\n         END   HSC@SETV\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HSC@UNSC": {"ttr": 2313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00D\\x01\\x02!O\\x01\\x034\\x9f\\x10Q\\x00\\x83\\x00\\\\\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2002-08-02T00:00:00", "modifydate": "2003-12-15T10:51:44", "lines": 131, "newlines": 92, "modlines": 0, "user": "UX90603"}, "text": "HSC@UNSC CSECT\nHSC@UNSC AMODE 31\nHSC@UNSC RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSC@UNSC,R12\n***********************************************************************\n* UNSCRATCH FUNCTION IMPLEMENTATION                                   *\n***********************************************************************\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         L     R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         LA    R10,8(R10)\n         CLC   ARGTABLE_ARGSTRING_PTR(8),=XL8'FFFFFFFFFFFFFFFF'\n         BE    ERROPARM\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'                IF VOLUME > 6 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEVOLM\n*\n         SLSXREQ EJECT,                                                X\n               OPTION=SYNCH,                                           X\n               VOLSER=VOLUME,                                          X\n               XCALADR=WXCALADR,                                       X\n               MF=(E,SLSXPARM)\n         LTR   R15,R15\n         BNZ   HSCNOACT\n         LR    R7,R1\n         USING SLX,R7\n         XR    R15,R15\n         ICM   R15,B'0001',SLXCMDRC\n         LA    R3,24\n         CR    R15,R3                  RC > 24 ?\n         BH    ERROINVL                YES, INVALID RC\n         B     *+4(R15)\n         B     CMDOK                   RC = 00 ?\n         B     ERROUSCR                RC = 04 ?\n         B     ERROPARM                RC = 08 ?\n         B     ERROUNRC                RC = 12 ?\n         B     ERROUNSC                RC = 16 ?\n         B     HSCNOACT                RC = 20 ?\n         B     ERRONAUT                RC = 24 ?\nCMDOK    EQU   *\n         BAS   R6,SETVAR               GO SET VARIABLES\n         PR\nERROUSCR EQU   *\n         LA    R15,4\n         PR\nERROPARM EQU   *                       INVALID PARM SPECIFIED\n         LA    R15,8\n         PR\nERROUNRC EQU   *                       UNRECOVERABLE ERROR\n         LA    R15,12\n         PR\nERROUNSC EQU   *                       UNSUCCESSFUL REQUEST\n         BAS   R6,SETVAR               GO SET VARIABLES\n         LA    R15,16\n         PR\nHSCNOACT EQU   *                       HSC NOT AVAILABLE\n         LA    R15,20\n         PR\nERRONAUT EQU   *                       FUNCTION NOT AUTHORIZED\n         LA    R15,24\n         PR\nERROINVL EQU   *                       INVALID RETURN CODE\n         LA    R15,50\n         PR\nERROSETV EQU   *                       SETVAR ROUTINE ERROR\n         LA    R15,60\n         PR\n***********************************************************************\n* SET VARIABLES SUBROUTINE                                            *\n***********************************************************************\nSETVAR   EQU   *\n         MVC   NAMEVAR(9),=C'@SLXCMDRC'  RETURN CODE VARIABLE\n         MVC   SHVNAML(4),=F'9'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(1),SLXCMDRC\n         UNPK  BCDNUMBR(3),HEXNUMBR(2)\n         NC    BCDNUMBR,=X'0F0F'\n         TR    BCDNUMBR(2),HEXTABLE\n         MVC   VALUEVAR(2),BCDNUMBR\n         MVC   SHVVALL(4),=F'2'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n*\n         MVC   NAMEVAR(7),=C'@SLXSRC'  REASON CODE VARIABLE\n         MVC   SHVNAML(4),=F'7'\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         MVC   HEXNUMBR(4),SLXSRC\n         UNPK  BCDNUMBR(9),HEXNUMBR(5)\n         NC    BCDNUMBR,=X'0F0F0F0F0F0F0F0F'\n         TR    BCDNUMBR(8),HEXTABLE\n         MVC   VALUEVAR(8),BCDNUMBR\n         MVC   SHVVALL(4),=F'8'\n         LA    R15,VALUEVAR\n         ST    R15,SHVVALA\n*\n         LR    R1,R11\n         L     R15,=V(HSC@SETV)\n         BASR  R14,R15\n         LTR   R15,R15\n         BNZ   ERROSETV\n         BR    R6\n*\nMOVEVOLM MVC   VOLUME(0),0(R5)\n***********************************************************************\n* CONSTANTS                                                           *\n***********************************************************************\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\n*\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         YREGS\n         END   HSC@UNSC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSCDOC": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x02P\\x02P\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 592, "newlines": 592, "modlines": 0, "user": "UX90603"}, "text": "\n               H S C T O O L   Version 1.1.5\n\n\n   HSCTOOL is an REXX external function that works as an interface\n   between a REXX Exec and HSC (StorageTek Robots). The following\n   features are implemented in the HSCTOOL:\n\n   EJECT    - Eject volume from an ACS.\n   MOUNT    - Mount volume.\n   DISMOUNT - Dismount volume.\n   MOVE     - Move a Volume to another LSM.\n   QCAP     - Query capacity and status of a CAP.\n   QCONFIG  - Get configuration data.\n   QHSC     - Determine HSC status.\n   QDSN     - Get Data set information.\n   QDRIVES  - Get Drive information.\n   QSCRATCH - Get LSM scratch counts.\n   QVOLUME  - Get volume status.\n   SCRATCH  - Return a volume to scratch status.\n   UNSCRATCH - Remove a volume from scratch status.\n\n   HSCTOOL was tested successfully in HSC versions:\n\n   * 2.1\n   * 4.0\n   * 5.0\n   * 5.1\n   * 6.0\n   * 6.1\n\n EJECT function:\n ==============\n\n  The EJECT request causes the HSC to eject a specific volume from the\n library using the parameter VOLSER. The volume is ejected to the\n available CAP with the highest preference.\n\n\n SYNTAX:   HSCTOOL('EJECT','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('EJECT','011000')\n if result = 0 then say \"Eject successful\"\n\n\n MOUNT Function:\n ==============\n\n The MOUNT request directs the HSC to mount a volume.\n\n\n SYNTAX:   HSCTOOL('MOUNT','Drive','Volume') or\n           HSCTOOL('MOUNT','Drive','SCRATCH')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('MOUNT','04B0','022000')\n if result = 0 then say \"Mount successful\"\n\n\n\n MOVE  Function:\n ==============\n\n  The MOVE request permits you to request the HSC to move a single\n  volume to another location within a library complex.\n\n\n SYNTAX:   HSCTOOL('MOVE','Volume','to_LSMID')\n\n 'to_LSMID' is in format AA0L:\n\n           AA => ACS ID (in hex)\n           0L => LSM ID (in hex)\n\n           Ex.: '010B'  ACS 01 and LSM 11\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('MOVE','022000','010A')\n if result = 0 then say \"Move successful\"\n\n\n DISMOUNT Function:\n =================\n\n The DISMOUNT request directs the HSC to dismount a volume from a\n specified transport.\n\n\n SYNTAX:   HSCTOOL('DISMOUNT','Drive')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('DISMOUNT','04B0')\n if result = 0 then say \"Dismount successful\"\n\n\n SCRATCH Function:\n ================\n\n The SCRATCH request causes a volume to be placed in scratch status in\n the library control data set.\n\n\n SYNTAX:   HSCTOOL('SCRATCH','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('SCRATCH','033000')\n if result = 0 then say \"Scratch successful\"\n\n\n UNSCRATCH Function:\n ==================\n\n The UNSCRATCH request causes a volume to be removed from scratch status\n in the HSC control data set.\n\n\n SYNTAX:   HSCTOOL('UNSCRATCH','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('UNSCRATCH','033000')\n if result = 0 then say \"Unscratch successful\"\n\n\n QHSC Function:\n ==============\n\n This request may be used to determine if the HSC is active or not. This\n permits programs to poll periodically to determine when the HSC\n becomes active.\n\n\n SYNTAX:   HSCTOOL('QHSC')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QHSC')\n if result = 0 then say \"HSC is available\"\n\n\n QVOLUME Function:\n =================\n\n The QVOLUME request is used to obtain the library status of a\n cartridge.\n\n\n SYNTAX:   HSCTOOL('QVOLUME','Volume')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n    @SLXVILB  - IN LIBRARY ?  - YES or NO\n    @SLXVOHST - IN USE BY ANOTHER HOST ? - YES or NO\n    @SLXVSCR  - SCRATCH ?  - YES or NO\n    @SLXVMAL  - MANUAL MODE LSM ?  - YES or NO\n    @SLXVDSC  - DISCONNECTED ?  - YES or NO\n    @SLXVMNT  - MOUNTED ON A DRIVE ?  - YES or NO\n    @SLXVERR  - ERRANT ?  - YES or NO\n    @SLXVACS  - ACS ID (in Hex)\n    @SLXVLSM  - LSM ID (in Hex)\n    @SLXVPNL  - PANEL  (Only if @SLXVMNT = NO)\n    @SLXVROW  - ROW    (Only if @SLXVMNT = NO)\n    @SLXVCOL  - COLUMN (Only if @SLXVMNT = NO)\n    @SLXDRIV  - DRIVE  (Only if @SLXVMNT = YES)\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QVOLUME','044000')\n if result = 0 then say \"Volume is in library\"\n\n\n QCONFIG Function:\n =================\n\n This request is provided to enable the requestor to get information\n about the library configuration.\n\n\n SYNTAX:   HSCTOOL('QCONFIG')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n    @SLXLHNAM - Host ID\n    @SLXLCMPF - Command Prefix Character\n    @SLXLQNAM - ENQ Major Name\n    @SLXLSMF  - SMF Record Number\n    @SLXQMDR  - Largest Number of Drives in any ACS\n    @SLXQDRCT - Number of Drives in the Library\n    @SLXQACNT - Number of ACS's in the Library\n    @SLXQLCNT - Number of LSM's in the Library\n    @SLXQLCAP - Number of CAP's in the Library\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QCONFIG')\n\n\n QDSN Function:\n ==============\n\n   This request is provided to enable the requestor to get information\n   about the current data sets in use by HSC.\n\n\n SYNTAX:   HSCTOOL('QDSN')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXDSNAM.0 - Number of DSN's\n\n    @SLXDSNAM.  - Data Set Name\n    @SLXDSMBR.  - Member Name\n    @SLXDSTYP.  - Data Set Name Type\n    @SLXDSVOL.  - Volume Name\n    @SLXDSUNT.  - Unit Name\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QDSN')\n if result = 0 then\n   do I=1 to @SLXDSNAM.0\n   say \"DSNAME = \"@SLXDSNAM.I\n   say \"MEMBER = \"@SLXDSMBR.I\n   say \"TYPE   = \"@SLXDSTYP.I\n   say \"VOLUME = \"@SLXDSVOL.I\n   say \"UNIT   = \"@SLXDSUNT.I\n   end\n\n\n QCAP Function:\n ==============\n\n   This request is used to query the capacity and status of a CAP.\n\n\n SYNTAX:   HSCTOOL('QCAP')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXCACS.0  - Number of DSN's\n\n    @SLXCACS.   - ACS ID  (in Hex)\n    @SLXCLSM.   - LSM ID  (in Hex)\n    @SLXCCAP.   - CAP ID  (in Hex)\n    @SLXCSTCA.  - ACTIVE   Status  (YES or NO)\n    @SLXCSTNR.  - RECOVERY Status  (YES or NO)\n    @SLXCSTAM.  - AUTOMATIC Status (YES or NO)\n    @SLXCSTCL.  - LINKED Status    (YES or NO)\n    @SLXCSTCO.  - ONLINE Status    (YES or NO)\n    @SLXCMODE.  - CAP Mode\n    @SLXCTYPE.  - CAP Type\n    @SLXCCELL.  - Number of CELLS in CAP\n    @SLXCNROW.  - Number of Rows\n    @SLXCNCOL.  - Number of Columns\n    @SLXCCMAG.  - Number of Magazines\n    @SLXCCMGC.  - Number of CELLS in Magazines\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QCAP')\n if result = 0 then\n    do I=1 to @SLXCACS.0\n    say \"ACS    = \"@SLXCACS.I\n    say \"LSM    = \"@SLXCLSM.I\n    say \"CAP    = \"@SLXCCAP.I\n    say \"ACTIVE    = \"@SLXCSTCA.I\n    say \"RECOVERY  = \"@SLXCSTNR.I\n    say \"AUTOMATIC = \"@SLXCSTAM.I\n    say \"LINKED    = \"@SLXCSTCL.I\n    say \"ONLINE    = \"@SLXCSTCO.I\n    say \"MODE      = \"@SLXCMODE.I\n    say \"TYPE      = \"@SLXCTYPE.I\n    say \"CELLS IN CAP  = \"@SLXCCELL.I\n    say \"NUMB. OF ROWS = \"@SLXCNROW.I\n    say \"NUMB. OF COLS = \"@SLXCNCOL.I\n    say \"MAGAZINES     = \"@SLXCCMAG.I\n    say \"CELLS IN MAGS = \"@SLXCCMGC.I\n    end\n\n\n QDRIVES Function:\n ================\n\n This request retrieves drive related configuration data. The response\n includes the ACS and LSM address of the transports, whether or not an\n enhanced CAP is present, and LSM pass-thru connections.\n\n\n SYNTAX:   HSCTOOL('QDRIVES')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXQDEAC.0 - Number of Drives\n\n    @SLXQDEAC.  - ACS ID (in Hex)\n    @SLXQDELS.  - LSM ID (in Hex)\n    @SLXQDECU.  - Drive Address\n    @SLXQDRT.   - Recording Technique of Drive\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QDRIVES')\n if result = 0 then\n   do I=1 to @SLXQDEAC.0\n   say \"ACS    = \"@SLXQDEAC.I\n   say \"LSM    = \"@SLXQDELS.I\n   say \"UNIT   = \"@SLXQDECU.I\n   say \"REC TEC= \"@SLXQDRT.I\n   end\n\n\n QSCRATCH Function:\n =================\n\n The QSCRATCH request is used to obtain detailed information about the\n number of scratch volumes in each LSM and ACS.\n\n\n SYNTAX:   HSCTOOL('QSCRATCH')\n\n Variables returned:\n\n    RESULT    - Return Code\n    @SLXCMDRC - Return Code (in hex)\n    @SLXSRC   - Reason Code (HSC Message Code in hex)\n\n STEM Variables returned:\n\n    @SLXMACS.0  - Number of LSM's\n\n    @SLXMACS.   - ACS ID\n    @SLXMLSM.   - LSM ID\n    @SLXMADJN.  - Number of Adjacent LSM's\n    @SLXMNSCR.  - Scratch Count for LSM\n    @SLXMTCEL.  - Total Cells in LSM\n    @SLXMFCEL.  - Free Cells in LSM\n\n Possible Return Codes:\n\n    00  -  Successful operation.\n    08  -  Invalid Parm specified.\n    16  -  Operation failed. Look at @SLXSRC for the reason rode\n    20  -  HSC is not available.\n    24  -  User not Authorized. The request was failed by Exit SLSUX05\n           or the HSC Default authorization.\n    50  -  Invalid Return Code by SLSXCAL.\n    60  -  Error in SET Varibles CSECT.\n\n Exemple:\n\n /* rexx */\n\n result = HSCTOOL('QSCRATCH')\n if result = 0 then\n   do I=1 to @SLXMACS.0\n   say \"ACS    = \"@SLXMACS.I\n   say \"LSM    = \"@SLXMLSM.I\n   say \"N ADJ  = \"@SLXMADJN.I\n   say \"SCRATCH COUNT = \"@SLXMNSCR.I\n   say \"TOTAL CELLS   = \"@SLXMTCEL.I\n   say \"FREE  CELLS   = \"@SLXMFCEL.I\n   end\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HSCTOOL": {"ttr": 2569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x04\\x14\\x7f\\x01\\x04\\x14\\x7f\\tD\\x00\\xb7\\x00\\xb7\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-05-26T00:00:00", "modifydate": "2004-05-26T09:44:33", "lines": 183, "newlines": 183, "modlines": 0, "user": "UX90603"}, "text": "HSCTOOL  CSECT\nHSCTOOL  AMODE 31\nHSCTOOL  RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING HSCTOOL,R12\n         B     HEADER\n         DC    C'HSCTOOL - VERSION 1.1.4 '\n         DC    C'&SYSDATE '\n         DC    C'&SYSTIME '\nHEADER   DS    0H\n***********************************************************************\n* PROGRAM: HSCTOOL                                                    *\n*                                                                     *\n* AUTHOR: PHILIPPE LEITE                                              *\n*                                                                     *\n* OBJECTIVE: HSC (STORAGETEK) - REXX EXTERNAL FUNCTION                *\n*                                                                     *\n* CREATION DATE: 29/07/2002                                           *\n*                                                                     *\n***********************************************************************\n         LR    R7,R0                   Save environment address\n         LR    R9,R1\n         USING EFPL,R9\n*\n         STORAGE OBTAIN,LENGTH=WAREALEN\n         LR    R11,R1\n         USING WORKAREA,R11\n         LR    R2,R11             get addr of work area\n         LA    R3,WAREALEN        let length of work area\n         SR    R15,R15            pad of X'00' & Zero length\n         MVCL  R2,R14             Init workarea to zeros\n*\n         L     R10,EFPLARG\n         ST    R10,ARGTADDR\n         USING ARGTABLE_ENTRY,R10\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'9'                IF PARM > 9 GOTO ERROPARM\n         BH    ERROPARM\n         BCTR  R4,0\n         EX    R4,MOVEFUNC\n*\n         USING ENVBLOCK,R7          set addressability to envblock\n         ST    R7,ENVB@\n         L     R7,ENVBLOCK_IRXEXTE  external entry vector address\n         USING IRXEXTE,R7           set addressability to exte\n         L     R0,IRXEXCOM          IRXEXCOM entry address\n         ST    R0,IRXEXCO@\n         DROP  R7\n*\n         LOAD  EP=SLSXCAL\n         ST    R0,WXCALADR\n         MVC   EXITCODE(2),=C'00'\n*\n         CLC   FUNCTION(4),=C'QHSC'\n         BE    SET@QHSC\n         CLC   FUNCTION(4),=C'QDSN'\n         BE    SET@QDSN\n         CLC   FUNCTION(7),=C'QDRIVES'\n         BE    SET@QDRV\n         CLC   FUNCTION(8),=C'QSCRATCH'\n         BE    SET@QSCR\n         CLC   FUNCTION(5),=C'MOUNT'\n         BE    SET@MONT\n         CLC   FUNCTION(8),=C'DISMOUNT'\n         BE    SET@DISM\n         CLC   FUNCTION(5),=C'EJECT'\n         BE    SET@EJCT\n         CLC   FUNCTION(7),=C'SCRATCH'\n         BE    SET@SCRT\n         CLC   FUNCTION(9),=C'UNSCRATCH'\n         BE    SET@UNSC\n         CLC   FUNCTION(4),=C'MOVE'\n         BE    SET@MOVE\n         CLC   FUNCTION(7),=C'QVOLUME'\n         BE    SET@QVOL\n         CLC   FUNCTION(4),=C'QCAP'\n         BE    SET@QCAP\n         CLC   FUNCTION(7),=C'QCONFIG'\n         BE    SET@QCON\n         B     ERROPARM\nSET@QHSC EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QHSC)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QDSN EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QDSN)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QDRV EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QDRV)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QSCR EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QSCR)\n         BASR  R14,R15\n         B     ENDHSC\nSET@MONT EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@MONT)\n         BASR  R14,R15\n         B     ENDHSC\nSET@DISM EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@DISM)\n         BASR  R14,R15\n         B     ENDHSC\nSET@EJCT EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@EJCT)\n         BASR  R14,R15\n         B     ENDHSC\nSET@SCRT EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@SCRT)\n         BASR  R14,R15\n         B     ENDHSC\nSET@UNSC EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@UNSC)\n         BASR  R14,R15\n         B     ENDHSC\nSET@MOVE EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@MOVE)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QVOL EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QVOL)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QCAP EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QCAP)\n         BASR  R14,R15\n         B     ENDHSC\nSET@QCON EQU   *\n         LR    R1,R11\n         L     R15,=V(HSC@QCON)\n         BASR  R14,R15\nENDHSC   EQU   *\n         CVD   R15,DECNUMBR\n         UNPK  EXITCODE(2),DECNUMBR(8)\n         OC    EXITCODE(2),=X'F0F0'\n         L     R2,EFPLEVAL\n         L     R2,0(R2)\n         USING EVALBLOCK,R2\n         MVC   EVALBLOCK_EVLEN(4),=F'2'\n         MVC   EVALBLOCK_EVDATA(2),EXITCODE\n*\n         STORAGE RELEASE,LENGTH=WAREALEN,ADDR=(R11)\n         SLR   R15,R15\n         PR\nERROPARM EQU   *\n         LA    R15,8\n         B     ENDHSC\n***********************************************************************\n*  MVC USED IN EX INSTRUCTIONS                                        *\n***********************************************************************\nMOVEFUNC MVC   FUNCTION(0),0(R5)\n         LTORG\n***********************************************************************\n*  DSECTS AREA                                                        *\n***********************************************************************\n         HSCWAREA\n         SLSXREQM\n         IRXEFPL\n         IRXENVB\n         IRXEXTE\n         IRXARGTB\n         IRXEVALB\n         IKJTSVT\n***********************************************************************\n*  EQUATE AREA                                                        *\n***********************************************************************\n         YREGS\n         END   HSCTOOL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HSCTOOLJ": {"ttr": 2819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x12\\x01\\x02!\\x7f\\x01\\x04\\x14\\x7f\\tD\\x00\\x19\\x00\\x13\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2002-08-05T00:00:00", "modifydate": "2004-05-26T09:44:12", "lines": 25, "newlines": 19, "modlines": 0, "user": "UX90603"}, "text": "//UX90603A JOB (SIST,P-T),'PHILIPE LEITE',MSGCLASS=X,                   JOB09274\n// CLASS=S,NOTIFY=&SYSUID,MSGLEVEL=(1,1)\n//*\n//ST001 EXEC ASMACL,\n//      PARM.L='MAP,LET,LIST,NCAL,RENT,REUS'\n//C.SYSLIB  DD\n//          DD DSN=SYS1.MODGEN,DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM,DISP=SHR\n//          DD DSN=NCS.V5R1M0.SOS5100.SLSMAC,DISP=SHR\n//C.SYSIN   DD DSN=UX90603.HSCTOOL.PROD.ASM(HSCTOOL),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QCAP),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QVOL),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QHSC),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QDSN),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QDRV),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QSCR),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@QCON),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@EJCT),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@MONT),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@DISM),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@SCRT),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@UNSC),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@MOVE),DISP=SHR\n//          DD DSN=UX90603.HSCTOOL.PROD.ASM(HSC@SETV),DISP=SHR\n//L.SYSLMOD DD DSN=UX90603.WORK.LOAD(HSCTOOL),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HSCWAREA": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x04\\x15\\x0f\\x01\\x04\\x15\\x0f\"\\'\\x00=\\x00=\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-05-29T00:00:00", "modifydate": "2004-05-29T22:27:00", "lines": 61, "newlines": 61, "modlines": 0, "user": "UX90603"}, "text": ".**********************************************************************\n.*   WORK AREA                                                        *\n.**********************************************************************\n         MACRO\n&NAME    HSCWAREA\nWORKAREA DSECT\nWXCALADR DS    F                       SLSXCAL ENTRY POINT\nARGTADDR DS    F\nENVB@    DS    F                       addr of environment block\nIRXEXCO@ DS    F                       IRXEXCOM entru address\nEXCOPLST DS    4F                      work area for CALL (hsc@setv)\nFUNCTION DS    CL16\nEXITCODE DS    CL2\n         DS    0D\nDECNUMBR DS    PL8\nHEXNUMBR DS    XL9\nBCDNUMBR DS    CL17\n*\nVOLUME   DS    CL6\n         DS    CL2\n         DS    0F\nDRIVEADR DS    CL4\n         DS    0H\nCUAADDR  DS    H\nTOLSMID  DS    H\nSTEMCONT DS    PL2\n*\n* HSC@SETV WORK SECTION\n*\n         DS    0F\nVACCPARM EQU   *\nVACCP1   DS    A                    ECODE\nVACCP2   DS    A                    NAMEPTR\nVACCP3   DS    A                    NAMELEN\nVACCP4   DS    A                    VALUEPTR\nVACCP5   DS    A                    VALUELEN\nVACCP6   DS    A                    TOKEN\n*\nPARAM1   DS    CL8\nPARAM2   DS    A\nPARAM3   DS    A\nPARAM4   EQU   *\nSHVNEXT  DS    A\nSHVUSER  DS    F\nSHVCODE  DS    CL1\nSHVRET   DS    XL1\n         DS    H'0'\nSHVBUFL  DS    F\nSHVNAMA  DS    A\nSHVNAML  DS    F\nSHVVALA  DS    A\nSHVVALL  DS    F\nPARAM5   DS    A\nPARAM6   DS    A\n*\nNAMEVAR  DS    CL16\nVALUEVAR DS    CL80\n*\nSLSXPARM SLSXREQ MF=L\nWAREALEN EQU   *-WORKAREA\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IGC0023A": {"ttr": 2823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1e\\x00\"\\x01\\x04\\x14\\x7f\\x01\\x04\\x15O\\x14X\\x00^\\x00\\x1d\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.30", "flags": 0, "createdate": "2004-05-26T00:00:00", "modifydate": "2004-06-02T14:58:22", "lines": 94, "newlines": 29, "modlines": 0, "user": "UX90603"}, "text": "IGC0023A CSECT\nIGC0023A AMODE 31\nIGC0023A RMODE ANY\n         USING IGC0023A,R6\n         LR    R2,R14             SAVE RETURN ADDRESS\n         LR    R12,R0             LOAD SVC OPTION\n         LR    R10,R1             LOAD PARM ADDRESS\n         USING PARMAREA,R10\n         STORAGE OBTAIN,LENGTH=WAREALEN\n         LR    R11,R1\n         USING WORKAREA,R11\n*\n         LTR   R12,R12\n         BNZ   VOL2DEV\n***********************************************************************\n* CONVERT DEVICE NUMBER TO VOLUME SERIAL                              *\n***********************************************************************\n         UCBLOOK DEVNCHAR=DEVICE,                                      X\n               UCBPTR=UCB,                                             X\n               UCBCXPTR=UCBX,                                          X\n               DYNAMIC=YES,                                            X\n               LOC=ANY,                                                X\n               RANGE=ALL,                                              X\n               NOPIN,MF=(E,UCBDL)\n         LTR   R15,R15\n         BNZ   SVCEND04\n         L     R8,UCB             COMMON SEGMENT ADDRESS\n         USING UCBCMSEG,R8\n         TM    UCBTBYT3,UCB3DACC  IS A DASD DEVICE ?\n         BNO   SVCEND12\n         TM    UCBSTAT,UCBONLI    IS DEVICE ONLINE ?\n         BNO   SVCEND08\n         L     R9,UCBX\n         USING UCBCMEXT,R9\n         MVC   VOLSER,UCBVOLI\n         B     SVCENDOK\n***********************************************************************\n* CONVERT VOLUME SERIAL TO DEVICE NUMBER                              *\n***********************************************************************\nVOL2DEV  EQU   *\n         UCBLOOK VOLSER=VOLSER,                                        X\n               UCBPTR=UCB,                                             X\n               UCBCXPTR=UCBX,                                          X\n               DYNAMIC=YES,                                            X\n               DEVCLASS=DASD,                                          X\n               LOC=ANY,                                                X\n               RANGE=ALL,                                              X\n               NOPIN,MF=(E,UCBDL)\n         LTR   R15,R15\n         BNZ   SVCEND04\n         L     R8,UCB\n         USING UCBCMSEG,R8\n         UNPK  MYDEV(L'MYDEV+1),UCBCHAN(L'UCBCHAN+1)\n         NC    MYDEV,=4X'0F'\n         TR    MYDEV,HEXTABLE\n         MVC   DEVICE,MYDEV\n         B     SVCENDOK\n*\nSVCEND   EQU   *\n         STORAGE RELEASE,LENGTH=WAREALEN,ADDR=(R11)\n         LR    R15,R7             LOAD RETURN CODE\n         LR    R14,R2             LOAD RETURN ADDRESS\n         BR    R14\nSVCEND12 EQU   *\n         LA    R7,12\n         B     SVCEND\nSVCEND08 EQU   *\n         LA    R7,8\n         B     SVCEND\nSVCEND04 EQU   *\n         LA    R7,4\n         B     SVCEND\nSVCENDOK EQU   *\n         LA    R7,0\n         B     SVCEND\n*\nHEXTABLE DC    C'0123456789ABCDEF'\n         LTORG\nPARMAREA DSECT\nDEVICE   DS    CL4\nVOLSER   DS    CL6\n*\nWORKAREA DSECT\nMYDEV    DS    CL4\n         DS    CL1\nUCB      DS    F\nUCBX     DS    F\nUCBL     UCBLOOK MF=(L,UCBDL)\nWAREALEN EQU   *-WORKAREA\n*\n         YREGS\n         CVT   DSECT=YES\n         IEFUCBOB\n         END   IGC0023A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADSVCX": {"ttr": 2826, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x00\\xd2\\x00\\xd2\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 210, "newlines": 210, "modlines": 0, "user": "UX90603"}, "text": "LOADSVCX CSECT\n         BAKR  R14,0               LINKAGE STACK\n         LR    R12,R15             CARREGA ENTRY POINT EM R12\n         USING LOADSVCX,R12        ESTABELECE ENDERECAMENTO\n         MODID ,                   EYE-CATCHER E DATA\n**********************************************************************\n* PROGRAM: LOADSVCX                                                  *\n*                                                                    *\n*         THIS PROGRAM WAS ORIGINALLY WRITTEN BY PROFESSOR           *\n*   CARMINE CANATELLO AND I'VE MADE A LOT OF ENHANCEMENTS.           *\n*                                                                    *\n*                                                                    *\n* FUNCTION: BATCH PROGRAM TO DYNAMICALLY LOAD AN SVC.                *\n*                                                                    *\n* PARAMETERS: O,NNN,MMMMMMMM                                         *\n*                                                                    *\n*    WHERE:                                                          *\n*                                                                    *\n*         O - EXTENDED SVC ?    -  Y(YES) OR N(NO)                   *\n*                                                                    *\n*         NNN - SVC NUMBER                                           *\n*                                                                    *\n*         MMMMMMMM - MODULE NAME TO BE LOADED.                       *\n*                                                                    *\n*                                                                    *\n* EXAMPLE:                                                           *\n*                                                                    *\n*   THE FOLLOWING JOB LOADS AN EXTENDED SVC 235 (ESR 109)            *\n*                                                                    *\n*                                                                    *\n*  //JOBNAME JOB (P,SI,XXXXXX),CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)     *\n*  //*                                                               *\n*  //ST001    EXEC PGM=LOADSVCX,PARM='Y,235,MYSVC'                   *\n*  //SVCLIB   DD DSN=SYS2.LINKLIB,DISP=SHR                           *\n*                                                                    *\n*                                                                    *\n**********************************************************************\n*----------------------------------------------------------------------\n* CORPO PRINCIPAL DO PROGRAMA\n*----------------------------------------------------------------------\n         BAS   R6,GETPARM\n         BAS   R6,VERSVCNO\n         BAS   R6,CNVSVCNO\n         BAS   R6,SETMODE\n         BAS   R6,LOADNSVC\n         BAS   R6,SETNWSVC\n         BAS   R6,SETNXSVC\n         B     RETURN\n*----------------------------------------------------------------------\n* CAPTURA PARM\n*----------------------------------------------------------------------\nGETPARM  L     R1,0(0,R1)\n         LH    R15,0(0,R1)\n         LTR   R15,R15\n         BZ    NOPARM\n         BCTR  R15,0\n         EX    R15,MOVE\n         BR    R6\nMOVE     MVC   SVCINFO(0),2(R1)\nNOPARM   WTO   '*** SVC NUMBER AND NAME NOT SPECIFIED---PROGRAM TERMINA-\n               TED ***',ROUTCDE=11\n         ABEND 901\n*----------------------------------------------------------------------\n* VERIFICA SE A SVC EH VALIDA\n*----------------------------------------------------------------------\nVERSVCNO LA    R0,3\n         LA    R10,DECSVCNO\nNXTSVCDG CLI   0(R10),C'0'\n         BL    INVSVCNO\n         CLI   0(R10),C'9'\n         BH    INVSVCNO\n         LA    R10,1(0,R10)\n         BCT   R0,NXTSVCDG\n         CLC   DECSVCNO,=C'200'\n         BL    INVSVCNO\n         CLC   DECSVCNO,=C'255'\n         BH    INVSVCNO\n         BR    R6\nINVSVCNO WTO   '*** INVALID SVC NUMBER SPECIFIED---PROGRAM TERMINATED *-\n               **',ROUTCDE=11\n         ABEND 902\n*----------------------------------------------------------------------\n* CONVERTE O NUMERO DA SVC DE EBCDIC PARA HEXADECIMAL\n*----------------------------------------------------------------------\nCNVSVCNO PACK  PKSVCNO,DECSVCNO\n         CVB   R10,PKSVCNO\n         ST    R10,SVCNUM\n         BR    R6\n*----------------------------------------------------------------------\n* FAZ O SWITCH PARA MODO SUPERVISOR E PSWKEY ZERO\n*----------------------------------------------------------------------\nSETMODE  MODESET MODE=SUP,KEY=ZERO\n         BR    R6\n*----------------------------------------------------------------------\n* CARREGA MODULO PASSADO VIA PARAMETRO EM CSA\n*----------------------------------------------------------------------\nLOADNSVC BAS   R7,OPENLIB\n         MVC   LPMEANAME(8),SVCNAME\n         LA    R2,LPMEA\n         ENQ   (QNAME1,RNAME1,E,,SYSTEM)\n         CSVDYLPA REQUEST=ADD,                                         X\n               MODINFOTYPE=MEMBERLIST,                                 X\n               DCB=SVCLIB,                                             X\n               APFREQUIRED=NO,                                         X\n               REQUESTOR=LREQ,                                         X\n               MODINFO=(2),                                            X\n               NUMMOD=LMODN\n         DEQ   (QNAME1,RNAME1,,SYSTEM)\n         ST    R0,SVCEPA\n         BAS   R7,CLOSELIB\n         BR    R6\n*----------------------------------------------------------------------\n* OPEN NA SVCLIB\n*----------------------------------------------------------------------\nOPENLIB  OPEN  SVCLIB\n         BR    R7\n*----------------------------------------------------------------------\n* CLOSE NA SVCLIB\n*----------------------------------------------------------------------\nCLOSELIB CLOSE SVCLIB\n         BR    R7\n*----------------------------------------------------------------------\n* FAZ UPDATE NA SVCTABLE (NORMAL)\n*----------------------------------------------------------------------\nSETNWSVC EQU   *\n         CLI   OPTION,C'N'\n         BNE   OUTNSVC\n         L     R10,LPMEAENTRYPOINTADDR\n         L     R11,SVCNUM\n         ENQ   (QNAME2,RNAME2,E,,SYSTEM)\n         SVCUPDTE (R11),REPLACE,TYPE=3,EP=(R10)\n         DEQ   (QNAME2,RNAME2,,SYSTEM)\n         LTR   R15,R15\n         BZR   R6\n         WTO   '*** ERROR UPDATING SVC TABLE---PROGRAM TERMINATED ***'\n         ABEND 903,DUMP\nOUTNSVC  EQU   *\n         BR    R6\n*----------------------------------------------------------------------\n* FAZ UPDATE NA SVCTABLE (EXTENDIDA)\n*----------------------------------------------------------------------\nSETNXSVC EQU   *\n         CLI   OPTION,C'Y'\n         BNE   OUTXSVC\n         AIF   (('&SYSTEM_ID'(1,6) EQ 'OS/390') AND                    X\n               ('&SYSTEM_ID'(11,2) LT '10')).NOTSUP\n         L     R10,LPMEAENTRYPOINTADDR\n         L     R11,SVCNUM\n         ENQ   (QNAME2,RNAME2,E,,SYSTEM)\n         SVCUPDTE 109,ESR=(R11),REPLACE,TYPE=3,EP=(R10)\n         DEQ   (QNAME2,RNAME2,,SYSTEM)\n         LTR   R15,R15\n         BZR   R6\n         WTO   '*** ERROR UPDATING SVC TABLE---PROGRAM TERMINATED ***'\n         ABEND 904,DUMP\n.NOTSUP  ANOP\n         WTO   '*** UPDATE EXTENDED SVC NOT SUPPORTED ***'\n         ABEND 905,DUMP\nOUTXSVC  EQU   *\n         BR    R6\n*----------------------------------------------------------------------\n* RETORNA AO SISTEMA OPERATIVO\n*----------------------------------------------------------------------\nRETURN   EQU   *\n         SLR   R15,R15\n         PR\n*----------------------------------------------------------------------\n* AREA DE VARIAVEIS E CONSTANTES\n*----------------------------------------------------------------------\nPKSVCNO  DS    D\nLMODN    DC    F'1'\nLREQ     DC    CL16'LOADSVCX'\nSVCNUM   DS    F\nSVCEPA   DS    F\nSVCINFO  DS    0CL14\nOPTION   DS    CL1\n         DS    CL1\nDECSVCNO DS    CL3\n         DS    CL1\nSVCNAME  DC    CL8' '\nQNAME1   DC    CL8'SYSZCSV'\nRNAME1   DC    C'CSVDYLPA'\nQNAME2   DC    CL8'SYSZSVC'\nRNAME2   DC    C'TABLE'\n         CSVLPRET DSECT=NO\n*----------------------------------------------------------------------\n* DCB SVCLIB\n*----------------------------------------------------------------------\nSVCLIB   DCB   DSORG=PO,MACRF=R,DDNAME=SVCLIB\n*----------------------------------------------------------------------\n* DUMMY SECTIONS E EQUATES\n*----------------------------------------------------------------------\n         CVT   DSECT=YES\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVSCMDL": {"ttr": 2830, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x01\\x86\\x01\\x86\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 390, "newlines": 390, "modlines": 0, "user": "UX90603"}, "text": "MVSCMDL  CSECT\nMVSCMDL  AMODE 31\nMVSCMDL  RMODE 24\n         BAKR  R14,0               LINKAGE STACK\n         LR    R12,R15             CARREGA ENTRY POINT EM R12\n         USING MVSCMDL,R12         ESTABELECE ENDERECAMENTO\n         MODID ,                   EYE-CATCHER E DATA\n**********************************************************************\n* PROGRAM: MVSCMDL                                                   *\n*                                                                    *\n* AUTHOR: PHILIPPE LEITE                                             *\n*                                                                    *\n* FUNCAO: BATCH PROGRAM TO ISSUE SYSTEM COMMANDS AND CAPTURE THE     *\n*         RESULTS.                                                   *\n*         THIS PROGRAM MUST LINKEDITED IN AN APF-AUTHORIZES LIBRARY  *\n*         AND AC=1.                                                  *\n*                                                                    *\n* EXAMPLE:                                                           *\n*                                                                    *\n*  //JOBNAME JOB (P,SI,XXXXXX),CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)     *\n*  //*                                                               *\n*  //ST001 EXEC PGM=MVSCMDL                                          *\n*  //CMDLOG   DD SYSOUT=*                                            *\n*  //CMDIN    DD *                                                   *\n*  D U,DASD,ONLINE                                                   *\n*  R %%,YES                                                          *\n*                                                                    *\n*                                                                    *\n* CREATION DATE: 19/04/2001                                          *\n*                                                                    *\n* HISTORY:                                                           *\n*                                                                    *\n*   21/05/2001 - CORRECAO PARA CAPTURAR MAIS DE UM MDB               *\n*   15/01/2003 - CORRECAO BUG QUE CAPTURAVA MENSAGENS INDEVIDAS      *\n*   15/01/2003 - ACRESCENTADO CONTADOR PARA CART                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n* CORPO PRINCIPAL DO PROGRAMA                                        *\n**********************************************************************\n         BAS   R6,ABREFICH         ABRE FICHEIROS\n         BAS   R6,ESPPARAM         ESPECIF. CARACTERIST. DA CONSOLE\n         BAS   R6,ATIVAMCS         ATIVA MCS CONSOLE\nLEPROXCO BAS   R6,LECOMAND         LE COMANDO DO FICHEIRO CMDIN\n         BAS   R6,EMITECOM         EMITE COMANDO\n         BAS   R6,AGUARESP         AGUARDA RESPOSTA\n         BAS   R6,CAPTRESP         CAPTURA RESPOSTA DO COMANDO\n         BAS   R6,LOGACMDS         POE RESULTADO EM CMDLOG\n         B     LEPROXCO            LE O COMANDO SEGUINTE\nDESMCSCO BAS   R6,DESATMCS         DESATIVA MCS CONSOLE\n         BAS   R6,FECHFICH         FECHA OS FICHEIROS\n         B     FIMPROG             FIM DO PROGRAMA\n**********************************************************************\n* ABRE  FICHEIROS DE ENTRADA E SAIDA                                 *\n**********************************************************************\nABREFICH OPEN  (CMDIN,,CMDLOG,(OUTPUT))\n         BR    R6\n**********************************************************************\n* ESPECIFICA AS CARACTERISTICAS DA MCS CONSOLE                       *\n**********************************************************************\nESPPARAM LA    R10,OPERPRM         CARREGA END. OPERPRM EM R10\n         USING MCSOPPRM,R10        ESTABELECE ENDERECAMENTO\n         XC    OPERPRM(MCSOPLEN),OPERPRM  LIMPA AREA DE PARAM.\n         MVI   MCSOMLV1,X'EC'      MESSAGE LEVEL\n         MVI   MCSOAUTH,MCSOMSTR   CONSOLE MASTER\n         MVI   MCSORCFL,MCSORCAL   TODOS OS ROUTE CODES\n         MVI   MCSOLOGC,MCSOLOGN   HARDCOPY LOG NAO\n         MVI   MCSOMIG,MCSOMIGY    OBTEM O MIGRATION ID\n         BR    R6                  VOLTA PARA PRINCIPAL\n**********************************************************************\n* ATIVA MCS CONSOLE                                                  *\n**********************************************************************\nATIVAMCS MODESET MODE=SUP,KEY=ZERO\n         MCSOPER REQUEST=ACTIVATE,                                     X\n               NAME=CNAME,                                             X\n               TERMNAME=TNAME,                                         X\n               OPERPARM=OPERPRM,                                       X\n               MSGDLVRY=SEARCH,                                        X\n               MSGECB=MECB,                                            X\n               MCSCSA=(R3),                                            X\n               MCSCSAA=(R3),                                           X\n               CONSID=CNID,                                            X\n               MIGIDREL=AUTO\n         LTR   R15,R15             TESTA SE RC <> 0\n         BNZ   FIMPROGE            SE RC <> 0 VAI PARA FIMPROGE\n         MODESET MODE=PROB,KEY=NZERO\n         XC    MECB,MECB           LIMPA ECB\n         BR    R6\n**********************************************************************\n* LE COMANDO DE CMDIN                                                *\n**********************************************************************\nLECOMAND GET   CMDIN,TEXTAREA\n         AP    CARTPACK(6),=P'1'\n         UNPK  CARTBCD(5),CARTPACK(6)\n         OI    CARTBCD+4,X'F0'\n*\n         TM    WTORFLG,X'01'\n         BO    TRATAREP\n         B     LECOMFIM\nTRATAREP DS    0H\n         CLC   TEXTAREA(2),=C'R '\n         BE    EDITARE1\n         CLC   TEXTAREA(6),=C'REPLY '\n         BE    EDITARE2\n         WTO   'COMANDO INVALIDO PARA WTOR',ROUTCDE=11\n         B     FIMPROGE\nEDITARE1 DS    0H\n         MVC   TEXTAREA+2(2),REPLYID\n         B     LECOMFIM\nEDITARE2 DS    0H\n         MVC   TEXTAREA+6(2),REPLYID\n         B     LECOMFIM\nLECOMFIM DS    0H\n         SAC   0\n         BR    R6\n**********************************************************************\n* EMITE COMANDO                                                      *\n**********************************************************************\nEMITECOM MODESET MODE=SUP,KEY=ZERO\nMGCR     MGCRE TEXT=TEXTADDR,                                          X\n               CONSID=CNID,                                            X\n               CMDFLAG=NOHCPY,                                         X\n               CART=UCART,                                             X\n               MF=(E,MGCREC)\n         MODESET MODE=PROB,KEY=NZERO\n         MVC   AREAOUT(L'COMAND),COMAND\n         MVC   AREAOUT+L'COMAND(L'TEXTAREA),TEXTAREA\n         PUT   CMDLOG,AREAOUT\n         BAS   R7,LIMPTEXT\n         MVC   AREAOUT(18),CARTCHAR\n         PUT   CMDLOG,AREAOUT\n         BAS   R7,LIMPTEXT\n         PUT   CMDLOG,AREAOUT\n         BAS   R7,LIMPTEXT\n         XC    WTORFLG(1),WTORFLG\n         XC    REPLYID(2),REPLYID\n         XC    MECB(L'MECB),MECB    LIMPA ECB\n         BR    R6\n**********************************************************************\n* ENTRA EM ESTADO DE WAIT                                            *\n**********************************************************************\nAGUARESP EQU   *\n         WAIT  ECB=MECB\n         XC    MECB(L'MECB),MECB    LIMPA ECB\n         BR    R6\n**********************************************************************\n* CAPTURA RESPOSTA AO COMANDO                                        *\n**********************************************************************\nCAPTRESP MODESET MODE=SUP,KEY=ZERO\n         SAC   512                 ENTRA EM AR MODE\n         SYSSTATE ASCENV=AR        ALERTA AS MACROS QUE ESTA EM AR\n         MCSOPMSG REQUEST=GETMSG,                                      X\n               CONSID=CNID,                                            X\n               CMDRESP=YES,                                            X\n               CART=UCART,                                             X\n               RTNCODE=RC,                                             X\n               RSNCODE=RSN\n         LTR   R15,R15             TESTA SE RC <> 0\n         BZ    CAPTCONT\n         SAC   0\n*        WTO   'NAO ACHOU RESPOSTA',ROUTCDE=11\n         STIMER WAIT,DINTVL=TEMPO      AGUARDA 1 SEGUNDO\n         B     CAPTRESP\nCAPTCONT DS    0H\n         LAE   R8,0(0,R1)          CARREGA AR1 EM AR8 E R1 EM R8\n         USING MDB,R8              ESTAB. END. PARA MDB EM R8\n         SAC   0                   VOLTA PARA PRIMARY MODE\n         SYSSTATE ASCENV=P         ALERTA AS MACROS QUE ESTA EM PRIM.\n         MODESET MODE=PROB,KEY=NZERO\n         BR    R6\n**********************************************************************\n* POE RESPOSTA NO CMDLOG                                             *\n**********************************************************************\nLOGACMDS DS    0H\n         BAS   R7,VERPROXM\n*\n         SAC   512                 ENTRA EM AR MODE\n         SYSSTATE ASCENV=AR        ALERTA AS MACROS QUE ESTA EM AR\n         CLC   MDBMID(4),=C'MDB '  EH UM MDB ??\n         BE    MDBOK               SE SIM VAI PRA MDBOK\n         SAC   0\n         WTO   'NAO ACHOU MDB',ROUTCDE=11\n         B     FIMPROGE            SE NAO VAI PRA ERRO\nMDBOK    DS    0H\n*        SAC   0\n*        WTO   'ACHOU MDB',ROUTCDE=11\n         SAC   512\n         LR    R5,R8               COPIA INICIO DE MDB P/ R5\n         AH    R5,MDBLEN           ACHA FIM DE MDB EM R5\n         LR    R4,R8               COPIA INICIO DE MDB P/ R4\n         LA    R8,MDBHLEN(R8)      ACHA INICIO DE MDBG\n         DROP  R8\n*\n         USING MDBG,R8             ESTAB. ENDERECAM. PARA MDBG\n         LH    R3,MDBGTYPE         CARREGA TIPO MDBG EM R3\n         C     R3,=A(MDBGOBJ)\n         BE    MDBGOK\n         SAC   0\n         WTO   'NAO ACHOU MDBG',ROUTCDE=11\n         B     FIMPROGE\nMDBGOK   DS    0H\n*        SAC   0\n*        WTO   'ACHOU MDBG',ROUTCDE=11\n         SAC   512\n         AH    R8,MDBGLEN\n         DROP  R8\n*\n         USING MDBSCP,R8\n         LH    R3,MDBCTYPE\n         C     R3,=A(MDBCOBJ)\n         BE    MDBCOK\n*        SAC   0\n*        WTO   'NAO ACHOU MDBC',ROUTCDE=11\n         SAC   512\n         B     MDBTENT\nMDBCOK   DS    0H\n*        SAC   0\n*        WTO   'ACHOU MDBC',ROUTCDE=11\n         SAC   512\n         TM    MDBMLVL1,MDBMLR     VERIFICA SE EH WTOR\n         BO    MDBWTOR             SE FOR MARCA FLAG WTORFLG\n         B     MDBWTORN\nMDBWTOR  DS    0H\n         MVC   REPLYID(2),MDBCRPYI\n         MVI   WTORFLG,X'01'\nMDBWTORN DS    0H\n         AH    R8,MDBCLEN\nMDBTENT  DS    0H\n         DROP  R8\n*\n         USING MDBT,R8\n         LH    R3,MDBTTYPE\n         C     R3,=A(MDBTOBJ)\n         BE    MDBTOK\n         SAC   0\n         WTO   'NAO ACHOU MDBT',ROUTCDE=11\n         CR    R5,R8               VERIFICA SE EH O ULTIMO\n         BE    FIMMDB              SE SIM VAI PARA FIMMDB\n         B     FIMPROGE\nMDBTOK   DS    0H\n*        SAC   0\n*        WTO   'ACHOU MDBT',ROUTCDE=11\n         SAC   512                 ENTRA EM AR MODE\n         LH    R9,MDBTLEN          CARREGA TAMANHO DE MDBT EM R9\n         LA    R2,MDBTMBOB         CARREGA TAMANHO DO HEADER EM R2\n         SR    R9,R2               DIMINUI O TAMANHO DO HEADER\n         BCTR  R9,0                SUBTRAI 1 DE R9 PARA EXEC\n         EX    R9,EXECTEXT         MOVE TEXTO PARA AREA DE SAIDA\n         SAC   0                   ENTRA EM PRIMARY MODE\n         PUT   CMDLOG,AREAOUT      ENVIA TEXTO PARA CMDLOG\n         BAS   R7,LIMPTEXT         LIMPA AREA DE SAIDA\n         SAC   512                 ENTRA EM AR MODE\n         AH    R8,MDBTLEN          CALCULA END. DO PROXIMO MDBT\n         CR    R5,R8               VERIFICA SE EH O ULTIMO\n         BE    FIMMDB              SE SIM VAI PARA FIMMDB\n         B     MDBTENT             SE NAO VAI LER O PROX. MDBT\n*\nFIMMDB   DS    0H\n         CLC   PROXMDB(4),=F'0'\n         BE    NAOHAMDB\n         L     R8,PROXMDB\n         MVC   PROXMDB(4),=F'0'\n         B     LOGACMDS\nNAOHAMDB DS    0H\n         SAC   0\n         PUT   CMDLOG,AREAOUT      ENVIA UMA LINHA EM BRANCO\n         BR    R6\nEXECTEXT MVC   AREAOUT(0),MDBTMSGT\nLIMPTEXT DS    0H\n         MVI   AREAOUT,C' '\n         MVC   AREAOUT+1(L'AREAOUT-1),AREAOUT\n         BR    R7\n**********************************************************************\n* VERIFICA SE HA MAIS UM MDB                                         *\n**********************************************************************\nVERPROXM DS    0H\n         LA    R11,MDBPLNNO\n         SR    R8,R11              LOCALIZA MDBPREFIX\n         SAC   512\n         USING MDBPRFX,R8\n         CLC   MDBPID(4),=C'MDBP'  EH UM MDBP ?'\n         BE    MDBPOK              SE SIM VAI PRA MDBPOK\n         SAC   0\n         WTO   'NAO ACHOU MDBP',ROUTCDE=11\n         B     FIMPROGE            SE NAO VAI PRA ERRO\nMDBPOK   DS    0H\n*        SAC   0\n*        WTO   'ACHOU MDBP',ROUTCDE=11\n         SAC   512\n         CLC   MDBPNEXT(4),=F'0'\n         BE    SOHUMMDB\n         MVC   PROXMDB(4),MDBPNEXT\n*        SAC   0\n*        WTO   'HA MAIS MDB',ROUTCDE=11\nSOHUMMDB DS    0H\n         SAC   0\n         AR    R8,R11              VOLTA AO MDB\n         DROP  R8\n         BR    R7\n**********************************************************************\n* DESATIVA MCS CONSOLE                                               *\n**********************************************************************\nDESATMCS MODESET MODE=SUP,KEY=ZERO\n         MCSOPER REQUEST=DEACTIVATE,                                   X\n               CONSID=CNID\n         LTR   R15,R15             TESTA SE RC <> 0\n         BNZ   FIMPROGE            SE RC <> 0 VAI PARA FIMPROGE\n         MODESET MODE=PROB,KEY=NZERO\n         BR    R6\n**********************************************************************\n* FECHA FICHEIROS DE ENTRADA E SAIDA                                 *\n**********************************************************************\nFECHFICH CLOSE (CMDIN,,CMDLOG)\n         BR    R6\n**********************************************************************\n* FIM DO PROGRAMA COM RC=0                                           *\n**********************************************************************\nFIMPROG  SAC   0                   VOLTA PARA PRIMARY MODE\n         SYSSTATE ASCENV=P         ALERTA AS MACROS QUE ESTA EM PRIM.\n         XR    R15,R15\n         PR\n**********************************************************************\n* FIM DO PROGRAMA COM ERRO                                           *\n**********************************************************************\nFIMPROGE SAC   0                   VOLTA PARA PRIMARY MODE\n         SYSSTATE ASCENV=P         ALERTA AS MACROS QUE ESTA EM PRIM.\n         ABEND 1000,DUMP\n         LA    R15,8\n         PR\n**********************************************************************\n* DCB'S  DOS FICHEIROS DE ENTRADA E SAIDA                            *\n**********************************************************************\nCMDIN    DCB   DDNAME=CMDIN,DSORG=PS,MACRF=GM,LRECL=80,RECFM=FB,       X\n               EODAD=DESMCSCO\nCMDLOG   DCB   DDNAME=CMDLOG,DSORG=PS,MACRF=PM,LRECL=132,RECFM=FB\n**********************************************************************\n* DEFINICOES DE VARIAVEIS                                            *\n**********************************************************************\nCNAME    DC    CL8'BSYSA   '       NOME DA CONSOLE\nTNAME    DC    CL8'BATCH'          NOME FICTICIO DO TERMINAL\n*\nCOMAND   DC    C' COMANDO: '\nCARTCHAR DC    C' CART...: '\nUCART    DC    CL3'MCM'            COMMAND AND RESPONSE TOKEN\nCARTBCD  DS    CL5\n*\nCNID     DS    F                   CONSOLE ID\nMECB     DS    F                   ECB DA MCS CONSOLE\nTEXTADDR DC    A(TEXTALEN)         ENDERECO DA AREA DE COMANDOS\nTEXTALEN DC    AL2(L'TEXTAREA)     TAMANHO DA AREA DE COMANDOS\nTEXTAREA DS    CL80                AREA DE COMANDOS\nAREAOUT  DS    CL132               AREA DE CMDLOG\nOPERPRM  DS    CL(MCSOPLEN)        AREA DE PARAMETROS DA MCS\nRC       DS    F\nRSN      DS    F\nREPLYID  DS    CL2\nMCART    DS    CL8\nWTORFLG  DC    XL1'00'\nPROXMDB  DC    F'0'\nCARTPACK DC    PL6'0'              CONTADOR PARA CART\n         DS    0D\nTEMPO    DC    C'00000100'\nMGCREC   MGCRE MF=L\n**********************************************************************\n* DSECTS                                                             *\n**********************************************************************\n         IEAVG132 ,                MDB PREFIX\n         IEAVM105 ,                MDB\n         IEAVG131 ,                CONSOLE STATUS AREA\n         IEZVG111 ,                OPERPARM PARAMETER AREA\n**********************************************************************\n* LISTA DE EQUATES                                                   *\n**********************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ONDESTOU": {"ttr": 3078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00$\\x01\\x05\\x17_\\x01\\x05\\x17_\\tU\\x00S\\x00K\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-06-24T00:00:00", "modifydate": "2005-06-24T09:55:24", "lines": 83, "newlines": 75, "modlines": 0, "user": "UX90603"}, "text": "***********************************************************************\n* PROGRAMA: ONDESTOU                                                  *\n*                                                                     *\n* AUTOR: PHILIPPE LEITE                                               *\n*                                                                     *\n* FUNCTION: RETORNA AO PROGRAMA CHAMADOR UM RC INDICANDO O            *\n*           AMBIENTE DE EXECUCAO.                                     *\n*           RC = 1  -> BATCH                                          *\n*           RC = 2  -> ONLINE (CICS)                                  *\n*           RC = 3  -> CICS BATCH ???????? :P                         *\n*           RC = 4  -> TSO                                            *\n*           RC = 5  -> TSO BATCH                                      *\n*                                                                     *\n* OBS.: ESTE PROGRAMA PODE E DEVE SER LINKEDITADO COMO REENTRANT      *\n*                                                                     *\n***********************************************************************\nONDESTOU CSECT\nONDESTOU AMODE 31\nONDESTOU RMODE ANY\n         BAKR  R14,0              SALVA REGISTRADORES\n         USING ONDESTOU,R12       ENDERECAMENTO BASE\n         LR    R12,R15            CARRAGA ENTRY POINT\n         LA    R10,0              ZERA R10\n         USING PSA,R10            BASE PARA PSA\n         L     R10,PSAAOLD        CARREGA END. ASCB\n         DROP  R10                DROPA R10\n         USING ASCB,R10           BASE PARA ASCB\n         L     R10,ASCBASXB       CARREGA END. ASXB\n         DROP  R10                DROPA R10\n         USING ASXB,R10           BASE PARA ASXB\n         L     R2,ASXBFTCB        CARREGA END. PRIMEIRA TCB\n         USING TCB,R2             BASE PARA TCB\n         USING RBBASIC,R3         BASE PARA RB\n         USING CDENTRY,R4         BASE PARA CDE\n         XR    R8,R8              ZERA R8\n         XR    R9,R9              ZERA R9\nLOOPTCBQ EQU   *\n         L     R3,TCBRBP          CARREGA END. RB EM R3\n         ICM   R4,B'0111',RBCDE1  CARREGA END. CDE EM R4\n         CLC   CDNAME,=C'IEAVAR00' EH REGION CONTROL TASK ?\n         BE    NEXTTCB             SIM, VAI PARA PROX. TCB\n         CLC   CDNAME,=C'IEAVTDST' EH DUMP TASK ?\n         BE    NEXTTCB             SIM, VAI PARA PROX. TCB\n         CLC   CDNAME,=C'IEFSD060' EH INITIATOR TASK ?\n         BE    NEXTTCB             SIM, VAI PARA PROX. TCB\n*\n         CLC   CDNAME,=CL8'IEFIIC' EH BATCH INITIATOR ?\n         BNE   CONTIIC             NAO, CONTINUA\n*        WTO   'BATCH INITIATOR',ROUTCDE=11\n         IC    R8,=X'01'          MARCA FLAG EM R8\n         OR    R9,R8\n         B     NEXTTCB            VAI PARA PROX. TCB\nCONTIIC  EQU   *\n         CLC   CDNAME,=CL8'DFHSIP' EH CICS ?\n         BNE   CONTSIP             NAO, CONTINUA\n*        WTO   'CICS',ROUTCDE=11\n         IC    R8,=X'02'          MARCA FLAG EM R8\n         OR    R9,R8\n         B     NEXTTCB            VAI PARA PROX. TCB\nCONTSIP  EQU   *\n         CLC   CDNAME,=C'IKJEFT01' EH TSO ?\n         BNE   CONTIKJ             NAO, CONTINUA\n*        WTO   'TSO',ROUTCDE=11\n         IC    R8,=X'04'          MARCA FLAG EM R8\n         OR    R9,R8\nCONTIKJ  EQU   *\nNEXTTCB  EQU   *\n         L     R2,TCBTCB          CARREGA END. PROX. TCB\n         LTR   R2,R2              TESTA SE EH ZERO\n         BZ    ENDLOOP            SIM, FIM DE PROGRAMA\n         B     LOOPTCBQ\nENDLOOP  EQU   *\n         LR    R15,R9             CARREGA RC EM R15\n         PR    ,                  RETORNA AO OS\n         LTORG\n         IHAPSA\n         IHAASCB\n         IHAASXB\n         IKJTCB\n         IHARB\n         IHACDE\n         YREGS\n         END   ONDESTOU\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VOL2DEV": {"ttr": 3081, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07\\x19?\\x01\\x07\\x19?\\x08W\\x00\\x92\\x00\\x92\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-07-12T00:00:00", "modifydate": "2007-07-12T08:57:00", "lines": 146, "newlines": 146, "modlines": 0, "user": "UX90603"}, "text": "VOL2DEV  CSECT\nVOL2DEV  AMODE 31\nVOL2DEV  RMODE ANY\n         BAKR  R14,0\n         LR    R12,R15\n         USING VOL2DEV,R12\n         MODID ,\n**********************************************************************\n* PROGRAM: VOL2DEV                                                   *\n*                                                                    *\n* AUTHOR: PHILIPPE LEITE                                             *\n*                                                                    *\n* OBJECTIVE: REXX EXTERNAL FUNCTION TO CONVERT VOLUME SERIAL TO      *\n*            DEVICE NUMBER.                                          *\n*                                                                    *\n* VARIABLES RETURNED:                                                *\n*                                                                    *\n*   @VOL2DEV - DEVICE NUMBER                                         *\n*                                                                    *\n*  POSSIBLE RETURN CODES:                                            *\n*                                                                    *\n*   00 - SUCCESSFUL EXECUTION                                        *\n*   04 - UCB NOT FOUND                                               *\n*   16 - INVALID PARAMETER                                           *\n*                                                                    *\n* EXAMPLE:                                                           *\n*                                                                    *\n*      /* REXX */                                                    *\n*      RC = VOL2DEV('SHR010')                                        *\n*      IF RC = 0 THEN SAY @VOL2DEV                                   *\n*                                                                    *\n* CREATION DATE: 27/05/2004                                          *\n*                                                                    *\n**********************************************************************\n         LR    R7,R0\n         LR    R9,R1\n         USING EFPL,R9\n*\n         STORAGE OBTAIN,LENGTH=WAREALEN\n         LR    R8,R1\n         USING WKAREA,R8\n*\n         USING ENVBLOCK,R7          SET ADDRESSABILITY TO ENVBLOCK\n         L     R6,ENVBLOCK_IRXEXTE  EXTERNAL ENTRY VECTOR ADDRESS\n         USING IRXEXTE,R6           SET ADDRESSABILITY TO EXTE\n         L     R0,IRXEXCOM          IRXEXCOM ENTRY ADDRESS\n         ST    R0,IRXEXCO@\n         DROP  R6\n         DROP  R7\n*\n         L     R10,EFPLARG\n         USING ARGTABLE_ENTRY,R10\n         L     R5,ARGTABLE_ARGSTRING_PTR\n         L     R4,ARGTABLE_ARGSTRING_LENGTH\n         CL    R4,=F'6'\n         BNH   CONTMOVV\n         MVC   RETRCODE,=F'16'\n         B     CONVRETR\nCONTMOVV EQU   *\n         MVC   VOLUME,=CL6' '\n         BCTR  R4,0\n         EX    R4,MOVEVOL\n*\n         UCBSCAN COPY,                                                 X\n               VOLSER=VOLUME,                                          X\n               DEVNCHAR=DEVICE,                                        X\n               UCBAREA=UCBCOPY,                                        X\n               WORKAREA=SCANWORK,                                      X\n               DYNAMIC=YES,                                            X\n               NONBASE=NO,                                             X\n               RANGE=ALL,                                              X\n               DEVCLASS=DASD,                                          X\n               MF=(E,UCBSCANL)\n         ST    R15,RETRCODE\n*\nCONVRETR EQU   *\n         L     R11,EFPLEVAL\n         L     R11,0(R11)\n         USING EVALBLOCK,R11\n         L     R5,RETRCODE\n         CVD   R5,PACKCODE\n         UNPK  EBCDCODE,PACKCODE\n         OC    EBCDCODE,=2X'F0'\n         MVC   EVALBLOCK_EVLEN,=F'2'\n         MVC   EVALBLOCK_EVDATA(2),EBCDCODE\n         LTR   R5,R5\n         BNZ   ENDV2D\n*\nCONTSETV EQU   *\n         LA    R7,PARAM4\n         USING SHVBLOCK,R7\n         MVC   NAMEVAR,=C'@VOL2DEV'    SET VARIABLE NAME\n         MVC   SHVNAML,=F'8'           SET VARIABLE NAME LENGTH\n         MVC   SHVVALL,=F'4'           SET VARIABLE LENGTH\n         LA    R15,NAMEVAR\n         ST    R15,SHVNAMA\n         LA    R15,DEVICE\n         ST    R15,SHVVALA\n         BAS   R6,DEV@SETV\n*\nENDV2D   EQU   *\n         STORAGE RELEASE,LENGTH=WAREALEN,ADDR=(R8)\n         XR    R15,R15\n         PR\nDEV@SETV EQU   *\n         MVC   PARAM1,=C'IRXEXCOM'\n         MVI   SHVCODE,C'S'\n         L     R15,IRXEXCO@\n         CALL  (15),(PARAM1,0,0,PARAM4),VL,MF=(E,EXCOPLST)\n         BR    R6\n*\nMOVEVOL  MVC   VOLUME(0),0(R5)\n         YREGS\n         LTORG\n*---------------------------------------------------------------------*\n*  DSECT WORK AREA                                                    *\n*---------------------------------------------------------------------*\nWKAREA   DSECT\nPACKCODE DS    PL8\nEBCDCODE DS    CL2\nRETRCODE DS    F\nIRXEXCO@ DS    F\nEXCOPLST DS    4F\nNAMEVAR  DS    CL8\nDEVICE   DS    CL4\nVOLUME   DS    CL6\nUCBCOPY  DS    CL48\nSCANWORK DS    CL100\n* IRXEXCOM PARAMETER AREA\nPARAM1   DS    CL8\nPARAM2   DS    A\nPARAM3   DS    A\nPARAM4   DS    XL32\n         UCBSCAN MF=(L,UCBSCANL)\nWAREALEN EQU   *-WKAREA\n*---------------------------------------------------------------------*\n*  DSECTS AREA                                                        *\n*---------------------------------------------------------------------*\n         IRXEFPL\n         IRXENVB\n         IRXEXTE\n         IRXSHVB\n         IRXARGTB\n         IRXEVALB\n         IEFUCBOB DEVCLAS=DA\n         END   VOL2DEV\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHEREAMI": {"ttr": 3085, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\t\\x00'\\x01\\x05\\x17?\\x01\\x05\\x17_\\x10\\x11\\x00S\\x00\\x18\\x00\\x00\\xe4\\xe7\\xf9\\xf0\\xf6\\xf0\\xf3@@@\"", "ispf": {"version": "01.09", "flags": 0, "createdate": "2005-06-22T00:00:00", "modifydate": "2005-06-24T10:11:27", "lines": 83, "newlines": 24, "modlines": 0, "user": "UX90603"}, "text": "***********************************************************************\n* PROGRAM: WHEREAMI                                                   *\n*                                                                     *\n* AUTHOR: PHILIPPE LEITE                                              *\n*                                                                     *\n* FUNCTION: RETURN TO THE CALLER A RC INDICATING THE EXECUTION        *\n*           ENVIRONMENT.                                              *\n*           RC = 1  -> BATCH                                          *\n*           RC = 2  -> ONLINE (CICS)                                  *\n*           RC = 3  -> CICS BATCH ???????? :P                         *\n*           RC = 4  -> TSO                                            *\n*           RC = 5  -> TSO BATCH                                      *\n*                                                                     *\n* OBS.: THIS PROGRAM CAN LINKEDITED AS REENTRANT                      *\n*                                                                     *\n***********************************************************************\nWHEREAMI CSECT\nWHEREAMI AMODE 31\nWHEREAMI RMODE ANY\n         BAKR  R14,0\n         USING WHEREAMI,R12\n         LR    R12,R15\n         LA    R10,0\n         USING PSA,R10\n         L     R10,PSAAOLD\n         DROP  R10\n         USING ASCB,R10\n         L     R10,ASCBASXB\n         DROP  R10\n         USING ASXB,R10\n         L     R2,ASXBFTCB\n         USING TCB,R2\n         USING RBBASIC,R3\n         USING CDENTRY,R4\n         XR    R8,R8\n         XR    R9,R9\nLOOPTCBQ EQU   *\n         L     R3,TCBRBP\n         ICM   R4,B'0111',RBCDE1\n         CLC   CDNAME,=C'IEAVAR00'\n         BE    NEXTTCB\n         CLC   CDNAME,=C'IEAVTDST'\n         BE    NEXTTCB\n         CLC   CDNAME,=C'IEFSD060'\n         BE    NEXTTCB\n*\n         CLC   CDNAME,=CL8'IEFIIC'\n         BNE   CONTIIC\n         WTO   'BATCH INITIATOR',ROUTCDE=11\n         IC    R8,=X'01'\n         OR    R9,R8\n         B     NEXTTCB\nCONTIIC  EQU   *\n         CLC   CDNAME,=CL8'DFHSIP'\n         BNE   CONTSIP\n         WTO   'CICS',ROUTCDE=11\n         IC    R8,=X'02'\n         OR    R9,R8\n         B     NEXTTCB\nCONTSIP  EQU   *\n         CLC   CDNAME,=C'IKJEFT01'\n         BNE   CONTIKJ\n         WTO   'TSO',ROUTCDE=11\n         IC    R8,=X'04'\n         OR    R9,R8\nCONTIKJ  EQU   *\nNEXTTCB  EQU   *\n         L     R2,TCBTCB\n         LTR   R2,R2\n         BZ    ENDLOOP\n         B     LOOPTCBQ\nENDLOOP  EQU   *\n         LR    R15,R9\n         PR\n         LTORG\n         IHAPSA\n         IHAASCB\n         IHAASXB\n         IKJTCB\n         IHARB\n         IHACDE\n         YREGS\n         END   WHEREAMI\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT589/FILE589.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT589", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}