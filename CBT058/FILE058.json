{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011141000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE058.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE058.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x05'", "DS1TRBAL": "b'\\x8e\\xe8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00h\\x00\\x0c\\x00i\\x00\\x00\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"LINKLIST": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*          DATA SET CBT1791    AT LEVEL 001 AS OF 12/20/87\n         TITLE 'LINKLIST - COMMAND TO SHOW THE SYSTEM LINKLIST'         00001\n**********************************************************************  00002\n***                                                                ***  00003\n***  LOCAL MACROS                                                  ***  00004\n***                                                                ***  00005\n**********************************************************************  00006\n         MACRO                                                          00007\n         IHALLT                       , MAP OF LLT  DSECT=LLT           00008\n.*                                                                      00009\n.*   The LLT is described in the Debugging Handbook, but the            00010\n.*   IHALLT macro is nowhere to be found.  This is my best guess        00011\n.*   at what it must look like, based on the handbook.                  00012\n.*                                                                      00013\nLLT      DSECT                                                          00014\nLLTHEAD  DS    0CL8                     TABLE HEADER                    00015\nLLTID    DS    CL4                        TABLE ID 'LLT '               00016\nLLTCOUNT DS    F                          NUMBER OF ENTRIES IN TABLE    00017\nLLTENTRY DS    0CL45                    ENTRY IN TABLE                  00018\nLLTDSLTH DS    XL1                        LENGTH OF DATASET NAME        00019\nLLTDSN   DS    CL44                       DATASET NAME                  00020\n         MEND                                                           00021\n*                                                                       00022\n         EJECT                                                          00023\n         PRINT NOGEN                                                    00024\n**********************************************************************  00025\n***                                                                ***  00026\n***                   LINKLIST                                     ***  00027\n***                                                                ***  00028\n***   This is a TSO command to show the system id and the          ***  00029\n***   LINKLIST for the running system.                             ***  00030\n***                                                                ***  00031\n***   Syntax -                                                     ***  00032\n***                                                                ***  00033\n***       LINKLIST   SYSID/ID       NUM                            ***  00034\n***       LL         NOSYSID/NOID   NONUM                          ***  00035\n***                                                                ***  00036\n***       Required - none                                          ***  00037\n***                                                                ***  00038\n***       Defaults - SYSID, NUM                                    ***  00039\n***                                                                ***  00040\n***                                                                ***  00041\n***   ATTRIBUTES - REENTERABLE, REUSABLE, REFRESHABLE              ***  00042\n***                                                                ***  00043\n**********************************************************************  00044\n*                                                                       00045\n         EJECT                                                          00046\n**********************************************************************  00047\n***                                                                ***  00048\n***  Author -                                                      ***  00049\n***                                                                ***  00050\n***    Credit -                                                    ***  00051\n***      I attribute the idea for the basic approach used in this  ***  00052\n***      code to Paul L. Sullivan, who published the idea in the   ***  00053\n***      December, 1987, issue of Technical Support magazine.      ***  00054\n***                                                                ***  00055\n***      I took Paul's idea and incorporated it into a skeleton of ***  00056\n***      a \"real\" TSO command which I developed some time ago for  ***  00057\n***      presentations at meetings of SHARE, Inc., entitled \"How   ***  00058\n***      to Write a TSO Command.\"  An ESTAE exit is part of this   ***  00059\n***      skeleton.                                                 ***  00060\n***                                                                ***  00061\n***    Initial Enhancements -                                      ***  00062\n***      I used mapping macros for all the data areas needed by    ***  00063\n***      the program.  This includes by best guess of what the     ***  00064\n***      IHALLT macro would look like, using the same data names   ***  00065\n***      as appear in the Debugging Handbook.  Also, I converted   ***  00066\n***      Paul's TPUT I/O to PUTLINE so that SYSOUT trapping        ***  00067\n***      available in CLISTs could be used to hold the output,     ***  00068\n***      and so that I/O would occur in batch.  I also added the   ***  00069\n***      command operands and the code to go get the SMF System    ***  00070\n***      ID for the output display.  Finally, I ensured that all   ***  00071\n***      code would now be reenterable.  A HELP document is        ***  00072\n***      included in this source code.                             ***  00073\n***                                                                ***  00074\n***    Chuck Hoffman                                               ***  00075\n***    Supervisor, IBM Systems Programming                         ***  00076\n***    GTE Laboratories - Technical Computation Center             ***  00077\n***    40 Sylvan Road                                              ***  00078\n***    Waltham, MA  02254                                          ***  00079\n***                            (w) 617/466-2131                    ***  00080\n***                            (h) 617/551-0185                    ***  00081\n***                                                                ***  00082\n**********************************************************************  00083\n*                                                                       00084\n         EJECT                                                          00085\n**********************************************************************  00086\n***                                                                ***  00087\n***                   HELP TEXT                                    ***  00088\n***                                                                ***  00089\n***  )F FUNCTION -                                                 ***  00090\n***    The LINKLIST command is used to display the SMF system id,  ***  00091\n***    and the names of libraries on the current LNKLSTxx.         ***  00092\n***                                                                ***  00093\n***  )X SYNTAX -                                                   ***  00094\n***      LINKLIST   SYSID/ID       NUM                             ***  00095\n***      LL         NOSYSID/NOID   NONUM                           ***  00096\n***                                                                ***  00097\n***      Required - none                                           ***  00098\n***                                                                ***  00099\n***      Defaults - SYSID, NUM                                     ***  00100\n***                                                                ***  00101\n***  )O OPERANDS -                                                 ***  00102\n***                                                                ***  00103\n***  ))SYSID   - Show the SMF system id in a header line.          ***  00104\n***  ))ID      - Show the SMF system id in a header line.          ***  00105\n***                                                                ***  00106\n***  ))NOSYSID - Do not show the SMF system id in a header line.   ***  00107\n***  ))NOID    - Do not show the SMF system id in a header line.   ***  00108\n***                                                                ***  00109\n***  ))NUM     - Show a sequence number before each library name.  ***  00110\n***  ))NONUM   - Do not show a sequence number before each library ***  00111\n***              name.                                             ***  00112\n***                                                                ***  00113\n***  ))EXAMPLE -                                                   ***  00114\n***                                                                ***  00115\n***      READY                                                     ***  00116\n***      linklist                                                  ***  00117\n***                                                                ***  00118\n***      ---- BSYS LINK LIST ----                                  ***  00119\n***        0  SYS1.LINKLIB                                         ***  00120\n***        1  SYS1.CMDLIB                                          ***  00121\n***        2  SYS1.FORTLIB                                         ***  00122\n***        3  SYS1.COBLIB                                          ***  00123\n***                                                                ***  00124\n***      READY                                                     ***  00125\n***                                                                ***  00126\n***  )S SUBCOMMANDS -                                              ***  00127\n***    The LINKLIST command has no subcommands.                    ***  00128\n***                                                                ***  00129\n**********************************************************************  00130\n*                                                                       00131\n         EJECT                                                          00132\n**********************************************************************  00133\n***                                                                ***  00134\n***   THE FOLLOWING COMMAND WILL PRODUCE PDE'S AS SHOWN.           ***  00135\n***                                                                ***  00136\n***   TEST AT LABEL PAEND.  EQUATE PARMPDL WITH 9R%.               ***  00137\n***                                                                ***  00138\n***          LINKLIST  NOSYSID                                     ***  00139\n***                                                                ***  00140\n***                                                                ***  00141\n***     KEYSYSID                                                   ***  00142\n***       +-----+                                                  ***  00143\n***       |00 02|                                                  ***  00144\n***       +-----+                                                  ***  00145\n***                                                                ***  00146\n***     KEYNUM                                                     ***  00147\n***       +-----+                                                  ***  00148\n***       |00 01|                                                  ***  00149\n***       +-----+                                                  ***  00150\n***                                                                ***  00151\n**********************************************************************  00152\n         EJECT                                                          00153\n**********************************************************************  00154\n***                                                                ***  00155\n***   PROLOG                                                       ***  00156\n***                                                                ***  00157\n***     1.  Linkage conventions and addressability.                ***  00158\n***     2.  Clear the completion code                              ***  00159\n***     3.  Save the pointer to the CPPL.                          ***  00160\n***                                                                ***  00161\n**********************************************************************  00162\n*                                                                       00163\nLINKLIST CSECT                                                          00164\nLINKLIST AMODE 24                                                       00165\nLINKLIST RMODE 24                                                       00166\n         STM   R14,R12,12(R13)          SAVE INTO CALLERS S.A.          00167\n         B     BASE-LINKLIST(0,R15)     BRANCH TO AROUND EYECATCHER     00168\n         DC    AL1(L'NAME)                LENGTH OF NAME                00169\nNAME     DC    C'LINKLIST'                MODULE NAME                   00170\n         DC    C' &SYSDATE &SYSTIME '     DD.MM.YY HH.MM                00171\nBASE     LR    RBASE,R15                RBASE IS BASE REGISTER          00172\n         USING LINKLIST,RBASE             TELL ASSEMBLER                00173\n         GETMAIN  R,LV=WORKDLEN,SP=0    GET AREA FOR MYSAVE AND WORK    00174\n         ST    R13,4(0,R1)              CALLERS S.A. ADDR TO MY S.A.    00175\n         ST    R1,8(0,R13)              MY S.A. ADDR TO CALLERS S.A.    00176\n         LM    R15,R1,16(R13)           RESTORE REGS USED BY GETMAIN    00177\n         L     R13,8(0,R13)             R13 POINTS TO MY S.A.           00178\n         USING WORKD,R13                  TELL ASSEMBLER                00179\n*                                                                       00180\n         USING PARMPDL,R9               ADDRESSABILITY OF PDE LIST      00181\n*                                                                       00182\n         USING LLT,R8                   ADDRESSABILITY OF LINKLIST TBL  00183\n*                                                                       00184\n         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE TO ZERO   00185\n         ST    R1,CPPLPTR               SAVE CPPL POINTER               00186\n*                                                                       00187\n         B     MAINLINE                                                 00188\n*                                                                       00189\n         EJECT                                                          00190\n**********************************************************************  00191\n***                                                                ***  00192\n***   MAIN LINE ROUTINE                                            ***  00193\n***                                                                ***  00194\n**********************************************************************  00195\n*                                                                       00196\nMAINLINE BAL   RBAL,ABEND               SET UP ABEND EXIT               00197\n         BAL   RBAL,PPLSETUP            SET UP PARSE PARM LIST          00198\n*                                                                       00199\nMAPARSE  BAL   RBAL,PARSE               PARSE THE INPUT PARAMETERS      00200\n         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD           00201\n         BE    *+14                     THEN                            00202\n         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12         00203\n         B     ENDING                     AND GO TO ENDING              00204\n*                                                                       00205\nMALOCATE BAL   RBAL,LOCATE              LOCATE THE DATA AREAS           00206\n         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD           00207\n         BE    *+14                     THEN                            00208\n         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12         00209\n         B     ENDING                     AND GO TO ENDING              00210\n*                                                                       00211\nMAPRINT  BAL   RBAL,PRINT               PRINT THE OUTPUT                00212\n         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD           00213\n         BE    *+14                     THEN                            00214\n         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12         00215\n         B     ENDING                     AND GO TO ENDING              00216\n*                                                                       00217\n         B     ENDING                   BRANCH TO ENDING                00218\n         EJECT                                                          00219\n**********************************************************************  00220\n***                                                                ***  00221\n***   EPILOG                                                       ***  00222\n***                                                                ***  00223\n***     1.  Release storage used by IKJPARS.                       ***  00224\n***     2.  Linkage conventions.                                   ***  00225\n***                                                                ***  00226\n**********************************************************************  00227\nENDING04 LA       R15,X'04'(0,0)          RETURN CODE TO R15            00228\n         ST       R15,COMPCODE              SAVE IN COMPLETION CODE     00229\n*                                                                       00230\nENDING   LA       R2,MYPPL+(PPLANS-PPL)   ADDRESS OF PTR TO PDL         00231\n         L        R2,0(0,R2)              R4 POINTS TO PDL              00232\n         IKJRLSA  (R2)                    FREE STORAGE OF PDL           00233\n*                                                                       00234\nENDABEND ESTAE    0                       CANCEL THE ABEND EXIT         00235\n*                                                                       00236\n         L        R14,COMPCODE            R14 TEMPORARILY HAS COMP CODE 00237\n         LR       R15,R13                 R15 HAS MY SAVE AREA ADDRESS  00238\n         L        R13,4(0,R13)            R13 RESTORE, PNT TO CALLER SA 00239\n         FREEMAIN R,LV=WORKDLEN,SP=0,A=(R15)  FREE MYSAVE,COMPCODE,ETC  00240\n         LM       R0,R12,20(R13)          R0-R12 RESTORE FROM CALLER SA 00241\n         LR       R15,R14                 R15 GETS COMP CODE            00242\n         L        R14,12(0,R13)           R14 RESTORE FROM CALLERS S.A. 00243\n         MVI      12(R13),X'FF'           SIGNAL MODULE COMPLETE        00244\n         BR       R14                     RETURN                        00245\n*                                                                       00246\n         EJECT                                                          00247\n**********************************************************************  00248\n***                                                                ***  00249\n***           SET UP EXIT FOR ABENDS                               ***  00250\n***                                                                ***  00251\n***  Use ESTAE to set up an environment to trap ABENDs.            ***  00252\n***                                                                ***  00253\n***  1.  The exit is ESTXIT.                                       ***  00254\n***  2.  The return point is at label ENDING04 in main routine.    ***  00255\n***  3.  The parm list passed to the exit will be:                 ***  00256\n***                                                                ***  00257\n***         ESTUPL                                                 ***  00258\n***         +-----------+                                          ***  00259\n***         |           |==> Return point                          ***  00260\n***         +-----------+                                          ***  00261\n***         |           |==> User work area                        ***  00262\n***         +-----------+    +-----------+                         ***  00263\n***                          | Register  |                         ***  00264\n***                          | save area |                         ***  00265\n***                         ---         ---                        ***  00266\n***                         ---         ---                        ***  00267\n***                          |           |                         ***  00268\n***                          +-----------+                         ***  00269\n***                          | Other data|                         ***  00270\n***                          +-----------+                         ***  00271\n***                                                                ***  00272\n**********************************************************************  00273\nABEND    ST    RBAL,ABRBALSV            SAVE RETURN ADDRESS             00274\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00275\n*                                                                       00276\n         MVC   ESTAEL(ESTAELLN),ESTAED  INITIALIZE ESTAE PARM LIST      00277\n         LA    R15,ENDING04             ADDRESS OF RETURN POINT         00278\n         ST    R15,ESTUPL                 INTO USER PARM LIST           00279\n         LA    R15,ESTUWK               ADDRESS OF USER WORK AREA       00280\n         ST    R15,ESTUPL+4               INTO USER PARM LIST           00281\n         LA    R4,ESTUPL                R4 HAS ADDRESS OF USER PARM LST 00282\n         L     R5,VESTXIT               R5 HAS ADDRESS OF ESTAE EXIT    00283\n*                                                                       00284\nABESTAE  ESTAE (R5),PARAM=(R4),MF=(E,ESTAEL)  EXECUTE ESTAE             00285\n*                                                                       00286\nABENDEND L     RBAL,ABRBALSV            RESTORE RETURN ADDRESS          00287\n         BR    RBAL                     RETURN                          00288\n         EJECT                                                          00289\n**********************************************************************  00290\n***                                                                ***  00291\n***        CREATE PARSE PARAMETER LIST AND I/O PARM LIST           ***  00292\n***                                                                ***  00293\n***        PARSE                                                   ***  00294\n***          1.  Copy addresses of UPT, ECT and CBUF from CPPL.    ***  00295\n***          2.  Add addresses of own ECB, ANS and UWA, and        ***  00296\n***              address of PCE List (PCL) created by macros.      ***  00297\n***                                                                ***  00298\n***        I/O                                                     ***  00299\n***          1.  Copy addresses of UPD and ECT from CPPL.          ***  00300\n***          2.  Add address of own I/O ECB.                       ***  00301\n***          3.  Zero the IOPLIOPB pointer.  This will point to    ***  00302\n***              the parm block for the appropriate I/O routine.   ***  00303\n***              It will be filled in by the execute form of the   ***  00304\n***              STACK, GETLINE, PUTLINE or PUTGET macro when      ***  00305\n***              executed.                                         ***  00306\n**********************************************************************  00307\nPPLSETUP ST    RBAL,PPRBALSV            SAVE RETURN ADDRESS             00308\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00309\n*                                                                       00310\n         L     R4,CPPLPTR               ADDRESS OF CMD PROC PARM LIST   00311\n         USING CPPL,R4                    ADDRESSABILITY                00312\n         LA    R6,MYPPL                 ADDRESS OF MY PARSE PARM LIST   00313\n         USING PPL,R6                     ADDRESSABILITY                00314\n*                                                                       00315\n         MVC   PPLUPT(4),CPPLUPT        UPT  (CPPL)                     00316\n         MVC   PPLECT(4),CPPLECT        ECT  (CPPL)                     00317\n         LA    R5,MYECB                                                 00318\n         ST    R5,PPLECB                ECB  (MINE)                     00319\n         MVC   PPLPCL(4),VPARMPCL       PCL  (CSECT)                    00320\n         LA    R5,MYANS                                                 00321\n         ST    R5,PPLANS                ANS  (MINE)                     00322\n         MVC   PPLCBUF(4),CPPLCBUF      CBUF (CPPL)                     00323\n         LA    R5,MYUWA                                                 00324\n         ST    R5,PPLUWA                UWA  (MINE)                     00325\n         DROP  R6                       DROP ADDRESSABILITY             00326\n*                                                                       00327\n         LA    R6,MYIOPL                ADDRESS OF MY IO PARM LIST      00328\n         USING IOPL,R6                    ADDRESSABILITY                00329\n         MVC   IOPLUPT(4),CPPLUPT       UPT  (CPPL)                     00330\n         MVC   IOPLECT(4),CPPLECT       ECT  (CPPL)                     00331\n         LA    R15,MYIOECB                                              00332\n         ST    R15,IOPLECB              ECB  (MINE)                     00333\n         XC    IOPLIOPB(4),IOPLIOPB     IOPB (0000)                     00334\n*                                                                       00335\n         DROP  R4,R6                                                    00336\n*                                                                       00337\nPPEND    L     RBAL,PPRBALSV            RESTORE RETURN ADDRESS          00338\n         BR    RBAL                     RETURN                          00339\n         EJECT                                                          00340\n**********************************************************************  00341\n***                                                                ***  00342\n***    PARSE THE INPUT PARAMETER STRING                            ***  00343\n***                                                                ***  00344\n***      1.  Execute IKJPARS with CALLTSSR using own PPL.          ***  00345\n***      2.  Load address of Parm Descriptor Element List (PDL)    ***  00346\n***          from own ANS word into R9 for addressability.         ***  00347\n***                                                                ***  00348\n**********************************************************************  00349\nPARSE    ST    RBAL,PARBALSV            SAVE RETURN ADDRESS             00350\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00351\n*                                                                       00352\n         XC    MYECB,MYECB              ZERO THE ECB FOR PARSE          00353\nPARSEIT  CALLTSSR EP=IKJPARS,MF=(E,MYPPL)  PARSE THE PARMS              00354\n         L     R9,MYPPL+(PPLANS-PPL)    POINTER TO PDL ADDRESS          00355\n         L     R9,0(0,R9)               ADDRESSABILITY OF PDL           00356\n*                                                                       00357\nPAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS          00358\n         BR    RBAL                     RETURN                          00359\n*                                                                       00360\n         EJECT                                                          00361\n**********************************************************************  00362\n***                                                                ***  00363\n***  LOCATE THE DATA AREAS                                         ***  00364\n***                                                                ***  00365\n**********************************************************************  00366\nLOCATE   ST    RBAL,LORBALSV            SAVE RETURN ADDRESS             00367\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00368\n*                                                                       00369\n*                                                                       00370\nLOPSA    XR    R15,R15                  ADDRESS OF PSA                  00371\n         L     R15,(FLCCVT-PSA)(R15)    ADDRESS OF CVT                  00372\n*                                                                       00373\nLOSMCA   CLC   KEYSYSID,=H'2'           IF 'NOSYSID'                    00374\n         BE    LOLTA                      SKIP THIS                     00375\n         L     R8,(CVTSMCA-CVT)(R15)              ADDR OF SMF WORK AREA 00376\n         MVC   LOSYSID(4),(SMCASID-SMCABASE)(R8)  SAVE THE SYSTEM ID    00377\n*                                                                       00378\nLOLTA    L     R8,(CVTLLTA-CVT)(R15)    ADDRESS OF LINKLIST TABLE       00379\n         ST    R8,LOLLTA                SAVE IT                         00380\n*                                                                       00381\n         B     LOEND                                                    00382\n*                                                                       00383\nLORET04  LA    R15,X'04'                RETURN CODE TO R15              00384\n         ST    R15,RETCDE               SAVE IT                         00385\n         B     LOEND                    BRANCH TO ENDING                00386\n*                                                                       00387\nLOEND    L     RBAL,LORBALSV            RESTORE RETURN ADDRESS          00388\n         BR    RBAL                     RETURN                          00389\n*                                                                       00390\n         EJECT                                                          00391\n**********************************************************************  00392\n***                                                                ***  00393\n***  FORMAT AND WRITE THE MESSAGES                                 ***  00394\n***                                                                ***  00395\n**********************************************************************  00396\nPRINT    ST    RBAL,PRRBALSV            SAVE RETURN ADDRESS             00397\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00398\n*                                                                       00399\n         LA    R15,0                    SET MESSAGE NUMBER 0 (BLANK)    00400\n         BAL   RBAL,PUTLPROC            WRITE THE MESSAGE               00401\n*                                                                       00402\nPRSYSID  CLC   KEYSYSID,=H'2'           IF 'NOSYSID'                    00403\n         BE    PRDSNS                     SKIP THIS                     00404\n         MVC   MSG0001A(29),WRK0001A    INITIALIZE THE MESSAGE          00405\n         MVC   MSG0001A+10(4),LOSYSID   ADD THE SYSID                   00406\n         LA    R15,1                    SET MESSAGE NUMBER              00407\n         BAL   RBAL,PUTLPROC            WRITE THE MESSAGE               00408\n*                                                                       00409\nPRDSNS   ICM   R2,15,LLTCOUNT           R2 HAS NUMBER OF DSNS           00410\n         LA    R3,LLTDSN                POSITION TO FIRST DSNAME        00411\n         S     R3,=F'45'                POSITION TO MINUS-1 DSNAME      00412\n         ZAP   PRCOUNT,=PL2'-1'         SET COUNT TO MINUS-1            00413\nPRLOOP1  LA    R3,45(0,R3)              POINT TO NEXT DSNAME            00414\n         AP    PRCOUNT,=PL2'+1'         ADD ONE TO COUNT                00415\n         MVC   MSG0002A(57),WRK0002A    INITIALIZE THE MESSAGE          00416\nPRDSN1   MVC   MSG0002A+10(44),0(R3)    PUT THE DSN ONTO THE MESSAGE    00417\n         CLC   KEYNUM(2),=H'2'          IF 'NONUM' IN USE               00418\n         BE    PRDSN2                     BRANCH AROUND                 00419\n         MVC   MSG0002A+04(4),EDMASK    SET THE EDIT MASK               00420\n         ED    MSG0002A+04(4),PRCOUNT   EDIT THE NUMBER ONTO MESSAGE    00421\n         B     PRPRINT                  BRANCH AROUND NONUM STUFF       00422\n*                                                                       00423\nPRDSN2   MVC   MSG0002A(57),WRK0002A    RE-INITIALIZE THE MESSAGE       00424\n         MVC   MSG0002A+05(44),0(R3)    REPUT THE DSN ONTO THE MSG      00425\n*                                                                       00426\nPRPRINT  LA    R15,2                    SET MESSAGE NUMBER              00427\n         BAL   RBAL,PUTLPROC            WRITE THE MESSAGE               00428\n         BCT   R2,PRLOOP1               IF MORE, LOOP BACK UP           00429\n*                                                                       00430\n         LA    R15,0                    SET MESSAGE NUMBER 0 (BLANK)    00431\n         BAL   RBAL,PUTLPROC            WRITE THE MESSAGE               00432\n*                                                                       00433\n         B     PREND                                                    00434\n*                                                                       00435\nPRRET04  LA    R15,X'04'                RETURN CODE TO R15              00436\n         ST    R15,RETCDE               SAVE IT                         00437\n         B     PREND                    BRANCH TO ENDING                00438\n*                                                                       00439\nPREND    L     RBAL,PRRBALSV            RESTORE RETURN ADDRESS          00440\n         BR    RBAL                     RETURN                          00441\n         EJECT                                                          00442\n**********************************************************************  00443\n***                                                                ***  00444\n***   WRITE MESSAGE WITH PUTLINE                                   ***  00445\n***                                                                ***  00446\n***    1.  IOPL was initialized at beginning of program, IOPLIOPB  ***  00447\n***        field will be filled in by PUTLINE execute macro.       ***  00448\n***    2.  PTPB will be filled in by PUTLINE execute macro.        ***  00449\n***    3.  OLD will be filled in by this procedure.                ***  00450\n***                                                                ***  00451\n***    Message number in R15 is multiplied by four and used as     ***  00452\n***    offset into PUTABLE.  PUTABLE contains branch addresses     ***  00453\n***    for processing appropriate message.                         ***  00454\n**********************************************************************  00455\nPUTLPROC ST    RBAL,PURBALSV            SAVE RETURN ADDRESS             00456\n         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO          00457\n*                                                                       00458\n         SLL   R15,2                    R15 IS NOW OFFSET INTO PUTABLE  00459\n         L     R15,PUTABLE(R15)         R15 NOW POINTS TO PROCESSING    00460\n         BR    R15                      GO TO APPROPRIATE PROCESSING    00461\n*                                                                       00462\nPUTABLE  DC    A(PU0000)                PROCESS ADDR FOR BLANK LINE     00463\n         DC    A(PU0001)                PROCESS ADDR FOR LST0001I       00464\n         DC    A(PU0002)                PROCESS ADDR FOR LST0002I       00465\n*                                                                       00466\nPU0000   LA    R15,1(0,0)               SEGMENTS = 1                    00467\n         ST    R15,MYOLD                  INTO O.L.D.                   00468\n         LA    R15,MSG0000              ADDR OF BLANK LINE              00469\n         ST    R15,MYOLD+4                INTO O.L.D.                   00470\n         B     PUOUTPUT                 GO WRITE IT                     00471\n*                                                                       00472\nPU0001   LA    R15,1(0,0)               SEGMENTS = 1                    00473\n         ST    R15,MYOLD                  INTO O.L.D.                   00474\n         LA    R15,MSG0001A             ADDR OF LST0001I, SEG #1        00475\n         ST    R15,MYOLD+4                INTO O.L.D.                   00476\n         B     PUOUTPUT                 GO WRITE IT                     00477\n*                                                                       00478\nPU0002   LA    R15,1(0,0)               SEGMENTS = 1                    00479\n         ST    R15,MYOLD                  INTO O.L.D.                   00480\n         LA    R15,MSG0002A             ADDR OF LST0002I, SEG #1        00481\n         ST    R15,MYOLD+4                INTO O.L.D.                   00482\n         B     PUOUTPUT                 GO WRITE IT                     00483\n*                                                                       00484\nPUOUTPUT XC    MYPTPB(MYPTPBLN),MYPTPB  ZERO THE PUTLINE PARM BLOCK     00485\n         XC    MYIOECB,MYIOECB          ZERO THE ECB                    00486\n         PUTLINE PARM=MYPTPB,OUTPUT=MYOLD,MF=(E,MYIOPL)                 00487\n         LTR   R15,R15                  IF RETURN IS ZERO               00488\n         BZ    PUEND                      GO TO END                     00489\n         B     PUERR04                  ELSE GO TO ERROR                00490\n*                                                                       00491\nPUERR04  LA    R15,X'04'(0,0)           SET VALUE                       00492\n         ST    R15,RETCDE                 INTO INTERNAL RETURN CODE     00493\n*                                                                       00494\nPUEND    L     RBAL,PURBALSV            RESTORE RETURN ADDRESS          00495\n         BR    RBAL                     RETURN                          00496\n         EJECT                                                          00497\n**********************************************************************  00498\n***                                                                ***  00499\n***   DATA CONSTANTS                                               ***  00500\n***                                                                ***  00501\n**********************************************************************  00502\nCONSTDTA DS    0D                       AREA FOR DATA CONSTANTS         00503\nVPARMPCL DC    V(PARMPCL)               ADDR OF PARM CONTROL LIST       00504\nVESTXIT  DC    V(ESTXIT)                ADDR OF ABEND EXIT              00505\n*                                                                       00506\nF0       DC    F'0'                     CONSTANT                        00507\nF12      DC    F'12'                    CONSTANT                        00508\nBLANKS   DC    CL80' '                  BLANK LINE                      00509\n*                              0....+....1....+....2....+....3....+     00510\nMSG0000  DC    H'06',H'00',CL02'  '                                     00511\nWRK0001A DC    H'29',H'00',CL25' ---- XXXX LINK LIST ----'              00512\nWRK0002A DC    H'57',H'00',CL53' 000  DSNAME            '               00513\n*                                                                       00514\nEDMASK   DC    X'40202120'                                              00515\n*                                                                       00516\nESTAED   ESTAE MF=L                                                     00517\n*                                                                       00518\n         LTORG                                                          00519\n*                                                                       00520\nCONSTEND DS    0D                                                       00521\nCONSTLEN EQU   *-CONSTDTA               TOTAL LENGTH OF CONSTANTS       00522\n*                                                                       00523\n         EJECT                                                          00524\n**********************************************************************  00525\n***                                                                ***  00526\n***    COMMAND OPERANDS                                            ***  00527\n***                                                                ***  00528\n***    See syntax description at beginning of program.             ***  00529\n***                                                                ***  00530\n**********************************************************************  00531\nPARMPCL  IKJPARM  DSECT=PARMPDL                                         00532\n*                                                                       00533\nKEYSYSID IKJKEYWD DEFAULT='SYSID'                                       00534\n         IKJNAME  'SYSID',ALIAS=('ID')                                  00535\n         IKJNAME  'NOSYSID',ALIAS=('NOID')                              00536\n*                                                                       00537\nKEYNUM   IKJKEYWD DEFAULT='NUM'                                         00538\n         IKJNAME  'NUM'                                                 00539\n         IKJNAME  'NONUM'                                               00540\n*                                                                       00541\n         IKJENDP                                                        00542\n*                                                                       00543\n         EJECT                                                          00544\n**********************************************************************  00545\n***                                                                ***  00546\n***   DATA AREA IN SUBPOOL 000                                     ***  00547\n***                                                                ***  00548\n**********************************************************************  00549\nWORKD    DSECT                          AREA-13 FOR VARIABLES           00550\nMYSAVE   DS    18F                      REGISTER SAVE AREA              00551\nCPPLPTR  DS    F                        INITIAL VALUE OF R1 (CPPLADDR)  00552\nRETCDE   DS    F                        INTERNAL RETURN CODE            00553\nCOMPCODE DS    F                        PROGRAM COMPLETION CODE         00554\n*                                                                       00555\nABRBALSV DS    F                        RETURN ADDRESS SAVE AREA        00556\nPPRBALSV DS    F                        RETURN ADDRESS SAVE AREA        00557\nPARBALSV DS    F                        RETURN ADDRESS SAVE AREA        00558\nPURBALSV DS    F                        RETURN ADDRESS SAVE AREA        00559\nLORBALSV DS    F                        RETURN ADDRESS SAVE AREA        00560\nPRRBALSV DS    F                        RETURN ADDRESS SAVE AREA        00561\n*                                                                       00562\nMYPPL    DS    7F                       PARSE PARAMETER LIST            00563\nMYECB    DS    F                        ECB FOR PARSE                   00564\nMYANS    DS    F                        POINTER TO THE PDL              00565\n*                                                                       00566\nMYUWA    DS    0D                       WORK/SAVE AREA FOR PARSE EXITS  00567\nMYUWASV  DS    18F                      SAVE AREA FOR EXITS             00568\nMYUWAWRK DS    14F                      WORK AREA FOR EXITS             00569\n*                                                                       00570\nMSG0001A DS    H,H,CL25                                                 00571\nMSG0002A DS    H,H,CL53                                                 00572\n*                                                                       00573\nPRCOUNT  DS    PL2                      DSN COUNT                       00574\n*                                                                       00575\nMYIOPL   DS    4F                       IO PARM LIST                    00576\nMYIOECB  DS    F                        ECB FOR I/O ROUTINES            00577\nMYPTPB   PUTLINE MF=L                   PUTLINE PARM BLOCK (PTPB)       00578\nMYPTPBLN EQU   *-MYPTPB                   LENGTH OF PTPB                00579\n*                                       OUTPUT LINE DESCRIPTOR, 1 LEVEL 00580\nMYOLD    DS    F                          NUMBER OF SEGMENTS            00581\n         DS    5A                         ADDRS OF UP TO FIVE SEGMENTS  00582\n*                                                                       00583\nESTAEL   ESTAE MF=L                                                     00584\nESTAELLN EQU   *-ESTAEL                                                 00585\nESTUPL   DS    0D                       ESTAE USER PARM LIST            00586\n         DS    A                          ADDRESS OF RETURN POINT       00587\n         DS    A                          ADDRESS OF USER WORK AREA     00588\nESTUWK   DS    0D                       ESTAE USER WORK AREA            00589\n         DS    18F                        REGISTER SAVE AREA            00590\n         DS    D                          DOUBLE WORD FOR UNPACK        00591\n         DS    F                          BAL REGISTER SAVE AREA        00592\n         WTO   '.+....1....+....2....+....3....+....4....+....5',      X00593\n               ROUTCDE=(11),DESC=(7),MF=L                               00594\n*                                                                       00595\nLOLLTA   DS    A                        ADDRESS OF LINKLIST TABLE       00596\nLOSYSID  DS    CL4                      SMF SYSTEM ID                   00597\n*                                                                       00598\nWORKDEND DS    0D                                                       00599\nWORKDLEN EQU   *-WORKD                  TOTAL LENGTH OF WORK-13 AREA    00600\n         EJECT                                                          00601\n**********************************************************************  00602\n***                                                                ***  00603\n***   MAPPING DSECTS                                               ***  00604\n***                                                                ***  00605\n**********************************************************************  00606\n*                                                                       00607\n         CVT   DSECT=YES              , CVTMAP FOR IKJPARS              00608\n         IKJCPPL                        COMMAND PROCESSOR PARM LIST     00609\n         IKJPPL                         PARSE PARM LIST                 00610\n         IKJIOPL                        I/O PARM LIST                   00611\n*                                                                       00612\n         IHASDWA                      , SDWA FOR ESTAE EXIT             00613\n*                                                                       00614\n         IHAPSA                         MAP OF PSA  DSECT=PSA           00615\n         IEESMCA                        MAP OF SMCA DSECT=SMCABASE      00616\n         IHALLT                         MAP OF LLT  DSECT=LLT           00617\n*                                                                       00618\n         EJECT                                                          00619\n**********************************************************************  00620\n***                                                                ***  00621\n***   EQUATES                                                      ***  00622\n***                                                                ***  00623\n**********************************************************************  00624\nRBASE    EQU   12                       BASE REGISTER                   00625\nRBAL     EQU   10                       BAL REGISTER                    00626\n*                                                                       00627\nR0       EQU   0                                                        00628\nR1       EQU   1                                                        00629\nR2       EQU   2                                                        00630\nR3       EQU   3                                                        00631\nR4       EQU   4                                                        00632\nR5       EQU   5                                                        00633\nR6       EQU   6                                                        00634\nR7       EQU   7                                                        00635\nR8       EQU   8                                                        00636\nR9       EQU   9                                                        00637\nR10      EQU   10                                                       00638\nR11      EQU   11                                                       00639\nR12      EQU   12                                                       00640\nR13      EQU   13                                                       00641\nR14      EQU   14                                                       00642\nR15      EQU   15                                                       00643\n         EJECT                                                          00644\n**********************************************************************  00645\n***                  ESTAE (ABEND) EXIT                            ***  00646\n***                                                                ***  00647\n***   This exit will receive control from RTM during ABEND         ***  00648\n***   processing.  Data areas available to this exit will be       ***  00649\n***   the System Diagnostic Work Area (SDWA) provided by the       ***  00650\n***   RTM, and the user parm list and the areas it points to       ***  00651\n***   which are provided by the main routine.                      ***  00652\n***                                                                ***  00653\n***   This exit will format an ABEND message, and write it         ***  00654\n***   with a WTO.  It will then return to RTM.                     ***  00655\n***                                                                ***  00656\n***   The register save area used by this exit has already been    ***  00657\n***   obtained by a GETMAIN by the main program, prior to the      ***  00658\n***   execution of the ESTAE macro.                                ***  00659\n***                                                                ***  00660\n***   This exit is entered by RTM with standard MVS linkage        ***  00661\n***   conventions.  Upon entry, the following relationships        ***  00662\n***   exist:                                                       ***  00663\n***                                                                ***  00664\n*** R1              SDWA (IHASDWA)   ESTUSRPL                      ***  00665\n*** +-----------+   +------------+   +-----------+                 ***  00666\n*** |           |==>| SDWAPARM   |==>| ESURETA   |==> Return point ***  00667\n*** +-----------+   +------------+   +-----------+                 ***  00668\n***                 | SDWAABCC   |   | ESUWRKA   |==> ESUWKD       ***  00669\n***                 +------------+   +-----------+   +-----------+ ***  00670\n***                 |            |                   | Save area | ***  00671\n***                ---          ---                 ---         ---***  00672\n***                ---          ---                 ---         ---***  00673\n***                 |            |                   |           | ***  00674\n***                 +------------+                   +-----------+ ***  00675\n***                 | SDWAGR15   |                   | Other work| ***  00676\n***                 +------------+                   |   areas   | ***  00677\n***                 |            |                   +-----------+ ***  00678\n***                ---          ---                                ***  00679\n***                ---          ---                                ***  00680\n***                 |            |                                 ***  00681\n***                 +------------+                                 ***  00682\n***                                                                ***  00683\n**********************************************************************  00684\n         EJECT                                                          00685\n**********************************************************************  00686\n***                                                                ***  00687\n***          SEE DOCUMENTATION ON PREVIOUS PAGE                    ***  00688\n***                                                                ***  00689\n**********************************************************************  00690\nESTXIT   CSECT                                                          00691\n         STM   R14,R12,12(R13)          SAVE REGS INTO CALLER'S S.A.    00692\n         LR    R12,R15                  R12 HAS BASE ADDRESS            00693\n         USING ESTXIT,R12                 ADDRESSABILITY                00694\n         LR    R11,R1                   R11 POINTS TO SDWA              00695\n         USING SDWA,R11                   ADDRESSABILITY                00696\n         L     R10,SDWAPARM             R10 POINTS TO USER PARM LIST    00697\n         USING ESTUSRPL,R10               ADDRESSABILITY                00698\n         L     R15,ESUSRWKA             R15 POINTS TO USER WORK AREA    00699\n         ST    R13,4(0,R15)             CALLER'S S.A. ADDR TO OWN S.A.  00700\n         ST    R15,8(0,R13)             OWN S.A. ADDR TO CALLER'S S.A.  00701\n         LR    R13,R15                  R13 POINTS TO OWN S.A.          00702\n         USING ESUWKD,R13                 ADDRESSABILITY                00703\n*                                                                       00704\nESTMESSG BAL   R9,ESMSG                 FORMAT AND WRITE A MESSAGE      00705\n*                                                                       00706\n         PRINT GEN                                                      00707\n         L     R4,ESURETA               R4 CONTAINS RETURN ADDRESS      00708\nESTSETRP SETRP WKAREA=(R11),RC=4,RETADDR=(R4),RETREGS=YES,FRESDWA=YES   00709\n         PRINT NOGEN                                                    00710\n*                                                                       00711\nESTEND   XR    R15,R15                  CLEAR RETURN CODE               00712\n         L     R13,4(0,R13)             RESTORE R13, PNT TO CALLER'S SA 00713\n         LM    R0,R12,20(R13)           RESTORE R0-R12 FROM CALLER'S SA 00714\n         L     R14,12(0,R13)            RESTORE R14 FROM CALLER'S S.A.  00715\n         BR    R14                      RETURN                          00716\n         EJECT                                                          00717\n**********************************************************************  00718\n***                                                                ***  00719\n***                  WRITE ABEND MESSAGE                           ***  00720\n***                                                                ***  00721\n**********************************************************************  00722\nESMSG    ST    R9,ESUBALS1              SAVE BAL REGISTER               00723\n*                                                                       00724\n         MVC   WTOL(WTOLLEN),WTOD       INITIALIZE WTO PARM LIST        00725\n*                                                                       00726\nESSYSCDE L     R3,SDWAABCC              R3 HAS ABEND CODES              00727\n         SLL   R3,8                     LEFT JUSTIFY SYSTEM CODE        00728\n         LA    R4,WTOL+26               R4 POINTS INTO MESSAGE          00729\n         LA    R5,3                     R5 COUNTER SET TO 3             00730\n         BAL   R9,ESHEX                 CONVERT TO DISPLAYABLE HEX      00731\n*                                                                       00732\nESR15CDE L     R3,SDWAGR15              R3 HAS ABEND R15 CONTENTS       00733\n         LA    R4,WTOL+42               R4 POINTS INTO MESSAGE          00734\n         LA    R5,8                     R5 COUNTER SET TO 8             00735\n         BAL   R9,ESHEX                 CONVERT TO DISPLAYABLE HEX      00736\n*                                                                       00737\nESUSRCDE L     R3,SDWAABCC              R3 HAS ABEND CODES              00738\n         N     R3,ESXFFF                R3 HAS ONLY USER CODE           00739\n         CVD   R3,ESUWKDBL              CONVERT TO DECIMAL              00740\n         OI    ESUWKDBL+7,X'0F'         KILL THE SIGN                   00741\n         UNPK  WTOL+33(4),ESUWKDBL(8)   UNPACK INTO MESSAGE             00742\n*                                                                       00743\nESWTO    WTO   MF=(E,WTOL)              WRITE THE MESSAGE               00744\n*                                                                       00745\nESMSGEND L     R9,ESUBALS1              RESTORE THE BAL REGISTER        00746\n         BR    R9                       RETURN                          00747\n*                                                                       00748\n*                                                                       00749\nESHEX    XR    R2,R2                    CLEAR EVEN REG OF EVEN/ODD      00750\n         SLDL  R2,4                     R2 RECEIVES ONE HEX DIGIT       00751\n         LA    R4,1(0,R4)               R4 POINTS TO NEXT MESSAGE CHAR  00752\n         LA    R2,ESHEXTBL(R2)          R2 POINTS TO CHAR IN TABLE      00753\n         MVC   0(1,R4),0(R2)            MOVE CHAR FROM TABLE TO MESSAGE 00754\n         BCT   R5,ESHEX                 LOOP BACK UP                    00755\n         BR    R9                       RETURN                          00756\n*                                                                       00757\n         EJECT                                                          00758\n**********************************************************************  00759\n***                                                                ***  00760\n***          DATA AREAS AND DSECTS FOR ESTAE EXIT                  ***  00761\n***                                                                ***  00762\n**********************************************************************  00763\nESHEXTBL DC    CL16'0123456789ABCDEF'   TRANSLATE TABLE                 00764\n         DS    0F                       ALIGN                           00765\nESXFFF   DC    X'00000FFF'              MASK TO CLEAR BITS 0-19         00766\nWTOD     WTO   '*** ABEND ***  Codes: SXXX, U9999, R15=XXXXXXXX',      X00767\n               ROUTCDE=(11),DESC=(7),MF=L                               00768\n*                                                                       00769\n*                                                                       00770\n*                                                                       00771\nESTUSRPL DSECT                          USER PARM LIST                  00772\nESURETA  DS    A                          RETURN ADDRESS FOR RTM        00773\nESUSRWKA DS    A                          WORK AREA ADDRESS FOR ME      00774\n*                                                                       00775\n*                                                                       00776\n*                                                                       00777\nESUWKD   DSECT                          USER WORK AREA                  00778\nESUWKSAV DS    18F                        REGISTER SAVE AREA            00779\nESUWKDBL DS    D                          DOUBLE WORD FOR UNPACK        00780\nESUBALS1 DS    F                          BAL REGISTER SAVE AREA        00781\nWTOL     WTO   '.+....1....+....2....+....3....+....4....+....5',      X00782\n               ROUTCDE=(11),DESC=(7),MF=L                               00783\nWTOLLEN  EQU   *-WTOL                     LENGTH OF WTO PARM LIST       00784\n*                                                                       00785\n#PAN$AUD CSECT                                                          007854\n$PAN#AUD DC    CL21'001CBT1791   12/20/87'                              007855\n         END                                                            00786\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT058/FILE058.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT058", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}