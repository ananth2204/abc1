{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012314000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 3879876, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE541.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 3879876, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 3879876, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE541.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00=\\x05'", "DS1TRBAL": "b'\\x85\\x9c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xfc\\x00\\x01\\x04\\x00\\x00\\x02\\x00>'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04X\\x00\\x07\\x01\\x14\\x08\\x7f\\x01\\x14\\x08\\x7f\\x10\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf8@@@'", "ispf": {"version": "04.88", "flags": 0, "createdate": "2014-03-28T00:00:00", "modifydate": "2014-03-28T10:00:07", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-488"}, "text": "REGULAR CBT TAPE - VERSION 488    FILE:  541\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT488.FILE541\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 27 MEMBERS COUNTED; CUMULATIVE SIZE IS 36,722 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/28/14    10:00:07    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00E\\x01\\x14\\x08o\\x01\\x14\\x08\\x7f\\tG\\x00,\\x00,\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-28T09:47:45", "lines": 44, "newlines": 44, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  CBT File 541 - cckddump & cckdload\nFrom:     \"Varlet, Christophe\" <varlet.christophe@orange.fr>\nDate:     3/27/2014 11:30 AM\nTo:       <sknutson@cbttape.org> <sbgolob@cbttape.org>\n\nHi Sirs,\n\nRecently I got an issue in cckddump v0.1.14, trying to dump a\n3390-27 with a large usable content. I got an abend x37 on\nSYSUT2, which is normal behavior if allocated file is too small.\n\nProblem was I allocated SYSUT2 to the maximum allowed by zOS, 64k\ntracks.\n\nLooking through IBM manual I discovered a new JCL allocation\noption (since zOS 1.7) called  DSNTYPE=LARGE\" that allow us to\nallocate a PS file more than 64 tracks.\n\nActual CCKDDUMP v0.1.14 doesn't support this new kind of Large\ndatasets, so I modified the source to allow for this support. I\njust had to code a DCBE macro for SYSUT2 .\n\nI was then able to dump my 3390-27 on a 135000 trks SYSUT2 dataset.\n\nUpdated cckddump ASM source code Is attached to this mail  (I\ncalled it  v0.1.15 , look for CZV70 marks in this source).\n\nAs cckdload v0.1.1 had never been updated to restore dump files\nblocked to 16k instead of 4k (cckdump was updated to 16k in\n2006), I also updated cckdload ASM source code to support 16k\nblocksize as well as to support LARGE datasets.\n\nUpdated cckdload ASM source code Is also attached to this mail (I\ncalled it  v0.1.2 , look for CZV70 marks in this source).\n\nI send you this email in case you think these updates may be of\ninterest for the community, as I don't know how to share them.\n\nPS: these programs have been tested successfully up to the limit\nof 4 GB which is the limit of CCKD files.\n\nRegards,\nChristophe Varlet\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE02": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x14\\x08\\x7f\\x01\\x14\\x08\\x7f\\tX\\x00\\x13\\x00\\x13\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-03-28T00:00:00", "modifydate": "2014-03-28T09:58:18", "lines": 19, "newlines": 19, "modlines": 0, "user": "SBGOLOB"}, "text": "Hi Sam,\n\nThx for your work. I have uploaded and run CBT541 updated\nmaterial , doing a dump followed by a restore, and that worked as\nit have to.\n\nYour Load modules size is different from the ones I generated but\nthis have to do with z/OS version used during linkedit (C\nlibraries are used for compress process), so it's not an issue.\n\nYou should add in the comments you made that these load modules\ncan be used asis whichever z/OS version you use, but to assemble\nthem it's mandatory to have  z/OS 1.7 or later (or maybe z/OS 1.6\nwith some ptfs to support LARGE DATASETS). I personally have\naccess to z/OS 1.13 and z/OS 2.1 .\n\nKind regards\nChristophe Varlet\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$README": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00P\\x01\\x01\\x13\\x8f\\x01\\x02\\x07\\x9f\\x146\\x00_\\x00\\x01\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2002-03-20T14:36:50", "lines": 95, "newlines": 1, "modlines": 0, "user": "RYS"}, "text": "Welcome!!\n\nThis dataset contains all the files you need to get up and running\nwith the Hercules cckddump and cckdload utilities.  Installation\nconsists of 5 step, A, B, C, D and E, and you may start at any step\ndepending on your environment.  All files included here were created\non an os/390 2.9 system.\n\nThe following files make up this dataset:\n--------    ---------------------------------------\n$$README    This file\n\nA$BZCOMP    Compile bz2\nA$ZCOMP     Compile zlib\n\nB$PRLK      Pre-link bz2 and zlib\n\nC$ASM       Assemble CCKDDUMP and CCKDLOAD\n\nD$LKED      Link-edit CCKDDUMP and CCKDLOAD\n\nE$DUMP      Sample CCKDDUMP job stream\nE$LOAD      Sample CCKDLOAD job stream\n\nX$BZC       Xmitted bz2 c source\nX$BZH       Xmitted bz2 h includes\nX$BZO       Xmitted bz2 object files\n\nX$CCKDA     Xmitted cckddump and cckdload assembler source\nX$CCKDO     Xmitted object library for cckddump and cckdload and\n            compression utilities (bz2 and zlib)\nX$CCKDL     Xmitted load library containing cckddump and cckdload\n\nX$ZC        Xmitted zlib c source\nX$ZH        Xmitted zlib h includes\nX$ZO        Xmitted zlib object files\n\n\nAny of the xmitted (X$...) files may be received by issuing the\nTSO command `receive inda(cckd.jcl(x$...))'.\n\nThe following graph indicates which files must be received for the\ncorresponding begining installation step:\n\nmember         A     B     C     D     E\n-------- + --------------------------------\nx$bzc          x\nx$bzh          x\nx$zc           x\nx$zh           x\nx$bzo          x     x\nx$zo           x     x\nx$cckda        x     x     x\nx$cckdo        x     x     x     x\nx$cckdl        x     x     x     x     x\n\n\nIf you are not licensed for the os/390 c/c++ compiler then you cannot\nbegin at step A.  If your release of os/390 is below 2.8, then you\nshould begin at step A or B or C.  If your release of os/390 is 2.8\nor above, then you may proceed step E.  I recommend starting at the\nearliest step possible.\n\nInstallations steps:\n\nA   Submit job A$BZCOMP and A$ZCOMP to compile the bzip2 and zlib\n    compression routines.\n\nB   Submit job B$PRLK to pre-link the bzip2 and zlib compression\n    routines\n\nC   Submit job C$ASM to assemble the hi-level assembler programs\n    cckddump and cckdload.  Program cckdload requires a HLASM release 3\n    feature.  If your HLASM precedes this release level, then change\n    the several lines that read\n        USING (main+4095,mainend),ra\n    to\n        USING main+4095,ra\n    This, in turn, will cause a return code 4 which can be ignored.\n    The return code 4 for cckddump can likewise be ignored.\n\nD   Submit job D$LKED to linkedit the cckddump and cckdload programs\n    with the compression routines and c library.\n\nE   Modify job E$DUMP to indicate the volume you wish to dump and\n    the cckd file you want to create.\n    Modify job E$LOAD to indicate the offline unit address you want\n    to restore to and the cckd file you want to restore from.\n\nGood Luck\n\nGreg\ngsmith@nc.rr.com\n\n18 May 2001\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$RECV": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x18\\x01\\x036_\\x01\\x036_\\x080\\x00K\\x00J\\x00\\x00\\xe2\\xe8\\xe2\\xd3\\xc2\\xc4@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2003-12-31T00:00:00", "modifydate": "2003-12-31T08:30:18", "lines": 75, "newlines": 74, "modlines": 0, "user": "SYSLBD"}, "text": "        /* this rexx exec is expected to be invoked by the EXEC command\n           thus:\n\n           EXec 'dsname(RECEIVE)'\n\n           Prompting will occur for hlq and optional volser.\n\n           and it will then issue the TSO RECEIVE command for the\n           the following members to create these new data sets:\n\n           Member\n           X$BZC       Xmitted bz2 c source\n           X$BZH       Xmitted bz2 h includes\n           X$BZO       Xmitted bz2 object files\n           X$CCKDA     Xmitted cckddump and cckdload assembler source\n           X$CCKDO     Xmitted object library for cckddump and\n                       cckdload and compression utilities (bz2\n                       and zlib)\n           X$CCKDL     Xmitted load library containing cckddump\n                       and cckdload\n           X$ZC        Xmitted zlib c source\n           X$ZH        Xmitted zlib h includes\n           X$ZO        Xmitted zlib object files\n\n           You will then need to copy these datasets/members into\n           datasets for production use.\n\n           After these data sets are created several of the\n           members of this install data set will be browsed.\n           */\n\n        parse source x1 x2 x3 x4 dsn .\n         x = PROMPT(\"ON\") /* enable prompting */\n\n        say \"Enter desired hlq for target data sets\",\n            \"(default is\" sysvar(\"syspref\")\".CCKD):\"\n        pull hlq\n        hlq = strip(hlq)\n\n        if hlq = \"\" then hlq = sysvar(\"syspref\")\".CCKD.NEW\"\n\n        say \"Enter optional volser for target data sets\",\n            \"default is to allow standard allocation to\",\n            \"find a volume.\"\n        pull volser\n        volser = strip(volser)\n\n        if volser <> \"\" then vol = \"vol(\"volser\")\"\n                        else vol = \"\"\n\n        Say \"Using HLQ:\" hlq\n        if vol <> \"\" then\n           Say \"Using Volser:\" volser\n\n        call do_receive \"X$BZC BZLIB.C\"\n        call do_receive \"X$BZH BZLIB.H\"\n        call do_receive \"X$BZO BZLIB.OBJ\"\n        call do_receive \"X$CCKDA ASM\"\n        call do_receive \"X$CCKDL LOAD\"\n        call do_receive \"X$CCKDO OBJ\"\n        call do_receive \"X$ZC ZLIB.C\"\n        call do_receive \"X$ZH ZLIB.H\"\n        call do_receive \"X$ZO ZLIB.OBJ\"\n\n        if sysvar('sysispf') <> \"ACTIVE\" then exit\n        Address ISPEXEC\n           \"Browse dataset('\"dsn\"(@file541)')\"\n           \"Browse dataset('\"dsn\"($$readme)')\"\n        Exit\n\n        Do_Receive:\n        arg mem targ\n        queue \"dsn('\"hlq\".\"targ\"')\" vol\n        \"Receive inds('\"dsn\"(\"mem\")')\"\n        return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE541": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04X\\x00\\x00\\x01\\x14\\x08\\x7f\\x01\\x14\\x08\\x7f\\x10\\x00\\x00@\\x00@\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf8@@@'", "ispf": {"version": "04.88", "flags": 0, "createdate": "2014-03-28T00:00:00", "modifydate": "2014-03-28T10:00:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "CBT-488"}, "text": "//***FILE 541 is from Greg Smith, via the Hercules-390 File List    *   FILE 541\n//*           and contains an MVS version of the routines to        *   FILE 541\n//*           create CCKD-compressed DASD, and uncompressed DASD.   *   FILE 541\n//*                                                                 *   FILE 541\n//*    Note:  This file was updated by Christophe Varlet,           *   FILE 541\n//*    ----   March 2014, to accommodate larger volumes, with       *   FILE 541\n//*           a larger blocksize for the dump files (16384          *   FILE 541\n//*           instead of 4096).  I have preserved the original      *   FILE 541\n//*           material as members X$CCKDA0, X$CCKDO0, and           *   FILE 541\n//*           X$CCKDL0.  Please also see member $$NOTE01 for        *   FILE 541\n//*           further details.                                      *   FILE 541\n//*                                                                 *   FILE 541\n//*    Note:  Christophe Varlet's updated sources can only be       *   FILE 541\n//*    ----   ASSEMBLED on z/OS 1.7 and later, but the resulting    *   FILE 541\n//*           load modules will RUN on earlier z/OS versions,       *   FILE 541\n//*           at least back to 1.4.  The earlier versions of the    *   FILE 541\n//*           sources are (of course) still included in this file.  *   FILE 541\n//*                                                                 *   FILE 541\n//*    Original doc from Greg Smith:                                *   FILE 541\n//*                                                                 *   FILE 541\n//*           A word about CCKD-compressed DASD:                    *   FILE 541\n//*                                                                 *   FILE 541\n//*           Under Hercules (the PC-based S/390 hardware           *   FILE 541\n//*           emulator which runs under Linux or Windows, and       *   FILE 541\n//*           which is FREE....                                     *   FILE 541\n//*                                                                 *   FILE 541\n//*           DASD is defined to be a PC file, similar to the       *   FILE 541\n//*           DASD created for a P/390 to run under OS/2...         *   FILE 541\n//*                                                                 *   FILE 541\n//*           However, this DASD takes up a lot of disk space.      *   FILE 541\n//*           For example, a 3390-3 will take up over 2 gigabytes.  *   FILE 541\n//*                                                                 *   FILE 541\n//*           But Hercules developers have developed a solution     *   FILE 541\n//*           (as of now, this does not work for the P/390)...      *   FILE 541\n//*           That is, compressed DASD.  A CCKD-compressed DASD     *   FILE 541\n//*           device will run transparently under Hercules, as      *   FILE 541\n//*           if it were the full volume, but it usually takes      *   FILE 541\n//*           up around a fifth of the original space.  CCKD        *   FILE 541\n//*           compression is just a tad less than ZIP, but the      *   FILE 541\n//*           disk is still usable AS IS, under Hercules.           *   FILE 541\n//*                                                                 *   FILE 541\n//*           Here, we have the famous CCKD compression routines    *   FILE 541\n//*           which work so well on the PC, and they can be run     *   FILE 541\n//*           on a mainframe MVS system.  You can compress a disk   *   FILE 541\n//*           pack, port the file to a PC, and run it under         *   FILE 541\n//*           Hercules, AS IS, just as if it were on the mainframe. *   FILE 541\n//*           This gets a big WOW.....                              *   FILE 541\n//*                                                                 *   FILE 541\n//*                Greg Smith                                       *   FILE 541\n//*                gsmith@nc.rr.com                                 *   FILE 541\n//*                                                                 *   FILE 541\n//*           This file may be distributed free, but it contains    *   FILE 541\n//*           some copyrighted routines, which are subject to       *   FILE 541\n//*           whatever conditions are stated in that respective     *   FILE 541\n//*           pds member.                                           *   FILE 541\n//*                                                                 *   FILE 541\n//*           A rexx exec called $$RECV has been submitted by       *   FILE 541\n//*           Lionel Dyck, to aid in the TSO RECEIVE of the         *   FILE 541\n//*           appropriate members of this pds.                      *   FILE 541\n//*                                                                 *   FILE 541\n//*                lionel.b.dyck@kp.org                             *   FILE 541\n//*                                                                 *   FILE 541\n//*                varlet.christophe@orange.fr                      *   FILE 541\n//*                                                                 *   FILE 541\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "A$BZCOMP": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00Q\\x01\\x01\\x13\\x8f\\x01\\x01\\x13\\x8f!4\\x00)\\x00'\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2001-05-18T21:34:51", "lines": 41, "newlines": 39, "modlines": 0, "user": "RYS"}, "text": "//.....    JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//CC    JCLLIB ORDER=(CBC.SCBCPRC)\n//*\n//BLKSRT  EXEC EDCC,INFILE='<prefix>.BZLIB.C(BLKSRT)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(BLKSRT),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//BZLIB   EXEC EDCC,INFILE='<prefix>.BZLIB.C(BZLIB)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(BZLIB),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//COMPRESS EXEC EDCC,INFILE='<prefix>.BZLIB.C(COMPRESS)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(COMPRESS),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//CRCTABLE EXEC EDCC,INFILE='<prefix>.BZLIB.C(CRCTABLE)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(CRCTABLE),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//DECOMPR EXEC EDCC,INFILE='<prefix>.BZLIB.C(DECOMPR)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(DECOMPR),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//HUFFMAN EXEC EDCC,INFILE='<prefix>.BZLIB.C(HUFFMAN)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(HUFFMAN),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n//RANDTAB EXEC EDCC,INFILE='<prefix>.BZLIB.C(RANDTAB)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.BZLIB.OBJ(RANDTAB),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.H\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "A$ZCOMP": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00$\\x01\\x01\\x13\\x8f\\x01\\x02\\x07\\x9f\\x140\\x00P\\x00N\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2002-03-20T14:30:24", "lines": 80, "newlines": 78, "modlines": 0, "user": "RYS"}, "text": "//.....    JOB ......\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//CC    JCLLIB ORDER=(CBC.SCBCPRC)\n//*\n//ADLER32 EXEC EDCC,INFILE='<prefix>.ZLIB.C(ADLER32)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(ADLER32),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//COMPRESS EXEC EDCC,INFILE='<prefix>.ZLIB.C(COMPRESS)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(COMPRESS),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//CRC32   EXEC EDCC,INFILE='<prefix>.ZLIB.C(CRC32)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(CRC32),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//DEFLATE EXEC EDCC,INFILE='<prefix>.ZLIB.C(DEFLATE)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(DEFLATE),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//EXAMPLE EXEC EDCC,INFILE='<prefix>.ZLIB.C(EXAMPLE)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(EXAMPLE),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//GZIO    EXEC EDCC,INFILE='<prefix>.ZLIB.C(GZIO)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(GZIO),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFBLOCK EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFBLOCK)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFBLOCK),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFCODES EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFCODES)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFCODES),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFFAST EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFFAST)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFFAST),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFLATE EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFLATE)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFLATE),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFTREES EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFTREES)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFTREES),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//INFUTIL EXEC EDCC,INFILE='<prefix>.ZLIB.C(INFUTIL)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(INFUTIL),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//TREES   EXEC EDCC,INFILE='<prefix>.ZLIB.C(TREES)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(TREES),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//UNCOMPR EXEC EDCC,INFILE='<prefix>.ZLIB.C(UNCOMPR)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(UNCOMPR),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n//*\n//ZUTIL   EXEC EDCC,INFILE='<prefix>.ZLIB.C(ZUTIL)',\n//             CPARM='RENT,LIST,SOURCE,LONGNAME,AGG,OPT(2)',\n//             OUTFILE='<prefix>.ZLIB.OBJ(ZUTIL),DISP=SHR'\n//USERLIB   DD DISP=SHR,DSN=<prefix>.ZLIB.H\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "B$PRLK": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00T\\x01\\x01\\x13\\x8f\\x01\\x02\\x07\\x9f\\x140\\x00!\\x00\\x1f\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2002-03-20T14:30:54", "lines": 33, "newlines": 31, "modlines": 0, "user": "RYS"}, "text": "//.....   JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//PRLK   EXEC PGM=EDCPRLK\n//SYSMSGS  DD DISP=SHR,DSN=CEE.SCEEMSGP(EDCPMSGE)\n//SYSLIB   DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ\n//         DD DISP=SHR,DSN=CEE.SCEEOBJ\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(BLKSRT)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(BZLIB)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(COMPRESS)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(CRCTABLE)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(DECOMPR)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(HUFFMAN)\n//         DD DISP=SHR,DSN=<prefix>.BZLIB.OBJ(RANDTAB)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(ADLER32)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(COMPRESS)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(CRC32)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(DEFLATE)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(GZIO)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFBLOCK)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFCODES)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFFAST)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFLATE)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFTREES)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(INFUTIL)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(TREES)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(UNCOMPR)\n//         DD DISP=SHR,DSN=<prefix>.ZLIB.OBJ(ZUTIL)\n//SYSMOD   DD DISP=SHR,DSN=<prefix>.CCKD.OBJ(COMPLIB)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "C$ASM": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00C\\x01\\x01\\x13\\x8f\\x01\\x01\\x13\\x8f!8\\x00\\x14\\x00\\x12\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2001-05-18T21:38:43", "lines": 20, "newlines": 18, "modlines": 0, "user": "RYS"}, "text": "//.....    JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//DUMP    EXEC PGM=ASMA90\n//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD DISP=SHR,DSN=<prefix>.CCKD.ASM(CCKDDUMP)\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLIN    DD DISP=SHR,DSN=<prefix>.CCKD.OBJ(CCKDDUMP)\n//*\n//LOAD    EXEC PGM=ASMA90\n//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD DISP=SHR,DSN=<prefix>.CCKD.ASM(CCKDLOAD)\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLIN    DD DISP=SHR,DSN=<prefix>.CCKD.OBJ(CCKDLOAD)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "C$ASM01": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00B\\x01\\x01\\x13\\x8f\\x01\\x14\\x08o\\x15\\x18\\x00\\x13\\x00\\x12\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2014-03-27T15:18:42", "lines": 19, "newlines": 18, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//DUMP    EXEC PGM=ASMA90\n//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD DISP=SHR,DSN=IBMUSER.CCKD.ASM(CCKDDUMP)\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLIN    DD DISP=SHR,DSN=IBMUSER.CCKD.OBJ(CCKDDUMP)\n//*\n//LOAD    EXEC PGM=ASMA90\n//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB\n//          DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD DISP=SHR,DSN=IBMUSER.CCKD.ASM(CCKDLOAD)\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLIN    DD DISP=SHR,DSN=IBMUSER.CCKD.OBJ(CCKDLOAD)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "D$LKED": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x004\\x01\\x01\\x13\\x8f\\x01\\x01\\x13\\x8f!A\\x00(\\x00(\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2001-05-18T21:41:34", "lines": 40, "newlines": 40, "modlines": 0, "user": "RYS"}, "text": "//.....    JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//DUMP    EXEC PGM=HEWL\n//OBJ       DD DISP=SHR,DSN=<prefix>.CCKD.OBJ\n//SYSLIB    DD DISP=SHR,DSN=CEE.SCEESPC\n//          DD DISP=SHR,DSN=CEE.SCEELKED\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD   DD DISP=SHR,DSN=<prefix>.CCKD.LOAD\n//SYSLIN    DD *\n  INCLUDE  OBJ(COMPLIB)\n  INCLUDE  OBJ(CCKDDUMP)\n  INCLUDE  SYSLIB(EDCXHOTL)\n  INCLUDE  SYSLIB(EDCXHOTU)\n  INCLUDE  SYSLIB(EDCXHOTT)\n  ORDER    MAIN(P)\n  ENTRY    MAIN\n  SETCODE  AC(1)\n  NAME     CCKDDUMP(R)\n//*\n//LOAD    EXEC PGM=HEWL\n//OBJ       DD DISP=SHR,DSN=<prefix>.CCKD.OBJ\n//SYSLIB    DD DISP=SHR,DSN=CEE.SCEESPC\n//          DD DISP=SHR,DSN=CEE.SCEELKED\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD   DD DISP=SHR,DSN=<prefix>.CCKD.LOAD\n//SYSLIN    DD *\n  INCLUDE  OBJ(COMPLIB)\n  INCLUDE  OBJ(CCKDLOAD)\n  INCLUDE  SYSLIB(EDCXHOTL)\n  INCLUDE  SYSLIB(EDCXHOTU)\n  INCLUDE  SYSLIB(EDCXHOTT)\n  ORDER    MAIN(P)\n  ENTRY    MAIN\n  SETCODE  AC(1)\n  NAME     CCKDLOAD(R)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "D$LKED01": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00&\\x01\\x01\\x13\\x8f\\x01\\x14\\x08o\\x154\\x00'\\x00(\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2014-03-27T15:34:26", "lines": 39, "newlines": 40, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//DUMP    EXEC PGM=HEWL\n//OBJ       DD DISP=SHR,DSN=IBMUSER.CCKD.OBJ\n//SYSLIB    DD DISP=SHR,DSN=CEE.SCEESPC\n//          DD DISP=SHR,DSN=CEE.SCEELKED\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD   DD DISP=SHR,DSN=IBMUSER.CCKD.LOAD\n//SYSLIN    DD *\n  INCLUDE  OBJ(COMPLIB)\n  INCLUDE  OBJ(CCKDDUMP)\n  INCLUDE  SYSLIB(EDCXHOTL)\n  INCLUDE  SYSLIB(EDCXHOTU)\n  INCLUDE  SYSLIB(EDCXHOTT)\n  ORDER    MAIN(P)\n  ENTRY    MAIN\n  SETCODE  AC(1)\n  NAME     CCKDDUMP(R)\n//*\n//LOAD    EXEC PGM=HEWL\n//OBJ       DD DISP=SHR,DSN=IBMUSER.CCKD.OBJ\n//SYSLIB    DD DISP=SHR,DSN=CEE.SCEESPC\n//          DD DISP=SHR,DSN=CEE.SCEELKED\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD   DD DISP=SHR,DSN=IBMUSER.CCKD.LOAD\n//SYSLIN    DD *\n  INCLUDE  OBJ(COMPLIB)\n  INCLUDE  OBJ(CCKDLOAD)\n  INCLUDE  SYSLIB(EDCXHOTL)\n  INCLUDE  SYSLIB(EDCXHOTU)\n  INCLUDE  SYSLIB(EDCXHOTT)\n  ORDER    MAIN(P)\n  ENTRY    MAIN\n  SETCODE  AC(1)\n  NAME     CCKDLOAD(R)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "E$DUMP": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x01\\x13\\x8f\\x01\\x01\\x13\\x8f!F\\x00\\x0c\\x00\\x0c\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2001-05-18T21:46:06", "lines": 12, "newlines": 12, "modlines": 0, "user": "RYS"}, "text": "//.....   JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//DUMP   EXEC PGM=CCKDDUMP\n//STEPLIB  DD DISP=SHR,DSN=<prefix>.CCKD.LOAD\n//SYSPRINT DD SYSOUT=*,RECFM=VB,LRECL=255,BLKSIZE=4096\n//SYSUT1   DD DISP=OLD,UNIT=SYSDA,VOL=SER=dumpvol\n//SYSUT2   DD DISP=(,CATLG),DSN=<prefix>.dumpvol.DSK,\n//            UNIT=SYSDA,SPACE=(TRK,(7500,1500),RLSE),\n//            LRECL=4096,BLKSIZE=4096,RECFM=F\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "E$LOAD": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x01\\x13\\x8f\\x01\\x01\\x13\\x8f!G\\x00\\t\\x00\\t\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-05-18T00:00:00", "modifydate": "2001-05-18T21:47:29", "lines": 9, "newlines": 9, "modlines": 0, "user": "RYS"}, "text": "//.....   JOB .....\n//*\n//* Replace `<prefix>' with a sane value\n//*\n//LOAD   EXEC PGM=CCKDLOAD,PARM=xxxx\n//STEPLIB  DD DISP=SHR,DSN=<prefix>.CCKD.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=<prefix>.dumpvol.DSK\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "X$BZC": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x07\\xcb\\x07\\xcb\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 1995, "newlines": 1995, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$BZH": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x01`\\x01`\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 352, "newlines": 352, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$BZO": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x05u\\x05u\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 1397, "newlines": 1397, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDA": {"ttr": 2310, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x14\\x08o\\x01\\x14\\x08o\\x16\\x03\\x11E\\x11E\\x00\\x00\\xc3\\xe5\\xc1\\xd9\\xd3\\xc5\\xe3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-27T16:03:00", "lines": 4421, "newlines": 4421, "modlines": 0, "user": "CVARLET"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDA0": {"ttr": 4103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f#X\\x11;\\x11;\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T23:58:00", "lines": 4411, "newlines": 4411, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDL": {"ttr": 5896, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x14\\x08o\\x01\\x14\\x08o\\x16\\x07\\x0f\\xb5\\x0f\\xb5\\x00\\x00\\xc3\\xe5\\xc1\\xd9\\xd3\\xc5\\xe3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-27T16:07:00", "lines": 4021, "newlines": 4021, "modlines": 0, "user": "CVARLET"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDL0": {"ttr": 7683, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f#X\\x0f\\x85\\x0f\\x85\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T23:58:00", "lines": 3973, "newlines": 3973, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDO": {"ttr": 9222, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x14\\x08o\\x01\\x14\\x08o\\x16\\x04\\x0e\\x19\\x0e\\x19\\x00\\x00\\xc3\\xe5\\xc1\\xd9\\xd3\\xc5\\xe3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2014-03-27T00:00:00", "modifydate": "2014-03-27T16:04:00", "lines": 3609, "newlines": 3609, "modlines": 0, "user": "CVARLET"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$CCKDO0": {"ttr": 10756, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x05\\x9f\\x01\\x03\\x05\\x9f#X\\x0e\\x15\\x0e\\x15\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-02-28T00:00:00", "modifydate": "2003-02-28T23:58:00", "lines": 3605, "newlines": 3605, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$ZC": {"ttr": 12289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x0c\\x0b\\x0c\\x0b\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 3083, "newlines": 3083, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$ZH": {"ttr": 13569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x05K\\x05K\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 1355, "newlines": 1355, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "X$ZO": {"ttr": 14084, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x025o\\x01\\x025o\\x17@\\x0f:\\x0f:\\x00\\x00\\xd9\\xe8\\xe2@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-12-22T00:00:00", "modifydate": "2002-12-22T17:40:00", "lines": 3898, "newlines": 3898, "modlines": 0, "user": "RYS"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT541/FILE541.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT541", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}