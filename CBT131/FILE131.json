{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011305000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE131.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE131.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x10'", "DS1TRBAL": "b'\\x04\\x1e'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xce\\x00\\x08\\x00\\xce\\x00\\n\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$INDEX": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "Bridgestone Software (U.S.A), Inc.\n\nContact:  Robert M. Sirkis  Telephone:  (615) 793-7581 ext. 659\n\n\nSARSECUX - SAR security user exit\nARESPREX - Auto restore exit for DMS/OS.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ARESPREX": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ARESPREX TITLE '**** DMS/OS AUTO RESTORE SCREENING EXIT &SYSDATE ****'\n         PRINT  GEN\nARESPREX CSECT\nR0      EQU  0\nR1      EQU  1                       <=== ADDRESS OF PARMLIST\nR2      EQU  2                       W\nR3      EQU  3                        O\nR4      EQU  4                         R\nR5      EQU  5                          K\nR6      EQU  6\nR7      EQU  7                            R\nR8      EQU  8                             E\nR9      EQU  9                              G\nR10     EQU  10                              S\nR11     EQU  11\nR12     EQU  12                      <=== BASE REGISTER\nR13     EQU  13                      <=== SAVE AREA ADDRESS\nR14     EQU  14                      <=== ENTRY POINT ADDRES\nR15     EQU  15                      <=== RETURN CODE\n*****\n**\n**       THIS EXIT IS INVOKED BY DMS/OS BEFORE A DATSET IS PROCESSED\n**       FOR AUTO RESTORE.  IT IS USED TO CREATE AN SMF RECORD TYPE\n**       127 TO AUDIT THE NUMBER OF RESTORES ARE DONE.\n**\n**       THIS MODULE LINKAGE ATTRIBUTES: AC=1,NORENT\n**       MACROS: SMFWTM, WTO\n**\n**       PLEASE REFER TO THE DMS/OS SYSTEMS GUIDE FOR MORE INFO.\n**\n*****\n*\n         EJECT\n         SAVE   (14,12),,ARESPREX-&SYSDATE-&SYSTIME\n         LR     R12,R15              ESTABLISH BASE\n         USING  ARESPREX,R12         AND MAKE IT USABLE\n         LA     R11,SAVE             GET ADDRESS OF SAVE REG\n         ST     R13,4(R11)           CHAIN FORWARD\n         ST     R11,8(R13)           ... CHAIN BACK\n         LR     R13,R11              SET OUR SAVE REG\n*****\n**\n**       BUILD SMF RECORD TYPE 127\n**\n*****\n         ST     R1,@PLIST            SAVE ADDRESS OF PLIST\n         L      R2,0(R1)             GET ADDRESS OF DSNAME\n         MVC    SMFDSN,0(R2)         MOVE TO RECORD\n         L      R2,4(R1)             GET ADDRESS OF ARCHIVE FROM VOL\n         MVC    SMFIVOL,0(R2)        MOVE TO RECORD\n         L      R2,8(R1)             GET ADDRESS OF TO VOLUME\n         MVC    SMFTVOL,0(R2)        MOVE TO RECORD\n         L      R2,20(R1)            GET ADDRESS OF JOB NAME\n         MVC    SMFJOB,0(R2)         MOVE TO SMF RECORD\n         TIME   DEC                  GET CURRENT DATE AND TIME\n         ST     R0,SMFTIMED          AND STORE INTO RECORD\n*****\n**\n**       WRITE THE SMF RECORD\n*****\n         SMFWTM SMFREC               WRITE THE RECORD\n         LTR    R15,R15              CHECK RETURN CODE\n         BZ     LEAVE                RETURN CODE O.K.\n*****\n**\n**       ISSUE MESSAGE TO CONSOLE LOG ABOUT BAD RETURN CODE\n**       FROM SMF WRITE\n*****\n         CVD    R15,DWORD            CONVERT RETURN CODE TO DECIMAL\n         UNPK   DWORD(2),DWORD+6(1)  UNPACK THE RETURN CODE\n         OI     DWORD+1,X'F0'        FIX THE SIGN\n         MVC    WTOLIST+41(2),DWORD  PUT INTO MESSAGE\n         WTO    MF=(E,WTOLIST)       ISSUE ERROR MESSAGE\nLEAVE    DS     0H\n         L      R13,4(R13)           GET OLD SAVE AREA\n         RETURN (14,12),RC=0         AND RETURN\n         LTORG  ,\n         EJECT\n********\n*\n*        DATA AREAS\n*\n********\nSAVE     DS     18F                  SAVE AREA\n@PLIST   DS     F                    ADDRESS OF PARMLIST\nSMFREC   DS     0F                   SMF RECORD\n         DC     AL2(SMFRECE-SMFREC)  LENGTH OF SMF RECORD\n         DC     H'0'                 SEGMENT DESCRIPTOR (0)\n         DS     AL1                  SYSTEM INDICATOR\n         DC     AL1(127)             SMF RECORD TYPE X'7F'\n         DS     F                    TIME IN 1/100S SECONDS FROM 00:00\n         DS     F                    DATE IN JULIAN FORMAT\n         DS     CL4                  SMCA\nSMFJOB   DS     CL8                  NAME OF JOB RESTORING DATASET\nSMFDSN   DS     CL44                 DATASET NAME\nSMFIVOL  DS     CL6                  DATASET ARCHIVE FROM\nSMFTVOL  DS     CL6                  DATASET RESTORED TO\nSMFTIMED DS     PL4                  TIME OF RESTORAL IN DECIAML\nSMFRECE  DS     0C\nDWORD    DS     D\nWTOLIST  WTO    'BSA4000A ERROR IN SMFWTM MACRO, RC = XX.      ',      X\n               ROUTCDE=(1,9),DESC=(2),MF=L\n         DC     C'&SYSDATE_&SYSTIME'\n         END    ARESPREX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SARSECUX": {"ttr": 521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//S EXEC ASMFCL,MAC1='SAR.SOURCE',\n//        PARM.LKED='LIST,LET,NCAL,XREF,RENT,AC=1'  ,AMODE=31'\n         TITLE 'SARSECUX - SECURITY USER EXIT'\nSARSECUX CSECT\n***********************************************************************\n*                                                                     *\n* SARSECUX -                                                          *\n*        USER EXIT TO DETERMINE IF USER/JOB IS ALLOWED TO             *\n*        ACCESS A SYSOUT GROUP OR MOUNT A TAPE.                       *\n*                                                                     *\n* INPUTS -                                                            *\n*        REG 0 - WHETHER THE EXIT WAS CALLED FROM ONLINE RETRIEVAL    *\n*                OR THE BATCH UTILITY.                                *\n*                0 - EXIT CALLED FROM ONLINE RETRIEVAL.               *\n*                4 - EXIT CALLED FROM BATCH UTILITY.                  *\n*        REG 1 - ADDRESS OF PARAMETER LIST (MAPPED BY SARCPL).        *\n*        REG13 - ADDRESS OF REGISTER SAVE AREA                        *\n*        REG14 - RETURN ADDRESS                                       *\n*        REG15 - ENTRY POINT ADDRESS.                                 *\n*                                                                     *\n* RETURN CODES -                                                      *\n*        0 - USER IS ALLOWED FULL ACCESS TO SYSOUT GROUP OR MAY       *\n*            MOUNT TAPES.                                             *\n*        4 - USER IS NOT ALLOWED TO ACCESS GROUP OR MAY NOT MOUNT     *\n*            TAPES.                                                   *\n*                                                                     *\n* ATTRIBUTES -                                                        *\n*        RENT, REUS.                                                  *\n*        MUST BE LINKED AS AUTHORIZED, BUT EXECUTES IN UNAUTHORIZED   *\n*        STATE.                                                       *\n*                                                                     *\n***********************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         SAVE  (14,12),,SARSECUX.&SYSDATE\n         LR    R12,R15             LOAD BASE REGISTER\n         USING SARSECUX,R12\n         LR    R2,R1               LOAD PLIST ADDRESS\n         USING CPL,R2              ADDRESSABILITY FOR PLIST\n         L     R3,CPLMCR           LOAD MCR ADDRESS\n         USING MCR,R3              ADDRESSABILITY FOR MCR\n         L     R4,CPLGCR           LOAD GCR ADDRESS\n         USING GCR,R4              ADDRESSABILITY FOR GCR\n         CLI   CPLFNCT,CPLFTMNT    TAPE MOUNT FUNCTION?\n         BNE   SECRQ               NO\n*\n*        TAPE MOUNT AUTHORITY REQUEST\n*\n         CLI   CPLMODE,CPLMBCH     CHECK FOR BATCH\n         BE    CKTMNT\n         TM    MCRSWTC2,MCRS2NTM   TAPE MOUNTS ALLOWED FOR ONLINE?\n         BO    RC4                 NO\n         CLI   CPLMODE,CPLMSPF     CHECK FOR SPF\n         BE    CKTMNT\n         CLI   CPLMODE,CPLMTSO     CHECK FOR TSO\n         BE    CKTMNT\n         B     RC4                 TAPE MOUNTS NOT ALLOWED FOR OTHER\n*                                  ONLINE RETRIEVAL SYSTEMS\nCKTMNT   L     R1,PSATOLD          LOAD TCB ADDRESS\n         L     R1,TCBJSCB(,R1)     LOAD JSCB ADDRESS\n         L     R1,JSCBACT(,R1)     LOAD ACTIVE JSCB ADDRESS\n         ICM   R1,B'1111',JSCBPSCB(R1) LOAD PSCB ADDRESS\n         BZ    RC0                 NOT TSO\n         TM    PSCBATR1(R1),PSCBVMNT TSO USER ALLOWED TAPE MOUNTS?\n         BO    RC0                 YES\n         B     RC4                 NO\n*\n*        SECURITY REQUEST FOR SYSOUT GROUP ACCESS\n*\nSECRQ    CLI   MCRRACF,C' '        RACF/ACF2 CHECKING REQUIRED?\n         BNH   DOBSA               NO, DO BRIDGESTONE SECURITY CHECK\n         CLI   CPLFNCT,CPLFSSL     BUILD SYSOUT LIST?\n         BE    RC0                 YES, ALLOW ACCESS\n         CLI   CPLMODE,CPLMSPF     DO RACF/ACF2 CHECK FOR SPF\n         BE    DORACF\n         CLI   CPLMODE,CPLMTSO     DO RACF/ACF2 CHECK FOR TSO\n         BE    DORACF\n         CLI   CPLMODE,CPLMBCH     DO RACF/ACF2 CHECK FOR BATCH\n         BE    DORACF\n         B     RC0                 ALLOW ACCESS\n*\n*        BRIDGESTONE SECURITY CHECK\n*\nDOBSA    DS    0H\n         CLI   MCRCLSL,C'W'        IS THIS PRODUCTION DATABASE ?\n         BNE   RC0                 NO, THEN BYPASS SECURITY\n*        CLI   CPLMODE,CPLMCICS    IS THIS CICS ?\n*        BE    PATCH               NO, THEN GOTO PATCH FOR NOW\n         L     R7,CPLUID           GET UID\n         LTR   R7,R7               IS THIS ONLINE RETRIEVAL ?\n         BZ    RC0                 NO, THEN BYPASS SECURITY\n         LA    R5,UIT#N3           R5 =  # OF ENTRIES IN UIT\n         LA    R6,UIT              R6 -> TOP UIT ENTRY\nFINDUID  DS    0H\n         CLC   0(8,R7),0(R6)       IS UID = UID ON UIT ?\n         BE    FOUNDUID            YES, THEN CHECK FLAG FOR SID\n         LA    R6,UITEL(R6)        R6 -> NEXT UIT ENTRY\n         BCT   R5,FINDUID          SEARCH FOR UID IN UIT\n         B     PATCH               IF UID NOT FOUND, GOTO PATCH FOR NOW\n         B     RC4                 IF UID NOT IN UIT, DO NOT ALLOW\nFOUNDUID DS    0H\n         L     R6,8(R6)            R6 -> FT ENTRY FOR UID\n         L     R5,0(R6)            R5 =  # OF ENTRIES IN FT\n         LA    R6,4(R6)            R6 -> TOP FT ENTRY\nFINDSID  DS    0H\n         L     R7,0(R6)            R7 -> SID ENTRY ON SIT\n         CLC   GCRID,0(R7)         IS SID = SID ON SIT ?\n         BE    FOUNDSID            YES, THEN CHECK FLAG WITH FUNCTION\n         LA    R6,FTEL(R6)         R7 -> NEXT FT ENTRY\n         BCT   R5,FINDSID          SEARCH FOR SID IN FT\n         B     PATCH               IF SID NOT FOUND, GOTO PATCH FOR NOW\n         B     RC4                 IF SID NOT FOUND, DO NOT ALLOW\nFOUNDSID DS    0H\n         LA    R7,4(R6)            GET FLAG FOR UID\n         SR    R5,R5\n         IC    R5,CPLFNCT          GET FUNCTION CODE\n         CH    R5,=H'11'           IS THIS A VALID FUNCTION CODE ?\n         BH    RC0                 NO, THEN IGNORE\n         SLL   R5,2                MULTIPLY IT BY 4\n         B     FLGTEST(R5)\nFLGTEST  B     F00                 INTEREST\n         B     F01                 LOAD\n         B     F02                 PRINT BATCH (J)\n         B     F03                 DELETE\n         B     F04                 BROWSE\n         B     F05                 PRINT ONLINE (P)\n         B     F06                 KEEP\n         B     F07                 KEEP TAPE\n         B     F08                 NONE\n         B     F09                 NONE\n         B     F10                 VIEW N\n         B     F11                 VIEW CHANGE\n*\n*        FUNCTION CHECKING\n*\nF00      DS    0H                  INTEREST\n         TM    0(R7),X'01'         IF ANY VIEW IS ALLOWED,\n         BO    RC0                  THEN ALLOW\n         TM    1(R7),X'FF'\n         BM    RC0\n         TM    2(R7),X'80'\n         BO    RC0\n         B     PATCH               ELSE NOPE\nF01      DS    0H                  LOAD\n         TM    0(R7),X'10'\n         BO    RC0\n         B     RC4\nF02      DS    0H                  PRINT BATCH\n         TM    0(R7),X'08'\n         BO    RC0\n         B     RC4\nF03      DS    0H                  DELETE\n         TM    0(R7),X'80'\n         BO    RC0\n         B     RC4\nF04      DS    0H                  BROWSE\n         B     RC0\nF05      DS    0H                  PRINT ONLINE\n         TM    0(R7),X'08'\n         BO    RC0\n         B     RC4\nF06      DS    0H                  KEEP\n         TM    0(R7),X'20'\n         BO    RC0\n         B     RC4\nF07      DS    0H                  KEEP ON TAPE\n         TM    0(R7),X'20'\n         BO    RC0\n         B     RC4\nF08      DS    0H                  TAPE MOUNT\n         B     RC0\nF09      DS    0H                  NONE\n         B     RC0\nF10      DS    0H                  VIEW N\n         SR    R5,R5\n         ICM   R5,B'0001',CPLVNUM  GET VIEW NUMBER\n         CH    R5,=H'9'            VIEW NUMBER > 9 ?\n         BH    RC0                 YES, IGNORE\n         SLL   R5,2                MULTIPLY BY 4\n         B     VIEWTST(R5)\nVIEWTST  B     TV00                VIEW 0\n         B     TV01                VIEW 1\n         B     TV02                VIEW 2\n         B     TV03                VIEW 3\n         B     TV04                VIEW 4\n         B     TV05                VIEW 5\n         B     TV06                VIEW 6\n         B     TV07                VIEW 7\n         B     TV08                VIEW 8\n         B     TV09                VIEW 9\n*\nTV00     DS    0H                  VIEW 0\n         TM    0(R7),X'01'\n         BO    RC0\n         B     RC4\nTV01     DS    0H                  VIEW 1\n         TM    1(R7),X'80'\n         BO    RC0\n         B     RC4\nTV02     DS    0H                  VIEW 2\n         TM    1(R7),X'40'\n         BO    RC0\n         B     RC4\nTV03     DS    0H                  VIEW 3\n         TM    1(R7),X'20'\n         BO    RC0\n         B     RC4\nTV04     DS    0H                  VIEW 4\n         TM    1(R7),X'10'\n         BO    RC0\n         B     RC4\nTV05     DS    0H                  VIEW 5\n         TM    1(R7),X'08'\n         BO    RC0\n         B     RC4\nTV06     DS    0H                  VIEW 6\n         TM    1(R7),X'04'\n         BO    RC0\n         B     RC4\nTV07     DS    0H                  VIEW 7\n         TM    1(R7),X'02'\n         BO    RC0\n         B     RC4\nTV08     DS    0H                  VIEW 8\n         TM    1(R7),X'01'\n         BO    RC0\n         B     RC4\nTV09     DS    0H                  VIEW 9\n         TM    2(R7),X'80'\n         BO    RC0\n         B     RC4\nF11      DS    0H                  VIEW CHANGE\n         TM    0(R7),X'02'\n         BO    RC0\n         B     RC4\n*\n*        TEMPORARY PATCH UNTIL THE FULL FUNCTION OF SECURITY\n*        IS CODED AND TESTED\n*\n*        IF SID IN QUESTION IS NOT IN THE SIT,\n*           THEN ALLOW ALL FUNCTIONS\n*\nPATCH    DS    0H\n         LA    R5,SIT              R6 -> TOP SIT ENTRY\n         LA    R6,SIT#N3           R6 =  # OF ENTRIES IN SIT\nPATCHA   DS    0H\n         CLC   GCRID,0(R5)         IS SID = SID ON SIT ?\n         BE    RC4                 YES, THEN DONT ALLOW\n         LA    R5,SITEL(R5)        R5 -> NEXT SIT ENTRY\n         BCT   R6,PATCHA           SEARCH FOR SID IN FT\n         CLI   CPLFNCT,CPLFDEL     IS THIS DELETE ?\n         BNE   RC0                 NO, THEN ALL IS OK FOR NOW\n         L     R7,CPLUID           R7 -> UID\n         CLC   =C'EKP',0(R7)       DELETE FOR ADMINISTRATOR ONLY\n         BE    RC0\n         CLC   =C'BNR',0(R7)\n         BE    RC0\n         CLC   =C'TTS',0(R7)\n         BE    RC0\n         B     RC4\n*\n*        CONSTRUCT RACF/ACF2 PSEUDO DATA SET NAME\n*\nDORACF   MVI   RFDSN,C' '          BLANK OUT DSNAME\n         MVC   RFDSN+1(L'RFDSN-1),RFDSN\n         MVC   RFDSN(L'MCRRACF),MCRRACF SET HIGH LEVEL-INDEX\n         LA    R1,RFDSN            SCAN FOR END OF HIGH-LEVEL INDEX\nRACDSCBK CLI   0(R1),C' '\n         BE    RACDSCFD\n         LA    R1,1(,R1)\n         B     RACDSCBK\nRACDSCFD MVI   0(R1),C'.'          APPEND PERIOD\n         MVC   1(8,R1),GCRID       APPEND SYSOUT ID\n         CLI   GCRID+8,C' '        SYSOUT ID LONGER THAN 8 CHAR?\n         BE    CKACF2              YES\n         MVC   9(2,R1),=CL2'.$'    SEPARATE ID INTO TWO QUALIFIERS\n         MVC   11(L'GCRID-8,R1),GCRID+8\nCKACF2   TM    MCRSWTC3,MCRS3ACF   ACF2 PROCESSING?\n         BO    ACF2CHK             YES\n*\n*        ISSUE RACHECK\n*\n         MVC   RFPLIST,MDLRCHK     COPY RACF PLIST\n         LA    R1,RFPLIST          LOAD PLIST ADDRESS\n         LA    R5,RFDSN            LOAD ADDRESS OF PSEUDO DSNAME\n         LA    R6,MCRRACF          LOAD ADDRESS RACF \"VOLSER\"\n         CLI   CPLFNCT,CPLFPRT     BACKGROUND PRINT REQUEST?\n         BE    RCUPD               YES, VERIFY UPDATE AUTHORITY\n         CLI   CPLFNCT,CPLFOPRT    ONLINE PRINT REQUEST?\n         BE    RCUPD               YES, VERIFY UPDATE AUTHORITY\n         CLI   CPLFNCT,CPLFDEL     DELETE REQUEST?\n         BE    RCALTER             YES, VERIFY ALTER AUTHORITY\n         CLI   CPLFNCT,CPLFKEEP    PERMANENT KEEP REQUEST?\n         BE    RCALTER             YES, VERIFY ALTER AUTHORITY\nRCREAD   RACHECK ENTITY=((R5)),VOLSER=(R6),MF=(E,(1)),                 X\n               ATTR=READ           VERIFY READ ACCESS\n         B     RCRC                GO CHECK RETURN CODE\nRCUPD    RACHECK ENTITY=((R5)),VOLSER=(R6),MF=(E,(1)),                 X\n               ATTR=UPDATE         VERIFY UPDATE ACCESS\n         B     RCRC                GO CHECK RETURN CODE\nRCALTER  RACHECK ENTITY=((R5)),VOLSER=(R6),MF=(E,(1)),                 X\n               ATTR=ALTER          VERIFY ALTER ACCESS\nRCRC     CH    R15,=H'4'           AUTHORIZATION GIVEN?\n         BH    RC4                 NO\n         B     RC0                 ALLOW ACCESS\n*\n*        ISSUE ACF2 CHECK\n*\nACF2CHK  LA    R1,RFPLIST          LOAD PLIST ADDRESS\n         USING ACFSPARM,R1         ADDRESSABILITY\n         XC    ACFSPARM(ACFSPRML),ACFSPARM ZERO OUT PLIST\n         MVI   ACFSPREQ,ACFSPRDS   SET DSNAME REQUEST\n         MVI   ACFSPID1,ACFSPIUR   SET USER REQUEST\n         LA    R0,RFDSN            SET ADDRESS OF DSNAME\n         ST    R0,ACFSPDSN\n         CLI   CPLFNCT,CPLFPRT     BACKGROUND PRINT REQUEST?\n         BE    A2UPD               YES, VERIFY UPDATE AUTHORITY\n         CLI   CPLFNCT,CPLFOPRT    ONLINE PRINT REQUEST?\n         BE    A2UPD               YES, VERIFY UPDATE AUTHORITY\n         CLI   CPLFNCT,CPLFDEL     DELETE REQUEST?\n         BE    A2SCR               YES, VERIFY ALTER AUTHORITY\n         CLI   CPLFNCT,CPLFKEEP    PERMANENT KEEP REQUEST?\n         BE    A2SCR               YES, VERIFY ALTER AUTHORITY\nA2READ   MVI   ACFSPAC1,ACFSPAIN   SET INPUT ONLY ACCESS\n         B     A2SVC               GO ISSUE ACF2 SVC\nA2UPD    MVI   ACFSPAC1,ACFSPAUP   SET UPDATE ACCESS\n         B     A2SVC               GO ISSUE ACF2 SVC\nA2SCR    MVI   ACFSPAC1,ACFSPAOT   SET SCRATCH/RENAME/ALLOC ACCESS\n         DROP  R1\nA2SVC    IC    R5,MCRA2SVC         LOAD ACF2 SVC NUMBER\n         EX    R5,MDLSVC           EXECUTE ACF2 SECURITY INTERFACE SVC\n         LTR   R15,R15             AUTHORIZATION GIVEN?\n         BNZ   RC4                 NO\nRC0      RETURN (14,12),RC=0       RETURN TO ALLOW FULL ACCESS\nRC4      RETURN (14,12),RC=4       RETURN TO PREVENT ACCESS\n*\n*        DATA AREA\n*\nMDLSVC   SVC   *-*                 *** USED BY EX INST ***\nMDLRCHK  RACHECK CLASS='DATASET',DSTYPE=N,MF=L MODEL RACF PLIST\nMDLRCHKL EQU   *-MDLRCHK           LENGTH OF RACF MODEL PLIST\n         EJECT\n*\n*        BRIDGESTONE SECURITY TABLES\n*\n*\n*        USER ID TABLE\n*        (UID,@(ENT FT))\n*\nUIT      DS    0F\n         DC    CL8'REA     ',A(T0002)\nUITEL    EQU   *-UIT               UIT ENTRY LENGTH\n         DC    CL8'TSO0102 ',A(T0002)\n         DC    CL8'TSO0109 ',A(T0001)\n         DC    CL8'TSO0323 ',A(T0001)\n         DC    CL8'TSO0119 ',A(T0002)\n         DC    CL8'TSO0106 ',A(T0001)\n         DC    CL8'TSO0105 ',A(T0001)\n         DC    CL8'TSO0104 ',A(T0001)\n         DC    CL8'TSO0103 ',A(T0001)\n         DC    CL8'TSO0101 ',A(T0001)\n         DC    CL8'TSO0100 ',A(T0001)\n         DC    CL8'TSO0334 ',A(T0001)\nUIT#N3   EQU   (*-UIT)/UITEL       TOTAL UIT ENTRIES\n*\n*        FLAG TABLE\n*        (@(ENT SIT),FLAG)\n*\nFT       DS    0F\nT0001    DC    F'3'\n         DC    A(S1),XL4'FFFF8000'\n         DC    A(S2),XL4'FFFF8000'\n         DC    A(S3),XL4'FFFF8000'\nT0002    DC    F'3'\n         DC    A(S1),XL4'1DFF8000'\n         DC    A(S2),XL4'1DFF8000'\n         DC    A(S3),XL4'1DFF8000'\nFTEL     EQU   8                   FT ENTRY LENGTH\n*\n*        SYSOUT ID TABLE\n*\nSIT      DS    0F\nS1       DC    CL12'G4CONS      '\nSITEL    EQU   *-SIT               SIT ENTRY LENGTH\nS2       DC    CL12'G4DETAIL    '\nS3       DC    CL12'G4EXCL      '\nSIT#N3   EQU   (*-SIT)/SITEL       TOTAL SIT ENTRIES\n         EJECT\n         LTORG\n         EJECT\n         SARCPL\nRFDSN    EQU   CPLUWORK,44         RACF/ACF2 PSEUDO DSNAME\nRFPLIST  EQU   CPLUWORK+44,MDLRCHKL RACF/ACF2 PARAMETER LIST\n         EJECT\n         SARMCR\n         EJECT\n         SARGCR\nPSATOLD  EQU   X'21C'              OFFSET IN PSA TO TCB ADDRESS\nTCBJSCB  EQU   X'B4'               OFFSET IN TCB TO JSCB ADDRESS\nJSCBACT  EQU   X'15C'              OFFSET IN JSCB TO ACTIVE JSCB\nJSCBPSCB EQU   X'108'              OFFSET IN JSCB TO PSCB\nPSCBATR1 EQU   X'10'               OFFSET IN PSCB TO ATTRIBUTE FLAGS\nPSCBVMNT EQU   X'10'               VOLUME MOUNT AUTHORITY BIT IN PSCB\n         EJECT\n***********************************************************************\n*                                                                     *\n* ACDSV -                                                             *\n*        ACF2 ACCESS PARM LIST.                                       *\n*                                                                     *\n***********************************************************************\nACDSV    DSECT\nACFSPARM DS    0F                  ACF2 SECURITY PARM LIST\nACFSPREQ DS    X                   SECURITY REQUEST DEFINITION\nACFSPRDS EQU   X'01'               VALIDATE DSNAME ONLY\nACFSPID1 DS    X                   SECURITY REQUESTOR IDENT.\nACFSPIUR EQU   9                   USER CALLABLE REQUEST\nACFSPAC1 DS    X                   ACCESS TYPE FLAGS\nACFSPAIN EQU   X'00'               ACCESS IS INPUT ONLY\nACFSPAUP EQU   X'04'               ACCESS IS UPDATE\nACFSPAOT EQU   X'7F'               RENAME/SCRATCH/ALLOC ...\n         DS    X\nACFSPDSN DS    F                   DSNAME ADDRESS\n         DS    14F\nACFSPRML EQU   *-ACFSPARM          LENGTH OF ACFSPARM BLOCK\n         END\n/*\n//LKED.SYSLMOD DD DSN=SYSB.LINKLIB,DISP=SHR\n//LKED.SYSIN DD *\n NAME SARSECUX(R)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT131/FILE131.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT131", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}