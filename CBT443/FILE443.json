{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012038000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1528436, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE443.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1528436, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE443.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x19\\x08'", "DS1TRBAL": "b'_\\xa0'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03/\\x00\\x06\\x031\\x00\\x01\\x00\\x1a'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00%\\x01\\x19&_\\x01\\x19&_\\x17@\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-09-22T00:00:00", "modifydate": "2019-09-22T17:40:25", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-498"}, "text": "REGULAR CBT TAPE - VERSION 498    FILE:  443\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT498.FILE443\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 23 MEMBERS COUNTED; CUMULATIVE SIZE IS 14,313 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/22/19    17:40:25    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#MEMBERS": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x05/\\x01\\x00\\x05/\\x18\\x07\\x00\\x14\\x00\\x14\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-21T00:00:00", "modifydate": "2000-02-21T18:07:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "KIMU"}, "text": " @CMD#120 : MVS command execution program. ( from TSO )\n @ENQ#003 : show ENQ/DEQ table ( from TSO )\n @ENQC    : @ENQ#003 clist\n @LISTD3  : cache hit report\n @LOADMAP : load module map program\n @LOC#301 : cataloged dataset search\n @OS#6HC  :  subroutine\n @OS#6HC2 :  subroutine\n @SLEEP   : waits for specified time\n @SMF30#1 : smf type 30 report\n @SMF41#0 : smf type 41 report\n @SMF74#8 : smf type 74 report\n @SMF99#D :  @SMF99#1 copy\n @SMF99#T :  @SMF99#1 copy\n @SMF99#1 : smf type 99 report\n @VOL     :  @VOL#301 procedure\n @VOL#301 : scan dasd for specified volser ( from TSO or STC )\n @WLMTRC  :  @SMF99#1 (japanese translation for wlm action trace report\n VSCHK000 : virtual storage monitor\n WLMTRCD  :  @WLMTRC translation table\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#XMIT": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x05/\\x01\\x00\\x05/\\x18\\x07\\x00\\x10\\x00\\x10\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-21T00:00:00", "modifydate": "2000-02-21T18:07:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "KIMU"}, "text": "//FXMIT    JOB CLASS=F,MSGCLASS=W,NOTIFY=&SYSUID\n//XMIT    EXEC PGM=IKJEFT01\n//STEPCAT  DD DSN=TSOCAT,DISP=SHR\n//SYSIN    DD DUMMY\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//XMITFILE DD DSN=KIMU.UTILITY.SRCLIB,DISP=SHR\n//XMITOUT  DD DSN=KIMU.UTILITY.XMI,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=FC9AI3,SPACE=(CYL,(10,1))\n//XMITLOG  DD SYSOUT=*\n//SYSTSIN  DD *\n PROFILE NOPREFIX\n XMIT DUMMY.DUMMY FILE(XMITFILE) -\n                  OUTFILE(XMITOUT) -\n                  NOLOG SEQ\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@CMD#120": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x04\\xe7\\x04\\xe7\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1255, "newlines": 1255, "modlines": 0, "user": "KIMU"}, "text": "//FCMD120  JOB CLASS=x,MSGCLASS=x,NOTIFY=userid,TIME=1440\n//* -----------------------------------------------------------------\n//* @CMD install .\n//*\n//* Step1:\n//*   File Transfer to MVS .\n//* Step2:\n//*  Enter below line.\n//*  => X ALL;F '<- CHECK' ALL (Enter)\n//* Step3:                                                     <- CHECK\n//*  Update Non-Exclusive Line .                               <- CHECK\n//*  ex. => C volser VOL001 ALL NX (Enter)                     <- CHECK\n//* Step4:                                                     <- CHECK\n//*  Submit This JCL.                                          <- CHECK\n//* Step5:                                                     <- CHECK\n//*  Comcat datsets in your logon procedure.                   <- CHECK\n//*   module.library : STEPLIB                                 <- CHECK\n//* Step6:                                                     <- CHECK\n//*  Enter below line on TSO command line .                    <- CHECK\n//*  => TSO @CMD 'D A,L'                                       <- CHECK\n//*                                                            <- CHECK\n//* -----------------------------------------------------------------\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n* -----------------------------------------------------------------\n         DC   C'<< @CMD .. Enter MVS Command >>'\n         DC   C'  Version '\n@VERSION DC   CL6'v1r2m0'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n* --- Start of Process --------------------------------------------\n@CMD     CSECT\n@CMD     AMODE 31\n@CMD     RMODE ANY\n*        --- Start of AR-Mode Program ( Initialize ) ---\n         SAVE  (14,12),T,*             Save Reg.\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n* set CPPL Base Reg.\n         LR    R06,R01\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR\n         LAE   R03,0(R15,0)            Load Address 31 Bit\n         USING @CMD,R03                Base Reg. R03 ,\n*        For Re-Entrant Process\n         STORAGE OBTAIN,LENGTH=R2ENTAL Getmain Storage\n         LAE   R04,0(0,R01)            R04 <- Dynamic Stor. Base\n         LAE   R08,R2ENTA              Copied Dinamic Stor.\n         L     R09,=A(R2ENTAL)\n         LAE   R10,0(0,R04)\n         LR    R11,R09\n         MVCL  R10,R08\n         USING R2ENTA,R04              R04 <- Dynamic Stor.\n         MVC   4(4,R13),=C'F1SA'       set acro in save area\n         LR    R12,R13\n         LAE   R13,SA#001              Load New-R13\n         ST    R13,8(R12)              Store New-R13 SA+8(Thd Word)\n*        --- Start of AR-Mode Program ( End-Initialize ) ---\n* set CPPL Base Reg.\n         USING CPPL,R06                CPPL Base Reg. R06\n*\n         USING MCSCOMM,R05             Set Communication DSECT\n         LA    R05,MCSENT               Base Reg R03\n*\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* Initialize Communication DSECT\n         XC    COM_WTME,COM_WTME\n         XC    COM_WLEN,COM_WLEN\n         XC    COM_TLEN,COM_TLEN\n         MVI   COM_CMD,X'40'               clear COMMAND RESULT AREA\n         MVC   COM_CMD+1(L'COM_CMD-1),COM_CMD\n         MVI   COM_WAIT,X'40'              clear COMMAND RESULT AREA\n         MVC   COM_WAIT+1(L'COM_WAIT+1),COM_WAIT\n* Call TSO P-List\n         BAL   R14,@PPL                    parse command routine\n         LTR   R15,R15\n         BNZ   @BYE\n*\n         CLC   COM_CMD(4),HELPKW           Show Help Message\n         BE    @HELP\n*\n         ST    R06,COM_CPPL                Store CPPL Address to DSECT\n         XC    COM_TLEN,COM_TLEN\n         CALL  CMDE,((R05))\n*\n@BYE     EQU   *\n         STORAGE RELEASE,              Freemain Storage                X\n               LENGTH=R2ENTAL,                                         X\n               ADDR=(R04)\n         PR                            Program Return Mother\n*\n*--------------------------------------------------------------------\n* --- Sub Routine -------------------------------------------------\n* --- PPL ( parse service routine ) -------------------------------\n@PPL     EQU   *\n         BAKR  R14,0               Branch and Stack ( Stack Only )\n         SAC   0                   Primary Mode\n         SYSSTATE ASCENV=P\n*\n         LA    R01,L_PPL\n         GETMAIN RU,LV=(1)         getmain PPL comm area\n         STM   R00,R01,PPL_LEN     save getmain length and address\n         L     R12,PPL_ADR\n         USING PPL,R12             PPL Base Reg. R12\n         MVC   PPLUPT,CPPLUPT      UPT address from CPPL\n         MVC   PPLECT,CPPLECT      ECT address from CPPL\n         MVC   PPLCBUF,CPPLCBUF    command buffer from CPPL\n         LA    R01,ANS             load answer area address and\n         ST    R01,PPLANS           store it in the PPL\n         XC    #ECB2,#ECB2         clear ECB ( event control block )\n         LA    R01,#ECB2           load ECB address and\n         ST    R01,PPLECB           store it in the PPL\n         L     R01,PCLADCON        load PCL address and\n         ST    R01,PPLPCL           store it in the PPL\n*\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)\n         DROP  R12\n         LTR   R15,R15             test IKJPARS\n         BNZ   @PPL_ERR             if error goto @PPL_ERR\n*\n         L     R12,ANS             load PPL answer area\n         USING PRDSECT,R12\n* --- MVS Command Area ---\n         L     R01,PCLCMD          R01 <- Command Result Area\n         LH    R02,PCLCMD+4        R02 <- Command Result Length\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   COM_CMD(0),0(R01)   copy MVS Command\n*        ST    R02,@CMDL             Store Length\n* --- Wait Message ---\n         L     R01,PCLMES          R01 <- Command Result Area\n         LH    R02,PCLMES+4        R02 <- Command Result Length\n         LTR   R02,R02             if No Input Wait Message\n         BZ    @PPL_SP1              goto @PPL_SP1\n         CL    R02,=F'80'          if Over 80 Byte\n         BH    @PPL_ERR              goto @PPL_ERR ??\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   COM_WAIT(0),0(R01)  Copy Wait Message\n         STH   R02,COM_WLEN          Store Message Length\n@PPL_SP1 EQU   *\n* --- MCS Console Name ---\n         MVC   COM_CONN(8),@CONDFLT\n         L     R01,PCLCNM          R01 <- Command Result Area\n         LH    R02,PCLCNM+4        R02 <- Command Result Length\n         LTR   R02,R02             test IKJPARS\n         BZ    @PPL_SP2\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   COM_CONN(0),0(R01)  Copy Console Name\n@PPL_SP2 EQU   *\n* --- Timer ---\n         L     R01,PCLTM           R01 <- Command Result Area\n         LA    R02,PCLTM+6         R02 <- Command Result Flag\n         TM    0(R02),X'80'        If No Result\n         BNO   @PPL_SP3              goto @PPL_SP3\n         L     R01,0(R01)\n         STH   R01,COM_WTME\n@PPL_SP3 EQU   *\n* --- Wait Message ---\n         XC    COM_FORM,COM_FORM\n         L     R01,PCLMFM          R01 <- Command Result Area\n         LH    R02,PCLMFM+4        R02 <- Command Result Length\n         LTR   R02,R02             if No Input Wait Message\n         BZ    @PPL_SP4              goto @PPL_SP1\n@PPL_LP4 EQU   *\n         CLI   0(R01),C'J'         If MFORM=(J)\n         BNE   @PPL_SP41\n         OI    COM_FORM,X'80'\n@PPL_SP41 EQU  *\n         LA    R01,1(R01)\n         BCT   R02,@PPL_LP4\n@PPL_SP4 EQU   *\n*\n         DROP  R12\n*\n         L     R01,PPL_ADR         free main PPL comm area\n         LA    R02,L_PPL           free main PPL comm area\n         FREEMAIN RU,LV=(R02),A=(R01)\n         LA    R15,0\n         PR                        Return Main\n*\n@PPL_ERR EQU   *\n         TPUT  MSG#E001,L'MSG#E001\n         L     R01,PPL_ADR         free main PPL comm area\n         LA    R02,L_PPL           free main PPL comm area\n         FREEMAIN RU,LV=(R02),A=(R01)\n         LA    R15,8\n         PR\n*\n* --- Help Message ------------------------------------------------\n@HELP    EQU   *\n         L     R01,@VER_A\n         MVC   MSG#HV(6),0(R01)\n         LA    R07,MSG#HELP\n         LA    R09,MSG#HPL\n         XR    R10,R10\n@HELP#L  EQU   *\n         CLR   R10,R09\n         BNL   @HELP#X\n         TPUT  (R07),L'MSG#HELP\n         LA    R07,L'MSG#HELP(R07)\n         LA    R10,L'MSG#HELP(R10)\n         B     @HELP#L\n@HELP#X  EQU   *\n         B     @BYE\n*--------------------------------------------------------------------\n* --- Sub Routine ( error routine ) -------------------------------\n* --- Define Storage ----------------------------------------------\n* --- DYNAMIC AREA ---\nR2ENTA   DS    0F\n* --- Reg. Save Area ----------------------------------------------\nSA#001   DS    18F\n* --- IKJPARS ( tso parse service routine ) -----------------------\n*        PRINT GEN\nPCLADCON DC    A(PCLDEFS)\nPCLAREA  DS    0F\nPCLDEFS  IKJPARM DSECT=PRDSECT\nPCLCMD   IKJPOSIT QSTRING,                                             *\n               PROMPT='MVS Command',                                   *\n               HELP=('Enter MVS Command ..')\n* --- Timer ---\nPCLT     IKJKEYWD\n         IKJNAME 'T',SUBFLD=PCLTFLD\n* --- Wait Message ---\nPCLM     IKJKEYWD\n         IKJNAME 'M',SUBFLD=PCLMFLD\n* --- MCS Console Name ---\nPCLCN    IKJKEYWD\n         IKJNAME 'CN',SUBFLD=PCLCFLD\n* --- MFORM ---\nPCLFM    IKJKEYWD\n         IKJNAME 'MFORM',SUBFLD=PCLFFLD\n* --- Timer ---\nPCLTFLD  IKJSUBF\nPCLTM    IKJIDENT 'NUMBER',INTEG,DEFAULT='30',MAXLNTH=4\n* --- Wait Message ---\nPCLMFLD  IKJSUBF\nPCLMES   IKJIDENT ALPHANUM,FIRST=ANY,OTHER=ANY\n* --- MCS Console Name Field ---\nPCLCFLD  IKJSUBF\nPCLCNM   IKJIDENT ALPHANUM,MAXLNTH=8,                                  *\n               UPPERCASE,FIRST=ALPHA,OTHER=ALPHANUM,                   *\n               PROMPT='MCS Console Name.',                             *\n               HELP=('Enter MCS Console Name ...')\n* --- MFORM ---\nPCLFFLD  IKJSUBF\nPCLMFM   IKJIDENT ALPHANUM,FIRST=ANY,OTHER=ANY\n         IKJENDP\n*        PRINT NOGEN\n         DS    0F\n@CONDFLT DC    CL8'CMDCONS'       Default Console Name\n* --- PPL Getmain Area --------------------------------------------\nPPL_LEN  DS    F                  PPL length\nPPL_ADR  DS    F                  PPL address\n* --- PPL answer area ---------------------------------------------\nANS      DS    F\n* --- ECB ---------------------------------------------------------\n#ECB2    DS    F\n@VER_A   DC    A(@VERSION)\nHELPKW   DC    CL4'HELP'\nMCSENT   DS    (MCSCOMML)X\n* --- Error Message -----------------------------------------------\nMSG#E001 DC    CL79'> PPL Error Happend .. Bye !!'\n* --- messgae -----------------------------------------------------\nMSG#HELP DS    0CL79\n DC CL79'# @CMD : Enter MVS Command from Master Auth Console ...      '\n DS 0CL79\n*        0....+....1....+....2....+....3....+....4....+....5....+...\n DC CL51'# --------------------------------------------------'\nMSG#HV   DC CL06'v@r@m@'\n DC CL22'-- '\n DC CL79'# Usage.                                                     '\n DC CL79'#  @CMD ''command'' T(nn) M(xxxxxxx) CN(consnm)              '\n DC CL79'#                                                            '\n DC CL79'#  command : MVS Command                                     '\n DC CL79'#  nn      : Timeout Sec                                     '\n DC CL79'#  xxxxxxx : Wait Message                                    '\n DC CL79'#  consnm  : MVS Console Name                                '\n DC CL79'#                                                            '\n DC CL79'#                           Thanks for Your use .. Bye !     '\nMSG#HPL  EQU   *-MSG#HELP\nR2ENTAX  EQU   *\nR2ENTAL  EQU   *-R2ENTA                  Re-Entrant Area Length\n         LTORG\n* -----------------------------------------------------------------\n*        --- 31 Bit Addressing Mode ---\nCMDE     AMODE 31\nCMDE     RMODE 24\nCMDE     CSECT\n* ---------------------------------------------------------\n*        --- Start of AR-Mode Program ( Initialize ) ---\n         PRINT NOGEN\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n         LR    R05,R01                 Copy Paramater Address .\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR            AR Mode\n         LAE   R03,0(R15,0)            Load Address AR Mode\n         USING CMDE,R03                Base Reg. R03\n*        For Re-Entrant Process\n         STORAGE OBTAIN,LENGTH=REENTAL Getmain Storage\n         LAE   R04,0(0,R01)            R04 <- Dynamic Stor. Base\n         LAE   R08,REENTA              R08 <- Dinamic Stor Adr.\n         L     R09,=A(REENTAL)         R09 <- Dynamic Stor Leng.\n         LAE   R06,0(0,R04)\n         LR    R07,R09\n         MVCL  R06,R08\n         USING REENTA,R04              R04 <- Dynamic Stor.\n         LAE   R13,SAVEAREA            Load New-R13\n         MVC   4(4,R13),=C'F1SA'       set acro in save area\n*        --- Start of AR-Mode Program ( End-Initialize ) ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n*        --- Main Process ---\n*        --- Start of Argument Parameter ---\n         L     R05,0(R05)              R05 <- Parameter Area Dsect\n         USING MCSCOMM,R05\n* - debug -\n*        LA    R01,MSG#0004\n*        LA    R02,L'MSG#0004\n*        BAL   R14,@PUTL#S             Echo Message\n* - debug -\n* --- Echo MVS Command ---\n         MVC   MSG#0003+02(78),COM_CMD Copy Command to Message Area\n         LA    R01,MSG#0003\n         LA    R02,L'MSG#0003\n         BAL   R14,@PUTL#S             Echo Message\n* --- Clear Result Area ---\n         XC    COM_RC,COM_RC           Clear Return Code\n         XC    COM_RSN,COM_RSN         Clear Reason Code\n         XC    COM_FLAG,COM_FLAG       Clear Flag\n* --- End of Argument Parameter Initialize ---\n* --- MCS Console Activate ---\n         BAL   R14,MCS#ACT             MCS Console Activate .\n         LTR   R15,R15                 if Comsole Act Error\n         BNZ   QUIT1                     goto QUIT\n* --- TSO Attention Process ---\n         STAX  MCSATTN,OBUF=(ATTNOUTB,79),                             *\n               IBUF=(ATTNINB,140),MF=(E,STAXLIST),                     *\n               USADDR=(R05)\n* --- Timeout Sec Set ---\n         LH    R01,=H'100'             1Sec = 0.01Sec * 100\n         MH    R01,COM_WTME\n         LTR   R01,R01\n         BNZ   WAITSET1\n         L     R01,=F'3000'            30Sec ( Default )\nWAITSET1 EQU   *\n         ST    R01,WAITMAX\n* - debug -\n*        LA    R07,WAITMAX\n*        LA    R09,MSG#0014+25-REENTA(R04)\n*        CALL  @HC,((R07),(R09),4)\n*        LA    R01,MSG#0014\n*        LA    R02,L'MSG#0014\n*        BAL   R14,@PUTL#S             Echo Message\n* - debug -\n* --- Wait Timer Set ---\n         XC    WMAXFLG,WMAXFLG\n         STIMERM SET,BINTVL=WAITMAX,ID=WMAXID,WAIT=NO\n* --- Command Response Event Initialize ---\n         EVENTS ENTRIES=10             Command Response Events Define\n         ST    R01,@EVTBL\n* --- Command Issue ---\n         BAL   R14,CMDISSUE            MVS Command Enter\n* --- All Timer Clear ---\n         STIMERM CANCEL,ID=WMAXID\n* --- Extended MCS Console De-Activate ---\n         BAL   R14,MCS#DEA             MCS Console DeActivate .\n* --- End-Main Process ---\n* --- Terminate of Program ---\nQUIT1    EQU   *\n         STORAGE RELEASE,              Freemain Storage                X\n               LENGTH=REENTAL,                                         X\n               ADDR=(R04)\n         PR                            Program Return Mother\n*        --- End of Terminate process ---\n*        --- MCS Console Activate ---\nMCS#ACT  EQU   *\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n* --- MCS Console AUTH=MSTR ---\n         XC    @MCSOP,@MCSOP           Set MCSOP-MCSOATH1 Field\n         USING MCSOPPRM,R15\n         LA    R15,@MCSOP\n         MVI   MCSOATH1,MCSOMSTR       Master Console\n*        OI    MCSOMFM1,MCSOMFT        Display Time Stamp\n*        OI    MCSOMFM1,MCSOMFS        Display System Name\n         OI    MCSOMFM1,MCSOMFJ        Display JOB-ID/Name\n*        OI    MCSOMFM1,MCSOMFM        Without SYSTEM,TIME,JOB(Default)\n*        OI    MCSOMFM1,MCSOMFX        Supperss System,JOB\n         DROP  R15\n* --- Parameter Set ---\n         MVC   CONSNM(8),COM_CONN      Copy Console Name\n* --- SVC Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n         MODESET KEY=ZERO,MODE=SUP     SVC Mode\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR\n* --- Primary | AR and SVC Mode ---\n         MCSOPER REQUEST=ACTIVATE,     MCS Console Activate            C\n               NAME=CONSNM,              Console Name                  C\n               CONSID=CONSID,            Console ID Address            C\n               TERMNAME=CONSNM,          Terminal Name                 C\n               OPERPARM=@MCSOP,                                        C\n               MCSCSA=MCSA,                                            C\n               MCSCSAA=MCSCSAA,                                        C\n               MSGECB=MCSECB,                                          C\n               RTNCODE=RC,                                             C\n               RSNCODE=RSN\n* --- Problem Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n         MODESET KEY=NZERO,MODE=PROB\n* --- Check Condition Code ---\n         L     R15,RC                  Check Return Code .\n         LTR   R15,R15\n         BZ    @MCSACTQ\n         L     R15,RSN                 Check Reason Code .\n         LTR   R15,R15\n         BZ    @MCSACTQ\n* --- Error Code Set ---\n         MVC   COM_MAC(8),=CL8'MCSOPER'\n         MVC   COM_ACT(8),=CL8'ACTIVATE'\n         MVC   COM_RC(4),RC\n         MVC   COM_RSN(4),RSN\n         MVC   ERRMSG01+05(8),=CL8'MCSOPER'\n         MVC   ERRMSG01+14(8),=CL8'ACTIVATE'\n         BAL   R14,ECHOERR\n         LA    R15,8\n@MCSACTQ EQU   *\n         OI    COM_FLAG,X'40'          Set MCS-Activate Flag\n         PR                            Return\n*        --- End of MCS Console Activate ---\n*        --- File Read and Command Precess Loop ---\nCMDISSUE EQU   *\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n         XC    MSGWAITF,MSGWAITF\n*\nCMDENTR  EQU   *\n* --- Copy Parameter Set ---\n         MVC   CMDBUF(80),COM_CMD      Copy Command Buffer\n* --- Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n         MODESET KEY=ZERO,MODE=SUP     SVC Mode\n* --- Primary and SVC Mode ---\n         LA    R02,TEXTAREA\n         MGCRE TEXT=(R02),             Enter MVS Command               C\n               CONSID=CONSID,                                          C\n               CART=MCART,                                             C\n               CMDFLAG=NOHCPY,                                         C\n               MF=(E,LMGCRE)\n*+       LTR   R15,R15                 If Nomal Complete\n*+       BC    B'1000',CMDWAIT           goto CMDWAIT\n* --- Problem Mode ---\n*+       MODESET KEY=NZERO,MODE=PROB\n* --- Error Code Set ---\n*+       ST    R15,COM_RC\n*+       MVC   COM_MAC(8),=CL8'MGCRE'\n*+       MVC   COM_ACT(8),=CL8' '\n*\n*+       MVC   ERRMSG01+05(8),=CL8'MGCRE'\n*+       MVC   ERRMSG01+14(8),=CL8' '\n*+       BAL   R14,ECHOERR\n*\n*+       B     CMDISU#X                Return to Main Routine\nCMDWAIT  EQU   *\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* --- Problem Mode ---\n         MODESET KEY=NZERO,MODE=PROB\n* --- Wait to Message ---\n         LA    R08,MCSECB              Events Test\n         EVENTS TABLE=@EVTBL,ECB=(8),WAIT=NO\n         LTR   R01,R01                 if Message Come\n         BNZ   MSGGOT\n@EVLOP2  EQU   *\n         STIMERM SET,DINTVL=WAITXX,ID=WAITID,WAIT=YES\n         TM    COM_FLAG,X'80'          If ATTN Key\n         BO    CMDISU#X                 De-Activate Console\n         STIMERM TEST,ID=WMAXID,TU=WAITTU\n         CLC   WAITTU,=F'0'            If Time Over\n         BNE   @EVLOP1                   goto @EVLOP1\n         LH    R01,COM_TLEN            Time Over Message\n         LTR   R01,R01                 Is None\n         BZ    @EVSKP2                   goto @EVSKP2\n         STC   R01,*+5                 Copy Time Over Message\n         MVC   MSG#0015+05(0),COM_TOUT\n         LA    R01,MSG#0015\n         LA    R02,L'MSG#0015\n         BAL   R14,@PUTL#S             Echo Message\n         B     CMDISU#X                De-Activate Console\n@EVSKP2  EQU   *\n         LA    R01,MSG#0016            Default Timeout Message\n         LA    R02,L'MSG#0016\n         BAL   R14,@PUTL#S             Echo Message\n         B     CMDISU#X                De-Activate Console\n@EVLOP1  EQU   *\n*\n         LA    R08,MCSECB              Command Response Test\n         EVENTS TABLE=@EVTBL,WAIT=NO\n         LTR   R01,R01                 If Come\n         BNZ   MSGGOT                    goto MSGGOT\n         B     @EVLOP2                 No Time Over\nMSGGOT   EQU   *\n*\nMSGLP    EQU   *\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* --- SVC Mode Set ---\n         MODESET KEY=ZERO,MODE=SUP     SVC Mode\n* --- AR Mode Set ---\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR\n* --- Get Messgae ---\n         MCSOPMSG REQUEST=GETMSG,                                      C\n               CONSID=CONSID,          Console ID                      C\n               RTNCODE=RC,             Return Code                     C\n               RSNCODE=RSN             Reason Code\n* --- Message Data Block Set ---\n         LAE   R08,0(0,R01)            put mdb address in R08\n         USING MDB,R08                 addressability to the mdb\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* --- Problem Mode Set ---\n         MODESET KEY=NZERO,MODE=PROB\n* --- AR Mode Set ---\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR\n         MVI   MDBFLGS,0               clear processing flags\n         MVI   CMDRSP,0           assume not issuing command response\n         CLC   RC,=F'8'                if any messages\n         BL    GOTMDB                    process it (rc<8)\n         BNE   GOTERR                    some kind of error (rc>8)\n*                                        no mode Messages\n         TM    MSGWAITF,X'80'            if no Wait Message\n         BO    CMDISU#Q                    goto CMDISU#Q\n*\n         SAC   0                         Primary Mode\n         SYSSTATE ASCENV=P\n*\n         TM    COM_FLAG,X'80'          If ATTN Key\n         BO    CMDISU#X                 De-Activate Console\n         STIMERM TEST,ID=WMAXID,TU=WAITTU\n         CLC   WAITTU,=F'0'            If No Timeover\n         BNE   WAITSKP1                  goto WAITSKP1\n         LH    R01,COM_TLEN\n         LTR   R01,R01                 If Timeover Message is None\n         BZ    WAITSKP2                  goto WAITSKP2\n         STC   R01,*+5\n         MVC   MSG#0015+05(0),COM_TOUT\n         LA    R01,MSG#0015\n         LA    R02,L'MSG#0015\n         BAL   R14,@PUTL#S             Echo Message\n         B     CMDISU#X                De-Activate Console\nWAITSKP2 EQU   *\n         LA    R01,MSG#0016            Default Timeout Message\n         LA    R02,L'MSG#0016\n         BAL   R14,@PUTL#S             Echo Message\n         B     CMDISU#X                De-Activate Console\nWAITSKP1 EQU   *\n* -DEBUG-\n*        LA    R01,MSG#0018            Timeout Message\n*        LA    R02,L'MSG#0018\n*        BAL   R14,@PUTL#S             Echo Message\n* -DEBUG-\n         STIMERM SET,DINTVL=WAITXX,ID=WAITID,WAIT=YES\n         B     CMDWAIT\n         DS    0D\nGOTERR   EQU   *                       GetMessage Error\n* --- Error Code Set ---\n         MVC   COM_MAC(8),=CL8'MCSOPMSG'\n         MVC   COM_ACT(8),=CL8'GETMSG'\n         MVC   COM_RC(4),RC\n         MVC   COM_RSN(4),RSN\n         MVC   ERRMSG01+05(8),=CL8'MCSOPMSG'\n         MVC   ERRMSG01+14(8),=CL8'GETMSG'\n         BAL   R14,ECHOERR\n         B     CMDISU#X                De-Activate Console\nCMDISU#Q EQU   *\n* -DEBUG-\n*        SAC   0                       Primary Mode\n*        SYSSTATE ASCENV=P\n*        LA    R01,MSG#0017            End of Wait Loop Message\n*        LA    R02,L'MSG#0017\n*        BAL   R14,@PUTL#S             Echo Message\n* -DEBUG-\nCMDISU#X EQU   *\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n         PR\n*        --- MCS Console De-Activate ---\nMCS#DEA  EQU   *\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* --- SVC Mode Set ---\n         MODESET KEY=ZERO,MODE=SUP     SVC Mode\n* --- AR Mode Set ---\n         SAC   512                     AccessRegister(AR) Mode\n         SYSSTATE ASCENV=AR\n         MCSOPER REQUEST=DEACTIVATE,                                   C\n               CONSID=CONSID\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n* --- Problem Mode Set ---\n         MODESET KEY=NZERO,MODE=PROB\n         PR                            Return\n*        --- End of Display Command Issue ---\n*\n*        --- Call Error Message ---\nECHOERR  EQU   *                       Echo Error Message\n         BAKR  R14,0                   Branch and Stack ( Stack Only )\n* --- Primary Mode Set ---\n         SAC   0                       Primary Mode\n         SYSSTATE ASCENV=P\n         ST    R15,WKF\n         LA    R07,WKF-REENTA(R04)\n         LA    R09,ERRMSG01+58-REENTA(R04)\n         CALL  @HC,((R07),(R09),4)\n         LA    R07,RC-REENTA(R04)\n         LA    R09,ERRMSG01+32-REENTA(R04)\n         CALL  @HC,((R07),(R09),4)\n         LA    R07,RSN-REENTA(R04)\n         LA    R09,ERRMSG01+45-REENTA(R04)\n         CALL  @HC,((R07),(R09),4)\n         LA    R01,ERRMSG01\n         LA    R02,L'ERRMSG01\n         BAL   R14,@PUTL#S             Echo Message\n         PR\n*        --- Call Error Message ---\n*      --------------------------------------------------------------\n*                               MDBTYPE\n* R08 -> +--------------------+                    ---          ---\n*        | MDB Header         | x'0001'(MDBTYP1)    |         MDBHLEN\n*        +--------------------+                   MDBLEN  R06-> ---\n*        |General Object      | x'0001'(MDBGOBJ)    |\n*        +--------------------+                     |\n*        |Control Prog Object | x'0002'(MDBCOBJ)    |\n*        +--------------------+                     |\n*        |Text Object         | x'0004'(MDBTOBJ)    |\n*        +--------------------+                     |\n*        |Text Object         |                     |\n*        +--------------------+                     |\n*         ..................                        |\n*         .............                             |\n*         ........                           R07-> ---\n*\nGOTMDB   DS      0H\n         LR    R07,R08            calc end of mbd in R07\n         AH    R07,MDBLEN         start+mdblen in header\n         LR    R06,R08            remember start of MDB for pass 2\n         LA    R08,MDBHLEN(R08)   bump to 1st object\nOBJLP    DS    0H                 loop through the objects\n         LH    R12,MDBTYPE        get type\n         C     R12,=A(MDBGOBJ)    check for general object\n         BNE   NOTG               not general object\n         TM    MDBFLGS,MDBFGO     see if first general object\n         BO    NXTOBJ             no, skip it\n         BAL   R14,GOTMDBG        process general object\n         B     NXTOBJ             bump to next object\nNOTG     DS    0H\n         C     R12,=A(MDBCOBJ)    check for control prog object\n         BNE   NOTC               not control prog object\n         TM    MDBFLGS,MDBFCO     see if first control prog object\n         BO    NXTOBJ             no, skip it\n         BAL   R14,GOTMDBC        process control prog object\n         B     NXTOBJ             bump to next object\nNOTC     DS    0H                 not control prog obj\nNXTOBJ   DS    0H                 find next object\n         TM    MDBFLGS,MDBFGO+MDBFCO see if we found general and SCP\n         BO    FNDTXT             got them, loop through text objs\n         AH    R08,MDBLEN         bump to next object\n         CR    R08,R07            see if this is the end\n         BL    OBJLP              no, get another object\n         B     MSGLP              missing necessary objects, skip it\n*---------------------------------------------------------------------*\n*-                                                                   -*\n*- FNDTXT:   ENTRY VIA BRANCH (NOT A SUBROUTINE)                     -*\n*- Function: Process all text objects in all MDBs for this message.  -*\n*-           Text objects are always ordered, but it cannot be       -*\n*-           assumed that they are contiguous.                       -*\n*- Operation:                                                        -*\n*-     find end of MDB                                               -*\n*-     get pointer to next MDB in message                            -*\n*-     loop through MDBs                                             -*\n*-        loop through objects                                       -*\n*-            when text object                                       -*\n*-              call GOTMDBT to process text object                  -*\n*-            otherwise ignore object                                -*\n*-          skip to next object                                      -*\n*-            add object length                                      -*\n*-            if end of MDB, move to next MDB                        -*\n*-                                                                   -*\n*---------------------------------------------------------------------*\nFNDTXT   DS    0H\n         LR    R08,R06            reset R08 to start of MDB\nTXTLP    DS    0H\n         LR    R07,R08            calc end of mbd in R07\n         AH    R07,MDBLEN         start+mdblen in header\n         LAE   R06,0(0,R08)       calc prefix address in R06\n         SH    R06,=AL2(MDBPLNNO) prefix=start-prefix length\n         USING MDBPRFX,R06        get addressability\n         L     R06,MDBPNEXT       get forward pointer in R06\n         DROP  R06                R06 no longer base for prefix\n         LA    R08,MDBHLEN(R08)   bump to 1st object\nTOBJLP   DS    0H                 loop through the objects\n         LH    R12,MDBTYPE        get type\n         C     R12,=A(MDBTOBJ)    check for text object\n         BNE   NOTT               not text object\n         BAL   R14,GOTMDBT        process text object\nNOTT     DS    0H\n         AH    R08,MDBLEN         bump to next object\n         CR    R08,R07            see if this is the end\n         BL    TOBJLP             no, get another object\n         LTR   R06,R06            check for more MDBs for message\n         BZ    MSGLP              done with message\n         LR    R08,R06            next mdb\n         B     TXTLP              process the mdb\n         DROP  R08\n* --- General Object ---\n         SYSSTATE ASCENV=AR       let macros know AR mode\nGOTMDBG  DS    0H\n         BAKR  R14,0              save caller environment\n         USING MDBG,R08           addressability to general object\n* -DEBUG-\n* --- Copy General Information to Message Area ---\n*        MVC   MSG#0002+24(4),MDBGDSTP Copy Date Stamp\n*        MVC   MSG#0002+29(3),MDBGDSTP+4\n*        MVC   MSG#0002+33(8),MDBGTIMH Copy Time Stamp\n*        MVC   WK#F,MDBGMID            Copy Messgae-ID to Work Area\n* --- Primary Mode ---\n*        SAC   0                       Primary Mode\n*        SYSSTATE ASCENV=P\n* --- Binary Data to Chanacter Convert ---\n*        LA    R07,WK#F-REENTA(R04)\n*        LA    R09,MSG#0002+45-REENTA(R04)\n*        CALL  @HC,((R07),(R09),4)\n* --- Show General Messgae ---\n*        LA    R01,MSG#0002\n*        LA    R02,L'MSG#0002     Write General Object Information\n*        BAL   R14,@PUTL#S             Echo Message\n* --- AR Mode Set ---\n*        SAC   512                     AccessRegister(AR) Mode\n*        SYSSTATE ASCENV=AR\n* -DEBUG-\n         MVC   MDBGJOB(8),MDBGJBNM Copy Job Name\n         MVC   MDBGMSG(4),MDBGMID  Copy Message ID\n         MVC   MDBGTIM(8),MDBGTIMH Copy Time Stamp\n         MVC   MDBGDAT(7),MDBGDSTP Copy Date Stamp\n         MVC   MDBGOSN(8),MDBGOSNM Copy OS Name\n         OI    MDBFLGS,MDBFGO     set processed general object\n         PR\n         DROP  R08\n*---------------------------------------------------------------------*\n*-                                                                   -*\n*- GOTMDBC:  BRANCH ENTERED, ASCMODE=AR,R08=ADDR(control prog object)-*\n*- Function: process MDB control program object                      -*\n*- Operation:                                                        -*\n*-     establish addressability to the control program object        -*\n*-     if this is an MVS object                                      -*\n*-        set flag indicating control prog object found for the msg  -*\n*-        save message text offset for text processing               -*\n*-        if this is a command response message                      -*\n*-           save the CART                                           -*\n*-           indicate that the text echo should be command response  -*\n*-                                                                   -*\n*---------------------------------------------------------------------*\n         SYSSTATE ASCENV=AR       let macros know AR mode\nGOTMDBC  DS     0H\n         BAKR    R14,0              save caller environment\n         USING MDBSCP,R08         addressability to control prog object\n         CLC   MDBCPNAM,=C'MVS '  make sure it is an MVS object\n         BNE   GOTC1              if not, just skip it\n         OI    MDBFLGS,MDBFCO     set processed control prog object\n         LH    R01,MDBCTOFF       get text offset\n         ST    R01,TOFF           save it for text processing\n*\n* --- Binary Data to Chanacter Convert ---\n* --- Primary Mode ---\n*        MVC   WKCERC,MDBCERC\n*        MVC   WKCDESC,MDBCDESC\n* -DEBUG-\n*        SAC   0                       Primary Mode\n*        SYSSTATE ASCENV=P\n*        LA    R07,WKCERC-REENTA(R04)\n*        LA    R09,MSG#0007+18-REENTA(R04)\n*        CALL  @HC,((R07),(R09),16)\n*        LA    R07,WKCDESC-REENTA(R04)\n*        LA    R09,MSG#0007+61-REENTA(R04)\n*        CALL  @HC,((R07),(R09),2)\n*        LA    R01,MSG#0007\n*        LA    R02,L'MSG#0007\n*        BAL   R14,@PUTL#S             Echo Message\n*        SAC   512                     AccessRegister(AR) Mode\n*        SYSSTATE ASCENV=AR\n* -DEBUG-\n* --- Binary Data to Chanacter Convert ---\n* --- Reply-ID Get ---\n*        TM    MDBMLVL1,MDBMLR\n*        BO    GOTCRPLY\n         LH    R01,MDBCRPYL\n         LTR   R01,R01\n         BZ    GOTCRPLY\n         MVC   REPLYL,MDBCRPYL    Length of Reply Number\n         MVC   REPLYN,MDBCRPYI   Reply Number\n         B     GOTCRX\nGOTCRPLY EQU   *\n         XC    REPLYL,REPLYL      If Not Reply Message. Clear Length\nGOTCRX   EQU   *\n         TM    MDBCATT1,MDBCMCSC  check if command response\n         BZ    GOTC1              not command response\n         MVC   MCART,MDBCCART     hold onto cart\n         MVI   CMDRSP,1           issue any WTOs as cmd response\nGOTC1    DS    0H\n         PR\n         DROP  R08\n*---------------------------------------------------------------------*\n*-                                                                   -*\n*- GOTMDBT:  BRANCH ENTERED, ASCMODE=AR, R08=ADDR(text object)       -*\n*- Function: process MDB text objects                                -*\n*- Operation:                                                        -*\n*-     establish addressability to the text object                   -*\n*-     calculate the length of the text                              -*\n*-     move it to a buffer                                           -*\n*-     set the length                                                -*\n*-     issue text as a single line WTO                               -*\n*-                                                                   -*\n*---------------------------------------------------------------------*\n         SYSSTATE ASCENV=AR       let macros know AR mode\nGOTMDBT  DS    0H\n         BAKR  R14,0              save caller environment\n         USING MDBT,R08           addressability to text object\n*\n         LAE   R02,MDBTMSGT       get address of text\n         A     R02,TOFF           bump past prefix info\n         CLC   WTOID,0(R02)       see if this message is my echo\n         BE    GOTTX              don't redisplay my text echo\n         LH    R01,COM_WLEN\n         LTR   R01,R01\n         BZ    MDBTWAI2\n         STC   R01,*+5\n         CLC   COM_WAIT,0(R02)    see if this message is my echo\n         BNE   MDBTWAIT           don't redisplay my text echo\n*\n* -DEBUG-\n*        STC   R01,*+5\n*        MVC   MSG#0005+17(0),COM_WAIT\n*        LA    R01,MSG#0005            Get Buffer Text\n*        LA    R02,L'MSG#0005\n*        BAL   R14,@PUTL#S             Echo Message\n* -DEBUG-\n         OI    MSGWAITF,X'80'\n         B     MDBTWAIT           don't redisplay my text echo\nMDBTWAI2 EQU   *\n*?*      SAC   0                       Primary Mode\n*?*      SYSSTATE ASCENV=P\n*?*      WTO   'STOR-MGR: NO RESPONSE WAIT ...'\n*?*      SAC   512                     AccessRegister(AR) Mode\n*?*      SYSSTATE ASCENV=AR            AR Mode\n         OI    MSGWAITF,X'80'\n         B     MDBTWAIT           don't redisplay my text echo\nMDBTWAIT EQU   *\n*\n         LA    R15,WTOTXT\n         TM    COM_FORM,X'80'\n         BNO   GOTT00\n         CLC   MDBGJOB(8),=CL8' '\n*        BE    GOTT01\n         MVC   0(8,R15),MDBGJOB\n*        B     GOTT02\nGOTT01   EQU   *\n*        MVC   0(4,R15),=CL4' '\n*        MVC   4(4,R15),MDBGMSG\n*        B     GOTT02\nGOTT02   EQU   *\n         MVI   8(R15),C' '\n         LA    R15,9(R15)\nGOTT00   EQU   *\n* --- Reply-ID Copy ---\n         LH    R01,REPLYL\n         LTR   R01,R01\n         BZ    GOTT10\n         MVI   0(R15),C'*'\n         LA    R15,1(R15)\n         STC   R01,*+5\n         MVC   0(0,R15),REPLYN\n         LA    R15,0(R01,R15)\n         MVI   0(R15),C' '\n         LA    R15,1(R15)\nGOTT10   EQU   *\n         LH    R01,MDBTLEN        get text object length\n         S     R01,=A(MDBTMSGT-MDBTLEN) subtract non-text size\n         S     R01,TOFF           take off offset to text\n         LA    R14,WTOTXT_E\n         LA    R02,L'WTOTXT(R15)\n         SR    R02,R14\n         LR    R14,R02\n         LA    R02,0(R01,R02)\n         C     R02,=A(L'WTOTXT)   make sure its not too long for buf\n         BNH   GOTT1              ok\n*        L     R01,=A(L'WTOTXT)   not ok, truncate at buf length\n         LA    R01,WTOTXT_E\n         SR    R01,R15\nGOTT1    DS    0H\n         BCTR  R01,0              set up for MVC\n         LAE   R02,MDBTMSGT       get address of text\n         A     R02,TOFF           bump past prefix info\n         CLC   WTOID,0(R02)       see if this message is my echo\n         BE    GOTTX              don't redisplay my text echo\nGOTT2    DS    0H\n         EX    R01,GOTTMVC        move text to buffer\n         A     R01,=A(L'WTOID+1)  calc length for wto\n         LA    R02,0(R01,R14)\n*        LR    R02,R01\n         LA    R01,WTOID\n         BAL   R14,@PUTL#S             Echo Message\nGOTTX    DS    0H\n         PR\nGOTTMVC  DS    0H\n         MVC   0(0,R15),0(R02)\n         DROP  R08\n         PR                            Program Return\n*--------------------------------------------------\n* --- PUTLINE servise routine ( single line ) ---------------------\n@PUTL#S  EQU   *\n         BAKR  R14,0              save caller environment\n         SAC   0                  run in primary mode\n         SYSSTATE ASCENV=P        tell macros primary mode\n*\n         L     R06,COM_CPPL                Load CPPL Address\n         USING CPPL,R06                    CPPL Base Reg. R06\n*\n         STC   R02,*+5\n         MVC   PUTL#S_(0),0(R01)           copy message area\n         LA    R02,4(R02)                  length + 4\n         STH   R02,PUTL#SL                  store length\n         XC    #ECB,#ECB                   clear ECB area\n         XC    #IOPL(16),#IOPL             clear IOPL area\n         L     R09,CPPLUPT\n         L     R10,CPPLECT\n         PUTLINE PARM=PUTBLOK,UPT=(09),ECT=(10),ECB=#ECB,              *\n               OUTPUT=(PUTL#S,TERM,SINGLE,DATA),MF=(E,#IOPL)\n         PR                       return to caller\n         DROP  R06\nMCSATTN  DS    0D\n         SAVE  (14,12),T,*\n         LR    R03,R15\n         USING MCSATTN,R03                 BASE REG. R03\n         ST    R13,SA3+4                    SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SA3\n         ST    R13,8(R12)                  SAVE A(NEW SAVEAREA)\n*\n         ICM   R05,15,8(R01)\n         USING MCSCOMM,R05             Set Communication DSECT\n*\n*+       TPUT  MSG#ATTN,L'MSG#ATTN\n*\n*+       TM    COM_FLAG,X'40'\n*+       BNO   ATTNSKP1\n         OI    COM_FLAG,X'80'\nATTNSKP1 EQU   *\n         L     R13,SA3+4                RETURN\n         RETURN (14,12),RC=0\nSA3      DS    18F                               SAVEAREA\n*SG#ATTN DC    CL80'>>> ATTENTION ! <<<'\n* --- ECB ---------------------------------------------------------\n#ECB     DS    F\n* --- IOPL --------------------------------------------------------\n#IOPL    DS    4F\n* --- PUTLINE ( mapping macro ) -----------------------------------\nPUTBLOK  PUTLINE MF=L\n* --- PUTLINE ( single line put ) ---------------------------------\nPUTL#S   DS    0D\nPUTL#SL  DS    H\n         DC    H'0'\nPUTL#S_  DS    CL80\n         DS    CL100\n*--------------------------------------------------\n*\nLMGCRE   MGCRE MF=L\n*        DROP  R04\n         LTORG\n*\n* --- DYNAMIC AREA ---\n@EVTBL   DS    F                   Command Response Table Entery\nWMAXFLG  DS    XL4                 STIMER ID\nWAITMAX  DS    XL4                 Time Out Wait Time\nWMAXID   DS    XL4                 STIMER ID\nSAVEAREA DS    18F                       Registor Save Area\nSTAXLIST STAX  MCSATTN,MF=L\nMCSECB   DS    F\n*                  HHMMSSTT\nWAITXX   DC    CL8'00000100'             Delay 2Sec\nWAITID   DS    XL4\nWAITTU   DS    XL4\nREENTA   DS    0F\n*                   0....+....1....+....2....+....3....+....4....+...\nERRMSG01 DC    CL80'@TC: ######## @@@@@@@@ ERROR RC:@@@@@@@@ RSN:@@@@@@*\n               @@ R15:@@@@@@@@'\n*SG#0002 DC    CL80'@TC: MDBG INFORMATION : @@@@.@@@-@@@@@@@@ ID:@@@@@'\n*                   0....+....1....+....2....+....3....+....4....+...\nMSG#0003 DC    CL80'> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*\n               @@@@@@'\n*                   0....+....1....+....2....+....3....+....4....+...\n*SG#0004 DC    CL80'@TC: -- Command Entry From Extended MCS Console --'\n*SG#0005 DC    CL80'@TC: MESSAGE ID :'\n*                   0....+....1....+....2....+....3....+....4....+....5*\n               ....+....6....+....7....+....8\n*SG#0007 DC    CL80'@TC: ROUTE CODE : @@@@@@@@ @@@@@@@@ @@@@@@@ @@@@@@ *\n               @  DESC : @@@@'\n*SG#0014 DC    CL80'@TC: MAXIMAM WAIT TIME : @@@@@@@@ (1/100SEC)'\nMSG#0015 DC    CL80'@TC:'\n         DS    100C\nMSG#0016 DC    CL80'# Command Response Timeout ...'\n*SG#0017 DC    CL80'@TC: End of Message Wait Loop ...'\n*SG#0018 DC    CL80'@TC: Command Response Wait Loop Continue ...'\n*SG#0019 DC    CL80'@TC: Wait Start ..'\n*SG#0020 DC    CL80'@TC: Wait End ..'\n*SG#0021 DC    CL80'@TC: Wait Got ..'\n         DS    0F\nATTNOUTB DC    CL79'>>> ATTENTION ! <<<'\n         DS    0F\nATTNINB  DC    CL140'0'\nWK#F     DS    F                         Work Space ( 4 Byte )\nWK#H     DS    H                         Work Space ( 2 Byte )\nCMDFLG   DS    BL1'00000000'\n*                  8         : Command Get\n*                   4        : Reply Get\n*                    2       : End of File\n*                     o\n*                      o\n*\n         DS    0F\nTEXTAREA DS    0XL82\n         DC    H'80'\nCMDBUF   DS    CL80\n*\nCONSNM   DS    CL08                      MCS Console Name\nCONSID   DS    A                         MCS Console ID\nMCART    DS    CL08\n*CSECB   DS    F\nMCSA     DS    F\nMCSCSAA  DS    F\nRC       DS    F\nRSN      DS    F\nWKF      DS    F\n*\nMDBFLGS  DC    FL1'0'\nMDBFGO   EQU   X'01'              processed general object\nMDBFCO   EQU   X'02'              processed control prog object\nCMDRSP   DC    FL1'0'\nTOFF     DS    F                  offset to message in text object\nWTOBUF   DS    FL2                length for dynamic messages\nWTOID    DC    CL02'< '           messge id for echoed messages\nWTOTXT   DS    CL118              message text\nWTOTXT_E EQU   *\nMYOPER   DS    F                  console id from last modify command\n         DS    0F\nMSGWAITF DS    XL1\nMDBGJOB  DS    CL8\nMDBGMSG  DS    CL4\nMDBGTIM  DS    CL8\nMDBGDAT  DS    CL7\nMDBGOSN  DS    CL8\n         DS    0F\n*                   0....+....1....+....2....+....3....+....4....+...\nMSGPARM  DS    0F\nMSGLEN   DC    AL2(0)\nMSG      DC    CL80' '\n@MCSOP   DS    CL60\n*KCERC   DS    XL16\n*KCDESC  DS    XL2\nREPLYL   DS    H\nREPLYN   DS    CL8\nREENTAX  EQU   *\nREENTAL  EQU   *-REENTA                  Re-Entrant Area Length\n         DS    0D\n         EJECT\n         IEAVG132 ,                mdb prefix\n         EJECT\n         IEAVM105 ,                mdb\n         EJECT\n         IEAVG131 ,                console status area\n         EJECT\n         IEZVG111 ,                operparm parameter area\n         EJECT\nCOM      DSECT\n         IEZCOM   ,                COM area\n         EJECT\nCIB      DSECT\n         IEZCIB   ,                CIB and CIBX\n* --- CVT ---------------------------------------------------------\nCVT      DSECT\n         CVT    DSECT=YES,LIST=YES\n* --- JESCT -------------------------------------------------------\n*        IEFJESCT\n* --- DSAB --------------------------------------------------------\n*        IHADSAB\n* --- UCB ---------------------------------------------------------\n*        PRINT GEN\n*        DSECT\n*        IEFUCBOB LIST=YES\n* --- CPPL ( command processor parameter list ) -------------------\n         IKJCPPL\nL_CPPL   EQU   *-CPPL\n* --- PPL ( parse parameter list ) --------------------------------\n         IKJPPL\nL_PPL    EQU   *-PPL\n* --- IKJIOPL ( input / output parameter list ) -------------------\n         IKJIOPL\nL_IOPL   EQU   *-IOPL\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*        --- 31 Bit Addressing Mode ---\n@HC      AMODE ANY\n@HC      RMODE 24\n@HC      CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03                       Base Reg. R03\n         ST    R13,@HC#SA+4                Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,@HC#SA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* --- from characher ---\n         L     R07,0(R01)\n* --- to character ---\n         L     R08,4(R01)\n* --- convert length ---\n         L     R09,8(R01)\n*\n         BAL   R14,@CO_HEX                     CALL CONVERT HEX-CHAR\n         L     R13,@HC#SA+4\n         RETURN (14,12),RC=0\n@CO_HEX  EQU   *                               CONVERT HEX-CHARACTER\n         LA    R15,5\n@CO_HC   EQU   *\n         LTR   R09,R09\n         BZ    @CO_EXIT\n         BCT   R15,@CO_SKIP\n*\n         MVI   0(R08),X'40'\n         LA    R08,1(R08)\n         LA    R15,4\n@CO_SKIP EQU   *\n         SR    R01,R01\n         IC    R01,0(R07)\n         SRL   R01,4\n         A     R01,A_TR\n         ICM   R02,B'0010',0(R01)\n         IC    R01,0(R07)\n         N     R01,=F'15'\n         A     R01,A_TR\n         ICM   R02,B'0001',0(R01)\n         STCM  R02,B'0011',0(R08)\n         LA    R07,1(R07)\n         LA    R08,2(R08)\n         BCTR  R09,0\n         B     @CO_HC\n@CO_EXIT EQU   *\n         BR    R14\n*\n@HC#SA   DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         LTORG\n* ----------------------------------------------------------------\nMCSCOMM  DSECT\nCOM_CONN DS    CL8'STORMGR'\nCOM_CMD  DS    CL80'D M=STOR'\nCOM_WTME DS    H'10'\nCOM_WLEN DS    H'8'\nCOM_WAIT DS    CL80'IEE712I'\nCOM_TLEN DS    H'8'\nCOM_TOUT DS    CL80'STORMGR TIME OUT'\nCOM_FORM DS    BL1\n*                '.... ....'\n*                 *          : J > Job Name\n* --- CPPL pointer save area --------------------------------------\nCOM_CPPL DS    F\n* Result of SOTRMCS\nCOM_FLAG DS    XL1\n*    .... ....\n*    \u00b5          ATTN flag 0:none, 1:attn\n*     \u00b5         MCS Activate 0:de-activate, 1:activate\n         DS    XL3\nCOM_MAC  DS    CL8\nCOM_ACT  DS    CL8\nCOM_RC   DS    F\nCOM_RSN  DS    F\nMCSCOMML EQU   *-MCSCOMM\n         END   @CMD\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST,AC=1,AMODE=31,RMODE=24',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIB   DD  DSN=your.objlib,DISP=SHR                        <- CHECK\n//*        DD  DSN=SYS1.LINKLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=your.loadlib(@CMD),DISP=SHR,                <- CHECK\n//         UNIT=SYSDA,VOL=SER=volser                           <- CHECK\n//*YSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//*        SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//OBJ      DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=your.objlib                                     <- CHECK\n//SYSIN    DD  *\n//G       EXEC PGM=IKJEFT01,COND=((9,LT,A),(9,LT,L))\n//STEPLIB  DD DSN=your.loadlib,DISP=SHR,                       <- CHECK\n//         UNIT=SYSDA,VOL=SER=volser                           <- CHECK\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\n @CMD '$DN,ALL' T(10) M(IEE974I) MFORM(J)   CN(BATCH)\n/*\n//\n @CMD '$DN,ALL' T(10) M(IEE974I) MFORM(J)\n @CMD 'D SMF' T(10) M(IEE974I) CN(CMDTEST)\n*      -----                                MVS Command\n*               --                          Timeout Sec\n*                     -------               Wait Message\n*                                 -------   Console Name\n @CMD 'S DEALLOC' T(10) M(IEE974I)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@ENQ#003": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x01\\xc0\\x01\\xc0\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 448, "newlines": 448, "modlines": 0, "user": "KIMU"}, "text": "//jobname JOB (ACCT#),CLASS=x,MSGCLASS=x,NOTIFY=user-id        <- CHECK\n//* -----------------------------------------------------------------\n//* @os Install ...                                            <- CHECK\n//*\n//* Step1:\n//*   File Transfer to MVS .\n//* Step2:\n//*  Enter below line.\n//*  => X ALL;F '<- CHECK' ALL (Enter)\n//* Step3:                                                     <- CHECK\n//*  Update Non-Exclusive Line .                               <- CHECK\n//*  ex.  => C serial VOL001 ALL NX (Enter)                    <- CHECK\n//* Step4:                                                     <- CHECK\n//*  Submit This JCL.                                          <- CHECK\n//* Step5:                                                     <- CHECK\n//*  Copy @enq Clist                                           <- CHECK\n//*   enqc.txt -> your.clist(@ENQ)                             <- CHECK\n//* Step6:                                                     <- CHECK\n//*  Enter Flow Line on ISPF Command Line .                    <- CHECK\n//*  => TSO @ENQ ( Enter )                                     <- CHECK\n//*                                                            <- CHECK\n//* -----------------------------------------------------------------\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n*\n         MACRO\n&NAME    @WRITE &MES                     Write to Result\n*##      TPUT  &MES,L'&MES               TSO Terminal\n         PUT   SYSPRINT,&MES             SYSPRINT DD Statment\n         MVC   MESSAGE(79),&MES          System Console\n         LA    R01,WTOAREA\n         SVC   35                        * WTO Message\n         MEND\n*\n* -----------------------------------------------------------------\n         DC   C'<< @ENQ_v2r0 : Resource Information Block Search >> '\nENQV     DC   CL6'v2r0m0'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n* -----------------------------------------------------------------\n         PRINT NOGEN\n@ENQ     CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03                     Base Reg. R03\n         ST    R13,SAVEAREA+4            Store Old S.A.\n         LR    R12,R13\n         LA    R13,SAVEAREA              Load New S.A.\n         ST    R13,8(R12)                Store New S.A. to Old S.A.\n*\n         L     R01,0(R01)                Get Parm Area Address\n         LH    R12,0(R01)                R12 <- Parm Length\n         LA    R11,2(R01)                R11 <- Parm Address\n* -----------------------------------------\n* Initial Process ...\n*\n*        FLAG = 'xxxxxxx0'\n*                1                       Final Scan Request\n*                 1                      Waitting Resource Found\n*                  1                     Reserved Unit Search\n*                   1                    Target Resource Found\n*\n*                    1                   Waitting Resource Search\n*                     1                  Reserved Unit Search\n*                      1                 Specify R-Name Search\n*\n         XC    FLAG,FLAG                 Flag Clear\n         OPEN  (SYSPRINT,(OUTPUT))       Open SYSPRINT DD\n* -----------------------------------------\n* Parmeter Editting ...\n         LTR   R12,R12                   If Parm is Nothing\n         BZ    P_NOTHG                     goto P_NOTHG\n         CL    R12,=F'1'                 If Parameter Length is 1\n         BNE   P_RESS                      and\n         CLI   0(R11),C'R'                  Parameter is 'R'\n         BNE   P_RESS                      goto P_RESS\nP_RESV   EQU   *\n         OI    FLAG,X'04'                Reserved Unit Search\n         @WRITE #RESHDR3\n         XC    LRNAME,LRNAME             R-Name Length <- 0\n         B     WAIT_SRH\nP_RESS   EQU   *\n         OI    FLAG,X'02'                Specify R-Name Search\n         ST    R12,LRNAME                R-Name Length <- L'Parm\n         BCTR  R12,0\n         STC   R12,*+5\n         MVC   RNAME(0),0(R11)           Copy Parameter Work Area\n         STC   R12,*+5\n         MVC   #RESHDR1+22(0),0(R11)     Copy Header-1\n         @WRITE #RESHDR1\n         B     RES_SRH\n* Waitting Resource Search ...\nP_NOTHG  EQU   *\n         OI    FLAG,X'08'                Waitting Resource Search\n         @WRITE #RESHDR2\n         B     WAIT_SRH\n* -----------------------------------------\n* Waitting Resource Search ...\nWAIT_SRH EQU   *\n         TM    FLAG,X'80'                Check End of RIB\n         BO    TERM00                     goto TERM00\n         GQSCAN MF=(E,GQSCANL)\n         CL    R15,=F'4'                 Target Request Not-Found\n         BE    TERM00\n         CL    R15,=F'8'                 Target Request Over-Flow\n         BE    RIBEDIT\n         OI    FLAG,X'80'                Final Request Flag Set\n         B     RIBEDIT\n* -----------------------------------------\n* Specify R-Name Scan Request and Reserved Unit Request ...\nRES_SRH  EQU   *\n         TM    FLAG,X'80'                Check End of RIB\n         BO    TERM00                     goto TERM00\n         L     R12,LRNAME                Load Length of R-Name\n         GQSCAN MF=(E,GQSCANL),RESNAME=(QNAME,RNAME,(R12),GENERIC,0)\n         CL    R15,=F'4'                 Target Request Not-Found\n         BE    NOTFND\n         CL    R15,=F'8'                 Target Request Over-Flow\n         BE    RIBEDIT\n         OI    FLAG,X'80'                Final Request Flag Set\n         B     RIBEDIT\n* -----------------------------------------\n* Resource Information Block (RIB) Edit ...\nRIBEDIT  EQU   *\n         LR    R12,R01                  *R12 <- Number of RIB\n         LR    R11,R00                  *R11 <- Length of RIB,RIBE\n         LA    R04,QAREA                *R04 <- QAREA Address\n         USING RIB,R04                   RIB Dsect\nNEXTRIB  EQU   *\n         NI    FLAG,X'9F'                Clear Waitting Res Flag\n         LR    R01,R11\n         SRL   R01,16                    R01 <- Length of RIB\n         LA    R05,0(R04,R01)           *R05 <- RIB Var Address\n         USING RIBVAR,R05                RIB Var Dsect\n         LH    R09,RIBSCOPE              R09 <- Length of RIBV\n         N     R09,=X'000000FF'                (RIBRNMLN)\n         LA    R01,03(R09,R01)           R01 <- Offset RIBE\n         SRL   R01,2                     Clear Final Bit\n         SLL   R01,2\n         LA    R06,0(R04,R01)           *R06 <- RIBE Address\n         USING RIBE,R06                  RIBE Dsect\n* - Reserved Unit Find -\n         TM    FLAG,X'04'                If Not Reserved Unit Search\n         BNO   RESV_X                      goto RESV_X\n         LR    R02,R06                   R02 <- RIBE Address\n         USING RIBE,R02                  RIBE Dsect\n         L     R01,RIBNRIBE              R01 <- Number of RIBE\nRES_RIBE EQU   *\n         TM    RIBERFLG,RIBERESV         If Reserved Flag is True\n         BO    RESV_ON                     goto RESV_ON\n         LR    R15,R11\n         N     R15,=X'0000FFFF'          R15 <- Length of RIBE\n         LA    R02,0(R02,R15)            R02 <- Next RIB\n         BCT   R01,RESV_X                Loop out RESV_X\n         B     RES_RIBE                  goto RES_RIBE\n         DROP  R02\nRESV_ON  EQU   *\n         OI    FLAG,X'20'                Reserved Unit Found\nRESV_X   EQU   *\n*\n* - Waitting Task Find -\n         L     R01,RIBNTWE               R01 <- Exclusive Wait Number\n         LTR   R01,R01                   if Wait Number is Not 0\n         BNZ   WAIT_ON                     goto WAIT_ON\n         L     R01,RIBNTWS               R01 <- Shared Wait Number\n         LTR   R01,R01                   if Wait Number is Not 0\n         BNZ   WAIT_ON                     goto WAIT_ON\n         B     WAIT_X\nWAIT_ON  EQU   *\n         OI    FLAG,X'40'                Waitting Tasks Found\nWAIT_X   EQU   *\n* - Q-Name -\n         MVC   #RESNAME+5(8),RIBQNAME    Copy Q-Name\n         CALL  @OS#6HC2,(#RESNAME+5,#RESHEX1+5,#RESHEX2+5,8)\n* - R-Name -\n         MVI   #RESNAME+17,C' '          Clear R-Name Area\n         MVC   #RESNAME+18(L'#RESNAME-18),#RESNAME+17\n         MVI   #RESHEX1+17,C' '\n         MVC   #RESHEX1+18(L'#RESHEX1-18),#RESHEX1+17\n         MVI   #RESHEX2+17,C' '\n         MVC   #RESHEX2+18(L'#RESHEX2-18),#RESHEX2+17\n*\n         CL    R09,=F'61'                if R-Name Length > 61 Byte\n         BNH   RNAME_S                     goto RNAME_S\n         LA    R09,61                    R-Name LEngth <- 61\n*\nRNAME_S  EQU   *\n         BCTR  R09,0\n         STC   R09,*+5\n         MVC   #RESNAME+17(0),RIBRNAME   Copy R-Name\n         LA    R09,1(R09)\n         CALL  @OS#6HC2,(#RESNAME+17,#RESHEX1+17,#RESHEX2+17,(R09))\n* - Status ( SYS,SYSS,STEP,GLOBAL) -\n         MVC   #RESOWNR+22(4),=CL4'    '\n         TM    RIBSCOPE,RIBSYS           if Scope is System\n         BNO   SCOPE_S\n         MVC   #RESOWNR+22(4),=CL4'SYS '\nSCOPE_S  EQU   *\n         TM    RIBSCOPE,RIBSYSS          if Scope is Systems\n         BNO   SCOPE_SS\n         MVC   #RESOWNR+22(4),=CL4'SYSS'\nSCOPE_SS EQU   *\n         TM    RIBSCOPE,RIBSTEP          if Scope is Step\n         BNO   SCOPE_ST\n         MVC   #RESOWNR+22(4),=CL4'STEP'\nSCOPE_ST EQU   *\n         MVI   #RESOWNR+27,C'_'\n         TM    RIBSCOPE,RIBGLBL          if Global ENQ\n         BNO   SCOPE_GL\n         MVI   #RESOWNR+27,C'G'\nSCOPE_GL EQU   *\n* - Number of Task -\n         L     R02,RIBNTO                Copy Number of Task\n         CVD   R02,PACKW\n         MVC   #RESOWNR+59(4),PATT\n         ED    #RESOWNR+59(4),PACKWT\n* - Number of Waitting Exclusive Task -\n         L     R02,RIBNTWE               Copy Number of Exclusive Wait\n         CVD   R02,PACKW\n         MVC   #RESOWNR+66(4),PATT\n         ED    #RESOWNR+66(4),PACKWT\n* - Number of Waitting Shared Task -\n         L     R02,RIBNTWS               Copy Number of Shared Wait\n         CVD   R02,PACKW\n         MVC   #RESOWNR+73(4),PATT\n         ED    #RESOWNR+73(4),PACKWT\n* - Write to Q-Name and R-Name -\n         TM    FLAG,X'08'                If Waitting Resource Not Srh\n         BNO   W_NAME1                     goto W_NAME1\n         TM    FLAG,X'40'                If Waitting Not Found\n         BNO   W_NAME_X                    goto W_NAMEX\nW_NAME1  EQU   *\n         TM    FLAG,X'04'                If Reserved Unit Not Search\n         BNO   W_NAME2                     goto W_NAME2\n         TM    FLAG,X'20'                If Reserved Unit Not Found\n         BNO   W_NAME_X                    goto W_NAMEX\nW_NAME2  EQU   *\n         @WRITE #RESNAME                 Write\n         @WRITE #RESHEX1\n         @WRITE #RESHEX2\nW_NAME_X EQU   *\n* - Load Number of RIBE -\n         L     R07,RIBNRIBE\n* - RIBE Loop -\nNEXTRIBE EQU   *\n* - Job-Name -\n         MVC   #RESOWNR+04(8),RIBEJBNM\n* - SID -\n         MVC   #RESOWNR+15(4),RIBESYSN\n* - Owner ( OWN or WAIT ) -\n         MVC   #RESOWNR+37(4),=CL4'OWNS'\n         TM    RIBESFLG,RIBESTAT\n         BO    RE_STAT\n         MVC   #RESOWNR+37(4),=CL4'WAIT'\nRE_STAT  EQU   *\n* - Type ( Share or Exclusive ) -\n         MVC   #RESOWNR+31(3),=CL3'SHR'\n         TM    RIBERFLG,RIBETYPE\n         BO    RE_TYPE\n         MVC   #RESOWNR+31(3),=CL3'EXC'\nRE_TYPE  EQU   *\n* - Reserved ( Reserved or _ ) -\n         MVI   #RESOWNR+44,C'_'\n         MVC   #RESOWNR+47(4),=CL4'____'\n         TM    RIBERFLG,RIBERESV\n         BNO   RE_RESV\n         MVI   #RESOWNR+44,C'R'\n         USING UCBOB,R10                       R12 <- UCB Base Reg.\n* MVS V5 *\n         L     R10,RIBEUCB\n         CL    R10,=X'01000000'\n         BNH   SKIPXA\n         LA    R01,SKIPXA\n         O     R01,XABIT\n         BSM   0,R01\nSKIPXA   EQU   *\n* MVS V5 *\n         LH    R02,UCBCHAN\n         CL    R10,=X'01000000'\n         BNH   SKIP370\n* MVS V5 *\n         LA    R01,SKIP370\n         BSM   0,R01\nSKIP370  EQU   *\n* MVS V5 *\n         STH   R02,WK_H                        Copy Unit Address (Bin)\n         DROP  R10\n         CALL  @OS#6HC,(WK_H,#RESOWNR+47,2)\nRE_RESV  EQU   *\n* - Write to JobName and other -\n         TM    FLAG,X'08'\n         BNO   W_OWNR1\n         TM    FLAG,X'40'\n         BNO   W_OWNR_X\nW_OWNR1  EQU   *\n         TM    FLAG,X'04'\n         BNO   W_OWNR2\n         TM    FLAG,X'20'\n         BNO   W_OWNR_X\nW_OWNR2  EQU   *\n         OI    FLAG,X'10'\n         @WRITE #RESOWNR\nW_OWNR_X EQU   *\n         BCT   R07,NEXT_E\n         LR    R01,R11\n         N     R01,=X'0000FFFF'            R01 <- Length of RIBE\n         LA    R04,0(R06,R01)\n         BCT   R12,NEXTRIB\n*\n         TM    FLAG,X'02'\n         BO    RES_SRH\n         B     WAIT_SRH                    Next Scan Blanch\nNEXT_E   EQU   *\n* - RIBE Loop -\n         LR    R01,R11\n         N     R01,=X'0000FFFF'            R01 <- Length of RIBE\n         LA    R06,0(R06,R01)\n         B     NEXTRIBE\nTERM00   EQU   *\n         TM    FLAG,X'10'\n         BO    TERMINAT\n         TM    FLAG,X'08'\n         BNO   WAIT_MES\n         @WRITE #MES001E\n         B     TERMINAT\nWAIT_MES EQU   *\n         TM    FLAG,X'04'\n         BNO   RESV_MES\n         @WRITE #MES002E\n         B     TERMINAT\nRESV_MES EQU   *\n         @WRITE #MES004I\nTERMINAT EQU   *\n         @WRITE #RESTERM\n         CLOSE (SYSPRINT)               FILE CLOSE\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\nNOTFND   EQU   *\n         @WRITE #MES003E\n         B     TERMINAT\nSYSPRINT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,RECFM=F,LRECL=79,   *\n               BLKSIZE=79\n*\nGQSCANL  GQSCAN AREA=(QAREA,LQAREA),SCOPE=ALL,QUIT=NO,TOKEN=TOKEN,     *\n               MF=L\n*\n         DS    0F\nSAVEAREA DS    18F\nXABIT    DC    0F'0',X'80000000'\nFLAG     DS    XL1\nLRNAME   DC    F'0'\nQNAME    DC    CL8'SYSDSN  '\nRNAME    DC    CL100' '\n         DS    0D\nTOKEN    DC    296X'00'\nPACKW    DS    0D\n         DS    F\n         DS    H\nPACKWT   DS    H\nPATT     DC    XL4'40202020'\n* -------------------------------------------------------------------\nWK_H     DS    H                             Parmeter Work Area\n* - MESSAGES --------------------------------------------------------\n*                   0....+....1....+....2....+....3....+....4....+....5\n*             5....+....6....+....7....+....8\n#RESHDR1 DC    CL79'@ ENQ-Search R-Name : -----------------------------*\n               ----------------------------'\n#RESHDR2 DC    CL79'@ ENQ-Waitting Resource Search --------------------*\n               ----------------------------'\n#RESHDR3 DC    CL79'@ ENQ-Reserved Resource Search --------------------*\n               ----------------------------'\n#RESTERM DC    CL79'@ -------------------------------------------------*\n               ----------------------------'\n#RESNAME DC    CL79'# QN:________ RN:'\n#RESHEX1 DC    CL79'.   :________   :'\n#RESHEX2 DC    CL79'.   :________   :'\n*                        Q-Name      R-Name\n#RESOWNR DC    CL79'> J:________ S:____ S:____-_ T:___ S:____ R:_ (____*\n               ) G:_ O:____ X:____ S:____'\n*                       JobName    Asid   Stat-G Typ   Resv     Glbl\n*                                                          Adr\n#MES001E DC    CL79'@ENQ001E ENQ-Waitting Resource Nothing .'\n#MES002E DC    CL79'@ENQ002E ENQ-Reserved Unit Nothing .'\n#MES003E DC    CL79'@ENQ003E ENQ-Target Resource Information Nothing .'\n#MES004I DC    CL79'@ENQ003I End of Search Resource .'\n*                   0....+....1....+....2....+....3....+....4....+....5\n*             5....+....6....+....7....+....8\n* --- WTO ---\nWTOAREA  DS    0F\n         DC    AL2(WTOLEN)\n         DC    B'0000000000000000'\nMESSAGE  DC    CL80'### ENTER -> '\nWTOLEN   EQU   *-WTOAREA\n         LTORG\n         DS    0D\nQAREA    DS    1024X\nLQAREA   EQU   *-QAREA\n         PRINT NOGEN\n         EJECT\n         DSECT\n         ISGRIB\n* --- UCB ---------------------------------------------------------\n*        PRINT GEN\n         DSECT\n         IEFUCBOB LIST=YES\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @ENQ\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//*        DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIB   DD  DSN=your.objlib,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=your.loadlib(@ENQ#003)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//G      EXEC  PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L)),\n//         PARM='userid'\n//SNAPDD   DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@ENQC": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x00\"\\x00\"\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "KIMU"}, "text": "/* REXX */\nTRACE O\nARG QNAME .\nSELECT\n  WHEN QNAME = 'HELP' THEN DO\n    SAY '>> ENQ - Resource Information Block Search ----------------'\n    SAY '>>                                                         '\n    SAY '>> Usage                                                   '\n    SAY '>>  Case 1 : Specify R-Name Search .                       '\n    SAY '>>   -> TSO @ENQ string ( string = Search R-Name )         '\n    SAY '>>  Case 2 : Reserved Unit Search .                        '\n    SAY '>>   -> TSO @ENQ R                                         '\n    SAY '>>  Case 3 : Waitting Resource Tasks Search .              '\n    SAY '>>   -> TSO @ENQ                                           '\n    SAY '>>                                                         '\n    SAY '>> Indicate                                                '\n    SAY '>> QN : Q-Name                                             '\n    SAY '>> RN : R-Name (Maximam 61 Byte)                           '\n    SAY '>> J  : JobName                                            '\n    SAY '>> S  : System-ID                                          '\n    SAY '>> S  : Scope & Global (Scope:STEP,SYS,SYSS),(Global:G,_)  '\n    SAY '>> T  : Type (EXClusive or SHaRed)                         '\n    SAY '>> S  : Sharing (OWNerS or SHARed)                         '\n    SAY '>> R  : Reserved & Reserved Unit Address                   '\n    SAY '>> G  : Request Indicator (G:Global _:Local)               '\n    SAY '>> O  : Owner Count                                        '\n    SAY '>> X  : Exclusive Waitting Tasks Count                     '\n    SAY '>> S  : Sharing Waitting Tasks Count                       '\n  END\n  WHEN QNAME = '' THEN\n    ADDRESS TSO CALL \"'your.loadlib(@ENQ#003)'\"\n  OTHERWISE\n    ADDRESS TSO CALL \"'your.loadlib(@ENQ#003)'\" \"'\"QNAME\"'\"\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE443": {"ttr": 1282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04b\\x00 \\x01\\x19&_\\x01\\x19&_\\x17@\\x00&\\x00&\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf8@@@'", "ispf": {"version": "04.98", "flags": 0, "createdate": "2019-09-22T00:00:00", "modifydate": "2019-09-22T17:40:20", "lines": 38, "newlines": 38, "modlines": 0, "user": "CBT-498"}, "text": "//***FILE 443 is from Tetsuya Kimura (Kimu) and contains some       *   FILE 443\n//*           of his many utilities.  You should go to Kimu's       *   FILE 443\n//*           web site to check if any of these programs is at      *   FILE 443\n//*           a later level, or if he has other utilities           *   FILE 443\n//*           posted there for download.                            *   FILE 443\n//*                                                                 *   FILE 443\n//*  Kimu's web site: http://www.angelfire.com/ks2/kimu/index.html  *   FILE 443\n//*                                                                 *   FILE 443\n//*           email:    Tetsuya Kimura <kimu@bigfoot.com>           *   FILE 443\n//*                                                                 *   FILE 443\n//*           This site is half in English and half in Japanese,    *   FILE 443\n//*           but the English part is more than adequate, and       *   FILE 443\n//*           you can get a lot of benefit from Kimu's programs.    *   FILE 443\n//*                                                                 *   FILE 443\n//*          @CMD#120 :  MVS command execution program.             *   FILE 443\n//*                      (from TSO)                                 *   FILE 443\n//*          @ENQ#003 :  show ENQ/DEQ table (from TSO)              *   FILE 443\n//*          @ENQC    :  @ENQ#003 clist                             *   FILE 443\n//*          @LISTD3  :  cache hit report                           *   FILE 443\n//*          @LOADMAP :  load module map program                    *   FILE 443\n//*          @LOC#301 :  cataloged dataset search                   *   FILE 443\n//*          @OS#6HC  :  subroutine                                 *   FILE 443\n//*          @OS#6HC2 :  subroutine                                 *   FILE 443\n//*          @SLEEP   :  waits for specified time                   *   FILE 443\n//*          @SMF30#1 :  smf type 30 report                         *   FILE 443\n//*          @SMF41#0 :  smf type 41 report                         *   FILE 443\n//*          @SMF74#8 :  smf type 74 report                         *   FILE 443\n//*          @SMF99#D :  @SMF99#1 copy                              *   FILE 443\n//*          @SMF99#T :  @SMF99#1 copy                              *   FILE 443\n//*          @SMF99#1 :  smf type 99 report                         *   FILE 443\n//*          @VOL     :  @VOL#301 procedure                         *   FILE 443\n//*          @VOL#301 :  scan dasd for specified volser             *   FILE 443\n//*                      (from TSO or STC)                          *   FILE 443\n//*          VSCHK000 :  virtual storage monitor                    *   FILE 443\n//*          @WLMTRC  :  @SMF99#1 (japanese translation             *   FILE 443\n//*                      for WLM action trace report)               *   FILE 443\n//*          WLMTRCD  :  @WLMTRC translation table                  *   FILE 443\n//*                                                                 *   FILE 443\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@LISTD3": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x06\\xa5\\x06\\xa5\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1701, "newlines": 1701, "modlines": 0, "user": "KIMU"}, "text": "//KIMUA JOB CLASS=F,MSGCLASS=W,NOTIFY=KIMU,TIME=1440\n//* -----------------------------------------------------------\n//*\n//* DISK BENCHMARK TEST - CACHE ANALYZER PROGRAM.\n//*\n//*  This program gets cache information before and after the\n//*  BENCHMARK test of the disk.\n//*  and, a report during the BENCHMARK.\n//*\n//* *** APF  REQUIRED. ***\n//*\n//* - PARMETER DEFAULTS\n//*   VOL(??????),HISTORY,REPORT,INTERVAL,NOSAMESSID\n//*\n//*\n//* -- EXPLANATION OF STEP --\n//*  A      : ASSEMBLE\n//*  L      : LKED\n//*  DEL    : WORK DATASET SCRATCH\n//*  G1     : COLLECT CACHE INFORMATION BEFORE NEXT TEST.\n//*  LISTD1 : DEBUG...\n//*  TEST   : ANY BENCHMARK TEST PROGRAM\n//*  SORT   : DEBUG...\n//*  LISTD2 : DEBUG...\n//*  G2     : CACHE REPORT ( LAST TEST )\n//*  G3     : CACHE REPORT ( ALL TEST )\n//*  ALTER  : OUTPUT FILE RENAME.\n//*\n//* -----------------------------------------------------------\n//JOBCAT   DD  DSN=USER.CATALOG,DISP=SHR\n//A       EXEC PGM=ASMA90,PARM='OBJECT',REGION=2000K\n//SYSIN    DD  *\n         START\n         DC   C'<< LISTDATA : Cache analyzer >> '\nVER      DC   CL6'v0r0m1'\n         PRINT NOGEN\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n@LISTD   CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04                   Base Reg. R03\n         LA    R04,2048(R03)\n         LA    R04,2048(R04)               2ND BASE REG. R04\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n*\n*--- initialize ---\n         MVI   PARMWA,X'40'             space clear\n         MVC   PARMWA+1(L'PARMWA-1),PARMWA\n         MVI   PARMVOL,X'40'\n         MVC   PARMVOL+1(L'PARMVOL-1),PARMVOL\n*\n         L     R01,0(R01)\n         LH    R02,0(R01)\n         LTR   R02,R02\n         BZ    PRM_EXIT\n         BCTR  R02,0\n*--> PARMMVC  MVC   PARMWA(0),2(R01)\n         EX    R02,PARMMVC\n*\n         MVI   PROCFLAG,X'E0'            Defaults\n*                                           HISTORY\n*                                           REPORT\n*                                           INTERVAL\n*                                         NOSAMESSID\n*\n         EXTRACT ANSWERA,FIELDS=(ASID)\n*\n         L     R01,CVTPTR                CVT\n         USING CVTMAP,R01\n         L     R01,CVTASVT               ASVT\n         USING ASVT,R01\n         LA    R02,ASVTFRST\n         LH    R15,ASID\n         SLL   R15,2\n         LA    R02,0(R02,R15)\n         L     R01,0(R02)                ASCB\n         USING ASCB,R01\n         L     R01,ASCBJBNI\n         LTR   R01,R01\n         BZ    INITSKP1\n         MVC   OUTJOB(8),0(R01)\nINITSKP1 EQU   *\n         DROP  R01\n*--- parameter ---\n         LA    R01,PARMWA\nPRM_LOP1 EQU   *\n         CLC   0(04,R01),=CL04'VOL('\n         BNE   PRM_SKP1\n         LA    R15,PARMVOL\n         LA    R14,PARMVOLL\n         A     R01,=F'4'\n         B     PRM_LOP2\nPRM_SKP1 EQU   *\n         CLC   0(09,R01),=CL09'NOHISTORY'      NOHISTORY\n         BNE   PRM_SKP2\n         NI    PROCFLAG,X'FF'-PROCHIST\n         A     R01,=F'9'\n         B     PRM_LOPN\nPRM_SKP2 EQU   *\n         CLC   0(08,R01),=CL08'NOREPORT'       NOREPORT,NOINTERVAL\n         BNE   PRM_SKP3\n         NI    PROCFLAG,X'FF'-PROCREPT-PROCINTV\n         A     R01,=F'4'\n         LA    R01,8(R01)\n         B     PRM_LOPN\nPRM_SKP3 EQU   *\n         CLC   0(10,R01),=CL10'NOINTERVAL'     NOINTERVAL\n         BNE   PRM_SKP4\n         NI    PROCFLAG,X'FF'-PROCINTV\n         LA    R01,10(R01)\n         B     PRM_LOPN\nPRM_SKP4 EQU   *\n         CLC   0(10,R01),=CL08'SAMESSID'       SAMESSID\n         BNE   PRM_SKP5\n         OI    PROCFLAG,PROCSSID\n         LA    R01,08(R01)\n         B     PRM_LOPN\nPRM_SKP5 EQU   *\nPRM_LOPN EQU   *\n         LA    R01,1(R01)\n         CL    R01,=A(PARMWAE)\n         BL    PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_LOP2 EQU   *\n         XR    R02,R02\nPRM_LOP21 EQU  *\n         CLI   0(R01),C')'\n         BE    PRM_SKP20\n         MVC   0(1,R15),0(R01)\n         LA    R02,1(R02)\n         LA    R15,1(R15)\n         LA    R01,1(R01)\n         CL    R01,=A(PARMWAE)\n         BL    PRM_LOP21\n         B     PRM_EXIT\nPRM_SKP20 EQU  *\n         STH   R02,0(R14)                store length\n         LA    R01,1(R01)\n         CL    R01,=A(PARMWAE)\n         BL    PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_EXIT EQU   *\n* --- Parameter Check ---\n         MVI   MSG#0000,C' '\n         MVC   MSG#0000+1(L'MSG#0000-1),MSG#0000\n         MVC   MSG#0000(14),=CL14'LISTD : VOL ='\n         LA    R01,MSG#0000+14\n         LH    R02,PARMVOLL\n         EX    R02,SHOWPARM\nSHOWPARM MVC   0(0,R01),PARMVOL\n         LA    R01,1(R01,R02)\n*\n         TM    PROCFLAG,PROCHIST\n         BO    PCHKSKP11\n         MVC   0(9,R01),=CL09'NOHISTORY'\n         LA    R01,10(R01)\n         B     PCHKSKP12\nPCHKSKP11 EQU  *\n         MVC   0(7,R01),=CL07'HISTORY'\n         LA    R01,8(R01)\nPCHKSKP12 EQU  *\n         TM    PROCFLAG,PROCREPT\n         BO    PCHKSKP21\n         MVC   0(8,R01),=CL08'NOREPEAT'\n         LA    R01,9(R01)\n         B     PCHKSKP22\nPCHKSKP21 EQU  *\n         MVC   0(6,R01),=CL06'REPEAT'\n         LA    R01,7(R01)\nPCHKSKP22 EQU  *\n         TM    PROCFLAG,PROCINTV\n         BO    PCHKSKP31\n         MVC   0(10,R01),=CL10'NOINTERVAL'\n         LA    R01,11(R01)\n         B     PCHKSKP32\nPCHKSKP31 EQU  *\n         MVC   0(8,R01),=CL8'INTERVAL'\n         LA    R01,9(R01)\nPCHKSKP32 EQU  *\n         TM    PROCFLAG,PROCSSID\n         BO    PCHKSKP41\n         MVC   0(10,R01),=CL10'NOSAMESSID'\n         LA    R01,11(R01)\n         B     PCHKSKP42\nPCHKSKP41 EQU  *\n         MVC   0(8,R01),=CL8'SAMESSID'\n         LA    R01,9(R01)\nPCHKSKP42 EQU  *\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n* --- SAMESSID : same ssid search ---\n         TM    PROCFLAG,PROCSSID\n         BNO   SSIDX\nSSIDX    EQU   *\n* --- MAIN LOOP ------------------------------------------------------\n*\n*  +---------+\n*  | ucb chk |\n*  +---------+\n*       | ? VOLSER match\n*  +---------+\n*  |listdata |\n*  +---------+\n*       | ? no report\n*  +---------+\n*  |matching |\n*  |  history|\n*  +---------+\n*       | ? match ?no interval\n*  +---------+\n*  | report  |\n*  +---------+\n*       | ? no history\n*  +---------+\n*  | write   |\n*  |  history|\n*  +---------+\n*\n* --- Loop Initial ---\n         OPEN  (HISTDCBI,(INPUT))\n         TM    PROCFLAG,PROCHIST\n         BNO   OPENSKP0\n         OPEN  (HISTDCBO,(OUTPUT))\nOPENSKP0 EQU   *\n         TM    PROCFLAG,PROCREPT\n         BNO   OPENSKP1\n         OPEN  (REPDCB,(OUTPUT))\n         PUT   REPDCB,REPHEAD\nOPENSKP1 EQU   *\n         XC    UCBAREA,UCBAREA\n         XC    USCNWORK,USCNWORK\n*\n         GET   HISTDCBI,INAREA\nNEXTUCB  EQU   *\n         UCBSCAN COPY,WORKAREA=USCNWORK,UCBAREA=UCBAREA,               *\n               DEVCLASS=DASD,RANGE=ALL\n         LTR   R15,R15\n         BZ    UCB_OK\n         B     ENDOFUCB\n*        WTO   'LISTD : VOLUME NOT FOUND ??'\n*        B     TERMCODE1\nUCB_OK   EQU   *\n         USING UCBOB,R12\n         LA    R12,UCBAREA\n*\n         TM    UCBSTAT,UCBONLI\n         BNO   NEXTUCB\n*\n         LA    R01,PARMVOL\n         LA    R02,UCBVOLI\n         LH    R14,PARMVOLL\nVOLUMECHK EQU  *\n         CLI   0(R01),C'*'\n         BE    VC_X\n         CLI   0(R01),C','\n         BE    VC_X\n         CLI   0(R01),C'%'\n         BE    VC_N\n         CLI   0(R01),C'+'\n         BE    VC_N\n         CLI   0(R01),C' '\n         BE    NEXTUCB\n         CLC   0(1,R01),0(R02)\n         BE    VC_N\nVCLOP1   EQU   *\n         CLI   0(R01),C','\n         BE    VCLOP1X\n         LA    R01,1(R01)\n         BCT   R14,VCLOP1\n         B     NEXTUCB\nVCLOP1X  EQU   *\n         LA    R01,1(R01)\n         LA    R02,UCBVOLI\n         BCT   R14,VOLUMECHK\n         B     NEXTUCB\nVC_N     EQU   *\n         LA    R01,1(R01)\n         LA    R02,1(R02)\n         BCT   R14,VOLUMECHK\nVC_X     EQU   *\n         MVC   @U_SER,UCBVOLI                  VOLSER\n         MVC   @U_TYP,UCBTYP                   DEVICE TYPE\n         MVC   @U_ADR,UCBCHAN                  UNIT ADDRESS ( BIN )\n         DROP  R12\n* --- LISTDATA Parm Set ( status ) ---\n         MVI   LD#BUFF,X'00'                   Clear LISTDATA Buffer\n         LA    R00,LD#BUFF\n         LA    R01,LLD#BUFF-1\n         LA    R14,LD#BUFF+1\n         MVCL  R00,R14\n         XC    SSGARGL(SSGARGLL),SSGARGL       Clear SSGARGL\n         LA    R01,@U_SER                      Copy Volume Serial\n         ST    R01,SSGAVOL\n         MVC   SSGUNIT,@U_TYP                  Copy Unit Type\n         LA    R01,LLD#BUFF                    Copy Buffer Length\n         ST    R01,SSGOLN\n         LA    R01,LD#BUFF                     Copy Buffer Address\n         ST    R01,SSGOADR\n         XR    R01,R01\n         IC    R01,=BL1'01000000'              Option Set\n*        IC    R01,=BL1'10000000'\n*                                              '01000000'b = STATUS\n*                                              '10000000'b = COUNTS\n         STC   R01,SSGOPT1\n         XC    SSGOPT2,SSGOPT2                 Clear SSGOPT2\n         XC    SSGMDLID,SSGMDLID                     SSGMDLID\n         XC    SSGRCIOS,SSGRCIOS                     SSGRCIOS\n* --- LISTDATA Execute ---\n         LA    R01,LDPARM\n         LINK  EP=IDCSS01\n* --- LISTDATA Edit ---\n         LA    R01,LD#BUFF                     R11 <- SSGDA Base Reg.\n         USING SSGDA,R01\n*        LA    R12,SSGDADA\n*        USING SSGDASS,R12                     R12 <- SSGDASS Base Reg.\n         MVC   OUTSTATS(80),SSGDADA\n         DROP  R01\n* --- LISTDATA Parm Set ( counts ) ---\n         MVI   LD#BUFF,X'00'                   Clear LISTDATA Buffer\n         LA    R00,LD#BUFF\n         LA    R01,LLD#BUFF-1\n         LA    R14,LD#BUFF+1\n         MVCL  R00,R14\n         XC    SSGARGL(SSGARGLL),SSGARGL       Clear SSGARGL\n         LA    R01,@U_SER                      Copy Volume Serial\n         ST    R01,SSGAVOL\n         MVC   SSGUNIT,@U_TYP                  Copy Unit Type\n         LA    R01,LLD#BUFF                    Copy Buffer Length\n         ST    R01,SSGOLN\n         LA    R01,LD#BUFF                     Copy Buffer Address\n         ST    R01,SSGOADR\n         XR    R01,R01\n*        IC    R01,=BL1'01000000'              Option Set\n         IC    R01,=BL1'10000000'\n*                                              '01000000'b = STATUS\n*                                              '10000000'b = COUNTS\n         STC   R01,SSGOPT1\n         XC    SSGOPT2,SSGOPT2                 Clear SSGOPT2\n         XC    SSGMDLID,SSGMDLID                     SSGMDLID\n         XC    SSGRCIOS,SSGRCIOS                     SSGRCIOS\n* --- LISTDATA Execute ---\n         LA    R01,LDPARM\n         LINK  EP=IDCSS01\n* --- LISTDATA Edit ---\n         LA    R01,LD#BUFF                     R11 <- SSGDA Base Reg.\n         USING SSGDA,R01\n*        LA    R12,SSGDADA\n*        USING SSGDASS,R12                     R12 <- SSGDASS Base Reg.\n         MVC   OUTCOUNT(96),SSGDADA\n         MVC   OUTADR(2),@U_ADR\n         MVC   OUTSER(6),@U_SER\n* -----------------------------------------------------------------\n         TIME  DEC,TIMERSLT,DATETYPE=YYYYMMDD,LINKAGE=SYSTEM\n         MVC   OUTTIME,TIMERSLT\n* -----------------------------------------------------------------\n         XC    CPTIME,CPTIME\n         XC    CPTIME2,CPTIME2\nREADLOP1 EQU   *\n         TM    PROCFLAG,EOFHIST\n         BO    R_GREAT\n         CLC   INADR,OUTADR\n         BE    R_MATCH\n         BL    R_LESS\n         B     R_GREAT\nR_GREAT  EQU   *\n         TM    PROCFLAG,PROCREPT         if no report ?\n         BNO   R_GREAT3\n         TM    PROCFLAG,PROCINTV         if Interval ?\n         BO    R_GREAT2\n         CLC   CPADR,OUTADR              if compare area address equal\n         BNE   R_GREAT2\n         LA    R11,CPAREA                old area\n         LA    R12,OUTAREA               new area\n         BAL   R10,RPTPROC               report process\n         B     R_GREAT3\nR_GREAT2 EQU   *\n         CLC   CPTIME,=XL16'0'           if compare area active\n         BE    R_GREAT3\n         LA    R11,CPAREA                old area\n         LA    R12,OUTAREA               new area\n         BAL   R10,RPTPROC               report process\nR_GREAT3 EQU   *\n         TM    PROCFLAG,PROCHIST         if no history ?\n         BNO   R_GREAT4\n         PUT   HISTDCBO,OUTAREA          write new record\nR_GREAT4 EQU   *\n         B     NEXTUCB\nR_MATCH  EQU   *\n         TM    PROCFLAG,PROCREPT         if no report ?\n         BNO   R_MATCH3\n         TM    PROCFLAG,PROCINTV         if no interval ?\n         BNO   R_MATCH2\n         CLC   CPTIME,=XL16'0'           if first ?\n         BE    R_MATCH1\n         MVC   CPAREA2,CPAREA            copy old compare area\n         MVC   CPAREA,INAREA             copy compare area\n         LA    R11,CPAREA2               old area\n         LA    R12,CPAREA                new area\n         BAL   R10,RPTPROC               report process\n         B     R_MATCH3\nR_MATCH1 EQU   *\n         MVC   CPAREA,INAREA\n         B     R_MATCH3\nR_MATCH2 EQU   *\n* +++\n*        MVC   MSG#0000(80),=CL80'DEBUG :'\n*        UNPK  EDWORK(9),CPTIME+8(5)\n*        TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   MSG#0000+8(8),EDWORK\n*        UNPK  EDWORK(9),CPTIME(5)\n*        TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   MSG#0000+17(8),EDWORK\n*        UNPK  EDWORK(9),INTIME+8(5)\n*        TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   MSG#0000+30(8),EDWORK\n*        UNPK  EDWORK(9),INTIME(5)\n*        TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   MSG#0000+39(8),EDWORK\n*        WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n* +++\n         CLC   CPTIME+8(4),INTIME+8\n         BH    R_MATCH3\n         BL    R_MATCH21\n         CLC   CPTIME(8),INTIME\n         BNL   R_MATCH3\nR_MATCH21 EQU  *\n         MVC   CPAREA,INAREA\nR_MATCH3 EQU   *\n         TM    PROCFLAG,PROCHIST         if no history ?\n         BNO   R_MATCH4\n         PUT   HISTDCBO,INAREA\nR_MATCH4 EQU   *\n         GET   HISTDCBI,INAREA\n         B     READLOP1\nR_LESS   EQU   *\n         TM    PROCFLAG,PROCHIST         if no history ?\n         BNO   R_LESS1\n         PUT   HISTDCBO,INAREA\nR_LESS1  EQU   *\n         GET   HISTDCBI,INAREA\n         B     READLOP1\nEOF      EQU   *\n         OI    PROCFLAG,EOFHIST\n         TM    PROCFLAG,ENDUCBF\n         BO    BYE\n         B     READLOP1\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n* --- REPORT PROCESS ( RETURN : R10 )------------------------------\nRPTPROC  EQU   *\n*        LA    R11,CPCOUNT               old area\n*        LA    R12,OUTCOUNT              new area\n* --- volume serial -----------------------------------------------\n         CLC   OAJOB(8,R11),=XL8'0'\n         BE    JOBSKP1\n         MVC   REPJOB(8),OAJOB(R11)\n         B     JOBSKP2\nJOBSKP1  EQU   *\n         MVC   REPJOB(8),=CL8'-NONE-'\nJOBSKP2  EQU   *\n* --- address -----------------------------------------------------\n         UNPK  EDWORK(5),OAADR(3,R11)\n         TR    EDWORK(4),=C'0123456789ABCDEF'-X'F0'\n         MVC   REPADR(4),EDWORK\n* --- volume serial -----------------------------------------------\n         MVC   REPVOL(6),OASER(R11)\n* --- start date --------------------------------------------------\n         UNPK  EDWORK(9),OATIME+8(5,R11)\n         TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   REPSDATE+0(4),EDWORK+0\n         MVI   REPSDATE+4,C'/'\n         MVC   REPSDATE+5(2),EDWORK+4\n         MVI   REPSDATE+7,C'/'\n         MVC   REPSDATE+8(2),EDWORK+6\n* --- start time --------------------------------------------------\n         UNPK  EDWORK(9),OATIME(5,R11)\n         TR    EDWORK(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   REPSTIME+0(2),EDWORK+0\n         MVI   REPSTIME+2,C':'\n         MVC   REPSTIME+3(2),EDWORK+2\n         MVI   REPSTIME+5,C':'\n         MVC   REPSTIME+6(2),EDWORK+4\n* --- interval time -----------------------------------------------\n         XR    R06,R06                   date\n         CLC   OATIME+8(4,R12),OATIME+8(R11)\n         BE    IVT_SKP1\n         L     R06,=A(60*60*24)\nIVT_SKP1 EQU   *\n         XR    R01,R01                   hh\n         XR    R02,R02\n         IC    R01,OATIME+0(R11)\n         SLL   R01,4\n         O     R01,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R01,PK_AREA+4\n         CVB   R01,PK_AREA\n         IC    R02,OATIME+0(R12)\n         SLL   R02,4\n         O     R02,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R02,PK_AREA+4\n         CVB   R02,PK_AREA\n         SR    R02,R01\n         MH    R02,=AL2(60*60)\n         LA    R06,0(R02,R06)\n         XR    R01,R01                   mm\n         XR    R02,R02\n         IC    R01,OATIME+1(R11)\n         SLL   R01,4\n         O     R01,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R01,PK_AREA+4\n         CVB   R01,PK_AREA\n         IC    R02,OATIME+1(R12)\n         SLL   R02,4\n         O     R02,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R02,PK_AREA+4\n         CVB   R02,PK_AREA\n         SR    R02,R01\n         MH    R02,=AL2(60)\n         LA    R06,0(R02,R06)\n         XR    R01,R01                   ss\n         XR    R02,R02\n         IC    R01,OATIME+2(R11)\n         SLL   R01,4\n         O     R01,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R01,PK_AREA+4\n         CVB   R01,PK_AREA\n         IC    R02,OATIME+2(R12)\n         SLL   R02,4\n         O     R02,=X'0000000F'\n         XC    PK_AREA,PK_AREA\n         ST    R02,PK_AREA+4\n         CVB   R02,PK_AREA\n         SR    R02,R01\n         LA    R06,0(R02,R06)\n*\n         SRDA  R06,32\n         D     R06,=F'60'    R07 <- 1min = 1s * 60\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVI   REPINTV+5,C':'\n         MVC   REPINTV+6(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    R07 <- 1hor = 1min * 60\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   REPINTV(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVI   REPINTV+2,C':'\n         MVC   REPINTV+3(2),UPK_AREA+6\n         B     INTV_X\nINTV_ERR EQU   *\n         MVC   REPINTV(10),=CL10'*OVERFLOW*'\nINTV_X   EQU   *\n* --- Count -------------------------------------------------------\n         LA    R11,OACOUNT(R11)\n         LA    R12,OACOUNT(R12)\n*        WTO   'COUNT'\n* --- SSID --------------------------------------------------------\n         UNPK  EDWORK(5),APFSSID(3,R11)\n         TR    EDWORK(4),=C'0123456789ABCDEF'-X'F0'\n         MVC   REPSSID(4),EDWORK\n* --- Search or Read normal I/O requests --------------------------\n         L     R01,4(R12)\n         L     R01,APFNSRH(R12)\n         S     R01,APFNSRH(R11)\n         ST    R01,NRTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRNOR(10),EDWORK+6      Read normal\n* --- Search or Read normal request hits --------------------------\n         L     R01,APFNSRHH(R12)\n         S     R01,APFNSRHH(R11)\n         ST    R01,NRCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRNORC(10),EDWORK+6     Read normal from cache\n* --- Write normal I/O requests -----------------------------------\n         L     R01,APFNWRI(R12)\n         S     R01,APFNWRI(R11)\n         ST    R01,NWTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWNOR(10),EDWORK+6      Write normal\n* --- Dasd fast write I/O request hits ----------------------------\n         L     R01,APFNDFWH(R12)\n         S     R01,APFNDFWH(R11)\n         ST    R01,NWCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWNORC(10),EDWORK+6     Write normal to cache\n* --- Search or Read sequential I/O requests ----------------------\n         L     R01,APFSSRH(R12)\n         S     R01,APFSSRH(R11)\n         ST    R01,SRTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRSEQ(10),EDWORK+6      Read sequential\n* --- Search or Read sequential I/O request hits ------------------\n         L     R01,APFSSRHH(R12)\n         S     R01,APFSSRHH(R11)\n         ST    R01,SRCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRSEQC(10),EDWORK+6     Read sequential from cache\n* --- Write sequential I/O requests -------------------------------\n         L     R01,APFSWRI(R12)\n         S     R01,APFSWRI(R11)\n         ST    R01,SWTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWSEQ(10),EDWORK+6      Write sequential\n* --- Dasd fast write sequential request hits ---------------------\n         L     R01,APFSDFWH(R12)\n         S     R01,APFSDFWH(R11)\n         ST    R01,SWCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWSEQC(10),EDWORK+6     Write sequential to cache\n* --- Search or Read cache fast write I/O requests ----------------\n         L     R01,APFRCFW(R12)\n         S     R01,APFRCFW(R11)\n         ST    R01,CRTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRCFW(10),EDWORK+6      read CFW\n* --- Search or Read cache fast write I/O request hits ------------\n         L     R01,APFRCFWH(R12)\n         S     R01,APFRCFWH(R11)\n         ST    R01,CRCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRCFWC(10),EDWORK+6     read CFW from cache\n* --- Cache fast write I/O requests -------------------------------\n         L     R01,APFCFW(R12)\n         S     R01,APFCFW(R11)\n         ST    R01,CWTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWCFW(10),EDWORK+6      Write CFW\n* --- Cache fast write I/O request hits ---------------------------\n         L     R01,APFCFWH(R12)\n         S     R01,APFCFWH(R11)\n         ST    R01,CWCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWCFWC(10),EDWORK+6     Write CFW to cache\n* --- Inhibit cache loading I/O requests --------------------------\n         L     R01,APFINH(R12)\n         S     R01,APFINH(R11)\n         ST    R01,INHIBIT\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPINH(10),EDWORK+6\n* --- Bypass cache I/O requests -----------------------------------\n         L     R01,APFBYP(R12)\n         S     R01,APFBYP(R11)\n         ST    R01,BYPASS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPBYP(10),EDWORK+6\n* --- DFW operation forced ----------------------------------------\n         L     R01,APFRETRY(R12)\n         S     R01,APFRETRY(R11)\n         ST    R01,RETRIES\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRTY(10),EDWORK+6\n* --- DFW normal write operation counts ---------------------------\n         L     R01,APFNDFW(R12)\n         S     R01,APFNDFW(R11)\n         ST    R01,NWDFW\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWNORD(10),EDWORK+6\n* --- DFW sequential write operation counts -----------------------\n         L     R01,APFSDFW(R12)\n         S     R01,APFSDFW(R11)\n         ST    R01,SWDFW\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWSEQD(10),EDWORK+6\n* --- sequential DASD to cache transfer operations ----------------\n         L     R01,APFSDTOC(R12)\n         S     R01,APFSDTOC(R11)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPSDTOC(10),EDWORK+6\n* --- DASD to cache transfer operations ---------------------------\n         L     R01,APFNDTOC(R12)\n         S     R01,APFNDTOC(R11)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPNDTOC(10),EDWORK+6\n* --- cache to DASD transfer operations ---------------------------\n         L     R01,APFNCTOD(R12)\n         S     R01,APFNCTOD(R11)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPNCTOD(10),EDWORK+6\n* --- Read Total --------------------------------------------------\n         L     R01,NRTOTAL\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRTTL(10),EDWORK+6\n* --- Read Cache read ---------------------------------------------\n         L     R01,NRCACHE\n         A     R01,SRCACHE\n         A     R01,CRCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPRTTLC(10),EDWORK+6\n* --- Write Total -------------------------------------------------\n         L     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWTTL(10),EDWORK+6\n* --- Write DFW ---------------------------------------------------\n         L     R01,NWDFW\n         A     R01,SWDFW\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWDFW(10),EDWORK+6\n* --- Write Cache write -------------------------------------------\n         L     R01,NWCACHE\n         A     R01,SWCACHE\n         A     R01,CWCACHE\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPWTTLC(10),EDWORK+6\n* --- total i/o ---------------------------------------------------\n         L     R01,NRTOTAL\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   REPTTLIO(10),EDWORK+6\n* --- read% -------------------------------------------------------\n         L     R01,NRTOTAL               total i/o\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         LTR   R01,R01\n         BZ    P_READSKP1\n         L     R07,NRTOTAL               read total\n         A     R07,SRTOTAL\n         A     R07,CRTOTAL\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_READSKP2\nP_READSKP1 EQU *\n         XR    R07,R07\nP_READSKP2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPREADP(10),EDWORK+6\n* --- write% ------------------------------------------------------\n         L     R01,NRTOTAL               total i/o\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         LTR   R01,R01\n         BZ    P_WRITSKP1\n         L     R07,NWTOTAL               write total\n         A     R07,SWTOTAL\n         A     R07,CWTOTAL\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_WRITSKP2\nP_WRITSKP1 EQU *\n         XR    R07,R07\nP_WRITSKP2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPWRITP(10),EDWORK+6\n* --- inhibit% ----------------------------------------------------\n         L     R01,NRTOTAL               total i/o\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         LTR   R01,R01\n         BZ    P_INHISKP1\n         L     R07,INHIBIT               inhibit\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_INHISKP2\nP_INHISKP1 EQU *\n         XR    R07,R07\nP_INHISKP2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPINHP(10),EDWORK+6\n* --- bypass% -----------------------------------------------------\n         L     R01,NRTOTAL               total i/o\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         LTR   R01,R01\n         BZ    P_BYPASKP1\n         L     R07,BYPASS                bypass\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_BYPASKP2\nP_BYPASKP1 EQU *\n         XR    R07,R07\nP_BYPASKP2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPBYPP(10),EDWORK+6\n* --- cache hit% --------------------------------------------------\n         L     R01,NRTOTAL               total i/o\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         A     R01,NWTOTAL\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         A     R01,INHIBIT\n         A     R01,BYPASS\n         LTR   R01,R01\n         BZ    P_CHSKP1\n         L     R07,NWCACHE               cache write\n         A     R07,SWCACHE\n         A     R07,CWCACHE\n         A     R07,NRCACHE               cache read\n         A     R07,SRCACHE\n         A     R07,CRCACHE\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_CHSKP2\nP_CHSKP1 EQU   *\n         XR    R07,R07\nP_CHSKP2 EQU   *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPHITP(10),EDWORK+6\n* --- read hit% ---------------------------------------------------\n         L     R01,NRTOTAL               read total\n         A     R01,SRTOTAL\n         A     R01,CRTOTAL\n         LTR   R01,R01\n         BZ    P_RHSKP1\n         L     R07,NRCACHE               cache read\n         A     R07,SRCACHE\n         A     R07,CRCACHE\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_RHSKP2\nP_RHSKP1 EQU   *\n         XR    R07,R07\nP_RHSKP2 EQU   *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPRHITP(10),EDWORK+6\n* --- normal cache read% ------------------------------------------\n         L     R01,NRCACHE               cache read\n         A     R01,SRCACHE\n         A     R01,CRCACHE\n         LTR   R01,R01\n         BZ    P_NCRSKP1\n         L     R07,NRCACHE               normal cache read\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_NCRSKP2\nP_NCRSKP1 EQU  *\n         XR    R07,R07\nP_NCRSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPRNOTP(10),EDWORK+6\n* --- sequential cache read% --------------------------------------\n         L     R01,NRCACHE               cache read\n         A     R01,SRCACHE\n         A     R01,CRCACHE\n         LTR   R01,R01\n         BZ    P_SCRSKP1\n         L     R07,SRCACHE               sequential cache read\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_SCRSKP2\nP_SCRSKP1 EQU  *\n         XR    R07,R07\nP_SCRSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPRSEQP(10),EDWORK+6\n* --- CFW cache read% ---------------------------------------------\n         L     R01,NRCACHE               cache read\n         A     R01,SRCACHE\n         A     R01,CRCACHE\n         LTR   R01,R01\n         BZ    P_CCRSKP1\n         L     R07,CRCACHE               CFW cache read\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_CCRSKP2\nP_CCRSKP1 EQU  *\n         XR    R07,R07\nP_CCRSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPRCFWP(10),EDWORK+6\n* --- write hit% --------------------------------------------------\n         L     R01,NWTOTAL               write total\n         A     R01,SWTOTAL\n         A     R01,CWTOTAL\n         LTR   R01,R01\n         BZ    P_WHSKP1\n         L     R07,NWCACHE               cache read\n         A     R07,SWCACHE\n         A     R07,CWCACHE\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_WHSKP2\nP_WHSKP1 EQU   *\n         XR    R07,R07\nP_WHSKP2 EQU   *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPWHITP(10),EDWORK+6\n* --- normal cache write% -----------------------------------------\n         L     R01,NWCACHE               cache write\n         A     R01,SWCACHE\n         A     R01,CWCACHE\n         LTR   R01,R01\n         BZ    P_NCWSKP1\n         L     R07,NWCACHE               normal cache write\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_NCWSKP2\nP_NCWSKP1 EQU  *\n         XR    R07,R07\nP_NCWSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPWNORP(10),EDWORK+6\n* --- sequential cache write% -------------------------------------\n         L     R01,NWCACHE               cache write\n         A     R01,SWCACHE\n         A     R01,CWCACHE\n         LTR   R01,R01\n         BZ    P_SCWSKP1\n         L     R07,SWCACHE               sequential cache write\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_SCWSKP2\nP_SCWSKP1 EQU  *\n         XR    R07,R07\nP_SCWSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPWSEQP(10),EDWORK+6\n* --- CFW cache write% --------------------------------------------\n         L     R01,NWCACHE               cache write\n         A     R01,SWCACHE\n         A     R01,CWCACHE\n         LTR   R01,R01\n         BZ    P_CCWSKP1\n         L     R07,CWCACHE               CFW cache write\n         XR    R06,R06\n         M     R06,=F'1000000000'        * 0.000001%\n         DR    R06,R01\n         B     P_CCWSKP2\nP_CCWSKP1 EQU  *\n         XR    R07,R07\nP_CCWSKP2 EQU  *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK2\n         ED    EDWORK,PK_AREA\n         MVC   REPWCFWP(10),EDWORK+6\n* -----------------------------------------------------------------\n*        WTO   'DONE'\n         PUT   REPDCB,REPAREA\n         BR    R10\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\nENDOFUCB EQU   *\n         TM    PROCFLAG,EOFHIST\n         BO    BYE\n         TM    PROCFLAG,PROCHIST         if no history ?\n         BNO   BYE\n         OI    PROCFLAG,ENDUCBF\nWRITEALL EQU   *\n         PUT   HISTDCBO,INAREA\n         GET   HISTDCBI,INAREA\n         B     WRITEALL\nBYE      EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n* -----------------------------------------------------------------\nTERMCODE1 EQU  *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=1\n* -----------------------------------------------------------------\nHISTDCBI DCB   DSORG=PS,MACRF=(GM),DDNAME=HISTIN,RECFM=F,              **\n               LRECL=250,BLKSIZE=0,EODAD=EOF\nHISTDCBO DCB   DSORG=PS,MACRF=(PM),DDNAME=HISTOUT,RECFM=F,             **\n               LRECL=250,BLKSIZE=0\nREPDCB   DCB   DSORG=PS,MACRF=(PM),DDNAME=REPORT,RECFM=FB,             **\n               LRECL=512,BLKSIZE=0\n@U_SER   DS    CL6'VOLSER'\n@U_TYP   DS    XL4'3010200F'\n@U_ADR   DS    XL2\nIOCHECK  DS    XL1\nPROCFLAG DS    XL1\nPROCHIST EQU   X'80'              X'80' : MAKE HISTORY\nPROCREPT EQU   X'40'              X'40' : MAKE REPORT\nPROCINTV EQU   X'20'              X'20' : ALL INTERVAL\nPROCSSID EQU   X'10'              X'10' : SAME SSID\nEOFHIST  EQU   X'01'              X'01' : END OF HISTORY FILE\nENDUCBF  EQU   X'02'              X'02' : END OF UCB SCAN\n*\n         DS    0F\nTIMERSLT DS    XL16\nWK#F     DS    F\nANSWERA  DS    0F\n         DS    H\nASID     DS    H\n* --- MVC ---\nPARMMVC  MVC   PARMWA(0),2(R01)\n* --- parameter ---\nPARMWA   DS    CL100\nPARMWAE  EQU   *\nPARMVOL  DS    CL100\nPARMVOLL DS    H\n* --- WTO messages ---\nWTOINFO  WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A000 DC    AL2(L'MSG#0000)\nMSG#0000 DC    CL80'R74EDIT PARM:'\n*\n         DS    0D\nSAVEAREA DS    18F                             Reg. Save Area\nPK_AREA  DS    PL16                      pack work area\nPK_AREA2 DS    PL16\nUPK_AREA DS    XL16\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDMASK2  DC    XL16'4020202020202021204B202020202020'\nEDWORK   DS    XL16\n* --- UCB area ----------------------------------------------------\nUCBAREA  DS    XL48\nUSCNWORK DS    XL100\n* --- OUTPUT AREA -------------------------------------------------\nOUTAREA  DS    0XL250\nOATIME   EQU   *-OUTAREA\nOUTTIME  DS    XL16\nOAJOB    EQU   *-OUTAREA\nOUTJOB   DS    CL8\nOAADR    EQU   *-OUTAREA\nOUTADR   DS    XL2\nOASER    EQU   *-OUTAREA\nOUTSER   DS    CL6\nOASTATS  EQU   *-OUTAREA\nOUTSTATS DS    CL80\nOACOUNT  EQU   *-OUTAREA\nOUTCOUNT DS    CL96\n         DC    CL42' '\n* --- INPUT AREA --------------------------------------------------\nINAREA   DS    0XL250\nINTIME   DS    XL16\nINJOB    DS    CL8\nINADR    DS    XL2\nINSER    DS    CL6\nINSTATS  DS    CL80\nINCOUNT  DS    CL96\n         DC    CL42' '\n* --- COMPARE AREA ------------------------------------------------\nCPAREA   DS    0XL250\nCPTIME   DS    XL16\nCPJOB    DS    CL8\nCPADR    DS    XL2\nCPSER    DS    CL6\nCPSTATS  DS    CL80\nCPCOUNT  DS    CL96\n         DC    CL42' '\n* --- COMPARE AREA ------------------------------------------------\nCPAREA2  DS    0XL250\nCPTIME2  DS    XL16\nCPJOB2   DS    CL8\nCPADR2   DS    XL2\nCPSER2   DS    CL6\nCPSTATS2 DS    CL80\nCPCOUNT2 DS    CL96\n         DC    CL42' '\n* --- REPORT HEAD -------------------------------------------------\nREPHEAD  DS    0CL512\n         DC    CL1' '\nHEPJOB   DC    CL08'JOBNAME'\n         DC    CL1' '\nHEPADR   DC    CL04'ADDR'\n         DC    CL1' '\nHEPSSID  DC    CL04'SSID'\n         DC    CL1' '\nHEPVOL   DC    CL06'VOLSER'\n         DC    CL1' '\nHEPSDATE DC    CL10'YYYY/MM/DD'\n         DC    CL1' '\nHEPSTIME DC    CL08'HH:MM:SS'\n         DC    CL1' '\nHEPINTV  DC    CL08'HH:MM:SS'\n         DC    CL1' '\nHEPTTLIO DC    CL10'TOTAL_I/O '\n         DC    CL1' '\nHEPREAD  DC    CL10'  READ%   '\n         DC    CL1' '\nHEPWRITE DC    CL10'  WRITE%  '\n         DC    CL1' '\nHEPINHP  DC    CL10' INHIBIT% '\n         DC    CL1' '\nHEPBYPP  DC    CL10' BYPASS%  '\n         DC    CL1' '\nHEPHITP  DC    CL10'CACHE_HIT%'\n         DC    CL1' '\nHEPRHITP DC    CL10'READ_HIT% '\n         DC    CL1' '\nHEPRNOTP DC    CL10'READ_NOR% '\n         DC    CL1' '\nHEPRSEQP DC    CL10'READ_SEQ% '\n         DC    CL1' '\nHEPRCFWP DC    CL10'READ_CFW% '\n         DC    CL1' '\nHEPWHITP DC    CL10'WRITE_HIT%'\n         DC    CL1' '\nHEPWNORP DC    CL10'WRITE_NOR%'\n         DC    CL1' '\nHEPWSEQP DC    CL10'WRITE_SEQ%'\n         DC    CL1' '\nHEPWCFWP DC    CL10'WRITE_CFW%'\n         DC    CL1' '\nHEPRNOR  DC    CL10' READ_NOR '  *\n         DC    CL1' '\nHEPRNORC DC    CL10'READ_NORC '  *\n         DC    CL1' '\nHEPRSEQ  DC    CL10' READ_SEQ '  *\n         DC    CL1' '\nHEPRSEQC DC    CL10'READ_SEQC '  *\n         DC    CL1' '\nHEPRCFW  DC    CL10' READ_CFW '  *\n         DC    CL1' '\nHEPRCFWC DC    CL10'READ_CFWC '  *\n         DC    CL1' '\nHEPRTTL  DC    CL10'READ_TOTAL'\n         DC    CL1' '\nHEPRTTLC DC    CL10'READ_TOT_C'\n         DC    CL1' '\nHEPWNOR  DC    CL10'WRITE_NOR '  *\n         DC    CL1' '\nHEPWNORD DC    CL10'WRITE_NORD'  *\n         DC    CL1' '\nHEPWNORC DC    CL10'WRITE_NORC'  *\n         DC    CL1' '\nHEPWSEQ  DC    CL10'WRITE_SEQ '  *\n         DC    CL1' '\nHEPWSEQD DC    CL10'WRITE_SEQD'  *\n         DC    CL1' '\nHEPWSEQC DC    CL10'WRITE_SEQC'  *\n         DC    CL1' '\nHEPWCFW  DC    CL10'WRITE_CFW '  *\n         DC    CL1' '\nHEPWCFWC DC    CL10'WRITE_CFWC'  *\n         DC    CL1' '\nHEPWTOT  DC    CL10'WRITE_TOT '\n         DC    CL1' '\nHEPWDFW  DC    CL10'WRITE_DFW '\n         DC    CL1' '\nHEPWCAC  DC    CL10'WRITE_CACH'\n         DC    CL1' '\nHEPINH   DC    CL10' INHIBIT  '  *\n         DC    CL1' '\nHEPBYP   DC    CL10'  BYPASS  '  *\n         DC    CL1' '\nHEPRTY   DC    CL10' CACHE_RTY'  *\n         DC    CL1' '\nHEPNDTOC DC    CL10'NOR_D_TO_C'  *\n         DC    CL1' '\nHEPNCTOD DC    CL10'SEQ_C_TO_D'  *\n         DC    CL1' '\nHEPSDTOC DC    CL10'SEQ_D_TO_C'  *\n         DC    CL250' '\n* --- REPORT ------------------------------------------------------\nREPAREA  DS    0CL512\nCRLF     DC    CL1' '\nREPJOB   DS    CL08\n         DC    CL1' '\nREPADR   DS    XL04\n         DC    CL1' '\nREPSSID  DS    XL04\n         DC    CL1' '\nREPVOL   DS    CL06\n         DC    CL1' '\nREPSDATE DS    CL10'YYYY/MM/DD'\n         DC    CL1' '\nREPSTIME DS    CL08'HH:MM:SS'\n         DC    CL1' '\nREPINTV  DS    CL08'HH:MM:SS'\n         DC    CL1' '\nREPTTLIO DS    CL10'1000000000'\n         DC    CL1' '\nREPREADP DS    CL10'100.000000'\n         DC    CL1' '\nREPWRITP DS    CL10'100.000000'\n         DC    CL1' '\nREPINHP  DS    CL10'100.000000'\n         DC    CL1' '\nREPBYPP  DS    CL10'100.000000'\n         DC    CL1' '\nREPHITP  DS    CL10'100.000000'\n         DC    CL1' '\nREPRHITP DS    CL10'100.000000'\n         DC    CL1' '\nREPRNOTP DS    CL10'100.000000'\n         DC    CL1' '\nREPRSEQP DS    CL10'100.000000'\n         DC    CL1' '\nREPRCFWP DS    CL10'100.000000'\n         DC    CL1' '\nREPWHITP DS    CL10'100.000000'\n         DC    CL1' '\nREPWNORP DS    CL10'100.000000'\n         DC    CL1' '\nREPWSEQP DS    CL10'100.000000'\n         DC    CL1' '\nREPWCFWP DS    CL10'100.000000'\n         DC    CL1' '\nREPRNOR  DS    CL10'1000000000'  * Read normal total\n         DC    CL1' '\nREPRNORC DS    CL10'1000000000'  * read normal cache read\n         DC    CL1' '\nREPRSEQ  DS    CL10'1000000000'  * read sequential total\n         DC    CL1' '\nREPRSEQC DS    CL10'1000000000'  * read sequential cache read\n         DC    CL1' '\nREPRCFW  DS    CL10'1000000000'  * read cache fast write total\n         DC    CL1' '\nREPRCFWC DS    CL10'1000000000'  * read cache fast write cache read\n         DC    CL1' '\nREPRTTL  DS    CL10'1000000000'    read total total\n         DC    CL1' '\nREPRTTLC DS    CL10'1000000000'    read total cache read\n         DC    CL1' '\nREPWNOR  DS    CL10'1000000000'  * write normal total\n         DC    CL1' '\nREPWNORD DS    CL10'1000000000'  * write normal DFW\n         DC    CL1' '\nREPWNORC DS    CL10'1000000000'  * write normal cache write\n         DC    CL1' '\nREPWSEQ  DS    CL10'1000000000'  * write sequential total\n         DC    CL1' '\nREPWSEQD DS    CL10'1000000000'  * write sequential DFW\n         DC    CL1' '\nREPWSEQC DS    CL10'1000000000'  * write sequential cache write\n         DC    CL1' '\nREPWCFW  DS    CL10'1000000000'  * write CFW total\n         DC    CL1' '\nREPWCFWC DS    CL10'1000000000'  * write CFW cache write\n         DC    CL1' '\nREPWTTL  DS    CL10'1000000000'    write total\n         DC    CL1' '\nREPWDFW  DS    CL10'1000000000'    write total DFW\n         DC    CL1' '\nREPWTTLC DS    CL10'1000000000'    write total cache write\n         DC    CL1' '\nREPINH   DS    CL10'1000000000'  *\n         DC    CL1' '\nREPBYP   DS    CL10'1000000000'  *\n         DC    CL1' '\nREPRTY   DS    CL10'1000000000'  *\n         DC    CL1' '\nREPNDTOC DS    CL10'1000000000'  *\n         DC    CL1' '\nREPNCTOD DS    CL10'1000000000'  *\n         DC    CL1' '\nREPSDTOC DS    CL10'1000000000'  *\n         DC    CL250' '\n* --- WORK --------------------------------------------------------\nRTOTAL   DS    F\nRCACHE   DS    F\nWTOTAL   DS    F\nWDFW     DS    F\nWCACHE   DS    F\nINHIBIT  DS    F\nBYPASS   DS    F\nRETRIES  DS    F\nNRTOTAL  DS    F\nSRTOTAL  DS    F\nCRTOTAL  DS    F\nNWTOTAL  DS    F\nSWTOTAL  DS    F\nCWTOTAL  DS    F\nNRCACHE  DS    F\nSRCACHE  DS    F\nCRCACHE  DS    F\nNWCACHE  DS    F\nSWCACHE  DS    F\nCWCACHE  DS    F\nNWDFW    DS    F\nSWDFW    DS    F\n* --- SSGARAL -----------------------------------------------------\nSSGARGLA DC    A(SSGARGL)\nSSGARGL  DS    0F\nSSGHEAD  DS    CL8                     c'SSGARGL'\nSSGADDN  DS    A                       dd name address\nSSGAVOL  DS    A                       volser address\nSSGUNIT  DS    XL4                     unit type ( ucbtyp )\nSSGOLN   DS    F                       buffer length\nSSGOADR  DS    A                       buffer address\nSSGOPT   DS    0XL2                    option\nSSGOPT1  DS    XL1                     option 1\n*                                       x'80' : subsystem count\n*                                       x'40' : subsystem status\n*                                       x'20' :\n*                                       x'10' :\n*                                       x'08' : all same subsystem cnt\n*                                       x'04' : a subsystem count\n*                                       x'02' : a device count\n*                                       x'01' : 3880 pointer\nSSGOPT2  DS    XL1\nSSGMDLID DS    XL1                      ssid\nSSGRCIOS DS    XL1                      ios return code\nSSGARGLL EQU   *-SSGARGL\n* --- listdata parameter list -------------------------------------\nLDPARM   DS    0D\n         DC    A(0)\n         DC    A(SSGARGLA)\n         DC    A(LD#RC)\n* --- listdata work area ------------------------------------------\nLD#RC    DS    H\n         DS    0D\n* --- Error messgae -----------------------------------------------\n* --- message -----------------------------------------------------\n*                   0....+....1....+....2....+....3....+....4....+....5\n         LTORG\n         DS    0D\nLD#BUFF  DS    4000XL1\nLLD#BUFF EQU   *-LD#BUFF\n* --- SSGARAL BUFFER AREA -----------------------------------------\nSSGDA    DSECT\nSSGDAVOL DS    CL6                    Volume Serial\n         DS    XL2                    Reserved\nSSGDAUA1 DS    CL3                    Unit Address\nSSGDAUA2 DS    CL3                    Second Address\nSSGDALN  DS    H                      Data Length\nSSGDADA  DS    0X                     Data Area\n* --- SSGARAL DATA AREA ( 3880-11,13 3990-3 MODEL SUBSYSTEM STATUS )\n         DS    0D\nSSGDASS  DSECT\n         DS    XL1                 0  Reserved\nSSGDACCA DS    XL1                 1  Unit Address ( for Channel Prog )\nSSGDANUM DS    XL1                 2  Number of Unit\nSSGDASNO DS    XL1                 3  Statistics Set Number\nSSGDACST DS    BL1                 4  Cache Status\n*                    ooo o oo o o\n*                               - Cache Fast Write ( 1:OFF )\n*                             -   IML non used .\n*                          --     Reserved\n*                        -        Customize ( Do'nt Use Cache )\n*                    ---          Cache Status\n*                                  000 : Cache On\n*                                  001 : Online Processing\n*                                  010 : Hard Error ( Cache Off )\n*                                  100 : Cache Off\n*                                  110 : Offine Processing (Destageing)\n*                                  111 : Destage Error\nSSGDANST DS    XL1                 5  NVS Status\n*                    oo o o o ooo\n*                             --- Reserved\n*                           -     Hard Error\n*                         -       Costomize ( Do'nt Use )\n*                       -         Reserved\n*                    --           NVS Status\n*                                  00 : NVS On\n*                                  01 : Hard Error\n*                                  10 : NVS Off or Hard Error\n*                                  11 : Destageing or Error\n*\n         DS    XL4               6-9  Reserved\nSSGDACSZ DS    FL4              10-13 Cache Size\nSSGDAUSZ DS    FL4              14-17 Useable Size\nSSGDAPSZ DS    FL4              18-21 PIN Data Size\nSSGDAFSZ DS    FL4              22-25 Offline Size\nSSGDAUST DS    XL2              26,27 Unit Status\n*                    oo oo o o oo\n*                              --  Dual Copy Status\n*                                  00 : Dual Copy Ready\n*                                  01 : Dual Copy ( Processing )\n*                                  10 : Dual Stop ( NO-Swicth )\n*                                  11 : Dual Stop ( Switched )\n*                            -     Dual Copy ( Second Units )\n*                          -       Dual Copy ( First Units  )\n*                       --         DFW Status\n*                                  00 : DFW On\n*                                  01 : Reserved\n*                                  10 : DFW Error\n*                                  11 : DFW Off\n*                    --            Device Status\n*                                  00 : Device On\n*                                  01 : Reserved\n*                                  10 : Device Error\n*                                  11 : Deivce Off\n*                    oo oooooo\n*                       ------     Dual Copy Either Address\n*                    --            PIN Data Status\n*                                  00 : PIN Not Found\n*                                  01 : PIN Found ( DFW On )\n*                                  10 : Reserved\n*                                  11 : PIN Found ( DFW Off )\nSSGDANSZ DS    FL4              28-31 NVS Size\nSSGDANPS DS    FL4              32-35 PINNED Size ( NVS )\n         DS    XL1                36  Unit Status ( Group 2 )\n         DS    XL1                37  Reserved\nSSGDASSI DS    XL2              38-39 Subsystem-ID\n* -------------------------------------------------------------------\nSSGDAXPF DSECT\nAPFFLAG  EQU   *-SSGDAXPF\nXPFFLAG  DS    XL1       0      x'80':Cache not available\nAPFADR   EQU   *-SSGDAXPF\nXPFADR   DS    XL1       1      Device unit address\nAPFSTATS EQU   *-SSGDAXPF\nXPFSTATS DS    XL2       2- 3   Device status\nAPFNSRH  EQU   *-SSGDAXPF\nXPFNSRH  DS    XL4       4- 7   Search or Read normal I/O requests\nAPFNSRHH EQU   *-SSGDAXPF\nXPFNSRHH DS    XL4       8-11   Search or Read normal I/O requests hits\nAPFNWRI  EQU   *-SSGDAXPF\nXPFNWRI  DS    XL4      12-15   Write normal I/O request\nAPFNDFWH EQU   *-SSGDAXPF\nXPFNDFWH DS    XL4      16-19   Dasd First Write I/O request hits\nAPFSSRH  EQU   *-SSGDAXPF\nXPFSSRH  DS    XL4      20-23   Search or Read sequential I/O requests\nAPFSSRHH EQU   *-SSGDAXPF\nXPFSSRHH DS    XL4      24-27   Search or Read sequential I/O req Hits\nAPFSWRI  EQU   *-SSGDAXPF\nXPFSWRI  DS    XL4      28-31   Write sequential I/O requests\nAPFSDFWH EQU   *-SSGDAXPF\nXPFSDFWH DS    XL4      32-35   Dasd First Write sequential req hits\nAPFRCFW  EQU   *-SSGDAXPF\nXPFRCFW  DS    XL4      36-39   Search or Read cache fast write I/O req\nAPFRCFWH EQU   *-SSGDAXPF\nXPFRCFWH DS    XL4      40-43   Search or Read cache fast write req hit\nAPFCFW   EQU   *-SSGDAXPF\nXPFCFW   DS    XL4      44-47   Cache fast write I/O requests\nAPFCFWH  EQU   *-SSGDAXPF\nXPFCFWH  DS    XL4      48-51   Cache fast write I/O request hits\nAPFINH   EQU   *-SSGDAXPF\nXPFINH   DS    XL4      52-55   Inhibit cache loading I/O requests\nAPFBYP   EQU   *-SSGDAXPF\nXPFBYP   DS    XL4      56-59   Bypass cache I/O requests\nAPFSDTOC EQU   *-SSGDAXPF\nXPFSDTOC DS    XL4      60-63   Sequential DASD to Cache Transfer OP\nAPFNDTOC EQU   *-SSGDAXPF\nXPFNDTOC DS    XL4      64-67   DASD to Cache transfer operation\nAPFNCTOD EQU   *-SSGDAXPF\nXPFNCTOD DS    XL4      68-71   Cache to DASD transfer operation\nAPFRETRY EQU   *-SSGDAXPF       access DASD directory.\nXPFRETRY DS    XL4      72-75   Dasd fast write operations forced to\n*                               because of NVS storage constraiton\nAPFNDFW  EQU   *-SSGDAXPF\nXPFNDFW  DS    XL4      76-79   DASD fast write operation counts\nAPFSDFW  EQU   *-SSGDAXPF\nXPFSDFW  DS    XL4      80-83   Dasd fast write sequential write OP cnt\n         DS    XL4      84-87   reservcd\n         DS    XL1      88      device status - group 2\n         DS    XL5      89-93   reserved\nAPFSSID  EQU   *-SSGDAXPF\nXPFSSID  DS    XL2      94-95   SSID\n         DSECT\n         IEFUCBOB LIST=YES\n         PRINT NOGEN\n         CVT   DSECT=YES,LIST=YES\nPSA      DSECT\n         IHAPSA LIST=NO\nASVT     DSECT\n         IHAASVT\nASCB     DSECT\n         IHAASCB\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @LISTD\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=YOUR.SRCLIB,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DSN=YOUR.OBJLIB(@LISTD),DISP=OLD\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST,NCAL,AC=1',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=*.A.SYSLIN,DISP=(SHR,PASS)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=YOUR.LOADLIB(@LISTD),DISP=SHR\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//* ----------------------------------------------------------\n//DEL     EXEC PGM=IEFBR14\n//DD1      DD  DSN=KIMU.VOLSER.NEW,DISP=(OLD,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//REPORT   DD  DSN=KIMU.REPORT,DISP=(OLD,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//* ----------------------------------------------------------------\n//G1     EXEC  PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L)),\n//         PARM='VOL(VOLSER,FC6*)'\n//HISTIN   DD  DSN=KIMU.VOLSER.OUT,DISP=(OLD,KEEP),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//HISTOUT  DD  DSN=KIMU.VOLSER.NEW,DISP=(,CATLG),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10))\n//REPORT   DD  DSN=KIMU.REPORT,DISP=(,CATLG),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10))\n//* ----------------------------------------------------------------\n//COPY    EXEC PGM=IEBGENER,COND=((8,LT,A),(4,LT,L))\n//SYSUT1   DD DSN=KIMU.VOLSER.NEW,DISP=SHR,\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//SYSUT2   DD DSN=KIMU.VOLSER.OUT,DISP=OLD,\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//\n//\n//\n//\n//\n//\n//* ----------------------------------------------------------------\n//DEL     EXEC PGM=IEFBR14\n//DD1      DD  DSN=KIMU.TEST.NEW,DISP=(OLD,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//DD2      DD  DSN=KIMU.TEST.SORT,DISP=(OLD,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//* ----------------------------------------------------------------\n//DESTAGE  EXEC  PGM=IDCAMS\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD   *\n SETCACHE VOLUME(VOLSER) UNIT(3390) DESTAGE\n/*\n//* ----------------------------------------------------------------\n//G1     EXEC  PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L)),\n//         PARM='VOL(VOLSER),NOREPORT'\n//HISTIN   DD  DSN=KIMU.TEST.OUT,DISP=(OLD,KEEP),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//HISTOUT  DD  DSN=KIMU.TEST.NEW,DISP=(,CATLG),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10))\n//REPORT   DD  SYSOUT=*\n//* ----------------------------------------------------------------\n//LISTD1   EXEC  PGM=IDCAMS\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD   *\n LISTDATA COUNTS VOLUME(VOLSER) UNIT(3390) DEVICE\n/*\n//* ================================================================\n//TEST    EXEC PGM=IEBDG\n//OUTDD1   DD  DSN=&&TEST,DISP=(,DELETE),UNIT=SYSALLDA,\n//         VOL=SER=VOLSER,SPACE=(CYL,(10,10)),\n//         DCB=(RECFM=FB,LRECL=1000,BLKSIZE=0)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n   DSD OUTPUT=(OUTDD1)\n   FD  NAME=FLD1,LENGTH=1000,STARTLOC=001,FORMAT=AN,ACTION=RP\n   CREATE QUANTITY=1000,NAME=(FLD1)\n//* ================================================================\n//SORT    EXEC PGM=ICEMAN\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SORTIN   DD DSN=KIMU.TEST.NEW,DISP=(OLD,KEEP)\n//SORTOUT  DD DSN=KIMU.TEST.SORT,DISP=(,CATLG),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10))\n//SYSIN    DD *\n SORT FIELDS=(25,2,BI,A,9,4,BI,A,1,8,BI,A)\n/*\n//* ----------------------------------------------------------------\n//LISTD2   EXEC  PGM=IDCAMS\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD   *\n LISTDATA COUNTS VOLUME(VOLSER) UNIT(3390) DEVICE\n/*\n//* ----------------------------------------------------------------\n//G2      EXEC PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L)),\n//         PARM='VOL(VOLSER),NOHISTORY,NOINTERVAL'\n//HISTIN   DD  DSN=KIMU.TEST.SORT,DISP=(OLD,KEEP),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//REPORT   DD  SYSOUT=*\n//* ----------------------------------------------------------------\n//G3      EXEC PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L)),\n//         PARM='VOL(VOLSER),NOHISTORY,INTERVAL'\n//HISTIN   DD  DSN=KIMU.TEST.SORT,DISP=(OLD,KEEP),\n//         UNIT=SYSALLDA,VOL=SER=VOLSER\n//REPORT   DD  SYSOUT=*\n//* ----------------------------------------------------------------\n//ALTER   EXEC PGM=IDCAMS,COND=((8,LT,A),(4,LT,L))\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n DELETE KIMU.TEST.OUT PURGE\n DELETE KIMU.TEST.NEW PURGE\n SET LASTCC = 00\n ALTER  KIMU.TEST.SORT NEWNAME(KIMU.TEST.OUT)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@LOADMAP": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x04\\x1d\\x04\\x1d\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1053, "newlines": 1053, "modlines": 0, "user": "KIMU"}, "text": "//KIMUF JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         DC   C'<< Loadmodule Map >> _ KIMU _ &SYSDATE _ &SYSTIME *'\n         DC   C'< Loadmodule Configuration Report . ( MODMAP 0.0.2 ) >'\n         PRINT NOGEN\nMODMAP   CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05             BASE REG. R03\n         LA    R04,2048(R03)             2'ND BASE REG\n         LA    R04,2048(R04)\n         LA    R05,2048(R04)             2'ND BASE REG\n         LA    R05,2048(R05)\n         ST    R13,SAVEAREA+4            SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                SAVE A(NEW SAVEAREA)\n* === Start Main Routine ===\n         XC    TRN_CONT,TRN_CONT         CSECT Identification Record\n*                                         Processing Flag .\n         XC    WKTRANSL,WKTRANSL         CSECT Identification Record\n*                                         Translator Data Length .\n* --- CSECT Table Area Getmain ---\n         L     R01,D$CSTNUM              CSECT Table Number\n         STH   R01,WKH\n         LA    R01,D$CSTL                CSECT Table Length\n         MH    R01,WKH\n         ST    R01,GETM_L                Save Getmain length\n         GETMAIN RC,LV=(1)               Getmain CSECT Table Area\n         LTR   R15,R15                   If Error ?\n         BNZ   GETM_ERR                    goto Getmain Error #1\n         ST    R01,GETM_A                Store Getmain Address\n         ST    R15,WKF\n* --- Open File ---\n         OPEN  (PDSFD,,PDSF,,OUTDCB,(OUTPUT))\n         XC    BSZ_FLG,BSZ_FLG           Clear Block Size Flag\n* --- Dataset Information ---\n         RDJFCB PDSF                     Get Dataset Information\n         USING JFCBSECT,R02\n         LA    R02,JFCB\n         MVC   O$DSNAME,DSN              Copy Dataset Name\n         MVC   O$SERIAL,JFCBVOLS         Copy Volume Serial Number\n         LH    R01,PDSF+X'3E'            Copy Block Size PDSF+X'3E'\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   O$BLKSZ(5),EDWORK+11\n         DROP  R02                       Drop JFCB\n         PUT   OUTDCB,O$DSINT1\n         PUT   OUTDCB,O$DSINT2\n         PUT   OUTDCB,O$DSINFO\n         PUT   OUTDCB,BLANKL\n* --- Getmain Record Buffer Field ---\n         LH    R01,PDSF+X'3E'            Load Block Size\n         CL    R01,=F'32740'\n         BNH   @BSZSKP\n         OI    BSZ_FLG,X'80'             Flag Set\n*    --- IEBCOPY BUG FIX ---\n         LA    R01,20(R01)               If BLKSIZE > 32740\n*    --- IEBCOPY BUG FIX ---\n@BSZSKP  EQU   *\n         ST    R01,GETM_L2\n         GETMAIN RC,LV=(1)               Getmain Read Boffer\n         LTR   R15,R15                   If Error ?\n         BNZ   GETM_ER2\n         ST    R01,GETM_A2\n* --- Directory Process ---\n* R10:Member Routine Return Address\n* R12:Directory Pointer\n@D_READ  EQU   *\n         READ  DECB01,SF,PDSFD,DIR,'S'         READ DIRECTORY\n         CHECK DECB01\n         LH    R12,DIR                         LOAD READ LENGTH\n         LA    R12,DIR(R12)\n         ST    R12,D_ENDP                      SAVE DIRECTORY END ADDR\n         LA    R12,DIR+2                       MEMBER START POINT\n@D_LOP01 EQU   *\n         CL    R12,D_ENDP                      IF DIRECTORY END ADDR\n         BNL   @D_READ\n         CLI   0(R12),X'FF'                    IF MEMBER END NAME\n         BE    @BYE\n*        MVI   O$MEMBER,X'40'                  Member Area Clear\n*        MVC   O$MEMBER+1(132),O$MEMBER\n         MVC   O$MEM(8),0(R12)                 Copy Member Name\n         MVC   W_TTR(3),8(R12)                 Copy TTR\n         CALL  @OS#6HC,(W_TTR,O$MEMTTR,3)\n*\n         XR    R06,R06\n         IC    R06,11(R12)                     LOAD 'C'\n         N     R06,=X'0000001F'                USER DATA LENGTH\n         SLL   R06,1                           * 2\n         LA    R06,12(R06)\n         ST    R06,WKF\n         XC    BLDLU,BLDLU\n         MVC   BLDLN(8),0(R12)                 Copy Member Name\n         BLDL  PDSFD,BLDLLST\n*        XR    R06,R06\n*        IC    R06,BLDLK                       LOAD 'C'\n*        N     R06,=X'0000001F'                USER DATA LENGTH\n*        SLL   R06,1                           * 2\n         S     R06,=F'12'                      * 2\n         LR    R01,R06\n         BCTR  R01,0\n         STC   R01,*+5\n         CLC   BLDLU+2(0),12(R12)\n         BE    SKIP01\n         MVC   DIROUT+21(8),0(R12)\n         CALL  @OS#6HC,(WKF,DIROUT+31,4)\n         PUT   OUTDCB,DIROUT\nSKIP01   EQU   *\n         LA    R01,12(R12)\n*        LA    R06,50\n         CALL  @OS#6HC,((R01),DIRUOUT+6,(R06))\n         CALL  @OS#6HC,(BLDLU+2,BLDLOUT+6,(R06))\n         PUT   OUTDCB,BLDLOUT\n         PUT   OUTDCB,DIRUOUT\n*\n         BAL   R10,MEMBERS                     Branch Member Process\n         IC    R01,11(R12)                     LOAD 'C'\n         N     R01,=X'0000001F'                USER DATA LENGTH\n         SLL   R01,1                           * 2\n*\n         LA    R12,12(R12,R01)                 POINT MEXT MEMBER\n         B     @D_LOP01\n* --- Member Process ---\nMEMBERS  EQU   *                               R10 <- Return Address\n         XC    R_FLG,R_FLG                     Read FLag Clear\n         MVC   GETM_P,GETM_A                   Clear CSECT Pointer\n         POINT PDSF,W_TTR                      First Data Address\n@M_READ  EQU   *\n         L     R07,GETM_A2                     R07 <- DataArea P\n         TM    BSZ_FLG,X'80'\n         BO    @M_READ2\n@M_READ1 EQU   *\n         READ  DECB11,SF,PDSF,(R07),'S'        Data Area Read\n         CHECK DECB11\n         L     R01,DECB11+16\n         LH    R01,14(R01)\n         L     R09,GETM_L2\n         SR    R09,R01                         R09 <- Read Length\n         B     @M_READX\n@M_READ2 EQU   *                               Block Size = 32760\n         READ  DECB12,SF,PDSF,(R07),30000      Data Area Read\n         CHECK DECB12\n         L     R01,DECB12+16\n         LH    R01,14(R01)\n         LH    R09,DECB12+6\n         SR    R09,R01                         R09 <- Read Length\n@M_READX EQU   *\n*\n         TM    R_FLG,X'80'               If Already Control Record Read\n         BO    @M_NEXT\n* --- Check ID Column ---\n         CLI   0(R07),X'20'              CESD Record\n         BE    @M_CESD\n         CLI   0(R07),X'80'              CSECT Identification Record\n         BE    @M_CID                            goto Creation Line\n*\n@M_NEXT  EQU   *\n         B     @M_READ                   Goto Next Record\n@M_CID   EQU   *                         CSECT Identification Record\n         TM    2(R07),X'80'\n         BNO   @M_CID2\n         OI    R_FLG,X'80'               Set Last Flag .\n@M_CID2  EQU   *                         CSECT Identification Record\n         XR    R01,R01\n         IC    R01,2(R07)\n         N     R01,=X'0000000F'\n         CL    R01,=XL4'00000008'        User(System)-Supplied Data\n         CL    R01,=XL4'00000004'        Translator-Supplies Data\n         BE    @M_TRANS                    goto Creation Line\n         CL    R01,=XL4'00000002'        Linkage Editer Data\n         BE    @M_CREDT                    goto Creation Line\n         CL    R01,=XL4'00000001'        HMASPZAP\n         B     @M_NEXT                   Goto Next Record\n*\n* -----------------------\n* R07:Read Buffer Address\n* R09:Length of Read Record\n* R10:x\n* R11:DSECT Base\n* R12:x\n* --- CESD Record Process ---\n@M_CESD  EQU   *\n         L     R11,GETM_P                Load CESD Table Pointer\n         USING D$CSECT,R11\n*\n         MVC   WKCESDFL,1(R07)           Copy CESD Flag to Work Area\n*\n         LH    R08,6(R07)                Load ESD Byte\n         SRL   R08,4                     Num of ESD = ESD Byte / 16\n         LA    R07,8(R07)                Shift ESD Area\n@M_ESDLP EQU   *\n         MVC   D$CESD(16),0(R07)         Copy CESD Area\n         XC    D$TRNS,D$TRNS             Clear Translator Area\n         MVC   D$CESDFL(1),WKCESDFL      Copy CESD Flag Area\n*\n         LA    R07,16(R07)               Shift Next CESD\n         LA    R11,D$CSTL(R11)\n         BCT   R08,@M_ESDLP\n         ST    R11,GETM_P\n         B     @M_NEXT                   Goto Next Record\n         DROP  R11\n* -----------------------\n* R07:Read Buffer Address\n* R09:Length of Read Record\n* R10:x\n* R11:DSECT Base\n* R12:x\n* --- CSECT Identification Data ( Translator-Supplied )\nTRN_CONT DS    XL1\n*                 B'.... ....'\n*                   =           : Translator Data Progress Flag\n*                    =          : Translator Descroption Progress Flag\n*                     =         : Translator Data Reserved .\n         DS    0D\n@M_TRANS EQU   *\n         LA    R09,0(R07,R09)\n         LA    R07,3(R07)                Shift Trans Field .\n*\n         TM    TRN_CONT,X'C0'            Translator Description Area\n         BO    @M_TRAN39\n         TM    TRN_CONT,X'80'            Translator Data Area\n         BO    @M_TRAN22\n@M_TRAN1 EQU   *\n         LA    R08,TRANSTBL\n         XR    R06,R06\n*\n@M_TRAN2 EQU   *\n         CLR   R07,R09                   Record End ?\n         BNL   @M_TRANX                    goto Next Record\n         OI    TRN_CONT,X'80'            Process Flag On\n         LA    R01,2(R07)\n         CLR   R01,R09\n         BNH   @M_TRAN24\n*\n         MVC   WKTRF(1),0(R07)\n         OI    TRN_CONT,X'20'            Process Reserved Flag .\n         B     @M_TRANX                  goto Next Record\n@M_TRAN22 EQU  *\n         TM    TRN_CONT,X'20'\n         BO    @M_TRAN23\n         MVC   WKTRF(2),0(R07)\n         LA    R07,2(R07)\n         B     @M_TRAN25\n@M_TRAN23 EQU  *\n         MVC   WKTRF+1(1),0(R07)\n         LA    R07,1(R07)\n         NI    TRN_CONT,X'DF'            Clear Process Reserved Flag\n         B     @M_TRAN25\n@M_TRAN24 EQU  *\n         MVC   WKTRF(2),0(R07)\n         LA    R07,2(R07)\n@M_TRAN25 EQU  *\n         LH    R01,WKTRF                 Load CSECT Number\n         N     R01,=X'00007FFF'\n         LA    R02,D$CSTL\n         STH   R02,W_X02\n         BCTR  R01,0\n         MH    R01,W_X02\n         L     R02,GETM_A\n         LA    R02,0(R01,R02)\n         ST    R02,0(R08)                Store CSECT Table Address\n*\n         LA    R06,1(R06)\n         LA    R08,4(R08)\n         TM    WKTRF,X'80'\n         BO    @M_TRAN3\n         B     @M_TRAN2\n@M_TRAN3 EQU   *\n         OI    TRN_CONT,X'40'            End of ESD ID Field .\n*\n         CLI   0(R07),X'01'\n         BE    @M_TRAN31\n         LA    R01,16(R07)               End of Translator Description\n         B     @M_TRAN32\n@M_TRAN31 EQU  *\n         LA    R01,31(R07)               End of Translator Description\n@M_TRAN32 EQU  *\n         CLR   R01,R09                   If Not End of Record\n         BNH   @M_TRAN3909                 goto Current Field Process\n*\n         LR    R01,R09                   If Translator Data Incomplete\n         SR    R01,R07\n         XC    WKTRANS,WKTRANS\n         STC   R01,*+5\n         MVC   WKTRANS(0),0(R07)         Copy First Translator Area\n         STH   R01,WKTRANSL\n         B     @M_TRANX\n*\n@M_TRAN39 EQU  *\n         LH    R01,WKTRANSL              If Old Translator Data is\n         LTR   R01,R01                     Complete\n         BZ    @M_TRAN3909                 goto @M_TRAN3909\n*\n*                                        If Old Translator Data is\n*                                          Incomplete\n         LA    R02,WKTRANS(R01)          Shift Latter Half\n         CLI   WKTRANS,X'01'\n         BE    @M_TRAN301\n         LA    R01,16                    End of Translator Description\n         B     @M_TRAN302\n@M_TRAN301 EQU  *\n         LA    R01,31                    End of Translator Description\n@M_TRAN302 EQU  *\n         SH    R01,WKTRANSL              Remainder Length\n*\n         STC   R01,*+5\n         MVC   0(0,R02),0(R07)           Copy First Translator Area\n         LA    R07,0(R07,R01)\n         B     @M_TRAN4\n*\n@M_TRAN3909 EQU  *                       All Translator Data is\n         CLI   0(R07),X'01'                Complete\n         BE    @M_TRAN391\n         MVC   WKTRANS(16),0(R07)        Copy Translator Description\n         LA    R07,16(R07)\n         B     @M_TRAN4\n@M_TRAN391 EQU  *\n         MVC   WKTRANS(31),0(R07)        Copy Translator Description\n         LA    R07,31(R07)\n         B     @M_TRAN4\n@M_TRAN4 EQU   *\n         LA    R08,TRANSTBL\n         USING D$CSECT,R01\n@M_TRAN5 EQU   *\n         L     R01,0(R08)\n         MVC   D$TRNS(16),WKTRANS\n         LA    R08,4(R08)\n         BCT   R06,@M_TRAN5\n         XC    WKTRANSL,WKTRANSL         Clear Work Area Length\n         XC    TRN_CONT,TRN_CONT         Clear Continue Flag\n         B     @M_TRAN1\n         DROP  R01\n@M_TRANX EQU   *\n         B     @M_NEXT                   Goto Next Record\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n* -----------------------------------------------------------------\n*\n@M_NEXTL EQU   *\n         B     @M_READ                         Goto Next Line\n* --- Create Date ---\n@M_CREDT EQU   *\n         LA    R08,LKEDTBLL\n         SRDA  R08,32\n         LA    R01,L'LKEDTBL\n         DR    R08,R01                   R09 <- Table Num\n         LA    R01,LKEDTBL\n@M_CRPS0 EQU   *\n         CLC   03(10,R07),0(R01)\n         BE    @M_CRPS1\n         LA    R01,L'LKEDTBL(R01)\n         BCT   R09,@M_CRPS0\n         MVI   O$MEMPRO,C' '\n         MVC   O$MEMPRO+1(L'O$MEMPRO-1),O$MEMPRO\n         MVC   O$MEMPRO(10),03(R07)             Copy LKED Product\n         B     @M_CRPSX\n@M_CRPS1 EQU   *\n         MVC   O$MEMPRO(30),10(R01)             Copy LKED Product\n         B     @M_CRPSX\n@M_CRPSX EQU   *\n         MVC   W_LKEDDT(03),15(R07)\n         LA    R01,W_LKEDDT\n         LA    R02,O$MEMDT\n         BAL   R14,@DATECNV\n         B     @M_NEXTL\n* --- CSECT Create Date ---\n*\n@M_EOF   EQU   *\n         PUT   OUTDCB,BLANKL\n         PUT   OUTDCB,O$MEMBT1\n         PUT   OUTDCB,O$MEMBT2\n         PUT   OUTDCB,O$MEMBER\n         PUT   OUTDCB,BLANKL\n         PUT   OUTDCB,BLANKL\n         PUT   OUTDCB,O$CSECTT\n         L     R07,GETM_A\n         USING D$CSECT,R07\n@M_ENDLP EQU   *\n         CL    R07,GETM_P\n         BNL   @M_ENDSK\n         MVI   O$CSECT,C' '\n         MVC   O$CSECT+1(132),O$CSECT\n*\n         MVC   O$SYMBOL(8),D$CESDSY\n*\n         LA    R08,PRODTBLL\n         SRDA  R08,32\n         LA    R01,L'PRODTBL\n         DR    R08,R01                   R09 <- Table Num\n         LA    R01,PRODTBL\n@M_CDS00 EQU   *\n         CLC   D$TRNSPG,0(R01)\n         BE    @M_CDS01\n         LA    R01,L'PRODTBL(R01)\n         BCT   R09,@M_CDS00\n         MVI   O$PRODCT,C' '\n         MVC   O$PRODCT+1(L'O$PRODCT-1),O$PRODCT\n         MVC   O$PRODCT(10),D$TRNSPG            Copy LKED Product\n         B     @M_CDS0X\n@M_CDS01 EQU   *\n         MVC   O$PRODCT(30),10(R01)             Copy LKED Product\n         B     @M_CDS0X\n@M_CDS0X EQU   *\n*\n         CLI   D$CESDTY,X'07'\n         BE    @M_E_NUL\n         TM    D$CESDTY,X'0A'\n         BO    @M_E_WX\n         TM    D$CESDTY,X'06'\n         BO    @M_E_PR\n         TM    D$CESDTY,X'05'\n         BO    @M_E_CM\n         TM    D$CESDTY,X'04'\n         BO    @M_E_PC\n         TM    D$CESDTY,X'03'\n         BO    @M_E_LR\n         TM    D$CESDTY,X'02'\n         BO    @M_E_ER\n@M_E_SD  EQU   *\n         MVC   O$TYPE(2),=CL2'SD'\n         BAL   R11,@M_ADR\n         CLI   D$CESDFL,X'80'\n         BE    @M_E_SD1\n         BAL   R11,@M_SG\n         B     @M_E_SD2\n@M_E_SD1 EQU   *\n         BAL   R11,@M_ARR\n         B     @M_E_SD2\n@M_E_SD2 EQU   *\n         BAL   R11,@M_LEN\n         B     @M_E_X\n@M_E_NUL EQU   *\n         MVC   O$TYPE(2),=CL2'NL'\n         B     @M_ENDW\n@M_E_WX  EQU   *\n         MVC   O$TYPE(2),=CL2'WX'\n         B     @M_ENDW\n@M_E_PR  EQU   *\n         MVC   O$TYPE(2),=CL2'PR'\n         BAL   R11,@M_ADR\n         CLI   D$CESDFL,X'80'\n         BE    @M_E_PR1\n         BAL   R11,@M_SG\n         B     @M_E_PR2\n@M_E_PR1 EQU   *\n         TM    D$CESDSG,X'07'\n         BNO   @M_E_PR11\n         MVC   O$ALIGN,=CL7'DOUBLEW'\n         B     @M_E_PR2\n@M_E_PR11 EQU   *\n         TM    D$CESDSG,X'03'\n         BNO   @M_E_PR12\n         MVC   O$ALIGN,=CL7'FULLWD '\n         B     @M_E_PR2\n@M_E_PR12 EQU   *\n         TM    D$CESDSG,X'01'\n         BNO   @M_E_PR13\n         MVC   O$ALIGN,=CL7'HALFWD '\n         B     @M_E_PR2\n@M_E_PR13 EQU   *\n         MVC   O$ALIGN,=CL7'BYTE   '\n         B     @M_E_PR2\n@M_E_PR2 EQU   *\n         BAL   R11,@M_LEN\n         B     @M_E_X\n@M_E_CM  EQU   *\n         MVC   O$TYPE(2),=CL2'CM'\n         BAL   R11,@M_ADR\n         CLI   D$CESDFL,X'80'\n         BE    @M_E_CM1\n         BAL   R11,@M_SG\n         B     @M_E_CM2\n@M_E_CM1 EQU   *\n         BAL   R11,@M_ARR\n         B     @M_E_CM2\n@M_E_CM2 EQU   *\n         BAL   R11,@M_LEN\n         B     @M_E_X\n@M_E_PC  EQU   *\n         MVC   O$TYPE(2),=CL2'PC'\n         CLI   D$CESDFL,X'80'\n         BE    @M_E_PC1\n         BAL   R11,@M_SG\n         B     @M_E_PC2\n@M_E_PC1 EQU   *\n         BAL   R11,@M_ARR\n         B     @M_E_PC2\n@M_E_PC2 EQU   *\n         BAL   R11,@M_LEN\n         B     @M_E_X\n@M_E_LR  EQU   *\n         MVC   O$TYPE(2),=CL2'LR'\n         CLI   D$CESDFL,X'80'\n         BE    @M_E_LR1\n         BAL   R11,@M_SG\n         B     @M_E_LR2\n@M_E_LR1 EQU   *\n         BAL   R11,@M_ARR\n         B     @M_E_LR2\n@M_E_LR2 EQU   *\n         BAL   R11,@M_ID\n         B     @M_E_X\n@M_E_ER  EQU   *\n         MVC   O$TYPE(2),=CL2'ER'\n         B     @M_ENDW\n* --- Address ---\n@M_ADR   EQU   *\n         MVC   W_CADR(3),D$CESDAD\n         CALL  @OS#6HC,(W_CADR,O$CADR,3)\n         BR    R11\n* --- Segments Number ---\n@M_SG    EQU   *\n         MVC   W_SG(1),D$CESDSG\n         CALL  @OS#6HC,(W_SG,O$SGNM,1)\n         BR    R11\n* --- AMODE / RMODE / RSECT data ---\n@M_ARR   EQU   *\n         TM    D$CESDSG,X'04'\n         BO    @M_AMODE\n         MVC   O$AMODE(3),=CL3' 24'\n         B     @M_AMODX\n@M_AMODE EQU   *\n         MVC   O$AMODE(3),=CL3'ANY'\n         B     @M_AMODX\n@M_AMODX EQU   *\n         MVI   O$ARPAR,C'/'\n         TM    D$CESDSG,X'03'\n         BO    @M_RMOD1\n         TM    D$CESDSG,X'02'\n         BO    @M_RMOD2\n         MVC   O$RMODE(3),=CL3' 24'\n         B     @M_RMODX\n@M_RMOD1 EQU   *\n         MVC   O$RMODE(3),=CL3'ANY'\n         B     @M_RMODX\n@M_RMOD2 EQU   *\n         MVC   O$RMODE(3),=CL3' 31'\n         B     @M_RMODX\n@M_RMODX EQU   *\n         BR    R11\n*\n* --- Length ---\n@M_LEN   EQU   *\n         MVC   W_CLEN(3),D$CESDLN\n         CALL  @OS#6HC,(W_CLEN,O$CLEN,3)\n         BR    R11\n* --- ID     ---\n@M_ID    EQU   *\n         MVC   W_CLEN(2),D$CESDLN\n         CALL  @OS#6HC,(W_CLEN,O$CLEN,2)\n         BR    R11\n* --- Linkage Editer Data ---\n@M_E_X   EQU   *\n         MVC   W_CSTDT(3),D$TRNSDT\n         CLC   W_CSTDT(3),=XL3'000000'\n         BE    @M_DTX\n         LA    R01,W_CSTDT\n         LA    R02,O$CSTDT\n         BAL   R14,@DATECNV\n         MVC   W_VER(2),D$TRNSVE\n         CALL  @OS#6HC,(W_VER,O$VVMM,2)\n@M_DTX   EQU   *\n@M_ENDW  EQU   *\n         PUT   OUTDCB,O$CSECT\n         LA    R07,D$CSTL(R07)\n         B     @M_ENDLP\n@M_ENDSK EQU   *\n         XC    WKTRANSL,WKTRANSL         Clear Work Area Length\n         XC    TRN_CONT,TRN_CONT         Clear Continue Flag\n         DROP  R07\n         BR    R10\n*\n@BYE     EQU   *\n         CLOSE (PDSFD,,PDSF,,OUTDCB)\n         FREEMAIN RC,LV=GETM_L2,A=GETM_A2\n         FREEMAIN RC,LV=GETM_L,A=GETM_A\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\nGETM_ERR EQU   *                                 GETMAIN ERROR\n         CLOSE (PDSFD,,PDSF,,OUTDCB)\n         WTO   '* ERR * CSECT TABLE AREA GETMAIN FAIL .'\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n*\nGETM_ER2 EQU   *                                 GETMAIN ERROR\n         CLOSE (PDSFD,,PDSF,,OUTDCB)\n         FREEMAIN RC,LV=GETM_L,A=GETM_A\n         WTO   '* ERR * BLKSIZE BUFFER GETMAIN FAIL .'\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n*\nIOERR_S  EQU   *\n         SYNADAF ACSMETH=BPAM\n         LA    R01,91(R01)\n*        B     @IOERR\n         MVC   ERRMSG04+23(15),0(R01)\n         LA    R07,W_TTR\n         LA    R08,ERRMSG04+16\n         LA    R09,3\n*        BAL   R14,@CO_HEX                     CALL CONVERT HEX-CHAR\n         PUT   OUTDCB,ERRMSG04\n         B     @IOERR\n@IOERR   EQU   *\n         SYNADRLS\n         CLOSE (PDSFD,,PDSF,,OUTDCB)\n         FREEMAIN RC,LV=GETM_L2,A=GETM_A2\n         FREEMAIN RC,LV=GETM_L,A=GETM_A\n         WTO   '* ERR * I/O ERROR HAPPEND .'\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n*\n@DATECNV EQU   *\n         STM   R00,R15,@DATEREG\n         LR    R06,R01                   Binary Date X'yydddF'\n         LR    R07,R02                   Character Date 'YY.MM.DD'\n         XR    R01,R01\n         XC    WK_PKA,WK_PKA\n         MVC   WK_PKA+5(3),0(R06)\n*        NI    WK_PKA+7,X'FC'\n         CVB   R01,WK_PKA\n         LR    R06,R01\n         LR    R10,R01\n         SRDA  R10,32\n         D     R10,=F'1000'\n         LR    R06,R10                   Day\n*              R11\n         CL    R11,=F'50'                If Year is Less Than 50\n         BL    @DC_SKIP1\n         LA    R01,1900(R11)\n         B     @DC_SKIP2\n@DC_SKIP1 EQU  *\n         LA    R01,2000(R11)\n         B     @DC_SKIP2\n@DC_SKIP2 EQU  *\n         STH   R01,WK_YEAR\n         LR    R10,R01\n         SRDA  R10,32\n         D     R10,=F'4'\n         LTR   R11,R11\n         BNZ   @DC_SKIP3\n         LR    R10,R01\n         SRDA  R10,32\n         D     R10,=F'100'\n         LTR   R11,R11\n         BZ    @DC_SKIP3\n         LR    R10,R01\n         SRDA  R10,32\n         D     R10,=F'400'\n         LTR   R11,R11\n         BNZ   @DC_SKIP3\n         LA    R01,WK_MON1\n         B     @DC_SKIP4\n@DC_SKIP3 EQU  *\n         LA    R01,WK_MON2\n         B     @DC_SKIP4\n@DC_SKIP4 EQU  *\n         LA    R02,12\n@DC_SKIP5 EQU  *\n         XR    R15,R15\n         IC    R15,0(R01)\n         CLR   R06,R15\n         BNH   @DC_SKIP6\n         SR    R06,R15\n         LA    R01,1(R01)\n         BCT   R02,@DC_SKIP5\n@DC_SKIP6 EQU  *\n         LA    R01,13\n         SR    R01,R02\n         STH   R01,WK_MON\n         STH   R06,WK_DAY\n*\n         LH    R01,WK_YEAR\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASKZ\n         ED    EDWORK,PK_AREA\n         MVC   0(4,R07),EDWORK+12\n         MVI   4(R07),C'/'\n*\n         LH    R01,WK_MON\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASKZ\n         ED    EDWORK,PK_AREA\n         MVC   5(2,R07),EDWORK+14\n*\n         MVI   7(R07),C'/'\n         LH    R01,WK_DAY\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASKZ\n         ED    EDWORK,PK_AREA\n         MVC   8(2,R07),EDWORK+14\n         LM    R00,R15,@DATEREG\n         BR    R14\n*\n         DS    0D\n@DATEREG DS    18F\nWK_PKA   DS    XL8\nWK_YEAR  DS    H\nWK_MON   DS    H\nWK_DAY   DS    H\n*                   1       2       3       4       5       6       7\n*                   8       9      10      11      12\nWK_MON1  DC    FL1'31',FL1'28',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31',*\n               FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\n*                   1       2       3       4       5       6       7\n*                   8       9      10      11      12\nWK_MON2  DC    FL1'31',FL1'29',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31',*\n               FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\n*\nPDSFD    DCB   DSORG=PS,MACRF=(RP),DDNAME=INDD,NCP=1,BLKSIZE=256,      *\n               SYNAD=IOERR_S,EODAD=@BYE,RECFM=F\nPDSF     DCB   DSORG=PO,MACRF=(R),DDNAME=INDD,NCP=1,EXLST=EXLST,       *\n               SYNAD=IOERR_S,EODAD=@M_EOF,RECFM=U\nEXLST    DC    X'87',AL3(JFCB)\nOUTDCB   DCB   DSORG=PS,MACRF=(PM),DDNAME=OUTDD,RECFM=FA,LRECL=133,    *\n               BLKSIZE=133\nDSCBFMT1 CAMLST SEARCH,JFCB,VOLSER,DSCB\n         DS    0F\nJFCB     DS    0CL176                            JOB FILE CONTROL BLOCK\nDSN      DS    CL44                              DATASET NAME\nDSCB     DC    CL140' '                          DATASET CONTROL BLOCK\nVOLSER   DS    CL6                               VOLUME SELIAL\n*\n         DS    0F\nSAVEAREA DS    18F                               SAVEAREA\nREGS     DS    18F                               WORK SAVEAREA\nWKCESDFL DS    XL1\n         DS    0F\nWKF      DS    F\nWKH      DS    H\n         DS    0F\nWKTRANS  DS    CL31\nWKTRANSL DS    H\nWKTRF    DS    XL2\nWKDATE   DS    XL3\n@DEBUGL  DC    CL133' '\nDIROUT   DC    CL133' DIRECTORY UNMATCH : @@@@@@@@'\nBLDLOUT  DC    CL133' BLDL:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'\nDIRUOUT  DC    CL133' DIR :@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'\nBLANKL   DC    CL133' '\nBLDLLST  DS    0F\nBLDLFF   DC    H'1'\nBLDLLL   DC    H'85'    8 + 3 + 1 + 73\nBLDLN    DS    CL8\nBLDLTTR  DS    CL3\nBLDLK    DS    CL1\nBLDLU    DS    CL73\n         DS    0D\n*\n         DS    0F\nERRMSG04 DC    CL133'------------------------------'\n*                   0....+....1....+....2....+....3....+....4....+...\n**************************************************************\n         DS    0F\nR_FLG    DS    BL1                            TTR Save Area\n         DS    0F\nBSZ_FLG  DS    BL1                            TTR Save Area\n         DS    0F\nPATT     DC    XL16'40202020202020202020202020202020'\nEDAREA   DS    XL16\n         DS    0F\nPK_AREA  DS    PL8\n         DS    0F\nUPK_AREA DS    XL8\n         DS    0F\nW_TTR    DS    XL4                            TTR Save Area\n         DS    0F\nW_LKEDDT DS    XL3\n         DS    0F\nW_X02    DS    XL2\n         DS    0F\nW_CADR   DS    XL3\n         DS    0F\nW_CLEN   DS    XL3\n         DS    0F\nW_CSTDT  DC    XL3'98123F'\n         DS    0F\nW_SG     DS    XL1\n         DS    0F\nW_VER    DS    XL2\n         DS    0F\nDIR      DS    CL256                             Directory Save Area\n         DS    0F\nD_ENDP   DS    F                                 Directory End Point\nGETM_A   DS    F                                 CSECT Table Adr\nGETM_L   DS    F                                 CSECT Table Len\nGETM_P   DS    F                                 CSECT Table Pos\nGETM_A2  DS    F                                 Block Read Adr\nGETM_L2  DS    F                                 Block Read Len\n         DS    0D\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDMASKZ  DC    XL16'40212020202020202020202020202020'\nEDWORK   DS    XL16\nPRODTBL  DS    0XL40\n*                   0....+....1      0....+....1....+....2....+....3\n         DC    CL10'360SAS037 ',CL30'S/360 OS ASSEMBLER (F)        '\n         DC    CL10'5734AS100 ',CL30'OS ASSEMBLER H                '\n         DC    CL10'5741SC103 ',CL30'OS/VS ASSEMBLER (XF)          '\n         DC    CL10'566896201 ',CL30'ASSEMBLER H V2                '\n         DC    CL10'569623400 ',CL30'HIGH-LEVEL ASSEMBLER          '\n         DC    CL10'40CB1     ',CL30'OS/VS COBOL R2M2      (VSR2)  '\n         DC    CL10'5740CB103 ',CL30'OS/VS COBOL R2M3 R2M4 (VSR1)  '\n         DC    CL10'566895801 ',CL30'VS COBOL II                   '\n         DC    CL10'566895807 ',CL30'COBOL/370 , COBOL for MVS , VM'\n         DC    CL10'5668-806  ',CL30'VS FORTRAN V2 (COMP/LIB/DEBUG)'\n         DC    CL10'5796-PKR  ',CL30'Ext. Exponent Range for FORT  '\n         DC    CL10'5734-PL1  ',CL30'OS PL/I OPTIMIZING COMPILER V1'\n         DC    CL10'5668-910  ',CL30'OS PL/I V2 (COMP/LIB)         '\n         DC    CL10'5688040   ',CL30'C/370 COMPILER V1             '\n         DC    CL10'5688187   ',CL30'C/370 COMPILER V2             '\n         DC    CL10'5688216   ',CL30'SAA AD/Cycle C/370            '\n         DC    CL10'5645001   ',CL30'C/C++ OS/390 R2               '\n         DC    CL10'5647A01   ',CL30'C/C++ OS/390 R4               '\n         DC    CL10'5688-899  ',CL30'APL2 VERSION 1                '\n         DC    CL10'5688-228  ',CL30'APL2 VERSION 2                '\n         DC    CL10'566876701 ',CL30'VS PASCAL                     '\n         DC    CL10'569501301 ',CL30'REXX/370                      '\n         DC    CL10'5744AN101 ',CL30'ACF/NCP                       '\n         DC    CL10'566893801 ',CL30'ACF/NCP                       '\n         DC    CL10'COBTRAN   ',CL30'IGYCSCAN(IGYSMETA)            '\n         DC    CL10'516896201 ',CL30'ASSEMBLER H V2 (bizarre)      '\n         DC    CL10'ASMG21FEB ',CL30'ASSEMBLER G (U of Waterloo)   '\n         DC    CL10'CA-PLNK 0 ',CL30'CA PL/S CLONE ?               '\n         DC    CL10'GREXX-00  ',CL30'LEGENT REXX                   '\n         DC    CL10'LATTICE_C ',CL30'LATTICE C                     '\n         DC    CL10'RXTCOMP   ',CL30'REXXTOOLS                     '\n         DC    CL10'SAS/C     ',CL30'SAS/C                         '\n         DC    CL10'SAS/C/    ',CL30'SAS/C                         '\n         DC    CL10'SDS080888 ',CL30'SAS/C                         '\n         DC    CL10'BLD121988 ',CL30'SAS/C                         '\n         DC    CL10'TMCOMPIL  ',CL30'XPEDITER                      '\n         DC    CL10'52ASM31686',CL30'Russian Assembler             '\n*        DC    CL10'          ',CL30'                              '\nPRODTBLX EQU   *\nPRODTBLL EQU   PRODTBLX-PRODTBL\n*\nLKEDTBL  DS    0XL40\n*                   0....+....1      0....+....1....+....2....+....3\n         DC    CL10'360SED521 ',CL30'S/360 OS LINKAGE EDITOR (F)   '\n         DC    CL10'5752SC104 ',CL30'OS/VS LINKAGE EDITOR          '\n         DC    CL10'566528408 ',CL30'DFP/XA LINKAGE EDITOR         '\n         DC    CL10'566529508 ',CL30'DFP/370 LINKAGE EDITOR        '\n         DC    CL10'5695DF108 ',CL30'DFSMS/MVS BINDER              '\n*        DC    CL10'          ',CL30'                              '\nLKEDTBLX EQU   *\nLKEDTBLL EQU   *-LKEDTBL\n         DS    0D\n* --- Dataset Information ---\nO$DSINT1 DS    0CL133\n         DC    CL02' '\nT$DSNAME DC    CL44'DATASET NAME'\n         DC    CL01' '\nT$SERIAL DC    CL06'SERIAL'\n         DC    CL01' '\nT$BLKSZ  DC    CL05'BLKSZ'\n         DC    CL01' '\n         DC    CL133' '\nO$DSINT2 DS    0CL133\n         DC    CL02' '\n         DC    CL44'-------------------------------------------'\n         DC    CL01' '\n         DC    CL06'------'\n         DC    CL01' '\n         DC    CL05'-----'\n         DC    CL01' '\n         DC    CL133' '\n* --- Dataset Information ---\nO$DSINFO DS    0CL133\n         DC    CL02' '\nO$DSNAME DC    CL44' '\n         DC    CL01' '\nO$SERIAL DC    CL06' '\n         DC    CL01' '\nO$BLKSZ  DC    CL05' '\n         DC    CL01' '\n         DC    CL133' '\n* -------------------\nO$MEMBER DS    0CL133\n         DC    CL02' '\nO$MEM    DS    CL08\n         DC    CL01' '\nO$MEMTTR DS    CL06'T T R '\n         DC    CL01' '\nO$MEMPRO DS    CL30' '\n         DC    CL01' '\nO$MEMDT  DS    CL10'YYYY.MM.DD'\n         DC    CL133' '\n         DS    0D\nO$MEMBT1 DS    0CL133\n         DC    CL02' '\n         DC    CL08' MEMBER'\n         DC    CL01' '\n         DC    CL06'T T R '\n         DC    CL01' '\n         DC    CL30'COMPILED PRODUCT'\n         DC    CL01' '\n         DC    CL10' CREATED  '\n         DC    CL133' '\n         DS    0D\nO$MEMBT2 DS    0CL133\n         DC    CL02' '\n         DC    CL08'--------'\n         DC    CL01' '\n         DC    CL06'------'\n         DC    CL01' '\n         DC    CL30'------------------------------'\n         DC    CL01' '\n         DC    CL10'----------'\n         DC    CL133' '\n         DS    0D\n* -------------------\nO$CSECTT DS    0CL133\n         DC    CL03' '\n         DC    CL08'SYMBOL'\n         DC    CL01'T'\n         DC    CL02'YP'\n         DC    CL01' '\n         DC    CL30'PRODUCT'\n         DC    CL01' '\n         DC    CL04'VVMM'\n         DC    CL01' '\n         DC    CL06'ADDR.'\n         DC    CL01' '\n         DC    CL06'LENG.'\n         DC    CL01' '\n         DC    CL07'A/R,SG'\n         DC    CL01' '\n         DC    CL10'COMP DATE'\n         DC    CL133' '\n*\nO$CSECT  DS    0CL133\n         DC    CL03' '\nO$SYMBOL DS    CL08\n         DC    CL01' '\nO$TYPE   DS    CL02\n         DC    CL01' '\nO$PRODCT DS    CL30\n         DC    CL01' '\nO$VVMM   DS    CL04\n         DC    CL01' '\nO$CADR   DS    CL06\n         DC    CL01' '\nO$CLEN   DS    CL06\n         DC    CL01' '\nO$SGNM   DS    0CL02\nO$ALIGN  DS    0CL07\nO$AMODE  DS    CL03\nO$ARPAR  DC    CL01' '\nO$RMODE  DS    CL03\n         DC    CL01' '\nO$CSTDT  DS    CL10'YYYY.MM.DD'\n         DC    CL133' '\nD$CSTNUM DC    F'32767'\n         DS    0F\n         LTORG\nTRANSTBL DS    1024F                      Trans Table\nD$CSECT  DSECT\nD$CESDFL DS    XL1                       CESD Flag Byte\n*                                           X'00' : Segment Number\n*                                           X'80' : AMODE/RMODE/RSECT\nD$CESD   DS    0CL16                     CESD Area\nD$CESDSY DS    CL8                       CESD Symbol\nD$CESDTY DS    XL1                       CESD Type ?0 : SD\n*                                                  ?2 : ER\n*                                                  ?3 : LR\n*                                                  ?4 : PC\n*                                                  ?5 : CM\n*                                                  ?6 : PR\n*                                                  07 : Null\n*                                                  ?A : WX\nD$CESDAD DS    XL3                       CESD Address\nD$CESDSG DS    XL1                       CESD Segment Number\n*                                             AMODE/RMODE/RSECT\n*                                             ???? xraa\n*                                             .... =... : 1 RESCT Read\n*                                             .... .=.. : 1 RMODE Any\n*                                                         0       24\n*                                             .... ..== : 00 AMODE 24\n*                                                         01       24\n*                                                         10       31\n*                                                         11       Any\n*\nD$CESDLN DS    XL3                       CESD Length/ID\n*                                           Length : SD,PC,CM,PR\n*                                           ID     : LR\n*                                           Zero   : WX,Null,ER\nD$TRNS   DS    0XL16                     Translator Indicator\nD$TRNSID DS    XL1                       Translator Indicator\nD$TRNSPG DS    CL10                      Program Name\nD$TRNSVE DS    CL2                       Version and Modification Level\nD$TRNSDT DS    0CL3                      Date\nD$TRNSDY DS    CL1                       Date\nD$TRNSDD DS    CL2                       Date\n*$TRNSPR DS    CL15                      if Indicator is X'01'\n*\nD$CSTL   EQU   *-D$CSECT\n         PRINT GEN\nJFCBSECT DSECT\n         IEFJFCBN LIST=YES\nDSCBSECT DSECT\n         IECSDSL1 (1)\n         DCBD  DSORG=PO\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   MODMAP\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIB   DD  DSN=YOUR.OBJLIB,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//*YSLMOD  DD  DISP=SHR,UNIT=SYSDA,\n//*        DSN=KIMU.TEST.LOADLIB(@8011)\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//SYSIN    DD  DUMMY\n//G       EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L)),\n//         REGION=8M\n//STEPCAT  DD  DSN=USER.CATALOG,DISP=SHR\n//*NDD     DD  DSN=SYS1.LPALIB,DISP=SHR\n//INDD     DD  DSN=SYS1.LINKLIB,DISP=SHR\n//OUTDD    DD  SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@LOC#301": {"ttr": 2312, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x03\\xf8\\x03\\xf8\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1016, "newlines": 1016, "modlines": 0, "user": "KIMU"}, "text": "//jobname  JOB CLASS=x,MSGCLASS=x,NOTIFY=user-id               <- CHECK\n//* -----------------------------------------------------------------\n//* @LOC Install ...                                           <- CHECK\n//*\n//* Step1:\n//*   File Transfer to MVS .\n//* Step2:\n//*  Enter below line.\n//*  => X ALL;F '<- CHECK' ALL (Enter)\n//* Step3:                                                     <- CHECK\n//*  Update Non-Exclusive Line .                               <- CHECK\n//*  ex.  => C serial VOL001 ALL NX (Enter)                    <- CHECK\n//* Step4:                                                     <- CHECK\n//*  Submit This JCL.                                          <- CHECK\n//* Step5:                                                     <- CHECK\n//*  Comcat Created Datasets in Your Logon Procedure .         <- CHECK\n//*   module.library : STEPLIB                                 <- CHECK\n//* Step6:                                                     <- CHECK\n//*  Enter Flow Line on ISPF Command Line .                    <- CHECK\n//*  => TSO @LOC dataset_prefix (Enter)                        <- CHECK\n//* -----------------------------------------------------------------\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//STEPCAT  DD  DSN=TSOCAT,DISP=SHR\n//SYSIN    DD  *\n         START\n* -----------------------------------------------------------------\n         DC   C'<< Super Locate ... Search Dataset and Information >>'\n         DC   C'  Version '\n@VERSION DC   CL6'v3r0m1'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n* -----------------------------------------------------------------\n* v3r0m0 : Original Version\n* v3r0m1 : For MIGRAT or ARCIVE Bug Fix     97.09.24\n* -----------------------------------------------------------------\n* --- Start of Process --------------------------------------------\n@LOC     CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05               Base Reg. R03,R04,R05\n         LA    R04,2048(R03)               2'ND Base Reg\n         LA    R04,2048(R04)\n         LA    R05,2048(R04)               3'ND Base Reg\n         LA    R05,2048(R05)\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* set CPPL Base Reg.\n         LR    R06,R01                     Load CPPL Address\n         ST    R06,CPPL_PTR                save CPPL Address\n         USING CPPL,R06                    CPPL Base Reg. R06\n*\n         BAL   R14,@PPL                    parse command routine\n*\n         BAL   R14,@SUPER                  super locate routine\n*\n         BAL   R14,@PRINT                  super locate routine\n*\n@BYE     EQU   *\n         L     R01,@LOSWA#\n         LH    R00,0(,R01)\n         N     R00,=X'0000FFFF'\n         FREEMAIN R,LV=(R00),A=(R01)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n* --- Sub Routine -------------------------------------------------\n* --- PPL ( parse service routine ) -------------------------------\n@PPL     EQU   *\n         STM   R00,R15,SAVEPPL     save reg.\n         GETMAIN RU,LV=L_PPL       getmain PPL comm area\n         STM   R00,R01,PPL_LEN     save getmain length and address\n         L     R12,PPL_ADR\n         USING PPL,R12             PPL Base Reg. R12\n         MVC   PPLUPT,CPPLUPT      UPT address from CPPL\n         MVC   PPLECT,CPPLECT      ECT address from CPPL\n         MVC   PPLCBUF,CPPLCBUF    command buffer from CPPL\n         LA    R01,ANS             load answer area address and\n         ST    R01,PPLANS           store it in the PPL\n         XC    #ECB,#ECB           clear ECB ( event control block )\n         LA    R01,#ECB            load ECB address and\n         ST    R01,PPLECB           store it in the PPL\n         L     R01,PCLADCON        load PCL address and\n         ST    R01,PPLPCL           store it in the PPL\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)\n         DROP  R12\n         LTR   R15,R15             test IKJPARS\n         BNZ   @PPL_ERR             if error goto @PPL_ERR\n         MVI   @DSN,X'40'          clear @DSN\n         MVC   @DSN+1(L'@DSN-1),@DSN\n         MVI   @CAT,C' '\n         MVC   @CAT+1(L'@CAT-1),@CAT\n         L     R12,ANS             load PPL answer area\n         USING PRDSECT,R12\n         L     R01,PCLDSN          R01 <- dsname address\n         LH    R02,PCLDSN+4        R02 <- dsname length\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   @DSN(0),0(R01)    copy dsname\n         ST    R02,@DSNL\n*\n         TM    UCATN+6,X'80'\n         BNO   @PPL#X\n         L     R01,UCATN           R01 <- dsname address\n         LH    R02,UCATN+4         R02 <- dsname length\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   @CAT(0),0(R01)    copy dsname\n         ST    R02,@CATL\n         LA    R01,@CAT\n         BAL   R14,@PUTL#S\n@PPL#X   EQU   *\n* --- Partition Create --------------------------------------------\n         MVC   MSG#P001+3(24),=CL24' Dataset Beginning With '\n         STC   R02,*+5\n         MVC   MSG#P001+27(0),@DSN\n         LA    R02,MSG#P001+28(R02)\n         MVI   0(R02),C' '\n         DROP  R12\n*\n         L     R01,PPL_ADR         free main PPL comm area\n         FREEMAIN RU,LV=L_PPL,A=(R01)\n         LM    R00,R15,SAVEPPL     load reg.\n         BR    R14                 return\n*\n@PPL_ERR EQU   *\n         L     R01,PPL_ADR         free main PPL comm area\n         FREEMAIN RU,LV=L_PPL,A=(R01)\n         LM    R00,R15,SAVEPPL     load reg.\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n* --- PUTLINE servise routine ( single line ) ---------------------\n@PUTL#S  EQU   *\n         STM   R00,R15,SAVEIOPL    save reg.\n         STC   R02,*+5\n         MVC   PUTL#S_(0),0(R01)           copy message area\n         LA    R02,4(R02)                  length + 4\n         STH   R02,PUTL#SL                  store length\n         XC    #ECB,#ECB                   clear ECB area\n         XC    #IOPL(16),#IOPL             clear IOPL area\n         L     R10,CPPLUPT\n         L     R11,CPPLECT\n         PUTLINE PARM=PUTBLOK,UPT=(10),ECT=(11),ECB=#ECB,              *\n               OUTPUT=(PUTL#S,TERM,SINGLE,DATA),MF=(E,#IOPL)\n         LM    R00,R15,SAVEIOPL            load reg.\n         BR    R14                         return\n* --- PUTLINE servise routine ( multi line ) ----------------------\n@PUTL#M  EQU   *\n         STM   R00,R15,SAVEIOPL    save reg.\n         XC    #IOPL(16),#IOPL             clear IOPL area\n         LA    R12,#IOPL                   Load IOPL Address\n         USING IOPL,R12                    IOPL Base Reg. R07\n         L     R01,CPPLUPT\n         ST    R01,IOPLUPT\n         L     R01,CPPLECT\n         ST    R01,IOPLECT\n         XC    #ECB,#ECB                   clear ECB area\n         LA    R01,#ECB\n         ST    R01,IOPLECB\n         PUTLINE PARM=PUTBLOK,OUTPUT=((2),MULTLIN,DATA),               *\n               MF=(E,#IOPL)\n         DROP  R12\n         LM    R00,R15,SAVEIOPL            load reg.\n         BR    R14                         return\n* --- LOCATE ( super locate service ) -----------------------------\n@SUPER   EQU   *\n         STM   R00,R15,SAVELOCS            load reg.\n         XC    @LOSWA#,@LOSWA#           work area clear\n         XC    @LOCATES,@LOCATES         super locate area clear\n         MVI   @LOSOPT1,X'05'            option 1 ( x'05' )\n         MVI   @LOSOPT3,X'11'            option 3 ( x'11' )\n         LA    R01,@LOSROOT              entry point address\n         ST    R01,@LOSENT#\n         MVC   @LOSROTN(44),@DSN\n         L     R01,@DSNL\n         LA    R01,1(R01)\n         STC   R01,@LOSROTL\n         CLI   @CAT,C' '\n         BE    @S_CAT\n         LA    R01,@LOSCAT               entry point address\n         ST    R01,@LOSCAT#\n*        MVC   @LOSCATN(44),@CAT\n*        L     R01,@CATL\n*        LA    R01,1(R01)\n*        STC   R01,@LOSCATL\n@S_CAT   EQU   *\n         L     R07,=F'32767'             R07 <- getmain size\n         LR    R00,R07\n         GETMAIN R,LV=(R00)              getmain\n         LTR   R15,R15                   test\n         BNZ   @S_GMERR                  if error goto getmain err\n         ST    R01,@LOSWA#\n         STH   R07,0(R01)\n         LA    R01,@LOCATES\n*\n         SVC   26\n*\n         C     R15,=X'00000028'\n         BE    @S_28\n         C     R15,=X'0000002C'\n         BE    @S_2C\n         LTR   R15,R15\n         BNZ   @S_SVERR\n         B     @S_RET\n@S_28    EQU   *\n         L     R07,@LOSWA#\n         LH    R07,2(,R07)\n         N     R07,=X'0000FFFF'\n         B     @S_RETRY\n@S_2C    EQU   *\n         L     R07,=X'0000FFFF'\n@S_RETRY EQU   *\n         L     R08,@LOSWA#\n         LH    R00,0(,R08)\n         N     R00,=X'0000FFFF'\n         LR    R01,R08\n         FREEMAIN R,LV=(R00),A=(R01)\n         LR    R00,R07\n         GETMAIN R,LV=(R00)\n         LTR   R15,R15\n         BNZ   @S_GMERR\n         ST    R01,@LOSWA#\n         STH   R07,0(,R01)\n         LA    R01,@LOCATES\n*\n         SVC   26\n*\n         LTR   R15,R15\n         BNZ   @S_SVERR\n@S_RET   EQU   *\n         LM    R00,R15,SAVELOCS            load reg.\n         BR    R14\n* --- print out ---------------------------------------------------\n@PRINT   EQU   *\n         STM   R00,R15,SAVEPRTS            save reg.\n*\n         L     R01,@LOSWA#\n         LH    R08,2(R01)                  used length get\n         N     R08,=X'0000FFFF'\n         SL    R08,=F'4'                   length - 4\n         SRDA  R08,32\n         D     R08,=F'45'                  length / 45\n         LR    R07,R09                     R07 <- number of dataset\n         LA    R08,4(R01)                  R08 <- dsname start point\n********\n         L     R01,@LOSWA#\n         LH    R09,2(R01)                  used length get\n         N     R09,=X'0000FFFF'\n         LA    R09,0(R08,R09)\n********\n         MVI   MSG#O102,C' '\n         MVC   MSG#O102+1(78),MSG#O102\n         MVI   MSG#O103,C' '\n         MVC   MSG#O103+1(78),MSG#O103\n         LA    R11,MSG#O102\n         USING DSLIST1,R11\n         LA    R12,MSG#O103\n         USING DSLIST2,R12\n@P_LOP01 EQU   *\n         MVC   MSG#O101,MSG#P001           partition copy\n         MVC   D#TYPE(1),0(R08)            dataset type ( from cat )\n         MVC   D#DSN(44),1(R08)            dataset name\n*\n         BAL   R14,@DSINFO                 dataset information get\n*\n         LA    R02,P#DSLST\n         BAL   R14,@PUTL#M\n*\n         LA    R08,45(R08)\n         BCT   R07,@P_LOP01\n         LM    R00,R15,SAVEPRTS            load reg.\n         BR    R14\n* --- dataset information get -------------------------------------\n@DSINFO  EQU   *\n         STM   R00,R15,SAVEINFO            save reg.\n         MVC   V#DSN,D#DSN\n         LOCATE L#CAMLST\n         LTR   R15,R15\n         BNZ   @D_LOCER\n         MVC   D#VOL,L#VOL\n* --- get UCB -----------------------------------------------------\n         XC    U#COPY,U#COPY\n         XC    U#WORK,U#WORK\n         UCBSCAN COPY,WORKAREA=U#WORK,UCBAREA=U#COPY,VOLSER=L#VOL\n         LTR   R15,R15\n         BNZ   @D_UCBER\n         USING UCBOB,R10\n         LA    R10,U#COPY\n         MVC   WK#DEVT(4),UCBTYP\n         CALL  @OS#6HC,(WK#DEVT,MSG#O102+65,4)\n         CLI   UCBTBYT4,X'0E'\n         BE    @DUCB#S8\n         CLI   UCBTBYT4,X'0F'\n         BE    @DUCB#S9\n         B     @D_UCBER\n@DUCB#S8 EQU   *\n         MVC   D#UNITS(8),=CL8'3380'\n         B     @DUCB#X\n@DUCB#S9 EQU   *\n         MVC   D#UNITS(8),=CL8'3390'\n@DUCB#X  EQU   *\n* --- get DSCB 4 --------------------------------------------------\n         XC    V#DSCB4,V#DSCB4\n         MVI   V#DSN4,X'04'\n         MVC   V#DSN4+1(43),V#DSN4\n         OBTAIN DSCBFMT4\n         LTR   R15,R15\n         BNZ   @D_DS4ER\n         USING DSCBSEC4,R10\n         LA    R10,V#DSCB4\n         MVC   WK#CYLS(4),DS4DEVSZ       copy trk no. and trk size .\n         DROP  R10\n* --- get dscb1 ---------------------------------------------------\n         XC    V#DSCB,V#DSCB\n         OBTAIN DSCBFMT1\n         LTR   R15,R15\n         BNZ   @D_DS1ER\n         USING DSCBSEC1,R10\n         LA    R10,V#JFCB\n* --- <<< dsorg >>> -----------------------------------------------\n         LA    R01,D#ORG                 dsorg table address\n         LA    R08,D#ORGL                dsorg table length\n         SRDA  R08,32\n         LA    R02,L'D#ORG\n         DR    R08,R02                   D#ORGL / L'D#ORG\n         LR    R02,R09                   R02 <- number of table\n@DORG#L1 EQU   *\n         CLC   DS1DSORG(2),0(R01)\n         BE    @DORG#LX                  if equal goto @DORG#LX\n         LA    R01,L'D#ORG(R01)\n         BCT   R02,@DORG#L1              next table !\n         MVC   D#DSORG(3),=CL3'???'      not found ..\n         B     @DORGX\n@DORG#LX EQU   *\n         MVC   D#DSORG(3),2(R01)\n@DORGX   EQU   *\n* --- <<< recfm >>> -----------------------------------------------\n         LA    R01,D#RFM                 dsorg table address\n         LA    R08,D#RFML                dsorg table length\n         SRDA  R08,32\n         LA    R02,L'D#RFM\n         DR    R08,R02                   D#RFML / L'D#RFM\n         LR    R02,R09                   R02 <- number of table\n@DRFM#L1 EQU   *\n         CLC   DS1RECFM(1),0(R01)\n         BE    @DRFM#LX                  if equal goto @DRFM#LX\n         LA    R01,L'D#RFM(R01)\n         BCT   R02,@DRFM#L1              next table\n         MVC   D#RECFM(3),=CL3'???'      not found ..\n         B     @DRFMX\n@DRFM#LX EQU   *\n         MVC   D#RECFM(3),1(R01)\n@DRFMX   EQU   *\n* --- <<< lrecl >>> -----------------------------------------------\n         XR    R01,R01                     clear R01\n         LH    R01,DS1LRECL                R01 <- lrecl\n         LTR   R01,R01                     if lrecl is zero\n         BZ    @DLRL#S1                      goto @DLRLS1\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   D#LRECL(5),C#WK1+1\n         B     @DLRLX\n@DLRL#S1 EQU   *\n         MVC   D#LRECL(5),=CL5'    0'      if zero\n@DLRLX   EQU   *\n* --- <<< blksz >>> -----------------------------------------------\n         XR    R01,R01                     clear R01\n         LH    R01,DS1BLKL                 R01 <- blksz\n         LTR   R01,R01                     if lrecl is zero\n         BZ    @DBLK#S1                      goto @DLRLS1\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   D#BLKSZ(5),C#WK1+1\n         B     @DBLKX\n@DBLK#S1 EQU   *\n         MVC   D#BLKSZ(5),=CL5'    0'      if zero\n@DBLKX   EQU   *\n* --- <<< allocation size >>> -------------------------------------\n         MVC   WK#EXTS(30),DS1EXT1         extent 1,2,3 copy\n         XR    R01,R01\n         IC    R01,DS1NOEPV                R01 <- extent\n* Modified Start .. Kimu 03.25.98\n         LTR   R01,R01                     if No-Extents !!\n         BZ    @DALC#0\n* Modified End .... Kimu 03.25.98\n         CL    R01,=F'3'                   if extent < 3 then\n         BNH   @DALC#S1                     goto @DALC#S1\n* --- DSCB 3 ------------------------------------------------------\n         MVC   V#CCHHR(5),DS1PTRDS\n         XC    V#DSCB3,V#DSCB3\n         OBTAIN DSCBFMT3\n         LTR   R15,R15\n         BNZ   @D_DS3ER\n         USING DSCBSEC3,R07\n         LA    R07,V#DSCB3\n         MVC   WK#EXTS+30(40),DS3EXTNT     extent 4 5 6 7\n         MVC   WK#EXTS+70(90),DS3ADEXT     extent 8 - 15\n         DROP  R07\n@DALC#S1 EQU   *\n         XR    R07,R07\n         IC    R07,DS1NOEPV                R07 <- extent\n         LA    R01,WK#EXTS                 R01 <- work address\n         XR    R08,R08                     R08 <- sum reg.\n@DALC#L1 EQU   *\n         CLC   DS1DSORG(2),=XL2'0008'\n         BE    @DALC#X\n         XR    R02,R02                     clear R02\n         LH    R02,6(R01)                  R02 <- lower CC\n         SH    R02,2(R01)                  R02 <- upper CC - lower CC\n         LA    R08,1(R02,R08)              R08 <- + num cyls\n         LA    R01,10(R01)\n         BCT   R07,@DALC#L1\n         CVD   R08,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   WK#ALC#C(5),C#WK1+1\n*\n         XR    R07,R07\n         IC    R07,DS1NOEPV                R07 <- extent\n         LA    R01,WK#EXTS                 R01 <- work address\n         XR    R08,R08                     R08 <- sum reg.\n@DALC#L2 EQU   *\n         XR    R02,R02                     clear R02\n         LH    R02,6(R01)                  R02 <- lower CC\n         SH    R02,2(R01)                  R02 <- upper CC - lower CC\n         MH    R02,WK#TRKS                 R02 <- CC * 15\n         AH    R02,8(R01)\n         SH    R02,4(R01)\n         LA    R08,1(R02,R08)              R08 <- + num cyls\n         LA    R01,10(R01)\n         BCT   R07,@DALC#L2\n         ST    R08,WK#ALC#B                store allocation track\n         CVD   R08,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   WK#ALC#T(5),C#WK1+1\n*\n         CLI   DS1SCAL1,DS1CYL\n         BE    @DALC#C\n         CLI   DS1SCAL1,DS1TRK\n         BE    @DALC#T\n         MVC   D#ALLOC(5),=CL5'  ???'\n         B     @DALC#X\n@DALC#C  EQU   *\n         MVC   D#ALLOC(5),WK#ALC#C\n         B     @DALC#X\n@DALC#T  EQU   *\n         MVC   D#ALLOC(5),WK#ALC#T\n* Modified Start .. Kimu 03.25.98\n         B     @DALC#X\n@DALC#0  EQU   *\n         MVC   D#ALLOC(5),=CL5'    0'\n* Modified End .... Kimu 03.25.98\n@DALC#X  EQU   *\n* --- <<< used % >>> ----------------------------------------------\n         CLC   DS1DSORG(2),=XL2'0008'\n         BE    @DUSE#X\n         LH    R08,DS1LSTAR\n         L     R01,DS1LSTAR\n         N     R01,=X'0000FF00'\n         LTR   R01,R01\n         BZ    @DUSE#S1\n         LA    R08,1(R08)\n@DUSE#S1 EQU   *\n         MH    R08,=H'100'\n         SRDA  R08,32\n         L     R01,WK#ALC#B\n         LTR   R01,R01                   if Zero ?\n         BZ    @DUSE#S2\n         DR    R08,R01                   D#RFML / L'D#RFM\n*        LTR   R08,R08\n         LTR   R09,R09\n         BZ    @DUSE#S2\n         CVD   R09,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   D#USED(5),C#WK1+1\n         B     @DUSE#X\n@DUSE#S2 EQU   *\n         MVC   D#USED(5),=CL5'    0'\n@DUSE#X  EQU   *\n* --- <<< primary space >>> ---------------------------------------\n         LA    R01,DS1EXT1                 R01 <- extent address\n         LTR   R01,R01\n         BZ    @DPRI#0\n         LH    R02,6(R01)                  R02 <- lower CC\n         SH    R02,2(R01)                  R02 <- upper CC - lower CC\n         LA    R01,1(R02)                  R01 <- prim cylinder\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   WK#PRI#C(5),C#WK1+1\n*\n         MH    R02,WK#TRKS                 R02 <- prim cyl * 15\n         LA    R01,DS1EXT1                 R01 <- extent address\n         AH    R02,8(R01)                  R02 <- prim cyl + lower HH\n         SH    R02,4(R01)                  R02 <- prim cyl - lower HH\n         LA    R01,1(R02)                  R01 <- prim cylinder\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   WK#PRI#T(5),C#WK1+1\n*\n         CLI   DS1SCAL1,DS1CYL\n         BE    @DPRI#C\n         CLI   DS1SCAL1,DS1TRK\n         BE    @DPRI#T\n         MVC   D#PRIM(5),=CL5'  ???'\n         B     @DPRI#X\n@DPRI#C  EQU   *\n         MVC   D#PRIM(5),WK#PRI#C\n         B     @DPRI#X\n@DPRI#T  EQU   *\n         MVC   D#PRIM(5),WK#PRI#T\n         B     @DPRI#X\n@DPRI#0  EQU   *\n         MVC   D#PRIM(5),=CL5'    0'\n@DPRI#X  EQU   *\n* --- <<< second space >>> ----------------------------------------\n         L     R01,DS1SCALO                R01 <- secondary space\n         N     R01,=X'00FFFFFF'\n         LTR   R01,R01\n         BZ    @DSEC#S1\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   D#SEC(5),C#WK1+1\n         B     @DSECX\n@DSEC#S1 EQU   *\n         MVC   D#SEC(5),=CL5'    0'      if zero\n@DSECX   EQU   *\n* --- <<< trk/cyl >>> ---------------------------------------------\n         LA    R01,D#PAC                 dsorg table address\n         LA    R08,D#PACL                dsorg table length\n         SRDA  R08,32\n         LA    R02,L'D#PAC\n         DR    R08,R02                   D#RFML / L'D#RFM\n         LR    R02,R09                   R02 <- number of table\n@DPAC#L1 EQU   *\n         CLC   DS1SCAL1(1),0(R01)\n         BE    @DPAC#LX                  if equal goto @DRFM#LX\n         LA    R01,L'D#PAC(R01)\n         BCT   R02,@DPAC#L1              next table\n         MVC   D#UNIT(3),=CL3'???'       not found ..\n         B     @DPACX\n@DPAC#LX EQU   *\n         MVC   D#UNIT(3),1(R01)\n@DPACX   EQU   *\n* --- <<< extent >>> ----------------------------------------------\n         XR    R01,R01                     clear R01\n         IC    R01,DS1NOEPV                R01 <- blksz\n         CVD   R01,D#WK1\n         MVC   C#WK1(8),=XL8'4020202020202120' VERT\n         LA    R01,C#WK1+7\n         EDMK  C#WK1(8),D#WK1+5\n         MVC   D#EXT(2),C#WK1+4\n         CLC   D#EXT(2),=CL2'  '\n         BNE   @DEXT#X\n         MVC   D#EXT(2),=CL2' 0'\n@DEXT#X  EQU   *\n* --- <<< create >>> ----------------------------------------------\n         L     R01,DS1CREDT\n         SRL   R01,24\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#CREATE(2),C#WK1+6\n         MVI   D#CREATE+2,C'/'\n         L     R01,DS1CREDT\n         SRL   R01,8\n         N     R01,=X'0000FFFF'\n         LTR   R01,R01\n         BZ    @DCRES1\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#CREATE+3(3),C#WK1+5\n         B     @DCREX\n@DCRES1  EQU   *\n         MVC   D#CREATE(6),=C'**/***'\n@DCREX   EQU   *\n* --- <<< reffer >>> ----------------------------------------------\n         L     R01,DS1REFD\n         SRL   R01,24\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#REFFER(2),C#WK1+6\n         MVI   D#REFFER+2,C'/'\n         L     R01,DS1REFD\n         SRL   R01,8\n         N     R01,=X'0000FFFF'\n         LTR   R01,R01\n         BZ    @DREFS1\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#REFFER+3(3),C#WK1+5\n         B     @DREFX\n@DREFS1  EQU   *\n         MVC   D#REFFER(6),=C'*none*'\n@DREFX   EQU   *\n* --- <<< expire >>> ----------------------------------------------\n         L     R01,DS1EXPDT\n         SRL   R01,24\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#EXPIRE(2),C#WK1+6\n         MVI   D#EXPIRE+2,C'/'\n         L     R01,DS1EXPDT\n         SRL   R01,8\n         N     R01,=X'0000FFFF'\n         LTR   R01,R01\n         BZ    @DEXPS1\n         CVD   R01,P#WK1\n         UNPK  C#WK1(8),P#WK1\n         OI    C#WK1+7,X'F0'\n         MVC   D#EXPIRE+3(3),C#WK1+5\n         B     @DEXPX\n@DEXPS1  EQU   *\n         MVC   D#EXPIRE(6),=C'*none*'\n@DEXPX   EQU   *\n@D_EXIT  EQU   *\n         LM    R00,R15,SAVEINFO            load reg.\n         BR    R14\n@D_UCBER EQU   *\n         MVC   D#UNITS(8),=CL8'*none*'\n@D_LOCER EQU   *\n*        ST    R15,B#WK1\n*        CALL  @OS#6HC,(B#WK1+3,WK#VOLS+3,1)\n*        MVC   D#VOL(6),WK#VOLS\n         CLI   L#VOL,C'M'   MIGRAT\n         BE    @D_LOCE1\n         CLI   L#VOL,C'A'   ARCHIVE\n         BNE   @D_LOCE2\n@D_LOCE1 EQU   *\n         MVC   D#VOL(6),L#VOL\n         B     @D_LOCEX\n@D_LOCE2 EQU   *\n         MVC   D#VOL(6),=CL6'??????'\n         B     @D_LOCEX\n@D_LOCEX EQU   *\n@D_DS1ER EQU   *\n         MVC   D#DSORG(3),=CL3'???'\n         MVC   D#RECFM(3),=CL3'???'\n         MVC   D#LRECL(5),=CL5'?????'\n         MVC   D#BLKSZ(5),=CL5'?????'\n         MVC   D#PRIM(5),=CL5'?????'\n         MVC   D#SEC(5),=CL5'?????'\n         MVC   D#UNIT(3),=CL3'???'\n         MVC   D#EXT(2),=CL2'??'\n         MVC   D#CREATE(6),=CL6'??/???'\n         MVC   D#REFFER(6),=CL6'??/???'\n         MVC   D#EXPIRE(6),=CL6'??/???'\n@D_DS4ER EQU   *\n@D_DS3ER EQU   *\n         MVC   D#ALLOC(5),=CL5'?????'\n         MVC   D#USED(5),=CL5'?????'\n         B     @D_EXIT\n* --- Sub Routine ( error routine ) -------------------------------\n* --- Super Locate Getmain Error ----------------------------------\n@S_GMERR EQU   *\n         ST    R15,B#WK1\n         CALL  @OS#6HC,(B#WK1,MSG#E001+35,4)\n         LA    R01,MSG#E001\n         LA    R02,79\n         BAL   R14,@PUTL#S\n         B     @TERM\n* --- Super Locate SVC 26 Error -----------------------------------\n@S_SVERR EQU   *\n         ST    R15,B#WK1\n         CALL  @OS#6HC,(B#WK1,MSG#E002+34,4)\n         LA    R01,MSG#E002\n         LA    R02,79\n         BAL   R14,@PUTL#S\n*\n         L     R01,@LOSWA#\n         LH    R00,0(,R01)\n         N     R00,=X'0000FFFF'\n         FREEMAIN R,LV=(R00),A=(R01)\n         B     @TERM\n*\n@TERM    EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n* --- Define Storage ----------------------------------------------\n* --- Reg. Save Area ----------------------------------------------\n         DS    0F\nSAVEAREA DS    18F\nSAVEPPL  DS    18F\nSAVEIOPL DS    18F\nSAVELOCS DS    18F\nSAVEPRTS DS    18F\nSAVEINFO DS    18F\n* --- UCB ---------------------------------------------------------\nU#COPY   DS    XL48\nU#WORK   DS    XL100\n* --- locate ------------------------------------------------------\nL#CAMLST CAMLST NAME,V#DSN,,L#AREA\n* --- obtain ( get dscb(1) ) --------------------------------------\nDSCBFMT1 CAMLST SEARCH,V#DSN,L#VOL,V#DSCB\n* --- obtain ( get dscb(3) ) --------------------------------------\nDSCBFMT3 CAMLST SEEK,V#CCHHR,L#VOL,V#DSCB3\n* --- obtain ( get dscb(4) ) --------------------------------------\nDSCBFMT4 CAMLST SEARCH,V#DSN4,L#VOL,V#DSCB4\n* --- VTOC --------------------------------------------------------\n         DS    0D\nV#JFCB   DS    0CL176\nV#DSN    DS    CL44\nV#DSCB   DS    CL140\nV#JFCB3  DS    0CL176\nV#DSN3   DS    CL44\nV#DSCB3  DS    CL140\nV#JFCB4  DS    0CL176\nV#DSN4   DS    CL44\nV#DSCB4  DS    CL140\nV#CCHHR  DS    CL5\n* --- LOCATE area -------------------------------------------------\nL#AREA   DS    0D\n         DS    XL3\nL#TTR    DS    FL3\nL#VOL    DS    CL6\n         DS    256C\n* --- dataset name ------------------------------------------------\n@DSN     DS    CL44\n@DSNL    DS    F\n@CAT     DS    CL44\n@CATL    DS    F\n* --- IKJPARS ( tso parse service routine ) -----------------------\nPCLADCON DC    A(PCLDEFS)\nPCLAREA  DS    0F\n         PRINT GEN\nPCLDEFS  IKJPARM DSECT=PRDSECT\nPCLDSN   IKJIDENT ANY,PROMPT='DATA SET NAME',                          *\n               FIRST=ALPHA,OTHER=ANY,MAXLNTH=44,                       *\n               HELP=('ENTER DATASET SUFFIX')\nPCLCAT   IKJKEYWD\n         IKJNAME  'CAT',SUBFLD=UCATNAME\nUCATNAME IKJSUBF\nUCATN    IKJPOSIT DSNAME,USID,PROMPT='USER CATALOG NAME',              *\n               HELP=('ENTER USER CATALOG NAME')\n         PRINT NOGEN\n         IKJENDP\n* --- CPPL pointer save area --------------------------------------\nCPPL_PTR DS    F\n* --- PPL Getmain Area --------------------------------------------\nPPL_LEN  DS    F                  PPL length\nPPL_ADR  DS    F                  PPL address\n* --- PPL answer area ---------------------------------------------\nANS      DS    F\n* --- ECB ---------------------------------------------------------\n#ECB     DS    F\n* --- IOPL --------------------------------------------------------\n#IOPL    DS    4F\n* --- PUTLINE ( mapping macro ) -----------------------------------\nPUTBLOK  PUTLINE MF=L\n* --- PUTLINE ( single line put ) ---------------------------------\nPUTL#S   DS    0D\nPUTL#SL  DS    H\n         DC    H'0'\nPUTL#S_  DS    CL80\n* --- LOCATE ( catalog search parameter list ) --------------------\n         PRINT   GEN\n@LOC@@@@ CAMLST CAT,V#DSN,,L#AREA\n         PRINT NOGEN\n*\n@LOCSSTA EQU   *\n@LOCATES DS   CL34\n         ORG   @LOCATES\n@LOSOPT1 DS    XL1'05'                     option 1\n@LOSOPT2 DS    XL1'00'                     option 2\n@LOSOPT3 DS    XL1'11'                     option 3\n@LOSOPT4 DS    XL1'00'                     option 4\n@LOSENT# DS    AL4(@LOSROOT)               entry address\n@LOSCAT# DS    AL4                         catalog address\n@LOSWA#  DS    AL4                         work area\n@LOSDSOR DS    CL2                         dataset organization\n@LOSOPTS DS    CL1\n@NM00001 DS    CL1\n@LOSTYPE DS    CL1\n@LOSNOFL DS    CL1\n@LOSDDNM DS    CL4\n@LOSJSCB DS    CL4\n@LOSFIEL DS    CL4\n         ORG   @LOCATES+34\n@LOSROOT DS    CL45\n         ORG   @LOSROOT\n@LOSROTL DS    FL1'12'                     dataset prefix length\n@LOSROTN DS    CL44'DSMI.FSUPP17'          dataset prefix\n@LOSCAT  DS    CL44\n         ORG   @LOSCAT\n@LOSCATL DC    FL1'6'                      dataset prefix length\n@LOSCATN DC    CL44'TSOCAT'                dataset prefix\n         ORG   @LOSCAT+45\n@LOSEND  EQU   *\n@LLOC    EQU   *-@LOCSSTA\n* --- dump work area ----------------------------------------------\nB#WK1    DS    F                        dump work area\nB#WK2    DS    F                        dump work area\nD#WK1    DS    D                        dump work area\nD#WK2    DS    D                        dump work area\nC#WK1    DS    CL12                     dump work area\nC#WK2    DS    CL12                     dump work area\nP#WK1    DS    PL8                      dump work area\nP#WK2    DS    PL8                      dump work area\nWK#PRI#C DS    CL5                      work primary space ( cyl )\nWK#PRI#T DS    CL5                      work primary space ( trk )\nWK#ALC#C DS    CL5                      work allocation space ( cyl )\nWK#ALC#T DS    CL5                      work allocation space ( trk )\nWK#ALC#B DS    F                        work allocation space ( bin )\nWK#CYLS  DS    XL2                      quantity of cylinder per volume\nWK#TRKS  DS    XL2                      quantity of tracks per cylinder\nWK#EXTS  DS    16XL10                   extent data copy area\nWK#DEVT  DS    XL4                      device type work area\nWK#VOLS  DC    CL6'??@@??'              device type work area\n* --- dataset organization ----------------------------------------\nD#ORG    DS    0XL6\n         DC    XL2'8000',CL3'IS ',XL1'00' INDEXED SEQ\n         DC    XL2'4000',CL3'PS ',XL1'00' PHYSICAL SEQ\n         DC    XL2'2000',CL3'DA ',XL1'00' DIRECT ORG\n         DC    XL2'1000',CL3'CX ',XL1'00' BTAM OR QTAM LINE GROUP\n         DC    XL2'0800',CL3'CQ ',XL1'00' QTAM DIRECT ACCESS MES\n         DC    XL2'0400',CL3'MQ ',XL1'00' QTAM PROBLEM PROG MSG QUEUE\n         DC    XL2'0200',CL3'PO ',XL1'00' PARTITIONED ORGANIZATION\n         DC    XL2'0100',CL3'U  ',XL1'00' UNMOVABLE LOCATION\n         DC    XL2'0080',CL3'GS ',XL1'00' GRAPHICS ORGANIZATION\n         DC    XL2'0040',CL3'TX ',XL1'00' TCAM LINE GROUP\n         DC    XL2'0020',CL3'TQ ',XL1'00' TCAM MESSAGE QUEUE\n         DC    XL2'0010',CL3'???',XL1'00' RESERVED\n         DC    XL2'0008',CL3'AM ',XL1'01' ACCESS METHOD CONTROL BLOCK\n         DC    XL2'0004',CL3'TR ',XL1'00' TCAM 3705\n         DC    XL2'0002',CL3'???',XL1'00' RESERVED\n         DC    XL2'0001',CL3'???',XL1'00' RESERVED\nD#ORGT   EQU   *\nD#ORGL   EQU   *-D#ORG\n* --- record format -----------------------------------------------\nD#RFM    DS    0XL5\n         DC    BL1'10000000',CL3'F  ',XL1'00' fixed\n         DC    BL1'01000000',CL3'V  ',XL1'00' variable\n         DC    BL1'11000000',CL3'U  ',XL1'00' undefined\n         DC    BL1'10010000',CL3'FB ',XL1'00' fixed block\n         DC    BL1'01010000',CL3'VB ',XL1'00' variable block\n         DC    BL1'10001000',CL3'FS ',XL1'00' fixed span\n         DC    BL1'01001000',CL3'VS ',XL1'00' variable span\n         DC    BL1'10011000',CL3'FBS',XL1'00' fixed block span\n         DC    BL1'01011000',CL3'VBS',XL1'00' variable block span\n         DC    BL1'10000100',CL3'FA ',XL1'00' fixed ansi\n         DC    BL1'01000100',CL3'VA ',XL1'00' variable ansi\n         DC    BL1'10010100',CL3'FBA',XL1'00' fixed block ansi\n         DC    BL1'01010100',CL3'VBA',XL1'00' variable block ansi\n         DC    BL1'10000010',CL3'FM ',XL1'00' fixed machine\n         DC    BL1'01000010',CL3'VM ',XL1'00' variable machine\n         DC    BL1'10010010',CL3'FBM',XL1'00' fixed block machine\n         DC    BL1'01010010',CL3'VBM',XL1'00' variable block machine\nD#RFMT   EQU   *\nD#RFML   EQU   *-D#RFM\n* --- trk/cyl -----------------------------------------------------\nD#PAC    DS    0XL5\n         DC    XL1'C0',CL3'CYL',XL1'00' track\n         DC    XL1'80',CL3'TRK',XL1'00' cylinder\n         DC    XL1'50',CL3'BLK',XL1'00' block\n         DC    XL1'40',CL3'BLK',XL1'00' block\n         DC    XL1'41',CL3'BLK',XL1'00' block\n         DC    XL1'20',CL3'MSG',XL1'00'\n         DC    XL1'08',CL3'CNT',XL1'00'\n         DC    XL1'04',CL3'MXG',XL1'00'\n         DC    XL1'02',CL3'ALX',XL1'00'\n         DC    XL1'01',CL3'ALX',XL1'00'\n         DC    XL1'00',CL3'ABS',XL1'00' abs\nD#PACT   EQU   *\nD#PACL   EQU   *-D#PAC\n* --- PUTLINE ( multi line put ) ----------------------------------\nP#DSLST  DC    A(P#DSLST2)\n         DC    H'83'\n         DC    H'0'\nMSG#O101 DS    CL79\nP#DSLST2 DC    A(P#DSLST3)\n         DC    H'83'\n         DC    H'0'\nMSG#O102 DS    CL79\nP#DSLST3 DC    A(0)\n         DC    H'83'\n         DC    H'0'\nMSG#O103 DS    CL79\n* --- messgae -----------------------------------------------------\n* --- Header 1 ----------------------------------------------------\n*SG#H001 DC    CL79'# Dataset name'\n* --- Partition ---------------------------------------------------\nMSG#P001 DC    CL79'#--------------------------------------------------*\n               --------------------------'\n* --- Error messgae -----------------------------------------------\nMSG#E001 DC    CL79'> Getmain Error Happend . ( Reg.15:@@@@@@@@ )'\nMSG#E002 DC    CL79'> SVC 26 Error Happend . ( Reg.15:@@@@@@@@ )'\n* --- message -----------------------------------------------------\nMSG#O001 DC    CL79'> '\n* --- test message ------------------------------------------------\nMSG#T001 DC    CL80'DSNAME:'\n         LTORG\n* --- DSLIST output dsect -----------------------------------------\nDSLIST1  DSECT\nMSG#O901 DS    0CL79\n         DC    CL2'>'\nD#TYPE   DS    CL1\n         DC    CL1' '\nD#DSN    DS    CL44\n         DC    CL1' '\nD#VOL    DS    CL6\n         DC    CL1' '\nD#UNITS  DS    CL8\nDSLIST2  DSECT\nMSG#O902 DS    0CL79\n         DC    CL2'>'\nD#DSORG  DS    CL3\n         DC    CL1' '\nD#RECFM  DS    CL3\n         DC    CL1' '\nD#LRECL  DS    CL5\n         DC    CL1' '\nD#BLKSZ  DS    CL5\n         DC    CL1' '\nD#ALLOC  DS    CL5\n         DC    CL1' '\nD#USED   DS    CL5\n         DC    CL1' '\nD#PRIM   DS    CL5\n         DC    CL1' '\nD#SEC    DS    CL5\n         DC    CL1' '\nD#UNIT   DS    CL3\n         DC    CL1' '\nD#EXT    DS    CL2\n         DC    CL1' '\nD#CREATE DS    CL6\n         DC    CL1' '\nD#REFFER DS    CL6\n         DC    CL1' '\nD#EXPIRE DS    CL6\n* --- CPPL ( command processor parameter list ) -------------------\n         IKJCPPL\nL_CPPL   EQU   *-CPPL\n* --- PPL ( parse parameter list ) --------------------------------\n         IKJPPL\nL_PPL    EQU   *-PPL\n* --- IKJIOPL ( input / output parameter list ) -------------------\n         IKJIOPL\nL_IOPL   EQU   *-IOPL\n* --- CVT ( communication vector table ) --------------------------\n         CVT   DSECT=YES,LIST=YES\n* --- DSCB ( dataset control block ) type 1 -----------------------\nDSCBSEC1 DSECT\n         IECSDSL1 (1)\n* --- DSCB ( dataset control block ) type 3 -----------------------\nDSCBSEC3 DSECT\n         IECSDSL1 (3)\n* --- DSCB ( dataset control block ) type 4 -----------------------\nDSCBSEC4 DSECT\n         IECSDSL1 (4)\n* --- UCB ---------------------------------------------------------\n         PRINT GEN\n         IEFUCBOB LIST=YES\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @LOC\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=object.library(@LOC#301)                        <- CHECK\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//STEPCAT  DD  DSN=TSOCAT,DISP=SHR\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//OBJ      DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=object.library\n//SYSLIB   DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=SYS1.LPALIB\n//SYSLMOD  DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=module.library\n//SYSIN    DD  *\n INCLUDE OBJ(@LOC#301)\n INCLUDE OBJ(@OS#6HC)\n ENTRY   @LOC\n NAME    @LOC(R)\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@OS#6HC": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x05/\\x01\\x00\\x05/\\x18\\x12\\x00X\\x00X\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-21T00:00:00", "modifydate": "2000-02-21T18:12:00", "lines": 88, "newlines": 88, "modlines": 0, "user": "KIMU"}, "text": "//KIMU     JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//JOBCAT   DD  DSN=user.catalog,DISP=SHR\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         DC   C'<< Oh Shock ! >> Version 6 ( '\nOSV      DC   CL6'v6r1m1'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n@OS#6HC  CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03                       Base Reg. R03\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* --- from characher ---\n         L     R07,0(R01)\n* --- to character ---\n         L     R08,4(R01)\n* --- convert length ---\n         L     R09,8(R01)\n*        LA    R07,ALLOCER\n*        LA    R08,ERRMSG02+30\n*        LA    R09,4\n*        BAL   R14,@CO_HEX                     CALL CONVERT HEX-CHAR\n@CO_HEX  EQU   *                               CONVERT HEX-CHARACTER\n         LA    R15,5\n@CO_HC   EQU   *\n         LTR   R09,R09\n         BZ    @CO_EXIT\n         BCT   R15,@CO_SKIP\n*\n         MVI   0(R08),X'40'\n         LA    R08,1(R08)\n         LA    R15,4\n@CO_SKIP EQU   *\n         SR    R01,R01\n         IC    R01,0(R07)\n         SRL   R01,4\n         A     R01,A_TR\n         ICM   R02,B'0010',0(R01)\n         IC    R01,0(R07)\n         N     R01,=F'15'\n         A     R01,A_TR\n         ICM   R02,B'0001',0(R01)\n         STCM  R02,B'0011',0(R08)\n         LA    R07,1(R07)\n         LA    R08,2(R08)\n         BCTR  R09,0\n         B     @CO_HC\n@CO_EXIT EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*\nSAVEAREA DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         LTORG\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @OS#6HC\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//*YSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//*        DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSLIN   DD  DSN=your.object.library(@OS#6HC),DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@OS#6HC2": {"ttr": 2824, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x05/\\x01\\x00\\x05/\\x18\\x12\\x00]\\x00]\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-21T00:00:00", "modifydate": "2000-02-21T18:12:00", "lines": 93, "newlines": 93, "modlines": 0, "user": "KIMU"}, "text": "//KIMU     JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//JOBCAT   DD  DSN=user.catalog,DISP=SHR\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         DC   C'<< Oh Shock ! >> Version 6 ( '\nOSV      DC   CL6'v6r1m1'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n@OS#6HC2 CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03                       Base Reg. R03\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* --- from characher ---\n         L     R07,0(R01)\n* --- to character ---\n         L     R08,4(R01)\n         L     R10,8(R01)\n* --- convert length ---\n         L     R09,12(R01)\n*        LA    R07,ALLOCER\n*        LA    R08,ERRMSG02+30\n*        LA    R09,4\n*        BAL   R14,@CO_HEX                     CALL CONVERT HEX-CHAR\n@CO_HEX  EQU   *                               CONVERT HEX-CHARACTER\n*        LA    R15,5\n@CO_HC   EQU   *\n         LTR   R09,R09\n         BZ    @CO_EXIT\n*        BCT   R15,@CO_SKIP\n*\n*        MVI   0(R08),X'40'\n*        LA    R08,1(R08)\n*        LA    R15,4\n*CO_SKIP EQU   *\n         SR    R01,R01\n         IC    R01,0(R07)\n         SRL   R01,4\n         A     R01,A_TR\n         MVC   0(1,R08),0(R01)\n*        ICM   R02,B'0010',0(R01)\n         IC    R01,0(R07)\n         N     R01,=F'15'\n         A     R01,A_TR\n         MVC   0(1,R10),0(R01)\n*        ICM   R02,B'0001',0(R01)\n*        STCM  R02,B'0011',0(R08)\n         LA    R07,1(R07)\n*        LA    R08,2(R08)\n         LA    R08,1(R08)\n         LA    R10,1(R10)\n         BCTR  R09,0\n         B     @CO_HC\n@CO_EXIT EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*\nSAVEAREA DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         LTORG\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @OS#6HC2\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//*YSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//*        DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSLIN   DD  DSN=your.object.library(@OS#6HC2),DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SLEEP": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x00f\\x00f\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 102, "newlines": 102, "modlines": 0, "user": "KIMU"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "@SMF30#1": {"ttr": 2830, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x03a\\x03a\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 865, "newlines": 865, "modlines": 0, "user": "KIMU"}, "text": "//KIMUA JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//* ***************************************************************\n//* SMF RECORD EDIT PROGRAM !\n//*      rec type   record name              dd name\n//*          30-4 : Step end             .   TYPE304\n//*\n//* ---------------------------------------------------------------\n//*\n//* ***************************************************************\n//A       EXEC PGM=ASMA90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         PRINT NOGEN\nSMFEDIT  CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05,R08           BASE REG. R03\n         LA    R04,2048(R03)\n         LA    R04,2048(R04)               2ND BASE REG. R04\n         LA    R05,2048(R04)\n         LA    R05,2048(R05)               3ND BASE REG. R05\n         LA    R08,2048(R05)\n         LA    R08,2048(R08)               4ND BASE REG. R08\n         ST    R13,SAVEAREA+4              SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  SAVE A(NEW SAVEAREA)\n*--- end of incantation ---\n*----------------------------------------------------------------------\n*--- parameter ---\n         MVI   PARMWA,X'40'             space clear\n         MVC   PARMWA+1(L'PARMWA-1),PARMWA\n         MVI   JOBNM,X'40'\n         MVC   JOBNM+1(L'JOBNM-1),JOBNM\n         MVI   STEPNM,X'40'\n         MVC   STEPNM+1(L'STEPNM-1),STEPNM\n         MVI   PGMNM,X'40'\n         MVC   PGMNM+1(L'PGMNM-1),PGMNM\n         MVI   DDNM,X'40'\n         MVC   DDNM+1(L'DDNM-1),DDNM\n*\n         L     R01,0(R01)\n         LH    R02,0(R01)\n         LTR   R02,R02\n         BZ    PRM_EXIT\n         BCTR  R02,0\n*--> PARMMVC  MVC   PARMWA(0),2(R01)\n         EX    R02,PARMMVC\n*\n         LA    R01,PARMWA\n         LA    R02,L'PARMWA\nPRM_LOP1 EQU   *\n         CLC   0(07,R01),=CL07'JOBNM('\n         BNE   PRM_SKP1\n         LA    R15,JOBNM\n         LA    R01,7(R01)\n         B     PRM_LOP2\nPRM_SKP1 EQU   *\n         CLC   0(07,R01),=CL07'STEPNM('\n         BNE   PRM_SKP2\n         LA    R15,STEPNM\n         LA    R01,7(R01)\n         B     PRM_LOP2\nPRM_SKP2 EQU   *\n         CLC   0(06,R01),=CL06'PGMNM('\n         BNE   PRM_SKP3\n         LA    R15,PGMNM\n         LA    R01,6(R01)\n         B     PRM_LOP2\nPRM_SKP3 EQU   *\n         CLC   0(05,R01),=CL05'DDNM('\n         BNE   PRM_SKP4\n         LA    R15,DDNM\n         LA    R01,5(R01)\n         B     PRM_LOP2\nPRM_SKP4 EQU   *\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_LOP2 EQU   *\n         CLI   0(R01),C')'\n         BE    PRM_SKP20\n         MVC   0(1,R15),0(R01)\n         LA    R15,1(R15)\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP2\n         B     PRM_EXIT\nPRM_SKP20 EQU  *\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_EXIT EQU   *\n         MVC   MSG#0000(15),=CL15'SE30 : JOBNM  ='\n         MVC   MSG#0000+15(08),JOBNM\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE30 : STEPNM ='\n         MVC   MSG#0000+15(08),STEPNM\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE30 : PGMNM  ='\n         MVC   MSG#0000+15(08),PGMNM\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE30 : DDNM   ='\n         MVC   MSG#0000+15(08),DDNM\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n*--- File open ---\n         OPEN  (INDCB,,TYPE304,(OUTPUT))\n*--- Title ---\n         PUT   TYPE304,#304TTL\n*--- header section ---\n         LA    R12,RECAREA               Header section\n         USING SMFRCD30,R12\n*-- Read ---\nLOOP01   EQU   *\n         GET   INDCB,RECAREA\n         CLI   SMF30RTY,X'1E'            Type  30 ( Address space )\n         BE    EDIT30\n         B     LOOP01\n*--- Record type 30 process -------------------------------------------\nEDIT30   EQU   *\n         CLC   SMF30STP,=H'4'            if step end record ?\n         BE    EDIT304\nEDIT304R EQU   *\nEDIT30X  EQU   *\n         B     LOOP01\n*--- Record type 30-4 process -----------------------------------------\nEDIT304  EQU   *\n         XR    R01,R01\n         LH    R01,SMF30ION\n         LTR   R01,R01                   have ID section in record ?\n         BZ    EDIT304X\n         L     R01,SMF30IOF\n         LA    R11,RECAREA\n         LA    R11,0(R11,R01)\n         USING SMF30ID,R11\n         L     R01,SMF30COF\n         LA    R10,RECAREA\n         LA    R10,0(R10,R01)\n         USING SMF30CAS,R10\n* --- output area clear ---\n         LA    R01,L'#304                length\n         LA    R02,#304                  address\n         MVI   #304,X'40'                output area space clear\nE304_CLR EQU   *\n         CL    R01,=F'256'\n         BNH   E304_CLRX\n         MVC   1(256,R02),0(R02)\n         S     R01,=F'256'\n         LA    R02,256(R02)\n         B     E304_CLR\nE304_CLRX EQU  *\n         BCTR  R01,0\n         BCTR  R01,0\n*--> EXCLR    MVC   1(0,R02),0(R02)\n         EX    R01,EXCLR\n*\n         LA    R01,PART\nE304_INIT EQU  *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E304_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C' '\n         LA    R01,4(R01)\n         B     E304_INIT\nE304_INITX EQU *\n* ---\n* --- jobname ---\n         CLC   JOBNM(8),=CL8' '\n         BE    E304JOBSKP\n         CLC   SMF30JBN,JOBNM\n         BNE   EDIT304X\nE304JOBSKP EQU *\n         MVC   #304JBN,SMF30JBN\n* --- stepname ---\n         CLC   STEPNM(8),=CL8' '\n         BE    E304STEPSKP\n         CLC   SMF30STM,STEPNM\n         BNE   EDIT304X\nE304STEPSKP EQU *\n         MVC   #304STM,SMF30STM\n* --- step number ---\n         XR    R01,R01\n         IC    R01,SMF30STN\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #304STN(2),EDWORK+14\n* --- class ---\n         CLI   SMF30CLS,X'00'\n         BNE   E304CLASSKP1\n         MVI   #304CLS,C'?'\n         B     E304CLASSKPX\nE304CLASSKP1 EQU *\n         MVC   #304CLS,SMF30CLS\nE304CLASSKPX EQU *\n* --- program name ---\n         CLC   PGMNM(8),=CL8' '\n         BE    E304PGMSKP\n         CLC   SMF30PGM,PGMNM\n         BNE   EDIT304X\nE304PGMSKP EQU *\n         MVC   #304PGM,SMF30PGM\n* --- system id ---\n         MVC   #304SID,SMF30SID\n* --- start date ---\n         MVI   #304RSD,C' '              clear\n         MVC   #304RSD+1(L'#304RSD-1),#304RSD\n         L     R01,SMF30RSD              R01 <- date\n         SRL   R01,12                    shift\n         O     R01,=X'0000000F'          R01 = 00000yyF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1                 R01 <- Year ( bin )\n         ST    R01,WK#F1\n*\n         CL    R01,=F'50'                If less 2000 ?\n         BH    @DTSKP01                   goto\n         L     R01,WK#F1\n*        S     R01,=F'100'\n         LA    R01,2000(R01)\n         B     @DTSKP02\n@DTSKP01 EQU *\n         LA    R01,1900(R01)\n@DTSKP02 EQU *\n         XC    PK_AREA,PK_AREA           Year ( char )\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RSD(4),UPK_AREA+4\n         MVI   #304RSD+4,C'/'\n*\n         LR    R06,R01                   R06 <- year\n         SRDA  R06,32\n         D     R06,=F'400'               Year / 400\n         LTR   R06,R06\n         BZ    @DTSKP04\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'100'               Year / 100\n         LTR   R06,R06\n         BZ    @DTSKP03\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'4'                 Year / 4\n         LTR   R06,R06\n         BZ    @DTSKP04\n@DTSKP03 EQU *\n         MVC   @MONTH(12),MONTH1\n         B     @DTSKP05\n@DTSKP04 EQU *\n         MVC   @MONTH(12),MONTH2\n         B     @DTSKP05\n@DTSKP05 EQU *\n*\n         L     R01,SMF30RSD\n         N     R01,=X'0000FFFF'          R01 <- 0000dddF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         ST    R01,WK#F1                 julian date\n         LA    R02,@MONTH                Month Table\n         LA    R06,1                     Month\n@DTSKP06 EQU *\n         XR    R15,R15\n         IC    R15,0(R02)\n         CLR   R01,R15\n         BNH   @DTSKP07\n         SR    R01,R15                   substruct day\n         LA    R02,1(R02)                Shift Month Table\n         LA    R06,1(R06)                Month + 1\n         B     @DTSKP06\n@DTSKP07 EQU *\n*        B     @DTSKP0X\n         XC    PK_AREA,PK_AREA\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RSD+5(2),UPK_AREA+6\n         MVI   #304RSD+7,C'/'\n*\n         XC    PK_AREA,PK_AREA\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RSD+8(2),UPK_AREA+6\n@DTSKP0X EQU *\n* --- start date ---\n         MVI   #304STD,C' '              clear\n         MVC   #304STD+1(L'#304STD-1),#304STD\n         L     R01,SMF30STD              R01 <- date\n         SRL   R01,12                    shift\n         O     R01,=X'0000000F'          R01 = 00000yyF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1                 R01 <- Year ( bin )\n         ST    R01,WK#F1\n*\n         CL    R01,=F'50'                If less 2000 ?\n         BH    @DTSKP11                   goto\n         L     R01,WK#F1\n*        S     R01,=F'100'\n         LA    R01,2000(R01)\n         B     @DTSKP12\n@DTSKP11 EQU *\n         LA    R01,1900(R01)\n@DTSKP12 EQU *\n         XC    PK_AREA,PK_AREA           Year ( char )\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304STD(4),UPK_AREA+4\n         MVI   #304STD+4,C'/'\n*\n         LR    R06,R01                   R06 <- year\n         SRDA  R06,32\n         D     R06,=F'400'               Year / 400\n         LTR   R06,R06\n         BZ    @DTSKP14\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'100'               Year / 100\n         LTR   R06,R06\n         BZ    @DTSKP13\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'4'                 Year / 4\n         LTR   R06,R06\n         BZ    @DTSKP14\n@DTSKP13 EQU *\n         MVC   @MONTH(12),MONTH1\n         B     @DTSKP15\n@DTSKP14 EQU *\n         MVC   @MONTH(12),MONTH2\n         B     @DTSKP15\n@DTSKP15 EQU *\n*\n         L     R01,SMF30STD\n         N     R01,=X'0000FFFF'          R01 <- 0000dddF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         ST    R01,WK#F1                 julian date\n         LA    R02,@MONTH                Month Table\n         LA    R06,1                     Month\n@DTSKP16 EQU *\n         XR    R15,R15\n         IC    R15,0(R02)\n         CLR   R01,R15\n         BNH   @DTSKP17\n         SR    R01,R15                   substruct day\n         LA    R02,1(R02)                Shift Month Table\n         LA    R06,1(R06)                Month + 1\n         B     @DTSKP16\n@DTSKP17 EQU *\n*        B     @DTSKP1X\n         XC    PK_AREA,PK_AREA\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304STD+5(2),UPK_AREA+6\n         MVI   #304STD+7,C'/'\n*\n         XC    PK_AREA,PK_AREA\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304STD+8(2),UPK_AREA+6\n@DTSKP1X EQU *\n* --- end date ---\n         MVI   #304DTE,C' '              clear\n         MVC   #304DTE+1(L'#304DTE-1),#304DTE\n*        L     R01,SMF30RED              R01 <- date\n         L     R01,SMF30DTE              R01 <- date\n         SRL   R01,12                    shift\n         O     R01,=X'0000000F'          R01 = 00000yyF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1                 R01 <- Year ( bin )\n         ST    R01,WK#F1\n*\n         CL    R01,=F'50'                If less 2000 ?\n         BH    @DTSKP21                   goto\n         L     R01,WK#F1\n*        S     R01,=F'100'\n         LA    R01,2000(R01)\n         B     @DTSKP22\n@DTSKP21 EQU *\n         LA    R01,1900(R01)\n@DTSKP22 EQU *\n         XC    PK_AREA,PK_AREA           Year ( char )\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304DTE(4),UPK_AREA+4\n         MVI   #304DTE+4,C'/'\n*\n         LR    R06,R01                   R06 <- year\n         SRDA  R06,32\n         D     R06,=F'400'               Year / 400\n         LTR   R06,R06\n         BZ    @DTSKP24\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'100'               Year / 100\n         LTR   R06,R06\n         BZ    @DTSKP23\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'4'                 Year / 4\n         LTR   R06,R06\n         BZ    @DTSKP24\n@DTSKP23 EQU *\n         MVC   @MONTH(12),MONTH1\n         B     @DTSKP25\n@DTSKP24 EQU *\n         MVC   @MONTH(12),MONTH2\n         B     @DTSKP25\n@DTSKP25 EQU *\n*\n*        L     R01,SMF30RED\n         L     R01,SMF30DTE\n         N     R01,=X'0000FFFF'          R01 <- 0000dddF\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         ST    R01,WK#F1                 julian date\n         LA    R02,@MONTH                Month Table\n         LA    R06,1                     Month\n@DTSKP26 EQU *\n         XR    R15,R15\n         IC    R15,0(R02)\n         CLR   R01,R15\n         BNH   @DTSKP27\n         SR    R01,R15                   substruct day\n         LA    R02,1(R02)                Shift Month Table\n         LA    R06,1(R06)                Month + 1\n         B     @DTSKP26\n@DTSKP27 EQU *\n*        B     @DTSKP2X\n         XC    PK_AREA,PK_AREA\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304DTE+5(2),UPK_AREA+6\n         MVI   #304DTE+7,C'/'\n*\n         XC    PK_AREA,PK_AREA\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304DTE+8(2),UPK_AREA+6\n@DTSKP2X EQU *\n* --- start time ---\n         L     R06,SMF30RST\n         SRDA  R06,32\n         D     R06,=F'100'   1sec = 1ms * 100\n         MVI   #304RST+8,C'.'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RST+9(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1min = 1s * 60\n         MVI   #304RST+5,C':'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RST+6(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RST(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         MVI   #304RST+2,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304RST+3(2),UPK_AREA+6\n* --- start time ---\n         L     R06,SMF30SIT\n         SRDA  R06,32\n         D     R06,=F'100'   1sec = 1ms * 100\n         MVI   #304SIT+8,C'.'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304SIT+9(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1min = 1s * 60\n         MVI   #304SIT+5,C':'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304SIT+6(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304SIT(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         MVI   #304SIT+2,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304SIT+3(2),UPK_AREA+6\n* --- end time ---\n*        L     R06,SMF30RET\n         L     R06,SMF30TME\n         SRDA  R06,32\n         D     R06,=F'100'   1sec = 1ms * 100\n         MVI   #304TME+8,C'.'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304TME+9(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1min = 1s * 60\n         MVI   #304TME+5,C':'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304TME+6(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304TME(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         MVI   #304TME+2,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304TME+3(2),UPK_AREA+6\n* --- elapse time ---\n*        L     R06,SMF30RET   end\n         L     R06,SMF30TME   end\n         L     R07,SMF30SIT   start\n*        CLC   SMF30RED,SMF30STD\n         CLC   SMF30DTE,SMF30STD\n         BE    @ELPSKP1\n         L     R01,=F'8640000'\n         LA    R06,0(R01,R06)\n@ELPSKP1 EQU   *\n         SR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'100'   1sec = 1ms * 100\n         MVI   #304ELP+8,C'.'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304ELP+9(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1min = 1s * 60\n         MVI   #304ELP+5,C':'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304ELP+6(2),UPK_AREA+6\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304ELP(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         MVI   #304ELP+2,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #304ELP+3(2),UPK_AREA+6\n* --- tcb time ---\n         L     R01,SMF30CPT\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #304CPT(10),EDWORK2+7\n* --- srb time ---\n         L     R01,SMF30CPS\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #304CPS(10),EDWORK2+7\n* --- CPU time ---\n         L     R01,SMF30CPT\n         A     R01,SMF30CPS\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #304CPS(10),EDWORK2+7\n* ---\n* ---\n         PUT   TYPE304,#304\nEDIT304X EQU   *\n         B     EDIT304R\n         DROP  R11,R12\n*--- end of process ---------------------------------------------------\n@BYE     EQU   *\n         CLOSE (INDCB,,TYPE304)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*--- dcb --------------------------------------------------------------\nINDCB    DCB   DSORG=PS,MACRF=(GM),DDNAME=INDD,                        *\n               EODAD=@BYE\nTYPE304  DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE304\n*----------------------------------------------------------------------\n         DS    0F\nSAVEAREA DS    18F                       Savearea\n* --- month translation table ---\n*                   1       2       3       4       5       6\n*                   7       8       9      10      11      12\nMONTH1   DC    FL1'31',FL1'28',FL1'31',FL1'30',FL1'31',FL1'30'\n         DC    FL1'31',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\nMONTH2   DC    FL1'31',FL1'29',FL1'31',FL1'30',FL1'31',FL1'30'\n         DC    FL1'31',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\n@MONTH   DC    FL1'00',FL1'00',FL1'00',FL1'00',FL1'00',FL1'00'\n         DC    FL1'00',FL1'00',FL1'00',FL1'00',FL1'00',FL1'00'\n         DS    0D\nUPK_AREA DS    XL16                      un-pack area\n         DS    XL16                      un-pack area\nEBCDIC_A DS    CL32                      ebcdic area\nPK_AREA  DS    PL16                      pack work area\nPK_AREA2 DS    PL16\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDMASK2  DC    XL17'40202020202020202020202021204B2020'\nEDWORK   DS    XL16\nEDWORK2  DS    XL17\n*\nWK#D1    DS    0D\nWK#DF1   DS    F\nWK#DF2   DS    F\nWK#F1    DS    F\nWK#F2    DS    F\nWK#H1    DS    H\n* --- MVC ---\nPARMMVC  MVC   PARMWA(0),2(R01)\nEXCLR    MVC   1(0,R02),0(R02)\n* --- parameter ---\nPARMWA   DS    CL100\nJOBNM    DS    CL100\nSTEPNM   DS    CL100\nPGMNM    DS    CL100\nDDNM     DS    CL100\n*\n* --- R744 work area ---\n#H74DAT  DS    XL10                      RMF Section Start Date\n#H74IST  DS    CL08'HH.MM.SS'            RMF Section Start Time\n#H74INT  DS    F                         RMF Section Interval Sec\n#H74SARC DS    F                         R744SARC\n#H74SSRC DS    F                         R744SSRC\n#H74SQRC DS    F                         R744SQRC\n#WK#XI   DS    F                         R744SQRC\n#WK#WRIT DS    F                         R744SQRC\n#CF#CPUT DS    D                         Total CPU time\n#CF#USET DS    D                         Total CPU used time\n         DS    0F\n* --- WTO messages ---\nWTOINFO  WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A000 DC    AL2(L'MSG#0000)\nMSG#0000 DC    CL80'R74EDIT PARM:'\n*\n*--- Title - CF ------------------------------------------------------\n#304TTL  DS    0CL256\n         DC    CL8'JOBNAME'              job name\n         DC    CL1' '\n         DC    CL8'STEPNAME'             step name\n         DC    CL1' '\n         DC    CL1'N'                    step number\n         DC    CL1' '\n         DC    CL8'PGMNAME'              program name\n         DC    CL1' '\n         DC    CL4'SID'                  system id\n         DC    CL1' '\n         DC    CL1'C'                    class\n         DC    CL1' '\n         DC    CL10'READ_DATE'           start date\n         DC    CL1' '\n         DC    CL11'READ_TIME'           start time\n         DC    CL1' '\n         DC    CL10'START_DATE'          start date\n         DC    CL1' '\n         DC    CL11'START_TIME'          start time\n         DC    CL1' '\n         DC    CL10'END_DATE'            end date\n         DC    CL1' '\n         DC    CL11'END_TIME'            end time\n         DC    CL1' '\n         DC    CL11'ELAPSE'              elapse\n         DC    CL1' '\n         DC    CL10'TCB_TIME'            tcb\n         DC    CL1' '\n         DC    CL10'SRB_TIME'            srb\n         DC    CL256' '\n*--- CF output area --------------------------------------------------\n#304     DS    0CL256\n#304JBN  DS    CL8                       job name\n#304001  DS    CL1\n#304STM  DS    CL8                       step name\n#304002  DS    CL1\n#304STN  DS    CL2                       step number\n#304003  DS    CL1\n#304PGM  DS    CL8                       program name\n#304004  DS    CL1\n#304SID  DS    CL4                       system id\n#304005  DS    CL1\n#304CLS  DS    CL1                       class\n#304006  DS    CL1\n#304RSD  DS    0CL10                     reader date\n#304RSDY DS    CL4                         year\n#304RSD1 DS    CL1                             /\n#304RSDM DS    CL2                              month\n#304RSD2 DS    CL1                                   /\n#304RSDD DS    CL2                                    day\n#304007  DS    CL1\n#304RST  DS    0CL11                     reader time\n#304RSTH DS    CL2                         hh\n#304RST1 DS    CL1                           :\n#304RSTM DS    CL2                            mm\n#304RST2 DS    CL1                              :\n#304RSTS DS    CL2                               ss\n#304RST3 DS    CL1                                 .\n#304RSTT DS    CL2                                  tt\n#304008  DS    CL1\n#304STD  DS    0CL10                     start date\n#304STDY DS    CL4                         year\n#304STD1 DS    CL1                             /\n#304STDM DS    CL2                              month\n#304STD2 DS    CL1                                   /\n#304STDD DS    CL2                                    day\n#304009  DS    CL1\n#304SIT  DS    0CL11                     start time\n#304SITH DS    CL2                         hh\n#304SIT1 DS    CL1                           :\n#304SITM DS    CL2                            mm\n#304SIT2 DS    CL1                              :\n#304SITS DS    CL2                               ss\n#304SIT3 DS    CL1                                 .\n#304SITT DS    CL2                                  tt\n#304010  DS    CL1\n#304DTE  DS    0CL10                     end date\n#304DTEY DS    CL4                         year\n#304DTE1 DS    CL1                             /\n#304DTEM DS    CL2                              month\n#304DTE2 DS    CL1                                   /\n#304DTED DS    CL2                                    day\n#304011  DS    CL1\n#304TME  DS    0CL11                     end time\n#304TMEH DS    CL2                         hh\n#304TME1 DS    CL1                           :\n#304TMEM DS    CL2                            mm\n#304TME2 DS    CL1                              :\n#304TMES DS    CL2                               ss\n#304TME3 DS    CL1                                 .\n#304TMET DS    CL2                                  tt\n#304012  DS    CL1\n#304ELP  DS    0CL11                     elapse time\n#304ELPH DS    CL2                         hh\n#304ELP1 DS    CL1                           :\n#304ELPM DS    CL2                            mm\n#304ELP2 DS    CL1                              :\n#304ELPS DS    CL2                               ss\n#304ELP3 DS    CL1                                 .\n#304ELPT DS    CL2                                  tt\n#304013  DS    CL1\n#304CPC  DS    CL10                      cpu time\n#304014  DS    CL1\n#304CPT  DS    CL10                      tcb\n#304015  DS    CL1\n#304CPS  DS    CL10                      srb\n         DS    CL256\n* --- conmma ---------------------------------------------------------\nPART     DC    A(#304001),A(#304002),A(#304003),A(#304004),A(#304005)\n         DC    A(#304006),A(#304007),A(#304008),A(#304009),A(#304010)\n         DC    A(#304011),A(#304012),A(#304013),A(#304014),A(#304015)\n         DC    X'FFFFFFFF'\n*--- literal origin --------------------------------------------------\n         LTORG\n         DS    0D\nRECAREA  DS    32750C\n         PRINT GEN\nSMF74DST DSECT\n         IFASMFR3 30\n         PRINT NOGEN\n*----------------------------------------------------------------------\n*----------------------------------------------------------------------\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nFR00     EQU   00\nFR02     EQU   02\nFR04     EQU   04\nFR06     EQU   06\n         END   SMFEDIT\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//SYSIN    DD  DUMMY\n//DEL     EXEC PGM=IEFBR14\n//DD1      DD  DSN=KIMU.JOB.ELAPSE,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//*********************\n//        EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L)),\n//         PARM='STEPNM(WRITE)'\n//INDD     DD  DSN=SMF.DUMP,DISP=SHR\n//TYPE304  DD  DSN=KIMU.JOB.ELAPSE,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(20,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=256,BLKSIZE=0)\n//\n//\n//STEP1   EXEC PGM=UFASMFDP\n//STEPCAT  DD DSN=USER.CATALOG,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//INDD     DD  DSN=SYS1.MAN1,DISP=SHR\n//OUTDD    DD DSN=SMF.DUMP,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,50),RLSE)\n//SYSIN DD *\n SID(MVS1)\n INDD(INDD,OPTIONS(DUMP))\n OUTDD(OUTDD,TYPE(30))\n//*********************\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SMF41#0": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x01n\\x01n\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 366, "newlines": 366, "modlines": 0, "user": "KIMU"}, "text": "//KIMUB JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//* ***************************************************************\n//* SMF RECORD EDIT PROGRAM !\n//*      rec type   record name              dd name\n//*            41 : VLF REPORT           .   TYPE41\n//* ***************************************************************\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         PRINT NOGEN\n         DC   C'< SMF EDITER V0.0.1 _ KIMU _ &SYSDATE _ &SYSTIME >'\nSMFEDIT  CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05               BASE REG. R03\n         LA    R04,2048(R03)\n         LA    R04,2048(R04)               2ND BASE REG. R04\n         LA    R05,2048(R04)\n         LA    R05,2048(R05)               3RD BASE REG. R05\n         ST    R13,SAVEAREA+4              SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  SAVE A(NEW SAVEAREA)\n*\n         L     R01,0(R01)\n         LH    R02,0(R01)\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   PARMAREA(0),2(R01)\n*\n*** FILE OPEN ****************************************************\n         OPEN  (INDCB,,TYPE41,(OUTPUT))\n         PUT   TYPE41,#41TITLE\n*** PARAMETER ****************************************************\n         XC    PFLAG,PFLAG\n         LA    R06,PARMAREA\n         LA    R07,L'PARMAREA\nPLOP01   EQU   *\n         LTR   R07,R07\n         BZ    PLOP0X\n         CLC   0(6,R06),=CL06'CLASS('\n         BE    PCLASS\n         BCT   R07,PLOP01\n         B     PLOP0X\nPCLASS   EQU   *\n         LA    R06,6(R06)\n         LR    R01,R06\n         LA    R02,0\nPCLASS1  EQU   *\n         CLI   0(R06),C')'\n         BE    PCLASS2\n         LA    R02,1(R02)\n         CL    R02,=F'8'\n         BH    PCLASS3\n         LA    R06,1(R06)\n         BCT   R07,PCLASS1\nPCLASS2  EQU   *\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   #PCLAS(0),0(R01)\n         OI    PFLAG,X'80'\n         MVC   MSG#0000+26(8),#PCLAS\n         WTO   TEXT=MSG#A000,MF=(E,WTOMES)\n         B     PLOP01\nPCLASS3  EQU   *\n         WTO   'CLASS NAME INVALID ??'\n         B     PLOP01\nPLOP0X   EQU   *\n*** FILE READ ****************************************************\nLOOP01   EQU   *\n         GET   INDCB,RECAREA\n         CLC   RECAREA+5(1),=X'29'       TYPE  41 ( VLF REPORT   )\n         BE    EDIT41\n         B     LOOP01\n*** RECORD TYPE 41 ***********************************************\nEDIT41   EQU   *\n         MVI   #41,X'40'                 OUT AREA SPACE CLEAR\n         MVC   #41+1(132),#41\n*        MVC   #41RTY,=CL2'41'\n* --- JOB NAME ---\n         MVC   #41SID(4),RECAREA+14\n* --- DATE ---\n         UNPK  UPK_AREA(8),RECAREA+10(4)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #41DT(2),UPK_AREA+3\n         MVI   #41DT+2,C'/'\n         MVC   #41DT+3(3),UPK_AREA+5\n* --- INTERVAL TIME ---\n         L     R06,RECAREA+6\n         SRDA  R06,32\n         D     R06,=F'100'   1sec = 1ms * 100\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1min = 1s * 60\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'    1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #41INT(2),UPK_AREA+6\n         CVD   R06,PK_AREA\n         MVI   #41INT+2,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #41INT+3(2),UPK_AREA+6\n* --- VLF SUMMARY CHECK ---\n         XR    R06,R06\n         LH    R06,RECAREA+66\n         LTR   R06,R06\n         BZ    E41#X           IF NO-VLF SUMMARY\n         XR    R07,R07\n         XR    R08,R08\n         L     R07,RECAREA+60  OFFSET\n         LA    R07,RECAREA(R07)\n         LH    R08,RECAREA+64  LENGTH\nE41LOP01 EQU   *\n* --- VLF CLASS NAME ---\n         TM    PFLAG,X'80'\n         BNO   E41SKP1\n         CLC   #PCLAS(8),0(R07)\n         BNE   E41#N\nE41SKP1  EQU   *\n         MVC   #41CLASS,0(R07)\n* --- ALLOCATION BLOCK ---\n         L     R01,8(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        MVC   #99TPER(1),EDWORK+15\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41MVT(12),EDWORK+4\n* --- USED BLOCK ---\n         L     R01,12(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41USD(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,16(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41SRC(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,20(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41FND(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,24(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41ADD(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,28(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41DEL(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,32(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41TRM(12),EDWORK+4\n* --- ALLOCATION BLOCK ---\n         L     R01,36(R07)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n*        UNPK  UPK_AREA(16),PK_AREA(8)\n*        OI    UPK_AREA+15,X'F0'\n         MVC   #41LRG(12),EDWORK+4\n* --- WRITE ---\n         PUT   TYPE41,#41\n* --- WRITE ---\nE41#N    EQU   *\n         LA    R07,0(R07,R08)\n         BCT   R06,E41LOP01\nE41#X    EQU   *\n         B     LOOP01\n*** END OF PROCESS ***********************************************\n@BYE     EQU   *\n         CLOSE (INDCB,,TYPE41)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*** HEXA CHARACTER PRINTOUT ROUTINE ******************************\n@CO_HEX  EQU   *                               CONVERT HEX-CHARACTER\n         STM   R00,R15,REGS\n         LA    R15,5\n@CO_HC   EQU   *\n         LTR   R09,R09\n         BZ    @CO_EXIT\n         BCT   R15,@CO_SKIP\n*\n         MVI   0(R08),X'40'\n         LA    R08,1(R08)\n         LA    R15,4\n@CO_SKIP EQU   *\n         SR    R01,R01\n         IC    R01,0(R07)\n         SRL   R01,4\n         A     R01,A_TR\n         ICM   R02,B'0010',0(R01)\n         IC    R01,0(R07)\n         N     R01,=F'15'\n         A     R01,A_TR\n         ICM   R02,B'0001',0(R01)\n         STCM  R02,B'0011',0(R08)\n         LA    R07,1(R07)\n         LA    R08,2(R08)\n         BCTR  R09,0\n         B     @CO_HC\n@CO_EXIT EQU   *\n         LM    R00,R15,REGS\n         BR    R14\n*** DCB **********************************************************\nINDCB    DCB   DSORG=PS,MACRF=(GM),DDNAME=INDD,                        *\n               EODAD=@BYE\nTYPE41   DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE41\n*** DEFINE STORAGE ***********************************************\n         DS    0F\nSAVEAREA DS    18F                               SAVEAREA\nREGS     DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         DS    0D\nPK_AREA  DS    PL8\nUPK_AREA DS    XL16\nPK_ARE2  DS    PL16\nUPK_ARE2 DS    XL16\nWK#F     DS    F\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDWORK   DS    XL16\nPARMAREA DC    CL100' '\n#PCLAS   DC    CL8' '\nPFLAG    DS    BL1\n         DS    0F\nWTOMES   WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A000 DC    AL2(L'MSG#0000)\n*                   0....+....1....+....2....+....3....+....4....+....5*\n               ....+....6....+....7....+....8\nMSG#0000 DC    CL80'SMFEDIT 41 : PARM > CLASS:'\nMSG#A001 DC    AL2(L'MSG#0001)\n*                   0....+....1....+....2....+....3....+....4....+....5*\n               ....+....6....+....7....+....8\nMSG#0001 DC    CL80'SE41 : '\n*** REC TYPE 41 **************************************************\n#41TITLE DC    CL133' SID  YY/DDD HH:MM CLASS             MVT          *\n               USD          SRC          FND          ADD          DEL *\n                        TRM          LRG '\n#41      DS    0CL133\n         DS    CL1\n#41SID   DS    CL4\n         DS    CL1\n#41DT    DS    CL6\n         DS    CL1\n#41INT   DS    CL5\n         DS    CL1\n#41CLASS DS    CL8\n         DS    CL1\n#41MVT   DS    CL12\n         DS    CL1\n#41USD   DS    CL12\n         DS    CL1\n#41SRC   DS    CL12\n         DS    CL1\n#41FND   DS    CL12\n         DS    CL1\n#41ADD   DS    CL12\n         DS    CL1\n#41DEL   DS    CL12\n         DS    CL1\n#41TRM   DS    CL12\n         DS    CL1\n#41LRG   DS    CL12\n         DS    CL133\n*** REC TYPE LITERAL ORIGIN **************************************\n         LTORG\n         DS    0D\nRECAREA  DS    32767C\n         ERBSMF\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   SMFEDIT\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(@SE41#00)\n//*YSLMOD  DD  DISP=SHR,UNIT=SYSDA,\n//*        DSN=YOUR.LOADLIB\n//SYSIN    DD  *\n ENTRY   SMFEDIT\n NAME    @SE41#00(R)\n/*\n//DEL     EXEC PGM=IEFBR14\n//DD3      DD  DSN=SMFEDIT.TYPE41,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//*********************\n//STEP1   EXEC PGM=UFASMFDP\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//INDD     DD  DSN=SMFDUMP.MVS1.@240(0),DISP=SHR\n//OUTDD    DD DSN=&&SORTOUT,DISP=(,PASS),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,50),RLSE)\n//SYSIN DD *\n SID(MVS1)\n INDD(INDD,OPTIONS(DUMP))\n OUTDD(OUTDD,TYPE(41))\n//*********************\n//G       EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L)),\n//         PARM='CLASS(CSVLLA)'\n//STEPCAT  DD  DSN=YOUR.USERCAT,DISP=SHR\n//INDD     DD  DSN=&&SORTOUT,DISP=(OLD,PASS)\n//TYPE41   DD  DSN=SMFEDIT.TYPE41,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(10,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=133,BLKSIZE=1330)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SMF74#8": {"ttr": 3340, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x0c\\xa1\\x0c\\xa1\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 3233, "newlines": 3233, "modlines": 0, "user": "KIMU"}, "text": "//KIMUB JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//* ***************************************************************\n//* SMF RECORD EDIT PROGRAM !\n//*      rec type   record name              dd name\n//*          74-4 : CF activities        .   TYPE74\n//*               : Structure requests   .   TYPE74S\n//*            -2 : XCF activities       .   TYPE72X\n//*               : XCF Path             .   TYPE72P\n//*            -1 : Device(DASD)         .   TYPE71D\n//*\n//* ---------------------------------------------------------------\n//* 99.08.12 : Bug Fix Zero devide of CF Cpu used percent\n//* 99.09.27 : Bug Fix No data contain subtype-2 record\n//* 99.10.05 : Bug Fix No data contain subtype-4 storucure request data\n//* 99.10.06 : Bug Fix SSTM/SSRC and SQTM/SQRC\n//* 99.10.07 : Bug Fix SATM/SARC\n//* 99.11.24 : Device report\n//* 99.12.20 : Device Bugfix ( IOSQ overflow )\n//*\n//* ***************************************************************\n//*OBCAT   DD  DSN=TSOCAT,DISP=SHR\n//A       EXEC PGM=ASMA90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         PRINT NOGEN\nSMFEDIT  CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05,R08           BASE REG. R03\n         LA    R04,2048(R03)\n         LA    R04,2048(R04)               2ND BASE REG. R04\n         LA    R05,2048(R04)\n         LA    R05,2048(R05)               3ND BASE REG. R05\n         LA    R08,2048(R05)\n         LA    R08,2048(R08)               4ND BASE REG. R08\n         ST    R13,SAVEAREA+4              SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  SAVE A(NEW SAVEAREA)\n*--- end of incantation ---\n*----------------------------------------------------------------------\n*--- parameter ---\n         MVI   PARMWA,X'40'             space clear\n         MVC   PARMWA+1(L'PARMWA-1),PARMWA\n         MVI   STRNAME,X'40'\n         MVC   STRNAME+1(L'STRNAME-1),STRNAME\n         MVI   CFNAME,X'40'\n         MVC   CFNAME+1(L'CFNAME-1),CFNAME\n         MVI   RTNAME,X'40'\n         MVC   RTNAME+1(L'RTNAME-1),RTNAME\n         MVI   PTHNAME,X'40'\n         MVC   PTHNAME+1(L'PTHNAME-1),PTHNAME\n*\n         L     R01,0(R01)\n         LH    R02,0(R01)\n         LTR   R02,R02\n         BZ    PRM_EXIT\n         BCTR  R02,0\n*--> PARMMVC  MVC   PARMWA(0),2(R01)\n         EX    R02,PARMMVC\n*\n         LA    R01,PARMWA\n         LA    R02,L'PARMWA\nPRM_LOP1 EQU   *\n         CLC   0(07,R01),=CL07'CFNAME('\n         BNE   PRM_SKP1\n         LA    R15,CFNAME\n         LA    R01,7(R01)\n         B     PRM_LOP2\nPRM_SKP1 EQU   *\n         CLC   0(08,R01),=CL08'STRNAME('\n         BNE   PRM_SKP2\n         LA    R15,STRNAME\n         LA    R01,8(R01)\n         B     PRM_LOP2\nPRM_SKP2 EQU   *\n         CLC   0(06,R01),=CL06'ROUTE('\n         BNE   PRM_SKP3\n         LA    R15,RTNAME\n         LA    R01,6(R01)\n         B     PRM_LOP2\nPRM_SKP3 EQU   *\n         CLC   0(05,R01),=CL05'PATH('\n         BNE   PRM_SKP4\n         LA    R15,PTHNAME\n         LA    R01,5(R01)\n         B     PRM_LOP2\nPRM_SKP4 EQU   *\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_LOP2 EQU   *\n         CLI   0(R01),C')'\n         BE    PRM_SKP20\n         MVC   0(1,R15),0(R01)\n         LA    R15,1(R15)\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP2\n         B     PRM_EXIT\nPRM_SKP20 EQU  *\n         LA    R01,1(R01)\n         BCT   R02,PRM_LOP1\n         B     PRM_EXIT\n*\nPRM_EXIT EQU   *\n         MVC   MSG#0000(15),=CL15'SE74 : CFNAME ='\n         MVC   MSG#0000+15(65),CFNAME\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE74 : STRNAME='\n         MVC   MSG#0000+15(65),STRNAME\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE74 : ROUTE  ='\n         MVC   MSG#0000+15(65),RTNAME\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         MVC   MSG#0000(15),=CL15'SE74 : PATH   ='\n         MVC   MSG#0000+15(65),PTHNAME\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n*--- Header Base Regs ---\n         LA    R09,RECAREA\n         USING SMF74HDR,R09\n*--- File open ---\n         OPEN  (INDCB,,TYPE74,(OUTPUT),TYPE74S,(OUTPUT))\n         OPEN  (TYPE72X,(OUTPUT),TYPE72P,(OUTPUT),TYPE71D,(OUTPUT))\n*--- Title ---\n         PUT   TYPE74,#74TTL\n         PUT   TYPE74S,#74STTL\n         PUT   TYPE72X,#72XTTL\n         PUT   TYPE72P,#72PTTL\n         PUT   TYPE71D,#71DTTL\n*-- Read ---\nLOOP01   EQU   *\n         GET   INDCB,RECAREA\n         CLI   SMF74RTY,X'4A'            Type  74 ( RMF activity )\n         BE    EDIT74\n         B     LOOP01\n*--- Record type 74 process -------------------------------------------\nEDIT74   EQU   *\n         BAL   R14,EDIT74RMF\n*\n         CLC   RECAREA+22(2),=XL2'0001'  XCF signalling section\n         BE    EDIT741\n         CLC   RECAREA+22(2),=XL2'0002'  XCF signalling section\n         BE    EDIT742\n         CLC   RECAREA+22(2),=XL2'0004'  CF section\n         BE    EDIT744\nEDIT74X  EQU   *\n         B     LOOP01\n*--- Record type 74 subtype 2 -----------------------------------------\nEDIT742  EQU   *\n         B     EDIT742_XCF\nEDIT742_XCFR EQU *\n         B     EDIT742_XCF2\nEDIT742_XCF2R EQU *\n         B     EDIT74X\n*--- Record type 74 subtype 4 -----------------------------------------\nEDIT744  EQU   *\n         B     EDIT744_CF\nEDIT744_CFR EQU *\n         B     EDIT744_STR\nEDIT744_STRR EQU *\n         B     EDIT74X\n*======================================================================\n* --- Record type 74 RMF Product Section ------------------------------\n*======================================================================\nEDIT74RMF EQU  *\n         L     R10,SMF74PRS              SMF74PRS\n*                                         : 'RMF product section' ptr\n         LA    R10,RECAREA(R10)\n         USING SMF74PRO,R10              Based RMF product section\n*\n         MVI   #H74DAT,C' '\n         MVC   #H74DAT+1(L'#H74DAT-1),#H74DAT\n*        L     R01,SMF74DAT\n         ICM   R01,B'1111',SMF74DAT\n         SRL   R01,12\n         O     R01,=X'0000000F'\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         ST    R01,WK#F1\n*\n         MVC   #H74DAT+5(4),WK#F1\n*\n         CL    R01,=F'100'\n         BL    E74RMF_SKP01\n         L     R01,WK#F1\n         S     R01,=F'100'\n         LA    R01,2000(R01)\n         B     E74RMF_SKP02\nE74RMF_SKP01 EQU *\n         LA    R01,1900(R01)\nE74RMF_SKP02 EQU *\n         XC    PK_AREA,PK_AREA\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #H74DAT(4),UPK_AREA+4\n         MVI   #H74DAT+4,C'/'\n*\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'400'               Year / 400\n         LTR   R06,R06\n         BZ    E74RMF_SKP04\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'100'               Year / 100\n         LTR   R06,R06\n         BZ    E74RMF_SKP03\n         LR    R06,R01\n         SRDA  R06,32\n         D     R06,=F'4'                 Year / 4\n         LTR   R06,R06\n         BZ    E74RMF_SKP04\nE74RMF_SKP03 EQU *\n         MVC   MONTH(12),MONTH1\n         B     E74RMF_SKP05\nE74RMF_SKP04 EQU *\n         MVC   MONTH(12),MONTH2\n         B     E74RMF_SKP05\nE74RMF_SKP05 EQU *\n*\n*        L     R01,SMF74DAT\n         ICM   R01,B'1111',SMF74DAT\n         N     R01,=X'0000FFFF'\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         ST    R01,WK#F1                 julian date\n         LA    R02,MONTH                 Month Table\n         LA    R06,1                     Month\n*        B     E74RMF_SKP0X\nE74RMF_SKP06 EQU *\n         XR    R15,R15\n         IC    R15,0(R02)\n         CLR   R01,R15\n         BNH   E74RMF_SKP07\n         SR    R01,R15                   substruct day\n         LA    R02,1(R02)                Shift Month Table\n         LA    R06,1(R06)                Month + 1\n         B     E74RMF_SKP06\nE74RMF_SKP07 EQU *\n*        B     E74RMF_SKP0X\n         XC    PK_AREA,PK_AREA\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #H74DAT+5(2),UPK_AREA+6\n         MVI   #H74DAT+7,C'/'\n*\n         XC    PK_AREA,PK_AREA\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #H74DAT+8(2),UPK_AREA+6\nE74RMF_SKP0X EQU *\n*\n         XC    PK_AREA,PK_AREA           SMF74IST\n*                                         : Monitor start time\n*        L     R01,SMF74IST\n         ICM   R01,B'1111',SMF74IST\n         ST    R01,PK_AREA+12\n         UNPK  UPK_AREA(16),PK_AREA(16)\n         OI    UPK_AREA+15,X'F0'\n*                 0123456789012345\n*        EDWORK : .........hhmmssF\n         MVC   #H74IST(2),UPK_AREA+10\n         MVI   #H74IST+2,C':'\n         MVC   #H74IST+3(2),UPK_AREA+12\n         MVI   #H74IST+5,C':'\n         MVC   #H74IST+6(2),UPK_AREA+14\n*\n*        SMF74INT : mmsstttF\n*        L     R01,SMF74INT              SMF74INT\n         ICM   R01,B'1111',SMF74INT\n*                                         : Interval\n         SRL   R01,20\n         O     R01,=X'0000000F'\n         XC    WK#D1,WK#D1\n         ST    R01,WK#DF2\n         CVB   R01,WK#D1\n         MH    R01,=H'60'                ss <- mm * 60\n         LR    R15,R01\n         MH    R15,=H'1000'             msec <- mm * 1000\n*\n*        L     R02,SMF74INT\n         ICM   R02,B'1111',SMF74INT\n         N     R02,=X'00FFFFFF'\n         XC    WK#D1,WK#D1\n         ST    R02,WK#DF2\n         CVB   R02,WK#D1\n         LA    R15,0(R15,R02)\n         ST    R15,#H74INTM\n*\n*        L     R02,SMF74INT\n         ICM   R02,B'1111',SMF74INT\n         N     R02,=X'00FF0000'\n         SRL   R02,12\n         O     R02,=X'0000000F'\n         XC    WK#D1,WK#D1\n         ST    R02,WK#DF2\n         CVB   R02,WK#D1\n         LA    R01,0(R01,R02)            ss <- mm * 60 + ss\n*        L     R02,SMF74INT\n         ICM   R02,B'1111',SMF74INT\n         N     R02,=X'0000FFFF'\n         XC    WK#D1,WK#D1\n         ST    R02,WK#DF2\n         CVB   R02,WK#D1\n         CL    R02,=F'500'               if 0.5ms > ttt\n         BL    E74RMF_SKP1\n         LA    R01,1(R01)                round\nE74RMF_SKP1 EQU *\n         ST    R01,#H74INT\n         L     R01,SMF74SAM\n         ST    R01,#H74SAM\n         BR    R14\n         DROP  R10\n*======================================================================\n*--- record type 74 - 1 Device report ---------------------------------\n*======================================================================\n#SMF74DDN DS   H\nEDIT741  EQU   *\n* --- Control unit section ---\n         L     R10,SMF74DCS\n         LH    R01,SMF74DCN\n         LTR   R01,R01\n         BZ    E741X\n         LA    R10,RECAREA(R10)\n         USING SMF74A,R10\n         CLC   SMF74SUB,=XL2'0020'\n         BNE   E741X\n         DROP  R10\n*\n* --- device section ---\n         L     R10,SMF74DDS\n         LH    R01,SMF74DDN\n         LTR   R01,R01\n         BZ    E741X\n         STH   R01,#SMF74DDN\n*\n         LA    R10,RECAREA(R10)\n         USING SMF74B,R10\n*\nE741D    EQU   *\n         TM    SMF74CNF,X'BA'\n         BO    E741N\n*\n         LA    R01,L'#741D               Length\n         LA    R02,#741D                 Address\n         MVI   #741D,X'40'               OUT AREA SPACE CLEAR\nE741D_CLR EQU  *\n         CL    R01,=F'256'\n         BNH   E741D_CLRX\n*\n         MVC   1(256,R02),0(R02)\n         S     R01,=F'256'\n         LA    R02,256(R02)\n         B     E741D_CLR\nE741D_CLRX EQU *\n         BCTR  R01,0\n         BCTR  R01,0\n         EX    R01,EXCLR\n*EXCLR    MVC   1(0,R02),0(R02)\n*\n         LA    R01,PARTX\nE741D_INIT EQU *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E741D_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C','\n         LA    R01,4(R01)\n         B     E741D_INIT\nE741D_INITX EQU *\n*\n         MVC   #71DDAT,#H74DAT           Monitor start time\n         MVC   #71DIST,#H74IST           Monitor start time\n         L     R01,#H74INT               Interval time\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #71DINT,EDWORK+12\n* --- R71DSNME ---------------------------------------------------\n         MVC   #71DSNME,SMF74SID         R742SNME\n* --- LCU --------------------------------------------------------\n         UNPK  EBCDIC_A(5),SMF74LCU(3)\n         TR    EBCDIC_A(4),=C'0123456789ABCDEF'-X'F0'\n         MVC   #71DLCU(4),EBCDIC_A\n* --- Address ----------------------------------------------------\n*        MVC   #71DNUM,SMF74NUM          Address\n         UNPK  EBCDIC_A(5),SMF74NUM(3)\n         TR    EBCDIC_A(4),=C'0123456789ABCDEF'-X'F0'\n         MVC   #71DNUM(4),EBCDIC_A\n* --- Volume serial ----------------------------------------------\n         MVC   #71DSER,SMF74SER\n* --- Control Unit Name ------------------------------------------\n         MVC   #71DCU,SMF74CU\n* --- Device Name ------------------------------------------------\n         MVC   #71DDEV,SMF74DEV\n* --- R71DSSC ----------------------------------------------------\n         L     R01,#H74INTM\n         LTR   R01,R01\n         BZ    E741SSC_Z\n         L     R07,SMF74SSC\n         XR    R06,R06\n         M     R06,=F'100000000'\n         DR    R06,R01\n         CVD   R07,PK_AREA\n         MVC   EDWORK5,EDMASK5\n         ED    EDWORK5,PK_AREA             100.00\n         MVC   #71DSSC,EDWORK5+5\n         B     E741SSC_X\nE741SSC_Z EQU  *\n         MVC   #71DSSC,=CL12'     0.00000'\nE741SSC_X EQU  *\n* ----------------------------------------------------------------\n         XC    #H71RESP,#H71RESP         Clear response\n* --- R71QUE -----------------------------------------------------\n         XR    R06,R06\n         L     R07,#H74INTM\n*\n         L     R01,#H74SAM\n         LTR   R01,R01\n         BZ    E741QUE_Z\n         M     R06,=F'10000'\n         DR    R06,R01\n         M     R06,SMF74QUE\n*\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741QUE_Z\n         DR    R06,R01\n         ST    R07,#H71RESP              save response\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DQUE,EDWORK4+5\n         B     E741QUE_X\nE741QUE_Z EQU  *\n         MVC   #71DQUE,=CL12'      0.0000'\nE741QUE_X EQU  *\n* --- R71PEND ----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741PEN_Z\n         L     R07,SMF74PEN\n         XR    R06,R06\n         M     R06,=F'128'\n*        D     R06,=F'1000'\n*        M     R06,=F'10000'\n         M     R06,=F'10'\n         DR    R06,R01\n         L     R01,#H71RESP\n         AR    R01,R07\n         ST    R01,#H71RESP              save response\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DPEN,EDWORK4+5\n         B     E741PEN_X\nE741PEN_Z EQU  *\n         MVC   #71DPEN,=CL12'      0.0000'\nE741PEN_X EQU  *\n* --- R71DISC ----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741DIS_Z\n         L     R07,SMF74DIS\n         XR    R06,R06\n         M     R06,=F'128'\n*        D     R06,=F'1000'\n*        M     R06,=F'10000'\n         M     R06,=F'10'\n         DR    R06,R01\n         L     R01,#H71RESP\n         AR    R01,R07\n         ST    R01,#H71RESP              save response\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DDIS,EDWORK4+5\n         B     E741DIS_X\nE741DIS_Z EQU  *\n         MVC   #71DDIS,=CL12'      0.0000'\nE741DIS_X EQU  *\n* --- R71CONN ----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741CNN_Z\n         L     R07,SMF74CNN\n         XR    R06,R06\n         M     R06,=F'128'\n*        D     R06,=F'1000'\n*        M     R06,=F'10000'\n         M     R06,=F'10'\n         DR    R06,R01\n         L     R01,#H71RESP\n         AR    R01,R07\n         ST    R01,#H71RESP              save response\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DCNN,EDWORK4+5\n         B     E741CNN_X\nE741CNN_Z EQU  *\n         MVC   #71DCNN,=CL12'      0.0000'\nE741CNN_X EQU  *\n* --- R71RESP ----------------------------------------------------\n         L     R07,#H71RESP\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DRESP,EDWORK4+5\n* --- R71CUB -----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741CUB_Z\n         L     R07,SMF74CUB\n         XR    R06,R06\n         M     R06,=F'128'\n*        D     R06,=F'1000'\n*        M     R06,=F'10000'\n         M     R06,=F'10'\n         DR    R06,R01\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DCUB,EDWORK4+5\n         B     E741CUB_X\nE741CUB_Z EQU  *\n         MVC   #71DCUB,=CL12'      0.0000'\nE741CUB_X EQU  *\n* --- R71DPB -----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741DPB_Z\n         L     R07,SMF74DPB\n         XR    R06,R06\n         M     R06,=F'10000'\n         DR    R06,R01\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DDPB,EDWORK4+5\n         B     E741DPB_X\nE741DPB_Z EQU  *\n         MVC   #71DDPB,=CL12'      0.0000'\nE741DPB_X EQU  *\n* --- R71DVB -----------------------------------------------------\n         L     R01,SMF74MEC\n         LTR   R01,R01\n         BZ    E741DVB_Z\n         L     R07,SMF74DVB\n         XR    R06,R06\n         M     R06,=F'128'\n*        D     R06,=F'1000'\n*        M     R06,=F'10000'\n         M     R06,=F'10'\n         DR    R06,R01\n         CVD   R07,PK_AREA\n         MVC   EDWORK4,EDMASK4\n         ED    EDWORK4,PK_AREA             100.00\n         MVC   #71DDVB,EDWORK4+5\n         B     E741DVB_X\nE741DVB_Z EQU  *\n         MVC   #71DDVB,=CL12'      0.0000'\nE741DVB_X EQU  *\n* ----------------------------------------------------------------\n*        L     R01,SMF74RSV\n*        S     R01,SMF74UTL\n*        ST    R01,#71DXXX\n*        LTR   R01,R01\n*        BZ    E741USE_Z\n*        XR    R06,R06\n*        L     R07,#H74SAM\n*        M     R06,=F'1000000'\n*        DR    R06,R01\n*        CVD   R07,PK_AREA\n*        MVC   EDWORK4,EDMASK4\n*        ED    EDWORK4,PK_AREA             100.00\n*        MVC   #71DUSE,EDWORK4+5\nE741USE_Z EQU  *\n*        MVC   #71DUSE,=CL12'      0.0000'\nE741USE_X EQU  *\n* ----------------------------------------------------------------\n         PUT   TYPE71D,#741D\n*\nE741N    EQU   *\n         LH    R01,SMF74DDL\n         LA    R10,0(R01,R10)\n*\n         LH    R01,#SMF74DDN\n         BCTR  R01,0\n         STH   R01,#SMF74DDN\n         LTR   R01,R01\n         BNZ   E741D\n*\n         DROP  R10\nE741X    EQU   *\n         B     EDIT74X\n*======================================================================\n*--- record type 74 - 2 XCF Section -----------------------------------\n*======================================================================\n#SMF742SN DS   H\nEDIT742_XCF EQU *\n* --- Request Data section ---\n         L     R10,SMF742SO\n         LH    R01,SMF742SN\n         LTR   R01,R01\n         BZ    E742XCF_NEXT\n         STH   R01,#SMF742SN\n*\n         LA    R10,RECAREA(R10)\n         USING R742SYS,R10\nE742XCF  EQU   *\n         LA    R01,L'#72X                Length\n         LA    R02,#72X                  Address\n         MVI   #72X,X'40'                OUT AREA SPACE CLEAR\nE742XCF_CLR EQU *\n         CL    R01,=F'256'\n         BNH   E742XCF_CLRX\n*\n         MVC   1(256,R02),0(R02)\n         S     R01,=F'256'\n         LA    R02,256(R02)\n         B     E742XCF_CLR\nE742XCF_CLRX EQU *\n         BCTR  R01,0\n         BCTR  R01,0\n         EX    R01,EXCLR\n*EXCLR    MVC   1(0,R02),0(R02)\n*\n         LA    R01,PARTX\nE742XCF_INIT EQU *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E742XCF_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C','\n         LA    R01,4(R01)\n         B     E742XCF_INIT\nE742XCF_INITX EQU *\n*\n         MVC   #72XDAT,#H74DAT           Monitor start time\n         MVC   #72XIST,#H74IST           Monitor start time\n         L     R01,#H74INT               Interval time\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #72XINT,EDWORK+12\n* --- R742SNME ---------------------------------------------------\n         MVC   #742SNME,R742SNME         R742SNME\n*\n* --- R742STCN ---------------------------------------------------\n         CLC   R742STCN,=CL8' '\n         BE    E742XCF_STCN_SKP1\n         MVC   #742STCN,R742STCN         R742STCN\n         B     E742XCF_STCN_SKP2\nE742XCF_STCN_SKP1 EQU *\n         MVC   #742STCN,=CL8'INBOUND'    R742STCN\nE742XCF_STCN_SKP2 EQU *\n*\n* --- R742SPTH ---------------------------------------------------\n         L     R01,R742SPTH              R742SPTH\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SPTH,EDWORK+8\n*\n* --- R742SBSY ---------------------------------------------------\n         L     R01,R742SBSY              R742SBSY\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SBSY,EDWORK+8\n*\n* --- R742SNOP ---------------------------------------------------\n         L     R01,R742SNOP              R742SNOP\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SNOP,EDWORK+8\n*\n* --- R742SMXB ---------------------------------------------------\n         L     R01,R742SMXB              R742SMXB\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SMXB,EDWORK+8\n*\n* --- R742SBIG ---------------------------------------------------\n         L     R01,R742SBIG              R742SBIG\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SBIG,EDWORK+8\n*\n* --- R742SFIT ---------------------------------------------------\n         L     R01,R742SFIT              R742SFIT\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SFIT,EDWORK+8\n*\n* --- R742SSML ---------------------------------------------------\n         L     R01,R742SSML              R742SSML\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SSML,EDWORK+8\n*\n* --- R742SOVR ---------------------------------------------------\n         L     R01,R742SOVR              R742SOVR\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742SOVR,EDWORK+8\n*\n* --- R742STCL ---------------------------------------------------\n         L     R01,R742STCL              R742STCL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742STCL,EDWORK+8\n*\n* ----------------------------------------------------------------\n         PUT   TYPE72X,#72X\n         LH    R01,SMF742SL\n         LA    R10,0(R10,R01)\n         LH    R01,#SMF742SN\n         BCTR  R01,0\n         STH   R01,#SMF742SN\n         LTR   R01,R01\n         BNZ   E742XCF\n*        BCT   R12,E742XCF\nE742XCF_NEXT EQU *\n         B     EDIT742_XCFR\n         DROP  R10\n*\n*======================================================================\n*--- record type 74 - 2 XCF Section -----------------------------------\n*======================================================================\n#SMF742PN DS   H\nEDIT742_XCF2 EQU *\n* --- Route data section ---\n         L     R10,SMF742PO\n         LH    R01,SMF742PN\n         LTR   R01,R01\n         BZ    E742XCF2_X\n         STH   R01,#SMF742PN\n*\n         LA    R10,RECAREA(R10)\n         USING R742PTH,R10\nE742XCF2 EQU   *\n         LA    R01,L'#72P                Length\n         LA    R02,#72P                  Address\n         MVI   #72P,X'40'                OUT AREA SPACE CLEAR\nE742XCF_CLR2 EQU *\n         CL    R01,=F'256'\n         BNH   E742XCF_CLRX2\n*\n         MVC   1(256,R02),0(R02)\n         S     R01,=F'256'\n         LA    R02,256(R02)\n         B     E742XCF_CLR2\nE742XCF_CLRX2 EQU *\n         BCTR  R01,0\n         BCTR  R01,0\n         EX    R01,EXCLR\n*EXCLR    MVC   1(0,R02),0(R02)\n*\n         LA    R01,PARTP\nE742XCF2_INIT EQU *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E742XCF2_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C','\n         LA    R01,4(R01)\n         B     E742XCF2_INIT\nE742XCF2_INITX EQU *\n*\n         MVC   #72PDAT,#H74DAT           Monitor start time\n         MVC   #72PIST,#H74IST           Monitor start time\n         L     R01,#H74INT               Interval time\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #72PINT,EDWORK+12\n* ----------------------------------------------------------------\n         CLI   RTNAME,C' '\n         BE    E742XCF_PDIR0_SKPX\n*\n         CLC   RTNAME(8),=CL8'INBOUND '\n         BE    E742XCF_PDIR0_SKP1\n         CLC   RTNAME(8),=CL8'OUTBOUND'\n         BE    E742XCF_PDIR0_SKP2\n         B     E742XCF2_NEXT\nE742XCF_PDIR0_SKP1 EQU *\n         TM    R742PDIR,X'80'\n         BO    E742XCF_PDIR0_SKPX\n         B     E742XCF2_NEXT\nE742XCF_PDIR0_SKP2 EQU *\n         TM    R742PDIR,X'40'\n         BO    E742XCF_PDIR0_SKPX\n         B     E742XCF2_NEXT\nE742XCF_PDIR0_SKPX EQU *\n* ----------------------------------------------------------------\n         CLI   PTHNAME,C' '\n         BE    E742XCF_PTH_FOUND\n         CLC   PTHNAME(03),=CL3'ALL'\n         BE    E742XCF_PTH_FOUND\n*\n         LA    R01,R742PDEV              PDEV : R01\n         LA    R15,L'R742PDEV\n         LA    R01,0(R01,R15)\n         BCTR  R01,0\nE742XCF_PTH_LOOP1 EQU *\n         CLI   0(R01),C' '\n         BNE   E742XCF_PTH_LOOP1_EXIT\n         BCTR  R01,0\n         BCT   R15,E742XCF_PTH_LOOP1\nE742XCF_PTH_LOOP1_EXIT EQU *\n         LTR   R15,R15\n         BZ    E742XCF_NEXTCHK1\n         BCTR  R15,0\n         LA    R02,L'PTHNAME\n         LA    R01,PTHNAME\nE742XCF_PTH_LOOP2 EQU *\n         CLI   0(R01),C' '\n         BE    E742XCF_NEXTCHK1\n         EX    R15,EXCLCPDEV\n         BE    E742XCF_PTH_FOUND\n         LA    R01,1(R01)\n         BCT   R02,E742XCF_PTH_LOOP2\n         B     E742XCF_NEXTCHK1\nEXCLCPDEV CLC   0(0,R01),R742PDEV\n*\nE742XCF_NEXTCHK1 EQU *\n         LA    R01,R742PODV              PODV : R01\n         LA    R15,L'R742PODV\n         LA    R01,0(R01,R15)\n         BCTR  R01,0\nE742XCF_PTH_LOOP3 EQU *\n         CLI   0(R01),C' '\n         BNE   E742XCF_PTH_LOOP3_EXIT\n         BCTR  R01,0\n         BCT   R15,E742XCF_PTH_LOOP3\nE742XCF_PTH_LOOP3_EXIT EQU *\n         LTR   R15,R15\n         BZ    E742XCF_NEXTCHK2\n         BCTR  R15,0\n         LA    R02,L'PTHNAME\n         LA    R01,PTHNAME\nE742XCF_PTH_LOOP4 EQU *\n         CLI   0(R01),C' '\n         BE    E742XCF_NEXTCHK2\n         EX    R15,EXCLCPODV\n         BE    E742XCF_PTH_FOUND\n         LA    R01,1(R01)\n         BCT   R02,E742XCF_PTH_LOOP4\n         B     E742XCF_NEXTCHK2\nEXCLCPODV CLC   0(0,R01),R742PODV\n*\nE742XCF_NEXTCHK2 EQU *\n         LA    R01,R742PSTR              PSTR : R01\n         LA    R15,L'R742PSTR\n         LA    R01,0(R01,R15)\n         BCTR  R01,0\nE742XCF_PTH_LOOP5 EQU *\n         CLI   0(R01),C' '\n         BNE   E742XCF_PTH_LOOP5_EXIT\n         BCTR  R01,0\n         BCT   R15,E742XCF_PTH_LOOP5\nE742XCF_PTH_LOOP5_EXIT EQU *\n         LTR   R15,R15\n         BZ    E742XCF_NEXTCHK3\n         BCTR  R15,0\n         LA    R02,L'PTHNAME\n         LA    R01,PTHNAME\nE742XCF_PTH_LOOP6 EQU *\n         CLI   0(R01),C' '\n         BE    E742XCF_NEXTCHK3\n         EX    R15,EXCLCPSTR\n         BE    E742XCF_PTH_FOUND\n         LA    R01,1(R01)\n         BCT   R02,E742XCF_PTH_LOOP6\n         B     E742XCF_NEXTCHK3\nEXCLCPSTR CLC   0(0,R01),R742PSTR\n*\nE742XCF_NEXTCHK3 EQU *\n         B     E742XCF2_NEXT\n*\nE742XCF_PTH_FOUND EQU *\n*\n* --- R742PNME ---------------------------------------------------\n         MVC   #742PNME,R742PNME         R742PNME\n*\n* --- R742PDEV ---------------------------------------------------\n         TM    R742PDIR,X'80'\n         BO    E742XCF_PDEV_SKP1\n         MVC   #742PODV,R742PDEV         R742PDEV ( outbound )\n         B     E742XCF_PDEV_SKPX\nE742XCF_PDEV_SKP1 EQU *\n         MVC   #742PDEV,R742PDEV         R742PDEV ( inbound )\nE742XCF_PDEV_SKPX EQU *\n*\n*\n* --- R742PTCN ---------------------------------------------------\n         CLC   R742PTCN,=CL8' '\n         BE    E742XCF_PTCN_SKP1\n         MVC   #742PTCN,R742PTCN         R742PTCN\n         B     E742XCF_PTCN_SKP2\nE742XCF_PTCN_SKP1 EQU *\n*        MVC   #742PTCN,=CL8'INBOUND'    R742PTCN\nE742XCF_PTCN_SKP2 EQU *\n*\n* --- R742PSTR ---------------------------------------------------\n         CLC   R742PSTR,=CL16' '\n         BE    E742XCF_PSTR_SKP1\n         MVC   #742PSTR,R742PSTR         R742PSTR\n         B     E742XCF_PSTR_SKP2\nE742XCF_PSTR_SKP1 EQU *\n*        MVC   #742PSTR,=CL16'CTC'       R742PSTR\nE742XCF_PSTR_SKP2 EQU *\n*\n* --- R742PSTF ---------------------------------------------------\n         TM    R742PSTF,X'80'\n         BO    E742XCF_PSTF_SKP1\n         TM    R742PSTF,X'40'\n         BO    E742XCF_PSTF_SKP2\n         TM    R742PSTF,X'20'\n         BO    E742XCF_PSTF_SKP3\n         B     E742XCF_PSTF_SKP4\nE742XCF_PSTF_SKP1 EQU *\n         MVC   #742PSTF,=CL8'ACTIVE'\n         B     E742XCF_PSTF_SKP4\nE742XCF_PSTF_SKP2 EQU *\n         MVC   #742PSTF,=CL8'DEACTIVE'\n         B     E742XCF_PSTF_SKP4\nE742XCF_PSTF_SKP3 EQU *\n         MVC   #742PSTF,=CL8'RESET '\n         B     E742XCF_PSTF_SKP4\nE742XCF_PSTF_SKP4 EQU *\n*\n* --- R742PDIR ---------------------------------------------------\n         TM    R742PDIR,X'80'\n         BO    E742XCF_PDIR_SKP1\n         TM    R742PDIR,X'40'\n         BO    E742XCF_PDIR_SKP2\n         B     E742XCF_PDIR_SKP3\nE742XCF_PDIR_SKP1 EQU *\n         MVC   #742PDIR,=CL8'INBOUND'\n         B     E742XCF_PDIR_SKP3\nE742XCF_PDIR_SKP2 EQU *\n         MVC   #742PDIR,=CL8'OUTBOUND'\n         B     E742XCF_PDIR_SKP3\nE742XCF_PDIR_SKP3 EQU *\n*\n* --- R742PTYP ---------------------------------------------------\n         CLI   R742PTYP,X'01'\n         BE    E742XCF_PTYP_SKP1\n         CLI   R742PTYP,X'03'\n         BE    E742XCF_PTYP_SKP2\n         B     E742XCF_PTYP_SKP3\nE742XCF_PTYP_SKP1 EQU *\n         MVC   #742PTYP,=CL3'CTC'\n         B     E742XCF_PTYP_SKP3\nE742XCF_PTYP_SKP2 EQU *\n         MVC   #742PTYP,=CL3'STR'\n         B     E742XCF_PTYP_SKP3\nE742XCF_PTYP_SKP3 EQU *\n*\n* --- R742PONA ---------------------------------------------------\n         TM    R742PDIR,X'80'\n         BO    E742XCF_PONA_SKP1\n         MVC   #742PONAT,R742PONA         R742PONA ( inbound )\n         MVC   #742PONAF,R742PNME         R742PNME\n         B     E742XCF_PONA_SKPX\nE742XCF_PONA_SKP1 EQU *\n         MVC   #742PONAF,R742PONA         R742PONA ( outbound )\n         MVC   #742PONAT,R742PNME         R742PNME\nE742XCF_PONA_SKPX EQU *\n*\n* --- R742PODV ---------------------------------------------------\n         TM    R742PDIR,X'80'\n         BO    E742XCF_PODV_SKP1\n         MVC   #742PDEV,R742PODV         R742PODV ( outbound )\n         B     E742XCF_PODV_SKPX\nE742XCF_PODV_SKP1 EQU *\n         MVC   #742PODV,R742PODV         R742PODV ( inbound )\nE742XCF_PODV_SKPX EQU *\n*\n* --- R742PSTA ---------------------------------------------------\n         TM    R742PSTA,X'80'\n         BO    E742XCF_PSTA_SKP1\n         TM    R742PSTA,X'40'\n         BO    E742XCF_PSTA_SKP2\n         TM    R742PSTA,X'20'\n         BO    E742XCF_PSTA_SKP3\n         TM    R742PSTA,X'10'\n         BO    E742XCF_PSTA_SKP4\n         TM    R742PSTA,X'08'\n         BO    E742XCF_PSTA_SKP5\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP1 EQU *\n         MVC   #742PSTA,=CL8'START'\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP2 EQU *\n         MVC   #742PSTA,=CL8'RESTART'\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP3 EQU *\n         MVC   #742PSTA,=CL8'ACTIVE'\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP4 EQU *\n         MVC   #742PSTA,=CL8'STOP'\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP5 EQU *\n         MVC   #742PSTA,=CL8'WAIT'\n         B     E742XCF_PSTA_SKP6\nE742XCF_PSTA_SKP6 EQU *\n*\n* --- R742PRET ---------------------------------------------------\n         L     R01,R742PRET              R742PRET\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PRET,EDWORK+8\n*\n* --- R742PRST ---------------------------------------------------\n         TM    R742PDIR,X'40'            if not outbound then ,\n         BNO   E742XCF_PRST_SKP1\n         L     R01,R742PRST              R742PRST\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PRST,EDWORK+8\nE742XCF_PRST_SKP1 EQU *\n*\n* --- R742PMXM ---------------------------------------------------\n         L     R01,R742PMXM              R742PMXM\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PMXM,EDWORK+8\n*\n* --- R742PSIG ---------------------------------------------------\n         L     R01,R742PSIG              R742PSIG\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PSIG,EDWORK+8\n*\n* --- R742PQLN ---------------------------------------------------\n         L     R01,R742PQLN              R742PQLN\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PQLN,EDWORK+8\n*\n* --- R742PIBR ---------------------------------------------------\n         TM    R742PDIR,X'80'            if not inbound then ,\n         BNO   E742XCF_PIBR_SKP1\n         L     R01,R742PIBR              R742PIBR\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PIBR,EDWORK+8\nE742XCF_PIBR_SKP1 EQU *\n*\n* --- R742PSUS ---------------------------------------------------\n         TM    R742PDIR,X'40'            if not outbound then ,\n         BNO   E742XCF_PSUS_SKP1\n         L     R01,R742PSUS              R742PSUS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PSUS,EDWORK+8\nE742XCF_PSUS_SKP1 EQU *\n*\n* --- R742PAPP ---------------------------------------------------\n         TM    R742PDIR,X'40'            if not outbound then ,\n         BNO   E742XCF_PAPP_SKP1\n         L     R01,R742PAPP              R742PAPP\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #742PAPP,EDWORK+8\nE742XCF_PAPP_SKP1 EQU *\n*\n* ----------------------------------------------------------------\n         PUT   TYPE72P,#72P\nE742XCF2_NEXT EQU *\n         LH    R01,SMF742PL\n         LA    R10,0(R10,R01)\n         LH    R01,#SMF742PN\n         BCTR  R01,0\n         STH   R01,#SMF742PN\n         LTR   R01,R01\n         BNZ   E742XCF2\n*        BCT   R12,E742XCF2\nE742XCF2_X EQU *\n         B     EDIT742_XCF2R\n         DROP  R10\n*\n*======================================================================\n*--- record type 74 - 4 CF Section ------------------------------------\n*======================================================================\n* R10 : CF section base.\n* R11 : CF section loop counter.\nEDIT744_CF EQU *\n         MVI   #74,X'40'                 OUT AREA SPACE CLEAR\n         MVC   #74+1(L'#74-1),#74\n*\n         LA    R01,PARTCF\nE744CF_INIT EQU *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E744CF_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C','\n         LA    R01,4(R01)\n         B     E744CF_INIT\nE744CF_INITX EQU *\n*\n         MVC   #74CDAT,#H74DAT           Monitor start time\n         MVC   #74CIST,#H74IST           Monitor start time\n         L     R01,#H74INT               Interval time\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #74CINT,EDWORK+12\n* --- Local Coupling Facility Data Section ---\n         L     R10,SMF74DCS              SMF74DCS\n         LH    R11,SMF74DCL              SMF74DCL\n         LA    R10,RECAREA(R10)\n         USING R744FLCF,R10\n*\n* --- R744FNAM ---------------------------------------------------\n         MVC   #744FNAM,R744FNAM         R744FNAM\n         CLI   CFNAME,C' '\n         BE    E744CF_FNAM_LOOP2_FOUND\n         CLC   STRNAME(03),=CL3'ALL'\n         BE    E744CF_FNAM_LOOP2_FOUND\n*\n         LA    R01,#744FNAM\n         LA    R15,L'R744FNAM\n         LA    R01,0(R01,R15)\n         BCTR  R01,0\nE744CF_FNAM_LOOP1 EQU *\n         CLI   0(R01),C' '\n         BNE   E744CF_FNAM_LOOP1_EXIT\n         BCTR  R01,0\n         BCT   R15,E744CF_FNAM_LOOP1\nE744CF_FNAM_LOOP1_EXIT EQU *\n         LTR   R15,R15\n         BZ    E744CF_NEXT\n         BCTR  R15,0\n         LA    R02,L'CFNAME\n         LA    R01,CFNAME\nE744CF_FNAM_LOOP2 EQU *\n         CLI   0(R01),C' '\n         BE    E744CF_NEXT\n         EX    R15,EXCLCF\n         BE    E744CF_FNAM_LOOP2_FOUND\n         LA    R01,1(R01)\n         BCT   R02,E744CF_FNAM_LOOP2\n         B     E744CF_NEXT\nEXCLCF   CLC   0(0,R01),R744FNAM\nE744CF_FNAM_LOOP2_FOUND EQU *\n* --- R744FSYS ---------------------------------------------------\n         MVC   #744FSYS,R744FSYS         R744FSYS\n* --- R744FFLG ---------------------------------------------------\n         TM    R744FFLG,X'80'            R744FFLG\n         BNO   E744FFLG_SKP1\n         MVC   #744FFLG,=CL4'CONN'\nE744FFLG_SKP1 EQU *\n         TM    R744FFLG,X'40'            R744FFLG\n         BNO   E744FFLG_SKP2\n         MVC   #744FFLG,=CL4'ACT '\nE744FFLG_SKP2 EQU *\n* --- R744FPAM ---------------------------------------------------\n         L     R01,R744FPAM              R744FPAM\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744FPAM,EDWORK+12\n*\n* --- R744FPBC ---------------------------------------------------\n         MVC   WKFP(8),R744FPBC\n         LA    R01,WKFP\n         LA    R02,#744FPBC\n         BAL   R14,DF\n*\n* --- R744FSCG ---------------------------------------------------\n         L     R01,R744FSCG              R744FSCG\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744FSCG,EDWORK+12\n*\n* --- R744FSCU ---------------------------------------------------\n         L     R01,R744FSCU              R744FSCU\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744FSCU,EDWORK+12\n*\n* --- R744FSCL ---------------------------------------------------\n         L     R01,R744FSCL              R744FSCL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744FSCL,EDWORK+12\n*\n* --- R744FSCC ---------------------------------------------------\n         MVC   WKFP(8),R744FSCC\n         LA    R01,WKFP\n         LA    R02,#744FSCC\n         BAL   R14,DF\n*\n* --- R744FTOR ---------------------------------------------------\n         MVC   WKFP(8),R744FTOR\n         LA    R01,WKFP\n         LA    R02,#744FTOR\n         BAL   R14,DF\n*\n* --- R744FAIL ---------------------------------------------------\n         MVC   WKFP(8),R744FAIL\n         LA    R01,WKFP\n         LA    R02,#744FAIL\n         BAL   R14,DF\n*\n* --- R744FTIM ---------------------------------------------------\n         MVC   WKFP(8),R744FTIM\n         LA    R01,WKFP\n         LA    R02,#744FTIM\n         BAL   R14,DF\n*\n* --- R744FSQU ---------------------------------------------------\n         MVC   WKFP(8),R744FSQU\n         LA    R01,WKFP\n         LA    R02,#744FSQU\n         BAL   R14,DF\n*\n* --- R744FCTM ---------------------------------------------------\n         MVC   WKFP(8),R744FCTM\n         LA    R01,WKFP\n         LA    R02,#744FCTM\n         BAL   R14,DF\n*\n* --- R744FCSQ ---------------------------------------------------\n         MVC   WKFP(8),R744FCSQ\n         LA    R01,WKFP\n         LA    R02,#744FCSQ\n         BAL   R14,DF\n*\n* --- Processer Data Section ---\n         L     R10,SMF744PO\n         LH    R11,SMF744PN\n         LA    R10,RECAREA(R10)\n         USING R744PROC,R10\n         XC    #CF#CPUT,#CF#CPUT\n         XC    #CF#USET,#CF#USET\n*\n* -- Loop All CPU --\n*\n* #CF#CPUT (long fixed) <- R744PBSY of all CPU\n* #CF#USET (long fixed) <- R744PBSY + R744PWAI of all CPU\n*\n* ??? maximam interval is 71 minitus ?\n*\nE744CPU  EQU   *\n* Total CPU Used time.\n         L     R01,R744PBSY              calculate X'....????'\n         N     R01,=X'0000FFFF'\n         LH    R14,#CF#USET+6            #CF#USET : X'............xxxx'\n         N     R14,=X'0000FFFF'\n         AR    R01,R14\n         STH   R01,#CF#USET+6\n         SRL   R01,16\n         L     R02,R744PBSY              calculate X'????....'\n         SRL   R02,16\n         AR    R01,R02\n         LH    R14,#CF#USET+4            #CF#USET : X'........xxxx....'\n         N     R14,=X'0000FFFF'\n         AR    R01,R14\n         STH   R01,#CF#USET+4\n         SRL   R01,16\n         L     R14,#CF#USET              #CF#USET : X'xxxxxxxx........'\n         AR    R01,R14\n         ST    R01,#CF#USET\n* Total CPU time.\n         L     R01,R744PBSY\n         L     R06,R744PWAI\n         AR    R06,R01                   Total CPU Time.\n         LR    R01,R06                   calculate X'....????'\n         N     R01,=X'0000FFFF'\n         XR    R14,R14\n         LH    R14,#CF#CPUT+6            #CF#CPUT : X'............xxxx'\n         N     R14,=X'0000FFFF'\n         AR    R01,R14\n         STH   R01,#CF#CPUT+6\n         SRL   R01,16\n         LR    R02,R06                   calculate X'????....'\n         SRL   R02,16\n         AR    R01,R02\n         XR    R14,R14\n         LH    R14,#CF#CPUT+4            #CF#CPUT : X'........xxxx....'\n         N     R14,=X'0000FFFF'\n         AR    R01,R14\n         STH   R01,#CF#CPUT+4\n         SRL   R01,16\n         L     R14,#CF#CPUT              #CF#CPUT : X'xxxxxxxx........'\n         AR    R01,R14\n         ST    R01,#CF#CPUT\n*\n* CPU NO\n*+       LA    R01,R744PNUM\n*+       CALL  @HC,((R01),#74CPU,4)\n* CPU USE\n*+       LA    R01,R744PBSY\n*+       CALL  @HC,((R01),#74USE,4)\n* CPU UN-USE\n*+       LA    R01,R744PWAI\n*+       CALL  @HC,((R01),#74UNU,4)\n* -- Caricurate CPU% --\n*         R744PBSY <used time>           / x\n*  ----------------------------------------- * 10000 = percentage * 100\n*  ( R744PWAI + R744PBSY ) <total time>  / x\n*\n*+       L     R01,R744PWAI\n*+       L     R06,R744PBSY\n*+       AR    R01,R06\nE744CF_USE_LOP1 EQU *\n*+       CL    R01,=X'0000FFFF'\n*+       BNH   E744CF_USE_LOP1X\n*+       SRL   R01,1                     denominator / 2\n*+       SRL   R06,1                     numerator / 2\n*+       B     E744CF_USE_LOP1\nE744CF_USE_LOP1X EQU *\n*+       MH    R06,=H'10000'\n*+       SRDA  R06,32\n*+       DR    R06,R01\n*\n*+       CVD   R07,PK_AREA\n*+       MVC   EDW100,EDM100\n*+       ED    EDW100,PK_AREA             100.00\n*+       MVC   #74PCT,EDW100+9\n*\n*+       PUT   TYPE74,#74\n         LH    R01,SMF744PL\n         LA    R10,0(R10,R01)\n         BCT   R11,E744CPU\n* --- Averaged CPU Used percentage of Interval\n*        MVC   #74CPU,=CL8'????????'\n* CPU USE\n*\n* I see \"Re:Cool Asm Tricks (was MVC)\" of ASSEMBLER-L.\n*                            posted by Bill Fairchild.\n*\n* > how to convert a string of hex byte into printable,\n* > eyeball-readable EBCDIC\n*\n*        CALL  @HC,(#CF#USET,#74USE2,8)\n         UNPK  EBCDIC_A(9),#CF#USET(5)\n         UNPK  EBCDIC_A+8(9),#CF#USET+4(5)\n         TR    EBCDIC_A(16),=C'0123456789ABCDEF'-X'F0'\n         MVC   #74USE2(8),EBCDIC_A\n         MVC   #74USE2+9(8),EBCDIC_A+8\n* CPU UN-USE\n*        CALL  @HC,(#CF#CPUT,#74UNU2,8)\n         UNPK  EBCDIC_A(9),#CF#CPUT(5)\n         UNPK  EBCDIC_A+8(9),#CF#CPUT+4(5)\n         TR    EBCDIC_A(16),=C'0123456789ABCDEF'-X'F0'\n         MVC   #74UNU2(8),EBCDIC_A\n         MVC   #74UNU2+9(8),EBCDIC_A+8\n*\n* -- Caricurate CPU% --\n*         R744PBSY <used time>           / x\n*  ----------------------------------------- * 10000 = percentage * 100\n*  ( R744PWAI + R744PBSY ) <total time>  / x\n*\n         LM    R14,R15,#CF#USET\n         LM    R06,R07,#CF#CPUT\nE744CF_USE_LOP2 EQU *\n         LTR   R06,R06\n         BNZ   E744CF_USE_LOP21\n         CL    R07,=X'7FFFFFFF'\n         BNH   E744CF_USE_LOP2X\nE744CF_USE_LOP21 EQU *\n         SRDL  R06,1                     denominator / 2\n         SRDL  R14,1                     numerator / 2\n         B     E744CF_USE_LOP2\nE744CF_USE_LOP2X EQU *\n         M     R14,=F'1000000'\n         LTR   R07,R07\n         BZ    E744CF_USE_LOP2Z\n         DR    R14,R07\n         B     E744CF_USE_LOP2ZX\nE744CF_USE_LOP2Z EQU *\n         XR    R15,R15\n*\nE744CF_USE_LOP2ZX EQU *\n         CVD   R15,PK_AREA\n         MVC   EDW101,EDM101\n         ED    EDW101,PK_AREA             100.00\n         MVC   #74PCT,EDW101+7\n*\n         PUT   TYPE74,#74\nE744CF_NEXT EQU *\n         B     EDIT744_CFR\n*--- record type 74 - 4 Structure request section ---------------------\n* R10 : Structure request section base.\n* R11 : Cache data section base.\n* R12 : Structure request section loop counter\nEDIT744_STR EQU *\n* --- Request Data section ---\n         L     R10,SMF744SO\n         LH    R12,SMF744SN\n         LTR   R12,R12\n         BZ    EDIT744_STRX\n         LA    R10,RECAREA(R10)\n         USING R744SREQ,R10\nE744STR  EQU   *\n         LA    R01,L'#74S                Length\n         LA    R02,#74S                  Address\n         MVI   #74S,X'40'                OUT AREA SPACE CLEAR\nE744STR_CLR EQU *\n         CL    R01,=F'256'\n         BNH   E744STR_CLRX\n*\n         MVC   1(256,R02),0(R02)\n         S     R01,=F'256'\n         LA    R02,256(R02)\n         B     E744STR_CLR\nE744STR_CLRX EQU *\n         BCTR  R01,0\n         BCTR  R01,0\n         EX    R01,EXCLR\n*        STC   R01,*+5\n*        MVC   1(0,R02),0(R02)\n*EXCLR    MVC   1(0,R02),0(R02)\n*\n         LA    R01,PART\nE744STR_INIT EQU *\n         CLC   0(4,R01),=X'FFFFFFFF'\n         BE    E744STR_INITX\n         L     R02,0(R01)\n         MVI   0(R02),C','\n         LA    R01,4(R01)\n         B     E744STR_INIT\nE744STR_INITX EQU *\n*\n         MVC   #74SDAT,#H74DAT           Monitor start time\n         MVC   #74SIST,#H74IST           Monitor start time\n         L     R01,#H74INT               Interval time\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #74SINT,EDWORK+12\n* --- R744SNAM ---------------------------------------------------\n         MVC   #744SNAM,R744SNAM         R744SNAM\n         CLI   STRNAME,C' '\n         BE    E744STR_SNAM_LOOP2_FOUND\n         CLC   STRNAME(03),=CL3'ALL'\n         BE    E744STR_SNAM_LOOP2_FOUND\n*\n         LA    R01,#744SNAM\n         LA    R15,L'R744SNAM\n         LA    R01,0(R01,R15)\n         BCTR  R01,0\nE744STR_SNAM_LOOP1 EQU *\n         CLI   0(R01),C' '\n         BNE   E744STR_SNAM_LOOP1_EXIT\n         BCTR  R01,0\n         BCT   R15,E744STR_SNAM_LOOP1\nE744STR_SNAM_LOOP1_EXIT EQU *\n         LTR   R15,R15\n         BZ    E744STR_NEXT\n         BCTR  R15,0\n         LA    R02,L'STRNAME\n         LA    R01,STRNAME\nE744STR_SNAM_LOOP2 EQU *\n         CLI   0(R01),C' '\n         BE    E744STR_NEXT\n*        STC   R15,*+5\n*        CLC   0(0,R01),R744SNAM\n         EX    R15,EXCLCS\n         BE    E744STR_SNAM_LOOP2_FOUND\n         LA    R01,1(R01)\n         BCT   R02,E744STR_SNAM_LOOP2\n         B     E744STR_NEXT\nEXCLCS   CLC   0(0,R01),R744SNAM\nE744STR_SNAM_LOOP2_FOUND EQU *\n* --- R744STYP ---------------------------------------------------\n*        LA    R01,R744STYP\n*        CALL  @HC,((R01),#744STYP,1)\n         UNPK  EBCDIC_A(3),R744STYP(2)\n         TR    EBCDIC_A(2),=C'0123456789ABCDEF'-X'F0'\n         MVC   #744STYP(2),EBCDIC_A\n*\n         CLI   R744STYP,X'01'\n         BE    E744STR_STYP_LIST\n         CLI   R744STYP,X'02'\n         BE    E744STR_STYP_LIST\n         CLI   R744STYP,X'03'\n         BE    E744STR_STYP_LOCK\n         CLI   R744STYP,X'04'\n         BE    E744STR_STYP_CACHE\nE744STR_STYP_LIST EQU *\n         MVC   #744STYC,=CL5'LIST'\n         B     E744STR_STYP_X\nE744STR_STYP_LOCK EQU *\n         MVC   #744STYC,=CL5'LOCK'\n         B     E744STR_STYP_X\nE744STR_STYP_CACHE EQU *\n         MVC   #744STYC,=CL5'CACHE'\n         B     E744STR_STYP_X\nE744STR_STYP_X EQU *\n*\n* --- R744SLEL and R744SLEM --------------------------------------\n         CLI   R744STYP,X'01'            List Structure\n         BE    E744STR_SLE_CALC\n         CLI   R744STYP,X'02'            List Structure\n         BE    E744STR_SLE_CALC\n         CLI   R744STYP,X'03'            Lock Structure\n         BE    E744STR_SLE_CALC\n*\n         MVC   #744SLEM,=CL8'     N/A'\n*        MVI   #744SLE@,C'/'\n         MVC   #744SLEL,=CL8'     N/A'\n         B     E744STR_SLEX\nE744STR_SLE_CALC EQU *\n         L     R01,R744SLEM              R744SLEM\n         CL    R01,=F'100000000'\n         BNL   E744STR_SLEMOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLEM,EDWORK+8\n         B     E744STR_SLEMX\nE744STR_SLEMOV EQU *\n         MVC   #744SLEM,=CL8'OVER.'\nE744STR_SLEMX EQU *\n*        MVI   #744SLE@,C'/'\n*\n         L     R01,R744SLEL              R744SLEL\n         CL    R01,=F'100000000'\n         BNL   E744STR_SLELOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLEL,EDWORK+8\n         B     E744STR_SLELX\nE744STR_SLELOV EQU *\n         MVC   #744SLEL,=CL8'OVER.'\nE744STR_SLELX EQU *\n         L     R01,R744SLEL              R744SLEL\n         LTR   R01,R01                   if 0 ?\n         BZ    E744STR_SLEX\n         XR    R06,R06\n         L     R07,R744SLEM              R07 <- R744SLEM*1000/R744SLEL\n         M     R06,=F'1000'\n         DR    R06,R01\n         LR    R15,R07                   R15 <- Use% * 10\n         XR    R06,R06\n         D     R06,=F'10'                R07 <- Use% /10 *10\n         MH    R07,=H'10'\n         SR    R15,R07\n         CL    R15,=F'5'                 If last figure < 5\n         BL    E744STR_SLEP_1\n         XR    R06,R06\n         D     R06,=F'10'\n         LA    R07,1(R07)\n         B     E744STR_SLEP_2\nE744STR_SLEP_1 EQU *\n         XR    R06,R06\n         D     R06,=F'10'\nE744STR_SLEP_2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLEP,EDWORK+13\n         MVI   #744SLEZ,C'%'\nE744STR_SLEX  EQU *\n*\n* --- R744SLTL and R744SLTM --------------------------------------\n         CLI   R744STYP,X'03'            Lock Structure\n         BE    E744STR_SLT_CALC\n         CLI   R744STYP,X'02'            List Structure\n         BE    E744STR_SLT_CALC\n*\n         MVC   #744SLTM,=CL8'     N/A'\n*        MVI   #744SLT@,C'/'\n         MVC   #744SLTL,=CL8'     N/A'\n         B     E744STR_SLTX\nE744STR_SLT_CALC EQU *\n         L     R01,R744SLTM              R744SLTM\n         CL    R01,=F'100000000'\n         BNL   E744STR_SLTMOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLTM,EDWORK+8\n         B     E744STR_SLTMX\nE744STR_SLTMOV EQU *\n         MVC   #744SLTM,=CL8'OVER.'\nE744STR_SLTMX EQU *\n*        MVI   #744SLT@,C'/'\n*\n         L     R01,R744SLTL              R744SLTL\n         CL    R01,=F'100000000'\n         BNL   E744STR_SLTLOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLTL,EDWORK+8\n         B     E744STR_SLTLX\nE744STR_SLTLOV EQU *\n         MVC   #744SLTL,=CL8'OVER.'\nE744STR_SLTLX EQU *\n*\n         L     R01,R744SLTL              R744SLTL\n         LTR   R01,R01                   if 0 ?\n         BZ    E744STR_SLTX\n         XR    R06,R06\n         L     R07,R744SLTM              R07 <- R744SLTM*1000/R744SLTL\n         M     R06,=F'1000'\n         DR    R06,R01\n         LR    R15,R07                   R15 <- Use% * 10\n         XR    R06,R06\n         D     R06,=F'10'                R07 <- Use% /10 *10\n         MH    R07,=H'10'\n         SR    R15,R07\n         CL    R15,=F'5'                 If last figure < 5\n         BL    E744STR_SLTP_1\n         XR    R06,R06\n         D     R06,=F'10'\n         LA    R07,1(R07)\n         B     E744STR_SLTP_2\nE744STR_SLTP_1 EQU *\n         XR    R06,R06\n         D     R06,=F'10'\nE744STR_SLTP_2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLTP,EDWORK+13\n         MVI   #744SLTZ,C'%'\nE744STR_SLTX  EQU *\n* --- R744SSTA ---------------------------------------------------\n* Long Float : iinnnnnn nnnnnnnn\n*              \u00b5\u00b5                : index   ( 1byte,  8bit )\n*                \u00b5\u00b5\u00b5\u00b5\u00b5\u00b5 \u00b5\u00b5\u00b5\u00b5\u00b5\u00b5\u00b5\u00b5 : decimal ( 7byte, 56bit )\n*\n* decimal point : 56bit - ((index - 64) * 4)\n*\n         MVC   WKFP(8),R744SSTA\n         LA    R01,WKFP\n         LA    R02,#744SSTA\n         BAL   R14,DF\n*\n* --- R744STRC ---------------------------------------------------\n         MVC   WKFP,R744STRC\n         LA    R01,WKFP\n         LA    R02,#744STRC\n         BAL   R14,DF\n*\n* --- R744STAC ---------------------------------------------------\n         MVC   WKFP(8),R744STAC\n         LA    R01,WKFP\n         LA    R02,#744STAC\n         BAL   R14,DF\n*\n* --- R744SARC ---------------------------------------------------\n         MVC   WKFP(8),R744SARC\n         LA    R01,WKFP\n         LA    R02,#744SARC\n         BAL   R14,DF\n*\n* --- R744SATM ---------------------------------------------------\n         L     R01,R744SATM\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SATM+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SATM(20),EDWORK2+12\n*\n         MVC   WKFP(8),R744SARC\n         LA    R01,WKFP\n         LA    R02,PK_AREA\n         BAL   R14,DP\n         CLC   PK_AREA(8),=PL8'0'\n         BE    E744STR_SATM1\n         DP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK,EDMASK\n         ED    EDWORK(16),PK_AREA2\n         MVC   #744SATMA(10),EDWORK+6\n         B     E744STR_SATMX\nE744STR_SATM1 EQU *\n         MVC   #744SATMA(10),=CL10'         0'\nE744STR_SATMX EQU *\n*\n* --- R744SASQ ---------------------------------------------------\n         L     R01,R744SASQ\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SASQ+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SASQ(20),EDWORK2+12\n*\n* --- R744SSRC ---------------------------------------------------\n         MVC   WKFP(8),R744SSRC\n         LA    R01,WKFP\n         LA    R02,#744SSRC\n         BAL   R14,DF\n*\n* --- R744SSTM ---------------------------------------------------\n         L     R01,R744SSTM\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SSTM+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SSTM(20),EDWORK2+12\n*\n         MVC   WKFP(8),R744SSRC\n         LA    R01,WKFP\n         LA    R02,PK_AREA\n         BAL   R14,DP\n         CLC   PK_AREA(8),=PL8'0'\n         BE    E744STR_SSTM1\n         DP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK,EDMASK\n         ED    EDWORK(16),PK_AREA2\n         MVC   #744SSTMA(10),EDWORK+6\n         B     E744STR_SSTMX\nE744STR_SSTM1 EQU *\n         MVC   #744SSTMA(10),=CL10'         0'\nE744STR_SSTMX EQU *\n*\n* --- R744SSSQ ---------------------------------------------------\n         L     R01,R744SSSQ\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SSSQ+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SSSQ(20),EDWORK2+12\n*\n* --- R744SQRC ---------------------------------------------------\n         MVC   WKFP(8),R744SQRC\n         LA    R01,WKFP\n         LA    R02,#744SQRC\n         BAL   R14,DF\n*\n* --- R744SQTM ---------------------------------------------------\n         L     R01,R744SQTM\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SQTM+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SQTM(20),EDWORK2+12\n*\n         MVC   WKFP(8),R744SQRC\n         LA    R01,WKFP\n         LA    R02,PK_AREA\n         BAL   R14,DP\n         CLC   PK_AREA(8),=PL8'0'\n         BE    E744STR_SQTM1\n         DP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK,EDMASK\n         ED    EDWORK(16),PK_AREA2\n         MVC   #744SQTMA(10),EDWORK+6\n         B     E744STR_SQTMX\nE744STR_SQTM1 EQU *\n         MVC   #744SQTMA(10),=CL10'         0'\nE744STR_SQTMX EQU *\n*\n* --- R744SQSQ ---------------------------------------------------\n         L     R01,R744SQSQ\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SQSQ+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SQSQ(20),EDWORK2+12\n*\n* --- R744SDRC ---------------------------------------------------\n         MVC   WKFP(8),R744SDRC\n         LA    R01,WKFP\n         LA    R02,#744SDRC\n         BAL   R14,DF\n*\n* --- R744SDTM ---------------------------------------------------\n         L     R01,R744SDTM\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SDTM+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SDTM(20),EDWORK2+12\n*\n* --- R744SDSQ ---------------------------------------------------\n         L     R01,R744SDSQ\n         CVD   R01,PK_AREA\n         MVC   PK_AREA2(16),=PL16'4294967296'\n         MP    PK_AREA2(16),PK_AREA(8)\n         L     R01,R744SDSQ+4\n         CVD   R01,PK_AREA\n         AP    PK_AREA2(16),PK_AREA(8)\n         MVC   EDWORK2,EDMASK32\n         ED    EDWORK2(32),PK_AREA2\n         MVC   #744SDSQ(20),EDWORK2+12\n*\n* --- R744SDMP ---------------------------------------------------\n         MVC   WKFP(8),R744SDMP\n         LA    R01,WKFP\n         LA    R02,#744SDMP\n         BAL   R14,DF\n*\n* --- R744SHTO ---------------------------------------------------\n         MVC   WKFP(8),R744SHTO\n         LA    R01,WKFP\n         LA    R02,#744SHTO\n         BAL   R14,DF\n*\n* --- R744SHMN ---------------------------------------------------\n         L     R01,R744SHMN\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SHMN,EDWORK+8\n*\n* --- R744SHMX ---------------------------------------------------\n         L     R01,R744SHMX\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SHMX,EDWORK+8\n*\n* --- R744SLTO ---------------------------------------------------\n         MVC   WKFP(8),R744SLTO\n         LA    R01,WKFP\n         LA    R02,#744SLTO\n         BAL   R14,DF\n*\n* --- R744SLMN ---------------------------------------------------\n         L     R01,R744SLMN\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLMN,EDWORK+8\n*\n* --- R744SLMX ---------------------------------------------------\n         L     R01,R744SLMX\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SLMX,EDWORK+8\n*\n* --- R744SDTO ---------------------------------------------------\n         MVC   WKFP(8),R744SDTO\n         LA    R01,WKFP\n         LA    R02,#744SDTO\n         BAL   R14,DF\n*\n* --- R744SDMN ---------------------------------------------------\n         L     R01,R744SDMN\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SDMN,EDWORK+8\n*\n* --- R744SDMX ---------------------------------------------------\n         L     R01,R744SDMX\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SDMX,EDWORK+8\n*\n* --- R744SCN ----------------------------------------------------\n         MVC   WKFP(8),R744SCN\n         LA    R01,WKFP\n         LA    R02,#744SCN\n         BAL   R14,DF\n*\n* --- R744SFCN ---------------------------------------------------\n         MVC   WKFP(8),R744SFCN\n         LA    R01,WKFP\n         LA    R02,#744SFCN\n         BAL   R14,DF\n*\n* --- R744SSIZ ---------------------------------------------------\n         L     R01,R744SSIZ\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SSIZ,EDWORK+8\n*\n* --- R744SMAS ---------------------------------------------------\n         L     R01,R744SMAS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SMAS,EDWORK+8\n*\n* --- R744SMIS ---------------------------------------------------\n         L     R01,R744SMIS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SMIS,EDWORK+8\n*\n* --- R744SDEC ---------------------------------------------------\n         L     R01,R744SDEC\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SDEC,EDWORK+8\n*\n* --- R744SDEL ---------------------------------------------------\n         L     R01,R744SDEL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SDEL,EDWORK+8\n*\n* --- R744SNLH ---------------------------------------------------\n         L     R01,R744SNLH\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SNLH,EDWORK+8\n*\n* --- R744SMAE and R744SCUE --------------------------------------\n         CLI   R744STYP,X'01'            List Structure\n         BE    E744STR_SCUE_CALC\n         CLI   R744STYP,X'02'            List Structure\n         BE    E744STR_SCUE_CALC\n*\n         MVC   #744SMAE,=CL8'     N/A'\n         MVC   #744SCUE,=CL8'     N/A'\n         B     E744STR_SCUX\nE744STR_SCUE_CALC EQU *\n         L     R01,R744SCUE              R744SLEM\n         CL    R01,=F'100000000'\n         BNL   E744STR_SCUEOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SCUE,EDWORK+8\n         B     E744STR_SCUEX\nE744STR_SCUEOV EQU *\n         MVC   #744SCUE,=CL8'OVER.'\nE744STR_SCUEX EQU *\n*\n         L     R01,R744SMAE              R744SLEL\n         CL    R01,=F'100000000'\n         BNL   E744STR_SMAEOV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SMAE,EDWORK+8\n         B     E744STR_SMAEX\nE744STR_SMAEOV EQU *\n         MVC   #744SMAE,=CL8'OVER.'\nE744STR_SMAEX EQU *\n         L     R01,R744SMAE              R744SCUE\n         LTR   R01,R01                   if 0 ?\n         BZ    E744STR_SCUEX\n         XR    R06,R06\n         L     R07,R744SCUE              R07 <- R744SCUE*1000/R744SMAE\n         M     R06,=F'1000'\n         DR    R06,R01\n         LR    R15,R07                   R15 <- Use% * 10\n         XR    R06,R06\n         D     R06,=F'10'                R07 <- Use% /10 *10\n         MH    R07,=H'10'\n         SR    R15,R07\n         CL    R15,=F'5'                 If last figure < 5\n         BL    E744STR_SCUEP_1\n         XR    R06,R06\n         D     R06,=F'10'\n         LA    R07,1(R07)\n         B     E744STR_SCUEP_2\nE744STR_SCUEP_1 EQU *\n         XR    R06,R06\n         D     R06,=F'10'\nE744STR_SCUEP_2 EQU *\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744SCUP,EDWORK+13\n         MVI   #744SCUZ,C'%'\nE744STR_SCUX  EQU *\n*\n* ---------------------------------------------------------------------\n*--- record type 74 - 4 cache data section ----------------------------\n* ---------------------------------------------------------------------\n         CLI   R744STYP,X'04'            Cache Structure\n         BE    E744STR_CACHE\n*\n         B     E744STR_CACHEX\nE744STR_CACHE EQU *\n* --- R744CDSI and R744CDNE --------------------------------------\n         LH    R01,R744CDSI              cache data section index\n         BCTR  R01,0\n         MH    R01,SMF744CL              cache data section length\n         L     R02,SMF744CO              cache data section offset\n         LA    R01,0(R01,R02)\n         LA    R11,RECAREA(R01)\n         USING R744CACH,R11\n*\n* --- R744CRHC ---------------------------------------------------\n         MVC   WKFP(8),R744CRHC\n         LA    R01,WKFP\n         LA    R02,#744CRHC\n         BAL   R14,DF\n*\n* --- R744CRMD ---------------------------------------------------\n         MVC   WKFP(8),R744CRMD\n         LA    R01,WKFP\n         LA    R02,#744CRMD\n         BAL   R14,DF\n*\n* --- R744CRMA ---------------------------------------------------\n         MVC   WKFP(8),R744CRMA\n         LA    R01,WKFP\n         LA    R02,#744CRMA\n         BAL   R14,DF\n*\n* --- R744CRMN ---------------------------------------------------\n         MVC   WKFP(8),R744CRMN\n         LA    R01,WKFP\n         LA    R02,#744CRMN\n         BAL   R14,DF\n*\n* --- R744CRMT ---------------------------------------------------\n         MVC   WKFP(8),R744CRMT\n         LA    R01,WKFP\n         LA    R02,#744CRMT\n         BAL   R14,DF\n*\n* --- R744CWH0 ---------------------------------------------------\n         MVC   WKFP(8),R744CWH0\n         LA    R01,WKFP\n         LA    R02,#744CWH0\n         BAL   R14,DF\n*\n* --- R744CWH1 ---------------------------------------------------\n         MVC   WKFP(8),R744CWH1\n         LA    R01,WKFP\n         LA    R02,#744CWH1\n         BAL   R14,DF\n*\n* --- R744CWH? ( R744CWH0 + R744CWH1 ) ---------------------------\n         LD    FR06,R744CWH0\n         AD    FR06,R744CWH1\n         STD   FR06,WKFP\n         LA    R01,WKFP\n         LA    R02,#744CWHX\n         BAL   R14,DF\n*\n* --- R744CWMN ---------------------------------------------------\n         MVC   WKFP(8),R744CWMN\n         LA    R01,WKFP\n         LA    R02,#744CWMN\n         BAL   R14,DF\n*\n* --- R744CWMI ---------------------------------------------------\n         MVC   WKFP(8),R744CWMI\n         LA    R01,WKFP\n         LA    R02,#744CWMI\n         BAL   R14,DF\n*\n* --- R744CWMT ---------------------------------------------------\n         MVC   WKFP(8),R744CWMT\n         LA    R01,WKFP\n         LA    R02,#744CWMT\n         BAL   R14,DF\n*\n* --- R744CDER ---------------------------------------------------\n         MVC   WKFP(8),R744CDER\n         LA    R01,WKFP\n         LA    R02,#744CDER\n         BAL   R14,DF\n*\n* --- R744CDTR ---------------------------------------------------\n         MVC   WKFP(8),R744CDTR\n         LA    R01,WKFP\n         LA    R02,#744CDTR\n         BAL   R14,DF\n*\n* --- R744CXDR ---------------------------------------------------\n         MVC   WKFP(8),R744CXDR\n         LA    R01,WKFP\n         LA    R02,#744CXDR\n         BAL   R14,DF\n*\n* --- R744CXFW ---------------------------------------------------\n         MVC   WKFP(8),R744CXFW\n         LA    R01,WKFP\n         LA    R02,#744CXFW\n         BAL   R14,DF\n*\n* --- R744CXNI ---------------------------------------------------\n         MVC   WKFP(8),R744CXNI\n         LA    R01,WKFP\n         LA    R02,#744CXNI\n         BAL   R14,DF\n*\n* --- R744CXCI ---------------------------------------------------\n         MVC   WKFP(8),R744CXCI\n         LA    R01,WKFP\n         LA    R02,#744CXCI\n         BAL   R14,DF\n*\n* --- XI'S -------------------------------------------------------\n         LD    FR06,R744CXDR\n         AD    FR06,R744CXFW\n         AD    FR06,R744CXNI\n         AD    FR06,R744CXCI\n         STD   FR06,WKFP\n         LA    R01,WKFP\n         LA    R02,#744XIS\n         BAL   R14,DF\n*\n* --- R744CCOC ---------------------------------------------------\n         MVC   WKFP(8),R744CCOC\n         LA    R01,WKFP\n         LA    R02,#744CCOC\n         BAL   R14,DF\n*\n* --- R744CRSM ---------------------------------------------------\n         MVC   WKFP(8),R744CRSM\n         LA    R01,WKFP\n         LA    R02,#744CRSM\n         BAL   R14,DF\n*\n* --- R744CTSF ---------------------------------------------------\n         MVC   WKFP(8),R744CTSF\n         LA    R01,WKFP\n         LA    R02,#744CTSF\n         BAL   R14,DF\n*\n* --- R744CDEC ---------------------------------------------------\n         L     R01,R744CDEC\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744CDEC,EDWORK+8\n*\n* --- R744CDAC ---------------------------------------------------\n         L     R01,R744CDAC\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744CDAC,EDWORK+8\n*\n* --- R744CTCC ---------------------------------------------------\n         L     R01,R744CTCC\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744CTCC,EDWORK+8\n*\n* --- R744CDTA ---------------------------------------------------\n         L     R01,R744CDTA\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #744CDTA,EDWORK+8\n*\n* --- R744CRLC ---------------------------------------------------\n         MVC   WKFP(8),R744CRLC\n         LA    R01,WKFP\n         LA    R02,#744CRLC\n         BAL   R14,DF\n*\n* --- R744CPRL ---------------------------------------------------\n         MVC   WKFP(8),R744CPRL\n         LA    R01,WKFP\n         LA    R02,#744CPRL\n         BAL   R14,DF\n*\n* --- R744CXRL ---------------------------------------------------\n         MVC   WKFP(8),R744CXRL\n         LA    R01,WKFP\n         LA    R02,#744CXRL\n         BAL   R14,DF\n*\n* --- R744CWUC ---------------------------------------------------\n         MVC   WKFP(8),R744CWUC\n         LA    R01,WKFP\n         LA    R02,#744CWUC\n         BAL   R14,DF\nE744STR_CACHEX EQU *\n*\n         PUT   TYPE74S,#74S\nE744STR_NEXT EQU *\n         LH    R01,SMF744SL\n         LA    R10,0(R10,R01)\n         BCT   R12,E744STR\nEDIT744_STRX EQU *\n         B     EDIT744_STRR\n         DROP  R10\n* --- decimal to fixed -------------------------------------\nDF       EQU   *\n* R01 <- from\n* R02 <- to\n         XR    R00,R00                   clear\n         IC    R00,0(R01)                load index\n         LTR   R00,R00                   if all zero\n         BZ    DF_NOFD                     not floating decimal\n         CH    R00,=H'64'                less 1\n         BL    DF_LOW\n         SH    R00,=H'64'\n         SLL   R00,2\n         LA    R15,56\n         SR    R15,R00\n         LM    R00,R01,0(R01)\n         N     R00,=X'00FFFFFF'\n* unnnn... how should I do coding.\nDF_LOP1  EQU   *\n         SRDA  R00,1\n         BCT   R15,DF_LOP1\n*        EX    R15,EXSHIFT\n*        STC   R02,*+7\n*        SRDA  R00,0\n         CVD   R01,DF_PKA\n         MVC   DF_EDW,DF_EDM\n         ED    DF_EDW,DF_PKA\n         MVC   0(8,R02),DF_EDW+8\n         BR    R14\nDF_NOFD  EQU   *\n         MVC   0(8,R02),=CL8'       0'\n         BR    R14\nDF_LOW   EQU   *\n         MVC   MSG#0000(09),=CL09'DF ERROR:'\n*        CALL  @HC,((R01),MSG#0000+9,8)\n         UNPK  EBCDIC_A(9),0(5,R01)\n         UNPK  EBCDIC_A+8(9),4(5,R01)\n         TR    EBCDIC_A(16),=C'0123456789ABCDEF'-X'F0'\n         MVC   MSG#0000+9(8),EBCDIC_A\n         MVC   MSG#0000+18(8),EBCDIC_A+8\n*\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         ABEND 1,DUMP\nEXSHIFT  SRDA  R00,0\n         DS    0D\nDF_PKA   DS    PL16\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nDF_EDM   DC    XL16'40202020202020202020202020202120'\nDF_EDW   DS    XL16\nWKFP     DS    XL8\n*\n* --- decimal to fixed -------------------------------------\nDP       EQU   *\n* R01 <- from\n* R02 <- to\n         XR    R00,R00                   clear\n         IC    R00,0(R01)                load index\n         LTR   R00,R00                   if all zero\n         BZ    DP_NOFD                     not floating decimal\n         CH    R00,=H'64'                less 1\n         BL    DP_LOW\n         SH    R00,=H'64'\n         SLL   R00,2\n         LA    R15,56\n         SR    R15,R00\n         LM    R00,R01,0(R01)\n         N     R00,=X'00FFFFFF'\n* unnnn... how should I do coding.\nDP_LOP1  EQU   *\n         SRDA  R00,1\n         BCT   R15,DP_LOP1\n*        EX    R15,EXSHIFT\n*        STC   R02,*+7\n*        SRDA  R00,0\n         CVD   R01,DP_PKA\n         MVC   0(8,R02),DP_PKA\n         BR    R14\nDP_NOFD  EQU   *\n         MVC   0(8,R02),=PL8'0'\n         BR    R14\nDP_LOW   EQU   *\n         MVC   MSG#0000(09),=CL09'DF ERROR:'\n*        CALL  @HC,((R01),MSG#0000+9,8)\n         UNPK  EBCDIC_A(9),0(5,R01)\n         UNPK  EBCDIC_A+8(9),4(5,R01)\n         TR    EBCDIC_A(16),=C'0123456789ABCDEF'-X'F0'\n         MVC   MSG#0000+9(8),EBCDIC_A\n         MVC   MSG#0000+18(8),EBCDIC_A+8\n*\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n         ABEND 1,DUMP\n         DS    0D\nDP_PKA   DS    PL8\n*\n*** END OF PROCESS ***********************************************\n@BYE     EQU   *\n         CLOSE (INDCB,,TYPE74)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*** DCB **********************************************************\nINDCB    DCB   DSORG=PS,MACRF=(GM),DDNAME=INDD,                        *\n               EODAD=@BYE\nTYPE74   DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE74\nTYPE74S  DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE74S\nTYPE72X  DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE72X\nTYPE72P  DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE72P\nTYPE71D  DCB   DSORG=PS,MACRF=(PM),DDNAME=TYPE71D\n*** DEFINE STORAGE ***********************************************\n         DS    0F\nSAVEAREA DS    18F                       Savearea\n* --- month translation table ---\n*                   1       2       3       4       5       6\n*                   7       8       9      10      11      12\nMONTH1   DC    FL1'31',FL1'28',FL1'31',FL1'30',FL1'31',FL1'30'\n         DC    FL1'31',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\nMONTH2   DC    FL1'31',FL1'29',FL1'31',FL1'30',FL1'31',FL1'30'\n         DC    FL1'31',FL1'31',FL1'30',FL1'31',FL1'30',FL1'31'\nMONTH    DC    FL1'00',FL1'00',FL1'00',FL1'00',FL1'00',FL1'00'\n         DC    FL1'00',FL1'00',FL1'00',FL1'00',FL1'00',FL1'00'\n         DS    0D\nUPK_AREA DS    XL16                      un-pack area\n         DS    XL16                      un-pack area\nEBCDIC_A DS    CL32                      ebcdic area\nPK_AREA  DS    PL16                      pack work area\nPK_AREA2 DS    PL16\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDMASK32 DS    0XL32\n         DC    XL16'40202020202020202020202020202020'\n         DC    XL16'20202020202020202020202020202120'\nEDMASK2  DC    XL16'40202020202020202020202020202020'\nEDMASK5  DC    XL17'40202020202020202021204B2020202020'\nEDWORK5  DS    XL17\nEDMASK4  DC    XL17'4020202020202020202021204B20202020'\nEDWORK4  DS    XL17\nEDM100   DC    XL17'40202020202020202020202021204B2020'\nEDW100   DS    XL17\nEDM101   DC    XL17'4020202020202020202021204B20202020'\nEDW101   DS    XL17\nEDWORK   DS    XL16\nEDWORK2  DS    XL32\n*\nWK#D1    DS    0D\nWK#DF1   DS    F\nWK#DF2   DS    F\nWK#F1    DS    F\nWK#F2    DS    F\nWK#H1    DS    H\n* --- MVC ---\nPARMMVC  MVC   PARMWA(0),2(R01)\nEXCLR    MVC   1(0,R02),0(R02)\n* --- parameter ---\nPARMWA   DS    CL100\nSTRNAME  DS    CL100\nCFNAME   DS    CL100\nRTNAME   DS    CL100\nPTHNAME  DS    CL100\n*\n* --- R744 work area ---\n#H74DAT  DS    XL10                      RMF Section Start Date\n#H74IST  DS    CL08'HH.MM.SS'            RMF Section Start Time\n#H74INT  DS    F                         RMF Section Interval Sec\n#H74INTM DS    F                         RMF Section Interval m sec\n#H74SAM  DS    F                         RMF sample#\n#H74SARC DS    F                         R744SARC\n#H74SSRC DS    F                         R744SSRC\n#H74SQRC DS    F                         R744SQRC\n#H71RESP DS    F                         RESPONSE TIME\n#WK#XI   DS    F                         R744SQRC\n#WK#WRIT DS    F                         R744SQRC\n#CF#CPUT DS    D                         Total CPU time\n#CF#USET DS    D                         Total CPU used time\n         DS    0F\n* --- WTO messages ---\nWTOINFO  WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A000 DC    AL2(L'MSG#0000)\nMSG#0000 DC    CL80'R74EDIT PARM:'\n*\n*--- Title - CF ------------------------------------------------------\n#74TTL   DS    0CL256\n         DC    CL10'DATE'               Start Date yyyy.mm.dd\n         DC    CL1','\n         DC    CL8'TIME'                 Start Time\n         DC    CL1','\n         DC    CL4'INTV'                 Interval\n         DC    CL1','\n         DC    CL8'CF-NAME'              CF Name\n         DC    CL1','\n         DC    CL8'SYSTEM'               System Name\n         DC    CL1','\n         DC    CL4'FLAG'                 Status Flag\n         DC    CL1','\n         DC    CL10'CPU%'                CPU Used%\n         DC    CL1','\n         DC    CL17'CPU USED TIME(HEX)'  CPU Used Time\n         DC    CL1','\n         DC    CL17'TOTAL TIME(HEX)'     CPU Un-Used Time\n         DC    CL1','\n         DC    CL4'LINK'                 CF Link#\n         DC    CL1','\n         DC    CL8'FAIL'                 Fail#\n         DC    CL1','\n         DC    CL4'SUBC'                 Deinfe sub-channel\n         DC    CL1','\n         DC    CL4'USED'                 Used sub-channel\n         DC    CL1','\n         DC    CL4'USFL'                 useful sub-channel\n         DC    CL1','\n         DC    CL8'CONTAINT'             containtion\n         DC    CL1','\n         DC    CL8'REQUEST'              total request\n         DC    CL1','\n         DC    CL8'FAIL REQ'             fail count\n         DC    CL1','\n         DC    CL8'FAIL TME'             fail service time\n         DC    CL1','\n         DC    CL8'FAIL T*2'\n         DC    CL1','\n         DC    CL8'R744FCTM'\n         DC    CL1','\n         DC    CL8'R744FCSQ'\n         DC    CL256' '\n*--- CF output area --------------------------------------------------\n#74      DS    0CL256\n#74CDAT  DS    0CL10                     Start Date yyyy.mm.dd\n#74CDATY DS    CL4                       Start Date yyyy\n#74CDAT1 DS    CL1                       Start Date\n#74CDATM DS    CL2                       Start Date mm\n#74CDAT2 DS    CL1                       Start Date\n#74CDATD DS    CL2                       Start Date dd\n#101     DS    CL1\n#74CIST  DS    CL8                       Start Time\n#102     DS    CL1\n#74CINT  DS    CL4                       Interval\n#103     DS    CL1\n#744FNAM DS    CL8                       CF Name\n#107     DS    CL1\n#744FSYS DS    CL8                       System Name\n#108     DS    CL1\n#744FFLG DS    CL4                       Status Flag\n#109     DS    CL1\n#74PCT   DS    CL10                      CPU Used%\n#104     DS    CL1\n#74USE2  DS    CL17                      CPU Used Time\n#105     DS    CL1\n#74UNU2  DS    CL17                      CPU Un-Used Time\n#106     DS    CL1\n*74UNU3  DS    CL17                      CPU Un-Used Time\n*106A    DS    CL1\n#744FPAM DS    CL4                       CF Link#\n#110     DS    CL1\n#744FPBC DS    CL8                       Fail#\n#111     DS    CL1\n#744FSCG DS    CL4                       Deinfe sub-channel\n#112     DS    CL1\n#744FSCU DS    CL4                       Used sub-channel\n#113     DS    CL1\n#744FSCL DS    CL4                       useful sub-channel\n#114     DS    CL1\n#744FSCC DS    CL8                       containtion\n#115     DS    CL1\n#744FTOR DS    CL8                       total request\n#116     DS    CL1\n#744FAIL DS    CL8                       fail count\n#117     DS    CL1\n#744FTIM DS    CL8                       fail service time\n#118     DS    CL1\n#744FSQU DS    CL8                       useful sub-channel\n#119     DS    CL1\n#744FCTM DS    CL8                       useful sub-channel\n#120     DS    CL1\n#744FCSQ DS    CL8                       useful sub-channel\n         DS    CL1\n         DS    CL156\n*--- Title - Structure -----------------------------------------------\n#74STTL  DS    0CL1024\n         DC    CL10'DATE'                Start Date yyyy.mm.dd\n         DC    CL1','\n         DC    CL8'TIME'                 Start Time\n         DC    CL1','\n         DC    CL4'INTV'                 Interval\n         DC    CL1','\n         DC    CL16'R744SNAM'            Structure Name\n         DC    CL1','\n         DC    CL8'STYP,'                          Type\n         DC    CL1','\n         DC    CL8'R744SLEM'             R744SLEM\n         DC    CL1','\n         DC    CL8'R744SLEL'             R744SLEL\n         DC    CL1','\n         DC    CL3' '                    R744SLEM / R744SLEL * 100\n         DC    CL1'%'\n         DC    CL1','\n         DC    CL8'R744SLTM'             R744SLTM\n         DC    CL1','\n         DC    CL8'R744SLTL'             R744SLTL\n         DC    CL1','\n         DC    CL3' '                    R744SLTM / R755SLEL * 100\n         DC    CL1'%'\n         DC    CL1','\n         DC    CL8'R744SSTA'             R744SSTA\n         DC    CL1','\n         DC    CL8'R744STRC'             R744STRC\n         DC    CL1','\n         DC    CL8'R744STAC'             R744STAC\n         DC    CL1','\n         DC    CL8'R744SARC'             R744SARC\n         DC    CL1','\n         DC    CL20'R744SATM'            R744SATM\n         DC    CL1','\n         DC    CL10'SATM/SARC'           R744SATM\n         DC    CL1','\n         DC    CL20'R744SASQ'            R744SASQ\n         DC    CL1','\n         DC    CL8'R744SSRC'             R744SSRC\n         DC    CL1','\n         DC    CL20'R744SSTM'            R744SSTM\n         DC    CL1','\n         DC    CL10'SSTM/SSRC'           R744SSTM\n         DC    CL1','\n         DC    CL20'R744SSSQ'            R744SSSQ\n         DC    CL1','\n         DC    CL8'R744SQRC'             R744SQRC\n         DC    CL1','\n         DC    CL20'R744SQTM'            R744SQTM\n         DC    CL1','\n         DC    CL10'SQTM/SQRC'           R744SQTM\n         DC    CL1','\n         DC    CL20'R744SQSQ'            R744SQSQ\n         DC    CL1','\n         DC    CL8'R744SDRC'             R744SDRC\n         DC    CL1','\n         DC    CL20'R744SDTM'            R744SDTM\n         DC    CL1','\n         DC    CL20'R744SDSQ'            R744SDSQ\n         DC    CL1','\n         DC    CL8'R744SDMP'             R744SDMP\n         DC    CL1','\n         DC    CL8'R744SHTO'             R744SHTO\n         DC    CL1','\n         DC    CL8'R744SHMN'             R744SHMN\n         DC    CL1','\n         DC    CL8'R744SHMX'             R744SHMX\n         DC    CL1','\n         DC    CL8'R744SLTO'             R744SLTO\n         DC    CL1','\n         DC    CL8'R744SLMN'             R744SLMN\n         DC    CL1','\n         DC    CL8'R744SLMX'             R744SLMX\n         DC    CL1','\n         DC    CL8'R744SDTO'             R744SDTO\n         DC    CL1','\n         DC    CL8'R744SDMN'             R744SDMN\n         DC    CL1','\n         DC    CL8'R744SDMX'             R744SDMX\n         DC    CL1','\n         DC    CL8'R744SCN'              R744SCN\n         DC    CL1','\n         DC    CL8'R744SFCN'             R744SFCN\n         DC    CL1','\n         DC    CL8'R744SSIZ'             R744SSIZ\n         DC    CL1','\n         DC    CL8'R744SMAS'             R744SMAS\n         DC    CL1','\n         DC    CL8'R744SMIS'             R744SMIS\n         DC    CL1','\n         DC    CL8'R744SDEC'             R744SDEC\n         DC    CL1','\n         DC    CL8'R744SDEL'             R744SDEL\n         DC    CL1','\n         DC    CL8'R744SNLH'             R744SNLH\n         DC    CL1','\n         DC    CL8'R744SMAE'             R744SMAE\n         DC    CL1','\n         DC    CL8'R744SCUE'             R744SCUE\n         DC    CL1','\n         DC    CL4'   %'\n         DC    CL1','\n         DC    CL8'R744CRHC'             R744CRHC\n         DC    CL1','\n         DC    CL8'R744CRMD'             R744CRMD\n         DC    CL1','\n         DC    CL8'R744CRMA'             R744CRMA\n         DC    CL1','\n         DC    CL8'R744CRMN'             R744CRMN\n         DC    CL1','\n         DC    CL8'R744CRMT'             R744CRMT\n         DC    CL1','\n         DC    CL8'R744CWH0'             R744CWH0\n         DC    CL1','\n         DC    CL8'R744CWH1'             R744CWH1\n         DC    CL1','\n         DC    CL8'R744CWH?'             R744CWH0 + R744CWH1\n         DC    CL1','\n         DC    CL8'R744CWMN'             R744CWMN\n         DC    CL1','\n         DC    CL8'R744CWMI'             R744CWMI\n         DC    CL1','\n         DC    CL8'R744CWMT'             R744CWMT\n         DC    CL1','\n         DC    CL8'R744CDER'             R744CDER\n         DC    CL1','\n         DC    CL8'R744CDTR'             R744CDTR\n         DC    CL1','\n         DC    CL8'R744CXDR'             R744CXDR\n         DC    CL1','\n         DC    CL8'R744CXFW'             R744CXFW\n         DC    CL1','\n         DC    CL8'R744CXNI'             R744CXNI\n         DC    CL1','\n         DC    CL8'R744CXCI'             R744CXCI\n         DC    CL1','\n         DC    CL8'XI''S'                CXDR + XCFW + XCNI + XCCI\n         DC    CL1','\n         DC    CL8'R744CCOC'             R744CCOC\n         DC    CL1','\n         DC    CL8'R744CRSM'             R744CRSM\n         DC    CL1','\n         DC    CL8'R744CTSF'             R744CTSF\n         DC    CL1','\n         DC    CL8'R744CDEC'             R744CDEC\n         DC    CL1','\n         DC    CL8'R744CDAC'             R744CDAC\n         DC    CL1','\n         DC    CL8'R744CTCC'             R744CTCC\n         DC    CL1','\n         DC    CL8'R744CDTA'             R744CDTA\n         DC    CL1','\n         DC    CL8'R744CRLC'             R744CRLC\n         DC    CL1','\n         DC    CL8'R744CPRL'             R744CPRL\n         DC    CL1','\n         DC    CL8'R744CXRL'             R744CXRL\n         DC    CL1','\n         DC    CL8'R744CWUC'             R744CWUC\n         DC    256CL1' '\n*--- Structure output area -------------------------------------------\n#74S     DS    0CL1024\n#74SDAT  DS    0CL10                     Start Date yyyy.mm.dd\n#74SDATY DS    CL4                       Start Date yyyy\n#74SDAT1 DS    CL1                       Start Date\n#74SDATM DS    CL2                       Start Date mm\n#74SDAT2 DS    CL1                       Start Date\n#74SDATD DS    CL2                       Start Date dd\n#002A    DS    CL1\n#74SIST  DS    CL8                       Start Time\n#002     DS    CL1\n#74SINT  DS    CL4                       Interval\n#003     DS    CL1\n#744SNAM DS    CL16                      Structure Name\n#004     DS    CL1\n#744STYP DS    CL2                                 Type\n#005     DS    CL1\n#744STYC DS    CL5                                 Type\n#006     DS    CL1\n*744LTOT DS    CL8                       lst/dir entries tot\n*006A    DS    CL1                (LIST:SLEL,LOCK:SLEL,CACHE:SDEC)\n*744LCUR DS    CL8                       lst/dir entries cur\n*006B    DS    CL1                (LIST:SLEM,LOCK:SLEM,CACHE:CDEC)\n*744DTOT DS    CL8                       data element tot\n*006C    DS    CL1                (LIST:SMAE,LOCK:????,CACHE:SDEL)\n*744DCUR DS    CL8                       data element cur\n*006D    DS    CL1                (LIST:SCUE,LOCK:????,CACHE:CDAC)\n*744OTOT DS    CL8                       lock entries tot\n*006E    DS    CL1                (LIST:N/A ,LOCK:SLTL,CACHE:N/A )\n*744OCUR DS    CL8                       lock entries cur\n*006F    DS    CL1                (LIST:N/A ,LOCK:SLTM,CACHE:N/A )\n#744SLEM DS    CL8                       R744SLEM\n#744SLE@ DS    CL1'/'\n#744SLEL DS    CL8                       R744SLEL\n#007     DS    CL1\n#744SLEP DS    CL3                       R744SLEM / R744SLEL * 100\n#744SLEZ DS    CL1'%'\n#008     DS    CL1\n#744SLTM DS    CL8                       R744SLTM\n#744SLT@ DS    CL1'/'\n#744SLTL DS    CL8                       R744SLTL\n#009     DS    CL1\n#744SLTP DS    CL3                       R744SLTM / R755SLEL * 100\n#744SLTZ DS    CL1'%'\n#010     DS    CL1\n#744SSTA DS    CL8                       R744SSTA\n#011     DS    CL1\n#744STRC DS    CL8                       R744STRC\n#012     DS    CL1\n#744STAC DS    CL8                       R744STAC\n#013     DS    CL1\n#744SARC DS    CL8                       R744SARC\n#014     DS    CL1\n#744SATM DS    CL20                      R744SATM\n#015     DS    CL1\n#744SATMA DS   CL10                      R744SATM\n#015A    DS    CL1\n#744SASQ DS    CL20                      R744SASQ\n#016     DS    CL1\n#744SSRC DS    CL8                       R744SSRC\n#017     DS    CL1\n#744SSTM DS    CL20                      R744SSTM\n#018     DS    CL1\n#744SSTMA DS   CL10                      R744SSTM\n#018A    DS    CL1\n#744SSSQ DS    CL20                      R744SSSQ\n#019     DS    CL1\n#744SQRC DS    CL8                       R744SQRC\n#020     DS    CL1\n#744SQTM DS    CL20                      R744SQTM\n#021     DS    CL1\n#744SQTMA DS   CL10                      R744SQTM\n#021A    DS    CL1\n#744SQSQ DS    CL20                      R744SQSQ\n#022     DS    CL1\n#744SDRC DS    CL8                       R744SDRC\n#023     DS    CL1\n#744SDTM DS    CL20                      R744SDTM\n#024     DS    CL1\n#744SDSQ DS    CL20                      R744SDSQ\n#025     DS    CL1\n#744SDMP DS    CL8                       R744SDMP\n#026     DS    CL1\n#744SHTO DS    CL8                       R744SHTO\n#027     DS    CL1\n#744SHMN DS    CL8                       R744SHMN\n#028     DS    CL1\n#744SHMX DS    CL8                       R744SHMX\n#029     DS    CL1\n#744SLTO DS    CL8                       R744SLTO\n#030     DS    CL1\n#744SLMN DS    CL8                       R744SLMN\n#031     DS    CL1\n#744SLMX DS    CL8                       R744SLMX\n#032     DS    CL1\n#744SDTO DS    CL8                       R744SDTO\n#033     DS    CL1\n#744SDMN DS    CL8                       R744SDMN\n#034     DS    CL1\n#744SDMX DS    CL8                       R744SDMX\n#035     DS    CL1\n#744SCN  DS    CL8                       R744SCN\n#036     DS    CL1\n#744SFCN DS    CL8                       R744SFCN\n#037     DS    CL1\n#744SSIZ DS    CL8                       R744SSIZ\n#038     DS    CL1\n#744SMAS DS    CL8                       R744SMAS\n#039     DS    CL1\n#744SMIS DS    CL8                       R744SMIS\n#040     DS    CL1\n#744SDEC DS    CL8                       R744SDEC\n#041     DS    CL1\n#744SDEL DS    CL8                       R744SDEL\n#042     DS    CL1\n#744SNLH DS    CL8                       R744SNLH\n#043     DS    CL1\n#744SMAE DS    CL8                       R744SMAE\n#044     DS    CL1\n#744SCUE DS    CL8                       R744SCUE\n#045     DS    CL1\n#744SCUP DS    CL3\n#744SCUZ DS    CL1\n#045A    DS    CL1\n#744CRHC DS    CL8                       R744CRHC\n#046     DS    CL1\n#744CRMD DS    CL8                       R744CRMD\n#047     DS    CL1\n#744CRMA DS    CL8                       R744CRMA\n#048     DS    CL1\n#744CRMN DS    CL8                       R744CRMN\n#049     DS    CL1\n#744CRMT DS    CL8                       R744CRMT\n#050     DS    CL1\n#744CWH0 DS    CL8                       R744CWH0\n#051     DS    CL1\n#744CWH1 DS    CL8                       R744CWH1\n#052     DS    CL1\n#744CWHX DS    CL8                       R744CWH1\n#052A    DS    CL1\n#744CWMN DS    CL8                       R744CWMN\n#053     DS    CL1\n#744CWMI DS    CL8                       R744CWMI\n#054     DS    CL1\n#744CWMT DS    CL8                       R744CWMT\n#055     DS    CL1\n#744CDER DS    CL8                       R744CDER\n#056     DS    CL1\n#744CDTR DS    CL8                       R744CDTR\n#057     DS    CL1\n#744CXDR DS    CL8                       R744CXDR\n#058     DS    CL1\n#744CXFW DS    CL8                       R744CXFW\n#059     DS    CL1\n#744CXNI DS    CL8                       R744CXNI\n#060     DS    CL1\n#744CXCI DS    CL8                       R744CXCI\n#061     DS    CL1\n#744XIS  DS    CL8                       XI'S\n#061A    DS    CL1\n#744CCOC DS    CL8                       R744CCOC\n#062     DS    CL1\n#744CRSM DS    CL8                       R744CRSM\n#063     DS    CL1\n#744CTSF DS    CL8                       R744CTSF\n#064     DS    CL1\n#744CDEC DS    CL8                       R744CDEC\n#065     DS    CL1\n#744CDAC DS    CL8                       R744CDAC\n#066     DS    CL1\n#744CTCC DS    CL8                       R744CTCC\n#067     DS    CL1\n#744CDTA DS    CL8                       R744CDTA\n#068     DS    CL1\n#744CRLC DS    CL8                       R744CRLC\n#069     DS    CL1\n#744CPRL DS    CL8                       R744CPRL\n#070     DS    CL1\n#744CXRL DS    CL8                       R744CXRL\n#071     DS    CL1\n#744CWUC DS    CL8                       R744CWUC\n         DS    256C\n*--- Title - XCF -----------------------------------------------------\n#72XTTL  DS    0CL256\n         DC    CL10'DATE'               Start Date yyyy.mm.dd\n         DC    CL1','\n         DC    CL8'TIME'                 Start Time\n         DC    CL1','\n         DC    CL4'INTV'                 Interval\n         DC    CL1','\n         DC    CL8'SYSTEM'               System Name\n         DC    CL1','\n         DC    CL8'TRN CLAS'             Transport Class\n         DC    CL1','\n         DC    CL8'R742SPTH'             Available Path\n         DC    CL1','\n         DC    CL8'R742SBSY'             Busy\n         DC    CL1','\n         DC    CL8'R742SNOP'             no path available\n         DC    CL1','\n         DC    CL8'R742SMXB'             maxmam message buffer space\n         DC    CL1','\n         DC    CL8'R742SBIG'             big message\n         DC    CL1','\n         DC    CL8'R742SFIT'             fit message\n         DC    CL1','\n         DC    CL8'R742SSML'             small message\n         DC    CL1','\n         DC    CL8'R742SOVR'             over message\n         DC    CL1','\n         DC    CL8'R742STCL'             message length\n         DC    256CL1' '\n*---------------------------------------------------------------------\n#72PTTL  DS    0CL512\n         DC    CL10'DATE'               Start Date yyyy.mm.dd\n         DC    CL1','\n         DC    CL8'TIME'                 Start Time\n         DC    CL1','\n         DC    CL4'INTV'                 Interval\n         DC    CL1','\n         DC    CL8'SYSTEM'               System Name\n         DC    CL1','\n         DC    CL8'I/O'                  inbound/outbound\n         DC    CL1','\n         DC    CL8'TRA CLAS'             Transport Class\n         DC    CL1','\n         DC    CL3'TYP'                  CTC/Structure\n         DC    CL1','\n         DC    CL16'STRUCTURE NAME'      Structure Name\n         DC    CL1','\n         DC    CL4'FROM'                 From Device\n         DC    CL1','\n         DC    CL4'TO'                   To Device\n         DC    CL1','\n         DC    CL8'FROM'                 partner system ( from )\n         DC    CL1','\n         DC    CL8'TO'                   partner system ( to )\n         DC    CL1','\n         DC    CL8'R742PQLN'             outbound hold\n         DC    CL1','\n         DC    CL8'R742PSIG'             request\n         DC    CL1','\n         DC    CL8'R742PSUS'             avail\n         DC    CL1','\n         DC    CL8'R742PAPP'             busy\n         DC    CL1','\n         DC    CL8'R742PRST'             retry\n         DC    CL1','\n         DC    CL8'R742PRET'             max retries\n         DC    CL1','\n         DC    CL8'R742PMXM'             buffer space\n         DC    CL1','\n         DC    CL8'R742PIBR'             inbound reject\n         DC    CL1','\n         DC    CL8'R742PSTA'             status\n         DC    CL1','\n         DC    CL8'R742PSTF'             flag\n         DC    256C' '\n*--- XCF output area -------------------------------------------------\n#72X     DS    0CL256\n#72XDAT  DS    0CL10                     Start Date yyyy.mm.dd\n#72XDATY DS    CL4                       Start Date yyyy\n#72XDAT1 DS    CL1                       Start Date\n#72XDATM DS    CL2                       Start Date mm\n#72XDAT2 DS    CL1                       Start Date\n#72XDATD DS    CL2                       Start Date dd\n#201     DS    CL1\n#72XIST  DS    CL8                       Start Time\n#202     DS    CL1\n#72XINT  DS    CL4                       Interval\n#203     DS    CL1\n#742SNME DS    CL8                       System Name\n#204     DS    CL1\n#742STCN DS    CL8                       Transport Class\n#205     DS    CL1\n#742SPTH DS    CL8                       Available Path\n#206     DS    CL1\n#742SBSY DS    CL8                       Busy\n#207     DS    CL1\n#742SNOP DS    CL8                       no path available\n#208     DS    CL1\n#742SMXB DS    CL8                       maxmam message buffer space\n#209     DS    CL1\n#742SBIG DS    CL8                       big message\n#210     DS    CL1\n#742SFIT DS    CL8                       fit message\n#211     DS    CL1\n#742SSML DS    CL8                       small message\n#212     DS    CL1\n#742SOVR DS    CL8                       over message\n#213     DS    CL1\n#742STCL DS    CL8                       message length\n         DS    256C\n*--- XCF output area -------------------------------------------------\n#72P     DS    0CL512\n#72PDAT  DS    0CL10                     Start Date yyyy.mm.dd\n#72PDATY DS    CL4                       Start Date yyyy\n#72PDAT1 DS    CL1                       Start Date\n#72PDATM DS    CL2                       Start Date mm\n#72PDAT2 DS    CL1                       Start Date\n#72PDATD DS    CL2                       Start Date dd\n#301     DS    CL1\n#72PIST  DS    CL8                       Start Time\n#302     DS    CL1\n#72PINT  DS    CL4                       Interval\n#303     DS    CL1\n#742PNME DS    CL8                       System Name\n#304     DS    CL1\n#742PDIR DS    CL8                       inbound/outbound\n#305     DS    CL1\n#742PTCN DS    CL8                       Transport Class\n#306     DS    CL1\n#742PTYP DS    CL3                       CTC/Structure\n#307     DS    CL1\n#742PSTR DS    CL16                      Structure Name\n#308     DS    CL1\n#742PODV DS    CL4                       From Device\n#309     DS    CL1\n#742PDEV DS    CL4                       To Device\n#310     DS    CL1\n#742PONAF DS   CL8                       from\n#311     DS    CL1\n#742PONAT DS   CL8                       to\n#311A    DS    CL1\n#742PQLN DS    CL8                       outbound hold\n#312     DS    CL1\n#742PSIG DS    CL8                       request\n#313     DS    CL1\n#742PSUS DS    CL8                       avail\n#314     DS    CL1\n#742PAPP DS    CL8                       used\n#315     DS    CL1\n#742PRST DS    CL8                       restart\n#316     DS    CL1\n#742PRET DS    CL8                       max retries\n#317     DS    CL1\n#742PMXM DS    CL8                       buffer space\n#318     DS    CL1\n#742PIBR DS    CL8                       inbound reject\n#319     DS    CL1\n#742PSTA DS    CL8                       status\n#320     DS    CL1\n#742PSTF DS    CL8                       flag\n         DS    512C\n*---------------------------------------------------------------------\n#71DTTL  DS    0CL256\n         DC    CL10'DATE'               Start Date yyyy.mm.dd\n         DC    CL1' '\n         DC    CL8'TIME'                 Start Time\n         DC    CL1' '\n         DC    CL4'INTV'                 Interval\n         DC    CL1' '\n         DC    CL4'SID'                  System Name\n         DC    CL1' '\n         DC    CL4'LCU'                  LCU\n         DC    CL1' '\n         DC    CL4'ADDR'                 address\n         DC    CL1' '\n         DC    CL6'SERIAL'               volume serial\n         DC    CL1' '\n         DC    CL8'CUNAME'               control unit name\n         DC    CL1' '\n         DC    CL8'DEVNAME'              device name\n         DC    CL1' '\n         DC    CL12'    SSCH/SEC'        ssch per sec\n         DC    CL1' '\n         DC    CL12'    RESPONSE'        response\n         DC    CL1' '\n         DC    CL12'        IOSQ'        iosq\n         DC    CL1' '\n         DC    CL12'        PEND'        pend\n         DC    CL1' '\n         DC    CL12'  DISCONNECT'        disc\n         DC    CL1' '\n         DC    CL12'     CONNECT'        conn\n         DC    CL1' '\n         DC    CL12'     CU BUSY'        cu busy\n         DC    CL1' '\n         DC    CL12'   DIR DELAY'        cu busy\n         DC    CL1' '\n         DC    CL12'    DEV BUSY'        cu busy\n         DC    CL1' '\n         DC    256C' '\n*--- Device report ---------------------------------------------------\n#741D    DS    0CL256\n#71DDAT  DS    0CL10                     Start Date yyyy.mm.dd\n#71DDATY DS    CL4                       Start Date yyyy\n#71DDAT1 DS    CL1                       Start Date\n#71DDATM DS    CL2                       Start Date mm\n#71DDAT2 DS    CL1                       Start Date\n#71DDATD DS    CL2                       Start Date dd\n#401     DS    CL1\n#71DIST  DS    CL8                       Start Time\n#402     DS    CL1\n#71DINT  DS    CL4                       Interval\n#403     DS    CL1\n#71DSNME DS    CL4                       System Name\n#404     DS    CL1\n#71DLCU  DS    CL4                       LCU\n#404A    DS    CL1\n#71DNUM  DS    CL4                       Address\n#404B    DS    CL1\n#71DSER  DS    CL6                       Volume serial\n#404C    DS    CL1\n#71DCU   DS    CL8                       Control Unit Name\n#405     DS    CL1\n#71DDEV  DS    CL8                       Device Name\n#406     DS    CL1\n#71DSSC  DS    CL12    0000.00000        SSCH/sec\n#407     DS    CL1\n#71DRESP DS    CL12    0000.00000        Response\n#408     DS    CL1\n#71DQUE  DS    CL12    0000.00000        IOSQ\n#409     DS    CL1\n#71DPEN  DS    CL12    0000.00000        Pend\n#410     DS    CL1\n#71DDIS  DS    CL12    0000.00000        Disconnect\n#411     DS    CL1\n#71DCNN  DS    CL12    0000.00000        Connect\n#412     DS    CL1\n#71DCUB  DS    CL12                      CU busy delay\n#413     DS    CL1\n#71DDPB  DS    CL12                      Dir port busy delay\n#414     DS    CL1\n#71DDVB  DS    CL12                      device busy dealy\n#415     DS    CL1\n#71DUSE  DS    CL12                      over message\n#416     DS    CL1\n#71DXXX  DS    CL4                       over message\n         DS    256C\n* --- conmma ---------------------------------------------------------\nPART     DC    A(#002),A(#003),A(#004),A(#006),A(#007),A(#008)\n         DC    A(#009),A(#010),A(#011),A(#012),A(#013),A(#014),A(#015)\n         DC    A(#016),A(#017),A(#018),A(#019),A(#020),A(#021),A(#022)\n         DC    A(#023),A(#024),A(#025),A(#026),A(#027),A(#028),A(#029)\n         DC    A(#030),A(#031),A(#032),A(#033),A(#034),A(#035),A(#036)\n         DC    A(#037),A(#038),A(#039),A(#040),A(#041),A(#042),A(#043)\n         DC    A(#044),A(#045),A(#046),A(#047),A(#048),A(#049),A(#050)\n         DC    A(#051),A(#052),A(#053),A(#054),A(#055),A(#056),A(#057)\n         DC    A(#058),A(#059),A(#060),A(#061),A(#062),A(#063),A(#064)\n         DC    A(#065),A(#066),A(#067),A(#068),A(#069),A(#070),A(#071)\n         DC    A(#002A),A(#744SLE@),A(#744SLT@),A(#005),A(#015A)\n         DC    A(#018A),A(#021A),A(#061A),A(#052A),A(#045A)\n*        DC    A(#006A),A(#006B),A(#006C),A(#006D),A(#006E),A(#006F)\n         DC    X'FFFFFFFF'\nPARTCF   DC    A(#101),A(#102),A(#103),A(#104),A(#105),A(#106)\n         DC    A(#107),A(#108),A(#109),A(#110),A(#111),A(#112)\n         DC    A(#113),A(#114),A(#115),A(#116),A(#117),A(#118)\n         DC    A(#119),A(#120)\n         DC    X'FFFFFFFF'\nPARTX    DC    A(#201),A(#202),A(#203),A(#204),A(#205),A(#206)\n         DC    A(#207),A(#208),A(#209),A(#210),A(#211),A(#212)\n         DC    A(#213)\n         DC    X'FFFFFFFF'\nPARTP    DC    A(#301),A(#302),A(#303),A(#304),A(#305),A(#306)\n         DC    A(#307),A(#308),A(#309),A(#310),A(#311),A(#312)\n         DC    A(#313),A(#314),A(#315),A(#316),A(#317),A(#318)\n         DC    A(#319),A(#320),A(#311A)\n         DC    X'FFFFFFFF'\nPARTD    DC    A(#401),A(#402),A(#403),A(#404),A(#405),A(#406)\n         DC    A(#407),A(#408),A(#409),A(#410),A(#411),A(#412)\n         DC    A(#413),A(#414)\n         DC    A(#404A),A(#404B),A(#404C)\n         DC    X'FFFFFFFF'\n*--- literal origin --------------------------------------------------\n         LTORG\n         DS    0D\nRECAREA  DS    32750C\n         PRINT GEN\nSMF74DST DSECT\n         ERBSMF74\n         PRINT NOGEN\n*----------------------------------------------------------------------\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nFR00     EQU   00\nFR02     EQU   02\nFR04     EQU   04\nFR06     EQU   06\n         END   SMFEDIT\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//SYSIN    DD  DUMMY\n//DEL     EXEC PGM=IEFBR14\n//DD1      DD  DSN=KIMUB.TYPE74,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//DD2      DD  DSN=KIMUB.TYPE74S,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//DD3      DD  DSN=KIMUB.TYPE72X,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//DD4      DD  DSN=KIMUB.TYPE72P,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//DD5      DD  DSN=KIMUB.TYPE71D,DISP=(OLD,DELETE),\n//         UNIT=DASD,VOL=SER=VOLSER\n//*********************\n//*********************\n//        EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L))\n//*        PARM='STRNAME(CKPTMVS2)'\n//*       EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L)),\n//*        PARM='STRNAME(IXC_SIGNAL1),CFNAME(CF01,CF02),\n//*            ROUTE(OUTBOUND),PATH(IXC_SIGNAL1)'\n//*        PARM='STRNAME(IXC_SIGNAL1,IXC_SIGNAL2),CFNAME(NONE)'\n//INDD     DD  DSN=SMF.DUMP,DISP=SHR\n//*YPE74   DD  DUMMY\n//*YPE74S  DD  DUMMY\n//*YPE72X  DD  DUMMY\n//*YPE72P  DD  DUMMY\n//TYPE74   DD  DSN=KIMUB.TYPE74,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=256,BLKSIZE=0)\n//TYPE74S  DD  DSN=KIMUB.TYPE74S,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=1024,BLKSIZE=0)\n//TYPE72X  DD  DSN=KIMUB.TYPE72X,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=256,BLKSIZE=0)\n//TYPE72P  DD  DSN=KIMUB.TYPE72P,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=512,BLKSIZE=0)\n//TYPE71D  DD  DSN=KIMUB.TYPE71D,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(150,50),RLSE),\n//         DCB=(RECFM=FB,LRECL=256,BLKSIZE=0)\n//\n//\n//STEP1   EXEC PGM=UFASMFDP\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//INDD     DD  DSN=SYS1.MAN1,DISP=SHR\n//OUTDD    DD DSN=SMF74.MVS1.KINOU2,DISP=(,CATLG),\n//         UNIT=DASD,VOL=SER=VOLSER,SPACE=(CYL,(50,50),RLSE)\n//SYSIN DD *\n SID(MVS1)\n INDD(INDD,OPTIONS(DUMP))\n OUTDD(OUTDD,TYPE(74))\n//*********************\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@SMF99#D": {"ttr": 4867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x00\\xab\\x00\\xab\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 171, "newlines": 171, "modlines": 0, "user": "KIMU"}, "text": "#991TRCT DC    CL156' YY/DDD HH:MM:SS TRGN     TCNM     P JOBNAME  TSPI*\n                 TLPI  TGSR  TRID TCOD'\n#991TRC  DS    0CL156\n         DS    CL1\n#99DT    DS    0CL15\n#99DTEYY DS    CL2            Wrote Date YY\n#99DTEP  DS    CL1'/'                      /\n#99DTEDD DS    CL3                          DDD\n         DS    CL1\n#99TMEHH DS    CL2            Wrote Time HH\n#99TMEP1 DS    CL1':'                      :\n#99TMEMM DS    CL2                          MM\n#99TMEP2 DS    CL1':'                         :\n#99TMESS DS    CL2                             SS\n         DS    CL1\n#99TRGN  DS    CL8                       Resource Group Name\n         DS    CL1\n#99TCNM  DS    CL8                       Service Class Name\n         DS    CL1\n#99TPER  DS    CL1                       Service Period Number\n         DS    CL1\n#99TJOB  DS    CL8                       Address Space Name\n         DS    CL1\n#99TSPI  DS    CL5                       Sysplex Performance Index\n         DS    CL1\n#99TLPI  DS    CL5                       Local Performance Index\n         DS    CL1\n#99TGSR  DS    CL5                       Group Service Resource\n         DS    CL1\n#99TRID  DS    CL4                       Resource Interval Identifer\n         DS    CL1\n#99TCOD  DS    CL4                       Action Code\n         DS    CL1\n#99TCODX DS    CL20\n         DS    CL1\n         DS    CL156\n* ------------------------------------------\n#991TS1  DC    CL156' *** ACTION CODE USAGE SUMMARY ***'\n#991TS2  DC    CL156' CODE ACTION               COUNT' '\n#991TSUM DS    0CL156\n         DS    CL1\n#99TSCOD DS    CL4\n         DS    CL1\n#99TSCOX DS    CL20\n         DS    CL1\n#99TSCNT DS    CL10\n         DS    CL156\n* ------------------------------------------\n#992SCPT DC    CL256' YY/DDD HH:MM:SS CLASS    P I N  SC  GT   SPI   LP*\n               I DP   SERV MDP MPLI MPLO SWAPT   PSI  CPUD  AUXP  AUXC *\n                VIO   HSS   HSC   ASWP  MPLD  CAPD  XMP  EXP POL'\n#992SCP  DS    0CL256\n         DS    CL1\n#992SCPD DS    0CL15\n#992SCPY DS    CL2            Wrote Date YY\n         DS    CL1'/'                      /\n#992SCPA DS    CL3                          DDD\n         DS    CL1\n#992SCPH DS    CL2            Wrote Time HH\n         DS    CL1':'                      :\n#992SCPM DS    CL2                          MM\n         DS    CL1':'                         :\n#992SCPS DS    CL2                             SS\n         DS    CL1\n#99PCNM  DS    CL8                       Service Class Name\n         DS    CL1\n#99PNUM  DS    CL1                       Service Period Number\n         DS    CL1\n#99PIMPOR DS   CL1                       Period's Importance\n         DS    CL1\n#99PNH   DS    CL1                       \"Need Help\" Indicator\n         DS    CL1\n#99PCDCLOCK DS CL3                       Skip Clock\n         DS    CL1\n#99PGOALTYP DS CL3                       Goal Type\n         DS    CL1\n#99PSPI  DS    CL5                       Sysplex Performance Index\n         DS    CL1\n#99PLPI  DS    CL5                       Local Performance Index\n         DS    CL1\n#99PBDP  DS    CL3                       Dispatching Priority\n         DS    CL1\n#99PSERV DS    CL5                       Service Units Consumed\n         DS    CL1\n#99PMDP  DS    CL3                       Maximam Demand Percentage of\n         DS    CL1                        CPU Time\n#99PMPLI DS    CL4                       MPL-in Target\n         DS    CL1\n#99PMPLO DS    CL4                       MPL-out Target\n         DS    CL1\n#99PPSPT DS    CL5                       Swap Protect Time (ms)\n         DS    CL1\n#99PPSITAR DS  CL5                       Protective Processer Storage\n         DS    CL1                         Target\n#99PCPUD DS    CL5                       Cpu Dealy\n         DS    CL1\n#99PAUXP DS    CL5\n         DS    CL1\n#99PAUXC DS    CL5\n         DS    CL1\n#99PVIO  DS    CL5\n         DS    CL1\n#99PHSS  DS    CL5\n         DS    CL1\n#99PHSC  DS    CL5\n         DS    CL1\n#99PASWP DS    CL5\n         DS    CL1\n#99PMPLD DS    CL5\n         DS    CL1\n#99PCAPD DS    CL5\n         DS    CL1\n#99PXMO  DS    CL5\n         DS    CL1\n#99PEXPPOL DS  CL50                      Extended Storage Access\n         DS    CL1                         Policies\n         DS    CL156\n* ------------------------------------------\n#993PLTT DC    CL156' YY/DDD HH:MM:SS CLASS    P TYP  P_BW        X    *\n                   Y PLT'\n#993PLT  DS    0CL156\n         DS    CL1\n#993PLTD DS    0CL15\n#993SWPY DS    CL2            Wrote Date YY\n         DS    CL1'/'                      /\n#993SWPA DS    CL3                          DDD\n         DS    CL1\n#993SWPH DS    CL2            Wrote Time HH\n         DS    CL1':'                      :\n#993SWPM DS    CL2                          MM\n         DS    CL1':'                         :\n#993SWPS DS    CL2                             SS\n         DS    CL1\n#993PNAM DS    CL8                       Service Class Name\n         DS    CL1\n#993PNUM DS    CL1                       Service Period Number\n         DS    CL1\n#993PTYP DS    CL3                       PPR or MPL or RUA or SWP or\n         DS    CL1                        RAS\n#993P_BW DS    CL5\n         DS    CL1\n#993PX   DS    CL8                       Tine In Proc Stor\n         DS    CL1\n#993PY   DS    CL8                       Swap Delay\n         DS    CL1\n#993LSTX DS    CL3\n         DS    CL1\n         DS    CL156\n* ------------------------------------------\n@99DOF   DS    F              Data Section Offset\n@99DLN   DS    H              Data Section length\n@99DON   DS    H              Data Section Number\n@99TOF   DS    F              Subtype 1 Trace Section Offset\n@99TLN   DS    H              Subtype 1 Trace Section Length\n@99TON   DS    H              Subtype 1 Trace Section Number\n@992CPOF DS    F              Subtype 2 Class Data Section Offset\n@992CPLN DS    H              Subtype 2 Class Data Section Length\n@992CPON DS    H              Subtype 2 Class Data Section Number\n@993COF  DS    F              Subtype 3 Class Data Section Offset\n@993CLN  DS    H              Subtype 3 Class Data Section Length\n@993CON  DS    H              Subtype 3 Class Data Section Number\n@993CPOF DS    F              Subtype 3 Class Data Section Offset\n@993CPLN DS    H              Subtype 3 Class Data Section Length\n@993CPON DS    H              Subtype 3 Class Data Section Number\n@993PNAM DS    CL8            Subtype 3 Class Name\n@99PRPLN DS    H              Subtype 3 PRP Length\n@99MPLLN DS    H              Subtype 3 MPL Length\n@99RUALN DS    H              Subtype 3 RUA Length\n@99SWPLN DS    H              Subtype 3 SWP Length\n@99PASLN DS    H              Subtype 3 PAS Length\n* ------------------------------------------\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@SMF99#T": {"ttr": 4871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x00\\xf3\\x00\\xf3\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 243, "newlines": 243, "modlines": 0, "user": "KIMU"}, "text": "SMF99ACT CSECT\n*          Code       Action                Counter\n      DC F'0001',CL20'STA_RECOVERY_RETRY  ',F'0'\nSMF99ACTL EQU *-SMF99ACT\n      DC F'0002',CL20'STA_RECOVERY_PERC   ',F'0'\n      DC F'0003',CL20'STA_RECOVERY_REDRIVE',F'0'\n      DC F'0010',CL20'RA_AUXP_DEC_MPL     ',F'0'\n      DC F'0020',CL20'RA_AUXP_NO_ACTION   ',F'0'\n      DC F'0030',CL20'RA_MP_NO_ACTION     ',F'0'\n      DC F'0040',CL20'RA_OU_DEC_MPL       ',F'0'\n      DC F'0050',CL20'RA_OU_NO_ACTION     ',F'0'\n      DC F'0060',CL20'RA_SWAP_FOR_MPL     ',F'0'\n      DC F'0070',CL20'RA_UP_DECREASE_MPL  ',F'0'\n      DC F'0080',CL20'RA_UP_NEW_CAND      ',F'0'\n      DC F'0090',CL20'RA_UP_NO_ACTION     ',F'0'\n      DC F'0100',CL20'RA_UU_INC_MPL       ',F'0'\n      DC F'0110',CL20'RA_UU_NO_ACTION     ',F'0'\n      DC F'0120',CL20'RA_UP_SWAP_OUT      ',F'0'\n      DC F'0130',CL20'SWAP_DETECTED_WAIT  ',F'0'\n      DC F'0140',CL20'SWAP_EXCHANGE       ',F'0'\n      DC F'0150',CL20'SWAP_LONG_WAIT      ',F'0'\n      DC F'0160',CL20'SWAP_UNILATERAL     ',F'0'\n      DC F'0170',CL20'RA_MON_PAG_COST_HI  ',F'0'\n      DC F'0180',CL20'RA_MON_POLICY_DIR   ',F'0'\n      DC F'0190',CL20'RA_UNMON_ALL_P_OK   ',F'0'\n      DC F'0200',CL20'TX_END_UNMON        ',F'0'\n      DC F'0210',CL20'NS_STOR_TAR_ACTION  ',F'0'\n      DC F'0220',CL20'PA_ADD_DISC         ',F'0'\n      DC F'0222',CL20'PA_AS_BET_DISCS     ',F'0'\n      DC F'0224',CL20'PA_AS_FROM_DISC     ',F'0'\n      DC F'0226',CL20'PA_AS_TO_DISC       ',F'0'\n      DC F'0230',CL20'PA_DELETE_DISC      ',F'0'\n      DC F'0240',CL20'PA_GREC_CAND        ',F'0'\n      DC F'0245',CL20'PA_NA_NO_MPL        ',F'0'\n      DC F'0250',CL20'PA_NA_NO_PROBLEM    ',F'0'\n      DC F'0260',CL20'PA_NA_UNKNOW_DELAY  ',F'0'\n      DC F'0270',CL20'PA_REC_CAND         ',F'0'\n      DC F'0280',CL20'PA_RREC_CAND        ',F'0'\n      DC F'0290',CL20'PA_USE_DISC_CENT    ',F'0'\n      DC F'0300',CL20'PA_USE_DISC_EXP     ',F'0'\n      DC F'0500',CL20'HSK_FROM_SPC_DP     ',F'0'\n      DC F'0510',CL20'HSK_TO_SPC_DP       ',F'0'\n      DC F'0520',CL20'HSK_XFROM_SPC_DP    ',F'0'\n      DC F'0525',CL20'HSK_UNBUNCH_PRTY    ',F'0'\n      DC F'0530',CL20'PA_PMDO_DON         ',F'0'\n      DC F'0540',CL20'PA_PMDU_DON         ',F'0'\n      DC F'0550',CL20'PA_PMD_DON_NETVAL   ',F'0'\n      DC F'0560',CL20'PA_PMD_GDON_NETVAL  ',F'0'\n      DC F'0565',CL20'PA_PMD_GREC_NETVAL  ',F'0'\n      DC F'0570',CL20'PA_PMD_RDON_NETVAL  ',F'0'\n      DC F'0573',CL20'PA_PMD_REC_NETVAL   ',F'0'\n      DC F'0576',CL20'PA_PMD_RREC_NETVAL  ',F'0'\n      DC F'0580',CL20'PA_PMD_SEC_DON      ',F'0'\n      DC F'0590',CL20'PA_PMU_DON_NETVAL   ',F'0'\n      DC F'0595',CL20'PA_PMU_DON_SEC_REC  ',F'0'\n      DC F'0600',CL20'PA_PMU_GDON_NETVAL  ',F'0'\n      DC F'0605',CL20'PA_PMU_GREC_NETVAL  ',F'0'\n      DC F'0610',CL20'PA_PMU_RDON_NETVAL  ',F'0'\n      DC F'0613',CL20'PA_PMU_REC_NETVAL   ',F'0'\n      DC F'0616',CL20'PA_PMU_RREC_NETVAL  ',F'0'\n      DC F'0620',CL20'PA_PMUO_REC         ',F'0'\n      DC F'0630',CL20'PA_PMUUA_REC        ',F'0'\n      DC F'0635',CL20'PA_PMUUB_REC        ',F'0'\n      DC F'0640',CL20'PA_PMU_SEC_REC      ',F'0'\n      DC F'0650',CL20'PA_PMU_TO_SPC_DP    ',F'0'\n      DC F'0660',CL20'PA_PRO_DECP_DON     ',F'0'\n      DC F'0665',CL20'PA_PRO_DECP_MPL     ',F'0'\n      DC F'0670',CL20'PA_PRO_DECP_SEC     ',F'0'\n      DC F'0690',CL20'PA_PRO_DON_DEPEN    ',F'0'\n      DC F'0720',CL20'PA_PRO_GREC_NETVAL  ',F'0'\n      DC F'0730',CL20'PA_PRO_GREC_RECVAL  ',F'0'\n      DC F'0740',CL20'PA_PRO_INCP_DON     ',F'0'\n      DC F'0750',CL20'PA_PRO_INCP_REC     ',F'0'\n      DC F'0760',CL20'PA_PRO_INCP_SEC     ',F'0'\n      DC F'0850',CL20'PA_PRO_NA_NO_DONOR  ',F'0'\n      DC F'0870',CL20'PA_PRO_NA_SPC_DP    ',F'0'\n      DC F'0880',CL20'PA_PRO_RDON_CAND    ',F'0'\n      DC F'0890',CL20'PA_PRO_REC_DEPEN    ',F'0'\n      DC F'0900',CL20'PA_PRO_REC_NETVAL   ',F'0'\n      DC F'0910',CL20'PA_PRO_REC_RECVAL   ',F'0'\n      DC F'0920',CL20'PA_PRO_RREC_NETVAL  ',F'0'\n      DC F'0930',CL20'PA_PRO_RREC_RECVAL  ',F'0'\n      DC F'0933',CL20'PA_PRO_SERVED_GDON  ',F'0'\n      DC F'0936',CL20'PA_PRO_SERVED_GREC  ',F'0'\n      DC F'0940',CL20'PA_PRO_UNC_DON      ',F'0'\n      DC F'0950',CL20'PA_PRO_UNC_REC      ',F'0'\n      DC F'0960',CL20'PA_PRO_UNC_SEC_DON  ',F'0'\n      DC F'0970',CL20'PA_PRO_UNC_SEC_REC  ',F'0'\n      DC F'2010',CL20'PA_DEC_PSI_TAR      ',F'0'\n      DC F'2020',CL20'PA_INC_PSI_TAR      ',F'0'\n      DC F'2030',CL20'PA_PSI_NA_NET_VAL   ',F'0'\n      DC F'2040',CL20'PA_PSI_NA_REC_VAL   ',F'0'\n      DC F'2050',CL20'PA_PSI_TAR_UNAB     ',F'0'\n      DC F'2060',CL20'PA_REM_PSI_TAR      ',F'0'\n      DC F'2070',CL20'PLOT_X_REM_PSI_TAR  ',F'0'\n      DC F'2075',CL20'PLOT_X_REM_RCS_TAR  ',F'0'\n      DC F'2080',CL20'SH_DEC_PSI_TAR      ',F'0'\n      DC F'2090',CL20'SH_REM_PSI_TAR      ',F'0'\n      DC F'2100',CL20'TDH_AS_DEC_PSI_TAR  ',F'0'\n      DC F'2110',CL20'TDH_AS_REM_PSI_TAR  ',F'0'\n      DC F'2120',CL20'TDH_ME_DEC_PSI_TAR  ',F'0'\n      DC F'2130',CL20'TDH_ME_REM_PSI_TAR  ',F'0'\n      DC F'2140',CL20'TDH_UA_DEC_PSI_TAR  ',F'0'\n      DC F'2150',CL20'TDH_UA_REM_PSI_TAR  ',F'0'\n      DC F'2160',CL20'RV_HSK_INC_PSI_TAR  ',F'0'\n      DC F'2170',CL20'WSM_DEC_PSI_TAR     ',F'0'\n      DC F'2180',CL20'WSM_REM_PSI_TAR     ',F'0'\n      DC F'2510',CL20'PA_DEC_PRT          ',F'0'\n      DC F'2520',CL20'PA_INC_PRT          ',F'0'\n      DC F'2530',CL20'PA_PRT_NA_NET_VAL   ',F'0'\n      DC F'2540',CL20'PA_PRT_NA_REC_VAL   ',F'0'\n      DC F'2550',CL20'PA_PRT_NA_SRVR_UD   ',F'0'\n      DC F'2560',CL20'PA_PRT_NO_WSS       ',F'0'\n      DC F'2570',CL20'PA_PRT_TAR_UNAB     ',F'0'\n      DC F'2580',CL20'PA_REM_PRT          ',F'0'\n      DC F'2590',CL20'RV_HSK_INC_PRT      ',F'0'\n      DC F'2600',CL20'SH_DEC_PRT          ',F'0'\n      DC F'2610',CL20'SH_REM_PRT          ',F'0'\n      DC F'2620',CL20'TDH_DEC_PRT         ',F'0'\n      DC F'2630',CL20'TDH_REM_PRT         ',F'0'\n      DC F'2640',CL20'WSM_DEC_PRT         ',F'0'\n      DC F'2650',CL20'WSM_REM_PRT         ',F'0'\n      DC F'3010',CL20'PA_CSI_NA_NET_VAL   ',F'0'\n      DC F'3020',CL20'PA_CSI_NA_REC_VAL   ',F'0'\n      DC F'3030',CL20'PA_CSI_TAR_UNAB     ',F'0'\n      DC F'3040',CL20'PA_INC_CSI_TAR      ',F'0'\n      DC F'3050',CL20'TDH_DEC_CSI_TAR     ',F'0'\n      DC F'3060',CL20'TDH_REM_CSI_TAR     ',F'0'\n      DC F'3070',CL20'PA_INC_XMEM_TAR     ',F'0'\n      DC F'3080',CL20'PA_XMEM_NA_NET_VAL  ',F'0'\n      DC F'3090',CL20'PA_XMEM_NA_REC_VAL  ',F'0'\n      DC F'3095',CL20'PA_XMEM_NA_SRT      ',F'0'\n      DC F'3100',CL20'PA_XMEM_TAR_UNAB    ',F'0'\n      DC F'3110',CL20'TDH_DEC_SSI_TAR     ',F'0'\n      DC F'3120',CL20'PA_SHR_TAR_UNAB     ',F'0'\n      DC F'3130',CL20'PA_SHR_NA_REC_VAL   ',F'0'\n      DC F'3140',CL20'PA_SHR_NA_NET_VAL   ',F'0'\n      DC F'3150',CL20'PA_INC_SHR_TAR      ',F'0'\n      DC F'3160',CL20'PA_DEC_SHR_DEL      ',F'0'\n      DC F'3510',CL20'B16M_SHORT_DEC_MPL  ',F'0'\n      DC F'3520',CL20'PA_DEC_MPL          ',F'0'\n      DC F'3530',CL20'PA_INC_MPL          ',F'0'\n      DC F'3540',CL20'PA_INC_MPL_SERVER   ',F'0'\n      DC F'3550',CL20'PA_MPL_NA_NET_VAL   ',F'0'\n      DC F'3560',CL20'PA_MPL_NA_REC_VAL   ',F'0'\n      DC F'3580',CL20'PA_MPL_NA_SHORTAGE  ',F'0'\n      DC F'3590',CL20'PA_SWAP_FOR_MPL     ',F'0'\n      DC F'3600',CL20'TDH_DEC_MPL         ',F'0'\n      DC F'3610',CL20'RV_HSK_INC_MPL      ',F'0'\n      DC F'4010',CL20'ESPOL_NSW_LRU       ',F'0'\n      DC F'4020',CL20'ESPOL_NSW_SP_AVAIL  ',F'0'\n      DC F'4050',CL20'ESPOL_SWP_LRU       ',F'0'\n      DC F'4060',CL20'ESPOL_SWP_SP_AVAIL  ',F'0'\n      DC F'4090',CL20'HSK_ROLL_EXP_SPA    ',F'0'\n      DC F'4510',CL20'ALL_OK_REM_ISI_TAR  ',F'0'\n      DC F'4520',CL20'HSK_SL_DEC_ISI_TAR  ',F'0'\n      DC F'4530',CL20'HSK_SL_REM_ISI_TAR  ',F'0'\n      DC F'4540',CL20'OK1_INC_ISI_TAR     ',F'0'\n      DC F'4550',CL20'PA_DEC_ISI_TAR      ',F'0'\n      DC F'4560',CL20'PA_INC_ISI_TAR      ',F'0'\n      DC F'4570',CL20'PA_ISI_NA_NET_VAL   ',F'0'\n      DC F'4580',CL20'PA_ISI_NA_REC_VAL   ',F'0'\n      DC F'4590',CL20'PA_REM_ISI_TAR      ',F'0'\n      DC F'4600',CL20'PLOT_X_REM_ISI_TAR  ',F'0'\n      DC F'4610',CL20'ROLL_EXP_REM_ISI    ',F'0'\n      DC F'4620',CL20'RV_HSK_INC_ISI_TAR  ',F'0'\n      DC F'4630',CL20'SH_DEC_ISI_TAR      ',F'0'\n      DC F'4640',CL20'SH_REM_ISI_TAR      ',F'0'\n      DC F'4650',CL20'TDH_ME_DEC_ISI_TAR  ',F'0'\n      DC F'4660',CL20'TDH_ME_REM_ISI_TAR  ',F'0'\n      DC F'4670',CL20'TDH_UA_DEC_ISI_TAR  ',F'0'\n      DC F'4680',CL20'TDH_UA_REM_ISI_TAR  ',F'0'\n      DC F'4690',CL20'WSM_DEC_ISI_TAR     ',F'0'\n      DC F'4700',CL20'WSM_INC_ISI_TAR     ',F'0'\n      DC F'4710',CL20'WSM_REM_ISI_TAR     ',F'0'\n      DC F'5010',CL20'RUN_OK_REM_RPS_TAR  ',F'0'\n      DC F'5020',CL20'PA_DEC_RPS_TAR      ',F'0'\n      DC F'5030',CL20'PA_INC_RPS_TAR      ',F'0'\n      DC F'5040',CL20'PA_REM_RPS_TAR      ',F'0'\n      DC F'5050',CL20'PA_SET_RPS_TAR      ',F'0'\n      DC F'5060',CL20'PC_REM_RPS_TAR      ',F'0'\n      DC F'5070',CL20'SH_DEC_RPS_TAR      ',F'0'\n      DC F'5080',CL20'SH_REM_RPS_TAR      ',F'0'\n      DC F'5090',CL20'SH_SET_RPS_TAR      ',F'0'\n      DC F'5100',CL20'WSM_DEC_RPS_TAR     ',F'0'\n      DC F'5110',CL20'WSM_INC_RPS_TAR     ',F'0'\n      DC F'5120',CL20'WSM_REM_RPS_TAR     ',F'0'\n      DC F'5130',CL20'WSM_SET_RPS_TAR     ',F'0'\n      DC F'6510',CL20'HSK_SL_DEC_ICI_TAR  ',F'0'\n      DC F'6520',CL20'HSK_SL_REM_ICI_TAR  ',F'0'\n      DC F'6530',CL20'OK1_INC_ICI_TAR     ',F'0'\n      DC F'6540',CL20'PA_DEC_ICI_TAR      ',F'0'\n      DC F'6550',CL20'PA_INC_ICI_TAR      ',F'0'\n      DC F'6560',CL20'PA_REM_ICI_TAR      ',F'0'\n      DC F'6570',CL20'PLOT_X_REM_ICI_TAR  ',F'0'\n      DC F'6580',CL20'SH_DEC_ICI_TAR      ',F'0'\n      DC F'6590',CL20'SH_REM_ICI_TAR      ',F'0'\n      DC F'6600',CL20'SWAPIN_DEC_ICI_TAR  ',F'0'\n      DC F'6610',CL20'SWAPIN_REM_ICI_TAR  ',F'0'\n      DC F'6620',CL20'WSM_DEC_ICI_TAR     ',F'0'\n      DC F'6630',CL20'WSM_INC_ICI_TAR     ',F'0'\n      DC F'6640',CL20'WSM_REM_ICI_TAR     ',F'0'\n      DC F'7010',CL20'PA_DEC_RCS_TAR      ',F'0'\n      DC F'7020',CL20'PA_INC_RCS_TAR      ',F'0'\n      DC F'7030',CL20'PA_REM_RCS_TAR      ',F'0'\n      DC F'7040',CL20'PA_SET_RCS_TAR      ',F'0'\n      DC F'7050',CL20'PC_REM_RCS_TAR      ',F'0'\n      DC F'7060',CL20'RA_UP_SQUEEZE       ',F'0'\n      DC F'7070',CL20'RUN_OK_REM_RCS_TAR  ',F'0'\n      DC F'7080',CL20'SH_DEC_RCS_TAR      ',F'0'\n      DC F'7090',CL20'SH_REM_RCS_TAR      ',F'0'\n      DC F'7100',CL20'SH_SET_RCS_TAR      ',F'0'\n      DC F'7110',CL20'SWAPIN_REM_RCS_TAR  ',F'0'\n      DC F'7120',CL20'SWAPIN_SET_RCS_TAR  ',F'0'\n      DC F'7130',CL20'WSM_DEC_RCS_TAR     ',F'0'\n      DC F'7140',CL20'WSM_INC_RCS_TAR     ',F'0'\n      DC F'7150',CL20'WSM_REM_RCS_TAR     ',F'0'\n      DC F'7160',CL20'WSM_SET_RCS_TAR     ',F'0'\n      DC F'7510',CL20'OTL_USE_DISC_CENT   ',F'0'\n      DC F'7520',CL20'WSM_DEC_MPL         ',F'0'\n      DC F'7530',CL20'WSM_END_A2B_CNT     ',F'0'\n      DC F'7540',CL20'WSM_END_A2B_PSTOR   ',F'0'\n      DC F'7550',CL20'WSM_END_OK1         ',F'0'\n      DC F'7560',CL20'WSM_END_OK1_BY_STL  ',F'0'\n      DC F'7570',CL20'WSM_END_OK1_RUN_OK  ',F'0'\n      DC F'7580',CL20'WSM_END_PHASE_CHG   ',F'0'\n      DC F'7590',CL20'WSM_END_SWAPIN      ',F'0'\n      DC F'7600',CL20'WSM_END_TRYLRU      ',F'0'\n      DC F'7610',CL20'WSM_NA_MP1          ',F'0'\n      DC F'7620',CL20'WSM_NA_NET_VAL      ',F'0'\n      DC F'7630',CL20'WSM_NA_NPCR_VAL     ',F'0'\n      DC F'7640',CL20'WSM_STRT_A2B_CNT    ',F'0'\n      DC F'7650',CL20'WSM_STRT_A2B_PSTOR  ',F'0'\n      DC F'7660',CL20'WSM_STRT_OK1        ',F'0'\n      DC F'7670',CL20'WSM_START_OTL_IN    ',F'0'\n      DC F'7680',CL20'WSM_STRT_PHASE_CHG  ',F'0'\n      DC F'7690',CL20'WSM_STRT_SWAPIN     ',F'0'\n      DC F'7700',CL20'WSM_STRT_TRYLRU     ',F'0'\n      DC F'7710',CL20'WSM_USE_DISC_CENT   ',F'0'\n      DC F'7720',CL20'WSM_USE_DISC_EXP    ',F'0'\n      DC F'8010',CL20'PA_CAP_DECS         ',F'0'\n      DC F'8020',CL20'PA_CAP_INCS         ',F'0'\n      DC XL4'FFFFFFFF',CL20' -- END OF TABLE --',F'0'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SMF99#1": {"ttr": 4876, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x04~\\x04~\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1150, "newlines": 1150, "modlines": 0, "user": "KIMU"}, "text": "//KIMUA JOB (ACCT#),CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//* ***************************************************************\n//* SMF RECORD EDIT PROGRAM !\n//*      rec type   record name                       dd name\n//*            99 : WLM Type1 Trace Table             T991TRC\n//*                 WLM Type2 Service Class Period    T992SCP\n//*                 WLM Type3 Delay Plot              T993PLT\n//*\n//* * --- Bug Fix ---\n//*   V1.0.1 : T992SCP Report MPLI,MPLO Field         1998.08.11\n//*            T992SCP Report SC Field                1998.08.11\n//*\n//*   V1.0.2 : T992SCP Report DP(Decimal) Add         1998.08.14\n//*\n//* ***************************************************************\n//A       EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//STEPCAT  DD  DSN=USER.CATALOG,DISP=SHR\n//SYSIN    DD  *\n         START\n         PRINT NOGEN\n         DC   C'< WLM EDITER V1.0.2 _ KIMU _ &SYSDATE _ &SYSTIME >'\nSMF99E   CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05             BASE REG. R03\n         LA    R04,2048(R03)\n         LA    R04,2048(R04)             2ND BASE REG. R04\n         LA    R05,2048(R04)\n         LA    R05,2048(R05)             3RD BASE REG. R05\n         ST    R13,SAVEAREA+4            SAVE A(OLD SAVEAREA)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                SAVE A(NEW SAVEAREA)\n*\n*--- FILE OPEN ---\n         OPEN  (INDCB,,T991TRC,(OUTPUT))\n         OPEN  (T992SCP,(OUTPUT))\n         OPEN  (T993PLT,(OUTPUT))\n         PUT   T991TRC,#991TRCT\n         PUT   T992SCP,#992SCPT\n         PUT   T993PLT,#993PLTT\n*--- FILE READ ---\nLOOP01   EQU   *\n         GET   INDCB,RECAREA\n         CLI   RECAREA+5,X'63'          TYPE  99 ( WLM          )\n         BE    EDIT99\n         B     LOOP01\n*** RECORD TYPE 99 ***********************************************\nEDIT99   EQU   *\n         LA    R12,RECAREA\n         USING SMF_HDR_MAP,R12\n* - Header Section ---\n* --- SMF Buffer Wrote Date ---\n         UNPK  UPK_AREA(8),SMF99DTE(4)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #00DTEYY(2),UPK_AREA+3\n         MVI   #00DTEP,C'/'\n         MVC   #00DTEDD(3),UPK_AREA+5\n* --- SMF Buffer Wrote Time ---\n         L     R06,SMF99TME\n         SRDA  R06,32\n         D     R06,=F'100'               1sec = 1ms * 100\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'                1min = 1s * 60\n         MVI   #00TMEP2,C':'\n         CVD   R06,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #00TMESS(2),UPK_AREA+6    Sec\n         LR    R06,R07\n         SRDA  R06,32\n         D     R06,=F'60'                1hor = 1min * 60\n*\n         CVD   R07,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #00TMEHH(2),UPK_AREA+6    Hour\n         CVD   R06,PK_AREA\n         MVI   #00TMEP1,C':'\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #00TMEMM,UPK_AREA+6\n*\n         CLC   SMF99TID,=XL2'0001'       If Subtype = 1\n         BE    E991ENT\n         CLC   SMF99TID,=XL2'0002'       If Subtype = 2\n         BE    E992ENT\n         CLC   SMF99TID,=XL2'0003'       If Subtype = 3\n         BE    E993ENT\n         B     LOOP01\n* ----------------\n* - Self Definining Section ---\nE991ENT  EQU   *\n         LA    R11,SMF_HDR_MAP_LEN(R12)\n         USING SMF99_SDEF_MAP,R11\n         L     R10,SMF99DOF              Load Data Section Offset\n         ST    R10,@99DOF\n         LH    R01,SMF99DLN                   Data Section Length\n         STH   R01,@99DLN\n         LH    R09,SMF99DON                   Data Section Number\n         STH   R09,@99DON\n         LTR   R09,R09\n         BZ    E991X\n         DROP  R11\n* - Subtype 1 Self Defining Section ---\n         LA    R10,0(R10,R12)\n         USING SMF99_S1_SDEF_MAP,R10\nE991     EQU   *\n         L     R08,SMF99TOF              Load Trace Section Offset\n         ST    R08,@99TOF\n         LH    R01,SMF99TLN                   Trace Section Length\n         STH   R01,@99TLN\n         LH    R07,SMF99TON                   Trace Section Number\n         STH   R07,@99TON\n         LTR   R07,R07\n         BZ    E991TRCX\n* - Subtype 1 Trace Table Entry ---\n         LA    R08,0(R08,R12)\n         USING SMF99_S1_AAT_MAP,R08\n* ? R10 - Loop Counter\nE991TRC  EQU   *\n         MVI   #991TRC,C' '              Clear Output Work Area\n         MVC   #991TRC+1(L'#991TRC-1),#991TRC\n         MVC   #99DT,#00DT               Copy Date and Time\n*\n         MVC   #99TRGN,SMF99_TRGN        Resource Group Name\n         MVC   #99TCNM,SMF99_TCNM        Service Class Name\n         XR    R01,R01                   Service Period Number\n         LH    R01,SMF99_TPER\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99TPER(1),EDWORK+15\n         MVC   #99TJOB,SMF99_TJOB        Address Space Name\n         L     R01,SMF99_TSPI            Sysplex Performance Index\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #99TSPI(5),EDWORK2+12\n         L     R01,SMF99_TLPI            Local Performance Index\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #99TLPI(5),EDWORK2+12\n         L     R01,SMF99_TGSR            Group Service Resource\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99TGSR(5),EDWORK+11\n         XR    R01,R01\n         IC    R01,SMF99_TRID            Resource Interval Identifer\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99TRID(4),EDWORK+12\n         XR    R01,R01\n         LH    R01,SMF99_TCOD            Action Code\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99TCOD(4),EDWORK+12\n         LH    R01,SMF99_TCOD            Action Code Table\n         L     R02,SMF99ACV\nE991TRC1 EQU   *\n         CLC   0(4,R02),=XL4'FFFFFFFF'   If Last ?\n         BE    E991TRC3\n         CL    R01,0(R02)                If Match ?\n         BE    E991TRC2\n         LA    R02,SMF99ACTL(R02)        Next Table Entry\n         B     E991TRC1\nE991TRC2 EQU   *\n         MVC   #99TCODX(20),4(R02)       Copy Action\n         L     R01,24(R02)               Table Usage Count Up\n         LA    R01,1(R01)\n         ST    R01,24(R02)\nE991TRC3 EQU   *\n* ----------------\n         PUT   T991TRC,#991TRC\n         XR    R01,R01\n         LH    R01,@99TLN\n         LA    R08,0(R01,R08)\n         BCT   R07,E991TRC\n*\nE991TRCX EQU   *\n         XR    R01,R01\n         LH    R01,@99DLN\n         LA    R10,0(R01,R10)\n         BCT   R09,E991\nE991X    EQU   *\n         DROP  R08\n         DROP  R10\n* ----------------\n         B     LOOP01                    Goto Next Record !\n* ----------------\n**********************************************************************\n* ----------------\n* - Self Definining Section ---\nE992ENT  EQU   *\n         LA    R11,SMF_HDR_MAP_LEN(R12)\n         USING SMF99_SDEF_MAP,R11\n         L     R10,SMF99DOF              Load Data Section Offset\n         ST    R10,@99DOF\n         LH    R01,SMF99DLN                   Data Section Length\n         STH   R01,@99DLN\n         LH    R09,SMF99DON                   Data Section Number\n         STH   R09,@99DON\n         LTR   R09,R09\n         BZ    E992X\n         DROP  R11\n* - Subtype 2 Self Defining Section ---\n         LA    R10,0(R10,R12)\n         USING SMF99_S2_SDEF_MAP,R10\nE992     EQU   *\n         L     R08,SMF992CPOF            Load Class Data Section Offset\n         ST    R08,@992CPOF\n         LH    R01,SMF992CPLN                 Class Data Section Length\n         STH   R01,@992CPLN\n         LH    R07,SMF992CPON                 Class Data Section Number\n         STH   R07,@992CPON\n         LTR   R07,R07\n         BZ    E992SCPZ\n* - Subtype 2 Class Data Section ---\n         LA    R08,0(R08,R12)\n         USING SMF99_S2_PER_MAP,R08\n* ? R10 - Loop Counter\nE992SCP  EQU   *\n         MVI   #992SCP,C' '              Clear Output Work Area\n         MVC   #992SCP+1(L'#992SCP-1),#992SCP\n         MVC   #992SCPD,#00DT            Copy Date and Time\n*\n         MVC   #99PCNM,SMF99_PCNM        Service Class Name\n         XR    R01,R01                   Service Period Number\n         LH    R01,SMF99_PNUM\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PNUM(1),EDWORK+15\n         XR    R01,R01                   Service Period Importance\n         LH    R01,SMF99_PIMPOR\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PIMPOR(1),EDWORK+15\n         CLI   SMF99_PNH,X'00'           \"Need Help\" Indicator\n         BE    E992SCP1\n         MVI   #99PNH,C'Y'\n         B     E992SCP2\nE992SCP1 EQU   *\n         MVI   #99PNH,C'N'\nE992SCP2 EQU   *\n         XR    R01,R01                   Skip Clock\n         LH    R01,SMF99_PCDCLOCK\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         XR    R01,R01\n         ED    EDWORK,PK_AREA\n*        BC    11,E992SCP21\n         TM    SMF99_PCDCLOCK,X'80'\n         BNO   E992SCP21\n         LA    R01,EDWORK+L'EDWORK\n         BCTR  R01,0\nE992SCP22 EQU  *\n         CLI   0(R01),C' '\n         BE    E992SCP23\n         BCTR  R01,0\n         B     E992SCP22\nE992SCP23 EQU  *\n*        LA    R02,EDWORK\n*        SR    R02,R01\n*        BCTR  R02,0\n         MVI   0(R01),C'-'\n*        CL    R01,=A(EDWORK)\n*        BL    E992SCP21\n*        L     R02,=A(EDWORK)\n*        LA    R02,L'EDWORK(R02)\n*        CLR   R01,R02\n*        BH    E992SCP21\n*        MVI   0(R01),C'-'\nE992SCP21 EQU  *\n         MVC   #99PCDCLOCK(3),EDWORK+13\n         MVC   #99PGOALTYP,=CL3'DIS'\n         CLI   SMF99_PGOALTYP,X'00'      Goal Type if SYSSTC\n         BNE   E992SCP3\n         MVC   #99PGOALTYP,=CL3'SYS'\n         B     E992SCP6\nE992SCP3 EQU   *\n         CLI   SMF99_PGOALTYP,X'01'      Goal Type if Short Response\n         BNE   E992SCP4\n         MVC   #99PGOALTYP,=CL3'SRT'\n         B     E992SCP6\nE992SCP4 EQU   *\n         CLI   SMF99_PGOALTYP,X'02'      Goal Type if Long Response\n         BNE   E992SCP5\n         MVC   #99PGOALTYP,=CL3'LRT'\n         B     E992SCP6\nE992SCP5 EQU   *\n         CLI   SMF99_PGOALTYP,X'03'      Goal Type if Velocity\n         BNE   E992SCP6\n         MVC   #99PGOALTYP,=CL3'VEL'\n         B     E992SCP6\nE992SCP6 EQU   *\n         L     R01,SMF99_PSPI            Sysplex Performance Index\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #99PSPI(5),EDWORK2+12\n         L     R01,SMF99_PLPI            Local Performance Index\n         CVD   R01,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   #99PLPI(5),EDWORK2+12\n         XR    R01,R01\n         IC    R01,SMF99_PBDP            Dispatching Priority\n         CVD   R01,PK_AREA                (Decimal)\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PBDPD(3),EDWORK+13\n         LA    R02,SMF99_PBDP             (Hex)\n         CALL  @OS#6HC,((R02),#99PBDP,1)\n         L     R01,SMF99_PSERV           Service Units Consumed\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PSERV(5),EDWORK+11\n         L     R01,SMF99_PMDP            Maximam Demand Percentage of\n         CVD   R01,PK_AREA                CPU Time\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PMDP(3),EDWORK+13\n         LH    R01,SMF99_PMPLI           MPL-in Target\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PMPLI(4),EDWORK+12\n         LH    R01,SMF99_PMPLO           MPL-out Target\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PMPLO(4),EDWORK+12\n         L     R01,SMF99_PPSPT           Swap Protect Time (ms)\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PPSPT(5),EDWORK+11\n         L     R01,SMF99_PPSITAR         Protective Processer Storage\n         CVD   R01,PK_AREA                 Target\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PPSITAR(5),EDWORK+11\n*\n         L     R01,SMF99_PCPUD           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PCPUD(5),EDWORK+11\n         L     R01,SMF99_PAUXP           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PAUXP(5),EDWORK+11\n         L     R01,SMF99_PAUXC           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PAUXC(5),EDWORK+11\n         L     R01,SMF99_PVIO            CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PVIO(5),EDWORK+11\n         L     R01,SMF99_PHSS            CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PHSS(5),EDWORK+11\n         L     R01,SMF99_PHSC            CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PHSC(5),EDWORK+11\n         L     R01,SMF99_PASWP           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PASWP(5),EDWORK+11\n         L     R01,SMF99_PMPLD           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PMPLD(5),EDWORK+11\n         L     R01,SMF99_PCAPD           CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PCAPD(5),EDWORK+11\n         L     R01,SMF99_PXMO            CPU Delay\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99PXMO(5),EDWORK+11\n*\n         CLI   SMF99_PESSWAP,X'01'\n         BNE   E992SCP7\n         MVI   #99PEXPPOL+0,C'P'\n         B     E992SCP9\nE992SCP7 EQU   *\n         CLI   SMF99_PESSWAP,X'02'\n         BNE   E992SCP8\n         MVI   #99PEXPPOL+0,C'L'\n         B     E992SCP9\nE992SCP8 EQU   *\n         CLI   SMF99_PESSWAP,X'03'\n         BNE   E992SCP9\n         MVI   #99PEXPPOL+0,C'S'\n         B     E992SCP9\nE992SCP9 EQU   *\n         CLI   SMF99_PGOALTYP,X'01'      Goal Type if Short Response\n         BNE   E992SCPJ\n*\n         CLI   SMF99_PESPOL,X'01'\n         BNE   E992SCPA\n         MVI   #99PEXPPOL+2,C'P'\n         B     E992SCPC\nE992SCPA EQU   *\n         CLI   SMF99_PESPOL,X'02'\n         BNE   E992SCPB\n         MVI   #99PEXPPOL+2,C'L'\n         B     E992SCPC\nE992SCPB EQU   *\n         CLI   SMF99_PESPOL,X'03'\n         BNE   E992SCPC\n         MVI   #99PEXPPOL+2,C'S'\n         B     E992SCPC\nE992SCPC EQU   *\n         CLI   SMF99_PESVIO,X'01'\n         BNE   E992SCPD\n         MVI   #99PEXPPOL+4,C'P'\n         B     E992SCPF\nE992SCPD EQU   *\n         CLI   SMF99_PESVIO,X'02'\n         BNE   E992SCPE\n         MVI   #99PEXPPOL+4,C'L'\n         B     E992SCPF\nE992SCPE EQU   *\n         CLI   SMF99_PESVIO,X'03'\n         BNE   E992SCPF\n         MVI   #99PEXPPOL+4,C'S'\n         B     E992SCPF\nE992SCPF EQU   *\n         CLI   SMF99_PESHSP,X'01'\n         BNE   E992SCPG\n         MVI   #99PEXPPOL+6,C'P'\n         B     E992SCPI\nE992SCPG EQU   *\n         CLI   SMF99_PESHSP,X'02'\n         BNE   E992SCPH\n         MVI   #99PEXPPOL+6,C'L'\n         B     E992SCPI\nE992SCPH EQU   *\n         CLI   SMF99_PESHSP,X'03'\n         BNE   E992SCPI\n         MVI   #99PEXPPOL+6,C'S'\n         B     E992SCPI\nE992SCPI EQU   *\n         B     E992SCPY\nE992SCPJ EQU   *\n         LA    R02,#99PEXPPOL+2          Write Pointer\n         XR    R01,R01                   Demand Page Protect\n         LH    R01,SMF99_PPROT\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPK EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPL\n         LA    R01,1(R01)\n         BCT   R15,E992SCPK\nE992SCPL EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C'/'\n         LA    R02,1(R02)\n         XR    R01,R01                   Demand Page LRU\n         LH    R01,SMF99_PLRU\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPM EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPN\n         LA    R01,1(R01)\n         BCT   R15,E992SCPM\nE992SCPN EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C'/'\n         LA    R02,1(R02)\n         XR    R01,R01                   Demand Page Available\n         LH    R01,SMF99_PSPAV\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPO EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPP\n         LA    R01,1(R01)\n         BCT   R15,E992SCPO\nE992SCPP EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C' '\n         LA    R02,1(R02)\n         XR    R01,R01                   VIO LRU\n         LH    R01,SMF99_PVIOL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPQ EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPR\n         LA    R01,1(R01)\n         BCT   R15,E992SCPQ\nE992SCPR EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C'/'\n         LA    R02,1(R02)\n         XR    R01,R01                   VIO Available\n         LH    R01,SMF99_PVIOS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPS EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPT\n         LA    R01,1(R01)\n         BCT   R15,E992SCPS\nE992SCPT EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C' '\n         LA    R02,1(R02)\n         XR    R01,R01                   Hiper Space LRU\n         LH    R01,SMF99_PHSPL\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPU EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPV\n         LA    R01,1(R01)\n         BCT   R15,E992SCPU\nE992SCPV EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\n         MVI   0(R02),C'/'\n         LA    R02,1(R02)\n         XR    R01,R01                   Hiper Space Available\n         LH    R01,SMF99_PHSPS\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         LA    R01,EDWORK\n         LA    R15,16\nE992SCPW EQU   *\n         CLI   0(R01),C' '\n         BNE   E992SCPX\n         LA    R01,1(R01)\n         BCT   R15,E992SCPW\nE992SCPX EQU   *\n         STC   R15,*+5\n         MVC   0(0,R02),0(R01)\n         LA    R02,0(R02,R15)\nE992SCPY EQU   *\n* ----------------\n         PUT   T992SCP,#992SCP\n         XR    R01,R01\n         LH    R01,@992CPLN\n         LA    R08,0(R01,R08)\n         BCT   R07,E992SCP\n*\nE992SCPZ EQU   *\n         XR    R01,R01\n         LH    R01,@99DLN\n         LA    R10,0(R01,R10)\n         BCT   R09,E991\nE992X    EQU   *\n         DROP  R08\n         DROP  R10\n* ----------------\n         B     LOOP01                    Goto Next Record !\n* ----------------\n*** Subtype 3 ********************************************************\n* ----------------\n* - Self Definining Section ---\nE993ENT  EQU   *\n         LA    R11,SMF_HDR_MAP_LEN(R12)\n         USING SMF99_SDEF_MAP,R11\n         L     R10,SMF99DOF              Load Data Section Offset\n         ST    R10,@99DOF\n         LH    R01,SMF99DLN                   Data Section Length\n         STH   R01,@99DLN\n         LH    R09,SMF99DON                   Data Section Number\n         STH   R09,@99DON\n         LTR   R09,R09\n         BZ    E993X\n         DROP  R11\n* - Subtype 3 Self Defining Section ---\n         LA    R10,0(R10,R12)\n         USING SMF99_S3_SDEF_MAP,R10\nE993     EQU   *\n         L     R08,SMF993COF             Load Class Data Section Offset\n         ST    R08,@993COF\n         LH    R01,SMF993CLN                  Class Data Section Length\n         STH   R01,@993CLN\n         LH    R07,SMF993CON                  Class Data Section Number\n         STH   R07,@993CON\n         LTR   R07,R07\n         BZ    E993PLTX\n* - Subtype 3 Class Data Section ---\n         LA    R08,0(R08,R12)\n         USING SMF99_S3_CLS_MAP,R08\n         MVC   @993PNAM,SMF99_PNAM\n         DROP  R08\n*\n         L     R08,SMF993CPOF            Load Class Data Plot Offset\n         ST    R08,@993CPOF\n         LH    R01,SMF993CPLN                 Class Data Plot Length\n         STH   R01,@993CPLN\n         LH    R07,SMF993CPON                 Class Data Plot Number\n         STH   R07,@993CPON\n         LTR   R07,R07\n         BZ    E993PLTX\n* - Subtype 3 Class Data Plot Section ---\n         LA    R08,0(R08,R12)\n         USING SMF99_S3_PER_SDEF_MAP,R08\n* ? R07 - Loop Counter\nE993PLT  EQU   *\n         MVI   #993PLT,C' '              Clear Output Work Area\n         MVC   #993PLT+1(L'#993PLT-1),#993PLT\n         MVC   #993PLTD,#00DT            Copy Date and Time\n*\n         MVC   #993PNAM,@993PNAM         Class Name\nE993PRP  EQU   *                         Paging Plot\n         MVC   #993PTYP,=CL3'PRP'\n         L     R11,SMF993_PRPOF\n         LH    R01,SMF993_PRPLN\n         STH   R01,@99PRPLN\n         LH    R06,SMF993_PRPON\n         LTR   R06,R06\n         BZ    E993MPL\nE993PRPL EQU   *\n         BAL   R14,E99P\n         XR    R01,R01\n         LH    R01,@99PRPLN\n         LA    R11,0(R11,R01)\n         BCT   R06,E993PRPL\n*\nE993MPL  EQU   *                         MPL Plot\n         MVC   #993PTYP,=CL3'MPL'\n         L     R11,SMF993_MPLOF\n         LH    R06,SMF993_MPLON\n         LTR   R06,R06\n         BZ    E993RUA\nE993MPLL EQU   *\n         BAL   R14,E99P\n         XR    R01,R01\n         LH    R01,SMF993_MPLLN\n         LA    R11,0(R11,R01)\n         BCT   R06,E993MPLL\n*\nE993RUA  EQU   *                         MPL Plot\n         MVC   #993PTYP,=CL3'RUA'\n         L     R11,SMF993_RUAOF\n         LH    R06,SMF993_RUAON\n         LTR   R06,R06\n         BZ    E993SWP\nE993RUAL EQU   *\n         BAL   R14,E99P\n         XR    R01,R01\n         LH    R01,SMF993_RUALN\n         LA    R11,0(R11,R01)\n         BCT   R06,E993RUAL\n*\nE993SWP  EQU   *                         MPL Plot\n         MVC   #993PTYP,=CL3'SWP'\n         L     R11,SMF993_SWPOF\n         LH    R06,SMF993_SWPON\n         LTR   R06,R06\n         BZ    E993PAS\nE993SWPL EQU   *\n         BAL   R14,E99P\n         XR    R01,R01\n         LH    R01,SMF993_SWPLN\n         LA    R11,0(R11,R01)\n         BCT   R06,E993SWPL\n*\nE993PAS  EQU   *                         MPL Plot\n         MVC   #993PTYP,=CL3'PAS'\n         L     R11,SMF993_PASOF\n         LH    R06,SMF993_PASON\n         LTR   R06,R06\n         BZ    E993PASX\nE993PASL EQU   *\n         BAL   R14,E99P\n         XR    R01,R01\n         LH    R01,SMF993_PASLN\n         LA    R11,0(R11,R01)\n         BCT   R06,E993PASL\nE993PASX EQU   *\n* ----------------\n         XR    R01,R01\n         LH    R01,@993CPLN\n         LA    R08,0(R01,R08)\n         BCT   R07,E993PLT\n*\nE993PLTX EQU   *\n         XR    R01,R01\n         LH    R01,@99DLN\n         LA    R10,0(R01,R10)\n         BCT   R09,E993\nE993X    EQU   *\n         DROP  R08\n         DROP  R10\n* ----------------\n         B     LOOP01                    Goto Next Record !\n* ----------------\n************\nSA#E99P  DS    18F\nE99P     EQU   *\n         STM   R00,R15,SA#E99P\n         LA    R11,0(R11,R12)\n         USING SMF99_S3_PPRP_MAP,R11\n         L     R01,SMF99_PPRP_PNUM       Service Period Number\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #993PNUM(1),EDWORK+15\n         L     R01,SMF99_PPRP_BW\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #993P_BW(5),EDWORK+11\n         L     R08,SMF99_PPRP_POINTS_OF\n         LH    R09,SMF99_PPRP_POINTS_ON\n         LTR   R09,R09\n         BZ    E99PMAPX\n         L     R01,SMF99_PPRP_LSTX\n         LH    R10,SMF99_PPRP_POINTS_ON\n         SR    R10,R01\n         LA    R10,1(R10)\n         LA    R08,0(R08,R12)\n         USING SMF99_ONE_CURVE_POINT_MAP,R08\nE99PMAP  EQU   *\n         L     R01,SMF99_PLOT_XVAL       X Value\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #993PX(8),EDWORK+8\n         L     R01,SMF99_PLOT_YVAL       X Value\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #993PY(8),EDWORK+8\n         CLR   R10,R09\n         BNE   E99PMAP1\n         MVC   #993LSTX,=CL3'CCC'\nE99PMAP1 EQU   *\n*\n         PUT   T993PLT,#993PLT\n*\n         MVC   #993PTYP,=CL3'   '\n         MVC   #993PNUM,=CL1' '\n         MVC   #993P_BW,=CL5' '\n         MVC   #993PNAM,=CL8' '\n         MVC   #993LSTX,=CL3'   '\n*\n         XR    R01,R01\n         LH    R01,SMF99_PPRP_POINTS_LN\n         LA    R08,0(R08,R01)\n         BCT   R09,E99PMAP\n*\nE99PMAPX EQU   *\n         LM    R00,R15,SA#E99P\n         BR    R14\n         DROP  R08,R11\n*\n**********************************************************************\n*\n*** END OF PROCESS ***********************************************\n@BYE     EQU   *\n*--- Subtype 1 Action Trace Usage Summary ---\n         PUT   T991TRC,#991TS1\n         PUT   T991TRC,#991TS2\n         L     R06,SMF99ACV\nE991TSUM EQU   *\n         CLC   0(4,R06),=XL4'FFFFFFFF'   If Last ?\n         BE    E991TSUX\n         MVI   #991TSUM,C' '\n         MVC   #991TSUM+1(L'#991TSUM-1),#991TSUM\n*\n         L     R01,0(R06)                Code\n         CVD   R01,PK_AREA\n         UNPK  UPK_AREA(8),PK_AREA(8)\n         OI    UPK_AREA+7,X'F0'\n         MVC   #99TSCOD(4),UPK_AREA+4\n         MVC   #99TSCOX(20),4(R06)\n         L     R01,24(R06)               Counter\n         CVD   R01,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   #99TSCNT(10),EDWORK+6\n         PUT   T991TRC,#991TSUM\n         LA    R06,SMF99ACTL(R06)        Next Table Entry\n         B     E991TSUM\nE991TSUX EQU   *\n*\n*--- End of Process ---\n         CLOSE (INDCB,,T991TRC,,T992SCP,,T993PLT)\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*** DCB **********************************************************\nINDCB    DCB   DSORG=PS,MACRF=(GM),DDNAME=INDD,                        *\n               EODAD=@BYE\nT991TRC  DCB   DSORG=PS,MACRF=(PM),DDNAME=T991TRC\nT992SCP  DCB   DSORG=PS,MACRF=(PM),DDNAME=T992SCP\nT993PLT  DCB   DSORG=PS,MACRF=(PM),DDNAME=T993PLT\n*** DEFINE STORAGE ***********************************************\n         DS    0F\nSAVEAREA DS    18F                               SAVEAREA\nREGS     DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         DS    0D\nPK_AREA  DS    PL8\nUPK_AREA DS    XL16\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL16'40202020202020202020202020202120'\nEDMASK2  DC    XL17'40202020202020202020202021204B2020'\nEDMASK3  DC    XL16'60202020202020202020202020202120'\nEDWORK   DS    XL16\nEDWORK2  DS    XL17\nPK_ARE2  DS    PL16\nUPK_ARE2 DS    XL16\nWK#F     DS    F\n#00DT    DS    0CL15\n#00DTEYY DS    CL2            Wrote Date YY\n#00DTEP  DS    CL1'/'                      /\n#00DTEDD DS    CL3                          DDD\n         DC    CL1' '\n#00TMEHH DS    CL2            Wrote Time HH\n#00TMEP1 DS    CL1':'                      :\n#00TMEMM DS    CL2                          MM\n#00TMEP2 DS    CL1':'                         :\n#00TMESS DS    CL2                             SS\nSMF99ACV DC    V(SMF99ACT)               WLM Action Code Table\n* ---------------------------------------------------------\n#991TRCT DC    CL156' YY/DDD HH:MM:SS TRGN     TCNM     P JOBNAME  TSPI*\n                 TLPI  TGSR  TRID TCOD'\n#991TRC  DS    0CL156\n         DS    CL1\n#99DT    DS    0CL15\n#99DTEYY DS    CL2            Wrote Date YY\n#99DTEP  DS    CL1'/'                      /\n#99DTEDD DS    CL3                          DDD\n         DS    CL1\n#99TMEHH DS    CL2            Wrote Time HH\n#99TMEP1 DS    CL1':'                      :\n#99TMEMM DS    CL2                          MM\n#99TMEP2 DS    CL1':'                         :\n#99TMESS DS    CL2                             SS\n         DS    CL1\n#99TRGN  DS    CL8                       Resource Group Name\n         DS    CL1\n#99TCNM  DS    CL8                       Service Class Name\n         DS    CL1\n#99TPER  DS    CL1                       Service Period Number\n         DS    CL1\n#99TJOB  DS    CL8                       Address Space Name\n         DS    CL1\n#99TSPI  DS    CL5                       Sysplex Performance Index\n         DS    CL1\n#99TLPI  DS    CL5                       Local Performance Index\n         DS    CL1\n#99TGSR  DS    CL5                       Group Service Resource\n         DS    CL1\n#99TRID  DS    CL4                       Resource Interval Identifer\n         DS    CL1\n#99TCOD  DS    CL4                       Action Code\n         DS    CL1\n#99TCODX DS    CL20\n         DS    CL1\n         DS    CL156\n* ------------------------------------------\n#991TS1  DC    CL156' *** ACTION CODE USAGE SUMMARY ***'\n#991TS2  DC    CL156' CODE ACTION               COUNT' '\n#991TSUM DS    0CL156\n         DS    CL1\n#99TSCOD DS    CL4\n         DS    CL1\n#99TSCOX DS    CL20\n         DS    CL1\n#99TSCNT DS    CL10\n         DS    CL156\n* ------------------------------------------\n#992SCPT DC    CL256' YY/DDD HH:MM:SS CLASS    P I N  SC  GT   SPI   LP*\n               I DP DP   SERV MDP MPLI MPLO SWAPT   PSI  CPUD  AUXP  AU*\n               XC  VIO   HSS   HSC   ASWP  MPLD  CAPD  XMP  EXP POL'\n#992SCP  DS    0CL256\n         DS    CL1\n#992SCPD DS    0CL15\n#992SCPY DS    CL2            Wrote Date YY\n         DS    CL1'/'                      /\n#992SCPA DS    CL3                          DDD\n         DS    CL1\n#992SCPH DS    CL2            Wrote Time HH\n         DS    CL1':'                      :\n#992SCPM DS    CL2                          MM\n         DS    CL1':'                         :\n#992SCPS DS    CL2                             SS\n         DS    CL1\n#99PCNM  DS    CL8                       Service Class Name\n         DS    CL1\n#99PNUM  DS    CL1                       Service Period Number\n         DS    CL1\n#99PIMPOR DS   CL1                       Period's Importance\n         DS    CL1\n#99PNH   DS    CL1                       \"Need Help\" Indicator\n         DS    CL1\n#99PCDCLOCK DS CL3                       Skip Clock\n         DS    CL1\n#99PGOALTYP DS CL3                       Goal Type\n         DS    CL1\n#99PSPI  DS    CL5                       Sysplex Performance Index\n         DS    CL1\n#99PLPI  DS    CL5                       Local Performance Index\n         DS    CL1\n#99PBDP  DS    CL2                       Dispatching Priority\n         DS    CL1\n#99PBDPD DS    CL3                       Dispatching Priority\n         DS    CL1\n#99PSERV DS    CL5                       Service Units Consumed\n         DS    CL1\n#99PMDP  DS    CL3                       Maximam Demand Percentage of\n         DS    CL1                        CPU Time\n#99PMPLI DS    CL4                       MPL-in Target\n         DS    CL1\n#99PMPLO DS    CL4                       MPL-out Target\n         DS    CL1\n#99PPSPT DS    CL5                       Swap Protect Time (ms)\n         DS    CL1\n#99PPSITAR DS  CL5                       Protective Processer Storage\n         DS    CL1                         Target\n#99PCPUD DS    CL5                       Cpu Dealy\n         DS    CL1\n#99PAUXP DS    CL5\n         DS    CL1\n#99PAUXC DS    CL5\n         DS    CL1\n#99PVIO  DS    CL5\n         DS    CL1\n#99PHSS  DS    CL5\n         DS    CL1\n#99PHSC  DS    CL5\n         DS    CL1\n#99PASWP DS    CL5\n         DS    CL1\n#99PMPLD DS    CL5\n         DS    CL1\n#99PCAPD DS    CL5\n         DS    CL1\n#99PXMO  DS    CL5\n         DS    CL1\n#99PEXPPOL DS  CL50                      Extended Storage Access\n         DS    CL1                         Policies\n         DS    CL156\n* ------------------------------------------\n#993PLTT DC    CL156' YY/DDD HH:MM:SS CLASS    P TYP  P_BW        X    *\n                   Y PLT'\n#993PLT  DS    0CL156\n         DS    CL1\n#993PLTD DS    0CL15\n#993SWPY DS    CL2            Wrote Date YY\n         DS    CL1'/'                      /\n#993SWPA DS    CL3                          DDD\n         DS    CL1\n#993SWPH DS    CL2            Wrote Time HH\n         DS    CL1':'                      :\n#993SWPM DS    CL2                          MM\n         DS    CL1':'                         :\n#993SWPS DS    CL2                             SS\n         DS    CL1\n#993PNAM DS    CL8                       Service Class Name\n         DS    CL1\n#993PNUM DS    CL1                       Service Period Number\n         DS    CL1\n#993PTYP DS    CL3                       PPR or MPL or RUA or SWP or\n         DS    CL1                        RAS\n#993P_BW DS    CL5\n         DS    CL1\n#993PX   DS    CL8                       Tine In Proc Stor\n         DS    CL1\n#993PY   DS    CL8                       Swap Delay\n         DS    CL1\n#993LSTX DS    CL3\n         DS    CL1\n         DS    CL156\n* ------------------------------------------\n@99DOF   DS    F              Data Section Offset\n@99DLN   DS    H              Data Section length\n@99DON   DS    H              Data Section Number\n@99TOF   DS    F              Subtype 1 Trace Section Offset\n@99TLN   DS    H              Subtype 1 Trace Section Length\n@99TON   DS    H              Subtype 1 Trace Section Number\n@992CPOF DS    F              Subtype 2 Class Data Section Offset\n@992CPLN DS    H              Subtype 2 Class Data Section Length\n@992CPON DS    H              Subtype 2 Class Data Section Number\n@993COF  DS    F              Subtype 3 Class Data Section Offset\n@993CLN  DS    H              Subtype 3 Class Data Section Length\n@993CON  DS    H              Subtype 3 Class Data Section Number\n@993CPOF DS    F              Subtype 3 Class Data Section Offset\n@993CPLN DS    H              Subtype 3 Class Data Section Length\n@993CPON DS    H              Subtype 3 Class Data Section Number\n@993PNAM DS    CL8            Subtype 3 Class Name\n@99PRPLN DS    H              Subtype 3 PRP Length\n@99MPLLN DS    H              Subtype 3 MPL Length\n@99RUALN DS    H              Subtype 3 RUA Length\n@99SWPLN DS    H              Subtype 3 SWP Length\n@99PASLN DS    H              Subtype 3 PAS Length\n* ------------------------------------------\n*** REC TYPE LITERAL ORIGIN **************************************\n         LTORG\nRECAREA  DS    32767C\n         COPY  @SMF99#T\n         PRINT GEN\n         IRASMF99\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   SMF99E\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=THIS.LIBRARY,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//OBJ      DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=YOUR.OBJLIB\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(@SE99#00)\n//SYSIN    DD  *\n INCLUDE OBJ(@OS#6HC)\n ENTRY   SMF99E\n NAME    @SE99#00(R)\n/*\n//SCRATCH EXEC PGM=IEFBR14\n//DD1      DD  DSN=SMFEDIT.T991TRC,DISP=(OLD,DELETE),\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//DD2      DD  DSN=SMFEDIT.T992SCP,DISP=(OLD,DELETE),\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//DD3      DD  DSN=SMFEDIT.T993PLT,DISP=(OLD,DELETE),\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//DD4      DD  DSN=SMFEDIT.T991TRC.J,DISP=(OLD,DELETE),\n//         UNIT=SYSDA,VOL=SER=VOLSER\n//*********************\n//SMFDP   EXEC PGM=UFASMFDP\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//INDD     DD DSN=SMFDUMP.MVS1(-1),DISP=SHR\n//OUTDD    DD DSN=&&DUMPOUT,DISP=(,PASS),\n//         UNIT=SYSDA,VOL=SER=VOLSER,SPACE=(CYL,(50,50),RLSE)\n//SYSIN DD *\n SID(MVS1)\n START(1830)\n END(1900)\n INDD(INDD,OPTIONS(DUMP))\n OUTDD(OUTDD,TYPE(99))\n//*********************\n//REPORT  EXEC PGM=*.L.SYSLMOD,COND=((9,LT,A),(9,LT,L))\n//*       EXEC PGM=@SE99#00,COND=((9,LT,A),(9,LT,L))\n//STEPCAT  DD  DSN=USER.CATALOG,DISP=SHR\n//STEPLIB  DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=DDMSL.V1R2M1.LOADLIB\n//*NDD     DD  DSN=SMF.MVS1.D980811.NO2,DISP=SHR,\n//*        UNIT=SYSDA,VOL=SER=VOLSER\n//INDD     DD  DSN=&&DUMPOUT,DISP=OLD\n//T991TRC  DD  DSN=SMFEDIT.T991TRC,DISP=(,CATLG),\n//         UNIT=SYSDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=156,BLKSIZE=15600)\n//T992SCP  DD  DSN=SMFEDIT.T992SCP,DISP=(,CATLG),\n//         UNIT=SYSDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=256,BLKSIZE=25600)\n//T993PLT  DD  DSN=SMFEDIT.T993PLT,DISP=(,CATLG),\n//         UNIT=SYSDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10),RLSE),\n//         DCB=(RECFM=FB,LRECL=156,BLKSIZE=15600)\n//LIST    EXEC PGM=IKJEFT01,TIME=1440,REGION=20M,\n//         PARM='%@WLMTRC'\n//STEPCAT  DD DSN=USER.CATALOG,DISP=SHR\n//SYSPROC  DD DSN=THIS.LIBRARY,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//INF      DD  DSN=SMFEDIT.T991TRC,DISP=SHR\n//TBL      DD  DSN=WLM.TRACE.DATA,DISP=SHR\n//OUT      DD  DSN=SMFEDIT.T991TRC.J,DISP=(,CATLG),\n//         UNIT=SYSDA,VOL=SER=VOLSER,SPACE=(CYL,(10,10),RLSE),\n//         DCB=(RECFM=VB,LRECL=1024,BLKSIZE=10244)\n//SYSTSIN  DD DUMMY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@VOL": {"ttr": 5384, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x05/\\x01\\x00\\x05/\\x17W\\x00\\x03\\x00\\x03\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-21T00:00:00", "modifydate": "2000-02-21T17:57:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "KIMU"}, "text": "//VOLLST  PROC V='HELP'\n//VOLLST  EXEC PGM=@VOL,PARM='&V'\n//STEPLIB  DD DSN=your.module.library,DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@VOL#301": {"ttr": 5386, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x04\\xe7\\x04\\xe7\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 1255, "newlines": 1255, "modlines": 0, "user": "KIMU"}, "text": "//jobname  JOB CLASS=x,MSGCLASS=x,NOTIFY=user-id               <- CHECK\n//* -----------------------------------------------------------------\n//* @VOL ! Install ...                                         <-<CHECK\n//* Step1:                                                     <- CHECK\n//*   File transfer to MVS .                                   <- CHECK\n//* Step2:                                                     <- CHECK\n//*  Enter below line                                          <- CHECK\n//*  => X ALL;F '<- CHECK' ALL (Enter)                         <- CHECK\n//* Step3:                                                     <- CHECK\n//*  Update Non-Exclusive Line .                               <- CHECK\n//*  ex. => C 'object.library' 'USER.OBJECT' ALL NX (Enter)    <- CHECK\n//* Step4:                                                     <- CHECK\n//*  Submit This JCL and Lock WTO Message .                    <- CHECK\n//* Step5:                                                     <- CHECK\n//*  Comcat Created Datasets in Your Logon Procedure .         <- CHECK\n//*   module.library : STEPLIB                                 <- CHECK\n//* Step6:                                                     <- CHECK\n//*  Create This Procedure in Your System Procedure Library .  <- CHECK\n//*  +-----------------------------------------------------+   <- CHECK\n//*  |//VOLLST  PROC V='HELP'                              |   <- CHECK\n//*  |//VOLLST  EXEC PGM=@VOL,PARM='&V'                    |   <- CHECK\n//*  |//STEPLIB  DD DSN=module.library,DISP=SHR            |   <- CHECK\n//*  +-----------------------------------------------------+   <- CHECK\n//* Step6:                                                     <- CHECK\n//*   Enter Below TSO Command .                                <- CHECK\n//*    @VOL serial (Enter)                                     <- CHECK\n//* -----------------------------------------------------------------\n//JOBCAT   DD DSN=user.catalog,DISP=SHR                        <- CHECK\n//A1      EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n* -----------------------------------------------------------------\n         DC   C'<< Volume Scan ... Scanning Online DASD >>'\n         DC   C'  Version '\n@VERSION DC   CL6'v3r1m0'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n* --- Start of Process --------------------------------------------\n@VOL     CSECT\n*VOL     AMODE 31\n*VOL     RMODE ANY\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05               Base Reg. R03,R04,R05\n         LA    R04,2048(R03)               2'ND Base Reg\n         LA    R04,2048(R04)\n         LA    R05,2048(R04)               3'ND Base Reg\n         LA    R05,2048(R05)\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* set CPPL Base Reg.\n         LR    R06,R01                     Load CPPL Address\n*\n         LA    R08,EXT#TSO\n         EXTRACT (R08),FIELDS=TJID         CHECK TSO\n         CLC   EXT#TSO,=F'0'\n         BNE   TSO#PROC\n*        LA    R08,EXT#TSO\n*        EXTRACT (R08),FIELDS=TSO          CHECK TSO\n*        TM    EXT#TSO,X'80'               if TSO then\n*        BNO   TSO#PROC                       goto ---\n* STC or BATCH Environment\n*\n* if STC address space ---\nSTC#P    EQU   *\n         MVC   @OPTION,@OPTCHP\n         MVC   @OPTION2,@OPTON            Display Option-2\n*\n         MVI   @SERIAL,X'40'              Clear Volume Serial\n         MVC   @SERIAL+1(L'@SERIAL-1),@SERIAL\n         MVC   MSG#P001+03(04),=CL04'@VOL'\n         L     R01,@VER_A\n         MVC   MSG#P001+08(06),0(R01)\n         MVC   MSG#P001+15(16),=CL16' Scan Volume is '\n         L     R06,0(R06)                 Copy Volume Serial\n         LH    R02,0(R06)                 Parameter Length\n         LA    R12,2(R06)                 Start Pointer\n         LR    R11,R12                    Current Pointer\n         XR    R01,R01                    Loop Clounter\nSTC#PL0  EQU   *\n         CLI   0(R11),C','                If Parm Next\n         BE    STC#PL0X\n         CLI   0(R11),C' '                If Parm Next\n         BE    STC#PL0X\n         CLR   R01,R02                    If Parm End\n         BNL   STC#PL0X\n         LA    R01,1(R01)                 Loop Counter + 1\n         LA    R11,1(R11)                 Next Byte\n         B     STC#PL0                    Loop\nSTC#PL0X EQU   *\n         STC   R01,*+5                    Copy Volume Serial\n         MVC   @SERIAL(6),0(R12)\n         ST    R01,@SERL\n         STC   R01,*+5                    Copy Title Line\n         MVC   MSG#P001+31(6),@SERIAL\n         LA    R12,MSG#P001+31(R01)\n         MVI   0(R12),C' '\n         CLR   R01,R02                    If Parm End\n         BNL   STC#PLX\n         SR    R02,R01\n         LA    R11,1(R11)                 Option 1 Search\n         BCTR  R02,0\n         LR    R12,R11\n         XR    R01,R01\nSTC#PL1  EQU   *\n         CLI   0(R11),C','\n         BE    STC#PL1X\n         CLI   0(R11),C' '\n         BE    STC#PL1X\n         LA    R01,1(R01)\n         CLR   R01,R02\n         BNL   STC#PL1X\n         LA    R11,1(R11)\n         B     STC#PL1\nSTC#PL1X EQU   *\n         LA    R06,@OP1_S\n         LA    R07,@OP1_E\n         BCTR  R01,0\n         STC   R01,*+5\nSTC#PC1  EQU   *\n         CLC   0(0,R06),0(R12)\n         BE    STC#PC1F\n         LA    R06,10(R06)\n         CLR   R06,R07\n         BNH   STC#PC1\n         MVC   @OPTION,@OPTCHP\n         B     STC#PC1X\nSTC#PC1F EQU   *\n         MVC   @OPTION,8(R06)\n         B     STC#PC1X\nSTC#PC1X EQU   *\n         MVC   MSG#P001+52(8),0(R06)\nSTC#PLX  EQU   *\n         MVC   @FILE(8),=CL8'NOFILE  '\n*\n         LA    R01,MSG#P001\n*        LA    R02,L'MSG#P001\n         LA    R02,80\n         BAL   R14,@PUTL#S\n*\n         BAL   R14,@SCANUCB                super locate routine\n*\n         B     @BYE\n*\n* if TSO address space ---\nTSO#PROC EQU   *\n         ST    R06,CPPL_PTR                save CPPL Address\n         USING CPPL,R06                    CPPL Base Reg. R06\n*\n         BAL   R14,@PPL                    parse command routine\n*\n         BAL   R14,@SCANUCB                super locate routine\n*\n@BYE     EQU   *\n         CLC   @FILE(8),=CL8'NOFILE  '\n         BE    @BYEX\n         CLOSE (OUTDCB)\n@BYEX    EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n* --- Sub Routine -------------------------------------------------\n* --- PPL ( parse service routine ) -------------------------------\n@PPL     EQU   *\n         STM   R00,R15,SAVEPPL     save reg.\n         GETMAIN RU,LV=L_PPL       getmain PPL comm area\n         STM   R00,R01,PPL_LEN     save getmain length and address\n         L     R12,PPL_ADR\n         USING PPL,R12             PPL Base Reg. R12\n         MVC   PPLUPT,CPPLUPT      UPT address from CPPL\n         MVC   PPLECT,CPPLECT      ECT address from CPPL\n         MVC   PPLCBUF,CPPLCBUF    command buffer from CPPL\n         LA    R01,ANS             load answer area address and\n         ST    R01,PPLANS           store it in the PPL\n         XC    #ECB,#ECB           clear ECB ( event control block )\n         LA    R01,#ECB            load ECB address and\n         ST    R01,PPLECB           store it in the PPL\n         L     R01,PCLADCON        load PCL address and\n         ST    R01,PPLPCL           store it in the PPL\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)\n         DROP  R12\n         LTR   R15,R15             test IKJPARS\n         BNZ   @PPL_ERR             if error goto @PPL_ERR\n         MVI   @SERIAL,X'40'       clear @SERIAL\n         MVC   @SERIAL+1(L'@SERIAL-1),@SERIAL\n         MVI   @FILE,X'40'         clear @FILE\n         MVC   @FILE+1(L'@FILE-1),@FILE\n         L     R12,ANS             load PPL answer area\n         USING PRDSECT,R12\n         L     R01,PCLVOL          R01 <- volume address\n         LH    R02,PCLVOL+4        R02 <- volume length\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   @SERIAL(0),0(R01)   copy dsname\n         ST    R02,@SERL\n         L     R01,FNAME           R01 <- file address\n         LH    R02,FNAME+4         R02 <- file length\n         LTR   R02,R02\n         BZ    @PPLFIL1\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   @FILE(0),0(R01)     copy dd-name\n         ST    R02,@FILEL\n         MVC   OUTDCB+X'28'(8),@FILE copy dd-name\n         OPEN  (OUTDCB,(OUTPUT))\n         B     @PPLFILX\n@PPLFIL1 EQU   *\n         MVC   @FILE(6),=C'NOFILE' copy dd-name\n@PPLFILX EQU   *\n*        TPUT  @FILE,L'@FILE\n* --- Partition Create --------------------------------------------\n         MVC   MSG#P001+3(16),=CL16' Scan Volume is '\n         L     R02,@SERL\n         STC   R02,*+5\n         MVC   MSG#P001+19(0),@SERIAL\n         LA    R02,MSG#P001+20(R02)\n         MVI   0(R02),C' '\n*\n         MVC   @OPTION(2),PCLSPC\n         MVC   @OPTION2(2),PCLON\n         MVC   @OPTION3(2),PCLWAIT\n         CLC   PCLSPC(2),@OPTSPC\n         BE    @PPL#SP1\n         CLC   PCLSPC(2),@OPTCHP\n         BE    @PPL#SP2\n         CLC   PCLSPC(2),@OPTCACH\n         BE    @PPL#SP3\n         CLC   PCLSPC(2),@OPTNON\n         BE    @PPL#SP4\n         MVC   MSG#P001+52(7),=CL7' Other '\n         B     @PPL#X\n@PPL#SP1 EQU   *\n         MVC   MSG#P001+52(7),=CL7' Space '\n         B     @PPL#X\n@PPL#SP2 EQU   *\n         MVC   MSG#P001+52(7),=CL7' CHP   '\n         B     @PPL#X\n@PPL#SP3 EQU   *\n         MVC   MSG#P001+52(7),=CL7' Cache '\n         B     @PPL#X\n@PPL#SP4 EQU   *\n         MVC   MSG#P001+52(7),=CL7' None  '\n         B     @PPL#X\n@PPL#X   EQU   *\n         CLC   PCLON(2),@OPTON\n         BE    @PPL#ON1\n         CLC   PCLON(2),@OPTOFF\n         BE    @PPL#ON2\n         CLC   PCLON(2),@OPTALL\n         BE    @PPL#ON3\n         CLC   PCLON(2),@OPTPRV\n         BE    @PPL#ON4\n         CLC   PCLON(2),@OPTSTG\n         BE    @PPL#ON5\n         MVC   MSG#P001+60(8),=CL8' Public '\n         B     @PPL#X2\n@PPL#ON1 EQU   *\n         MVC   MSG#P001+60(8),=CL8' Online '\n         B     @PPL#X2\n@PPL#ON2 EQU   *\n         MVC   MSG#P001+60(9),=CL9' Offline '\n         B     @PPL#X2\n@PPL#ON3 EQU   *\n         MVC   MSG#P001+60(5),=CL5' ALL '\n         B     @PPL#X2\n@PPL#ON4 EQU   *\n         MVC   MSG#P001+60(9),=CL9' Private '\n         B     @PPL#X2\n@PPL#ON5 EQU   *\n         MVC   MSG#P001+60(9),=CL9' Storage '\n         B     @PPL#X2\n@PPL#X2  EQU   *\n         CLC   PCLWAIT(2),@OPTWAIT\n         BE    @PPL#WT1\n         MVC   MSG#P001+70(8),=CL8' NoWait '\n         B     @PPL#X3\n@PPL#WT1 EQU   *\n         MVC   MSG#P001+70(6),=CL6' Wait '\n         B     @PPL#X3\n@PPL#X3  EQU   *\n         LA    R01,MSG#P001\n         LA    R02,L'MSG#P001\n         BAL   R14,@PUTL#S\n         DROP  R12\n*\n         L     R01,PPL_ADR         free main PPL comm area\n         FREEMAIN RU,LV=L_PPL,A=(R01)\n         LM    R00,R15,SAVEPPL     load reg.\n         BR    R14                 return\n*\n@PPL_ERR EQU   *\n         L     R01,PPL_ADR         free main PPL comm area\n         FREEMAIN RU,LV=L_PPL,A=(R01)\n         LM    R00,R15,SAVEPPL     load reg.\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n* --- PUTLINE servise routine ( single line ) ---------------------\n@PUTL#S  EQU   *\n         STM   R00,R15,SAVEIOPL    save reg.\n         CLC   @FILE(8),=CL8'NOFILE'\n         BNE   @PUTL#S3\n         CLC   EXT#TSO,=F'0'\n         BE    @PUTL#S2\n* TSO Environment\n         STC   R02,*+5\n         MVC   PUTL#S_(0),0(R01)           copy message area\n         LA    R02,4(R02)                  length + 4\n         STH   R02,PUTL#SL                  store length\n         XC    #ECB,#ECB                   clear ECB area\n         XC    #IOPL(16),#IOPL             clear IOPL area\n         L     R10,CPPLUPT\n         L     R11,CPPLECT\n         PUTLINE PARM=PUTBLOK,UPT=(10),ECT=(11),ECB=#ECB,              *\n               OUTPUT=(PUTL#S,TERM,SINGLE,DATA),MF=(E,#IOPL)\n         B     @PUTL#SX\n* STC or JOB Environment\n@PUTL#S2 EQU   *\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   MESSAGE(0),0(R01)           copy message area\n         LA    R02,WTOHDR(R02)            length + 4\n         STH   R02,WTOAREA                  store length\n         LA    R01,WTOAREA\n         SVC   35                        * WTO MESSAGE\n         B     @PUTL#SX\n* FILE Write\n@PUTL#S3 EQU   *\n         MVI   OUTAREA,X'40'         clear @FILE\n         MVC   OUTAREA+1(L'OUTAREA-1),OUTAREA\n         BCTR  R02,0\n         STC   R02,*+5\n         MVC   OUTAREA(0),0(R01)           copy message area\n         PUT   OUTDCB,OUTAREA\n         B     @PUTL#SX\n@PUTL#SX EQU   *\n         LM    R00,R15,SAVEIOPL            load reg.\n         BR    R14                         return\n* --- PUTLINE servise routine ( multi line ) ----------------------\n@PUTL#M  EQU   *\n         STM   R00,R15,SAVEIOPL    save reg.\n         XC    #IOPL(16),#IOPL             clear IOPL area\n         LA    R12,#IOPL                   Load IOPL Address\n         USING IOPL,R12                    IOPL Base Reg. R12\n         L     R01,CPPLUPT\n         ST    R01,IOPLUPT\n         L     R01,CPPLECT\n         ST    R01,IOPLECT\n         XC    #ECB,#ECB                   clear ECB area\n         LA    R01,#ECB\n         ST    R01,IOPLECB\n         PUTLINE PARM=PUTBLOK,OUTPUT=((2),MULTLIN,DATA),               *\n               MF=(E,#IOPL)\n         DROP  R12\n         LM    R00,R15,SAVEIOPL            load reg.\n         BR    R14                         return\n* --- SCANUCB -----------------------------------------------------\n@SCANUCB EQU   *\n         STM   R00,R15,SAVEUCB             load reg.\n         XC    U#COPY,U#COPY\n         XC    U#WORK,U#WORK\n         CLC   @SERIAL(4),=CL4'HELP  '\n         BE    @HELP\n*\n*        L     R12,CVTPTR              CVT ADDR. ( PSA + X'10' )\n*        USING CVTMAP,R12\n*        XC    WORKAREA,WORKAREA\n*        MVI   DEVCLASS,UCB3DACC\n*        OI    PARMUCB,X'80'\n@U_NEXT  EQU   *\n         UCBSCAN COPY,WORKAREA=U#WORK,UCBAREA=U#COPY,                  *\n               DEVCLASS=DASD,RANGE=ALL\n*\n*        LA    R01,PARMLIST\n*        L     R15,CVTUCBSC\n*        BALR  R14,R15\n         LTR   R15,R15\n         BNZ   @U_QUIT\n         USING UCBOB,R10\n         LA    R10,U#COPY\n*        L     R10,U#PTR\n*        L     R10,ADDRUCB\n*\n         CLC   @OPTION2(2),@OPTON\n         BNE   @U_OPT#1\n         TM    UCBSTAT,UCBONLI  ( X'80' )   if offline then\n         BNO   @U_X                           goto ---\n         B     @U_OPT#X\n@U_OPT#1 EQU   *\n         CLC   @OPTION2(2),@OPTOFF\n         BNE   @U_OPT#2\n         TM    UCBSTAT,UCBONLI  ( X'80' )   if offline then\n         BO    @U_X                           goto ---\n         B     @U_OPT#X\n@U_OPT#2 EQU   *\n         CLC   @OPTION2(2),@OPTPRV\n         BNE   @U_OPT#3\n         TM    UCBSTAB,UCBBPRV  ( X'10' )\n         BNO   @U_X                           goto ---\n         B     @U_OPT#X\n@U_OPT#3 EQU   *\n         CLC   @OPTION2(2),@OPTSTG\n         BNE   @U_OPT#4\n         TM    UCBSTAB,UCBBSTR  ( X'10' )\n         BNO   @U_X                           goto ---\n         B     @U_OPT#X\n@U_OPT#4 EQU   *\n         CLC   @OPTION2(2),@OPTPUB\n         BNE   @U_OPT#5\n         TM    UCBSTAB,UCBBPUB  ( X'10' )\n         BNO   @U_X                           goto ---\n         B     @U_OPT#X\n@U_OPT#5 EQU   *\n         B     @U_OPT#X\n@U_OPT#X EQU   *\n*\n         LA    R01,@SERIAL\n         LA    R02,UCBVOLI\n         LA    R14,6\n@U_SER#C EQU   *\n         CLI   0(R01),C'*'\n         BE    @U_SER#X\n         CLI   0(R01),C'%'\n         BE    @U_SER#N\n         CLI   0(R01),C'+'\n         BE    @U_SER#N\n         CLC   0(R01,1),0(R02)\n         BNE   @U_X\n@U_SER#N EQU   *\n         LA    R01,1(R01)\n         LA    R02,1(R02)\n         BCT   R14,@U_SER#C\n@U_SER#X EQU   *\n         MVI   MSG#O001,C'>'\n         MVI   MSG#O001+1,C' '\n         MVC   MSG#O001+2(L'MSG#O001-2),MSG#O001+1\n* copy to address\n         MVC   PATHDEVN(2),UCBCHAN\n         CALL  @OS#6HC,(PATHDEVN,MSG#O001+2,2)\n*        MVC   MSG#O001+2(3),UCBNAME        copy address\n* copy to volume serial\n         MVC   MSG#O001+7(6),UCBVOLI        copy volume serial\n* check to device type\n         CLI   UCBTBYT4,X'0E'               3380\n         BE    @U_3380\n         CLI   UCBTBYT4,X'0F'               3390\n         BE    @U_3390\n         MVC   MSG#O001+14(5),=C'OTHER'\n         B     @U_TYPEX\n@U_3380  EQU   *\n         MVC   MSG#O001+14(5),=C'3380 '\n         B     @U_TYPEX\n@U_3390  EQU   *\n         MVC   MSG#O001+14(5),=C'3390 '\n         B     @U_TYPEX\n@U_TYPEX EQU   *\n* check to status\n         TM    UCBSTAT,UCBRESV  ( X'20' )\n         BNO   @U_STAT1\n         MVI   MSG#O001+20,C'R'\n         B     @U_STATX\n@U_STAT1 EQU   *\n         TM    UCBSTAT,UCBALOC  ( X'08' )\n         BNO   @U_STAT2\n         MVI   MSG#O001+20,C'A'\n         B     @U_STATX\n@U_STAT2 EQU   *\n         TM    UCBSTAT,UCBSYSR  ( X'02' )\n         BNO   @U_STAT3\n         MVI   MSG#O001+20,C'S'\n         B     @U_STATX\n@U_STAT3 EQU   *\n         TM    UCBSTAT,UCBONLI  ( X'80' )\n         BNO   @U_STAT4\n         MVI   MSG#O001+20,C'O'\n         B     @U_STATX\n@U_STAT4 EQU   *\n@U_STATX EQU   *\n         TM    UCBSTAB,UCBBPRV  ( X'10' )\n         BNO   @U_STAB1\n         MVC   MSG#O001+22(3),=C'PRV'\n         B     @U_STABX\n@U_STAB1 EQU   *\n         TM    UCBSTAB,UCBBPUB  ( X'08' )\n         BNO   @U_STAB2\n         MVC   MSG#O001+22(3),=C'PUB'\n         B     @U_STABX\n@U_STAB2 EQU   *\n         TM    UCBSTAB,UCBBSTR  ( X'04' )\n         BNO   @U_STAB3\n         MVC   MSG#O001+22(3),=C'STR'\n         B     @U_STABX\n@U_STAB3 EQU   *\n@U_STABX EQU   *\n         TM    UCBSTAB,UCBPGFL  ( X'40' )\n         BNO   @U_STAB4\n         TM    UCBSTAB,UCBBNUL  ( X'01' )\n         BNO   @U_STAB4\n         MVC   MSG#O001+25(7),=CL7'/PG-CAT'\n         B     @U_STABQ\n@U_STAB4 EQU   *\n         TM    UCBSTAB,UCBPGFL  ( X'40' )\n         BNO   @U_STAB5\n         MVC   MSG#O001+25(7),=CL7'/PG    '\n         B     @U_STABQ\n@U_STAB5 EQU   *\n         TM    UCBSTAB,UCBBNUL  ( X'01' )\n         BNO   @U_STAB6\n         MVC   MSG#O001+25(7),=CL7'/CAT   '\n         B     @U_STABQ\n@U_STAB6 EQU   *\n@U_STABQ EQU   *\n* --- Space ---\n         TM    UCBSTAT,UCBONLI  ( X'80' )   if offline then\n         BNO   @U_SPC#X                       goto ---\n         CLC   @OPTION(2),@OPTSPC\n         BNE   @U_SPC#X\n* --- wait check ---\n         CLC   @OPTION3(2),@OPTWAIT\n         BE    @U_WT\n         CLI   UCBSQC,X'00'\n         BNE   @U_SPC#N\n@U_WT    EQU   *\n         LA    R11,MSG#O001+33\n         LSPACE UCB=(R10),MSG=(R11),MF=I\n         B     @U_SPC#X\n@U_SPC#N EQU   *\n         MVC   MSG#O001+33(30),MSG#BUSY\n@U_SPC#X EQU   *\n* --- Path Map ---\n         CLC   @OPTION(2),@OPTCHP\n         BNE   @U_CHP#X\n         XC    PATHMAP,PATHMAP\n         UCBINFO PATHMAP,MAPAREA=PATHMAP,DEVN=PATHDEVN,                *\n               RETCODE=B#WK1,RSNCODE=B#WK2\n         LTR   R15,R15\n         BNZ   @U_MAP#E\n         USING IOSDMAP,R11\n         LA    R11,PATHMAP\n         USING MAPDATA,R12\n         LA    R12,MAPCHPDT\n         LA    R09,MSG#O001+33\n         XR    R02,R02\n         IC    R02,MAPCHPNO\n@U_MAP#L EQU   *\n         MVC   B#WK1(3),MAPCHPID\n         CALL  @OS#6HC,(B#WK1,(R09),1)\n         MVI   2(R09),C':'\n         CLI   B#WK1+2,X'06'\n         BE    @U_MAP#6\n         CLI   B#WK1+2,X'02'\n         BE    @U_MAP#2\n         MVI   3(R09),C'-'\n         B     @U_MAP#O\n@U_MAP#6 EQU   *\n         MVI   3(R09),C'+'\n         B     @U_MAP#O\n@U_MAP#2 EQU   *\n         MVI   3(R09),C'*'\n         B     @U_MAP#O\n@U_MAP#O EQU   *\n         LA    R09,5(R09)\n         LA    R12,3(R12)\n         BCT   R02,@U_MAP#L\n         B     @U_MAP#X\n         DROP  R11,R12\n@U_MAP#E EQU   *\n         CALL  @OS#6HC,(B#WK1,MSG#PATH+12,4)\n         CALL  @OS#6HC,(B#WK2,MSG#PATH+21,4)\n         MVC   MSG#O001+33(30),MSG#BUSY\n@U_MAP#X EQU   *\n@U_CHP#X EQU   *\n* --- Cache ---\n         CLC   @OPTION(2),@OPTCACH\n         BNE   @U_CHE#X\n*\n* --- APF Test ---\n         TESTAUTH FCTN=1                       Call Parameter Edit\n         LTR   R15,R15                         if Auth\n         BZ    @U_CAC#G\n         MVC   MSG#O001+33(30),MSG#CACH\n         B     @U_CHE#X                          goto @TERM#E1\n*\n@U_CAC#G EQU   *\n         MVI   LD#BUFF,X'00'                   Clear LISTDATA Buffer\n         LA    R00,LD#BUFF\n         LA    R01,LLD#BUFF-1\n         LA    R14,LD#BUFF+1\n         MVCL  R00,R14\n         XC    SSGARGL(SSGARGLL),SSGARGL\n         XC    SSGADDN,SSGADDN\n         LA    R01,UCBVOLI\n         ST    R01,SSGAVOL\n         MVC   SSGUNIT,UCBTYP\n         LA    R01,LLD#BUFF\n         ST    R01,SSGOLN\n         LA    R01,LD#BUFF\n         ST    R01,SSGOADR\n         XR    R01,R01\n*        IC    R01,=BL1'11110010'\n         IC    R01,=BL1'01000000'\n         STC   R01,SSGOPT1\n         XC    SSGOPT2,SSGOPT2\n         XC    SSGMDLID,SSGMDLID\n         XC    SSGRCIOS,SSGRCIOS\n*        WTO   'LISTDATA ( EXECUTE )'\n         LA    R01,LDPARM\n         LINK  EP=IDCSS01\n         ST    R15,B#WK1\n         LA    R11,LD#BUFF                     R11 <- SSGDA Base Reg.\n         USING SSGDA,R11\n         LA    R12,SSGDADA\n         USING SSGDASS,R12                     R12 <- SSGDASS Base Reg.\n*\n         LTR   R15,R15                         if IDCSS01 is Error\n         BZ    @LD_CHK                           goto @LD_ERR1\n*        CALL  @OS#6HC,(B#WK1,MSG#E003+22,4)\n         CALL  @OS#6HC,(SSGRCIOS,MSG#CAC2+17,1)\n         CALL  @OS#6HC,(LD#RC,MSG#CAC2+29,2)\n         MVC   MSG#O001+33(40),MSG#CAC2\n         B     @U_CHE#X                          goto @TERM#E1\n@LD_CHK  EQU   *\n*** SUBSYSTEM STATUS ***\n         TM    SSGDACST,X'E0'\n         BO    @01                           DESTAGE ERROR\n         TM    SSGDACST,X'C0'\n         BO    @02                           OFFLINE PROCESSING\n         TM    SSGDACST,X'80'\n         BO    @03                           CACHE OFF\n         TM    SSGDACST,X'40'\n         BO    @04                           HARD ERROR\n         TM    SSGDACST,X'20'\n         BO    @05                           ONLINE PROCESSING\n*\n         MVC   MSG#CAC3+04(03),=CL03'ON'\n         B     @0X\n@01      EQU   *\n         MVC   MSG#CAC3+04(03),=CL03'DES'\n         B     @0X\n@02      EQU   *\n         MVC   MSG#CAC3+04(03),=CL03'OFP'\n         B     @0X\n@03      EQU   *\n         MVC   MSG#CAC3+04(03),=CL03'OFF'\n         B     @0X\n@04      EQU   *\n         MVC   MSG#CAC3+04(03),=CL03'HRD'\n         B     @0X\n@05      EQU   *\n         MVC   MSG#CAC3+04(03),=CL03'ONP'\n         B     @0X\n@0X      EQU   *\n*** NVS STATUS ***\n         TM    SSGDANST,X'C0'\n         BO    @21                           DESTAGE ERROR\n         TM    SSGDANST,X'80'\n         BO    @22                           OFF\n         TM    SSGDANST,X'40'\n         BO    @23                           HARD ERROR\n*\n         MVC   MSG#CAC3+12(03),=CL03'ON'\n         B     @2X\n@21      EQU   *\n         MVC   MSG#CAC3+12(03),=CL03'DES'\n         B     @2X\n@22      EQU   *\n         MVC   MSG#CAC3+12(03),=CL03'OFF'\n         B     @2X\n@23      EQU   *\n         MVC   MSG#CAC3+12(03),=CL03'HRD'\n         B     @2X\n@2X      EQU   *\n*** DEVICE STATUS ***\n         TM    SSGDAUST,X'C0'\n         BO    @31                           DEVICE OFF\n         TM    SSGDAUST,X'80'\n         BO    @32                           DEVICE ERROR\n*\n         MVC   MSG#CAC3+20(03),=CL03'ON '\n         B     @3X\n@31      EQU   *\n         MVC   MSG#CAC3+20(03),=CL03'OFF'\n         B     @3X\n@32      EQU   *\n         MVC   MSG#CAC3+20(03),=CL03'DEV'\n         B     @3X\n@3X      EQU   *\n*** DFW STATUS ***\n         TM    SSGDAUST,X'30'\n         BO    @41                           DFW OFF\n         TM    SSGDAUST,X'20'\n         BO    @42                           DFW ERROR\n*\n         MVC   MSG#CAC3+28(03),=CL03'ON '\n         B     @4X\n@41      EQU   *\n         MVC   MSG#CAC3+28(03),=CL03'OFF'\n         B     @4X\n@42      EQU   *\n         MVC   MSG#CAC3+28(03),=CL03'ERR'\n         B     @4X\n@4X      EQU   *\n*** CFW STATUS ***\n         TM    SSGDACST,X'01'\n         BO    @11                           CFW OFF\n*\n         MVC   MSG#CAC3+36(03),=CL03'ON '\n         B     @1X\n@11      EQU   *\n         MVC   MSG#CAC3+36(03),=CL03'OFF'\n         B     @1X\n@1X      EQU   *\n         MVC   MSG#O001+33(40),MSG#CAC3\n*        WTO   'LISTDATA ( RETURN  )'\n@U_CHE#X EQU   *\n* -------------\n*        IOSINFO FUNCTN=SUBCHNO,UCB=(R10),OUTPUT=SUBCH,                *\n               RTNCODE=SUBCHRC\n*        CALL  @OS#6HC,(SUBCH,MSG#O001+21,4)\n*\n@U_PRT   EQU   *\n         LA    R01,MSG#O001\n         LA    R02,L'MSG#O001\n         BAL   R14,@PUTL#S\n@U_X     EQU   *\n         B     @U_NEXT\n@U_QUIT  EQU   *\n*        DROP  R10,R12\n         DROP  R10\n         LM    R00,R15,SAVEUCB             load reg.\n         BR    R14                         return\n* --- Sub Routine ( error routine ) -------------------------------\n* --- Help Message ------------------------------------------------\n@HELP    EQU   *\n         LA    R07,MSG#HELP\n         LA    R08,L'MSG#HELP\n         LA    R09,MSG#HPL\n         XR    R10,R10\n@HELP#L  EQU   *\n         CLR   R10,R09\n         BNL   @HELP#X\n         LR    R01,R07\n         LR    R02,R08\n         BAL   R14,@PUTL#S\n         LA    R07,0(R07,R08)\n         LA    R10,0(R10,R08)\n         B     @HELP#L\n@HELP#X  EQU   *\n         B     @U_QUIT\n* --- Super Locate Getmain Error ----------------------------------\n@S_GMERR EQU   *\n         ST    R15,B#WK1\n         CALL  @OS#6HC,(B#WK1,MSG#E001+35,4)\n         LA    R01,MSG#E001\n         LA    R02,L'MSG#E001\n         BAL   R14,@PUTL#S\n         B     @TERM\n@TERM    EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=8\n* --- Define Storage ----------------------------------------------\n* --- Reg. Save Area ----------------------------------------------\n         DS    0F\nSAVEAREA DS    18F\nSAVEPPL  DS    18F\nSAVEIOPL DS    18F\nSAVELOCS DS    18F\nSAVEPRTS DS    18F\nSAVEINFO DS    18F\nSAVEUCB  DS    18F\n* --- SUB CHANNEL NUMBER ------------------------------------------\nSUBCH    DS    F\nSUBCHRC  DS    F\nPARMLIST DS    3F\n         ORG   PARMLIST\nPARMWA   DC    A(WORKAREA)\nPARMDEVT DC    A(DEVCLASS)\nPARMUCB  DC    A(ADDRUCB)\n*\n         DS    0D\nWORKAREA DS    CL100\nDEVCLASS DS    CL1\nADDRUCB  DS    F\n*\nPATHDEVN DS    H\nPATHMAP  DS    XL40\nPATHINFO DS    XL256\n* --- UCB ---------------------------------------------------------\nU#COPY   DS    XL48\nU#PTR    DS    F\nU#WORK   DS    XL100\n* --- SSGARAL -----------------------------------------------------\nSSGARGLA DC    A(SSGARGL)\nSSGARGL  DS    0F\nSSGHEAD  DS    CL8                     c'SSGARGL'\nSSGADDN  DS    A                       dd name address\nSSGAVOL  DS    A                       volser address\nSSGUNIT  DS    XL4                     unit type ( ucbtyp )\nSSGOLN   DS    F                       buffer length\nSSGOADR  DS    A                       buffer address\nSSGOPT   DS    0XL4                    option\nSSGOPT1  DS    XL1                     option 1\n*                                       x'80' : subsystem count\n*                                       x'40' : subsystem status\n*                                       x'20' :\n*                                       x'10' :\n*                                       x'08' : all same subsystem cnt\n*                                       x'04' : a subsystem count\n*                                       x'02' : a device count\n*                                       x'01' : 3880 pointer\nSSGOPT2  DS    XL3\nSSGMDLID DS    XL1                      ssid\nSSGRCIOS DS    XL1                      ios return code\nSSGARGLL EQU   *-SSGARGL\n* --- listdata parameter list -------------------------------------\nLDPARM   DS    0D\n         DC    A(0)\n         DC    A(SSGARGLA)\n         DC    A(LD#RC)\n* --- listdata work area ------------------------------------------\nLD#RC    DS    H\n*DCSS01  DC    V(IDCSS01)\n* --- Extracter ---------------------------------------------------\nEXT#TSO  DS    F\n* --- volume serial -----------------------------------------------\n@SERIAL  DS    CL6\n@SERL    DS    F\n@OPTION  DS    H\n@OPTION2 DS    H\n@OPTION3 DS    H\n@OP1_S   EQU   *\n         DC    CL8'SPACE'\n@OPTSPC  DC    H'0001'\n         DC    CL8'CHP'\n@OPTCHP  DC    H'0002'\n         DC    CL8'CACHE'\n@OPTCACH DC    H'0003'\n         DC    CL8'NONE'\n@OPTNON  DC    H'0004'\n@OP1_E   EQU   *\n@OP1_L   EQU   *-@OP1_S\n@OP2_S   EQU   *\n         DC    CL8'ON'\n@OPTON   DC    H'0001'\n         DC    CL8'OFF'\n@OPTOFF  DC    H'0002'\n         DC    CL8'ALL'\n@OPTALL  DC    H'0003'\n         DC    CL8'PRIVATE'\n@OPTPRV  DC    H'0004'\n         DC    CL8'STORAGE'\n@OPTSTG  DC    H'0005'\n         DC    CL8'PUBLIC'\n@OPTPUB  DC    H'0006'\n@OP2_E   EQU   *\n@OP2_L   EQU   *-@OP2_S\n@OP3_S   EQU   *\n         DC    CL8'WAIT'\n@OPTWAIT DC    H'0001'\n         DC    CL8'NOWAIT'\n@OPTNOWT DC    H'0002'\n@OP3_E   EQU   *\n@OP3_L   EQU   *-@OP3_S\n@FILE    DS    CL8\n@FILEL   DS    F\n* --- IKJPARS ( tso parse service routine ) -----------------------\n*        PRINT GEN\nPCLADCON DC    A(PCLDEFS)\nPCLAREA  DS    0F\nPCLDEFS  IKJPARM DSECT=PRDSECT\nPCLVOL   IKJIDENT ALPHANUM,                                            *\n               PROMPT='VOLUME SERIAL',                                 *\n               FIRST=ANY,OTHER=ANY,MAXLNTH=6,                          *\n               HELP=('Search Volume Serial or *')\nPCLSPC   IKJKEYWD DEFAULT='SPACE'\n         IKJNAME 'SPACE'\n         IKJNAME 'CHP'\n         IKJNAME 'CACHE'\n         IKJNAME 'NONE'\nPCLON    IKJKEYWD DEFAULT='ONLINE'\n         IKJNAME 'ONLINE'\n         IKJNAME 'OFFLINE'\n         IKJNAME 'ALL'\n         IKJNAME 'PRIVATE'\n         IKJNAME 'STORAGE'\n         IKJNAME 'PUBLIC'\nPCLWAIT  IKJKEYWD DEFAULT='NOWAIT'\n         IKJNAME 'WAIT'\n         IKJNAME 'NOWAIT'\nPCLFILE  IKJKEYWD\n         IKJNAME  'PCLFILE',SUBFLD=FILESUB,ALIAS='F'\nFILESUB  IKJSUBF\nFNAME    IKJIDENT 'FILENAME',                                          *\n               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   *\n               PROMPT='DD-NAME'\n         IKJENDP\n*        PRINT NOGEN\n* --- CPPL pointer save area --------------------------------------\nCPPL_PTR DS    F\n* --- PPL Getmain Area --------------------------------------------\nPPL_LEN  DS    F                  PPL length\nPPL_ADR  DS    F                  PPL address\n* --- PPL answer area ---------------------------------------------\nANS      DS    F\n* --- ECB ---------------------------------------------------------\n#ECB     DS    F\n* --- IOPL --------------------------------------------------------\n#IOPL    DS    4F\n* --- PUTLINE ( mapping macro ) -----------------------------------\nPUTBLOK  PUTLINE MF=L\n* --- PUTLINE ( single line put ) ---------------------------------\nPUTL#S   DS    0D\nPUTL#SL  DS    H\n         DC    H'0'\nPUTL#S_  DS    CL80\n         DS    CL100\n* --- File Area ---------------------------------------------------\nOUTDCB   DCB   DSORG=PS,MACRF=(PM),DDNAME=OUTDD,                       *\n               RECFM=FB,LRECL=80,BLKSIZE=3120\nOUTAREA  DS    CL80\n@VER_A   DC   A(@VERSION)\n* --- WTO Area ----------------------------------------------------\nWTOAREA  DS    0F\n         DC    AL2(WTOLEN)\n         DC    B'0000000000000000'\nMESSAGE  DS    CL80\nWTOLEN   EQU   *-WTOAREA\nWTOHDR   EQU   MESSAGE-WTOAREA\n         DS    CL100\n* --- dump work area ----------------------------------------------\nB#WK1    DS    F                        dump work area\nB#WK2    DS    F                        dump work area\nD#WK1    DS    D                        dump work area\nD#WK2    DS    D                        dump work area\nC#WK1    DS    CL12                     dump work area\nC#WK2    DS    CL12                     dump work area\nP#WK1    DS    PL8                      dump work area\nP#WK2    DS    PL8                      dump work area\nWK#PRI#C DS    CL5                      work primary space ( cyl )\nWK#PRI#T DS    CL5                      work primary space ( trk )\nWK#ALC#C DS    CL5                      work allocation space ( cyl )\nWK#ALC#T DS    CL5                      work allocation space ( trk )\nWK#ALC#B DS    F                        work allocation space ( bin )\nWK#CYLS  DS    XL2                      quantity of cylinder per volume\nWK#TRKS  DS    XL2                      quantity of tracks per cylinder\nWK#EXTS  DS    16XL10                   extent data copy area\nWK#DEVT  DS    XL4                      device type work area\n* --- PUTLINE ( multi line put ) ----------------------------------\nP#DSLST  DC    A(P#DSLST2)\n         DC    H'83'\n         DC    H'0'\nMSG#O101 DS    CL79\nP#DSLST2 DC    A(P#DSLST3)\n         DC    H'83'\n         DC    H'0'\nMSG#O102 DS    CL79\nP#DSLST3 DC    A(0)\n         DC    H'83'\n         DC    H'0'\nMSG#O103 DS    CL79\n* --- messgae -----------------------------------------------------\n* --- Partition ---------------------------------------------------\nMSG#P001 DC    CL79'#--------------------------------------------------*\n               ---------------------'\nMSG#P002 DC    CL79'#--------------------------------------------------*\n               --------------------------'\n* --- Error messgae -----------------------------------------------\nMSG#E001 DC    CL79'> Getmain Error Happend . ( Reg.15:@@@@@@@@ )'\nMSG#E002 DC    CL79'> SVC 26 Error Happend . ( Reg.15:@@@@@@@@ )'\nMSG#E003 DC    CL79'> Listdata Error ( Rc:@@@@@@@@ R15:@@@@@@@@ )'\nMSG#E004 DC    CL79'> Not TSO Address Space .( ENV:@@@@@@@@ )'\n* --- message -----------------------------------------------------\nMSG001   DC    CL79'*** CAHCE START ***'\nMSG002   DC    CL79'*** CACHE END   ***'\nMSG003   DC    CL79'*** CACHE SET   ***'\nMSG004   DC    CL79'*** MODESET     ***'\n* --- message -----------------------------------------------------\nMSG#O001 DC    CL79'> '\n*                   0....+....1....+....2....+....3....+\nMSG#PATH DC    CL30'Path Err Rc:@@@@@@@@:@@@@@@@@'\nMSG#CACH DC    CL30'APF Authorization Check Fail '\n*                   0....+....1....+....2....+....3....+\nMSG#CAC2 DC    CL40'Listd Err IOS-RC:@@ LISTD-RC:@@@@'\nMSG#CAC3 DC    CL40'SUB:@@@ NVS:@@@ DEV:@@@ DFW:@@@ CFW:@@@'\nMSG#BUSY DC    CL30' Be Busy with One''s Work '\nMSG#HELP DS    0CL79\n         DC    CL79'# Volume Search and Check Program ..             '\n         DC    CL79'#                                                '\n         DC    CL79'#  - USING ( TSO Environment ) -                 '\n         DC    CL79'#   @VOL serial <opt1> <opt2> <opt3>             '\n         DC    CL79'#                                                '\n         DC    CL79'#   * seleal ( Volume Serial Number )            '\n         DC    CL79'#   * opt1 ( Display Option )                    '\n         DC    CL79'#     < SPACE , CHP , CACHE , NONE >             '\n         DC    CL79'#   * opt2 ( Search Option )                     '\n         DC    CL79'#     < ONLINE , OFFLINE , PRIVATE , STORAGE ,   '\n         DC    CL79'#       PUBLIC , ALL >                           '\n         DC    CL79'#   * opt3 ( Wait Option - SPACE request only )  '\n         DC    CL79'#     < NOWAIT , WAIT >                          '\n         DC    CL79'#                                                '\n         DC    CL79'#  - USING ( Batch Environment ) -               '\n         DC    CL79'#   //stepname EXEC PGM=@VOL,PARM=serial,opt1    '\n         DC    CL79'#                                                '\n         DC    CL79'#  - USING ( STC Environment ) -                 '\n         DC    CL79'#   > S @VOL,V=serial,opt1                       '\n         DC    CL79'#                                                '\n         DC    CL79'#              Thanks for Your use ..   Bye !    '\nMSG#HPL  EQU   *-MSG#HELP\n         LTORG\nLD#BUFF  DS    4000XL1\nLLD#BUFF EQU   *-LD#BUFF\n* --- SSGARAL BUFFER AREA -----------------------------------------\nSSGDA    DSECT\nSSGDAVOL DS    CL6                    Volume Serial\n         DS    XL2                    Reserved\nSSGDAUA1 DS    CL3                    Unit Address\nSSGDAUA2 DS    CL3                    Second Address\nSSGDALN  DS    H                      Data Length\nSSGDADA  DS    0X                     Data Area\n* --- SSGARAL DATA AREA ( 3880-11,13 3990-3 MODEL SUBSYSTEM STATUS )\n         DS    0D\nSSGDASS  DSECT\n         DS    XL1                 0  Reserved\nSSGDACCA DS    XL1                 1  Unit Address ( for Channel Prog )\nSSGDANUM DS    XL1                 2  Number of Unit\nSSGDASNO DS    XL1                 3  Statistics Set Number\nSSGDACST DS    BL1                 4  Cache Status\n*                    ooo o oo o o\n*                               - Cache Fast Write ( 1:OFF )\n*                             -   IML non used .\n*                          --     Reserved\n*                        -        Customize ( Do'nt Use Cache )\n*                    ---          Cache Status\n*                                  000 : Cache On\n*                                  001 : Online Processing\n*                                  010 : Hard Error ( Cache Off )\n*                                  100 : Cache Off\n*                                  110 : Offine Processing (Destageing)\n*                                  111 : Destage Error\nSSGDANST DS    XL1                 5  NVS Status\n*                    oo o o o ooo\n*                             --- Reserved\n*                           -     Hard Error\n*                         -       Costomize ( Do'nt Use )\n*                       -         Reserved\n*                    --           NVS Status\n*                                  00 : NVS On\n*                                  01 : Hard Error\n*                                  10 : NVS Off or Hard Error\n*                                  11 : Destageing or Error\n*\n         DS    XL4               6-9  Reserved\nSSGDACSZ DS    FL4              10-13 Cache Size\nSSGDAUSZ DS    FL4              14-17 Useable Size\nSSGDAPSZ DS    FL4              18-21 PIN Data Size\nSSGDAFSZ DS    FL4              22-25 Offline Size\nSSGDAUST DS    XL2              26,27 Unit Status\n*                    oo oo o o oo\n*                              --  Dual Copy Status\n*                                  00 : Dual Copy Ready\n*                                  01 : Dual Copy ( Processing )\n*                                  10 : Dual Stop ( NO-Swicth )\n*                                  11 : Dual Stop ( Switched )\n*                            -     Dual Copy ( Second Units )\n*                          -       Dual Copy ( First Units  )\n*                       --         DFW Status\n*                                  00 : DFW On\n*                                  01 : Reserved\n*                                  10 : DFW Error\n*                                  11 : DFW Off\n*                    --            Device Status\n*                                  00 : Device On\n*                                  01 : Reserved\n*                                  10 : Device Error\n*                                  11 : Deivce Off\n*                    oo oooooo\n*                       ------     Dual Copy Either Address\n*                    --            PIN Data Status\n*                                  00 : PIN Not Found\n*                                  01 : PIN Found ( DFW On )\n*                                  10 : Reserved\n*                                  11 : PIN Found ( DFW Off )\nSSGDANSZ DS    FL4              28-31 NVS Size\nSSGDANPS DS    FL4              32-35 PINNED Size ( NVS )\n         DS    XL1                36  Unit Status ( Group 2 )\n         DS    XL1                37  Reserved\nSSGDASSI DS    XL2              38-39 Subsystem-ID\n* --- CPPL ( command processor parameter list ) -------------------\n         IKJCPPL\nL_CPPL   EQU   *-CPPL\n* --- PPL ( parse parameter list ) --------------------------------\n         IKJPPL\nL_PPL    EQU   *-PPL\n* --- IKJIOPL ( input / output parameter list ) -------------------\n         IKJIOPL\nL_IOPL   EQU   *-IOPL\n* --- DSCB ( dataset control block ) type 1 -----------------------\nDSCBSEC1 DSECT\n         IECSDSL1 (1)\n* --- DSCB ( dataset control block ) type 3 -----------------------\nDSCBSEC3 DSECT\n         IECSDSL1 (3)\n* --- DSCB ( dataset control block ) type 4 -----------------------\nDSCBSEC4 DSECT\n         IECSDSL1 (4)\n* --- CVT ( communication vector table ) --------------------------\n         PRINT GEN\n         CVT   DSECT=YES,LIST=YES\n* --- UCB ---------------------------------------------------------\n*        PRINT GEN\n         IEFUCBOB LIST=YES\n* --- IOCOM -------------------------------------------------------\n*        PRINT GEN\n         IECDIOCM\n* --- PATHINFO ----------------------------------------------------\n*        PRINT GEN\n         IOSDPATH\n* --- PATHMAP -----------------------------------------------------\n*        PRINT GEN\n         IOSDMAP\n* --- SSGARAL -----------------------------------------------------\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @VOL\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=object.library(@VOL#03C)                        <- CHECK\n//A2      EXEC PGM=IEV90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         DC   C'<< HexToChar Conv >> Version 6 ( '\nOSV      DC   CL6'v6r1m1'\n         DC   C' ) _ Kimu  // Compiled Date : &SYSDATE _ &SYSTIME '\n         PRINT NOGEN\n@OS#6HC  CSECT\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03                       Base Reg. R03\n         ST    R13,SAVEAREA+4              Save A(OLD SaveArea)\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)                  Save A(NEW SaveArea)\n* --- from characher ---\n         L     R07,0(R01)\n* --- to character ---\n         L     R08,4(R01)\n* --- convert length ---\n         L     R09,8(R01)\n*        LA    R07,ALLOCER\n*        LA    R08,ERRMSG02+30\n*        LA    R09,4\n*        BAL   R14,@CO_HEX                     CALL CONVERT HEX-CHAR\n@CO_HEX  EQU   *                               CONVERT HEX-CHARACTER\n         LA    R15,5\n@CO_HC   EQU   *\n         LTR   R09,R09\n         BZ    @CO_EXIT\n         BCT   R15,@CO_SKIP\n*\n         MVI   0(R08),X'40'\n         LA    R08,1(R08)\n         LA    R15,4\n@CO_SKIP EQU   *\n         SR    R01,R01\n         IC    R01,0(R07)\n         SRL   R01,4\n         A     R01,A_TR\n         ICM   R02,B'0010',0(R01)\n         IC    R01,0(R07)\n         N     R01,=F'15'\n         A     R01,A_TR\n         ICM   R02,B'0001',0(R01)\n         STCM  R02,B'0011',0(R08)\n         LA    R07,1(R07)\n         LA    R08,2(R08)\n         BCTR  R09,0\n         B     @CO_HC\n@CO_EXIT EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n*\nSAVEAREA DS    18F                               WORK SAVEAREA\nTR       DC    C'0123456789ABCDEF'               CHAR TRUNC TABLE\nA_TR     DC    A(TR)\n         LTORG\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   @OS#6HC\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//*YSPUNCH DD  SYSOUT=*,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//*YSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//*        DCB=(BLKSIZE=400),DSN=&&LOADSET\n//SYSLIN   DD  DSN=object.library(@OS#6HC),DISP=SHR            <- CHECK\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST,AC=1',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DDNAME=SYSIN\n//SYSLMOD  DD  DSN=module.library,DISP=SHR                     <- CHECK\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//OBJ      DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=object.library                                  <- CHECK\n//SYSLIB   DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=SYS1.LPALIB                                     <- CHECK\n//         DD  DISP=SHR,UNIT=SYSDA,\n//         DSN=SYS1.LINKLIB                                    <- CHECK\n//SYSIN    DD  *\n INCLUDE OBJ(@VOL#03C)\n INCLUDE OBJ(@OS#6HC)\n ENTRY   @VOL\n NAME    @VOL(R)\n//G      EXEC  PGM=@VOL,COND=((8,LT,A),(4,LT,L)),\n//*       PARM='FC*,CACHE,PRIVATE,NOWAIT'\n//        PARM='serial,CACHE'                                  <- CHECK\n//STEPLIB DD DSN=module.library,DISP=SHR                       <- CHECK\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@WLMTRC": {"ttr": 5896, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x00)\\x00)\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 41, "newlines": 41, "modlines": 0, "user": "KIMU"}, "text": "/* rexx */\n\"alloc f(inf) da('SMFEDIT.T991TRC') shr reu\"\n\"alloc f(tbl) da('wlm.trace.data') shr reu\"\n\"alloc f(out) da('smfedit.t991trc.j') sp(10 10) track unit(sysda)\" ,\n\" vol(volser) reu recfm(v b) lrecl(1024) blksize(10244)\"\n\"execio * diskr tbl (finis stem t.\"\n do cntr = 1 to t.0\n   c.cntr = subword(t.cntr,1,1)\n end\n last = t.0 + 1\n c.last = \"????\"\n t.last = \"????\"\n\"execio * diskr inf (finis stem i.\"\n o.1 = i.1\n do cntr = 2 to i.0\n   code = substr(i.cntr,70,4)\n   code2 = substr(i.cntr,2,4)\n   cntr2 = 1\n   select\n     when datatype(code) = 'NUM' then do\n       do while code <> c.cntr2\n         if cntr2 > t.0 then\n           leave\n         cntr2 = cntr2 + 1\n       end\n       o.cntr = left(i.cntr,74) subword(t.cntr2,3)\n     end\n     when datatype(code2) = 'NUM' then do\n       do while code2 <> c.cntr2\n         if cntr2 > t.0 then\n           leave\n         cntr2 = cntr2 + 1\n       end\n       o.cntr = left(i.cntr,40) subword(t.cntr2,3)\n     end\n     otherwise\n       cntr2 = last\n       o.cntr = left(i.cntr,74) subword(t.cntr2,3)\n   end\n end\n\"execio \"i.0\" diskw out (finis stem o.\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSCHK000": {"ttr": 5898, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x01?\\x01\\x00\\x01?\\x16\\x00\\x03B\\x03B\\x00\\x00\\xd2\\xc9\\xd4\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-01-13T00:00:00", "modifydate": "2000-01-13T16:00:00", "lines": 834, "newlines": 834, "modlines": 0, "user": "KIMU"}, "text": "//FVSCHK   JOB CLASS=F,MSGCLASS=W,NOTIFY=KIMU\n//A       EXEC PGM=ASMA90,PARM=OBJECT,REGION=2000K\n//SYSIN    DD  *\n         START\n         PRINT NOGEN\nVSCHK    CSECT\nVSCHK    AMODE 31\nVSCHK    RMODE ANY\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05             BASE REG. R03\n         LAE   R04,2048(R03)               2'ND Base Reg\n         LAE   R04,2048(R04)\n         LAE   R05,2048(R04)               3'ND Base Reg\n         LAE   R05,2048(R05)\n         ST    R13,SAVEAREA+4\n         LR    R12,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R12)\n* --- Events define ---\n         EVENTS ENTRIES=10               Events define\n         ST    R01,EVTBL\n* --- comunication ---\n         EXTRACT COMADDR,FIELDS=COMM,MF=(E,EXTRACT)\n         L     R09,COMADDR\n         USING COM,R09\n         ICM   R08,15,COMCIBPT\n         USING CIB,R08\n         BZ    NOCIB\n         BAL   R10,DOCIB\nNOCIB    EQU   *\n         QEDIT ORIGIN=COMCIBPT,CIBCTR=5\n         L     R01,COMECBPT\n         ST    R01,MODECB\nWAIT     EQU   *\n         L     R02,MODECB              Events Test\n         EVENTS TABLE=EVTBL,ECB=(2)\n         STIMERM SET,DINTVL=WAITXX,ID=WAITID,WAIT=NO\nEVLOP1   EQU   *\n         STIMERM SET,DINTVL=INTVXX,ID=INTVID,WAIT=YES\n         STIMERM TEST,ID=WAITID,TU=WAITTU\n         CLC   WAITTU,=F'0'            If not Time Over\n         BNE   EVLOP2                   goto @EVLOP1\n*\n         CALL  VSALERT\n*\n         STIMERM SET,DINTVL=WAITXX,ID=WAITID,WAIT=NO\nEVLOP2   EQU   *\n         EVENTS TABLE=EVTBL,WAIT=NO\n         LTR   R01,R01                 If Come\n         BNZ   CMDGOT                    goto MSGGOT\n         B     EVLOP1                 No Time Over\n*\nCMDGOT   EQU   *\n         STIMERM CANCEL,ID=WAITID\n*\n         ICM   R08,15,COMCIBPT\n         USING CIB,R08\n         CLI   CIBVERB,CIBMODFY\n         BNE   NOTMDFY\n         BAL   R10,DOCIB\n*\nNOTMDFY  EQU   *\n         BAL   R14,DELCIB\n         CLI   CIBVERB,CIBSTOP\n         BE    BYE\n         B     WAIT\n*\nDELCIB   EQU   *\n         QEDIT ORIGIN=COMCIBPT,BLOCK=(R08)\n         BR    R14\n*\nDOCIB    EQU   *\n         LH    R01,CIBDATLN\n         EX    R01,WTOMVC\n*        MVC   MSG#0000+26(8),CIBDATA\n         WTO   TEXT=MSG#A000,MF=(E,WTOINFO)\n*\n         CLC   CIBDATA(3),=CL3'MAP'\n         BNE   SKIP01\n         CALL  VSMAP\n         B     SKIPXX\nSKIP01   EQU   *\nSKIPQQ   EQU   *\n         WTO   'VSCHK : Receipted command unknown??'\n         WTO   'VSCHK :  Input next either one.'\n         WTO   'VSCHK :   - \"MAP\" : virtual storage map'\nSKIPXX   EQU   *\n         BR    R10\n* ---\nBYE      EQU   *\n         L     R13,SAVEAREA+4\n         RETURN (14,12),RC=0\n* ---\n* ---\nWTOMVC   MVC   MSG#0000+26(0),CIBDATA\n* ---\nMAPSHOW  EQU   *\n*\n         DS    0F\nSAVEAREA DS    18F\nOUTAREA  DC    CL80' '\n         DS    0F\nWTOINFO  WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A000 DC    AL2(L'MSG#0000)\n*                   0....+....1....+....2....+....3....+....4....+....5\n*              ....+....6....+....7....+....8\nMSG#0000 DC    CL80'VSCHK : Command receipt : '\n         DS    0F\n*\n         DS    0F\nMODECB   DS    F\nCOMADDR  DS    F\nEXTRACT  EXTRACT MF=L\nEVTBL    DS    F                   Events table entry\nWAITXX   DC    CL8'00010000'             VS check execute time (1min)\nINTVXX   DC    CL8'00000200'             Delay 2Sec\nWAITID   DS    XL4\nINTVID   DS    XL4\nWAITTU   DS    XL4\n*\nALERTLIM DS    4F\n         LTORG\n* ---------------\nVSMAP    CSECT\nVSMAP    AMODE 31\nVSMAP    RMODE ANY\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05             BASE REG. R03\n         LAE   R04,2048(R03)               2'ND Base Reg\n         LAE   R04,2048(R04)\n         LAE   R05,2048(R04)               3'ND Base Reg\n         LAE   R05,2048(R05)\n         ST    R13,VSMAPSA+4\n         LR    R12,R13\n         LA    R13,VSMAPSA\n         ST    R13,8(R12)\n* ---\n* --- cvt ---\n         L     R10,CVTPTR\n         USING CVTMAP,R10\n* --- virtual storage address extension ---\n         L     R09,CVTSMEXT\n         USING CVTVSTGX,R09\n* --- gda ---\n         L     R11,CVTGDA\n         USING GDA,R11\n* === E Private ===\n* --- lowest address of e Private ---\n         UNPK  EBCDIC_A(9),GDAEPVT(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPVT+12(8),EBCDIC_A\n* --- size of Private ---\n         UNPK  EBCDIC_A(9),GDAEPVTS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPVT+32(8),EBCDIC_A\n*\n         L     R06,GDAEPVTS\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_EPVT+41(7),EDWORK2+09\n* --- highest address of Private ---\n         L     R01,GDAEPVT\n         A     R01,GDAEPVTS\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPVT+23(8),EBCDIC_A\n* === ECSA ===\n* --- lowest address of e csa ---\n         UNPK  EBCDIC_A(9),GDAECSA(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ECSA+12(8),EBCDIC_A\n* --- size of e csa ---\n         UNPK  EBCDIC_A(9),GDAECSAS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ECSA+32(8),EBCDIC_A\n*\n         L     R06,GDAECSAS\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_ECSA+41(7),EDWORK2+09\n* --- highest address of e csa ---\n         L     R01,GDAECSA\n         A     R01,GDAECSAS\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ECSA+23(8),EBCDIC_A\n* --- allocated ---\n*        UNPK  EBCDIC_A(9),GDA_ECSA_ALLOC(5)\n*        TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   O_ECSA+70(8),EBCDIC_A\n* --- use% ---\n         L     R06,GDA_ECSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDAECSAS\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   O_ECSA+51(6),EDWORK+11\n* === EMLPA ===\n* --- lowest address of e mlpa ---\n         UNPK  EBCDIC_A(9),CVTEMLPS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EMLPA+12(8),EBCDIC_A\n* --- size of e mlpa ---\n         L     R01,CVTEMLPE\n         S     R01,CVTEMLPS\n         LTR   R01,R01\n         BZ    EMLPASKP1\n         LA    R01,1(R01)\nEMLPASKP1 EQU  *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EMLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_EMLPA+41(7),EDWORK2+09\n* --- highest address of e mlpa ---\n         UNPK  EBCDIC_A(9),CVTEMLPE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EMLPA+23(8),EBCDIC_A\n* === EFLPA ===\n* --- lowest address of e flpa ---\n         UNPK  EBCDIC_A(9),CVTEFLPS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EFLPA+12(8),EBCDIC_A\n* --- size of e flpa ---\n         L     R01,CVTEFLPE\n         S     R01,CVTEFLPS\n         LTR   R01,R01\n         BZ    EFLPASKP1\n         LA    R01,1(R01)\nEFLPASKP1 EQU  *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EFLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_EFLPA+41(7),EDWORK2+09\n* --- highest address of e flpa ---\n         UNPK  EBCDIC_A(9),CVTEFLPE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EFLPA+23(8),EBCDIC_A\n* === EPLPA ===\n* --- lowest address of e plpa ---\n         UNPK  EBCDIC_A(9),CVTEPLPS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPLPA+12(8),EBCDIC_A\n* --- size of e plpa ---\n         L     R01,CVTEPLPE\n         S     R01,CVTEPLPS\n         LTR   R01,R01\n         BZ    EPLPASKP1\n         LA    R01,1(R01)\nEPLPASKP1 EQU  *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_EPLPA+41(7),EDWORK2+09\n* --- highest address of e plpa ---\n         UNPK  EBCDIC_A(9),CVTEPLPE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_EPLPA+23(8),EBCDIC_A\n* === ESQA ===\n* --- lowest address of e sqa ---\n         UNPK  EBCDIC_A(9),GDAESQA(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ESQA+12(8),EBCDIC_A\n* --- size of sqa ---\n         UNPK  EBCDIC_A(9),GDASQASZ(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ESQA+32(8),EBCDIC_A\n*\n         L     R06,GDAESQAS\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_ESQA+41(7),EDWORK2+09\n* --- highest address of sqa ---\n         L     R01,GDAESQA\n         A     R01,GDAESQAS\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ESQA+23(8),EBCDIC_A\n* --- allocated ---\n*        UNPK  EBCDIC_A(9),GDA_ESQA_ALLOC(5)\n*        TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   O_ESQA+70(8),EBCDIC_A\n* --- use% ---\n         L     R06,GDA_ESQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDAESQAS\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   O_ESQA+51(6),EDWORK+11\n* === ENUC ===\n* --- size of nucleus ---\n         L     R01,CVTERWNE\n         S     R01,=X'01000000'\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ENUC+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_ENUC+41(7),EDWORK2+09\n* --- highest address of e nucleus ---\n         L     R01,CVTERWNE\n         LAE   R01,1(R01)\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_ENUC+23(8),EBCDIC_A\n* === NUC ===\n* --- lowest address of nucleus ---\n         UNPK  EBCDIC_A(9),CVTRWNS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_NUC+12(8),EBCDIC_A\n* --- size of nucleus ---\n         L     R01,=X'01000000'\n         S     R01,CVTRWNS\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_NUC+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_NUC+41(7),EDWORK2+09\n* === SQA ===\n* --- lowest address of sqa ---\n         UNPK  EBCDIC_A(9),GDASQA(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_SQA+12(8),EBCDIC_A\n* --- size of sqa ---\n         UNPK  EBCDIC_A(9),GDASQASZ(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_SQA+32(8),EBCDIC_A\n*\n         L     R06,GDASQASZ\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_SQA+41(7),EDWORK2+09\n* --- highest address of sqa ---\n         L     R01,GDASQA\n         A     R01,GDASQASZ\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_SQA+23(8),EBCDIC_A\n* --- allocated ---\n*        UNPK  EBCDIC_A(9),GDA_SQA_ALLOC(5)\n*        TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   O_SQA+70(8),EBCDIC_A\n* --- use% ---\n         L     R06,GDA_SQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDASQASZ\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   O_SQA+51(6),EDWORK+11\n* === PLPA ===\n* --- lowest address of plpa ---\n         UNPK  EBCDIC_A(9),CVTPLPAS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PLPA+12(8),EBCDIC_A\n* --- size of plpa ---\n         L     R01,CVTPLPAE\n         S     R01,CVTPLPAS\n         LTR   R01,R01\n         BZ    PLPASKP1\n         LA    R01,1(R01)\nPLPASKP1 EQU   *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_PLPA+41(7),EDWORK2+09\n* --- highest address of plpa ---\n         UNPK  EBCDIC_A(9),CVTPLPAE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PLPA+23(8),EBCDIC_A\n* === FLPA ===\n* --- lowest address of flpa ---\n         UNPK  EBCDIC_A(9),CVTFLPAS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_FLPA+12(8),EBCDIC_A\n* --- size of flpa ---\n         L     R01,CVTFLPAE\n         S     R01,CVTFLPAS\n         LTR   R01,R01\n         BZ    FLPASKP1\n         LA    R01,1(R01)\nFLPASKP1 EQU   *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_FLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_FLPA+41(7),EDWORK2+09\n* --- highest address of flpa ---\n         UNPK  EBCDIC_A(9),CVTFLPAE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_FLPA+23(8),EBCDIC_A\n* === MLPA ===\n* --- lowest address of mlpa ---\n         UNPK  EBCDIC_A(9),CVTMLPAS(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_MLPA+12(8),EBCDIC_A\n* --- size of mlpa ---\n         L     R01,CVTMLPAE\n         S     R01,CVTMLPAS\n         LTR   R01,R01\n         BZ    MLPASKP1\n         LA    R01,1(R01)\nMLPASKP1 EQU   *\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_MLPA+32(8),EBCDIC_A\n*\n         L     R06,WK#F\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_MLPA+41(7),EDWORK2+09\n* --- highest address of mlpa ---\n         UNPK  EBCDIC_A(9),CVTMLPAE(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_MLPA+23(8),EBCDIC_A\n* === CSA ===\n* --- lowest address of csa ---\n         UNPK  EBCDIC_A(9),GDACSA(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_CSA+12(8),EBCDIC_A\n* --- size of csa ---\n         UNPK  EBCDIC_A(9),GDACSASZ(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_CSA+32(8),EBCDIC_A\n*\n         L     R06,GDACSASZ\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_CSA+41(7),EDWORK2+09\n* --- highest address of csa ---\n         L     R01,GDACSA\n         A     R01,GDACSASZ\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_CSA+23(8),EBCDIC_A\n* --- allocated ---\n*        UNPK  EBCDIC_A(9),GDA_CSA_ALLOC(5)\n*        TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n*        MVC   O_CSA+70(8),EBCDIC_A\n* --- use% ---\n         L     R06,GDA_CSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDACSASZ\n         CVD   R07,PK_AREA\n         MVC   EDWORK,EDMASK\n         ED    EDWORK,PK_AREA\n         MVC   O_CSA+51(6),EDWORK+11\n* === Private ===\n* --- lowest address of Private ---\n         L     R01,GDAPVT\n         A     R01,=XL4'00001000'         add  PSA\n         ST    R01,WKPVT\n         UNPK  EBCDIC_A(9),WKPVT(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PVT+12(8),EBCDIC_A\n* --- size of Private ---\n         L     R01,GDAPVTSZ\n         S     R01,=XL4'00001000'\n         ST    R01,WKPVTSZ\n         UNPK  EBCDIC_A(9),WKPVTSZ(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PVT+32(8),EBCDIC_A\n*\n         L     R06,WKPVTSZ\n         SRDA  R06,32\n         D     R06,=F'1024'\n         CVD   R07,PK_AREA\n         MVC   EDWORK2,EDMASK2\n         ED    EDWORK2,PK_AREA\n         MVC   O_PVT+41(7),EDWORK2+09\n* --- highest address of Private ---\n         L     R01,WKPVT\n         A     R01,WKPVTSZ\n         BCTR  R01,0\n         ST    R01,WK#F\n         UNPK  EBCDIC_A(9),WK#F(5)\n         TR    EBCDIC_A(8),=C'0123456789ABCDEF'-X'F0'\n         MVC   O_PVT+23(8),EBCDIC_A\n*\n         MVC   MSG#0001+10(70),O_HEAD\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_EPVT\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_ECSA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_EMLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_EFLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_EPLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_ESQA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_ENUC\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),LINE16\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_NUC\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_SQA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_PLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_FLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_MLPA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_CSA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_PVT\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         MVC   MSG#0001+10(70),O_PSA\n         WTO   TEXT=MSG#A001,MF=(E,WTOINFO1)\n         L     R13,VSMAPSA+4\n         RETURN (14,12),RC=0\n* ---------------\nVSMAPSA  DS    18F\n*                   0....+....1....+....2....+....3....+....4....+....5\n*              ....+....6....+....7....+....8\nO_HEAD   DC    CL70' -------- : START    - END      SIZE               *\n                Alloc%'\nO_EPVT   DC    CL70' EPVT     : @@@@@@@@ - 7FFFFFFF @@@@@@@@(@@@@@@@K)'\nO_ECSA   DC    CL70' ECSA     : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K) *\n               @@@.@@%'\nO_EMLPA  DC    CL70' EMLPA    : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_EFLPA  DC    CL70' EFLPA    : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_EPLPA  DC    CL70' EPLPA    : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_ESQA   DC    CL70' ESQA     : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K) *\n               @@@.@@%'\nO_ENUC   DC    CL70' ENUC     : 01000000 - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nLINE16   DC    CL70' -16 M-'\nO_NUC    DC    CL70' NUC      : @@@@@@@@ - 00FFFFFF @@@@@@@@(@@@@@@@K)'\nO_SQA    DC    CL70' SQA      : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K) *\n               @@@.@@%'\nO_PLPA   DC    CL70' PLPA     : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_FLPA   DC    CL70' FLPA     : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_MLPA   DC    CL70' MLPA     : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_CSA    DC    CL70' CSA      : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K) *\n               @@@.@@%'\nO_PVT    DC    CL70' PVT      : @@@@@@@@ - @@@@@@@@ @@@@@@@@(@@@@@@@K)'\nO_PSA    DC    CL70' PSA      : 00000000 - 00000FFF 00001000(      4K)'\n         DS    0D\nPK_AREA  DS    PL16                      pack work area\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK   DC    XL17'40202020202020202020202021204B2020'\nEDWORK   DS    XL17\nEDMASK2  DC    XL16'40202020202020202020202020202120'\nEDWORK2  DS    XL16\n         DS    0F\nEBCDIC_A DS    CL32\nWK#F     DS    F\nWKPVT    DS    F\nWKPVTSZ  DS    F\n         DS    0F\nWTOINFO1 WTO   TEXT=,             WTO parameter list                   X\n               DESC=(6),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A001 DC    AL2(L'MSG#0001)\nMSG#0001 DC    CL80'VSCHK : '\n         DS    0F\n*\n         LTORG\n* ---------------\nVSALERT  CSECT\nVSALERT  AMODE 31\nVSALERT  RMODE ANY\n         SAVE  (14,12),T,*\n         BALR  R03,0\n         USING *,R03,R04,R05             BASE REG. R03\n         LAE   R04,2048(R03)               2'ND Base Reg\n         LAE   R04,2048(R04)\n         LAE   R05,2048(R04)               3'ND Base Reg\n         LAE   R05,2048(R05)\n         ST    R13,ALERTSA+4\n         LR    R12,R13\n         LA    R13,ALERTSA\n         ST    R13,8(R12)\n* --- cvt ---\n         L     R10,CVTPTR\n         USING CVTMAP,R10\n* --- virtual storage address extension ---\n         L     R09,CVTSMEXT\n         USING CVTVSTGX,R09\n* --- gda ---\n         L     R11,CVTGDA\n         USING GDA,R11\n* === ECSA ===\n* --- use% ---\n         L     R06,GDA_ECSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'100'\n         D     R06,GDAECSAS\n         CL    R07,=F'80'                  <- CHECK (ECSA limit = 80%)\n         BL    ALERT_ECSA_X\n*\n         L     R06,GDA_ECSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDAECSAS\n         CVD   R07,PK_AREA3\n         MVC   EDWORK3,EDMASK3\n         ED    EDWORK3,PK_AREA3\n         MVC   A_ECSA+47(6),EDWORK3+11\n         MVC   MSG#0002+10(70),A_ECSA\n         WTO   TEXT=MSG#A002,MF=(E,WTOINFO2)\nALERT_ECSA_X EQU *\n* === ESQA ===\n* --- use% ---\n         L     R06,GDA_ESQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'100'\n         D     R06,GDAESQAS\n         CL    R07,=F'80'                  <- CHECK (ESQA limit = 80%)\n         BL    ALERT_ESQA_X\n*\n         L     R06,GDA_ESQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDAESQAS\n         CVD   R07,PK_AREA3\n         MVC   EDWORK3,EDMASK3\n         ED    EDWORK3,PK_AREA3\n         MVC   A_ESQA+47(6),EDWORK3+11\n         MVC   MSG#0002+10(70),A_ESQA\n         WTO   TEXT=MSG#A002,MF=(E,WTOINFO2)\nALERT_ESQA_X EQU *\n* === SQA ===\n* --- use% ---\n         L     R06,GDA_SQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'100'\n         D     R06,GDASQASZ\n         CL    R07,=F'80'                  <- CHECK (SQA limit = 80%)\n         BL    ALERT_SQA_X\n*\n         L     R06,GDA_SQA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDASQASZ\n         CVD   R07,PK_AREA3\n         MVC   EDWORK3,EDMASK3\n         ED    EDWORK3,PK_AREA3\n         MVC   A_SQA+46(6),EDWORK3+11\n         MVC   MSG#0002+10(70),A_SQA\n         WTO   TEXT=MSG#A002,MF=(E,WTOINFO2)\nALERT_SQA_X EQU *\n* === CSA ===\n* --- use% ---\n         L     R06,GDA_CSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'100'\n         D     R06,GDACSASZ\n         CL    R07,=F'80'                  <- CHECK (CSA limit = 80%)\n         BL    ALERT_CSA_X\n*\n         L     R06,GDA_CSA_ALLOC\n         SRDA  R06,32\n         M     R06,=F'10000'\n         D     R06,GDACSASZ\n         CVD   R07,PK_AREA3\n         MVC   EDWORK3,EDMASK3\n         ED    EDWORK3,PK_AREA3\n         MVC   A_CSA+46(6),EDWORK3+11\n         MVC   MSG#0002+10(70),A_CSA\n         WTO   TEXT=MSG#A002,MF=(E,WTOINFO2)\nALERT_CSA_X EQU *\n*\n         L     R13,ALERTSA+4\n         RETURN (14,12),RC=0\n* ---------------\nALERTSA  DS    18F\n*                   0....+....1....+....2....+....3....+....4....+....5\n*              ....+....6....+....7....+....8\nA_ECSA   DC    CL70'*DANGER* Used percents of ECSA exceeds limit. (@@@.*\n               @@% )'\nA_ESQA   DC    CL70'*DANGER* Used percents of ESQA exceeds limit. (@@@.*\n               @@% )'\nA_CSA    DC    CL70'*DANGER* Used percents of CSA exceeds limit. (@@@.@*\n               @% )'\nA_SQA    DC    CL70'*DANGER* Used percents of SQA exceeds limit. (@@@.@*\n               @% )'\n         DS    0D\nPK_AREA3 DS    PL16                      pack work area\n*                                1\n*                    6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1\nEDMASK3  DC    XL17'40202020202020202020202021204B2020'\nEDWORK3  DS    XL17\n         DS    0F\nWTOINFO2 WTO   TEXT=,             WTO parameter list                   X\n               DESC=(2),          descriptor code 6 is Job Status      X\n               MF=L\nMSG#A002 DC    AL2(L'MSG#0002)\nMSG#0002 DC    CL80'VSCHK : '\n         DS    0F\n*\n         LTORG\n* ---------------\nPSA      DSECT\n         IHAPSA LIST=NO\nCVT      DSECT\n         CVT   LIST=NO,DSECT=YES\n         DSECT\n         IHAGDA\nCOM      DSECT\n         IEZCOM\nCIB      DSECT\n         IEZCIB\nR00      EQU   00\nR01      EQU   01\nR02      EQU   02\nR03      EQU   03\nR04      EQU   04\nR05      EQU   05\nR06      EQU   06\nR07      EQU   07\nR08      EQU   08\nR09      EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END   VSCHK\n/*\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*,DCB=(BLKSIZE=3509),\n//         UNIT=(,SEP=(SYSUT1,SYSPUNCH))\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//         DCB=(BLKSIZE=400),DSN=&&LOADSET\n//L       EXEC PGM=IEWL,PARM='MAP,LET,LIST,AMODE=31,RMODE=ANY',\n//         REGION=1M,COND=(8,LT,A)\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,\n//         SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,BLKSIZE=3509)\n//G      EXEC  PGM=*.L.SYSLMOD,COND=((8,LT,A),(4,LT,L))\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WLMTRCD": {"ttr": 6403, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT443/FILE443.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT443", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}