{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "KTOMIAK", "INMTNODE": "ANYNODE", "INMTUID": "KTOMIAK", "INMFTIME": "20180225125647000000", "INMNUMF": 2}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 251, "INMBLKSZ": 3120, "INMRECFM": "VB", "numfile": 1}, "2": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 81, "INMBLKSZ": 27945, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "VENDOR.GENIE.WISHLIST", "INMMEMBR": "VENDOR.GENIE.WISHLIST", "numfile": 2}, "3": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 2}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}, "2": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "message": {"file": "b'@\\x7f\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5@\\xe3\\x96\\x94\\x89\\x81\\x92\\x7fL\\xc3\\xc2\\xe3m\\xd2\\x85\\x95|\\xd2\\xe3\\x96\\x94\\x89\\x81\\x92K\\x82\\x89\\xa9n\\xe4K\\xe2K\\xc1K@\\xc3\\xc3z@\\xc1\\xd5\\xe8\\xd5\\xd6\\xc4\\xc5@a\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\\xd2K@\\xe3\\x96\\x94\\x89\\x81\\x92@@@@@@@@@@@@@@@@@@@@@@\\xe2\\xe3\\xc1\\xd5\\xc4\\xc1\\xd9\\xc4@\\xc7\\xd3\\xd6\\xc2\\xc1\\xd3@\\xc4\\xc9\\xe2\\xc3\\xd3\\xc1\\xc9\\xd4\\xc5\\xd9``````````````````````````\\xe3\\x88\\x85@\\x81\\xa4\\xa3\\x88\\x96\\x99@\\x85\\xa7\\x97\\x93\\x89\\x83\\x89\\xa3\\x93\\xa8@\\x84\\x89\\xa2\\x81\\xa5\\x96\\xa6\\xa2@\\x81\\x95\\xa8@\\x83\\x93\\x81\\x89\\x94@\\xa6\\x88\\x81\\xa3\\xa2\\x96\\x85\\xa5\\x85\\x99@\\x81\\x82\\x96\\xa4\\xa3@\\xa3\\x88\\x85\\x83\\x96\\x99\\x99\\x85\\x83\\xa3\\x95\\x85\\xa2\\xa2@\\x96\\x99@\\x86\\xa4\\x95\\x83\\xa3\\x89\\x96\\x95\\x81\\x93\\x89\\xa3\\xa8@\\x96\\x86@\\xa3\\x88\\x89\\xa2@\\x97\\x99\\x96\\x87\\x99\\x81\\x94k@\\x81\\x95\\x84@\\x84\\x89\\xa2\\x83\\x93\\x81\\x89\\x94\\xa2@\\x93\\x89\\x81\\x82\\x89\\x93\\x89\\xa3\\xa8\\x86\\x96\\x99@\\x81\\x95\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x81\\x95\\x84@\\x85\\xa5\\x85\\x99\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x82\\x81\\x84@\\xa3\\x88\\x81\\xa3@\\x94\\x89\\x87\\x88\\xa3@\\x88\\x81\\x97\\x97\\x85\\x95@\\x89\\x95@\\x83\\x96\\x95\\x95\\x85\\x83\\xa3\\x89\\x96\\x95@\\xa6\\x89\\xa3\\x88k\\x82\\x85\\x86\\x96\\x99\\x85k@\\x84\\xa4\\x99\\x89\\x95\\x87k@\\x96\\x99@\\x81\\x86\\xa3\\x85\\x99@\\xa4\\xa2\\x89\\x95\\x87@\\x89\\xa3K@\\xc9@\\x88\\x81\\xa5\\x85@\\xa3\\x99\\x89\\x85\\x84@\\xa3\\x96@\\x94\\x81\\x92\\x85@\\x89\\xa3@\\xa6\\x96\\x99\\x92@\\x99\\x89\\x87\\x88\\xa3k\\x81\\x95\\x84@\\xc9@\\x81\\x94@\\x97\\x85\\x99\\xa2\\x96\\x95\\x81\\x93\\x93\\xa8@\\x97\\x99\\x85\\xa3\\xa3\\xa8@\\x83\\x96\\x95\\x86\\x89\\x84\\x85\\x95\\xa3@\\xa3\\x88\\x81\\xa3@\\x89\\xa3@\\x84\\x96\\x85\\xa2k@\\x82\\xa4\\xa3@\\x85\\xa5\\x85\\x99\\xa8\\x82\\x96\\x84\\xa8@\\x94\\x81\\x92\\x85\\xa2\\x94\\x89\\xa2\\xa3\\x81\\x92\\x85\\xa2k@\\xa2\\x96@\\x89\\x86@\\xa8\\x96\\xa4@\\xa4\\xa2\\x85@\\x89\\xa3k@\\xa8\\x96\\xa4@\\x84\\x96@\\xa2\\x96@\\x81\\xa3@\\xa8\\x96\\xa4\\x99@\\x96\\xa6\\x95@\\x99\\x89\\xa2\\x92K@\\xe2\\x89\\x95\\x83\\x85\\x99\\x85\\x93\\xa8@\\xa8\\x96\\xa4\\x99\\xa2k\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5K@\\xe3\\x96\\x94\\x89\\x81\\x92@'", "lrecl": 80, "text": " \"Kenneth E Tomiak\"<CBT_Ken@KTomiak.biz>U.S.A. CC: ANYNODE /KTOMIAK   K. Tomiak\n                     STANDARD GLOBAL DISCLAIMER--------------------------The aut\nhor explicitly disavows any claim whatsoever about thecorrectness or functionali\nty of this program, and disclaims liabilityfor anything and everything bad that\nmight happen in connection with,before, during, or after using it. I have tried\nto make it work right,and I am personally pretty confident that it does, but eve\nrybody makesmistakes, so if you use it, you do so at your own risk. Sincerely yo\nurs,Kenneth E. Tomiak\n"}, "file": {"VENDOR.GENIE.WISHLIST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27945, "DS1LRECL": 81, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12304, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "180056", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x002'", "DS1LSTAR": "b'\\x00\\x8d\\x16'", "DS1TRBAL": "b'2V'"}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xc0\\xc8'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xc0\\xc8'", "b'X}Ch\\x00\\x00\\x06W\\x00\\r\\x06^\\x00\\x07\\x00d'", "b'X}Ch\\x00\\x00\\x06`\\x00\\t\\x06c\\x00\\r\\x002'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"KETU": {"ttr": 24591, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETU\nKTomiak Utility MVS CICS DB2 USS BPX FTP TSO/E\nKBACKUP CLONING COPY EXTRACT TRANSFORM LOAD ETL COMPRESS PACK\nKZIP COMPARE EYEBALL CONFIGURATION QUERY EDIT CREATE DATA\nKADRDSSU IEBGENER IEBCOPY DFSORT ICETOOL SYNCSORT OCOPY\nKICKDSF AMBLIST IEBCOMPR IEBDG CPPUPDTE IPOUPDTE AMASPZAP\nKIDCAMS DFHCSDUP DSNTIAD DSNTEP2 DSNTEP4 IEHLIST\nKIEFBR14\nKAMATERSE TRSMAIN PDS2UPDT IEBUPDTE FTP RECEIVE TRANSMIT IDTF\nTKenneth Tomiak Utility Examples\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth is sharing some real world examples of how he has used\nNIBM utilities and programs treated like utilities.\nI\nIMy sequence is based on the WISHLIST naming convention for\nIindividual WISH members. I had to dream up Chapter designations\nIusing alphabetic characters in order to avoid the future\nIaddition of a utility in numbered chapters and resequencing\nIthe existing WISH members.\nI\nIKETU = Utilities\nI\nIFunction  Ch  Catgory          kywd     kywd  Category\nM========= ==  ===============  =======  ====  ========\nIAMAPDUPL  AN  Analysis         PDUU           A\nIADRDSSU   CD  Cloning/Copying  Backup   ETL   C\nIIEBGENER  CG  Cloning/Copying           ETL   C\nIIEBCOPY   CO  Cloning/Copying                 C\nISort      CS  Cloning/Copying           ETL   C\nIOCOPY     CU  Cloning/Copying  USS            C\nIICKDSF    DI  Disk                            D\nIAMBLIST   DL  Disk                            D\nIIEBCOMPR  EC  Edit             Compare        E\nIIEBDG     EG  Edit                            E\nICPPUPDTE  EU  Edit                            E\nIAMASPZAP  EZ  Edit             Zap            E\nIIDCAMS    IA  Implementation   AMS            I\nIDFHCSDUP  IC  Implementation   CICS           I\nIDSNTIAD   ID  Implementation   DB2            I\nIDSNTEP*   QD  Query Data       DB2            Q\nIIEHLIST   QL  Query Data                      Q\nIIEFBR14   RC  RC=0                            R\nIAMATERSE  SC  Sharing data     Compress ETL   S\nIPDS2UPDT  SE  Sharing data     Convert  ETL   S\nIIEBUPDTE  SL  Sharing data     Convert  ETL   S\nIFTP       SF  Sharing data              ETL   S\nIRECEIVE   SR  Sharing data     TSO      ETL   S\nIDSNTIAUL  SU  Sharing data     DB2      ETL   S\nITRANSMIT  SX  Sharing data     TSO      ETL   S\nI\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETUCG": {"ttr": 24593, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETUCG\nKTomiak Utility\nTKenneth Tomiak Utility Examples - IEBGENER\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNIEBGENER is an IBM utility that is used for Cloning/Copying\nNsequential data.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETUCGM2": {"ttr": 24833, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETUCGM2\nKIEBGENER\nTDFSMSdfp: Utilities - IEBGENER Example 2:\nTCreate a Partitioned Data Set from Sequential Input\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170421-094423\n*\n@IBM Corporation\n*\nNSC26-7414-08 z/OS DFSMSdfp Utilities\nNExample 2: Create a Partitioned Data Set from Sequential Input\nN\nNIn this example, a partitioned data set (consisting of three members)\nNis created from sequential input.\nN\nD//TAPEDISK JOB ...\nD//ST01#01 EXEC PGM=IEBGENER\nD//SYSPRINT  DD SYSOUT=*\nD//SYSUT1    DD DATA,DLM=$$\nDData for MEMBER1\nDMEMBER1 second record.\nD       FIRSTMEM\nDData for MEMBER1\nDMEMBER2 second record.\nDA third record\nD4th    SECNDMEM\nDData for MEMBER3\nDSalary: More than your company would pay.\nDAge: As old as my tongue and older than the teeth I have left.\nDOccupation: Slave\nD       3RDMBR\nD/*\nD$$\nD//SYSUT2    DD DISP=(NEW,CATLG),DSN=NEWSET,\nD//             UNIT=disk,\nD//             SPACE=(TRK,(10,5,5)),\nD//             DCB=(RECFM=FB,BLKSIZE=0,LRECL=80)\nD//SYSIN     DD *\nD         GENERATE MAXNAME=3,MAXGPS=2\nD         MEMBER   NAME=MEMBER1\nD         GROUP1   RECORD IDENT=(8,'FIRSTMEM',1)\nD         MEMBER   NAME=MEMBER2\nD         GROUP2   RECORD IDENT=(8,'SECNDMEM',1)\nD         MEMBER   NAME=MEMBER3\nD/*\nN\nNThe control statements are discussed below:\nN\nN  SYSUT1 DD defines the input data set (INSET). The data set is the\nN  first data set on a tape volume.\nN\nN  SYSUT2 DD defines the output partitioned data set (NEWSET). The data\nN  set is to be placed on a disk volume. Ten tracks of primary space,\nN  five tracks of secondary space, and five blocks (256 bytes each) of\nN  directory space are blocked to reduce the space required by the data\nN  set.\nN\nN  SYSIN DD defines the control data set, which follows in the input\nN  stream. The utility control statements are used to create members\nN  from sequential input data; the statements do not specify any\nN  editing.\nN\nN  GENERATE indicates that three member names are included in\nN  subsequent MEMBER statements and that the IDENT parameter appears\nN  twice in subsequent RECORD statements.\nN\nN  The first MEMBER statement assigns a member name (MEMBER1) to the\nN  first member.\nN\nN  The first RECORD statement (GROUP1) identifies the last record to be\nN  placed in the first member. The name of this record (FIRSTMEM)\nN  appears in the first eight positions of the input record.\nN\nN  The remaining MEMBER and RECORD statements define the second and\nN  third members. Note that, as there is no RECORD statement associated\nN  with the third MEMBER statement, the remainder of the input file\nN  will be loaded as the third member.\nM\nM  Kenneth asks, 'what is in this INSET data set?\nI  And then fabricated some sample data for you with an alternate\nI  set of RECORD statements in KETUGNM3.\nI\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC": {"ttr": 24835, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC\nKief IEFBR14 DASM0301\nTKenneth Tomiak Utility - IEFBR14\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNIn its early glory days this program had just the one instruction\nNto branch on register 14. The program always worked and for many\nNyears always provided a return code 0. It broke, it got fixed, and\nNpeople continue to use when there may be better ways.\nI\nIWe would have to agree on how to judge what better is. I cringe at\nIusing DISP=(MOD,DELETE) to create a new data set if one did not already\nIexist in order to get rid of it. And they will needlessly tie up a\nIfew tracks while doing so. If it is being allocated with the same\nIattributes why not jsut IEBGENER a DUMMY data set over it? Or use\nIIDCAMS to do the delete if it exists.\nM\nMProduction scheduling tools may even do data set cleanup on RESTARTS.\nM\nMBegging the next question - why not delete after you have finished\nMusing it? Again, you selfishy tie up Disk space until the creation\nMjob runs the next time.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC01": {"ttr": 24837, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC01\nKief IEFBR14 DASM0301\nTKenneth Tomiak Utility - IEFBR14:\nTExample 1: Make sure symbolics all get used.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 1: Make sure symbolics all get used.\nN\nD//*\nD//* Example 1: Make sure symbolics all get used.\nD//ST01#01 EXEC PGM=IEFBR14,PARM='&ALL&SYMBOLIC&USED'\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC02": {"ttr": 24839, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC02\nTKenneth Tomiak Utility - IEFBR14:\nTExample 2: Allocate a new data set before the step that opens it.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 2: Allocate a new data set before the step that opens it.\nN\nN IEFBR14 has been used for years as a way to run a program that\nN should not abend. It allowed people to allocate new datasets,\nN conditionally managing a dataset, and even delete a dataset.\nN\nM It makes more sense to me to allocate the new dataset\nM in the step you use it in. There you can code RLSE:\nM //     space=(typ,(pri,sec,dirblks),RLSE)\nM which frees unused space when you close/free the data set.\nN\nD//*\nD//* Example 2: Allocate a new data set before the step that opens it.\nD//ST01#01 EXEC PGM=IEFBR14\nD//OKUSE     DD DISP=(NEW,CATLG),DSN=SOME.DSN,\nD//             UNIT=SYSALLDA,SPACE=(TRK,(20,20))\nD//*\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC03": {"ttr": 24841, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC03\nTKenneth Tomiak Utility - IEFBR14:\nTExample 3: Delete a data set.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 3: Delete a data set.\nN\nIFor this example I have to first create it.\nI\nD//*\nD//* Example 3: Delete a data set.\nD//ST01#03 EXEC PGM=IEFBR14\nD//OKUSE     DD DISP=(NEW,PASS),DSN=SHARE##.DSN,\nD//             UNIT=SYSDA,SPACE=(TRK,(10,0))\nD//*\nD//IF1       IF (ST01#03.RC = 0) THEN\nD//ST02#03 EXEC PGM=IEFBR14\nD//OKUSE     DD DISP=(OLD,DELETE),DSN=SHARE##.DSN,\nD//             UNIT=SYSDA,VOL=REF=*.ST01#03.OKUSE\nD//*\nD//IF1     ELSE\nD//ST03#03 EXEC PGM=IEFBR14\nD//OKUSE     DD DISP=(OLD,CATLG),DSN=SHARE##.DSN,\nD//             UNIT=SYSDA,VOL=REF=*.ST01#03.OKUSE\nD//IF1    ENDIF\nD//*\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC04": {"ttr": 24843, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC04\nTKenneth Tomiak Utility - IEFBR14:\nNExample 4: MOD,DELETE because you failed to delete a data set\nNafter its last use.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 4: MOD,DELETE because you failed to delete a data set\nNafter its last use.\nN\nM\nM With the advent of System Managed Storage as a discipline in the 1980's\nM there came better and safer ways of managing datasets. Since there is\nM no good reason to use IEFBR14 to allocate a dataset with a\nM DISP=(MOD,DELETE) just to delete it if it did exist, you should go look\nM at the AMSU members for the better way.\nN\nN Stop complaining about slow performance if you are using this method.\nN You are forcing the system to do I/O on a disk volume to allocate a\nN dataset and then turn around and do I/O to delete the dataset.\nN That is not efficient.\nN\nN See the AMSU members for a cleaner way to delete a data set.\nN\nD//*\nD//* Example 4: MOD,DELETE because you failed to delete a data set\nD//*            after its last use.\nD//ST01#01 EXEC PGM=IEFBR14\nD//POORUSE   DD DISP=(MOD,DELETE),DSN=SOME.DSN,\nD//             UNIT=disk,SPACE=(400,(20,20))\nD//*\nM\nMIf you insist on being inconsiderate then at least use zero disk\nMspace, like this:\nD//*\nD//ST01#01 EXEC PGM=IEFBR14\nD//MUSTYOU   DD DISP=(MOD,DELETE),DSN=SOME.DSN,\nD//             UNIT=disk,SPACE=(TRK,(0))\nD//*\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC05": {"ttr": 24845, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC05\nTKenneth Tomiak Utility - IEFBR14:\nNExample 5: When you need a step that does nothing.\nNafter its last use.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 5: When you need a step that does nothing.\nN\nN From time to time I end up running a rexx exec I am developing and\nN it gets hung up where I can not cancel out of it. I keep a member in\nN my pds named cancelme that I can submit using ftp.\nN\nD//jobname job (),'',....\nD//*\nD//* Example 5: When you need a step that does nothing.\nD//*\nD//        COMMAND 'C U=myuserid'\nD//*\nD//ST01#01 EXEC PGM=IEFBR14\nD//\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETURC06": {"ttr": 24847, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETURC06\nTKenneth Tomiak Utility - IEFBR14:\nNExample 6. Allocating a data set with the largest contiguous area.\nNafter its last use.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNKenneth Tomiak Utility - IEFBR14:\nNExample 6. Allocating a data set with the largest contiguous area.\nN\nD//*\nD//* Example 6. Allocating a data set with the largest contiguous area.\nD//ST01#01 EXEC PGM=IEFBR14\nD//HASPACE   DD DISP=(NEW,KEEP),DSN=SYS1.HASPACE,\nD//             DSNTYPE=LARGE,                        <=== THE TRICK #1\nD//             UNIT=SYSALLDA,vol=ser=spool#,\nD//             SPACE=(CYL,1,,MXIG)                   <=== THE TRICK #2\nD//*\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETUSL": {"ttr": 24849, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETUSL\nKTomiak Utility\nTKenneth Tomiak Utility Examples - IEBUPDTE\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170425-155522\n*\n@Kenneth E. Tomiak\n*\nNIEBUPDTE is an IBM utility that I use for Sharing data.\nNIt can do wonders at batch edits, but for me, the power is\nNin how I can extract PDS members from one site and load them\nNat another..\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETUSL12": {"ttr": 24851, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETUSL12\nTKenneth Tomiak Utility Examples - IEBUPDTE:\nTErase the contents.\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170421-094423\n*\n@Kenneth E. Tomiak\n*\nN\nNFailing to provide input may empty the PDS.\nN\nD//ST01#01 EXEC PGM=IEBUPDTE\nD//DD1       DD DISP=(OLD),UNIT=disk,VOL=SER=111111\nD//SYSPRINT  DD SYSOUT=*\nD/*CANCEL\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KETUSL13": {"ttr": 24853, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SKETUSL13\nKALIAS\nTTOMIAK Utility Example - IEBUPDTE Add a member with an alias\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20170421-094423\n*\n@Kenneth E. Tomiak\n*\nNSC26-7414-08 z/OS DFSMSdfp Utilities\nNAdd a member with an alias\nN\nD//*\nD//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\nD//* IEBUPDTE - Update a pds showing how to add an alias\nD//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nD//ST01#01 EXEC PGM=IEBUPDTE,REGION=6M,PARM='MOD'\nD//SYSPRINT  DD SYSOUT=*\nD//*SYSUT1   DD NOT USED WHEN PARM=NEW\nD//SYSUT1    DD DISP=SHR,DSN=SAME.PDS.DSNAME\nD//SYSUT2    DD DISP=OLD,DSN=SAME.PDS.DSNAME\nD//SYSIN     DD DATA,DLM=##\nD./         ADD NAME=KEN\nDTHIS IS MEMBER KEN, ALIAS TOMIAK\nD./       ALIAS NAME=TOMIAK\nD./       ENDUP\nD##\nD//*\nD//\nI\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT972/CBT.V500.FILE972.PDS/XMKETU.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT972/CBT.V500.FILE972.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}