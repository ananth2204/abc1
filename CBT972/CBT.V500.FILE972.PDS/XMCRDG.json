{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "KTOMIAK", "INMTNODE": "ANYNODE", "INMTUID": "KTOMIAK", "INMFTIME": "20180225125626000000", "INMNUMF": 2}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 251, "INMBLKSZ": 3120, "INMRECFM": "VB", "numfile": 1}, "2": {"INMUTILN": "IEBCOPY", "INMSIZE": 1881152, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 81, "INMBLKSZ": 27945, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "VENDOR.GENIE.WISHLIST", "INMMEMBR": "VENDOR.GENIE.WISHLIST", "numfile": 2}, "3": {"INMUTILN": "INMCOPY", "INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 2}}, "INMR03": {"1": {"INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}, "2": {"INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "message": {"file": "b'@\\x7f\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5@\\xe3\\x96\\x94\\x89\\x81\\x92\\x7fL\\xc3\\xc2\\xe3m\\xd2\\x85\\x95|\\xd2\\xe3\\x96\\x94\\x89\\x81\\x92K\\x82\\x89\\xa9n\\xe4K\\xe2K\\xc1K@\\xc3\\xc3z@\\xc1\\xd5\\xe8\\xd5\\xd6\\xc4\\xc5@a\\xd2\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@\\xd2K@\\xe3\\x96\\x94\\x89\\x81\\x92@@@@@@@@@@@@@@@@@@@@@@\\xe2\\xe3\\xc1\\xd5\\xc4\\xc1\\xd9\\xc4@\\xc7\\xd3\\xd6\\xc2\\xc1\\xd3@\\xc4\\xc9\\xe2\\xc3\\xd3\\xc1\\xc9\\xd4\\xc5\\xd9``````````````````````````\\xe3\\x88\\x85@\\x81\\xa4\\xa3\\x88\\x96\\x99@\\x85\\xa7\\x97\\x93\\x89\\x83\\x89\\xa3\\x93\\xa8@\\x84\\x89\\xa2\\x81\\xa5\\x96\\xa6\\xa2@\\x81\\x95\\xa8@\\x83\\x93\\x81\\x89\\x94@\\xa6\\x88\\x81\\xa3\\xa2\\x96\\x85\\xa5\\x85\\x99@\\x81\\x82\\x96\\xa4\\xa3@\\xa3\\x88\\x85\\x83\\x96\\x99\\x99\\x85\\x83\\xa3\\x95\\x85\\xa2\\xa2@\\x96\\x99@\\x86\\xa4\\x95\\x83\\xa3\\x89\\x96\\x95\\x81\\x93\\x89\\xa3\\xa8@\\x96\\x86@\\xa3\\x88\\x89\\xa2@\\x97\\x99\\x96\\x87\\x99\\x81\\x94k@\\x81\\x95\\x84@\\x84\\x89\\xa2\\x83\\x93\\x81\\x89\\x94\\xa2@\\x93\\x89\\x81\\x82\\x89\\x93\\x89\\xa3\\xa8\\x86\\x96\\x99@\\x81\\x95\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x81\\x95\\x84@\\x85\\xa5\\x85\\x99\\xa8\\xa3\\x88\\x89\\x95\\x87@\\x82\\x81\\x84@\\xa3\\x88\\x81\\xa3@\\x94\\x89\\x87\\x88\\xa3@\\x88\\x81\\x97\\x97\\x85\\x95@\\x89\\x95@\\x83\\x96\\x95\\x95\\x85\\x83\\xa3\\x89\\x96\\x95@\\xa6\\x89\\xa3\\x88k\\x82\\x85\\x86\\x96\\x99\\x85k@\\x84\\xa4\\x99\\x89\\x95\\x87k@\\x96\\x99@\\x81\\x86\\xa3\\x85\\x99@\\xa4\\xa2\\x89\\x95\\x87@\\x89\\xa3K@\\xc9@\\x88\\x81\\xa5\\x85@\\xa3\\x99\\x89\\x85\\x84@\\xa3\\x96@\\x94\\x81\\x92\\x85@\\x89\\xa3@\\xa6\\x96\\x99\\x92@\\x99\\x89\\x87\\x88\\xa3k\\x81\\x95\\x84@\\xc9@\\x81\\x94@\\x97\\x85\\x99\\xa2\\x96\\x95\\x81\\x93\\x93\\xa8@\\x97\\x99\\x85\\xa3\\xa3\\xa8@\\x83\\x96\\x95\\x86\\x89\\x84\\x85\\x95\\xa3@\\xa3\\x88\\x81\\xa3@\\x89\\xa3@\\x84\\x96\\x85\\xa2k@\\x82\\xa4\\xa3@\\x85\\xa5\\x85\\x99\\xa8\\x82\\x96\\x84\\xa8@\\x94\\x81\\x92\\x85\\xa2\\x94\\x89\\xa2\\xa3\\x81\\x92\\x85\\xa2k@\\xa2\\x96@\\x89\\x86@\\xa8\\x96\\xa4@\\xa4\\xa2\\x85@\\x89\\xa3k@\\xa8\\x96\\xa4@\\x84\\x96@\\xa2\\x96@\\x81\\xa3@\\xa8\\x96\\xa4\\x99@\\x96\\xa6\\x95@\\x99\\x89\\xa2\\x92K@\\xe2\\x89\\x95\\x83\\x85\\x99\\x85\\x93\\xa8@\\xa8\\x96\\xa4\\x99\\xa2k\\xd2\\x85\\x95\\x95\\x85\\xa3\\x88@\\xc5K@\\xe3\\x96\\x94\\x89\\x81\\x92@'", "lrecl": 80, "text": " \"Kenneth E Tomiak\"<CBT_Ken@KTomiak.biz>U.S.A. CC: ANYNODE /KTOMIAK   K. Tomiak\n                     STANDARD GLOBAL DISCLAIMER--------------------------The aut\nhor explicitly disavows any claim whatsoever about thecorrectness or functionali\nty of this program, and disclaims liabilityfor anything and everything bad that\nmight happen in connection with,before, during, or after using it. I have tried\nto make it work right,and I am personally pretty confident that it does, but eve\nrybody makesmistakes, so if you use it, you do so at your own risk. Sincerely yo\nurs,Kenneth E. Tomiak\n"}, "file": {"VENDOR.GENIE.WISHLIST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27945, "DS1LRECL": 81, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12304, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "180056", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x002'", "DS1LSTAR": "b'\\x00\\x8d\\x16'", "DS1TRBAL": "b'2V'"}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xc0\\xc8'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x06\\x80\\x00\\x04z\\xc0\\xc8'", "b'X}Ch\\x00\\x00\\x06W\\x00\\r\\x06^\\x00\\x07\\x00d'", "b'X}Ch\\x00\\x00\\x06`\\x00\\t\\x06c\\x00\\r\\x002'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"CRDG": {"ttr": 4107, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG\nTCICS Transaction Server for z/OS\nT-Resource Definition Guide\nT-Version 5 Release 3\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-121955\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNResource definition\nN===================\nNResource definition is the process in which you specify the resources\nNthat will be used by a CICS region, and by applications running in the\nNregion.\nN\nNThe following chapters have been enabled as WISH entries:\nN\nN  Chapter  2. CSD file management\nN  Chapter  5. ATOMSERVICE resources\nN  Chapter  6. BUNDLE resources\nN  Chapter  7. CONNECTION resources\nN  Chapter  8. DB2CONN resources\nN  Chapter  9. DB2ENTRY resources\nN  Chapter 10. DB2TRAN resources\nN  Chapter 11. DOCTEMPLATE resources\nN  Chapter 12. ENQMODEL resources\nN  Chapter 13. FILE resources\nN  Chapter 14. IPCONN resources\nN  Chapter 15. JOURNALMODEL resources\nN  Chapter 16. JVMSERVER resources\nN  Chapter 17. LIBRARY resources\nN  Chapter 18. LSRPOOL resources\nN  Chapter 19. MAPSET resources\nN  Chapter 20. MQCONN resources\nN  Chapter 21. PARTITIONSET resources\nN  Chapter 22. PARTNER resources\nN  Chapter 23. PIPELINE resources\nN  Chapter 24. PROCESSTYPE resources\nN  Chapter 25. PROFILE resources\nN  Chapter 26. PROGRAM resources\nN  Chapter 27. SESSIONS resources\nN  Chapter 28. TCPIPSERVICE resources\nN  Chapter 29. TDQUEUE resources\nN  Chapter 30. TERMINAL resources\nN  Chapter 31. TRANCLASS resources\nN  Chapter 32. TRANSACTION resources\nN  Chapter 33. TSMODEL resources\nN  Chapter 34. TYPETERM resources\nN  Chapter 35. URIMAP resources\nN  Chapter 36. WEBSERVICE resources\nN  Chapter 37. Resource definition online (RDO) transaction CEDA\nN  Chapter 38. The resource definition batch utility DFHCSDUP\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG02": {"ttr": 4109, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG02\nTCICS\nT-RDG\nT-Chapter 2. CSD file management\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 2. CSD file management\nN==============================\nNRefer to the CICS System Definition Guide 5.2. The text below was\nNextracted from there.\nN\nNBefore you begin\nN----------------\nNBefore you can use the CSD, you must define it as a VSAM KSDS data set,\nNand initialize it using the DFHCSDUP utility program.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0201": {"ttr": 4111, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0201\nTCICS\nT-RDG\nT-Chapter 2. CSD file management -Define cluster\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-115555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 2. CSD file management\nN==============================\nNProcedure\nN---------\nN1. Code the KEYS parameter as shown in the sample job. The key length\nN   is 22 bytes.\nN\nN2. Calculate the CSD disk space that is required. The average record\nN   size is 200 bytes for a CSD that contains only the CICS-supplied\nN   resource definitions (generated by the INITIALIZE and UPGRADE\nN   commands). If you create a larger proportion of terminal resource\nN   definition entries than are defined in the initial CSD, the average\nN   record size is higher because of the larger size of the\nN   terminal-type entries. The TERMINAL and TYPETERM definition record\nN   sizes are listed under Calculating CSD disk space. The maximum\nN   record size is 2000, as shown in the sample job.\nN\nN3. Code the SHAREOPTIONS parameter as shown in the sample job.\nN\nN4. Optional: You can specify the recovery attributes for the CSD in the\nN   ICF catalog instead of using the CSD system initialization\nN   parameters. If you decide to use the CSD in RLS mode, you must\nN   define the recovery attributes in the ICF catalog. You specify the\nN   recovery attributes as:\nN\nN   -> LOG(NONE) (Nonrecoverable data set)\nN\nN   -> LOG(UNDO) (For backout only)\nN\nN   ->LOG(ALL) (For both backout and forward recovery)\nN\nN   If you specify LOG(ALL), you must also specify LOGSTREAMID to define\nN   the 26-character name of the MVS log stream to be used as the\nN   forward recovery log. If you specify recovery attributes in the\nN   ICF catalog, and also want to use BWO, specify LOG(ALL) and\nN   BWO(TYPECICS).\nN\nN5. You must specify the DDNAME for the CSD as DFHCSD.\nN\nNExample\nN-------\nNFigure 1. Sample job to define and initialize the CSD.\nN\nD//DEFINIT  JOB  accounting information\nD//         SET CICSLOAD='DFH540.CICS.SDFHLOAD'\nD//DEFCSD  EXEC PGM=IDCAMS\nD//SYSIN     DD *\nD  DEFINE -\nD    CLUSTER ( -\nD      BWO(NO)\nD      FREESPACE(10 10) -\nD      INDEXED -\nD      KEYS(22 0) -\nD      LOG(ALL) -\nD      LOGSTREAMID(cicspfx.env.FWDRECOV) -\nD      NAME(cicspfx.env.DFHCSD) -\nD      RECORDS(n1 n2) -\nD      RECORDSIZE(200 2000) -\nD      SHAREOPTIONS(2) -\nD      VOLUMES(volid) -\nD    ) -\nD    DATA ( -\nD      NAME(cicspfx.env.DFHCSD.DATA)   -\nD      CONTROLINTERVALSIZE(8192) -\nD    ) -\nD    INDEX ( -\nD      NAME(cicspfx.env.DFHCSD.INDEX) -\nD    )\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//*\nD//INIT    EXEC PGM=DFHCSDUP\nD//STEPLIB   DD DISP=SHR,DSN=&CICSLOAD\nD//SYSIN     DD *\nD  INITIALIZE\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//DFHCSD    DD DISP=OLD,DSN=cicspfx.env.DFHCSD\nD//*\nD//\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG05": {"ttr": 4113, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG05\nTCICS\nT-RDG\nT-Chapter 5. ATOMSERVICE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180203-133055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 5. ATOMSERVICE resources\nN================================\nNAn ATOMSERVICE resource defines an Atom service, feed, collection, or\nNcategory document that CICS can deliver to a Web client over HTTP.\nN\nNTo support each ATOMSERVICE resource, you need a URIMAP resource to handle\nNincoming Web client requests and point to the appropriate ATOMSERVICE\nNresource.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0501": {"ttr": 4353, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0501\nTCICS\nT-RDG\nT-Chapter 5. ATOMSERVICE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-063555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 5. ATOMSERVICE resources\nN================================\nNATOMSERVICE attributes\nN----------------------\nNDescribes the syntax and attributes of the ATOMSERVICE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    ATOMSERVICE(name)\nI      Specifies the 8-character name of this resource\nI      definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to eight characters in length.\nI      Lowercase characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up\nI      to 58 characters in length. There are no restrictions on the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that for each left parenthesis there is a matching right\nI      parenthesis. If you use the CREATE command, for each single\nI      apostrophe in the text, code two apostrophes.\nN\nD    ATOMTYPE(FEED | COLLECTION | SERVICE | CATEGORY)\nI      Specifies the type of Atom document that is returned\nI      for this ATOMSERVICE definition.\nN\nI      FEED: An Atom feed document, which describes the metadata for a\nI        feed, and contains Atom entries that provide data for the feed.\nI        An Atom feed can be retrieved using HTTP GET requests, but it\nI        cannot be edited by a Web client. The Atom configuration file\nI        for an Atom feed must begin with the root element\nI        <cics:atomservice type=\"feed\">.\nN\nI      COLLECTION: An Atom collection document, which contains a group of\nI        Atom entries that can be edited by Web clients using HTTP POST,\nI        PUT, and DELETE requests, as well as being retrieved using\nI        HTTP GET requests. The Atom configuration file for a collection\nI        must begin with the root element\nI        <cics:atomservice type=\"collection\">.\nN\nI      SERVICE: An Atom service document, which provides information\nI        about the editable collections that are available on a server.\nN\nI      CATEGORY: An Atom category document, which lists the categories for\nI        entries in a collection. You can set up a category document if\nI        you want to use the same categories to define multiple\nI        collections.\nN\nD    CONFIGFILE(name)\nI      Specifies the fully qualified (absolute) or\nI      relative name of an Atom configuration file stored in z/OS UNIX\nI      System Services. The Atom configuration file contains XML that\nI      specifies metadata and field names for the Atom document that is\nI      returned for this resource definition. For details, see the\nI      CICS Internet Guide.\nN\nI      The name can be specified as an absolute path including all\nI      directories and beginning with a slash, for example,\nI      /u/atom/myfeed.xml. Alternatively, it can be specified as a path\nI      relative to the HOME directory of the CICS region user ID, for\nI      example, atom/myfeed.xml (with no leading forward slash). Up to\nI      255 characters can be used.\nN\nD    BINDFILE(name)\nI      Specifies the fully qualified (absolute) or\nI      relative name of an XML binding stored in z/OS UNIX System\nI      Services. This attribute is not used for an Atom service or\nI      category document. You create an XML binding using the CICS XML\nI      assistant program DFHLS2SC.\nN\nI      For resource types FILE and TSQUEUE, the XML binding is required,\nI      and it specifies the data structures used by the resource named in\nI      RESOURCENAME, which supplies the data for the Atom document.\nN\nI      For resource type PROGRAM, an XML binding is optional, and you\nI      create it using the resource that the program accesses to obtain\nI      the data for the Atom entries, not the program itself. You must\nI      specify an XML binding for resource type PROGRAM if you are using\nI      the resource handling parameters in the DFHATOMPARMS container to\nI      pass information from the Atom configuration file to the program.\nI      If you are not doing this, do not specify an XML binding.\nN\nI      The name of the XML binding can be specified as an absolute path\nI      including all directories and beginning with a slash, for example,\nI      /u/atom/atomictest.xsdbind. Alternatively, it can be specified as\nI      a path relative to the HOME directory of the CICS region user ID;\nI      for example, atom/atomictest.xsdbind (with no leading forward\nI      slash). Up to 255 characters can be used.\nN\nD    RESOURCENAME(name)\nI      Specifies the 1 - 16 character name of the CICS\nI      resource that provides the data for this Atom feed or collection.\nI      If the data for your Atom entries is held in a resource that is\nI      accessed by a service routine, specify the name of the service\nI      routine here. This attribute is not used for an Atom service or\nI      category document.\nN\nD    RESOURCETYPE(FILE | PROGRAM | TSQUEUE)\nI      Specifies the type of CICS\nI      resource that holds the data for this Atom feed or collection.\nI      This attribute is not used for an Atom service or category\nI      document. TSQUEUE is the default for this attribute.\nN\nI      FILE: A CICS file. A single record in the file provides the data\nI        for a single Atom entry. A file that holds Atom entries must have\nI        a unique key for the records, and you cannot use an alternate\nI        index file that has been defined with the NONUNIQUEKEY attribute.\nI        You can use any type of VSAM file to hold Atom entries, but note\nI        that ESDS (entry-sequenced data set) files are not suitable for\nI        a feed that you might want to set up as an editable collection,\nI        because you cannot delete records in an ESDS. You cannot use a\nI        BDAM file.\nN\nI      PROGRAM: A service routine, which is a CICS application program\nI        written to supply content for Atom entries.\nN\nI      TSQUEUE: A temporary storage queue. A single record in the\nI        temporary storage queue provides the data for a single Atom\nI        entry.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Indicates whether the Atom document specified by this\nI      resource definition is available or unavailable.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG06": {"ttr": 4355, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG06\nTCICS\nT-RDG\nT-Chapter 6. BUNDLE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-122055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 6. BUNDLE resources\nN===========================\nNA BUNDLE resource defines a CICS bundle, a unit of deployment for an\nNapplication. A bundle is a collection of CICS resources, artifacts,\nNreferences, and a manifest that you can deploy into a CICS region to\nNrepresent a whole application or a component of an application.\nN\nNThe manifest is a file that describes the contents of the bundle,\nNincluding what resources to create in the CICS region and the location\nNof the supporting artifacts, what prerequisites are required for the\nNapplication to run successfully, and any services that the application\nNcan offer to other applications.\nN\nNA bundle is deployed to z/OS UNIX and comprises a directory structure\nNof artifacts. The BUNDLE resource defines where the bundle is deployed\nNon z/OS UNIX and its status. When you enable a BUNDLE resource, CICS\nNreads the manifest and dynamically creates the application resources\nNthat are defined in the manifest for you. Other resources that are\nNdefined as prerequisites for the application must be present in the\nNCICS region to successfully enable the BUNDLE resource.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0601": {"ttr": 4357, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0601\nTCICS\nT-RDG\nT-Chapter 6. BUNDLE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-064755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 6. BUNDLE resources\nN===========================\nNBUNDLE attributes\nN-----------------\nNDescribes the syntax and attributes of the BUNDLE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    BUNDLE(name)\nI      Specifies the 1 - 8 character name of the BUNDLE.\nN\nD    GROUP(group)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to eight characters in length.\nI      Lowercase characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      In this field, you can provide a description of\nI      the resource that you are defining. The description text can be\nI      up to 58 characters in length. No restrictions apply to the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that each left parenthesis has a matching right one. If\nI      you use the CREATE command, for each single apostrophe in the\nI      text code, use two apostrophes.\nN\nD    BUNDLEDIR(zfsdirectory)\nI      Specifies the 1 - 255 character fully\ni      qualified name of the root directory for the bundle on\nI      z/OS UNIX. The first character must be / and the end\nI      character /.\nN\nD    BASESCOPE(value)\nI      Specifies the 1 - 255 character string that\nI      defines the scope for a bundle. Use a uniform resource\nI      identifier (URI) where possible. Use the BASESCOPE attribute\nI      when you want to group similar bundles together or when you\nI      to associate a CICS bundle with a particular application that is\nI      running in a platform. The URI for an application has the\nI      following format:\nI\nI      cicsapplication://Platform/ApplicationID/Major/Minor/Micro\nI\nI      Platform is the name of the platform in which the application\nI      is running,\nI\nI      ApplicationID is the ID of the application BUNDLE,\nI\nI      followed by the major, minor, and micro version of the\nI      application.\nN\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the initial status of the BUNDLE\nI      resource when it is installed.\nN\nI    ENABLED: The BUNDLE is available for use. CICS checks that all\nI      prerequisites for the bundle are present in the region\nI      and attempts to install and enable all of the required\nI      resources that are defined in the bundle.\nN\nI    DISABLED: The BUNDLE is not available for use. CICS does not\nI      check for prerequisites and installs, but does not enable,\nI      the resources that are defined in the bundle. The default\nN      value is empty so that all BUNDLE resources install in the\nN      same scope.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG07": {"ttr": 4359, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG07\nTCICS\nT-RDG\nT-Chapter 7. CONNECTION resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 7. CONNECTION resources\nN===============================\nNCONNECTION attributes\nN---------------------\nNA CONNECTION defines a remote system with which your CICS system\nNcommunicates, using intersystem communication (ISC) or multiregion\nNoperation (MRO). ISC uses the APPC or LUTYPE6.1 communication protocol.\nNMRO uses the IRC, XM, or XCF/MRO access method.\nN\nNSee also Chapter 14. IPCONN resources. Like a CONNECTION, an IPCONN\nNdefines a communication link to a remote system, but in this case the\nNconnection uses the TCP/IP protocol.\nN\nNWhen you define a CONNECTION, you give enough information to identify\nNthe system and specify its basic attributes. You put details in the\nNSESSIONS definition about the sessions you use to communicate with\nNthe system. CICS uses the CONNECTION name to identify the other system\nNwhen the definition has been installed. For other CICS systems\nNconnected via MRO, this name is typically the same as that specified\nNin the other CICS system as the SYSIDNT system initialization\nNparameter. For other systems connected via ISC, this name is typically\nNbased on an acronym that describes the location of or the organization\nNthat owns the system (for example, USA1 or IBMC).\nN\nNThe REMOTESYSTEM name on a TRANSACTION definition, or on a TERMINAL\nNdefinition, can refer to a CONNECTION definition through its CONNECTION\nNname (or to an IPCONN definition through its IPCONN name). These\nNattributes are used for transaction routing.\nN\nNThe REMOTESYSTEM name on a PROGRAM definition can refer to a CONNECTION\nNdefinition through its CONNECTION name (or to an IPCONN definition\nNthrough its IPCONN name). This attribute is used for distributed\nNprogram link.\nN\nNThe CONNECTION definition does not name associated SESSIONS.\nN\nNBefore you start creating definitions for intercommunication resources,\nNsee the CICS Intercommunication Guide for further guidance. There you\nNcan find many useful examples of the attributes you must specify for\nNdifferent types of links and sessions.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0701": {"ttr": 4609, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0701\nTCICS\nT-RDG\nT-Chapter 7. CONNECTION resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-081455\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 7. CONNECTION resources\nN===============================\nNCONNECTION attributes\nN---------------------\nNDescribes the syntax and attributes of the CONNECTION resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    CONNECTION(name)\nI      specifies the name of this connection definition.\nI      The name can be up to four characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to eight characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource\nI      that you are defining in this field. The description text can be\nI      up to 58 characters in length. No restrictions apply to the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that for each left parenthesis there is a matching right\nI      parenthesis. If you use the CREATE command, for each single\nI      apostrophe in the text, code two apostrophes.\nN\nD    AUTOCONNECT(NO | ALL | YES)\nI      For systems using ACCESSMETHOD(VTAM),\nI      you specify with AUTOCONNECT(YES) or (ALL) that sessions are to\nI      be established (that is, BIND is to be performed). Such sessions\nI      are set up during CICS initialization, or when you use the\nI      CEMT or EXEC CICS SET VTAM OPEN command to start communication\nI      with z/OS Communications Server. If the connection cannot be\nI      made at these times because the remote system is unavailable,\nI      you must subsequently acquire the link by using the CEMT or\nI      EXEC CICS SET CONNECTION(sysid) INSERVICE ACQUIRED command,\nI      unless the remote system becomes available in the meantime and\nI      itself initiates communications.\nN\nN      For APPC connections with SINGLESESS(NO) specified, CICS tries\nI      to bind, on system start-up, the LU services manager sessions in\nI      mode group SNASVCMG.\nN\nN      For connection definitions with SINGLESESS(YES) specified, the\nI      AUTOCONNECT operand is ignored. Use the AUTOCONNECT operand of\nI      the session definition instead.\nN\nI      ALL: On this definition, ALL is equivalent to YES, but you can\nI        specify ALL to be consistent with the session definition.\nI        AUTOCONNECT(ALL) should not be specified for connections to\nI        other CICS systems, because this can cause a bind-race.\nN\nI      NO: CICS does not attempt to bind sessions when the connection\nI        is established.\nN\nI      YES: CICS attempts to bind only contention-winning sessions when\nI        the connection is established.\nN\nD    DATASTREAM(USER | LMS | SCS | STRFIELD | 3270)\nI      specifies the type of data stream.\nN\nI      LMS: The data stream is a Logical Message Services (LMS) data\nI        stream consisting of FMH4s and FMH8s as defined in the\nI        LUTYPE6.1 architecture.\nN\nI      SCS: The data stream is an SCS data stream as defined in the\nI        LUTYPE6.1 architecture.\nN\nI      STRFIELD: The data stream is a structured field data stream as\nI        defined in the LUTYPE6.1 architecture.\nN\nI      USER: Let DATASTREAM default to USER if the data stream is\nI        user-defined. If you are communicating between multiple CICS\nI        systems, always let DATASTREAM default to USER.\nN\nI      3270: The data stream is a 3270 data stream as defined in the\nI        type 6.1 logical unit (LUTYPE6.1) architecture.\nN\nD    INSERVICE(YES | NO)\nI      specifies the status of the connection that is\nI      being defined.\nN\nI      NO: The connection can neither receive messages nor transmit\nI        input.\nN\nI      YES: Transactions may be initiated and messages may automatically\nI        be sent across the connection.\nN\nD    MAXQTIME(NO | seconds)\nI      specifies a time control on the wait time\nI      for queued allocate requests waiting for free sessions on a\nI      connection that appears to be unresponsive. The maximum queue\nI      time is used only if a queue limit is specified for QUEUELIMIT,\nI      and then the time limit is applied only when the queue length has\nI      reached the queue limit value.\nN\nI      NO: CICS maintains the queue of allocate requests that are\nI        waiting for a free session. No time limit is set for the length\nI        of time that requests can remain queued (though the DTIMOUT\nI        mechanisms can apply to individual requests). In this case, a\nI        value of X'FFFF' is passed on the XZIQUE parameter list (in\nI        field UEPEMXQT).\nN\nI      seconds: The approximate upper limit on the time that allocate\nI        requests can be queued for a connection that appears to be\nI        unresponsive. The number represents seconds in the range 0\nI        through 9999.\nN\nD    NETNAME(netname)\nI      specifies the network name that identifies the\nI      remote system. The name can be up to eight characters in length.\nI      The name follows assembler language rules. It must start with an\nI      alphabetic character.\nN\nI      The NETNAME is the APPLID of the remote system or region, unless\nI      you are defining an LUTYPE6.1 or APPC link to a z/OS\nI      Communications Server generic resource group.\nN\nD    QUEUELIMIT(NO | number)\nI      specifies the maximum number of allocate\nI      requests that CICS is to queue while waiting for free sessions:\nN\nI      NO: There is no limit set to the number of allocate requests\nI        that CICS can queue while waiting for a free session. In this\nI        case, a value of X'FFFF' is passed on the XZIQUE parameter\nI        list (in field UEPQUELM).\nN\nI      number: The maximum number of allocate requests, in the range\nI        0 through 9999, that CICS can queue on the connection while\nI        waiting for a free session. When the number of queued allocate\nI        requests reaches this limit, subsequent allocate requests\nI        return SYSIDERR until the queue drops below the limit.\nN\nI        This queue limit is passed to an XZIQUE global user exit\nI        program on the XZIQUE parameter list if the exit is enabled.\nN\nD    RECORDFORMAT(U | VB)\nI      specifies the type of SNA chain.\nN\nI      U: Let RECORDFORMAT default to U if the SNA chain is a single,\nI        unblocked stream of data. You can have private block algorithms\nI        within the SNA chain. Let RECORDFORMAT default to U if you are\nI        communicating between multiple CICS systems.\nN\nI      VB: The SNA chain is formatted according to the VLVB standard as\nI        defined in the LUTYPE6.1 architecture.\nN\nD    XLNACTION(KEEP | FORCE)\nI      XLNACTION specifies\nI      the action to be taken when a new logname is received from the\nI      partner system. Receipt of a new logname indicates that the\nI      partner has deleted its recovery information.\nN\nI      Note: MRO here covers connections with ACCESSMETHOD set to either\nI      IRC or XM.\nN\nI      FORCE: The predefined decisions for indoubt UOWs (as defined by\nI        the indoubt attributes of the transaction definition) are\nI        implemented, before any new work with the new logname is\nI        started. CICS also deletes any information retained for\nI        possible resolution of UOWs that were indoubt at the partner\nI        system.\nN\nI        Attention: Data integrity may be compromised if you use this\nI        option.\nN\nI      KEEP: Recovery information is kept, and no action is taken for\nI        indoubt units of work.\nN\nI      For IRC, the connection continues with new work. Resolve indoubt\nI      UOWs using the CEMT or SPI interface.\nN\nI      For APPC, the connection is unable to perform new work that\nI      requires synclevel 2 protocols until all outstanding recoverable\nI      work with the partner (that is, indoubt UOWs, or information\nI      relevant to UOWs that were indoubt on the partner system under\nI      the old logname) is completed using the CEMT or SPI interface.\nN\nNAttributes for APPC connections\nN-------------------------------\nD    ACCESSMETHOD(VTAM)\nI      specifies the access method to be used for this connection.\nN\nI      VTAM: Communication between the local CICS region and the system\nI        defined by this connection definition is through z/OS\nI        Communications Server. You can use z/OS Communications Server\nI        intersystem communication (ISC) for systems that are in\nI        different MVS images or in different address spaces in the\nI        same MVS image.\nN\nD    ATTACHSEC(LOCAL | IDENTIFY | MIXIDPE | PERSISTENT | VERIFY)\nI      specifies the level of attach-time user security required\nI      for the connection.\nN\nI      IDENTIFY: Incoming attach requests must specify a user\nI        identifier. Enter IDENTIFY when the connecting system has a\nI        security manager; for example, if it is another CICS system.\nN\nI      LOCAL: CICS does not require the client to supply to supply a\nI        user identifier, or a password. All requests will run under the\nI        userid specified in the SECURITYNAME attribute. If the PROTOCOL\nI        attribute on the CONNECTION definition is LU6.1, you must\nI        specify LOCAL.\nN\nI      MIXIDPE: Incoming attach requests may be using either or both\nI        IDENTIFY or PERSISTENT security types. The security type used\nI        depends on the incoming attach request.\nN\nI      PERSISTENT: Incoming attach requests must specify a user\nI        identifier and a user password on the first attach request.\nI        Subsequent attach requests require only the user identifier.\nI        This should be used only between a programmable workstation,\nI        (for example, an IBM Personal Computer) and CICS.\nN\nI      VERIFY: Incoming attach requests must specify a user identifier\nI        and a user password. Enter VERIFY when the connecting system\nI        has no security manager and hence cannot be trusted. Do not\nI        specify VERIFY for CICS-to-CICS communication, because CICS\nI        does not send passwords.\nN\nD    BINDSECURITY(NO | YES)\nI      (APPC only): specifies whether an ESM is\nI      being used for bind-time security.\nN\nI      NO: No external bind-time security is required.\nN\nI      YES: If security is active and the XAPPC system initialization\nI        parameter is set to YES, CICS attempts to extract the session\nI        key from RACF in order to perform bind-time security. If no\nI        RACF profile is available, the bind fails.\nN\nD    PROTOCOL(APPC)\nI      specifies the type of protocol\nI      that is to be used for the link.\nN\nI      APPC (LUTYPE6.2 protocol): Advanced program-to-program\nI      communication, or APPC protocol. This is the default value for\nI      ACCESSMETHOD(VTAM). Specify this for CICS-CICS ISC.\nN\nI      blank: MRO between CICS regions. You must leave the PROTOCOL\nI        blank for MRO, and on the SESSIONS definition you must specify\nI        LU6.1 as the PROTOCOL.\nN\nI      EXCI: The external CICS interface. Specify this to indicate\nI        that this connection is for use by a non-CICS client program\nI        using the external CICS interface.\nN\nI      LU61: LUTYPE6.1 protocol. Specify this for CICS-CICS ISC or\nI        CICS-IMS ISC, but not for MRO.\nN\nD    PSRECOVERY(SYSDEFAULT | NONE)\nI      In a CICS region running with\nI      persistent sessions support, this specifies whether, and how,\nI      LU6.2 sessions are recovered on system restart within the\nI      persistent session delay interval.\nN\nI      NONE: All sessions are unbound as out-of-service with no CNOS\nI        recovery.\nN\nI      SYSDEFAULT: If a failed CICS system is restarted within the\nI        persistent session delay interval, the following actions occur:\nN\nI        -> User modegroups are recovered to the SESSIONS RECOVOPTION\nI           value.\nN\nI        -> The SNASVCMG modegroup is recovered.\nN\nI        -> The connection is returned in ACQUIRED state and the last\nI           negotiated CNOS state is returned\nN\nD    REMOTENAME(connection)\nI      specifies the name by which the APPC\nI      connection for transaction routing is known in the system or\nI      region that owns the connection. The name can be up to four\nI      characters in length.\nN\nD    REMOTESYSNET(netname)\nI      specifies the network name (APPLID) of the\nI      system that owns the connection. The name can be up to eight\nI      characters in length. It follows assembler language rules, and\nI      must start with an alphabetic character.\nN\nD    REMOTESYSTEM(connection)\nI      specifies the name that identifies the\nI      intercommunication link to the system that owns the connection.\nI      The name can be up to four characters in length.\nN\nD    SECURITYNAME(userid)\nI      For APPC and LU6.1 links only, this is the\nI      security name of the remote system. In a CICS system with\nI      security initialized (SEC=YES), the security name is used to\nI      establish the authority of the remote system.\nN\nI      Note: If USERID is specified in the SESSIONS definition\nI      associated with the connection definition, it overrides the\nI      userid specified in the SECURITYNAME attribute, and is used\nI      for link security.\nN\nI      The security name (or USERID on the sessions definition) must\nI      be a valid RACF userid on your system. Access to protected\nI      resources on your system is based on the RACF user profile and\nI      its group membership.\nN\nD    SINGLESESS(NO | YES)\nI      specifies whether the definition is for an\nI      APPC terminal on a single session APPC link to CICS.\nN\nI      NO: The definition is not for a single session APPC link to CICS.\nN\nI      YES: The definition is for an APPC terminal on a single session\nI        APPC link to CICS.\nN\nN      The MODENAME attribute of the SESSIONS definition can be used\nI      to supply a modename for the single session mode set.\nN\nN      An APPC single session terminal can also be defined as a TERMINAL\nI      TYPETERM definition. Both the TERMINAL-TYPETERM definition and\nI      the CONNECTION definition can be autoinstalled. If you are\nI      considering using autoinstall, see Autoinstalling z/OS\nI      Communications Server terminals.\nN\nD    USEDFLTUSER(NO | YES)\nI      (APPC and MRO only): specifies the action\nI      that is taken when an inbound FMH5 does not contain the security\nI      information implied by the ATTACHSEC attribute.\nN\nI      NO: The attach request is rejected, and a protocol violation\nI        message is issued.\nN\nI      YES: The attach is accepted, and the default user ID is\nI        associated with the transaction.\nN\nI      For more information, see the CICS RACF Security Guide.\nN\nNAttributes for MRO connections\nN------------------------------\nD    ACCESSMETHOD(IRC | XM)\nI      specifies the access method to be used for this connection.\nN\nI        Communication between the local CICS region and the region\nI        defined by this connection definition is through the\nI        interregion communication (IRC) program DFHIRP, using the SVC\nI        (as opposed to cross-memory (XM)) mode of DFHIRP.\nN\nI        Note: This use of the term IRC is more specific than its\nI        general use. You can use IRC for multiregion operation\nI        (MRO) for regions that are in the same MVS image or in\nI        different MVS images within a sysplex.\nN\nI        MRO communication between the local CICS region and the\nI        region defined by its CONNECTION definition uses MVS\nI        cross-memory services. Initial connection is through the\nI        interregion communication (IRC) program DFHIRP, using the\nI        cross-memory (XM) (as opposed to the SVC) mode of DFHIRP. You\nI        can use XM for multiregion operation for regions that are in\nI        the same MVS image, or in different MVS images within a\nI        sysplex.\nN\nD    ATTACHSEC(LOCAL | IDENTIFY)\nI      specifies the level of attach-time user security required\nI      for the connection.\nN\nI      IDENTIFY: Incoming attach requests must specify a user\nI        identifier. Enter IDENTIFY when the connecting system has a\nI        security manager; for example, if it is another CICS system.\nN\nI      LOCAL: CICS does not require the client to supply to supply a\nI        user identifier, or a password. All requests will run under the\nI        userid specified in the SECURITYNAME attribute. If the PROTOCOL\nI        attribute on the CONNECTION definition is LU6.1, you must\nI        specify LOCAL.\nN\nI      MIXIDPE: Incoming attach requests may be using either or both\nI        IDENTIFY or PERSISTENT security types. The security type used\nI        depends on the incoming attach request.\nN\nI      PERSISTENT: Incoming attach requests must specify a user\nI        identifier and a user password on the first attach request.\nI        Subsequent attach requests require only the user identifier.\nI        This should be used only between a programmable workstation,\nI        (for example, an IBM Personal Computer) and CICS.\nN\nI      VERIFY: Incoming attach requests must specify a user identifier\nI        and a user password. Enter VERIFY when the connecting system\nI        has no security manager and hence cannot be trusted. Do not\nI        specify VERIFY for CICS-to-CICS communication, because CICS\nI        does not send passwords.\nN\nD    CONNTYPE(SPECIFIC | GENERIC)\nI      For external CICS interface (EXCI)\nI      connections, this specifies the nature of the connection.\nN\nI      GENERIC: The connection is for communication from a non-CICS\nI        client program to the CICS system, and is generic. A generic\nI        connection is an MRO link with a number of sessions to be\nI        shared by multiple EXCI users. For a generic connection you\nI        cannot specify the NETNAME attribute.\nN\nI      SPECIFIC: The connection is for communication from a non-CICS\nI        client program to the CICS region, and is specific. A specific\nI        connection is an MRO link with one or more sessions dedicated\nI        to a single user in a client program. For a specific\nI        connection, NETNAME is mandatory.\nN\nD    PROTOCOL(EXCI)\nD    USEDFLTUSER(NO | YES)\nN\nNAttributes for LU type 6.1 connections\nN--------------------------------------\nD    ACCESSMETHOD(VTAM)\nI      specifies the access method to be used for this connection.\nN\nI        Communication between the local CICS region and the system\nI        defined by this connection definition is through z/OS\nI        Communications Server. You can use z/OS Communications Server\nI        intersystem communication (ISC) for systems that are in\nI        different MVS images or in different address spaces in the\nI        same MVS image.\nN\nD    PROTOCOL(LU61)\nD    SECURITYNAME(userid)\nN\nNAttributes for indirect connections\nN-----------------------------------\nD    ACCESSMETHOD(INDIRECT)\nI      specifies the access method to be used for this connection.\nI        Communication between the local CICS system and the\nI        system defined by this connection definition is through the\nI        system named in the INDSYS operand.\nN\nD    INDSYS(connection)\nI      specifies the name of another CONNECTION that\nI      defines an intermediate system used to relay communications\nI      between this system and the remote system. The name can be up to\nI      four characters in length.\nN\nN\nNObsolete attributes\nN-------------------\nN\nI    BINDPASSWORD: This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG08": {"ttr": 4612, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG08\nTCICS\nT-RDG\nT-Chapter 8. DB2CONN resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 8. DB2CONN resources\nN============================\nNA DB2CONN definition defines the attributes of the connection between\nNCICS and DB2, and of the pool threads and command threads used with the\nNconnection.\nN\nNInstalling DB2 connection definitions\nN-------------------------------------\nNThis section describes the guidelines for installing and discarding\nNDB2CONN definitions and the implications of interruptions in partial\nNactivity.\nN\nNAbout this task\nN---------------\nN-> Only one DB2CONN can be installed in a CICS system at any one time.\nN   An install of a second DB2CONN can implicitly DISCARD the existing\nN   DB2CONN and its associated DB2ENTRYs and DB2TRANs (unless\nN   reinstalling a DB2CONN of the same name) before proceeding with the\nN   installation.\nN\nN-> A DB2CONN must be installed before any DB2ENTRY or DB2TRAN\nN   definitions. DB2ENTRY and DB2TRAN definitions cannot exist on\nN   their own, and can only be associated with a DB2CONN that is already\nN   installed. Also, if you discard a DB2CONN, the associated DB2ENTRY\nN   and DB2TRAN resource definitions are also discarded. Note that there\nN   is no attribute on a DB2ENTRY or DB2TRAN that explicitly specifies\nN   the DB2CONN to which they belong. This allows DB2ENTRY and DB2TRAN\nN   definitions to be shared by DB2CONN definitions without alteration.\nN\nN   Note: When DB2CONN, DB2ENTRYs, and DB2TRANs are defined in the same\nN   group, CICS automatically installs the DB2CONN first. If you install\nN   DB2 definitions from multiple groups (by means of a list or multiple\nN   INSTALL GROUP commands), the first group you install must contain\nN   the DB2CONN definition. Successive groups should not have any\nN   DB2CONN definitions. CICS issues an error message when installing\nN   a DB2ENTRY or DB2TRAN when no DB2CONN is installed. If multiple\nN   DB2CONN definitions are installed, all DB2 definitions installed\nN   before the final DB2CONN definition are discarded. CICS issues\nN   messages for all discards.\nN\nN-> A DB2CONN must be installed before the CICS DB2 connection can be\nN   started. Because it contains information regarding pool threads and\nN   command threads, as well as global type information, a DB2CONN\nN   represents the minimum required to start the CICS DB2 connection.\nN   There are no entry threads, and all transactions use the pool. You\nN   can add DB2ENTRYs and DB2TRANs after the CICS DB2 connection is\nN   active.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0801": {"ttr": 4865, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0801\nTCICS\nT-RDG\nT-Chapter 8. DB2CONN resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 8. DB2CONN resources\nN============================\nNDB2CONN attributes\nN------------------\nN\nNSyntax:\nN-------\nD  DEFINE\nD    DB2CONN(name)\nI      The name to identify a DB2 connection definition.\nI      The name can be up to eight characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to eight characters in length.\nI      Lowercase characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource\nI      that you are defining in this field. The description text can be\nI      up to 58 characters in length. No restrictions apply to the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that for each left parenthesis there is a matching right\nI      parenthesis. If you use the CREATE command, for each single\nI      apostrophe in the text, code two apostrophes.\nN\nNConnection attributes\nNDescribes the attributes of the DB2CONN resource that relate to\nNthe connection.\nN\nD    CONNECTERROR(SQLCODE | ABEND)\nI      Specifies the way that the\nI      information, that CICS is not connected to DB2 because the\nI      attachment facility is in 'standby mode', is reported back to an\nI      application that has issued an SQL request.\nN\nI      ABEND: The application abends with abend code AEY9.\nN\nI      SQLCODE: The application receives a -923 sqlcode. SQLCODE cannot\nI        be specified if STANDBYMODE is set to NOCONNECT.\nN\nD    DB2GROUPID(name)\nI      Specifies the group ID (up to four characters) of\nI      a data sharing group of DB2 subsystems. The group attach facility\nI      connects CICS to any active member of this data sharing group.\nI      Match the group ID to the group attachment name defined in DB2.\nI      With DB2 Version 10, the group ID can be a subgroup attachment name\nI      defined to DB2 which defines a subset of the data sharing group.\nI      If the DB2GROUPID attribute remains blank, group attach is not\nI      used.\nN\nI      You cannot specify both DB2GROUPID and DB2ID, the priorities are\nI      as follows:\nN\nI      1. Specifying a DB2GROUPID blanks out any DB2ID that is already\nI         set in the DB2CONN definition.\nN\nI      2. If you attempt to specify both a DB2GROUPID and a DB2ID on the\nI         same CEDA panel, the DB2ID is used.\nN\nI      3. If the DB2ID of an individual subsystem is specified in a CEMT\nI         Or EXEC CICS SET DB2CONN command, or in a DSNC STRT command,\nI         this DB2ID overrides any DB2GROUPID attribute that is set in\nI         the installed DB2CONN definition. The DB2GROUPID in the\nI         installed DB2CONN definition is blanked out, and must be set\nI         again (using CEDA or a SET DB2CONN command) to use group attach.\nN\nD    DB2ID(name)\nI      Specifies the name of the DB2 subsystem to which the\nI      CICS DB2 attachment facility is to connect. By default this field\nI      is blank. If you want to use group attach, specify a DB2GROUPID in\nI      the DB2CONN definition, instead of a DB2ID. The DB2ID set in the\nI      installed DB2CONN definition can be overridden by a DB2 subsystem\nI      ID specified on a DSNC STRT command, or by a DB2ID specified in a\nI      SET DB2CONN command. If the DB2ID in the installed DB2CONN\nI      definition remains blank, and the DB2GROUPID also remains blank,\nI      you can specify a DB2 subsystem ID on the INITPARM system\nI      initialization parameter. If no DB2 subsystem ID is specified by\nI      any of these means, and no DB2GROUPID is specified, the default\nI      DB2ID of blanks is replaced by DSN when the connection is\nI      attempted. Hence, the hierarchy for determining the DB2 subsystem\nI      is as follows:\nN\nI      1. Use the subsystem ID if it is specified in a DSNC STRT command.\nN\nI      2. Use the DB2ID in the installed DB2CONN if it is not blank.\nN\nI      3. Use the DB2GROUPID in the installed DB2CONN for group attach,\nI         if it is not blank.\nN\nI      4. Use the subsystem ID if it is specified on the INITPARM when the\nI         DB2ID and DB2GROUPID in the last installed DB2CONN are blank\nI         (or have later been set to blanks). On any startup, INITPARM is\nI         always used if the last installed DB2CONN contained a blank\nI         DB2ID and a blank DB2GROUPID, even if the DB2ID or DB2GROUPID\nI         was later changed using a SET command.\nN\nI      5. Use a default subsystem ID of DSN.\nN\nI      You cannot specify both DB2GROUPID and DB2ID - if you attempt to\nI      specify both on the same CEDA panel, the DB2ID is used. If a\nI      DB2GROUPID is specified in a CEMT or EXEC CICS SET DB2CONN command,\nI      this overrides any DB2ID that is set in the installed DB2CONN\nI      definition, and the DB2ID is blanked out.\nN\nD    MSGQUEUE1(CDB2 | tdqueue)\nI      Specifies the first transient data\nI      destination to which unsolicited messages from the CICS DB2\nI      attachment facility are sent. This first destination cannot be\nI      blank.\nN\nD    MSGQUEUE2(tdqueue)\nI      Specifies a second transient data destination to\nI      which unsolicited messages from the CICS DB2 attachment facility\nI      are sent.\nN\nD    MSGQUEUE3(tdqueue)\nI      Specifies a third transient data destination to\nI      which unsolicited messages from the CICS DB2 attachment facility\nI      are sent.\nN\nD    NONTERMREL(YES | NO)\nI      Specifies whether a non-terminal transaction\nI      releases threads for reuse at intermediate sync points.\nN\nI      NO: Non-terminal transactions do not release threads for reuse at\nI        intermediate sync points.\nN\nI      YES: Non-terminal transactions release threads for reuse at\nI        intermediate sync points.\nN\nD    PURGECYCLE(00,30 | mm,ss)\nI      Specifies the duration, in minutes and\nI      seconds, of the purge cycle for protected threads. The duration of\nI      the purge cycle is in the range 5 seconds to 59 minutes 59 seconds.\nI      If you do not specify a value for PURGECYLE, it defaults to 30\nI      seconds; PURGECYCLE= 00, 30.\nN\nI      A protected thread is not terminated immediately when it is\nI      released. It is terminated only after two completed purge cycles,\nI      if it has not been reused in the meantime. Therefore, if the purge\nI      cycle is set to 30 seconds, a protected thread is purged 30 - 60\nI      seconds after it is released. The first purge cycle after the\nI      attachment facility starts is always 5 minutes. After that the\nI      purge cycle values are applied. An unprotected thread is terminated\nI      when it is released (at sync point or end of task) if there are no\nI      other transactions waiting for a thread on that DB2ENTRY. Only\nI      threads belonging to a DB2ENTRY can be protected. Pool threads and\nI      command threads cannot be protected.\nN\nD    RESYNCMEMBER(YES | NO)\nI      If you are using group attach, use the\nI      RESYNCMEMBER attribute to select the strategy that CICS adopts if\nI      outstanding units of work are being held for the last DB2 data\nI      sharing group member to which CICS was connected.\nN\nI      YES: Indicates that if outstanding units of work are held, you\nI        require resynchronization with the last DB2 data sharing group\nI        member to which CICS was connected. CICS ignores the group\nI        attach facility, and the CICS-DB2 attachment facility waits\nI        until it can reconnect to that last connected DB2 data sharing\nI        group member, to resolve the indoubt units of work. Units of work\nI        which are shunted indoubt are not included in this process,\nI        because CICS itself is unable to resolve those units of work at\nI        this time. Resynchronization for those UOWs occurs when CICS has\nI        resynchronized with its remote coordinator.\nN\nI      NO: Indicates that you do not require resynchronization. CICS makes\nI        one attempt to reconnect to the last connected DB2 data sharing\nI        group member. If this attempt is successful, the indoubt units of\nI        work (except for UOWs that are shunted indoubt) can be resolved.\nI        If it is unsuccessful, then CICS uses group attach to connect to\nI        any active member of the DB2 data sharing group, and a warning\nI        message (DFHDB2064) is issued stating that there can be\nI        unresolved indoubt units of work with the last member of the\nI        group to which CICS was connected.\nN\nD    REUSELIMIT(1000 | value)\nI      Specifies a value in the range 0 - 10000\nI      representing the maximum number of times a thread can be reused\nI      before it is terminated. The default is 1000. A value of 0 means\nI      that there is no limit on the number of times that a thread can be\nI      reused; this was the situation before CICS TS 4.2. However,\nI      long-running CICS DB2 threads that are constantly being reused\nI      build up resources in DB2 that can cause storage problems leading\nI      to abends and DB2 subsystem outages.\nN\nI      The reuse limit applies to unprotected threads both in the pool and\nI      on a DB2ENTRY, and to protected DB2ENTRY threads. An unprotected\nI      thread is reused if, at the time it is released from a transaction,\nI      there is a new transaction waiting. A protected thread is reused if\nI      a new transaction requires a thread during the time the thread is\nI      protected from being terminated. In either case, when the reuse\nI      limit is reached no further transactions can use the thread. When\nI      the transaction that is currently using the thread releases it,\nI      CICS terminates and re-creates the thread to free up DB2 resources\nI      before determining if there is new work for the thread to do, or\nI      whether the thread is to be protected.\nN\nI      Using the default of 1000 provides sufficient protection against\nI      over-allocating thread storage and EDM pool storage below the 2 GB\nI      bar when you are using a DB2 bind option of RELEASE(DEALLOCATE)\nI      without adversely affecting performance. If, however, DB2\nI      monitoring and statistics show excessive DB2 thread storage,\nI      excessive EDM pool storage usage, or both, this limit can be\nI      lowered. Conversely, if CICS-DB2 statistics show that pool or\nI      entry threads are hitting the reuse limit frequently and there is\nI      sufficient virtual and real storage available to allow more DB2\nI      thread storage, this limit can be raised.\nN\nI      Setting a low value for the reuse limit has a performance impact\nI      in terms of an increase in processor activity and a decrease in\nI      throughput. However, there are situations where you might choose\nI      to set a low value. For example, if you wanted to evaluate changing\nI      DB2 bind options from RELEASE(COMMIT) to RELEASE(DEALLOCATE) for a\nI      plan or package, you might use a low value temporarily to test the\nI      scenario.\nN\nD    SIGNID(name)\nI      Specifies the authorization ID to be used by the\nI      CICS DB2 attachment facility when signing on to DB2 for pool and\nI      DB2ENTRY threads that specify AUTHTYPE(SIGN). The default is blanks\nI      which are replaced by the applid of the CICS system when the\nI      DB2CONN is installed. The ID that you specify can be up to eight\nI      characters in length.\nN\nI      If you specify a user ID on the SIGNID attribute, CICS performs a\nI      surrogate user check against the user ID that is performing the\nI      installation. Similarly, the CICS region user ID is subject to a\nI      surrogate user check during group list installation on a CICS cold\nI      or initial start.\nN\nI      If the ID you specify matches the CICS region user ID, and you\nI      specify AUTHTYPE(SIGN) for any command, pool, or entry threads, the\nI      RACF access control environment element (ACEE) for the CICS region\nI      user ID is passed to DB2.\nN\nD    STANDBYMODE(RECONNECT | NOCONNECT | CONNECT)\nI      Specifies the action to\nI      be taken by the CICS DB2 attachment facility if DB2 is not active\nI      when an attempt is made to connect CICS to DB2.\nN\nI      CONNECT: Specifies that the CICS DB2 attachment facility is to\nI      wait in 'standbymode' for DB2 to become active. If the connection\nI      is made, and DB2 later fails, the CICS DB2 attachment facility\nI      terminates.\nN\nI      NOCONNECT: Specifies that the CICS DB2 attachment facility is to\nI        terminate.\nN\nI      RECONNECT: Specifies that the CICS DB2 attachment facility is to\nI        go into 'standby mode' and wait for DB2. If DB2 later fails\nI        after the connection is made, the CICS DB2 attachment facility\nI        reverts to 'standby mode', and CICS then reconnects to DB2 when\nI        DB2 recovers.\nN\nD    STATSQUEUE(CDB2 | tdqueue)\nI      Specifies the transient data destination\nI      for CICS DB2 attachment facility statistics produced when the CICS\nI      DB2 attachment facility is shut down.\nN\nD    TCBLIMIT(12 | value)\nI      Specifies the maximum number of TCBs that can\nI      be used to process DB2 requests. The default is 12. The minimum\nI      number is 4 and the maximum is 2000. CICS uses L8 and L9 mode open\nI      TCBs to process DB2 requests. The TCBLIMIT attribute of the DB2CONN\nI      definition governs how many of the open TCBs can be used to access\nI      DB2, that is, how many of them can identify to DB2 and create a\nI      connection into DB2.\nN\nI      For more information about TCB limits and open TCB modes, see\nI      Open TCB management in Improving performance.\nN\nN      The TCBLIMIT value controls the total number of threads for the\nI      CICS region.\nN\nI      For this reason, the recommended value for TCBLIMIT is the sum of\nI      all the thread limit values (that is, the sum of all THREADLIMIT\nI      attributes on the DB2 connection and DB2 entry resource\nI      definitions, plus the COMTHREADLIMIT value on the DB2 connection\nI      definition) up to the limit of 2000.\nN\nI      If the limit set automatically by CICS for the number of L8 and L9\nI      mode open TCBs is reached, so no more open TCBs can be created, the\nI      task is suspended with HTYPE(DISPATCH) and HVALUE(OPEN_TCB). CICS\nI      sets this limit using the formula (2 * MXT value) + 32, with the\nI      MXT or MAXTASKS limit for the CICS region. If this limit is not\nI      exceeded but TCBLIMIT is exceeded, then the task is suspended with\nI      HTYPE(CDB2CONN). In this situation, although CICS has an open TCB\nI      available, the maximum allowed number of open TCBs are being used\nI      to access DB2 (as defined in TCBLIMIT).\nN\nI      When determining the number for TCBLIMIT, you must consider the\nI      amount you specified for the MAX USERS parameter on DB2\nI      installation panel DSNTIPE.\nN\nD    THREADERROR(N906D | ABEND | N906)\nI      Specifies the processing that is to\nI      occur following a create thread error.\nN\nI      ABEND: When the first SQL error is detected, CICS takes a\nI        transaction dump for abend code AD2S, AD2T, or AD2U, depending\nI        on the type of error.\nN\nI        For the first error, the transaction does not abend. For a second\nI        or subsequent SQL error, the transaction abends with abend code\nI        AD2S, AD2T, or AD2U. The transaction must be terminated and\nI        reinitialized before it is allowed to issue another SQL request.\nN\nI      N906D: A transaction dump is to be taken and the DSNCSQL RMI\nI        associated with the transaction is not to be disabled. The\nI        transaction receives a -906 SQLCODE if another SQL is issued,\nI        unless the transaction issues SYNCPOINT ROLLBACK. SYNCPOINT\nI        without the ROLLBACK option results in an ASP3 or ASP7 abend.\nI        The transaction dump records an abend of AD2S, AD2T, or AD2U.\nN\nI      N906: The DSNCSQL RMI associated with the transaction is not to be\nI        disabled. The transaction receives a -906 SQLCODE if another SQL\nI        request is issued, unless the transaction issues a SYNCPOINT\nI        ROLLBACK. SYNCPOINT without the ROLLBACK option results in an\nI        ASP3 or ASP7 abend.\nN\nNPool thread attributes\nN----------------------\nNDescribes   the attributes of the DB2CONN resource that relate to the\nNpool thread.\nN\nD    ACCOUNTREC(NONE | UOW | TASK | TXID)\nI      Specifies the minimum amount of\nI      DB2 accounting required for transactions that use pool threads.\nI      The specified minimum might be exceeded, as described in the\nI      following options.\nN\nI      NONE: No accounting records are required for transactions that\nI        use pool threads.\nN\nI        DB2 produces at least one accounting record for each thread when\nI        the thread is ended. Authorization changes additionally cause\nI        accounting records to be produced.\nN\nI      TASK: The CICS DB2 attachment facility causes a minimum of one\nI        accounting record for each CICS task to be produced.\nN\nI        A transaction that contains multiple units of work (UOWs), and\nI        in which the threads are released at sync point, can use a\nI        different thread for each of its UOWs. As a result, an accounting\nI        record might be produced for each UOW.\nN\nI      TXID: The CICS DB2 attachment facility causes an accounting record\nI        to be produced when the transid that uses the thread changes.\nN\nI        Because pool threads are typically used by a number of different\nI        transaction IDs, there is an increased chance that a transaction\nI        containing multiple UOWs, and in which the threads are released\nI        at sync point, will use a different thread for each UOW. In this\nI        case, an accounting record might be produced for each UOW.\nN\nI      UOW: The CICS DB2 attachment facility causes an accounting record\nI        to be produced for each UOW, assuming that the thread is released\nI        at the end of the UOW.\nN\nD    AUTHID(userid)\nI      Specifies the user ID that is used for security\nI      checking when using pool threads.\nN\nI      Do not specify AUTHID if you are using RACF for some or all of the\nI      security checking in your DB2 address space; use AUTHTYPE instead,\nI      with the GROUP, SIGN, or USERID options. You must use AUTHTYPE\nI      because threads that use an AUTHID do not pass the required RACF\nI      access control environment element (ACEE) to DB2. The ID that you\nI      specify can be up to 8 characters in length.\nN\nD    AUTHTYPE(USERID | GROUP | SIGN | TERM | TX | OPID)\nI      Specifies the type of ID\nI      that can be used for threads on this DB2ENTRY.\nN\nI      If you are using RACF for some or all of the security checking in\nI      your DB2 address space, use the GROUP, SIGN, or USERID options. You\nI      must use one of these options because only threads defined with\nI      these options pass the required RACF access control environment\nI      element (ACEE) to DB2. However, if you specify the SIGN option,\nI      the ACEE is passed to DB2 only if the value specified for the\nI      SIGNID attribute on the DB2CONN definition matches the CICS region\nI      user ID.\nN\nI      The ACEE is not required if you are using DB2 internal security\nI      only; so, in this case, you can use any of the options.\nN\nI      USERID: The user ID associated with the CICS transaction is used\nI        as the authorization ID. If the user ID is less than 8 characters\nI        in length, it is padded on the right with blanks.\nN\nI        Important: Do not specify AUTHTYPE(USERID) when you use the DB2\nI        sample sign-on exit DSN@SGN, because it might result in an SQL\nI        -922 failure. Specify COMMAUTHTYPE(GROUP) instead.\nN\nI      OPID: The operator identification that is associated with the\nI        user ID that is associated with the CICS transaction is used as\nI        the authorization ID.\nN\nI        The 3-character operator identification is padded on the right\nI        with blanks to form the 8-character authorization ID.\nN\nI      GROUP: Specifies the user ID and the connected group name as the\nI        authorization ID. The following table shows how these two values\nI        are interpreted by DB2.\nN\nI        To use the GROUP option, you must specify SEC=YES in the system\nI        initialization parameters for the region.\nN\nI        If no RACF group ID is available for this USERID, an 8-character\nI        field of blanks is passed to DB2 as the group ID.\nN\nI      SIGN: Specifies that the SIGNID attribute of the DB2 connection\nI        definition is to be used as the resource authorization ID.\nN\nI      TERM: Specifies the terminal identification as an authorization ID.\nI        The 4-character terminal identification is padded on the right\nI        with blanks to form the 8-character authorization ID.\nN\nI        If the transaction is not associated with a terminal (for\nI        example, if it is initiated with a START command), do not specify\nI        AUTHTYPE(TERM).\nN\nI      TX: Specifies the transaction identification as the authorization\nI        ID. The 4-character transaction identification is padded on\nN\nD    DROLLBACK(YES | NO)\nI      Specifies whether the CICS DB2 attachment\nI      facility initiates a SYNCPOINT ROLLBACK if a transaction that is\nI      involved in a deadlock resolution is selected.\nN\nI      YES: The attachment facility initiates a SYNCPOINT ROLLBACK before\nI        returning control to the application. An SQL return code of -911\nI        is returned to the program.\nN\nI        Do not specify YES if the pool is used by transactions running\nI        enterprise beans as part of an OTS transaction; SYNCPOINT\nI        ROLLBACK is not allowed in an OTS transaction. Consider defining\nI        a DB2ENTRY that specifies DROLLBACK(NO) for use by transactions\nI        which run enterprise beans as part of an OTS transaction.\nN\nI      NO: The attachment facility does not initiate a rollback for a\nI        transaction. An SQL return code of -913 is returned to the\nI        application.\nN\nD    PLAN(plan)\nI      Specifies the name of the plan to be used for all pool\nI      threads.\nN\nD    PLANEXITNAME(DSNCUEXT | exit)\nI      Specifies the name of the dynamic\nI      plan exit to be used for pool threads. If you change PLAN and\nI      PLANEXITNAME while there are active transactions for the pool,\nI      the next time the transaction releases the thread the new values\nI      are applied.\nN\nD    PRIORITY(HIGH | EQUAL | LOW)\nI      Specifies the priority of the pool\nI      thread TCBs relative to the CICS main TCB (QR TCB). The thread TCBs\nI      are CICS open L8 TCBs.\nN\nI      HIGH: Thread TCBs have a higher priority than the CICS QR TCB.\nN\nI      EQUAL: Thread TCBs have equal priority with the CICS QR TCB.\nN\nI      LOW: Thread TCBs have a lower priority than the CICS QR TCB.\nN\nD    THREADLIMIT(3 | value)\nI      Specifies the current maximum number of pool\nI      threads that the CICS DB2 attachment facility allows to be active\nI      before requests are made to wait or are rejected, subject to the\nI      THREADWAIT attribute. The default value of THREADLIMIT (3) is also\nI      the minimum that you can specify. The maximum value must not be\nI      greater than the value specified for TCBLIMIT.\nN\nD    THREADWAIT(YES | NO)\nI      Specifies whether transactions wait for a pool\nI      thread or end abnormally if the number of active pool threads\nI      reaches the thread limit.\nN\nI      The CICS DB2 attachment issues a unique abend code AD3T, message\nI      DFHDB2011, when you code THREADWAIT=NO and the number of pool\nI      threads is exceeded.\nN\nI      YES: If all threads are busy, a transaction must wait until one\nI        becomes available. A transaction can wait as long as CICS allows\nI        it to wait, generally until a thread becomes available.\nN\nI      NO: If all threads are busy, the transaction ends abnormally with\nI        code AD2T or AD3T.\nN\nNCommand   thread attributes\nN-------------------------\nNDescribes   the attributes of the DB2CONN resource that relate to the\nNcommand   thread.\nN\nNThe   DB2 connection definition command thread attribute descriptions\nNare:\nN\nD    COMAUTHID(userid)\nI      Specifies what id the CICS DB2 attachment facility\nI      should use for security checking when using command threads.\nN\nI      Do not use COMAUTHID if you are using RACF for some or all of the\nI      security checking in your DB2 address space; use COMAUTHTYPE\nI      instead, with the USERID or GROUP option. You can also use\nI      COMMAUTHTYPE with the SIGN option when the SIGNID attribute on the\nI      DB2CONN definition matches the CICS region user ID. This is because\nI      threads using a COMAUTHID do not pass the required RACF access\nI      control environment element (ACEE) to DB2. The ACEE is not required\nI      if you are only using DB2 internal security, so in this case, you\nI      can use COMAUTHID.The ID that you specify can be up to eight\nI      characters in length.\nN\nD    COMAUTHTYPE(USERID | GROUP | SIGN | TERM | TX | OPID)\nI      Specifies the type of\nI      id that can be used for security checking when using command\nI      threads.\nN\nI      If you are using RACF for some or all of the security checking in\nI      your DB2 address space, use the GROUP, SIGN or USERID options. This\nI      is because only threads defined with these options pass the\nI      required RACF access control environment element (ACEE) to DB2.\nI      However, if you specify the SIGN option, the ACEE is passed to DB2\nI      only if the value specified for the SIGNID attribute on the DB2CONN\nI      definition matches the CICS region user ID.\nN\nI      USERID: The 1 to 8-character userid associated with the CICS\nI        transaction is used as the authorization ID. The name can be up\nI        to eight characters in length.\nN\nI        Important: Do not specify COMMAUTHTYPE(USERID) when you use the\nI        DB2 sample sign-on exit DSN@SGN, as this may result in an SQL\nI        -922 failure. Specify COMMAUTHTYPE(GROUP) instead.\nN\nI      OPID: The operator identification associated with the userid that\nI        is associated with the CICS transaction sign-on facility is used\nI        as the authorization ID (three characters padded to eight).\nN\nI      GROUP: Specifies the 1 to 8-character USERID and the connected\nI        group name as the authorization ID. The following table shows\nI        how these two values are interpreted by DB2.\nN\nI        To use the CGROUP option the CICS system must have SEC=YES\nI        specified in the CICS system initialization table (SIT).\nN\nI        If no RACF group ID is available for this USERID, an 8-character\nI        field of blanks is passed to DB2 as the group ID.\nN\nI      SIGN: Specifies that the SIGNID attribute of the DB2CONN is used\nI        as the resource authorization ID.\nN\nI      TERM: Specifies the terminal identification (four characters\nI        padded to eight) as an authorization ID. An authorization ID\nI        cannot be obtained in this manner if a terminal is not connected\nI        with the transaction.\nN\nI        If a transaction is started (using a CICS command) and has no\nI        terminal associated with it, the COMAUTHTYPE(TERM) should not\nI        be used.\nN\nI      TX: Specifies the transaction identification (four characters\nI        padded to eight) as the authorization ID.\nN\nD    COMTHREADLIM(1 | value)\nI      The number specifies the current maximum\nI      number of command threads the CICS DB2 attachment facility allows\nI      active before requests overflow to the pool.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG09": {"ttr": 4868, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG09\nTCICS\nT-RDG\nT-Chapter 9. DB2ENTRY resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 9. DB2ENTRY resources\nN=============================\nNA DB2ENTRY defines the attributes of entry threads used by the CICS DB2\\\nNattachment facility.\nN\nNA transaction, or a group of transactions, can be associated with the\nNDB2ENTRY; a group of transactions may be represented by the use of one\nNor more wildcard characters (* and +). Also, further transactions can\nNbe associated with a DB2ENTRY by defining a DB2TRAN.\nN\nNInstalling DB2 entry definitions\nN--------------------------------\nNThis section describes the guidelines for installing and discarding\nNDB2ENTRY definitions and the implications of interruptions in partial\nNactivity.\nN\nNAbout this task\nN---------------\nN-> You can install a DB2ENTRY only if you have previously installed a\nN   DB2CONN.\nN\nN-> You can install a new DB2ENTRY at any time, even when the CICS DB2\nN   adapter is connected to DB2.\nN\nN-> You can reinstall (by replacing an existing DB2ENTRY) only when the\nN   DB2ENTRY is disabled and no transaction is using it. Use the\nN   SET DB2ENTRY DISABLED command to quiesce activity and disable the\nN   entry. New transactions trying to use the DB2ENTRY are routed to the\nN   pool, abended, or returned an SQLCODE, dependent on the setting of\nN   the DISABLEDACT keyword when the DB2ENTRY is disabled.\nN\nN-> You can discard a DB2ENTRY only if it is disabled. Use the\nN   SET DB2ENTRY DISABLED command to quiesce activity and disable the\nN   entry. New transactions trying to use the DB2ENTRY are routed to the\nN   pool, abended, or returned an SQLCODE, dependent on the setting of\nN   the DISABLEDACT keyword when the DB2ENTRY is disabled.\nN\nN   If you discard a DB2ENTRY, you could make the corresponding DB2TRAN\nN   an 'orphan'. If you then run a transaction, a message is sent to the\nN   CDB2 transient data destination, and the request is rerouted to the\nN   pool.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG0901": {"ttr": 5121, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG0901\nTCICS\nT-RDG\nT-Chapter 9. DB2ENTRY resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-065955\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 9. DB2ENTRY resources\nN=============================\nNDB2ENTRY attributes\nN-------------------\nNDescribes the syntax and attributes of the DB2ENTRY resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    DB2ENTRY(name)\nI      One to eight character name to identify a DB2 entry\nI      definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource\nI      that you are defining in this field. The description text can be\nI      up to 58 characters in length. No restrictions apply to the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that for each left parenthesis there is a matching right\nI      parenthesis. If you use the CREATE command, for each single\nI      apostrophe in the text, code two apostrophes.\nN\nNThread selection attributes\nN---------------------------\nNDescribes the attributes of the DB2ENTRY resource that relate to\nNthread selection.\nN\nD    TRANSID(transaction)\nI      Specifies the transaction id associated with\nI      the entry. Only one transaction can be specified here. However,\nI      the use of one or more wildcard characters in the TRANSID (* and +)\nI      allows a group of transactions to be represented. Additional\nI      transactions can be defined for this DB2ENTRY by defining a\nI      DB2TRAN that refers to this DB2ENTRY.\nN\nI      Transid is optional on a DB2ENTRY. All transactions can be\nI      associated with a DB2ENTRY by means of DB2TRAN definition instead.\nI      However, if only one transaction is associated with a DB2ENTRY, it\nI      is easier to specify it on the DB2ENTRY.\nN\nI      Note: Specifying a transaction id here causes an implicit DB2TRAN\nI      object to be created when the DB2ENTRY definition is installed.\nI      The implicit DBTRAN will have a name DFH concatenated with the\nI      transaction id specified. These implicit DB2TRANs will appear on\nI      CICS and CPSM views of DB2TRAN resources. If a DB2ENTRY is altered\nI      to specify a different transid, when the DB2ENTRY is reinstalled\nI      the previous implicit DB2TRAN will be deleted and a new implicit\nI      DB2TRAN created representing the new transid associated with the\nI      DB2ENTRY.\nN\nNThread operation attributes\nN---------------------------\nNDescribes the attributes of the DB2ENTRY resource that relate to thread\nNoperations.\nN\nD    ACCOUNTREC(NONE | UOW | TASK | TXID)\nI      Specifies the minimum amount of\nI      DB2 accounting required for transactions using this DB2 entry. The\nI      specified minimum might be exceeded, as described in the following\nI      options.\nN\nI      NONE: No accounting records are required for transactions using\nI        threads from this DB2ENTRY\nN\nI        However, DB2 produces at least one accounting record for each\nI        thread after the thread is terminated. Authorization changes\nI        additionally cause records to be produced.\nN\nI      TASK: The CICS DB2 attachment facility causes a minimum of one\nI        accounting record for each CICS task to be produced.\nN\nI        A transaction that contains multiple units of work (UOWs), and\nI        in which the threads are released at sync point, can use a\nI        different thread for each of its UOWs. As a result, an accounting\nI        record might be produced for each UOW.\nN\nI      TXID: The CICS DB2 attachment facility causes an accounting record\nI        to be produced when the transid using the thread changes.\nN\nI        This option applies to DB2 entry definitions that are used by\nI        more than one transaction ID. As threads are typically released\nI        at syncpoint, a transaction containing multiple UOWs might use\nI        a different thread for each UOW. As a result, an accounting\nI        record might be produced for each UOW.\nN\nI      UOW: The CICS DB2 attachment facility causes an accounting to be\nI        produced for each UOW, assuming that the thread is released at\nI        the end of the UOW.\nN\nD    AUTHID(userid)\nI      Specifies the user ID that is used for security\nI      checking when using this DB2ENTRY.\nN\nI      Do not specify AUTHID if you are using RACF for some or all of the\nI      security checking in your DB2 address space; use AUTHTYPE instead,\nI      with the GROUP, SIGN, or USERID options. You must use AUTHTYPE\nI      because threads using an AUTHID do not pass the required RACF\nI      access control environment element.\nN\nD    AUTHTYPE(USERID | GROUP | SIGN | TERM  | TX | OPID)\nI      Specifies the type of\nI      ID that can be used for security checking when using this DB2ENTRY.\nN\nI      If you are using RACF for some or all of the security checking in\nI      your DB2 address space, use the GROUP, SIGN, or USERID options. You\nI      must use one of these options because only threads defined with\nI      these options pass the required RACF access control environment\nI      element (ACEE) to DB2. However, if you specify the SIGN option, the\nI      ACEE is passed to DB2 only if the value specified for the SIGNID\nI      attribute on the DB2CONN definition matches the CICS region user ID.\nN\nI      The ACEE is not required if you are using DB2 internal security\nI      only; so in this case, you can use any of the options.\nN\nI      USERID: The USERID associated with the CICS transaction is used as\nI        the authorization ID. If the user ID is less than 8 characters\nI        in length, it is padded on the right with blanks.\nN\nI        When the DB2 sample sign-on exit DSN3@SGN is used with\nI        AUTHTYPE(USERID), the exit sends the user ID to DB2 as the\nI        primary authorization ID and the connected group name to DB2 as\nI        the secondary ID. When the sample sign-on exit is used,\nI        AUTHTYPE(USERID) and AUTHTYPE(GROUP) are the same.\nN\nI      GROUP: Specifies the 1- to 8-character USERID and the connected\nI        group name as the authorization ID. The following table shows how\nI        these two values are interpreted by DB2.\nN\nI        To use the GROUP option, you must specify SEC=YES in the system\nI        initialization parameters for the region.\nN\nI        If no RACF group ID is available for this USERID, an 8-character\nI        field of blanks is passed to DB2 as the group ID.\nN\nI      SIGN: Specifies that the SIGNID attribute of the DB2CONN is used as\nI        the resource authorization ID.\nN\nI      TERM: Specifies the terminal identification (4 characters padded to\nI        8) as an authorization ID. An authorization ID cannot be obtained\nI        in this manner if a terminal is not connected with the\nI        transaction.\nN\nI        If a transaction is started, using a CICS command, and has no\nI        terminal associated with it do not use AUTHTYPE(TERM).\nN\nI      TX: Specifies the transaction identification as the authorization\nI        ID. The 4-character transaction identification is padded on the\nI        right with blanks to form the 8-character authorization ID.\nN\nI      OPID: The operator identification that is associated with the\nI        userid that is associated with the CICS transaction sign-on\nI        facility is used as the authorization ID. The 3-character\nI        operator identification is padded on the right with blanks to\nI        form the 8-character authorization ID.\nN\nD    DROLLBACK(YES | NO)\nI      Specifies whether the CICS DB2 attachment\nI      facility initiates a SYNCPOINT ROLLBACK in the event of a\nI      transaction being selected as victim of a deadlock resolution.\nN\nI      YES: The attachment facility initiates a SYNCPOINT ROLLBACK before\nI        returning control to the application. An SQL return code of -911\nI        is returned to the program.\nN\nI        Do not specify YES if the DB2ENTRY is used by transactions\nI        running enterprise beans as part of an OTS transaction;\nI        SYNCPOINT ROLLBACK is not allowed in an OTS transaction.\nN\nI      NO: The attachment facility does not to initiate rollback for this\nI        transaction.\nN\nI        An SQL return code of -913 is returned to the application.\nN\nD    PLAN(plan)\nI      Specifies the name of the plan to be used for this entry.\nN\nD    PLANEXITNAME(DSNCUEXT | exit)\nI      Specifies the name of the dynamic plan\nI      exit to be used for this DB2 entry definition. If you change PLAN\nI      and PLANEXITNAME while there are active transactions for the DB2\nI      entry definition, the next time the transaction releases the\nI      thread, the new values are applied.\nN\nD    PRIORITY(HIGH | EQUAL | LOW)\nI      Specifies the priority of the thread TCBs\nI      for this DB2ENTRY relative to the CICS main TCB (QR TCB).If CICS is\nI      connected to DB2 Version 6 or later, the thread TCBs are CICS open\nI      L8 TCBs.\nN\nI      HIGH: Thread TCBs have a higher priority than the CICS QR TCB.\nN\nI      EQUAL: Thread TCBs have equal priority with the CICS QR TCB.\nN\nI      LOW: Thread TCBs have a lesser priority than the CICS QR TCB.\nN\nD    PROTECTNUM(0 | value)\nI      Specifies the maximum number of protected\nI      threads allowed for this DB2 entry definition. A thread that is\nI      released by a transaction when no other work is queued can be\nI      protected, meaning that it is does not end immediately. A protected\nI      thread ends after two complete purge cycles if it has not been\nI      reused in the meantime. For example, if the purge cycle is set to\nI      30 seconds, a protected thread ends 30 - 60 seconds after it is\nI      released if it is not reused in the meantime. The first purge cycle\nI      after the CICS DB2 attachment facility has been started is 5\nI      minutes, after which the PURGECYCLE value is applied.\nN\nI      Threads are protected only while they are inactive. If a\nI      transaction reuses a protected thread, the thread becomes active,\nI      and the current number of protected threads is decremented.\nN\nD    THREADLIMIT(0 | value)\nI      Specifies the maximum number of threads for\nI      this DB2 entry definition that the CICS DB2 attachment allows\nI      active before requests are made to wait, are abended, or diverted\nI      to the pool.\nN\nD    THREADWAIT(POOL | YES | NO)\nI      Specifies whether transactions wait for a\nI      DB2ENTRY thread, end abnormally, or overflow to the pool if the\nI      number of active DB2ENTRY threads reaches the THREADLIMIT number.\nN\nI      POOL: If all threads are busy, the transaction is diverted to use\nI        the pool of threads. If the pool is also busy, and you specified\nI        THREADWAIT(NO) on the DB2 connection definition, the transaction\nI        ends abnormally with abend code AD3T.\nN\nI      NO: If all threads are busy, the transaction ends abnormally with\nI        abend AD2P.\nN\nI      YES: If all threads are busy, the transaction waits until a thread\nI        becomes available.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG10": {"ttr": 5123, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG10\nTCICS\nT-RDG\nT-Chapter 10. DB2TRAN resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 10. DB2TRAN resources\nN=============================\nNA DB2TRAN defines a transaction, or a group of transactions, associated\nNwith a DB2ENTRY, that are additional to the transactions specified in\nNthe DB2ENTRY itself.\nN\nNOnly one DB2TRAN definition can be installed for a specific\nNtransaction. An attempt to install a second DB2TRAN definition\nNexplicitly referring to the same transaction ID will fail.\nN\nNThe DB2TRAN definition allows a DB2ENTRY to have an unrestricted\nNnumber of transactions associated with it, including names using\nNwildcard characters. You can define any number of DB2TRANs to be\nNassociated with a single DB2ENTRY.\nN\nNInstalling DB2 entry definitions\nN--------------------------------\nNThis section describes the guidelines for installing and discarding\nNDB2TRAN definitions and the implications of interruptions in partial\nNactivity.\nN\nNAbout this task\nN---------------\nN-> You cannot install more than one DB2TRAN for the same transaction,\nN   if you have given the full transaction ID in the DB2TRAN definition.\nN   If you have used a generic transaction ID with a wildcard character,\nN   you can install more than one DB2TRAN that potentially matches the\nN   transaction, but CICS only uses the closest match (* and +).\nN\nN-> A DB2TRAN that refers to a non-existent DB2ENTRY cannot be\nN   installed. The DB2ENTRY must be installed first.\nN\nN-> Note that when DB2ENTRY and DB2TRAN definitions are defined in the\nN   same group, CICS installs the DB2ENTRY first at install time.\nN\nN-> You can install a new DB2TRAN at any time, even when the CICS DB2\nN   adapter is connected to DB2.\nN\nN-> A DB2TRAN can be re-installed at any time, and can be discarded at\nN   any time.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1001": {"ttr": 5125, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1001\nTCICS\nT-RDG\nT-Chapter 10. DB2TRAN resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-115055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 10. DB2TRAN resources\nN=============================\nNDB2TRAN attributes\nN------------------\nNDescribes the syntax and attributes of the DB2TRAN resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    DB2TRAN(name)\nI      One to eight character name to identify a DB2\nI      transaction definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource\nI      that you are defining in this field. The description text can be\nI      up to 58 characters in length. No restrictions apply to the\nI      characters that you can use. However, if you use parentheses,\nI      ensure that for each left parenthesis there is a matching right\nI      parenthesis. If you use the CREATE command, for each single\nI      apostrophe in the text, code two apostrophes.\nN\nD    ENTRY(db2entry)\nI      Specifies the name of the DB2 entry definition to\nI      which this DB2 transaction definition refers. It is the DB2 entry\nI      definition with which this additional transaction should be\nI      associated.\nN\nD    TRANSID(transaction)\nI      Specifies the transaction id to be associated\nI      with the entry. If the TRANSID is not specified it defaults to the\nI      first four characters of the DB2 transaction definition name. The\nI      transaction id can include wildcard characters (* and +).\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG11": {"ttr": 5127, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG11\nTCICS\nT-RDG\nT-Chapter 11. DOCTEMPLATE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 11. DOCTEMPLATE resources\nN=================================\nNA DOCTEMPLATE resource defines the attributes of a document template.\nN\nNA document template is a unit of information that is used to construct\nNa document.\nN\nNA document template can contain fixed text, and symbols that represent\nNtext whose value is supplied by an application program. Document\nNtemplates can be created by a CICS application, or retrieved from an\nNexternal source. For more information, see CICS documents and\nNdocument templates.\nN\nNThe template can reside in one of the following places:\nN\nN-> An MVS partitioned data set (specified by the DDNAME and MEMBERNAME\nN   attributes)\nN\nN-> A temporary storage queue (specified by the TSQUEUE attribute)\nN\nN-> A transient data queue (specified by the TDQUEUE attribute)\nN\nN-> A CICS program (specified by the PROGRAM attribute)\nN\nN-> A CICS file (specified by the FILE attribute)\nN\nN-> A z/OS UNIX System Services file (specified by the HFSFILE\nN   attribute)\nN\nNThe template can also be returned by an exit program (specified by\nNthe EXITPGM attribute).\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1101": {"ttr": 5129, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1101\nTCICS\nT-RDG\nT-Chapter 11. DOCTEMPLATE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-070255\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 11. DOCTEMPLATE resources\nN=================================\nNDOCTEMPLATE attributes\nN----------------------\nNDescribes the syntax and attributes of the DOCTEMPLATE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    DOCTEMPLATE(name)\nI      Specifies the name of this document template\nI      definition. The name can be up to eight characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    APPENDCRLF(YES | NO)\nI      Specifies whether CICS is to delete trailing\nI      blanks from and append carriage-return line-feed to each logical\nI      record of the template.\nN\nD    FILE(file)\nI      when the template resides in a CICS file, specifies the\nI      name of the file. The name can be eight characters in length.\nN\nI      If you specify this attribute, you cannot specify DDNAME, EXITPGM,\nI      HFSFILE, MEMBERNAME, PROGRAM, TDQUEUE or TSQUEUE.\nN\nD    HFSFILE(hfsfile)\nI      When the template resides in a z/OS UNIX System\nI      Services file, this specifies the fully qualified (absolute) or\nI      relative name of the z/OS UNIX file. The name can be specified as\nI      an absolute name including all directories and beginning with a\nI      slash, for example, /u/facts/images/bluefish.jpg. Alternatively,\nI      it can be specified as a name relative to the HOME directory of the\nI      CICS region userid, for example, facts/images/bluefish.jpg. Up to\nI      255 characters can be used.\nN\nI      If you specify this attribute, you cannot specify DDNAME, EXITPGM,\nI      MEMBERNAME, PROGRAM, TDQUEUE or TSQUEUE.\nN\nI      Note: The CICS region must have permissions to access z/OS UNIX,\nI      and it must have permission to access the z/OS UNIX directory\nI      containing the file, and the file itself. Java Applications in\nI      CICS explains how to grant these permissions.\nN\nD    EXITPGM(program)\nI      specifies the name of an exit program that\nI      generates a template. The name can be up to eight characters in\nI      length.\nN\nI      If you specify this attribute, you cannot specify DDNAME, FILE,\nI      HFSFILE, MEMBERNAME, PROGRAM, TDQUEUE or TSQUEUE.\nN\nD    MEMBERNAME(member)\nI      when the template resides in an MVS partitioned\nI      data set (PDS), specifies the name of the member containing the\nI      template. The name can be up to eight characters in length.\nN\nI      If you specify this attribute, you cannot specify EXITPGM, FILE,\nI      HFSFILE, PROGRAM, TDQUEUE or TSQUEUE.\nN\nD      DDNAME(DFHHTML | ddname)\nI        when the template resides in an MVS\nI        partitioned data set (PDS), specifies the DDname of the PDS.\nI        the name can be up to eight characters in length.\nN\nI        If you specify a value for the MEMBERNAME attribute, but do not\nI        specify a value for DDNAME, the default value of DFHHTML is taken.\nN\nI        If you specify this attribute, you cannot specify EXITPGM, FILE,\nI        HFSFILE, PROGRAM, TDQUEUE or TSQUEUE.\nN\nD    PROGRAM(program)\nI      when the template resides in a CICS program,\nI      specifies the name of the program. The name can be up to eight\nI      characters in length.\nN\nI      If you specify this attribute, you cannot specify DDNAME, EXITPGM,\nI      FILE, HFSFILE, MEMBERNAME, TDQUEUE or TSQUEUE.\nN\nD    TDQUEUE(tdqueue)\nI      when the template resides in a transient data\nI      queue, specifies the name of the queue. The name can be up to four\nI      characters in length.\nN\nI      If you specify this attribute, you cannot specify DDNAME, EXITPGM,\nI      FILE, HFSFILE, MEMBERNAME, PROGRAM, or TSQUEUE.\nN\nD    TEMPLATENAME(template)\nI      specifies the name by which the template is\nI      known to application programs that use it. The name can be up to\nI      48 characters in length.\nN\nI      If you do not specify a value for this attribute, the value of the\nI      DOCTEMPLATE attribute is used, extended on the right with blanks.\nN\nD    TSQUEUE(tsqueue)\nM      when the template resides in a temporary storage\nI      queue, specifies the name of the queue. The name can be up to 16\nI      characters in length.\nN\nI      If you specify this attribute, you cannot specify DDNAME, EXITPGM,\nI      FILE, HFSFILE, MEMBERNAME, PROGRAM, or TDQUEUE.\nN\nD    TYPE(EBCDIC | BINARY)\nI      specifies the format of the contents of the\nI      template.\nN\nI      BINARY: When the template is loaded from the template library, no\nI        parsing of the template's contents is done.\nN\nI      EBCDIC: When the template is loaded from the template library,\nI        the contents are parsed as EBCDIC text.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG12": {"ttr": 5131, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG12\nTCICS\nT-RDG\nT-Chapter 12. ENQMODEL resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 12. ENQMODEL resources\nN==============================\nNAn ENQMODEL defines a named resource for which the EXEC CICS ENQ and\nNEXEC CICS DEQ commands have a sysplex-wide scope.\nN\nNCICS uses ENQMODEL resources with z/OS global resource serialization\nNto provide sysplex-wide protection of resources that are used by\nNmultiple applications. Local enqueues within a single CICS region are\nNmanaged in the CICS address space. Sysplex-wide enqueues that affect\nNmore than one CICS region are managed by z/OS global resource\nNserialization. For more information on global resource serialization,\nNsee SA23-1389-30 z/OS MVS Planning: Global Resource Serialization.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1201": {"ttr": 5377, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1201\nTCICS\nT-RDG\nT-Chapter 12. ENQMODEL resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-072055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 12. ENQMODEL resources\nN==============================\nNENQMODEL attributes\nN-------------------\nNDescribes the syntax and attributes of the ENQMODEL resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    ENQMODEL(name)\nI      Specifies the 1 to 255-character resource name.\nN\nI      You can also use a * (asterisk) as the last character, to denote a\nI      generic name.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ENQNAME(resource)\nI      Specifies the name of this ENQMODEL definition. The\nI      name can be up to eight characters in length.\nN\nI      This name is used to identify the ENQMODEL definition on the CSD\nI      file. It is not used within the active CICS system.\nN\nD    ENQSCOPE(scope)\nI      Specifies the optional 4-character enqueue model\nI      scope name. If omitted or specified as blanks, matching enqueue\nI      models will have a local scope.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies whether the enqueue model is\nI      to be installed in ENABLED or DISABLED status. ENABLED is the\nI      default.\nN\nI      ENABLED: Matching enqueue requests are processed in the normal way.\nN\nI      DISABLED: Matching enqueue requests are rejected, and the issuing\nI        task is abended. Matching INSTALL CREATE and DISCARD requests are\nI        processed.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG13": {"ttr": 5379, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG13\nTCICS\nT-RDG\nT-Chapter 13. FILE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 13. FILE resources\nN==========================\nNA FILE resource defines the physical and operational characteristics\nNof a file.\nN\nNThe FILE definition includes attributes that provide information about\nNrecord characteristics, the types of operations allowed on the file,\nNrecovery attributes, and the operations that are to be journaled. CICS\nNfiles usually correspond to physical data sets that must have been\nNdefined to VSAM before they are used. Using CICS files, your\nNapplications can:\nN\nN-> Access records in the data set directly\nN\nN-> Access records in a data table that has been loaded from the data\nN   set\nN\nN-> Access records in a coupling facility data table where there is no\nN   data set involved (because LOAD(NO) is specified on the CFDT file\nN   definition).\nN\nNThe following resources associated with CICS files can be managed using\nNRDO:\nN\nN-> VSAM files (this includes files that refer to CICS-maintained,\nN   user-maintained, and coupling facility data tables as well as files\nN   that refer to VSAM data sets)\nN\nN-> Remote VSAM files\nN\nN-> Remote BDAM files\nN\nN-> VSAM local shared resource (LSR) pools, which are defined by LSRPOOL\nN   resource definitions\nN\nNFor the file to be used by an active CICS system, its definition must\nNhave been installed on to the system. CICS file control uses the\nNinstalled definition to find the file when it needs to access it, to\nNkeep count of the number of tasks using the file, to capture processing\nNstatistics, and maintain other file control information.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1301": {"ttr": 5381, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1301\nTCICS\nT-RDG\nT-Chapter 13. FILE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-072055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 13. FILE resources\nN==========================\nNFILE attributes\nN---------------\nNDescribes the syntax and attributes of the FILE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    FILE(name)\nI      Specifies the name of the file. The name can be up to\nI      8 characters in length.\nN\nI      The name must not start with a numeric character.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ADD(NO | YES)\nI      Specifies whether records can be added to the file.\nN\nD    BACKUPTYPE(STATIC | DYNAMIC)\nI      CICS VSAM files can be defined as\nI      eligible for backup while open for update. This attribute is not\nI      used for files defined with RLSACCESS(YES), or if the recovery\nI      options are defined in the ICF catalog. To force CICS to use this\nI      attribute instead of the recovery options in the catalog, set the\nI      NONRLSRECOV system initialization parameter to FILEDEF. For files\nI      that are accessed in RLS mode, you must specify the backup type on\nI      the data set definition in the ICF catalog.\nN\nI      This attribute is ignored for coupling facility data tables and,\nI      if there are any recovery attributes defined in the ICF catalog for\nI      a source data set associated with the table, these also are\nI      ignored. A CFDT is not eligible for backup-while-open (BWO).\nN\nI      Possible values are:\nN\nI      DYNAMIC: Specify DYNAMIC together with the RECOVERY attribute of\nI        ALL to make the file eligible for backup while it is open for\nI        update.\nN\nI      STATIC: The file is not eligible for backup while open for update.\nN\nD    BROWSE(NO | YES)\nI      Specifies whether records can be retrieved\nI      sequentially from the file.\nN\nD    CFDTPOOL(cfdtpool)\nI      Specifies the name of the coupling facility data\nI      table pool containing the table defined by this file definition.\nI      This attribute is required if you specify TABLE(CF).\nN\nI      Coupling facility data tables can be separated (for purposes of\nI      accounting, security, administration, and so on) into groups\nI      (pools) of CFDTs. The names of all coupling facility data table\nI      pools must be unique within the sysplex, but can be the same as the\nI      names of other types of pools, such as TS data-sharing pools.\nN\nI      Opening a file that references a coupling facility data table\nI      requires that a coupling facility data table server for the named\nI      pool is running in the MVS in which the open request is issued. If\nI      the required server has not been started, the file open request\nI      fails.\nN\nI      Note: The CFDTPOOL attribute is meaningful only for CFDTs. You can\nI      specify a pool name for a file that is not defined as TABLE(CF),\nI      but CICS ignores it. If you then alter the file definition to\nI      reference a coupling facility data table, the CFDTPOOL name comes\nI      into effect.\nN\nD    DATABUFFERS(2 | value)\nI      Specifies the number of buffers to be used\nI      for data. Use a value in the range 2 (the default) through 32767.\nI      The minimum value you can specify is one more than the number of\nI      strings defined in the STRINGS attribute.\nN\nD    DELETE(NO | YES)\nI      Specifies whether records can be deleted from the\nI      file.\nN\nD    DISPOSITION(SHARE | OLD)\nI      Specifies the disposition of this file.\nN\nI      OLD: Equivalent to the DISP=OLD parameter in JCL.\nN\nI      SHARE: Equivalent to the DISP=SHR parameter in JCL.\nN\nD    DSNAME(dsname)\nI      Specifies the data set name (as known to the\nI      operating system) to be used for this file. DSNAME can be 1 through\nI      44 characters, conforming to the rules for MVS data set names (see\nI      the DSNAME parameter in the z/OS MVS JCL Reference).\nN\nI      At file open time, if no JCL statement exists for this file, the\nI      open is preceded by a dynamic allocation of the file using this\nI      DSNAME. If the file definition refers to a data table (CICS, USER,\nI      or CF) the DSNAME must be that of a VSAM base KSDS. It cannot be a\nI      path or alternate index data set.\nN\nI      The DSNAME specified on a DD statement for this file in the CICS\nI      start-up JCL takes precedence over the DSNAME specified in this\nI      file definition.\nN\nI      Coupling facility data tables\nI        If the file definition specifies LOAD(YES) and it is not already\nI        opened, DSNAME specifies the name of the source data set from\nI        which the table is to be loaded. Alternatively, you can specify\nI        the source data set on a DD statement in the CICS startup JCL.\nI        The specified data set must be a VSAM base KSDS.\nN\nI        If there is a path or alternate index associated with the source\nI        data set, then any updates made via the file are not reflected\nI        in either the source data set or its associated alternate\nI        indexes. A coupling facility data table is entirely independent\nI        of its source data set after loading has completed.\nN\nI        If you want table loading to be initiated by the opening of\nI        another file specified by a different file definition, omit this\nI        attribute. In this case, also ensure that the file name is not\nI        specified on a DD statement in the CICS JCL. Attempts to open the\nI        file fail until CFDT loading has been initiated. For more\nI        information about loading a coupling facility data table from a\nI        data set, see Coupling facility data tables.\nN\nI        If LOAD(NO) is specified, this attribute is not required and is\nI        ignored.\nN\nD    DSNSHARING(ALLREQS | MODIFYREQS)\nI      Specifies whether VSAM data set\nI      name sharing is used for the VSAM file. The possible values are:\nN\nI      ALLREQS: Data set name sharing is set in the ACB when the file is\nI        opened and is therefore used for all file requests.\nN\nI      MODIFYREQS: Data set name sharing is set in the ACB when the file\nI        is opened only if an operation of DELETE, ADD, or UPDATE is set\nI        for the file.\nN\nD    FWDRECOVLOG(NO | journal)\nI      Specifies the journal that corresponds to\nI      the MVS system logger log stream that is to be used for forward\nI      recovery.\nN\nI      This attribute is ignored for coupling facility data tables and,\nI      if there are any recovery attributes defined in the ICF catalog for\nI      a source data set associated with the table, these also are\nI      ignored. A CFDT is not forward recoverable. NO Forward recovery\nI      logging is not required for this file. journal The number that\nI      identifies the journal that CICS is to use for the forward recovery\nI      log. CICS journal names are of the form DFHJnn where nn is in the\nI      range 01 through 99. The after images for forward recovery are\nI      written to the MVS log stream that corresponds to journal name\nI      DFHJnn.\nN\nI      Note: In CICS Transaction Server for z/OS, DFHJ01 is not the\nI      system log.\nN\nI      This attribute is used by CICS only if the following conditions are\nI      satisfied:\nN\nI      -> RECOVERY(ALL) is specified\nI      -> RLSACCESS(NO) is specified\nI      -> No recovery attributes are defined in the ICF catalog\nN\nI      If you define the recovery attributes for a file in the ICF catalog\nI      entry for the corresponding data set, CICS always uses the ICF\nI      catalog recovery attributes and ignores those in the FILE resource.\nI      To force CICS to use the FILE resource attributes instead of the\nI      recovery options in the catalog, set the NONRLSRECOV system\nI      initialization parameter to FILEDEF. You can alter the recovery\nI      attributes defined in the ICF catalog by using the IDCAMS ALTER\nI      command. This is not prevented while there are ACBs open for a\nI      data set. However, if you change the recovery attributes, be aware\nI      of the possible effect on data integrity.\nN\nD    INDEXBUFFERS(1 | number)\nI      Specifies the number of buffers to be used\nI      for the index. Use a value in the range 1 through 32767. The\nI      minimum value you can specify is the number of strings defined in\nI      the STRINGS attribute.\nN\nD    JOURNAL(NO | journal + Journaling attributes)\nI      Specifies whether you want automatic\nI      journaling for this file. The journaled data is in the format of\nI      the VSAM record and is used for user controlled journaling.\nN\nI      The data to be journaled is identified by the JNLADD, JNLREAD,\nI      JNLSYNCREAD, JNLSYNCWRITE, and JNLUPDATE attributes.\nN\nI      For a CICS-maintained data table, journaling is performed only for\nI      requests that result in VSAM I/O requests.\nN\nI      For a user-maintained data table or a coupling facility data table\nI      journaling is not performed for any file control operations.\nI      However, although automatic journaling for these tables is not\nI      supported, if you specify a journal number, CICS tries to open the\nI      log stream for the specified journal when opening the file.\nN\nI      Note: Automatic journaling is independent of logging to the system\nI      and forward recovery logs, as specified by the RECOVERY and\nI      FWDRECOVLOG attributes.\nN\nI      Possible values are:\nN\nI        NO: No automatic journaling is to take place for this file.\nN\nI        number: The number that identifies the journal that CICS is to\nI          use for the autojournal. CICS journal names are of the form\nI          DFHJnn, where nn is in the range 01 through 99.\nN\nI          Note: In CICS Transaction Server for z/OS, DFHJ01 is not the\nI          system log.\nN\nD    KEYLENGTH(value)\nI      Specifies the length in bytes of the logical key of\nI      records in remote files, and in coupling facility data tables that\nI      are specified with LOAD(NO). If KEYLENGTH is not defined here, the\nI      KEYLENGTH option must be specified on file control commands in the\nI      application programs that refer to this file. If KEYLENGTH is not\nI      defined here and is not specified in the application program, and\nI      the key is longer than 4 characters, the default value is 4.\nN\nI      Remote files\nI        The range for key length is 1 through 255.\nN\nI      Coupling facility data tables\nI        The range for key length is 1 through 16. Key length is required\nI        only if LOAD(NO) is specified.\nN\nI        You can, optionally, specify a key length for coupling facility\nI        data tables specified with LOAD(YES), in which case you should\nI        be aware of the following:\nN\nI        -> The key length is obtained from the ICF catalog entry for the\nI           data set from which the table is loaded. If you specify a key\nI           length, the key length must match that specified for the\nI           source data set, otherwise attempts to open the file fail\nI           with an error message.\nN\nI        -> If, when opening the file, CICS finds that the CFDT has\nI           already been created, and the key length is different from\nI           that used when loading the data set, the open fails.\nN\nI        If you specify a key length for a file that is not a remote file,\nI        or does not refer to a CFDT, it has no effect unless the file is\nI        redefined, either as a remote file or to reference a CFDT. Note,\nI        however, that if you specify a key length, the value returned by\nI        an INQUIRE FILE command is as follows:\nN\nI        -> If the file is open, CICS returns the value obtained from\nI           VSAM, which can be different from that specified on the file\nI           definition.\nN\nI        -> If the file is closed, CICS returns the value specified on the\nI           file definition.\nN\nI        The value for this attribute must be the same throughout the\nI        sysplex in all file definitions that reference the same coupling\nI        facility data table.\nN\nD    LOAD(NO | YES)\nI      Specifies whether the coupling facility data table is\nI      to be loaded from a source data set when first opened.\nN\nI      NO: Means that the coupling facility data table does not require\nI        loading from a source data set; it is fully usable by application\nI        programs as soon as it is open. The table is loaded by the\nI        application programs that use it, which is the default method\nI        for a coupling facility data table.\nN\nI      YES: Means that the coupling facility data table has to be loaded\nI        from a source data set before it is fully usable; the application\nI        programs that use this coupling facility data table rely on it\nI        containing the records from a source data set. Loading does not\nI        have to be completed before data can be accessed.\nN\nI      This attribute is meaningful only for files defined with the\nI      TABLE(CF) attribute. You can specify the LOAD attribute for a file\nI      that is not defined as TABLE(CF), but CICS ignores it.\nI      (CICS-maintained and user-maintained tables are loaded\nI      automatically always from a source data set.) If you then alter\nI      the file definition to reference a coupling facility data table,\nI      the LOAD attribute comes into effect.\nN\nI      Ensure that the value for this attribute is the same throughout the\nI      sysplex in all file definitions that reference the same coupling\nI      facility data table.\nN\nI      For more information about using this attribute, see Coupling\nI      facility data tables.\nN\nI    LSRPOOLID({1|2|3|4|5|6|7|8|NONE}):\nI      This attribute is obsolete, but is\nI      supported to provide compatibility with earlier releases of CICS.\nN\nI      The value specified for LSRPOOLID in existing definitions is\nI      transferred to the new option LSRPOOLNUM.\nN\nD    LSRPOOLNUM(1 | NONE | number)\nI      Specifies the identity of the local\nI      shared resource pool. The default value for LSRPOOLNUM is 1, unless\nI      a value has been specified for the NSRGROUP attribute, in which\nI      case the default value for LSRPOOLNUM is NONE.\nN\nI      NONE: Specifies that the data set associated with this file uses\nI        VSAM nonshared resources (NSR).\nN\nI        You cannot specify NONE for a CICS shared data table (CICS or\nI        user-maintained), because these types of data tables must use\nI        an LSR pool. However, this restriction does not apply to a\nI        coupling facility data table, for which you can specify NONE.\nN\nI        VSAM nonshared resources (NSR) are not supported for transactions\nI        that use transaction isolation. Specify ISOLATE(NO) when you\nI        define transactions that access VSAM files that use NSR. You can\nI        also function ship the file request to a remote region. The\nI        DFHMIRS program that carries out the request is defined with an\nI        EXECKEY of CICS. A CICS-key program has read and write access to\nI        CICS-key and user-key storage of its own task and all other\nI        tasks, whether or not transaction isolation is active.\nN\nI      number: Identifies the number of the VSAM shared resource pool that\nI        is used by the VSAM data set associated with this file. The value\nI        must be in the range 1 through 255. The data set is defined as\nI        using VSAM local shared resources (LSR). Define the buffers,\nI        strings, and other resources explicitly in an LSRPOOL resource\nI        definition that corresponds to the assigned LRPOOLNUM value.\nN\nI      By default, if the file definition specifies RLSACCESS(YES),\nI      the LSRPOOLNUM value is ignored when CICS opens the file.\nI      However, if you change a file definition that specifies an LSR\nI      pool from RLSACCESS(NO) to RLSACCESS(YES), you are advised to\nI      keep the LSRPOOLNUM value. LSRPOOLNUM ensures that, if the file\nI      is switched at any time from RLS to LSR mode, the file correctly\nI      references an LSR pool.\nN\nD    MAXNUMRECS(NOLIMIT | number)\nI      Specifies the maximum number of records\nI     (entries) to be accommodated in the data table. You can use this\nI     attribute to prevent a runaway transaction from using:\nN\nI      -> All the storage in the server's pool if the table is a coupling\nI         facility data table\nN\nI      -> All the storage in the MVS data space if the table is a CICS-\nI         or user-maintained table.\nN\nI      This attribute is meaningful only for files defined with CICS,\nI      USER, or CF for the TABLE attribute. You can specify MAXNUMRECS\nI      for a file that is defined with TABLE(NO), but it has no effect.\nI      If you then alter the file definition to reference a data table,\nI      the MAXNUMRECS value comes into effect.\nN\nI      NOLIMIT: There is no user-specified limit placed on the number of\nI      records that can be stored in the table. CICS imposes a limit of\nI      2,147,483,647, the maximum fullword value.\nN\nI      number: Specifies the maximum number of records allowed in the\nI      table, in the range 1 through 99999999. If you are setting a limit\nI      for a recoverable coupling facility data table, specify a value\nI      that is about 5 to 10% greater than the maximum number of records\nI      the table is expected to contain. This is to allow for additional\nI      records that can be created internally for processing recoverable\nI      requests. The margin you allow for this internal processing depends\nI      on the level of use of the coupling facility data table, and the\nI      nature of that use. An effect of this internal processing is that\nI      the NOSPACE condition with a RESP2 of 102 can be raised on a WRITE\nI      or REWRITE request to a recoverable coupling facility data table\nI      that apparently has fewer records than the MAXNUMRECS limit that\nI      has been specified for it.\nN\nD    NSRGROUP(group)\nI      Specifies a symbolic name (up to 8 characters) to\nI      group file definitions that refer to the same VSAM base data set.\nI      The value is purely symbolic and need not refer to any particular\nI      file definition. It is merely necessary that all file definitions\nI      that must be grouped have the same name. You do not have to specify\nI      this attribute to ensure correct processing, but if you do not\nI      provide it, performance of your system might be degraded.\nN\nI      The NSRGROUP attribute takes effect only for files referencing data\nI      sets that use VSAM nonshared resources. The NSRGROUP attribute must\nI      not be coded for a data table. It is associated with the VSAM\nI      concept of data set name sharing which causes VSAM to create a\nI      single control block structure for the strings and buffers required\nI      by all the files that relate to the same base data set.\nN\nI      When the first member of such a group of files is opened, the total\nI      number of strings to be allocated for all file entries in the group\nI      must be specified to VSAM (with the BSTRNO value in the Access\nI      Control Block). The VSAM control block structure is built this\nI      time regardless of whether the first file to be opened is\nI      associated with a path or base data set. The value of BSTRNO is\nI      calculated at this time by adding the STRINGS values in all the\nI      file definitions with the same NSRGROUP attribute. After the first\nI      file in the group is opened, any new files added to the group do\nI      not affect the VSAM control block structure already built. This\nI      would change only if all the files open against the base cluster\nI      were closed and then reopened.\nN\nI      Data set name sharing is forced by CICS as the default for all\nI      VSAM files. Data set name sharing is not in effect if a file is\nI      opened for read-only processing with DSNSHARING=MODIFYREQS. A file\nI      with DSNSHARING=MODIFYREQS still, however, contributes to the\nI      BSTRNO calculation.\nN\nI      If a file is using VSAM nonshared resources, and you do not\nI      provide an NSRGROUP attribute, the VSAM control block structure\nI      might be built with insufficient strings for later processing.\nI      When this happens, VSAM invokes the dynamic string addition\nI      feature to provide the extra control blocks for the strings as\nI      they are required. This mechanism is, however, inefficient and\nI      the extra storage is not released until the end of the CICS run.\nN\nI      For files specifying that VSAM local shared resources are to be\nI      used (LSRPOOLNUM=n, where n is in the range 1 - 255), NSRGROUP\nI      has no effect.\nN\nD    OPENTIME(FIRSTREF | STARTUP)\nI      Specifies when the file is opened.\nI      Possible values are:\nN\nI      FIRSTREF: The file remains closed until a request is made to open\nI        it by using one of the following methods:\nN\nI      -> A master terminal command\nI      -> An EXEC CICS SET FILE OPEN command in an application program\nI      -> An implicit open\nN\nI      STARTUP: The file is opened immediately after CICS initialization\nI        by an automatically initiated CICS transaction (CSFU), unless\nI        the status of the file is UNENABLED when the file remains closed.\nN\nD    READ(YES|NO)\nI      Specifies whether records on this file can be read.\nN\nD    READINTEG(UNCOMMITTED | CONSISTENT | REPEATABLE)\nI      Specifies the level\nI      of read integrity required for files defined with RLSACCESS(YES).\nI      Read integrity does not apply to non-RLS access mode files, CICS\nI      shared data tables, or coupling facility data tables.\nN\nI      You can use READINTEG to set a default level of read integrity for\nI      a file. The default level of read integrity is used by programs\nI      that do not specify one of the API read integrity options\nI      UNCOMMITTED, CONSISTENT, or REPEATABLE on the READ, READNEXT, or\nI      READPREV commands.\nN\nI      However, if an application program uses one of these explicitly to\nI      specify read integrity, the API option overrides any value\nI      specified on this READINTEG attribute.\nN\nI      Note: You can specify read integrity options only on CICS file\nI      control API commands or in CICS file resource definitions. You\nI      cannot use the equivalent parameter on the DD statement for files\nI      opened by CICS.\nN\nI      You can specify CONSISTENT or REPEATABLE in a file resource\nI      definition, to make read integrity available to programs written\nI      before these options were available on the API, and without having\nI      to modify those programs. However, if you do this, be aware that\nI      enforcing consistent or repeatable reads can introduce unexpected\nI      deadlocks. Programs might also encounter the LOCKED condition.\nN\nI      CONSISTENT: The record is read with consistent read integrity. If\nI        the record is being modified by another transaction, the READ\nI        request waits until the update is complete, the timing of which\nI        depends on whether the data set is recoverable or unrecoverable:\nN\nI        -> For a recoverable data set, the READ request completes when\nI           the updating transaction completes its next sync point or\nI           rollback.\nN\nI        -> For an unrecoverable data set, the READ completes as soon as\nI           the VSAM request that performing the update completes.\nN\nI        CONSISTENT is valid only if you also specify RLSACCESS(YES) the\nI          resource definition is rejected with an error if you specify\nI          CONSISTENT for a non-RLS file.\nN\nI      REPEATABLE: The record is read with repeatable read integrity. If\nI        the record is being modified by another transaction, the READ\nI        request waits until the update is complete, the timing of which\nI        depends on whether the data set is recoverable or unrecoverable:\nN\nI        -> For a recoverable data set, the READ request completes when\nI           the updating transaction completes its next sync point or\nI           rollback.\nN\nI        -> For an unrecoverable data set, the READ completes as soon as\nI           the VSAM request that performing the update completes.\nN\nI        After the read completes, a shared lock remains held until sync\nI          point. This guarantees that any record read within a\nI          unit-of-work cannot be modified while the task makes further\nI          read requests. Error responses such as NOTFND might not be\nI          repeatable.\nN\nI        REPEATABLE is valid only if you also specify RLSACCESS(YES) the\nI        resource definition is rejected with an error if you specify\nI        REPEATABLE for a non-RLS file.\nN\nI      UNCOMMITTED: The record is read without read integrity. CICS\nI        obtains the current value of the record as known to VSAM. No\nI        attempt is made to serialize this read request with any\nI        concurrent update activity for the same record. The record\nI        returned might be a version updated by another transaction, but\nI        not yet committed, and this record can change if the update is\nI        subsequently backed out.\nN\nI        Note:\nN\nI        1. UNCOMMITTED is the same level of integrity that is provided\nI           by those releases of CICS that do not support the READINTEG\nI           attribute.\nN\nI        2. Specify UNCOMMITTED for any kind of data table. Any value\nI           other than UNCOMMITTED is allowed if RLSACCESS(YES) but is\nI           ignored if TABLE(CF), TABLE(CICS), or TABLE(USER) is also\nI           specified for the file.\nN\nD    RECORDFORMAT(V | F)\nI      Specifies the format of the records on the file.\nN\nI      F: The records are fixed length. For VSAM files, specify this only\nI        if the VSAM access method services definition specifies fixed\nI        size records (that is, the average size is equal to the maximum\nI        size), and all the records in the file are of that size.\nN\nI        F is invalid for user-maintained data tables and coupling\nI        facility data tables\nN\nI        -> The records are variable length. All user-maintained data\nI           tables and coupling facility data tables must be specified\nI           as variable length. Otherwise, CICS returns an error message\nI           stating that RECORDFORMAT(F) conflicts with TABLE(CF) or\nI           TABLE(USER) options and is ignored.\nN\nD    RECORDSIZE(number)\nI      Specifies the maximum length in bytes of records\nI      in a remote file or a coupling facility data table. The size\nI      specified can be in the range 1 through 32767.\nN\nI      For coupling facility data tables only\nI      --------------------------------------\nI      This value is required if the file definition for the table\nI      specifies LOAD(NO).\nN\nI      You can also specify this attribute if LOAD(YES) is specified\nI      (for example, to make it easier for switching the file definition\nI      between LOAD(NO) and LOAD(YES)). However, if you specify\nI      LOAD(YES), the record size value must match that for the source\nI      data set, otherwise CICS fails to open the table. There are three\nI      conditions in which CICS can detect an error because of an\nI      incorrect record size with LOAD(YES):\nN\nI      1. Before opening the table, CICS verifies that the VSAM-defined\nI         record size for the data set from which the coupling facility\nI         data table is to be loaded is the same as the size, if any, in\nI         the file definition. If the record size is different, CICS\nI         returns error message DFHFC7081.\nN\nI      2. The record size (if specified) on the file definition is the\nI         same as that defined to VSAM for the data set, but on opening\nI         the table, CICS finds the table is already loaded with data of\nI         a different record size. This is probably because the data was\nI         loaded from a different data set from the one specified by this\nI         file definition. In this case CICS returns error message\nI         DFHFC7082.\nN\nI      3. The file definition for the table being opened specifies a\nI         record size, but not a data set name because the table is to\nI         be loaded by the opening of a different file. If the table has\nI         already been created, the open of a file specifying a different\nI         record size fails with message DFHFC7083.\nN\nI      To avoid these errors, ensure that the value for this attribute\nI      is the same throughout the sysplex in all file definitions that\nI      reference the same coupling facility data table, or omit it\nI      altogether for files that specify LOAD(YES).\nN\nI      If you specify a record size for a file that is not a remote file,\nI      or does not refer to a CFDT, it has no effect unless the file is\nI      redefined, either as a remote file or to reference a coupling\nI      facility data table. Note, however, that if you specify a record\nI      size, the value returned by an INQUIRE FILE command is as follows:\nN\nI      -> If the file is open, CICS returns the value obtained from VSAM,\nI         which can be different from that specified on the file\nI         definition.\nN\nI      -> If the file is closed, CICS returns the value specified on the\nI         file definition.\nN\nI      Note: For coupling facility data tables, if you can keep the\nI      record size to 63 bytes or less, there is a significant gain in\nI      performance as a result of the way records are held in the coupling\nI      facility.\nN\nD    RECOVERY(NONE | ALL | BACKOUTONLY)\nI      Specifies the type of recovery\nI      required for the file.\nN\nI      This attribute is not used for files defined with RLSACCESS(YES),\nI      or if the recovery options are defined in the ICF catalog. If LOG\nI      is defined in the ICF catalog, CICS ignores the RECOVERY option and\nI      takes the LOG value from the ICF catalog, even for files defined\nI      with RLSACCESS(NO). If LOG(ALL) is specified in the ICF catalog,\nI      CICS also takes the LOGSTREAMID and BWO values from the ICF\nI      catalog. To force CICS to use this attribute instead of the\nI      recovery options in the catalog, set the NONRLSRECOV system\nI      initialization parameter to FILEDEF.\nN\nI      For files that are accessed in RLS mode, you must specify the\nI      recovery parameters with the data set definition in the ICF\nI      catalog. See the CICS Recovery and Restart Guide for more\nI      information.)\nN\nI      For coupling facility data tables and user-maintained tables that\nI      are defined with a source data set, any recovery attributes in the\nI      ICF catalog are ignored. The recovery attributes are a property of\nI      the file not the associated data set.\nN\nI      For coupling facility data tables, the recovery attribute must be\nI      the same throughout the sysplex in all file definitions that\nI      reference the same coupling facility data table.\nN\nI      ALL: Except for coupling facility data tables, which manage their\nI        own recovery and do not use the services of log manager or\nI        recovery manager, before images are recorded in the system log,\nI        and after images in the journal specified in the FWDRECOVLOG\nI        attribute.\nN\nI        Records written to the FWDRECOVLOG are independent of any\nI        automatic journaling options that might be set.\nN\nI        RECOVERY=ALL together with FWDRECOVLOG provide a means of\nI        separating the needs of a forward recovery utility from those\nI        of automatic journaling. Additional information, unavailable\nI        via automatic journaling, is recorded on the FWDRECOVLOG.\nN\nI        RECOVERY=ALL plus FWDRECOVLOG is the preferred way to provide\nI        forward recovery support.\nN\nI        Existing forward recovery utilities that used the JREQ=(WU,WN)\nI        and JID=FCT macro settings can still be used with these\nI        settings. The RDO equivalents of these automatic journaling\nI        settings are JNLADD=BEFORE, JNLUPDATE=YES, and the JOURNAL\nI        attribute.\nN\nI        For CICS-maintained data tables, the data table and its source\nI        data set are logged, journaled, and recovered together.\nN\nI        For user-maintained tables, specifying ALL has the same effect\nI        as specifying BACKOUTONLY: Only dynamic backout is provided.\nI        There is no forward recovery support for user-maintained tables.\nN\nI        For coupling facility data tables you cannot specify ALL.\nN\nI        Note: When ALL is specified for VSAM ESDS files, CICS is unable\nI        to perform backout of ADDs. To cope with this situation, code\nI        user exit XFCLDEL to avoid the file being closed because of the\nI        error.\nN\nI      BACKOUTONLY: Except for coupling facility data tables, which\nI        manage their own recovery and do not use the services of log\nI        manager or recovery manager, before images are recorded in the\nI        system log.\nN\nI        For CICS-maintained data tables, BACKOUTONLY specifies that the\nI        data table and its source data set are recoverable. They are\nI        both updated in step and, if required, recovered in step.\nN\nI        For user-maintained tables, BACKOUTONLY specifies only dynamic\nI        backout. No log records are written and, therefore, there is no\nI        recovery at emergency restart.\nN\nI        For coupling facility data tables, BACKOUTONLY is permitted only\nI        if the coupling facility data table is defined with\nI        UPDATEMODEL(LOCKING). You cannot specify this attribute for\nI        UPDATEMODEL(CONTENTION). Specifying BACKOUTONLY implies that a\nI        coupling facility data table is UOW-recoverable. This means that\nI        updates made to the CFDT within a unit of work are backed out\nI        if the unit of work fails, or if CICS or the CFDT server fails\nI        while the unit of work is in-flight, or if MVS fails.\nN\nI        Note: When BACKOUTONLY is specified for VSAM ESDS files, CICS\nI        is unable to perform backout of ADDs. To cope with this\nI        situation, code user exit XFCLDEL to avoid the file being\nI        closed because of the error.\nN\nI      NONE: There is no recovery logging for this file.\nN\nD    REMOTENAME(file)\nI      Specifies, if the file resides on a remote system,\nI      the name by which this file is known in the system or region in\nI      which it is resident. The name can be up to 8 characters in length.\nI      If REMOTENAME is not specified, the name given in the FILE\nI      attribute is used.\nN\nI      If you specify a remote name, CICSPlex SM uses that name when\nI      assigning the file to a related system. If you specify a remote\nI      system but not a remote name, the local name (that is, the name\nI      of this file definition) is used in both the target and related\nI      systems.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the name of the connection to\nI      the remote system in which the file is resident.\nN\nI      For IPIC connections, REMOTESYSTEM specifies the first 4 characters\nI      of the IPCONN name on the IPCONN definition that is in service and\nI      acquired.\nN\nI      For MRO and APPC connections, REMOTESYSTEM specifies the\nI      CONNECTION name on the CONNECTION definition.If you specify\nI      REMOTESYSTEM, you can also supply a REMOTENAME, to specify the\nI      name of the file in the remote system.\nN\nI      Note: If you modify a resource definition from RLSACCESS(NO) to\nI      RLSACCESS(YES), you must remove the remote system name. Otherwise\nI      CICS continues to function ship file requests.\nN\nI    RESSECNUM: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Obsolete attributes in Reference System definition.\nN\nD    RLSACCESS(NO | YES)\nI      Specifies whether CICS is to open the file in\nI      RLS mode.\nN\nI      NO: The file is not to be opened in RLS mode. If you specify\nI        RLSACCESS(NO) or allow it to default, CICS opens the file in\nI        LSR or NSR access mode, depending on the LSRPOOLNUM attribute.\nI        If you also specify LSRPOOLNUM(NONE), the access mode is NSR;\nI        if you specify LSRPOOLNUM(number), the access mode is LSR.\nN\nI      YES: The file is to be opened in RLS mode. If you specify\nI        RLSACCESS(YES), it takes precedence over the LSRPOOLNUM\nI        attribute, which is ignored when the FILE is opened.\nN\nI        Specifying RLSACCESS(YES) alters the effect of some other\nI        attributes defined in the FILE definition.\nN\nI        Note:\nN\nI        1. Provided that a file is opened in RLS mode, any values\nI           specified for PASSWORD, LSRPOOLNUM, DSNSHARING, STRINGS,\nI           DATABUFFERS, and INDEXBUFFERS are ignored. However, if you\nI           use a CEMT, or EXEC CICS, SET FILE command to change the\nI           value of RLSACCESS from YES to NO, these values are no longer\nI           ignored, and CICS uses them when the file is closed and\nI           reopened in non-RLS mode.\nN\nI        2. CICS always takes the RLS access mode from the file resource\nI           definition and you cannot override this using the RLS=NRI or\nI           RLS=CR parameter on a DD statement.\nN\nD    STATUS(ENABLED | DISABLED | UNENABLED)\nI      Specifies the initial status\nI      of the file following a CICS initialization with START=COLD or\nI      START=INITIAL. You can change the status of a closed file with\nI      the master terminal transaction CEMT. The status of a file\nI      (ENABLED, DISABLED, or UNENABLED) following a CICS restart is\nI      recovered to its status at the previous shutdown.\nN\nI      DISABLED: Any request against this file from a command-level\nI        application program causes the DISABLED condition to be passed\nI        to the program.\nN\nI      ENABLED: Normal processing is allowed against this file.\nN\nI      UNENABLED: This prevents the file being opened by an implicit\nI        open from an application program. Any such attempt to access\nI        the file raises the NOTOPEN condition. By contrast, an explicit\nI        request to open the file (for example, a CEMT or\nI        EXEC CICS SET FILE OPEN command) changes the status to ENABLED\nI        before attempting to open the file.\nN\nI        This attribute is ignored for FILE resources that are dynamically\nI        generated by a CICS bundle. The initial status of a FILE resource\nI        is derived from the initial status of the bundle that defines the\nI        resource.\nN\nD    STRINGS(1 | number)\nI      Specifies the number, in the range 1 through 255,\nI      of concurrent requests that can be processed against the file. When\nI      the number of requests reaches this value, CICS queues any\nI      additional requests until one of the active requests terminates.\nI      This applies both to files using shared resources, and to those not\nI      using shared resources. Note that if the file definition specifies\nI      RLSACCESS(YES), STRINGS value is ignored; you always get 1024\nI      strings with RLS mode access.\nN\nI      For files using local shared resources, this number is not used by\nI      VSAM. It is used by CICS, not only as described here, but also to\nI      calculate the default value in the buffer pool definition.\nN\nI      Notes:\nN\nI      1. When choosing a STRINGS value, be aware that a proportion (20%)\nI         of the specified number of strings is reserved by CICS for use\nI         in read-only requests\nN\nI      2. When choosing a STRINGS value for an ESDS, consider the\nI         following:\nN\nI         -> If an ESDS is used as an 'add-only' file (that is, it is\nI            used only in write mode), you must use a string number of 1.\nI            Any string number greater than 1 can significantly affect\nI            performance, because of exclusive control conflicts that\nI            occur when more than one task attempts to write to the ESDS\nI            at the same time.\nN\nI         -> If an ESDS is used for both writing and reading, with writing\nI            being 80% of the activity, it is better to define two file\nI            definitions using one file for writing and the other for\nI            reading.\nN\nI      3. For user-maintained data tables and coupling facility data\nI         tables, the STRINGS value does not limit the number of\nI         concurrent requests against the table. However, the value does\nI         limit the number of concurrent requests during the loading of a\nI         user-maintained table.\nN\nI      4. For CICS-maintained data tables, the STRINGS value limits the\nI         number of concurrent requests to update the table. It does not\nI         limit the number of concurrent read-only requests.\nN\nD    TABLE(NO | CF | CICS | USER)\nI      Specifies the type of data table that you\nI      require. CF A coupling facility data table (CFDT). This remains\nI      independent of its source data set, and changes to the table are\nI      not reflected in the corresponding source data set, if there is\nI      one. A source data set is optional for a CFDT, and is specified by\nI      LOAD(YES) on the file definition.\nN\nI      If you specify CF, also specify:\nN\nI      -> CFDTPOOL, to give the name of the coupling facility pool in\nI         which the table resides\nN\nI      -> LOAD, to specify whether the table is to be loaded from a\nI         source data set (or let this default to NO)\nN\nI      -> UPDATEMODEL to specify whether the table is to use the\nI         CONTENTION or the LOCKING update model (or let this default to\nI         LOCKING)\nN\nI      -> RECORDFORMAT as V (or let this default to V)\nN\nI      -> MAXNUMRECS with the value you require.\nN\nI      A coupling facility data table requires a coupling facility data\nI      table server. For information about how to start a coupling\nI      facility data table server, see the CICS System Definition Guide.\nN\nI      CICS: A CICS-maintained data table. This automatically reflects all\nI        modifications made to the table in its source data set. If you\nI        specify CICS, also specify:\nN\nI        -> LSRPOOLNUM with a value of 1 through 255\nN\nI        -> MAXNUMRECS with the value you require.\nN\nI      NO: Data table not required.\nN\nI      USER: A user-maintained table. This remains independent of its\nI        source data set, and changes to the user-maintained table are\nI        not reflected in corresponding source data set. If you specify\nI        USER, also specify:\nN\nI        -> LSRPOOLNUM with a value of 1 through 255\nN\nI        -> RECORDFORMAT as VARIABLE (or let this default to VARIABLE)\nN\nI        -> MAXNUMRECS with the value you require.\nN\nD    TABLENAME(cfdt)\nI      Specifies the name of the coupling facility data\nI      table that is accessed through this file definition. The name can\nI      be up to 8 characters in length.\nN\nI      If you omit this attribute when TABLE(CF) is specified, it defaults\nI      to the name specified for the FILE. To enable CICS regions to share\nI      a coupling facility data table, the file definitions installed in\nI      each region must specify the same CFDTPOOL name and TABLENAME\nI      (or FILE name when TABLENAME is not used). The TABLENAME need only\nI      be unique within its pool.\nN\nI      Note that the table name is not only an identifier for the table,\nI      but is also used as the resource name in security checks.\nN\nI      This attribute is meaningful only for files defined with the\nI      TABLE(CF) attribute. You can specify a table name for a file that\nI      is not defined as TABLE(CF), but CICS ignores it. If you then\nI      alter the file definition to reference a coupling facility data\nI      table, the TABLENAME attribute comes into effect.\nN\nD    UPDATE(NO | YES)\nI      Specifies whether records on this file can be\nI      updated.\nN\nD    UPDATEMODEL(LOCKING | CONTENTION)\nI      Specifies the type of update model\nI      to be used for a coupling facility data table.\nN\nI      LOCKING: Specifies that the CFDT is updated using the locking\nI        model. This means that records are locked when they are read for\nI        update, so that they cannot be changed by any other units of work\nI        until the update request has been completed. For recoverable\nI        tables, the update request is completed at sync point. For\nI        unrecoverable tables, the update request is completed when a\nI        REWRITE, DELETE, or UNLOCK command is completed. LOCKING is the\nI        default for a file that specifies TABLE(CF). With the LOCKING\nI        model, the CFDT can be defined as:\nN\nI        -> Unrecoverable, meaning that CFDT updates are not backed out\nI           if a unit of work fails, and the locks are only held for the\nI           duration of a request. You specify that a CFDT is not\nI           recoverable by specifying RECOVERY(NONE).\nN\nI        -> Recoverable, or UOW-recoverable, meaning that updates made to\nI           the CFDT within a unit of work are backed out if the unit of\nI           work fails, or if CICS or the CFDT server fails while the\nI           unit of work is in-flight, or if MVS fails. You specify that\nI           a CFDT is recoverable by specifying RECOVERY(BACKOUTONLY).\nN\nI        A recoverable CFDT that uses the locking model is like a\nI        recoverable file or data set, except that it does not survive a\nI        failure of the coupling facility in which it resides. There is\nI        no forward recovery for a coupling facility data table.\nN\nI      CONTENTION: Specifies that the CFDT is updated using the contention\nI        model. This means that records are not locked when they are read\nI        for update. An error is returned on a subsequent REWRITE or\nI        DELETE if the record was changed or deleted by another task after\nI        it was read for update.\nN\nI        The CFDT must be unrecoverable (RECOVERY(NONE)), meaning that\nI        updates are not backed out if a unit of work fails.\nN\nI        The value for this attribute must be the same throughout the\nI        sysplex in all file definitions that reference the same coupling\nI        facility data table.\nN\nI        This attribute is meaningful only for files defined with the\nI        TABLE(CF) attribute. You can specify the update model for a file\nI        that is not defined as TABLE(CF), but CICS ignores it. If you\nI        then alter the file definition to reference a coupling facility\nI        data table, the UPDATEMODEL attribute comes into effect.\nN\nN\nNJournaling attributes:\nN----------------------\nD    JNLADD(NONE | AFTER | ALL | BEFORE)\nI      Specifies the add operations you\nI      want recorded on the journal nominated by the JOURNAL attribute.\nI      Possible values are:\nN\nI      AFTER: Add the file control write operation to the journal after\nI        the VSAM I/O operation.\nN\nI      ALL: Add the file control write operation to the journal both\nI        before and after the VSAM I/O operation has completed.\nN\nI      BEFORE: Add the file control write operation to the journal before\nI        the VSAM I/O operation.\nN\nI      NONE: Do not add write operations to the journal.\nN\nD    JNLREAD(NONE | ALL | READONLY | UPDATEONLY)\nI      Specifies the read\nI      operations you want recorded on the journal nominated by the\nI      JOURNAL attribute. Possible values are:\nN\nI      ALL: Add all read operations to the journal.\nN\nI      NONE: Do not add read operations to the journal.\nN\nI      READONLY: Add only READ ONLY operations (not READ UPDATE\nI        operations) to the journal.\nN\nI      UPDATEONLY: Add only READ UPDATE operations (not READ ONLY\nI        operations) to the journal.\nN\nD    JNLSYNCREAD(NO | YES)\nI      Specifies whether you want the automatic\nI      journaling records, written for READ operations to the journal\nI      specified by JOURNAL, to be written synchronously or\nI      asynchronously.\nN\nD    JNLSYNCWRITE(YES | NO)\nI      Specifies whether you want the automatic\nI      journaling records, written for WRITE operations to the journal\nI      specified by JOURNAL, to be written synchronously or\nI      asynchronously.\nN\nD    JNLUPDATE(NO | YES)\nI      Specifies whether you want REWRITE and DELETE\nI      operations recorded on the journal nominated by the JOURNAL\nI      attribute.\nN\nNExample:\nN--------\nNShows an example of how to specify the required file control definition\nNfor a VSAM base data set and alternate index path.\nN\nI* DEFINE THE CLUSTER\nI    CEDA DEFINE FILE(VSAM10B) GROUP(xxxxxx)\nI      DSNAME(DTGCAT.VSAM10B)\nI      DISPOSITION(SHARE) ADD(YES)\nI      BROWSE(YES) DELETE(YES) READ(YES)\nI      UPDATE(NO) RECORDFORMAT(F)\nI      STRINGS(8) LSRPOOLNUM(NONE)\nI      RECOVERY(NONE) NSRGROUP(GROUP1)\nI      INDEXBUFFERS(8) DATABUFFERS(9)\nI* DEFINE THE PATH\nI    CEDA DEFINE FILE(VSAM10P) GROUP(xxxxxx)\nI      DSNAME(DTGCAT.VSAM10P)\nI      LSRPOOLNUM(NONE) DISPOSITION(SHARE)\nI      STRINGS(5) NSRGROUP(GROUP1)\nI      BROWSE(YES) DELETE(NO) READ(YES)\nI      ADD(NO) UPDATE(NO) RECORDFORMAT(F)\nI      RECOVERY(NONE)\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG14": {"ttr": 5891, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG14\nTCICS\nT-RDG\nT-Chapter 14. IPCONN resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 14. IPCONN resources\nN============================\nNAn IPCONN resource defines a Transmission Control Protocol/Internet\nNProtocol (TCP/IP) communication link to a remote system. This\nNcommunication link is known as an IPIC connection.\nN\nNSome of the inbound attributes of the IPIC connection are specified\nNby the TCPIPSERVICE definition that is named on the TCPIPSERVICE option\nNof the IPCONN definition.\nN\nNThe REMOTESYSTEM name on a PROGRAM definition can refer to an IPCONN\nNdefinition through its IPCONN name. This attribute is used for\nNdistributed program link.\nN\nNFor guidance on defining IPCONN resources, see the\nNCICS Intercommunication Guide (interestingly this has no IBM manual\nNnumber).\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1401": {"ttr": 5893, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1401\nTCICS\nT-RDG\nT-Chapter 14. IPCONN resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-133555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 14. IPCONN resources\nN============================\nNIPCONN attributes\nN-----------------\nNDescribes the syntax and attributes of the IPCONN resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    IPCONN(name)\nI      Specifies the name of this IPCONN definition.\nI      The name can be up to 8 characters in length.\nN\nI      If this IPCONN is to be used for distributed program link (DPL)\nI      between CICS TS 3.2 or later regions, or transaction routing\nI      between CICS TS 4.1 or later regions, or function shipping file\nI      control, transient data, or temporary storage requests between\nI      CICS TS 4.2 or later regions, that use IPIC connectivity, its name\nI      must match the 4-character local name (SYSID) by which CICS knows\nI      the remote system, padded with four trailing blanks.\nN\nI      Note: You can specify the name (SYSID) of the remote, target\nI      region, of a DPL request in these ways:\nN\nI      -> The REMOTESYSTEM option of the installed PROGRAM definition\nN\nI      -> The SYSID option of the EXEC CICS LINK PROGRAM command\nN\nI      -> The dynamic routing program\nN\nI      The IPCONN name can be the same as the name of an installed MRO\nI      or APPC CONNECTION definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that each\nI      left parenthesis has a matching right one. If you use the CREATE\nI      command, code 2 apostrophes for each single apostrophe in the text.\nN\nD    APPLID(IPCONNname | applid)\nI      Specifies the application identifier\nI      (APPLID) of the remote system. If the remote system is a CICS\nI      region, its APPLID is defined on the APPLID parameter. The value\nI      for applid can be up to 8 characters in length and must start with\nI      an alphabetic character.\nN\nI      For connections to an extended recovery facility (XRF) CICS region,\nI      specify the generic APPLID of the remote region.\nN\nI      If you do not supply an APPLID, CICS uses the IPCONN name.\nN\nI      When the IPCONN is used to connect to an HA cluster, this field\nI      must contain the 1 to 8 character value that identifies the\nI      cluster. This value distinguishes this IPCONN from all other\nI      installed IPCONNs in the region. The name of an APPLID that points\nI      at a specific CICS region cannot have the same name as an HA\nI      cluster.\nN\nI      Duplicate APPLIDs follow these rules:\nN\nI        -> You cannot install two or more IPCONN definitions that specify\nI           the same APPLID and the same NETWORKID. The combination of\nI           APPLID and NETWORKID can be used to ensure unique naming of\nI           systems across the network. See the description of the\nI           NETWORKID option.\nN\nI        -> You can install an IPCONN definition that specifies the same\nI           APPLID as the NETNAME of an installed MRO, APPC, or LUTYPE6.1\nI           CONNECTION definition.\nN\nI        -> If an installed IPCONN definition has the same name as an\nI           installed CONNECTION definition, the APPLID of the IPCONN\nI           definition must match the NETNAME of the CONNECTION\nI           definition. If they do not, the resulting message depends on\nI           the situation:\nN\nI             DFHIS3009 if the error is detected during IPCONN autoinstall\nN\nI             DFHAM4913 if the error is detected during IPCONN\nI             installation\nN\nI             DFHZC6312 if the error is detected during CONNECTION\nI             installation or autoinstall\nN\nI        The IPCONN definition takes precedence over the CONNECTION\nI        definition; that is, if an IPCONN and a CONNECTION have the\nI        same name, CICS uses the IPCONN.\nN\nI        -> A CONNECTION definition and an IPCONN definition with the\nI           same NETNAME and APPLID do not require the same name to allow\nI           the possibility of using a distinct sysid for communication\nI           over TCP/IP rather than relying on the CICS default of routing\nI           all supported function with the IPCONN, if it exists.\nN\nI        These rules are validated at installation time.\nN\nD    AUTOCONNECT(NO | YES)\nI      Specifies whether sessions are to be\nI      established when the IPCONN definition is installed (which can\nI      happen during CICS initialization, when you issue a subsequent\nI      CEDA INSTALL command, or when you use the CEMT or\nI      EXEC CICS SET TCPIP OPEN command to start communication with\nI      TCP/IP). If the connection cannot be made at these times because\nI      the remote system is unavailable, you can later acquire the link\nI      by using the CEMT or EXEC CICS SET IPCONN(name) INSERVICE ACQUIRED\nI      command, unless the remote system becomes available in the meantime\nI      and initiates communications.\nN\nI      NO: CICS does not try to establish sessions when the IPCONN is\nI        installed.\nN\nI      YES: CICS tries to establish sessions when the IPCONN is installed.\nN\nI        For connectivity to be achieved when you install the IPCONN\nI        definition, note these conditions:\nN\nI        1. The TCPIPSERVICE definition named on the TCPIPSERVICE option\nI           of this IPCONN definition must also be installed in this\nI           region and must specify PROTOCOL(IPIC).\nN\nI        2. Corresponding IPCONN and TCPIPSERVICE definitions must be\nI           installed in the remote region:\nN\nI           a. The HOST option of the IPCONN definition on the remote\nI              region must specify this region.\nN\nI           b. The PORT option of the IPCONN definition on the remote\nI              region must specify the same port number as that specified\nI              on the PORTNUMBER option of the local TCPIPSERVICE\nI              definition named by this IPCONN.\nN\nI           c. The TCPIPSERVICE definition on the remote region (named\nI              by the IPCONN definition on the remote region) must specify\nI              PROTOCOL(IPIC) and, on its PORTNUMBER option, the same\nI              port number as that specified by the PORT option of this\nI              IPCONN.\nN\nI        You cannot specify AUTOCONNECT(YES) when PORT(NO) is specified.\nN\nD    CERTIFICATE(label)\nI      Specifies the label of an X.509 certificate to\nI      be used as a client certificate during the SSL handshake when the\nI      IPIC connection is acquired, if the TCPIPSERVICE resource\nI      identified by the HOST and PORT definitions is defined with\nI      SSL(CLIENTAUTH). If this attribute is omitted, the default\nI      certificate defined in the key ring for the CICS region user ID\nI      is used.\nN\nI      Certificate labels can be up to 32 bytes long.\nN\nI      The certificate must be stored in a key ring in the external\nI      security manager database. For more information, see the\nI      CICS RACF Security Guide.\nN\nI      If you specify this attribute, you must also specify SSL(YES).\nN\nD    CIPHERS(value)\nI      The CIPHERS attribute can be specified in either of\nI      two ways:\nN\nI      -> A string of up to 56 hexadecimal digits that is interpreted as\nI         a list of up to 28 2-digit cipher suite codes.\nN\nI      -> The name of the SSL cipher suite specification file, which is a\nI         z/OS UNIX file in the security/ciphers subdirectory of the\nI         directory that is specified by the USSCONFIG system\nI         initialization parameter. For example if USSCONFIG is set to\nI         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,\nI         the fully qualified file name is\nI         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For\nI         more information, see SSL cipher suite specification file.\nN\nI       When you use the CEDA transaction to define the resource, CICS\nI       automatically initializes the attribute with a default list of\nI       acceptable codes. For CICS to initialize the attribute, the\nI       KEYRING system initialization parameter must be specified in the\nI       CICS region where you are running CEDA. If KEYRING is not set,\nI       CICS does not initialize the attribute. The default list of codes\nI       is 35363738392F303132330A1613100D15120F0C unless the system\nI       initialization parameter NISTSP800131A=CHECK is set, in which\nI       case it is 35363738392F303132330A1613100D.\nN\nI       You can reorder the cipher codes or remove them from the initial\nI       list. However, you cannot add cipher codes that are not in the\nI       default list for the specified encryption level. To reset the\nI       value to the default list of codes, delete all of the cipher\nI       suite codes. The field is automatically repopulated with the\nI       default list.\nN\nD    HA(NO | YES)\nI      Specifies whether the IPCONN can be used to connect to\nI      a high-availability cluster.\nN\nI      NO: This is the default value. The IPCONN cannot be used to connect\nI        to a high-availability cluster.\nN\nI      YES: The IPCONN must connect to a region that is part of a\nI        high-availability cluster.\nN\nD    HOST(hostname)\nI      Specifies the host name of the remote system or its\nI      IPv4 or IPv6 address. The name can be up to 116 characters long.\nI      You can specify IPv4 and IPv6 addresses in a number of acceptable\nI      formats. See the CICS Internet Guide for more information about\nI      address formats.\nN\nI      If you specify an IPv6 address (or a host name that resolves to an\nI      IPv6 address), ensure that you are operating in a dual-mode (IPv4\nI      and IPv6) environment and that the client or server that you are\nI      communicating with is also operating in a dual-mode (IPv4 and IPv6)\nI      environment. For more information about IPv6, see the\nI      CICS Internet Guide.\nN\nI      The HOST attribute must contain only alphanumeric characters,\nI      hyphens (-), colons (:), or periods (.), although you cannot use\nI      colons when specifying a character host name instead of an IP\nI      address. CICS validates the host name at define time. The host name\nI      can be entered in uppercase, lowercase, or mixed case characters,\nI      but if a character host name is specified instead of an IP address,\nI      the host name is converted to lowercase in the IPCONN definition.\nN\nI      HOST is ignored when the SENDCOUNT attribute is zero. HOST is a\nI      required attribute when SENDCOUNT is greater than zero.\nN\nD    IDPROP(NOTALLOWED | REQUIRED | OPTIONAL)\nI      Specifies whether the\nI      distributed identity is transmitted to the connected system by\nI      the sender. The IDPROP attribute is meaningful only if a connection\nI      extends outside a sysplex and is used primarily to prevent\nI      distributed identities being transmitted between enterprises. If\nI      the connection is between systems in the same sysplex, the\nI      connection operates as if IDPROP(OPTIONAL) is specified and ignores\nI      any other setting.\nN\nI      Distributed identities flow only if the connected systems meet all\nI      the following criteria:\nN\nI      -> Both systems are participating in identity propagation. See\nI         Identity propagation requirements.\nN\nI      -> The systems are in the same sysplex or are connected by using\nI         SSL.\nN\nI      -> The receiving system has USERAUTH(IDENTIFY) specified in the\nI         IPCONN resource definition.\nN\nI      NOTALLOWED: A user ID associated with the sending transaction is\nI        sent for requests that use this connection. NOTALLOWED is the\nI        default value.\nN\nI      REQUIRED: A distributed identity is required for requests that use\nI        this connection.\nN\nI        If REQUIRED is specified, the receiving system must support\nI        distributed identities. The user ID associated with the sending\nI        transaction is not sent.\nN\nI      OPTIONAL: A distributed identity is sent, if available. The user\nI        ID associated with the sending transaction is also sent.\nN\nD    INSERVICE(YES | NO)\nI      Specifies the status of the IPCONN resource\nI      when it is installed.\nN\nI      NO: The connection cannot receive messages or transmit output.\nN\nI      YES: The connection is available for use.\nN\nD    LINKAUTH(SECUSER | CERTUSER)\nI      Specifies how the user ID for link\nI      security is established in a CICS system with security initialized\nI     (SEC=YES).\nN\nI      CERTUSER: TCP/IP communication with the partner system must be\nI        configured for SSL and a certificate must be received from the\nI        partner system during SSL handshake.\nN\nI        The IPCONN resource must refer to a TCPIPSERVICE resource that\nI        is defined with SSL(CLIENTAUTH).\nN\nI        The received certificate must be defined to the external security\nI        manager so that it is associated with a user ID, which is used to\nI        establish link security.\nN\nI      SECUSER: Specifies that the user ID specified in the SECURITYNAME\nI        attribute is used to establish link security.\nN\nI        The default value is LINKAUTH(SECUSER)\nN\nD    MAXQTIME(NO | seconds)\nI      Specifies the maximum time that queued\nI      allocate requests, waiting for free sessions on this connection,\nI      can wait before the queue is purged.\nN\nI      Note:\nI      -> The maximum queuing time is used only if a limit to the length\nI         of the queue is specified on the QUEUELIMIT option.\nN\nI      -> The time limit is applied only when the queue length has reached\nI         the QUEUELIMIT value.\nN\nI      NO: CICS maintains the queue of allocate requests that are waiting\nI        for a free session. No limit is set on the length of time that\nI        requests can remain queued, although the DTIMOUT mechanisms can\nI        apply to individual requests.\nN\nI      seconds: The approximate maximum time, in seconds, that allocate\nI        requests waiting for a free session can be queued, when this\nI        connection appears to be unresponsive; seconds must be in the\nI        range 0 - 9999.\nN\nI        When the queue of allocate requests reaches its maximum length\nI        (specified by the QUEUELIMIT attribute), and a new allocate\nI        request is received for the connection, if the rate of processing\nI        for the queue indicates that, on average, the new allocate takes\nI        more than the maximum queue time, the queue is purged, and\nI        message DFHIS500 is issued. When the queue is purged, queued\nI        allocate requests return SYSIDERR.\nN\nI        No further queuing takes place until the connection has\nI        successfully freed a session. At this point, CICS issues a\nI        DFHIS5001 message and resumes normal queuing.\nN\nD    MIRRORLIFE(REQUEST | TASK | UOW)\nI      Specifies the minimum lifetime of the\nI      mirror task for function-shipped file control, transient data, and\nI      temporary storage requests received by this region. Normally,\nI      mirror tasks are terminated as soon as possible to keep the number\nI      of active tasks to a minimum and to avoid holding on to a session\nI      for long periods. However, for some applications it is more\nI      efficient to retain both the mirror task and the session until the\nI      next sync point, although this retention is not required for data\nI      integrity. For example, a transaction that issues many READ FILE\nI      requests to a remote system might be better served by a single\nI      mirror task instead of a separate mirror task for each request.\nI      In this way, you can reduce the overhead of allocating sessions\nI      on the sending side and attaching mirror tasks on the receiving\nI      side. The specified MIRRORLIFE value is not reflected in the\nI      lifetime of the mirror task until a file control, transient data,\nI      or temporary storage request is function shipped.\nN\nI      REQUEST: The mirror task terminates as soon as possible. For\nI        unrecoverable work that does not require a mirror to hold on to\nI        a session in the resource-owning region (for example, a\nI        non-update READ FILE request) this is after the request has been\nI        processed. For unrecoverable work that requires the mirror to\nI        hold on to a session (for example, file browse requests), this\nI        is as soon as the need for the hold state has been completed\nI        (for example, the ENDBR is issued). For recoverable work, the\nI        mirror remains until the next sync point.\nN\nI        This is the default value.\nN\nI      TASK: The mirror task remains available to the application that\nI        issues the remote request until the task of the application ends.\nI        This value saves the overhead of reallocating a session and\nI        reattaching the mirror task for a subsequent request following\nI        a user sync point. Do not specify this value when long-running\nI        tasks might be used to function ship file control, transient\nI        data, or temporary storage requests because once the session is\nI        allocated to a task it is not freed until the task ends, even it\nI        is not being used. The session is not available for use by other\nI        tasks until it is freed.\nN\nI      UOW: The mirror transaction remains available to the application\nI        that issues the remote request until the next sync point is\nI        issued. This value saves the overhead of reestablishing\nI        communication with the mirror transaction if the application\nI        has more function-shipping file control, transient data, or\nI        temporary storage requests in this unit of work. This parameter\nI        is valid when it is specified on the IPCONN of the\nI        resource-owning region. Specify the TASK or UOW values with this\nI        parameter with caution, especially if DPL requests with\nI        SYNCONRETURN or TRANSID are used.\nN\nD    NETWORKID(networkID)\nI      Specifies the network ID of the remote system.\nI      The remote system network ID is either its z/OS Communications\nI      Server NETID or, for VTAM=NO systems, the value of its UOWNETQL\nI      system initialization parameter.\nN\nI      If NETWORKID is not specified, CICS assumes that the remote system\nI      is in the same network as the local system. In this instance, CICS\nI      uses the z/OS Communications Server NETID, or the value of the\nI      UOWNETQL system initialization parameter, of this CICS (that is,\nI      the CICS on which this definition is installed).\nN\nI      Specify NETWORKID if you want to connect to a remote system that\nI      is in a different network and therefore has a different\nI      z/OS Communications Server NETID or UOWNETQL value. In this\nI      instance, it might be possible for two or more remote systems to\nI      have the same APPLID. Although CICS APPLIDs must be unique within\nI      a sysplex, you might, for example, want to connect to a system\nI      outside the sysplex or in a different sysplex. The combination of\nI      APPLID and NETWORKID attributes ensures that the remote system is\nI      referred to by a unique name.\nN\nI      The NETWORKID value must match the remote system network ID.\nN\nI      When it is not specified, the NETWORKID value is derived when the\nI      IPCONN resource is first installed and is not changed between warm\nI      starts, even if the local NETID value changes.\nN\nI      The name can be up to 8 characters in length and follows assembler\nI      language rules. It must start with an alphabetic character.\nN\nD    PORT(NO | number)\nI      Specifies the decimal number of the port on which\nI      the remote region listens.\nN\nI      NO: This IPCONN resource is not used for outbound requests (that\nI      is, it has no send sessions) when connecting from the CICS\nI      Transaction Gateway.\nN\nI        NO is not valid for CICS to CICS IPCONN resources.\nN\nI        NO forces the value of AUTOCONNECT to NO.\nN\nI      number: A value in the range 1 - 65535. The port number is combined\nI        with the HOST value to determine the destination for outbound\nI        requests on this IPCONN resource.\nN\nD    QUEUELIMIT(NO | number)\nI      Specifies the maximum number of allocate\nI      requests that CICS is to queue while waiting for free sessions:\nN\nI      NO: No limit applies to the number of allocate requests that CICS\nI        can queue while waiting for a free session.\nN\nI      number: The maximum number of allocate requests, in the range\nI        0 - 9999, that CICS can queue on the connection while waiting\nI        for a free session.\nN\nI        When the number of queued allocate requests reaches this limit,\nI        subsequent allocate requests fail, returning SYSIDERR, until the\nI        queue drops below the limit.\nN\nD    RECEIVECOUNT(1 | number)\nI      Specifies, in the range 1 - 999, the number\nI      of receive sessions; that is, sessions that receive incoming\nI      requests. The number of receive sessions that are used depends\nI      also on the number of send sessions defined in the remote system.\nN\nI      When the connection is established, these values are exchanged and\nI      the lower value is used.\nN\nD    SECURITYNAME(name)\nI      Specifies the security name of the remote system,\nI      to be used for link security. In a CICS system with security\nI      initialized (SEC=YES), and with LINKAUTH(SECUSER) in use, the\nI      security name is used to establish the authority of the remote\nI      system.\nN\nI      The security name must be a valid RACF user ID on this region.\nI      Access to protected resources on this region is based on the RACF\nI      user profile and its group membership. If the security name is not\nI      a valid RACF user ID when the IPCONN is installed, CICS uses the\nI      default user ID for the security name.\nN\nI      The default value is LINKAUTH(SECUSER).\nN\nD    SENDCOUNT(0 | number)\nI      Specifies, in the range 0 - 999, the number\nI      of send sessions; that is, sessions that send outgoing requests.\nI      The number of send sessions that are used depends also on the\nI      number of receive sessions defined in the remote system. When the\nI      connection is established, these values are exchanged and the\nI      lower value is used. If 0 is specified, this IPCONN can process\nI      only incoming work.\nN\nI      It cannot send requests to the connected system.\nN\nI      SENDCOUNT(0) is not valid for CICS to CICS IPCONN resources.\nN\nI      SENDCOUNT(0) forces PORT(NO). A SENDCOUNT value greater than zero\nI      requires PORT to have a numeric value.\nN\nI      An attempt to acquire an IPCONN resource that has SENDCOUNT(0)\nI      fails because no port is defined.\nN\nD    SSL(NO | YES)\nI      Specifies whether Secure Sockets Layer (SSL) is used\nI      for encrypting the transmitted data. Note that, when using SSL,\nI      MAXSSLTCBs should be set to a value that is at least twice the\nI      number of IPIC connections that use SSL by the CICS region.\nN\nI      NO: The Secure Sockets Layer (SSL) is not used. No security checks\nI        are applied when the connection is being acquired. No encryption\nI        is applied to outbound messages.\nN\nI      YES: If the SEC system initialization parameter is set to YES, the\nI        Secure Sockets Layer (SSL) is used. If the TCPIPSERVICE resource\nI        identified by the HOST and PORT attributes is defined with\nI        SSL(CLIENTAUTH), CICS extracts the client certificate named in\nI        the CERTIFICATE attribute, and uses it when acquiring the IPIC\nI        connection to the partner system. SSL encryption processing is\nI        applied to all messages sent from this IPCONN resource. The\nI        level of encryption depends on the value of the CIPHERS option.\nN\nD    TCPIPSERVICE( name )\nI      Specifies the name of a TCPIPSERVICE definition,\nI      with PROTOCOL(IPIC), that defines the attributes of the inbound\nI      processing for this IPCONN resource.\nN\nD    USERAUTH(LOCAL | IDENTIFY | VERIFY | DEFAULTUSER)\nI      Specifies how the\nI      user ID for attach-time user security is established in a CICS\nI      system with security initialized (SEC=YES).\nN\nI      LOCAL: CICS does not accept a user ID or password from clients.\nI        All requests run under the link user ID or the default user ID\nI        if there is no link user ID.\nN\nI      IDENTIFY: Incoming attach requests must specify a user ID. Enter\nI        IDENTIFY when the connecting system is trusted to\nI        pre-authenticate users, for example, if it is another CICS or\nI        CICS TG system.\nN\nI        SSL client authentication must be in use or the connecting\nI        system must be in the same sysplex.\nN\nI      VERIFY: Incoming attach requests must specify a user ID and\nI        password. Specify VERIFY when connecting systems are unidentified\nI        and cannot be trusted.\nN\nI      DEFAULTUSER: CICS does not accept a user ID and password from the\nI        partner system. All requests run under the default user ID.\nN\nD    XLNACTION(KEEP | FORCE)\nI      Specifies the action to be taken when a new\nI      logname is received from the partner system. Receipt of a new\nI      logname indicates that the partner has deleted its recovery\nI      information.\nN\nI      KEEP: Recovery information is kept, and no predefined actions are\nI        taken for indoubt units of work.\nN\nI        The connection cannot perform new work that requires sync\nI        level 2 protocols until all outstanding recoverable work with\nI        the partner (that is, indoubt UOWs, or information relevant to\nI        UOWs that were indoubt on the partner system under the old\nI        logname) is completed, using the CEMT or SPI interface.\nI        Therefore, because the connection is being used for CICS-to-CICS\nI        communication, which always uses the sync level 2 protocols, the\nI        connection cannot be acquired until all outstanding recoverable\nI        work with the partner has completed.\nN\nI      FORCE: Before any new work with the new logname is started, the\nI        predefined decisions for indoubt units of work (UOWs), as defined\nI        by the indoubt attributes of the TRANSACTION definition, are\nI        implemented. CICS also deletes any information retained for\nI        possible resolution of UOWs that were indoubt on the partner\nI        system.\nN\nI        Attention: Data integrity might be compromised if you use this\nI        option.\nN\nI      The XLNACTION parameter is ignored for IPCONN definitions used by\nI      the CICS Transaction Gateway.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG15": {"ttr": 6145, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG15\nTCICS\nT-RDG\nT-Chapter 15. JOURNALMODEL resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 15. JOURNALMODEL resources\nN==================================\nNA JOURNALMODEL resource defines the connection between a CICS journal\nNname (or identifier) and the associated physical log streams managed by\nNthe MVS system logger, or between the journal name and the SMF log.\nN\nNAlthough they are intended mainly for user journals, you can also\nNdefine journal models for the system log and forward recovery logs\nN(non-RLS only). However, for forward recovery logs, you are recommended\nNto define all log stream names for forward recovery in the VSAM\nNcatalog. This is mandatory for VSAM files processed in RLS mode, but\nNoptional for non-RLS mode files.\nN\nNUnlike the journal control table, you do not need to define a journal\nNmodel for every journal that CICS uses. Instead, define some generic\nNmodel definitions that describe the mapping to log stream names for the\nNmajority of your CICS journals.\nN\nNYou may find that you can use the default models supplied by CICS and\nNneed not define any of your own. In addition to generic models, you can\nNdefine the necessary specific models where special handling is required\nN(for example, SMF logging, or merging with other log streams).\nN\nNYou can change JOURNALMODEL definitions at any time, but any journal\nNentries that CICS has already created using model definition cannot\nNreflect the change unless you first delete the existing entry using a\nNDISCARD JOURNALNAME() command.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1501": {"ttr": 6147, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1501\nTCICS\nT-RDG\nT-Chapter 15. JOURNALMODEL resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-072055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 15. JOURNALMODEL resources\nN==================================\nNJOURNALMODEL attributes\nN-----------------------\nNDescribes the syntax and attributes of the JOURNALMODEL resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    JOURNALMODEL(name)\nI      Specifies the name of this JOURNALMODEL\nI      definition. The journal model name is used to refer to a specific\nI      JOURNALMODEL definition in the CSD file it does not have to\nI      correspond to a CICS journal name. However, the JOURNALMODEL name\nI      is also used as the JOURNALNAME if you omit the JOURNALNAME\nI      attribute.\nN\nI      The name can be up to eight characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    JOURNALNAME(journal)\nI      Specifies the journal names to which this\nI      definition applies. If you omit the JOURNALNAME attribute, the name\nI      you specify on the JOURNALMODEL attribute is used as the journal\nI      name. Name can be either the specific name of a journal or a\nI      generic name, although using a generic name for system log and\nI      log-of-logs models does not serve much purpose.\nN\nI      The name can be up to eight characters in length.\nN\nI      The forms of the names you can define are as follows:\nN\nI      For system logs\nI      ---------------\nI        To define a JOURNALMODEL for system logs, specify the name as\nI        DFHLOG for the primary system log stream, and as DFHSHUNT for\nI        the secondary log stream. Install one journal model only for\nI        each of these log streams in a CICS region.\nN\nI        CICS-supplied definitions for DFHLOG, DFHSHUNT, and DFHLGLOG are\nI        contained in group DFHLGMOD in DFHLIST.\nN\nI      For log-of-logs\nI      ---------------\nI        To define a JOURNALMODEL for the log-of-logs, specify the name\nI        as DFHLGLOG. See the CICS System Definition Guide for more\nI        information about the purpose of the log of logs.\nN\nI      For autojournals\nI      ----------------\nI        For autojournals (file control and terminal control), the name\nI        must be of the form DFHJnn where nn is a number in the range 1\nI        through 99.\nN\nI        The name can be either the specific name of a journal or a\nI        generic name.\nN\nI      For user journals\nI      -----------------\nI        For user journals, the name can be up to 8 characters, and can be\nI        either the specific name of a journal or a generic name. If\nI        compatibility with releases earlier than CICS Transaction Server\nI        for z/OS, is required, the name must be of the form DFHJnn where\nI        nn is a number in the range 1 through 99.\nN\nI      For forward recovery logs (non-RLS)\nI      -----------------------------------\nI        For non-RLS forward recovery logs, the name must be of the form\nI        DFHJnn where nn is a number in the range 1 through 99. The name\nI        can be either the specific name of a journal or a generic name.\nN\nI      Note: You cannot define a journal model for use with VSAM RLS\nI      forward recovery logs. CICS obtains the fully-qualified LSN\nI      directly from the VSAM catalog, and therefore does not need a\nI      journal model to obtain the LSN.\nN\nI      You define generic names, using the special symbols %, +, and *,\nI      as follows:\nN\nI      -> You can use the % or + symbols to represent any single\nI         character within a journal name.\nN\nI      -> You can use the * symbol at end of a name to represent any\nI         number of characters. A default name of a single * is used to\nI         match any journal names that do match on a more specific name.\nN\nI      If there are several installed JOURNALMODEL definitions that match\nI      a journal name, CICS chooses the best match as follows:\nN\nI      1. If there is a JOURNALMODEL with a specific JOURNALNAME that\nI         exactly matches, CICS uses this model.\nN\nI      2. If there is no exact match, the journal name is compared with\nI         the matching generic entries and the most specific entry is\nI         used.\nN\nI        In comparing names to see which one is more specific, the names\nI        are compared character by character. Where they first differ:\nN\nI        -> If one has a discrete character (not %, +, or *) and the other\nI           has a generic character (%, +, or *) the one with the discrete\nI           character is used.\nN\nI        -> If one has a % or a + and the other has a *, the one with % or\nI           + is used.\nN\nI      3. If there are duplicate JOURNALMODEL definitions (that is,\nI         definitions with the same JOURNALNAME), CICS uses the last one\nI         processed.\nN\nI      Attention: Take care when defining a completely generic journal\nI      name using only the single asterisk (*). This is particularly\nI      important if you have not defined a specific journal model for\nI      the system log (using journal name DFHLOG), and the log stream\nI      name is a fully-qualified literal name. If you define a journal\nI      model with JOURNALNAME(*) and do not define a journal model for\nI      the system log, CICS uses the log stream name defined on the\nI      generic model definition. This causes problems if other journals\nI      and forward recovery logs are assigned to the same log stream by\nI      means of the generic journal model.\nN\nD    STREAMNAME(&USERID..&APPLID..&JNAME. | stream_name_template)\nI      Specifies either an explicit MVS system logger log stream name,\nI      or a template used to construct the log stream name. STREAMNAME\nI      is applicable only to journal models defined with a LOGSTREAMTYPE\nI      of MVS.\nN\nI      The four symbolic names, from which you can use a maximum of three,\nI      are:\nN\nI        &USERID.: The symbolic name for the CICS region userid, which\nI          can be up to eight characters. If the region does not have a\nI          userid, the string 'CICS' will be used.\nN\nI        &APPLID.: The symbolic name for the CICS region APPLID as\nI          specified on the system initialization parameter, and which\nI          can be up to eight characters.\nN\nI          Note: If you are using XRF and you specify the APPLID system\nI          initialization parameter as\nI          APPLID=(generic_applid,specific_applid), it is the generic\nI          applid that CICS uses when resolving &APPLID..\nN\nI        &JNAME.: The symbolic name for a journal name that references,\nI          either by a specific or generic match, this journal model\nI          definition. &JNAME. can be up to eight characters in length.\nN\nI        &SYSID.: The symbolic name for the CICS region SYSID as specified\nI          on the SYSIDNT system initialization parameter. If SYSIDNT is\nI          not specified, the string 'CICS' will be used.\nN\nI        The default set of symbolic names is: &USERID..&APPLID..&JNAME.\nN\nI        For Example:\nI        ------------\nI        &USERID..&APPLID..&JNAME. = CICSHA##.CICSHAA1.DFHJ02\nN\nI        where:\nI          CICSHA## is the CICS region userid used by all the AORs.\nI          CICSHAA1 is the applid of one AOR.\nI          DFHJ02 is the journal name of an auto journal.\nN\nI        An alternative set of symbolic names could be:\nI          &SYSID..&APPLID..&JNAME. = SYSA.CICSHAA1.DFHJ02\nN\nI        where:\nI          SYSA is the character string as specified by the SYSIDNT\nI            system initialization parameter.\nI          CICSHAA1 is the applid of one AOR.\nI          DFHJ02 is the journal name of an auto journal.\nN\nI      CICS installs the JOURNALMODEL resource as defined, including the\nI      symbolic names.\nN\nI      stream_name_template\nI      --------------------\nI        A log stream name can be either an unqualified name or a\nI        qualified name, as defined for MVS data set names:\nN\nI        -> Unqualified name: 1 through 8 alphanumeric or national\nI           characters ($ # @), or a hyphen. The first character of the\nI           name must be alphabetic or national (A-Z $ # @).\nN\nI        -> Qualified name: Multiple names joined by periods, up to a\nI           maximum of 26 characters. Each name in a qualified name must\nI           follow the rules for an unqualified name, with each qualified\nI           name (except the last) followed by a period. For example,\nN\nI           name_1.name_2...name_n\nI           where the number of names is restricted by the 26-character\nI           limit.\nN\nI           For more information about the rules for qualified and\nI           unqualified data set names, see z/OS MVS JCL Reference.\nN\nI        You can construct log stream names consisting of a mixture of\nI        specific characters (from within the allowed set), and symbolic\nI        names for substitution. After substitution, the name must meet\nI        the rules for qualified and unqualified log stream names, and\nI        must not exceed 26 characters, including periods. Thus, if each\nI        name in a qualified name uses the maximum of eight characters,\nI        you are restricted to three names only, with the first and\nI        second names, and the second and third names separated by a\nI        period. For example:\nN\nI          CICSDA##.CICSDAA1.FWDRECOV\nN\nI        for a forward recovery log stream. The log stream name is\nI        determined by symbolic substitution when a journal name is first\nI        resolved to a JOURNALMODEL definition.\nN\nI      By specifying the same log stream name for multiple CICS general\nI      logs, you can merge the log streams from different CICS regions.\nI      However, you cannot merge general log streams with the CICS system\nI      log, nor can you merge system logs from different CICS regions.\nN\nI      When merging log streams from different CICS systems, the log data\nI      blocks are written to their log streams in strict MVS system logger\nI      time-stamp sequence. However, the individual records from different\nI      CICS regions may not be in strict time-stamp sequence across\nI      different blocks.\nN\nI      CICS log streams should not be merged with log streams generated\nI      by other products unless any programs that read the log stream are\nI      prepared to handle the formats.\nN\nI      Security note: When you have defined a log stream name to CICS and\nI      the MVS system logger, you must ensure that the required security\nI      authorizations are defined to RACF (or an equivalent external\nI      security manager). This security authorization is necessary before\nI      you attempt to start a CICS region that references a new log\nI      stream. RACF supports the LOGSTRM general resource class for this\nI      purpose.\nN\nD    TYPE(MVS | DUMMY | SMF)\nI      Specifies where the journal records are to be\nI      written. It can be up to five characters, and can have the\nI      following values:\nN\nI      DUMMY: No log records are to be written. For example, you can use\nI        this to suppress unwanted log records without changing an\nI        application, or without changing file or profile resource\nI        definitions.\nN\nI        If you do not want a system log or a log-of-logs, specify DUMMY\nI        on the JOURNALMODEL definitions for the DFHLOG, DFHSHUNT, and\nI        DFHLGLOG, as required.\nN\nI      MVS: Records are to be written to an MVS system logger log stream.\nI        The name of the log stream is specified in the STREAMNAME\nI        attribute.\nN\nI      SMF: Journal records are to be written in SMF format to the MVS\nI        SMF log instead of to an MVS system logger log stream.\nN\nI        Note: SMF is not allowed for the CICS system log or for forward\nI        recovery logs.\nN\nNThe default JOURNALMODEL\nN------------------------\nNIf CICS cannot find an installed JOURNALMODEL definition, it assumes\nNa set of default attributes.\nN\nNThe attributes used are those of the following \"built-in\" default\nNdefinition:\nN\nI  DEFINE JOURNALMODEL(OTHERS) GROUP(LOGS)\nI    JOURNALNAME(*)\nI    STREAMNAME(&USERID..&APPLID..&JNAME.)\nI    TYPE(MVS)\nN\nNJOURNALNAME(*) is the default journal model that CICS uses if there\nNis no matching JOURNALMODEL entry for a journal name.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG16": {"ttr": 6149, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG16\nTCICS\nT-RDG\nT-Chapter 16. JVMSERVER resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 16. JVMSERVER resources\nN===============================\nNA JVMSERVER resource defines the runtime environment for a JVM server.\nN\nNThe JVMSERVER resource defines the location of the JVM profile and the\nNLanguage Environment options that are required to create a Language\nNEnvironment enclave and a JVM server in a CICS region.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1601": {"ttr": 6151, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1601\nTCICS\nT-RDG\nT-Chapter 16. JVMSERVER resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180219-072055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 16. JVMSERVER resources\nN===============================\nNJVMSERVER attributes\nN--------------------\nNDescribes the syntax and attributes of the JVMSERVER resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    JVMSERVER(name)\nI      Specifies the 1 - 8 character name of the JVMSERVER\nI      resource.\nN\nI      It is preferable not to use names that start with DFH because these\nI      characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    JVMPROFILE(jvmprofile)\nI      Specifies the 1 - 8 character name of the\nI      JVM profile containing the JVM options for running a JVM server.\nI      The file containing the JVM profile must have a file extension of\nI      .jvmprofile.\nN\nI      -> For a JVM profile for a JVMSERVER resource defined by online\nI         resource definition, the file path is specified by the system\nI         initialization parameter JVMPROFILEDIR.\nN\nI      -> For a JVM profile for a JVMSERVER resource that is defined in a\nI         CICS bundle, the file path is relative to the root directory of\nI         the CICS bundle. The file containing the JVM profile must be\nI         packaged in the CICS bundle with the JVMSERVER resource. For\nI         more information, see \"Referencing zFS artifacts in a bundle\".\nN\nI      The JVM profile name cannot consist of a single or double period.\nI      The set of acceptable characters in the JVM profile name is more\nI      restricted when the JVMSERVER resource is defined in a CICS bundle\nI      using CICS Explorer.\nN\nD    LERUNOPTS(DFHAXRO | program)\nI      Specifies the 1 - 8 character name of\nI      the program that defines the runtime options for the Language\nI      Environment enclave. DFHAXRO is a supplied program that provides\nI      a set of default values. The source for DFHAXRO is in the\nI      hlq.SDFHSAMP library if you want to change the defaults for any\nI      of the Language Environment runtime options.\nN\nI      If you want to use a different program, put the program in the\nI      hlq.SDFHLOAD library and specify the program name in uppercase\nI      characters.\nN\nD    THREADLIMIT(number)\nI      Specifies the maximum number of threads\nI      that are allowed in the Language Environment enclave for the JVM\nI      server. Each thread runs under a T8 TCB.\nN\nI      You can specify a limit in the range of 1 - 256 threads.\nN\nI      If you specify a thread limit that exceeds the maximum of 2000\nI      threads that is allowed for the CICS region, taking into account\nI      all other enabled and disabled JVMSERVER resources, CICS allocates\nI      the remaining threads up to 2000 to the resource as the thread\nI      limit value. If CICS is already at the maximum number of\nI      JVMSERVER threads, the resource installs in a disabled state.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the initial status of the\nI      JVMSERVER resource when it is installed.\nN\nI      ENABLED: The JVM server runtime environment is available for use.\nN\nI      DISABLED: The JVM server runtime environment is not available for\nI        use.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG17": {"ttr": 6153, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG17\nTCICS\nT-RDG\nT-Chapter 17. LIBRARY resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 17. LIBRARY resources\nN=============================\nNUse the LIBRARY resource to define the physical and operational\nNcharacteristics of a dynamic program LIBRARY concatenation.\nN\nNThe LIBRARY definition includes attributes that provide the name of the\nNdata set, or sets, within the LIBRARY resource and other details about\nNthe operational status of the LIBRARY.\nN\nNDFHRPL is a special example of a LIBRARY which cannot be altered in a\nNrunning CICS system, and does not appear as a resource in CEDA.\nN\nNData sets in a dynamic program LIBRARY concatenation can reside in the\nNextended addressing space (EAS) of an extended address volume (EAV)\nNDASD volume.\nN\nNThere is no 'group commit' for LIBRARY resources. Each LIBRARY in a\nNCSD group is committed separately when the group is installed. To\nNachieve an effect similar to group install, you can use the Disabled\nNstatus to install a set of LIBRARY resources which would then be SET\nNto an Enablestatus of Enabled when all resources are installed.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1701": {"ttr": 6401, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1701\nTCICS\nT-RDG\nT-Chapter 17. LIBRARY resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-100055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 17. LIBRARY resources\nN===============================\nNLIBRARY attributes\nN------------------\nNDescribes the syntax and attributes of the LIBRARY resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    LIBRARY(name)\nI      The name of the LIBRARY resource.\nN\nI      For a LIBRARY resource that is defined in a CICS region, a CICSPlex\nI      SM data repository, or a standalone CICS bundle, the resource name\nI      is used as the DD name for the LIBRARY concatenation of data sets.\nI      The name of the LIBRARY resource must therefore conform to the\nI      rules for a valid DD name (1-8 characters with the first character\nI      any of A-Z, $, # or @ and the remaining characters any of\nI      A-Z, 1-9, $, # or @). Avoid using names that conflict with other\nI      DD names used by the installation. The create of a public LIBRARY\nI      resource fails if the chosen name conflicts with a DD name already\nI      in use in the system for another public LIBRARY resource.\nN\nI      For a private LIBRARY resource that is defined in a CICS bundle\nI      that is packaged and installed as part of an application bundle or\nI      application binding bundle, the name of the LIBRARY resource is not\nI      used as the DD name for the LIBRARY concatenation of data sets.\nI      Instead, CICS requests a unique DD name for the LIBRARY\nI      concatenation of data sets when the application is installed on the\nI      platform. The resource name can therefore be the same as LIBRARY\nI      names used elsewhere in the installation, or by different versions\nI      of the application. CICS issues message DFHLD0518 to state the DD\nI      name that z/OS has generated for the LIBRARY concatenation. You can\nI      also view the data set names for an installed application in the\nI      CICS Explorer.\nN\nI      The following reserved names are not accepted for a LIBRARY\nI      resource:\nN\nI      -> DFHRPL or any name that starts with DFH\nI      -> Any name that starts with EYU\nI      -> CEEDUMP\nI      -> DUMMY\nI      -> JOBCAT\nI      -> JOBLIB\nI      -> STEPCAT\nI      -> STEPLIB\nI      -> SYSABEND\nI      -> SYSIN\nI      -> SYSMDUMP\nI      -> SYSOUT\nI      -> SYSUDUMP\nN\nI      LIBRARY resource names beginning with DFH or EYU are not accepted,\nI      to ensure that these names remain available in future for use by\nI      CICS. LIBRARY resource names beginning with CEE should be used with\nI      caution, but are accepted. SYSIN and SYSOUT and DUMMY are\nI      conventionally used as DD cards and are therefore inadvisable as\nI      LIBRARY resource names. The remainder are DD names reserved by MVS;\nI      DFHRPL is reserved for use in the CICS startup JCL as the name of\nI      the static LIBRARY.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    CRITICAL(NO | YES)\nI      Indicates whether this LIBRARY is critical to\nI      the running of CICS. This determines the behavior if the LIBRARY\nI      cannot be installed during startup, for example if a data set in\nI      the LIBRARY definition is not found or cannot be allocated for one\nI      of the following reasons:\nN\nI      -> If the LIBRARY is CRITICAL\nN\nI        -> If the LIBRARY is being created during CICS startup (through\nI           grouplist install, BAS install, a PLTPI program or restore\nI           from the catalog), a 'GO or CANCEL' message is issued so that\nI           the operator can decide whether to override the criticality\nI           and allow CICS to start, or to cause the startup to be failed.\nI           If the reply is to continue with the startup, the LIBRARY is\nI           not recataloged as NONCRITICAL, but the critical status can\nI           be changed to NONCRITICAL if you decide that the LIBRARY is\nI           not to be regarded as CRITICAL in future.\nN\nI        -> If the LIBRARY is not being created during CICS startup, the\nI           criticality of the LIBRARY has no impact on the behavior of\nI           the installation.\nN\nI      -> If the LIBRARY is non-CRITICAL\nN\nI        -> If the LIBRARY is being created during CICS startup (through\nI           grouplist install, BAS install, a PLTPI program or restore\nI           from the catalog), the LIBRARY is installed but disabled, a\nI           warning message is issued, and CICS startup continues. A later\nI           attempt can be made to resolve the problem and enable the\nI           LIBRARY.\nN\nI        -> If the LIBRARY is not being installed during CICS startup,\nI           the criticality of the LIBRARY has no impact on the behavior\nI           of the installation.\nN\nI      DFHRPL, the static LIBRARY, is predefined as CRITICAL and cannot\nI      be changed. Any problems cause CICS startup to fail and an error\nI      message is issued.\nN\nI      For a private LIBRARY resource that is defined in a CICS bundle\nI      that is packaged and installed as part of an application bundle\nI      or application binding bundle, the CRITICAL attribute is ignored.\nN\nD    RANKING(50 | 1-9 | 11-99)\nI      RANKING is a fullword binary value that contains a\nI      decimal number that determines where this LIBRARY appears in the\nI      overall LIBRARY search order.\nN\nI      A lower number indicates that this LIBRARY is searched for programs\nI      to load before other LIBRARY resources with higher ranking numbers.\nI      The ranking is analogous to the concatenation number of a data set\nI      in a LIBRARY concatenation, although it has some differences.\nN\nI      RANKING can take values 1 - 99, with a default of 50. The value 10\nI      is reserved for DFHRPL, the static LIBRARY, and cannot be\nI      specified.\nN\nI      The DFHRPL concatenation is assigned a predefined ranking of 10,\nI      which cannot be changed. This value enables dynamically defined\nI      LIBRARY resources to be placed before the DFHRPL concatenation in\nI      the overall search order by giving them a ranking value less\nI      than 10.\nN\nI      Note:\nI      -> You should regard having LIBRARY resources with a ranking that\nI         places them before DFHRPL in the search order as a temporary\nI         situation.\nN\nI      -> Although the predefined DFHRPL ranking of 10 is intended to\nI         discourage the placing of LIBRARY resources before DFHRPL in\nI         the search order, it does not limit the total number of LIBRARY\nI         resources that can be placed before DFHRPL providing the ranking\nI         between the LIBRARY resources themselves is not significant. If\nI         you specify a RANKING value of less than 10, a message to say\nI         that this LIBRARY appears ahead of DFHRPL in the search order\nI         is issued.\nN\nI      -> No ranking change takes effect until a NEWCOPY or PHASEIN\nI         request is issued, or the program is loaded for the first time\nI         if it was not already loaded.\nN\nI      -> The search order of LIBRARYs with the same ranking is undefined,\nI         and implies that the relative search order of the LIBRARY\nI         resources is unimportant. In practice, the search order is the\nI         order in which the LIBRARYs were installed.\nN\nI      -> A LIBRARY resource that is defined in a CICS bundle as part of\nI         an application installed on a platform is private to that\nI         version of that application. These LIBRARY concatenations are\nI         only searched for tasks for that version of the application.\nN\nI      -> LIBRARYs can have the same ranking but you should not use equal\nI         ranking values for two LIBRARY resources if their relative\nI         search positions are of any significance.\nN\nI      -> The search positions of two LIBRARY resources of the same\nI         ranking are not reliable. The search order is related to the\nI         time each resource is installed, and can change after a COLD\nI         or INITIAL start or when changing the ranking of a LIBRARY.\nI         The resource that is installed first appears ahead of the other\nI         LIBRARY in the search order.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Indicates whether the LIBRARY is to be\nI      enabled or disabled when it is created.\nN\nI      When a LIBRARY is created as enabled, CICS attempts to allocate\nI      and then concatenate the data sets, before finally opening the\nI      LIBRARY concatenation. If any of these steps fail, the steps that\nI      are already successful are undone, and the LIBRARY is installed as\nI      disabled. A message is issued that indicates which step failed.\nN\nI      When a LIBRARY is created with as disabled, CICS does not attempt\nI      to allocate or concatenate the data sets.\nN\nI      This attribute is ignored for LIBRARY resources that are\nI      dynamically generated by a CICS bundle. The initial status of a\nI      LIBRARY resource is derived from the initial status of the bundle\nI      that defines the resource.\nN\nNdata set names:\nN---------------\nD    DSNAME01(char44)\nD    DSNAME02(char44)\nD    DSNAME03(char44)\nD    DSNAME04(char44)\nD    DSNAME05(char44)\nD    DSNAME06(char44)\nD    DSNAME07(char44)\nD    DSNAME08(char44)\nD    DSNAME09(char44)\nD    DSNAME10(char44)\nD    DSNAME11(char44)\nD    DSNAME12(char44)\nD    DSNAME13(char44)\nD    DSNAME14(char44)\nD    DSNAME15(char44)\nD    DSNAME16(char44)\nI      The names of up to 16 data sets that contain\nI      program artifacts and that are to make up the LIBRARY\nI      concatenation. When the LIBRARY is installed, the data sets are\nI      concatenated together in the order in which they are named, for\nI      example, DSNAME01 before DSNAME02. It is not necessary for all of\nI      the data set attributes to be completed sequentially, for example,\nI      DSNAME01 might be blank. However, at least one of the data set\nI      attributes must have a value. See the CICS System Definition\nI      Guide for further information.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG18": {"ttr": 6403, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG18\nTCICS\nT-RDG\nT-Chapter 18. LSRPOOL resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 18. LSRPOOL resources\nN=============================\nNThe LSRPOOL resource defines the size and characteristics of the local\nNshared resources (LSR) pool. The LSR pool is a reserve of data buffers,\nNstrings, and Hiperspace buffers that VSAM uses when processing access\nNrequests for certain files.\nN\nNA Hiperspace buffer is a high-performance storage area in the MVS\nNimage. This area is used for reading and writing 4 KB pages. The type\nNof Hiperspace used by VSAM resides entirely in expanded storage, which\nNis additional processor storage used only for paging to and from real\nNstorage.\nN\nNUp to 255 LSR pools can be defined concurrently in the system, each\nNidentified by its LSRPOOLNUM. This LSRPOOLNUM is used to associate a\nNFILE with an LSR pool if that file is to use shared resources.\nN\nNWhen the LSRPOOL definition is installed in the active system, its\nNinformation is stored and used when the pool with the specified ID is\nNnext built. A pool is built when the first file that uses a particular\nNLSR pool is opened, and is dynamically deallocated only when no files\nNare currently open against that pool. This means that when an LSRPOOL\nNdefinition is installed into the system it might not take effect\nNimmediately.\nN\nNCICS sets default attributes if an LSRPOOL is not defined, but you are\nNadvised to define the LSRPOOL anyway, for reasons of performance. In a\nNproduction system, for example, delay might be incurred while pool\nNrequirements are being calculated by CICS. Another possible problem is\nNthat if files are not allocated at the time the pool is built, the\nNdata set names are not known to CICS. In this case, the pool is\nbuilt based on the information available, but the subsequent performance\nNof the system can suffer or files might fail to open.\nN\nNYou can associate the CSD file with a particular LSRPOOL by specifying\nNthe CSDLSRNO system initialization parameter. The default is pool 1;\nNensure that sufficient buffers of an appropriate size are provided to\nNpermit the CSD file to be used by CICS. See the CICS System Definition\nNGuide for further information about CSDLSRNO and for details about\nNcalculating the buffer requirements for the CSD file.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1801": {"ttr": 6405, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1801\nTCICS\nT-RDG\nT-Chapter 18. LSRPOOL resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-100355\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 18. LSRPOOL resources\nN===============================\nNLSRPOOL attributes\nN------------------\nNDescribes the syntax and attributes of the LSRPOOL resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    LSRPOOL(name)\nI      Specifies the name of the local shared resource pool\nI      being defined. The name can be up to 8 characters in length.\nN\nI      If only DATA BUFFERS is specified, one set of buffers is built for\nI      the pool to be used for both the index and the data components of\nI      a VSAM KSDS data set.\nN\nI      If no data buffers are specified, CICS calculates the buffers\nI      required for both data and index components, both components\nI      sharing the same set of buffers. If INDEX BUFFERS is specified,\nI      two parts of the pool are built, one for data and the other for\nI      index buffers. If you specify INDEX BUFFERS, you must also specify\nI      DATA BUFFERS.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nI    LSRPOOLID({1|lsrpool}): This attribute is obsolete, but is supported\nI      to provide compatibility with earlier releases of CICS.\nN\nI      The value specified for LSRPOOLID in existing definitions is\nI      transferred to the new option LSRPOOLNUM.\nN\nD    LSRPOOLNUM(1 | number)\nI      Specifies the identifier of the local shared\nI      resource pool that is being defined.\nN\nI      The value must be in the range 1 through 255.\nN\nD    MAXKEYLENGTH(number)\nI      Specifies the maximum key length of any of the\nI      files that are to share resources. The value must be in the range\nI      0 through 255. This value overrides part of the CICS resource\nI      calculation. If you do not specify it, CICS determines the maximum\nI      key length, recalculating it each time the LSR is rebuilt.\nN\nD    SHARELIMIT(number)\nI      Specifies, as an integer, the percentage of the\nI      maximum amount of VSAM resources to be allocated. The number can\nI      be any value from 1 through 100.\nN\nI      Specify SHARELIMIT if CICS is to calculate the maximum amount of\nI      resources required by the VSAM files that are to share resources.\nI      Because these resources are to be shared, some percentage of this\nI      maximum amount of resources must be allocated. If this attribute\nI      is omitted, 50 percent of the maximum amount of resources is\nI      allocated.\nN\nI      If both the STRINGS and SIZE attributes are specified, SHARELIMIT\nI      has no effect.\nN\nD    STRINGS(number)\nI      Specifies the limit, in the range 1 through 255,\nI      of all the strings of the files in the pool. For more information,\nI      see Number of buffers and strings for LSR and NSR pools in\nI      Improving performance.\nN\nN\nNData buffers:\nN-------------\nNSpecify the number of data buffers of each size that you require, in\nNthe range 3 through 32767. These attributes do not have default\nNvalues.\nN\nD    DATA512(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 512 byte data buffers you require.\nN\nD    DATA1K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 1 KB data buffers you require.\nN\nD    DATA2K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 2 KB data buffers you require.\nN\nD    DATA4K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 4 KB data buffers you require.\nN\nD    DATA8K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 8 KB data buffers you require.\nN\nD    DATA12K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 12 KB data buffers you require.\nN\nD    DATA16K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 16 KB data buffers you require.\nN\nD    DATA20K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 20 KB data buffers you require.\nN\nD    DATA24K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 24 KB data buffers you require.\nN\nD    DATA28K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 28 KB data buffers you require.\nN\nD    DATA32K(number)\nI      Specifies the number, in the range 3 through 32767,\nI      of 32 KB data buffers you require.\nN\nNIndex buffers:\nN--------------\nNSpecify the number of index buffers of each size that you require, in\nNthe range 3 through 32767. If you leave these fields blank, there are\nNno default values.\nN\nD    INDEX512(number)\nN      Specifies the number, in the range 3 through\nI      32767, of 512 byte index buffers you require.\nN\nD    INDEX1K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 1 KB index buffers you require.\nN\nD    INDEX2K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 2 KB index buffers you require.\nN\nD    INDEX4K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 4 KB index buffers you require.\nN\nD    INDEX8K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 8 KB index buffers you require.\nN\nD    INDEX12K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 12 KB index buffers you require.\nN\nD    INDEX16K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 16 KB index buffers you require.\nN\nD    INDEX20K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 20 KB index buffers you require.\nN\nD    INDEX24K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 24 KB index buffers you require.\nN\nD    INDEX28K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 28 KB index buffers you require.\nN\nD    INDEX32K(number)\nI      Specifies the number, in the range 3 through\nI      32767, of 32 KB index buffers you require.\nN\nNHIPERSPACE DATA BUFFERS\nN-----------------------\nNSpecify the number of Hiperspace data buffers of each size that you\nNrequire, in the range 0 through 16777215. If you leave these fields\nNblank, there are no default values.\nN\nNNote: If you specify a value for a Hiperspace data buffer of a given\nNsize, you must also specify a value for the data buffer of the same\nNsize.\nN\nD    HSDATA4K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 4 KB Hiperspace data buffers you require.\nN\nD    HSDATA8K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 8 KB Hiperspace data buffers you require.\nN\nD    HSDATA12K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 12 KB Hiperspace data buffers you require.\nN\nD    HSDATA16K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 16 KB Hiperspace data buffers you require.\nN\nD    HSDATA20K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 20 KB Hiperspace data buffers you require.\nN\nD    HSDATA24K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 24 KB Hiperspace data buffers you require.\nN\nD    HSDATA28K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 28 KB Hiperspace data buffers you require.\nN\nD    HSDATA32K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 32 KB Hiperspace data buffers you require.\nN\nNHIPERSPACE INDEX BUFFERS\nN------------------------\nNSpecify the number of Hiperspace index buffers of each size that you\nNrequire, in the range 0 through 16777215. If you leave these fields\nNblank, there are no default values.\nN\nNNote: If you specify a value for a Hiperspace index buffer of a given\nNsize, you must also specify a value for the index buffer of the same\nNsize.\nN\nD    HSINDEX4K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 4 KB Hiperspace index buffers you require.\nN\nD    HSINDEX8K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 8 KB Hiperspace index buffers you require.\nN\nD    HSINDEX12K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 12 KB Hiperspace index buffers you require.\nN\nD    HSINDEX16K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 16 KB Hiperspace index buffers you require.\nN\nD    HSINDEX20K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 20 KB Hiperspace index buffers you require.\nN\nD    HSINDEX24K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 24 KB Hiperspace index buffers you require.\nN\nD    HSINDEX28K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 28 KB Hiperspace index buffers you require.\nN\nD    HSINDEX32K(number)\nI      Specifies the number, in the range 0 through\nI      16777215, of 32 KB Hiperspace index buffers you require.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG19": {"ttr": 6407, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG19\nTCICS\nT-RDG\nT-Chapter 19. MAPSET resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 19. MAPSET resources\nN============================\nNA MAPSET resource defines a BMS map sets.\nN\nNEach interactive application using a display device can use specific\nNscreen layouts, or maps. These are not specified in the program itself.\nNInstead, you use basic mapping support (BMS). This gives greater\nNflexibility and allows the maps to be used by multiple invocations of\nNthe same program, or by several different programs. You specify maps,\nNand the fields on them, using the DFHMSD, DFHMDI, and DFHMDF macros.\nN\nNFor further guidance on this, see the\nNSC34-7158-02 CICS Application Programming Guide.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG1901": {"ttr": 6657, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG1901\nTCICS\nT-RDG\nT-Chapter 19. MAPSET resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-102055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 19. MAPSET resources\nN============================\nNMAPSET attributes\nN-----------------\nNDescribes the syntax and attributes of the MAPSET resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    MAPSET(name)\nI      Specifies the name of this MAPSET definition. The\nI      name can be up to eight characters in length.\nN\nI      Do not use map set names beginning with DFH, because these\nI      characters are reserved for use by CICS.\nN\nI      For a BMS device-dependent map set, the map set name must be\nI      derived by adding the map set suffix to the original (1-to\nI      7-character) map set name. The suffix depends on the parameter\nI      specified in the TERM operand of the DFHMSD macro instruction that\nI      defined the map set.\nN\nI      To use device-dependent suffixes, you need to specify BMS=(,,,DDS)\nI      as a system initialization parameter. For information on map set\nI      suffixes, see the CICS Application Programming Guide.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    RESIDENT(NO | YES)\nI      Specifies the residence status of the map set.\nN\nI      NO: The map set is not to be permanently resident.\nN\nI      YES: The map set is to be loaded on first reference and is then\nI        to be permanently resident in virtual storage, but is to be\nI        pageable by the operating system.\nN\nI    RSL: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Appendix A, \"Obsolete attributes\".\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the map set status.\nN\nI      DISABLED: The map set may not be used.\nN\nI      ENABLED: The map set may be used.\nN\nD    USAGE(NORMAL | TRANSIENT)\nI      Specifies when the storage for this map\nI      set will be released.\nN\nI      NORMAL: When the use count of the map set reaches zero, it will\nI        become eligible for removal from storage as part of the normal\nI        dynamic storage compression process.\nN\nI      TRANSIENT: When the use count for this map set becomes zero, the\nI        storage for this map set is released. This value should be\nI        specified for map sets that are referenced infrequently.\nN\nD    USELPACOPY(NO | YES)\nI      Specifies whether the map set is to be used\nI      from the link pack area (LPA).\nN\nI      NO: The map set is not to be used from the LPA. It is loaded into\nI        the CICS partition.\nN\nI      YES: The map set can be used from the LPA if LPA=YES is specified\nI        as a system initialization parameter. The use of the map set from\nI        the LPA requires that it has been installed there and that the\nI        map set is not named by the PRVMOD start-up option. For further\nI        guidance on this, see the CICS Transaction Server for\nI        z/OS Installation Guide.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG20": {"ttr": 6659, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG20\nTCICS\nT-RDG\nT-Chapter 20. MQCONN resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 20. MQCONN resources\nN============================\nNAn MQCONN resource defines the attributes of the connection between\nNCICS and WebSphere MQ. You can install or discard an MQCONN resource\nNonly when CICS is not connected to WebSphere MQ.\nN\nNOnly one MQCONN resource can be installed at a time in a CICS region.\nNWhen you define an MQCONN resource, CICS checks to ensure that there\nNis only one MQCONN resource defined in the group or list. If more than\nNone is found, even one with a different name, a warning message is\nNissued. If you do install a second MQCONN resource, CICS implicitly\nNdiscards the existing MQCONN resource before proceeding with the\nNinstallation, unless you are reinstalling an MQCONN resource with the\nNsame name.\nN\nNWhen you have installed the MQCONN resource, you can use the CEMT or\nNEXEC CICS SET MQCONN command, CICSPlex SM, or the CICS Explorer to\nNstart the connection between CICS and WebSphere MQ.\nN\nNWhen you install an MQCONN resource that includes a setting for the\nNINITQNAME attribute, CICS also dynamically creates and installs an\nNMQINI resource. The MQINI resource represents the default initiation\nNqueue that is specified by the INITQNAME attribute of the MQCONN\nNresource. The name of the MQINI resource is DFHMQINI, and its attribute\nNINITQNAME specifies the initiation queue name.\nN\nNYou can use the EXEC CICS or CEMT INQUIRE MQINI command to inquire on\nNthe INITQNAME attribute of the dynamically created MQINI resource. If\nNyou want to change it, you must reinstall the MQCONN resource with an\nNappropriate INITQNAME attribute. The MQINI resource is discarded when\nNthe MQCONN resource is discarded.\nN\nNWhen you discard an MQCONN resource that includes a setting for the\nNINITQNAME attribute, the dynamically created MQINI resource that\nNrepresents the default initiation queue specified by the INITQNAME\nNattribute is also discarded.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2001": {"ttr": 6661, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2001\nTCICS\nT-RDG\nT-Chapter 20. MQCONN resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-102555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 20. MQCONN resources\nN============================\nNMQCONN attributes\nN-----------------\nNDescribes the syntax and attributes of the MQCONN resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    MQCONN(name)\nI      Specifies the 8-character name of this resource\nI      definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    INITQNAME(name)\nI      Specifies the 1 - 48 character name of the default\nI      initiation queue for this CICS-WebSphere MQ connection.\nN\nI      When you install the MQCONN resource definition, if you specify a\nI      non-blank INITQNAME attribute, CICS installs an implicit MQINI\nI      resource to represent the default initiation queue. The name of\nI      the MQINI resource is DFHMQINI, and its attribute INITQNAME\nI      specifies the default initiation queue name. You can inquire on\nI      this resource, but you cannot explicitly create, discard, or set\nI      the resource. If you want to change it, you must reinstall the\nI      MQCONN resource definition with an appropriate INITQNAME attribute.\nN\nI      If you specify the name of a default initiation queue when you\nI      start the CICS-WebSphere MQ connection by using the CKQC START\nI      command, the setting for the INITQNAME attribute in the installed\nI      MQINI resource definition is replaced with the name of the default\nI      initiation queue that you specified on the command.\nN\nD    MQNAME(name)\nI      Specifies the 1 - 4 character name of either a single\nI      WebSphere MQ queue manager, or a queue-sharing group of WebSphere\nI      MQ queue managers.\nN\nI      -> If you specify a single queue manager, when you start the\nI         CICS-WebSphere MQ connection, CICS connects only to this queue\nI         manager.\nN\nI      -> If you specify a queue-sharing group, when you start the\nI         connection, CICS connects to any active member of this group\nI         on the same LPAR. Use the RESYNCMEMBER attribute to specify\nI         what happens when CICS is holding outstanding units of work\nI         for the last queue manager to which it connected from the\nI         queue-sharing group.\nN\nI      -> If you specify RESYNCMEMBER(GROUPRESYNC) then MQNAME must be\nI         the name of a queue-sharing group.\nN\nI      The name of the queue manager or queue-sharing group must not\nI      start with a numeric character.\nN\nI      WebSphere MQ uses the @ symbol to pad queue-sharing group names\nI      that are less than four characters long. When you specify a\nI      queue-sharing group that is less than four characters long, do not\nI      include the @ symbols at the end; CICS adds the padding before\nI      querying the queue-sharing group. For example, if the\nI      queue-sharing group is defined to WebSphere MQ as DEV@, specify\nI      DEV as the value of the MQNAME attribute.\nN\nI      If you specify the name of an alternative WebSphere MQ queue\nI      manager or queue-sharing group on the CEMT or\nI      EXEC CICS SET MQCONN command, or specify a queue manager name when\nI      you start the CICS-WebSphere MQ connection by using the\nI      CKQC START command, CICS connects to that alternative queue\nI      manager or queue-sharing group. In addition, your setting for the\nI      MQNAME attribute in the installed MQCONN definition is replaced\nI      with the name of the queue manager or queue-sharing group that you\nI      specified on the command. If you want to revert to the original\nI      queue manager or queue-sharing group, set MQNAME again.\nN\nD    RESYNCMEMBER(YES | NO | GROUPRESYNC)\nI      This attribute applies only if\nI      you use the MQNAME attribute to specify a WebSphere MQ\nI      queue-sharing group. RESYNCMEMBER specifies the strategy that\nI      CICS adopts if outstanding units of work are being held for the\nI      last queue manager to which CICS was connected from the\nI      queue-sharing group.\nN\nI      Changing the setting for RESYNCMEMBER must be done only when all\nI      resources are in a consistent state; that is, there are no indoubt\nI      units of work outstanding otherwise CICS is not able to\nI      resynchronize the WebSphere MQ units of work. It is important to\nI      ensure that all resources are in a consistent state before changing\nI      RESYNCMEMBER to or from GROUPRESYNC.\nN\nI      YES: CICS connects to the same queue manager, waiting, if\nI        necessary, until the queue manager becomes active to resolve\nI        the indoubt units of work. YES is the default.\nN\nI      NO: CICS makes one attempt to connect to the same queue manager.\nI        If that attempt fails, CICS connects to any member of the\nI        queue-sharing group and issues the warning message DFHMQ2064\nI        about the outstanding units of work.\nN\nI      GROUPRESYNC: CICS connects to any member of the queue-sharing\nI        group. The queue manager is chosen by WebSphere MQ and it asks\nI        CICS to resolve indoubt units of work on behalf of all eligible\nI        queue managers in the queue-sharing group. This function is\nI        called group unit of recovery. The GROUPRESYNC option can be\nI        used only when you are running WebSphere MQ 7.1, or higher, that\nI        supports group unit of recovery for CICS and when group unit of\nI        recovery is enabled in the queue managers.\nN\nI      The main use of the GROUPRESYNC option is with shared queues, but\nI      it can be used with private queues. Messages on shared queues are\nI      resolved immediately, but resolution of private queues occurs when\nI      the owning queue manager restarts. If using private queues, it can\nI      be convenient to define the queues with QSGDISP(GROUP).\nN\nI      QSGDISP(GROUP) ensures that an instance of the private queue exists\nI      on every manager in the queue sharing group, so that in the event\nI      of failure and reconnection to a different queue manager, the\nI      application can continue using the new queue instance. The\nI      application would need to be able to tolerate using a new queue\nI      instance.\nN\nI      Do not change the setting for RESYNCMEMBER when units of work\nI      are outstanding in WebSphere MQ, because units of work cannot be\nI      resolved. A unit of work held in CICS is identified with a resource\nI      manager qualifier. When RESYNCMEMBER(GROUPRESYNC) is used the\nI      qualifier is the name of the queue-sharing group, otherwise the\nI      qualifier used is the name of the individual queue manager.\nN\nI      Units of work that are shunted indoubt are not included in this\nI      process, because CICS itself cannot resolve those units of work\nI      at this time.\nN\nI      Resynchronization for those UOWs occurs when CICS has\nI      resynchronized with its remote coordinator.\nN\nI      If you share a CICS system definition data set (CSD) with an\nI      earlier release of CICS an MQCONN definition specifying\nI      RESYNCMEMBER(GROUPRESYNC) is installed as RESYNCMEMBER(NO).\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG21": {"ttr": 6663, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG21\nTCICS\nT-RDG\nT-Chapter 21. PARTITIONSET resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 21. PARTITIONSET resources\nN==================================\nNA PARTITIONSET resource defines a partition set, that is, is a table\nNthat describes to CICS how to partition a display screen.\nN\nNPartition sets are created by coding and assembling a series of\nNcommands.\nN\nNThe screen areas of some display devices (the 8775 Display Terminal and\nNthe IBM 3290 Information Panel, for example), can be divided into\nNpartitions, which can be treated as several different small displays.\nNDifferent programs or program steps in a transaction can write to or\nNreceive input from different partitions.\nN\nNYou specify the partition set with DFHPSD and DFHPDI macros, described\nNfor programming purposes in the CICS Application Programming Reference.\nN\nNYou specify each different partition configuration as a PARTITIONSET.\nNPARTITIONSET definitions are created using CEDA or DFHCSDUP, or they\nNcan be autoinstalled if the appropriate system initialization\nNparameters have been set. See \"Autoinstalling programs, map sets, and\nNpartition sets\" for information.\nN\nNYou can name the PARTITIONSET that you want the transaction to use in\nNthe TRANSACTION definition. When the transaction starts, the\nNinformation is loaded into the internal buffer of the display device.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2101": {"ttr": 6665, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2101\nTCICS\nT-RDG\nT-Chapter 21. PARTITIONSET resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-103055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 21. PARTITIONSET resources\nN==================================\nNPARTITIONSET attributes\nN-----------------------\nNDescribes the syntax and attributes of the PARTITIONSET resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PARTITIONSET(name)\nI      Sspecifies the name of this PARTITIONSET\nI      definition. The name can be up to eight characters in length.\nN\nI      It is preferable not to use names that start with DFH because these\nI      characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nI      For a device-dependent partition set, the partition set name must\nI      be derived by adding the partition set suffix to the original\nI      (1- to 6-character) partition set name. The suffix depends on the\nI      parameter specified in the SUFFIX operand of the DFHPSD macro\nI      instruction that defined the partition set.\nN\nI      To use device-dependent suffixes, you need to specify BMS=(,,,DDS)\nI      as a system initialization parameter.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    RESIDENT(NO | YES)\nI      Specifies the residence status of the partition\nI      set.\nN\nI      NO: The partition set is not to be permanently resident.\nN\nI      YES: The partition set is to be loaded on first reference and is\nI        then to be permanently resident in virtual storage, but is to be\nI        pageable by the operating system.\nN\nI    RSL: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Appendix A, \"Obsolete attributes\".\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the partition set status.\nN\nI      DISABLED: The partition set may not be used.\nN\nI      ENABLED: The partition set may be used.\nN\nD    USAGE(NORMAL | TRANSIENT)\nI      Specifies when the storage for this\nI      partition set is released.\nN\nI      NORMAL: When the use count for this partition set reaches zero,\nI        it becomes eligible for removal from storage as part of the\nI        normal dynamic program compression process.\nN\nI      TRANSIENT: When the use count for this partition set becomes zero,\nI        the storage for this partition set is released. This value should\nI        be specified for partition sets that are referenced infrequently.\nN\nD    USELPACOPY(NO | YES)\nI      Specifies whether the partition set is to be\nI      used from the link pack area (LPA).\nN\nI      NO: The partition set is not to be used from the LPA. It is loaded\nI        into the CICS partition.\nN\nI      YES: The partition set can be used from the LPA if LPA=YES is\nI        specified as a system initialization parameter. The use of the\nI        partition set from the LPA requires that it has been installed\nI        there and that the partition set is not named by the PRVMOD\nI        start-up option. For more details on this, see the\nI        CICS Transaction Server for z/OS Installation Guide.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG22": {"ttr": 6667, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG22\nTCICS\nT-RDG\nT-Chapter 22. PARTNER resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 22. PARTNER resources\nN=============================\nNA PARTNER resource enables CICS application programs to communicate,\nNusing APPC protocols, with a partner application program running on a\nNremote logical unit.\nN\nNThe interaction between a CICS application program and a partner\nNapplication program is called a conversation.\nN\nNThe PARTNER definition also facilitates the use of the call to the\nNinterface with the communications element of the System Application\nNArchitecture (SAA). For more information on the SAA communications\nNinterface, see the Common Programming Interface Communications\nNReference.\nN\nNTo allow the SAA communications interface to be used, you must specify\nNthe following resources:\nN\nN-> A PROFILE definition (see Chapter 25, \"PROFILE resources\")\nN\nN-> A CONNECTION definition (see Chapter 7, \"CONNECTION resources,\")\nN\nN-> A SESSIONS definition (see Chapter 27, \"SESSIONS resources,\")\nN\nNYou can define your CICS partner information in one of two ways:\nN\nN-> Create a PARTNER definition\nN\nN-> In an application program, by setting SYMDESTNAME to a null value,\nN   and issuing the appropriate CPI SET calls. See the SC26-4399-09\nN   CPI-C Communications Reference for further details.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2201": {"ttr": 6913, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2201\nTCICS\nT-RDG\nT-Chapter 22. PARTNER resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-102855\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 22. PARTNER resources\nN=============================\nNPARTNER attributes\nN------------------\nNDescribes the syntax and attributes of the PARTNER resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PARTNER(name)\nI      Specifies the name of this PARTNER definition. The\nI      name can be up to eight characters in length.\nN\nI      It is preferable not to use partner names that start with DFH\nI      because these characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nI      A partner definition specifies the SAA communications interface\nI      information required to establish a conversation with a partner\nI      program. For further guidance on this, see Common Programming\nI      Interface Communications Reference.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    NETNAME(netname)\nI      Specifies the netname of the logical unit on which the\nI      partner application program is running. It matches the NETNAME\nI      attribute specified in the CONNECTION definition. The name can be\nI      up to eight characters in length.\nN\nD    NETWORK(network)\nI      You can use this optional attribute to specify\nI      the name of the network on which the partner LU is located. The\nI      name can be up to eight characters in length.\nN\nD    PROFILE(DFHCICSA | profile)\nI      Specifies the name of the PROFILE definition which\nI      is to be used for the session and conversation. The default PROFILE\nI      is DFHCICSA. The name can be up to 8 characters in length.\nN\nD    TPNAME(tpname)\nI      Specifies the name of the remote transaction program\nI      that will be running on the partner LU. The definition of a remote\nI      TP name is mandatory; you must specify either TPNAME or its\nI      alternative, XTPNAME. This name can be up to 64 characters in\nI      length.\nN\nI      If this range of characters is not sufficient for a name that you\nI      want to specify, you may use the XTPNAME attribute instead of\nI      TPNAME.\nN\nD    XTPNAME(xtpname)\nI      This attribute may be used as an alternative to\nI      TPNAME; you must specify one of the two, because the definition\nI      of a remote TP name is mandatory.\nN\nI      Enter a hexadecimal string up to 128 characters in length,\nI      representing the name of the remote transaction program that runs\nI      on the partner LU. All hexadecimal combinations are acceptable\nI      except X'40'.\nN\nI      To specify an XTPNAME more than 72 characters long to DFHCSDUP,\nI      put an asterisk in column 72. This causes the following line to\nI      be concatenated.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG23": {"ttr": 6915, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG23\nTCICS\nT-RDG\nT-Chapter 23. PIPELINE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 23. PIPELINE resources\nN==============================\nNA PIPELINE resource is used when a CICS application is in the role of\nNa web service provider or requester. It provides information about the\nNmessage handler programs that act on a service request and on the\nNresponse. Typically, a single PIPELINE definition defines an\nNinfrastructure that can be used by many applications.\nN\nNThe information about the processing nodes is supplied indirectly:\nNthe PIPELINE specifies the name of a z/OS UNIX file containing an XML\nNdescription of the nodes and their configuration.\nN\nNAn inbound web service request (that is, a request by which a client\nNinvokes a web service in CICS) is associated with a PIPELINE resource\nNby the URIMAP resource. The URIMAP identifies the PIPELINE resource\nNthat applies to the URI associated with the request; the PIPELINE\nNspecifies the processing that is to be performed on the message.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2301": {"ttr": 6917, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2301\nTCICS\nT-RDG\nT-Chapter 23. PIPELINE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-10-355\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 23. PIPELINE resources\nN==============================\nNPIPELINE attributes\nN-------------------\nNDescribes the syntax and attributes of the PIPELINE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PIPELINE(name)\nI      Specifies the name of this PIPELINE. The name can\nI      be up to eight characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    CONFIGFILE(name)\nI      Specifies the fully qualified or relative name of\nI      a z/OS UNIX file that contains information about the processing\nI      nodes that will act on a service request, and on the response.\nN\nI      -> For a configuration file for a PIPELINE resource defined by\nI         online resource definition, the file path is either fully\nI         qualified, if prefixed with a forward slash (/), or is relative\nI         to the HOME directory of the CICS region user ID.\nN\nI      -> For a configuration file for a PIPELINE resource defined in a\nI         CICS bundle, the file path is relative to the root directory\nI         of the CICS bundle. The zFS file must be packaged in the CICS\nI         bundle with the PIPELINE resource. For more information, see\nI         \"Referencing zFS artifacts in a bundle\".\nN\nD    RESPWAIT(DEFT | value)\nI      Specifies the number of seconds that an\ni      application program should wait for a response message from a\nI      remote web service. The value can range from 0 to 9999 seconds.\nN\nI      To use the default timeout value of the transport protocol, specify\nI      DEFT. The default timeout value is also used if you do not specify\nI      any value for RESPWAIT.\nN\nI      -> The default timeout value for HTTP is 10 seconds.\nN\nI      -> The default timeout value for WebSphere MQ is 60 seconds.\nN\nD    SHELF(/var/cicsts | directory)\nI      Specifies the 1-255 character\nI      fully-qualified name of a directory (a shelf, primarily for web\nI      service binding files) on z/OS UNIX.\nN\nI      CICS regions into which the PIPELINE definition is installed must\nI      have full permissions to the shelf directory read, write, and the\nI      ability to create subdirectories.\nN\nI      A single shelf directory can be shared by multiple CICS regions and\nI      by multiple PIPELINE definitions. Within a shelf directory, each\nI      CICS region uses a separate subdirectory to keep its files separate\nI      from those of other CICS regions. Within each region's directory,\nI      each PIPELINE uses a separate subdirectory.\nN\nI      You should not attempt to modify the contents of a shelf that is\nI      referred to by an installed PIPELINE definition. If you do, the\nI      effects are unpredictable.\nN\nI      A PIPELINE resource that is defined in a CICS bundle using CICS\nI      Explorer does not use a shelf directory.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the initial status of the\nI      PIPELINE when it is installed:\nN\nI      ENABLED: Web service requests for this PIPELINE are processed\nI        normally.\nN\nI      DISABLED: Web service requests for this PIPELINE cannot be\nI        processed.\nN\nD    WSDIR(directory)\nI      Specifies the 1-255 character fully-qualified\nI      name of the web service binding directory (also known as the\nI      pickup directory) on z/OS UNIX. Each PIPELINE installed in a CICS\nI      region must specify a different web service binding directory.\nN\nI      The web service binding directory contains web service binding\nI      files that are associated with a PIPELINE, and that are to be\nI      installed automatically by the CICS scanning mechanism. When the\nI      PIPELINE definition is installed, CICS scans the directory and\nI      automatically installs any web service binding files it finds\nI      there. Note that this happens regardless of whether the PIPELINE\nI      is installed in enabled or disabled state.\nN\nI      If you specify a value for the WSDIR attribute, it must refer to\nI      a valid z/OS UNIX directory to which the CICS region has at least\nI      read access. If this is not the case, any attempt to install the\nI      PIPELINE resource will fail.\nN\nI      If you do not specify a value for WSDIR, no automatic scan takes\nI      place on installation of the PIPELINE.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG24": {"ttr": 6919, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG24\nTCICS\nT-RDG\nT-Chapter 24. PROCESSTYPE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-121055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 24. PROCESSTYPE resources\nN=================================\nNA PROCESSTYPE resource defines a BTS process-type. It names the CICS\nNfile which relates to the physical VSAM data set (repository) on which\nNdetails of all processes of this type (and their activity instances)\nNare to be stored.\nN\nNUsing the CICS business transaction services (BTS) API, you can define\nNand execute complex business applications called processes. A process\nNis represented in memory as a block of storage containing information\nNrelevant to its execution. It also has associated with it at least one\nNadditional block of information called an activity instance. When not\nNexecuting under the control of the CICS business transaction services\nNdomain, a process and its activity instances are written to a data set\nNcalled a repository.\nN\nNYou can categorize your BTS processes by assigning them to different\nNprocess-types. This is useful, for example, for browsing purposes. The\nNactivities that constitute a process are of the same process-type as\nNthe process itself.\nN\nNNote: Records for multiple process-types can be written to the same\nNrepository data set.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2401": {"ttr": 6921, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2401\nTCICS\nT-RDG\nT-Chapter 24. PROCESSTYPE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-110955\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 24. PROCESSTYPE resources\nN=================================\nNPROCESSTYPE attributes\nN----------------------\nNDescribes the syntax and attributes of the PROCESSTYPE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PROCESSTYPE(name)\nI      Specifies the name of this PROCESSTYPE definition.\nN\nI      The name can be up to eight characters in length. Leading and\nI      embedded blank characters are not permitted. If the name supplied\nI      is less than eight characters, it is padded with trailing blanks\nI      up to eight characters.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    AUDITLEVEL(OFF | ACTIVITY | FULL | PROCESS)\nI      Specifies the initial level\nI      of audit logging for processes of this type. If you specify any\nI      value other than OFF, you must also specify the AUDITLOG option.\nN\nI      ACTIVITY: Activity-level auditing. Audit records will be written\nI        from:\nN\nI      1. The process audit points\nN\nI      2. The activity primary audit points.\nN\nI      FULL: Full auditing. Audit records will be written from:\nN\nI      1. The process audit points\nN\nI      2. The activity primary and secondary audit points.\nN\nI      OFF: No audit trail records will be written.\nN\nI      PROCESS: Process-level auditing. Audit records will be written\nI        from the process audit points only.\nN\nI      For details of the records that are written from the process,\nI      activity primary, and activity secondary audit points, see the\nI      CICS Business Transaction Services.\nN\nD    AUDITLOG(journal)\nI      Specifies the name of a CICS journal to which\nI      audit trail records will be written, for processes of this type\nI      and their constituent activities. The name can be up to eight\nI      characters long. If you do not specify an audit log, no audit\nI      records will be kept for processes of this type.\nN\nD    FILE(file)\nI      Specifies the name of the CICS file definition that will\nI      be used to write the process and activity records of this\nI      process-type to its associated repository data set. The name can\nI      be up to eight characters long.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the initial status of the\nI      process-type following a CICS initialization with START=COLD or\nI      START=INITIAL. After initialization, you can use the\nI      CEMT SET PROCESSTYPE command to change the status of the\nI      process-type.\nN\nI      The status of the process-type following a restart is recovered\nI      to its status at the previous shutdown.\nN\nI      DISABLED: Processes of this type cannot be created. An\nI        EXEC CICS DEFINE ROCESS request that tries to create a process\nI        of this type results in the INVREQ condition being returned\nI        to the application program.\nN\nI      ENABLED: Processes of this type can be created.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG25": {"ttr": 6923, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG25\nTCICS\nT-RDG\nT-Chapter 25. PROFILE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 25. PROFILE resources\nN=============================\nNA PROFILE resource specifies options that control the interactions\nNbetween transactions and terminals or logical units. The PROFILE is\nNa means of standardizing the use of such options as screen size and\nNprinter compatibility, and the use of such functions as message\nNjournaling and the node error program.\nN\nNMODENAME\nN--------\nNA profile is associated with the communication between a transaction\nNand an LUTYPE6.1 or APPC session to another system. For APPC sessions,\nNyou refer on the PROFILE definition to the MODENAME that is also named\nNon the SESSIONS definitions. This MODENAME is the name of the mode set\nNto which the sessions belong. See Chapter 7, \"CONNECTION resources\".\nN\nNWhen installed in CICS, the information from the PROFILE definition\nNcreates an entry in the profile table. This entry is later used by each\nNtransaction that references that PROFILE.\nN\nNThere are CICS-supplied PROFILE definitions suitable for most purposes.\nNEach TRANSACTION definition names the PROFILE to be used. If you do not\nNspecify a PROFILE, the transaction uses the PROFILE supplied for using\nNa terminal in a standard way.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2501": {"ttr": 7169, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2501\nTCICS\nT-RDG\nT-Chapter 25. PROFILE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-112055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 25. PROFILE resources\nN=============================\nNPROFILE attributes\nN------------------\nNDescribes the syntax and attributes of the PROFILE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PROFILE(name)\nI      Specifies the name of this PROFILE definition. The\nI      name can be up to eight characters in length.\nN\nI      It is preferable not to use names that start with DFH because\nI      these characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nI      Note: If you use a comma (,) in a name, you will be unable to use\nI      those commands such as CEMT INQUIRE PROFILE(value1,value2) where\nI      the comma serves as a list delimiter. See CICS Supplied\nI      Transactions for information about using lists of resource\nI      identifiers.\nN\nI      A profile specifies the options that control the interaction\nI      between CICS and a terminal or logical unit. A profile name is\nI      specified on the transaction definition to indicate the set of\nI      options that control the communication between the transaction\nI      and its principal terminal. You can also specify a profile name\nI      on an EXEC CICS ALLOCATE command to indicate the options that\nI      control communication between the transaction and the allocated\nI      session.\nN\nI      CICS supplies a number of profile definitions that are suitable\nI      for most purposes. For more information, see the\nI      CICS Intercommunication Guide.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    CHAINCONTROL(NO | YES)\nI      Specifies whether the application program\nI      can control the outbound chaining of request units. If you specify\nI      CHAINCONTROL(YES), ONEWTE(YES) means one chain and not one terminal\nI      control output request.\nN\nD    DVSUPRT(ALL | NONVTAM | VTAM)\nI      Specifies the devices (terminals or\nI      logical units) that are to be supported. The access method used by\nI      a particular terminal or logical unit is specified in its\nI      associated TCTTE.\nN\nI      ALL The profile can be used with any terminal or logical unit.\nN\nI      NONVTAM: The profile can be used only with non-z/OS Communications\nI        Server terminals.\nN\nI      VTAM: The profile can be used only with logical units.\nN\nD    FACILITYLIKE(terminal)\nI      This is an optional attribute that specifies\nI      the name of an existing (four-character) terminal resource\nI      definition to be used as a template for the bridge facility. It\nI      can be overridden by specifying FACILITYLIKE in the bridge exit.\nN\nI      There is no default value for this attribute.\nN\nI      If you are running in a CICS system started with the VTAM=NO\nI      system initialization (SIT) parameter, the resource definition\nI      specified by FACILITYLIKE must be defined as a remote terminal.\nN\nD    INBFMH(NO | ALL | DIP | EODS)\nI      Specifies, for profiles\nI      used with logical units, whether a function management header\nI      (FMH) received from a logical unit is to be passed to the\nI      application program.\nN\nI      ALL: All FMHs (except APPC FMHs and LU6.1 ATTACH and SYNCPOINT\nI      FMHs that are processed by CICS) are passed to the application\nI      program. This value is required for function shipping transactions\nI      such as CSMI, transactions which use distributed transaction\nI      processing, and for distributed program link requests.\nN\nI      DIP: The batch data interchange program (DFHDIP) is to process\nI        inbound FMHs. BMS issues a batch data interchange receive\nI        request if a BMS receive request has been issued, and a batch\nI        data interchange receive request is issued instead of a terminal\nI        control receive request.\nN\nI      EODS: An FMH is passed to the application program only if it\nI        indicates end of data set (EODS).\nN\nI      NO: The FMHs are discarded.\nN\nD    JOURNAL(NO | journal)\nI      Specifies that you want automatic journaling\nI      of messages to take place, by giving the identifier of the journal.\nN\nI      NO: No automatic journaling of messages is to take place.\nN\nI      journal: The journal identification to be used for automatic\nI        journaling. This can be any number in the range 01 through 99.\nI        This number is appended to the letters DFHJ to give a journal\nI        identification of the form DFHJnn and this maps to an MVS system\nI        logger general log stream.\nN\nI      Note: In CICS Transaction Server for z/OS, DFHJ01 is not the\nI      system log.\nN\nI      In a transaction routing environment, message journaling is\nI      performed in the application-owning region (AOR). Therefore, you\nI      should specify the JOURNAL attribute on the transaction profile\nI      in the AOR.\nN\nD    LOGREC(NO | YES)\nI      Specifies whether the design of the application\nI      requires that each EXEC CICS RECEIVE request is to be satisfied by\nI      a logical record. This option allows existing 2770- and 2780-based\nI      application programs to be attached to a batch logical unit (for\nI      example, 3790 or 8100) without modification to the program.\nN\nD    MODENAME(modename)\nI      Specifies the name that identifies a group of\nI      sessions for use on an APPC connection. The name can be up to\nI      eight characters in length, and must be the name of a\nI      z/OS Communications Server LOGMODE entry defined to\nI      z/OS Communications Server. It must not be the reserved name\nI      SNASVCMG. If you omit the modename, it defaults to blanks. See\nI      the CICS Intercommunication Guide for more information about\nI      z/OS Communications Server modenames.\nN\nI      If a transaction that specifies this profile has been started using\nI      an EXEC CICS START command, the MODENAME is used for allocation of\nI      the principal facility. If a transaction performs an\nI      EXEC CICS ALLOCATE command specifying this profile, the MODENAME\nI      is used for allocation of the alternate facility.\nN\nI      If you do not specify a MODENAME, CICS selects a session from any\nI      one of the mode sets that have been defined.\nN\nI      The CICS-supplied profile DFHCICSA is used, if PROFILE is not\nI      specified on an EXEC CICS ALLOCATE command. For function shipping,\nI      the profile DFHCICSF is always used. MODENAME is not specified on\nI      the definition for either of these profiles, but you can add a\nI      MODENAME if you make your own copy. You must then ensure that the\nI      mode sets using your MODENAME have been defined in the TERMINAL or\nI      SESSIONS definition for all the systems with which communication\nI      takes place using APPC.\nN\nI      If a MODENAME is specified and you want to remove it, delete\nI      completely the value previously specified by pressing the\nI      ERASE EOF key.\nN\nD    MSGINTEG(NO | YES)\nI      (SNA LUs only): specifies whether a definite\nI      response is to be requested with an output request to a logical\nI      unit. You cannot specify YES for a pipeline transaction.\nN\nD    MSGJRNL(NO | INOUT | INPUT | OUTPUT)\nI      Specifies which messages are to\nI      be automatically journaled. If you specify a value other than NO,\nI      you must also supply a value for the JOURNAL attribute.\nN\nI      NO: No message journaling is required.\nN\nI      INPUT: Journaling is required for input messages.\nN\nI      OUTPUT: Journaling is to be performed for output messages.\nN\nI      INOUT: Journaling is to be performed for input and output messages.\nN\nI      In a transaction routing environment, message journaling is\nI      performed in the application-owning region (AOR) for routed\nI      APPC (LU type 6.2) sessions, and you should specify the MSGJRNL\nI      attribute on the transaction profile in the AOR. For other routed\nI      sessions, message journaling is performed in the terminal-owning\nI      region (TOR). In this case, you should specify the MSGJRNL\nI      attribute on the transaction profile in the TOR.\nN\nD    NEPCLASS(0 | nepclass)\nI      (z/OS Communications Server only): specifies\nI      the node error program transaction class. This value overrides the\nI      value specified on the TYPETERM and SESSION definitions.\nN\nI      0: This results in a link to the default node error program module\nI        for z/OS Communications Server devices, or is the default value\nI        for non-z/OS Communications Server devices.\nN\nI      value: The transaction class for the (nondefault) node error\nI        program module.\nN\nI      The value can be in the range 1 through 255. For programming\nI      information on the node error program, see the CICS Customization\nI      Guide.\nN\nI      The NEPCLASS attribute applies only to user transactions, and is\nI      ignored for SNASVCMGR sessions.\nN\nD    ONEWTE(NO | YES)\nI      Specifies whether the transaction is permitted\nI      only one write operation or EXEC CICS SEND during its execution.\nN\nI      YES: has the effect of forcing the LAST option on the first write\nI        of the transaction. Any additional write requests are treated as\nI        errors, and the task is made ready for abnormal termination.\nN\nI      You must specify YES for a PIPELINE transaction.\nN\nD    PRINTERCOMP(NO | YES)\nI      Specifies the level of compatibility required\nI      for the generation of data streams to support the printer\nI      compatibility option for the BMS SEND TEXT command.\nN\nI      NO: Each line of output starts with a blank character, so that\nI        the format is equivalent to that on a 3270 display where an\nI        attribute byte precedes each line.\nN\nI      YES: No blank character is inserted, so that forms-feed characters\nI        included as the first character of your data are honored and the\nI        full width of the printer is available for your data.\nN\nI      If you use the BMS forms feed option, specify YES.\nN\nD    PROTECT(NO | YES)\nI      This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Appendix A, \"Obsolete attributes\".\nN\nD    RAQ(NO | YES)\nI      Specifies whether the\nI      'read ahead queuing' option is required.\nN\nI      NO: The transaction obeys SNA protocols and only SEND and RECEIVE\nI        when in the correct mode. If it does not follow the protocol,\nI        it may be abended with code ATCV.\nN\nI      YES: The transaction may not obey SNA protocols, and CICS queues\nI        incoming data on temporary storage until the data is specifically\nI        requested by the transaction. RAQ(YES) is provided only for\nI        compatibility with transactions that support both bisynchronous\nI        devices and logical units, and its use is not recommended.\nN\nD    RTIMOUT(NO | mmss)\nI      Specifies the timeout value for the read timeout\nI      feature. For tasks that are making HTTP client requests using the\nI      EXEC CICS WEB API, when this interval has ended, CICS returns a\nI      TIMEDOUT response to the application. For other tasks, either the\nI      failed command returns a TERMERR or the task that is timed out\nI      receives an AKCT , AZCT, or AZIG abend.\nN\nI      NO: The read timeout feature is not required.\nN\nI      value: This is an interval (MMSS for minutes and seconds) after\nI        which the task is terminated if no input has been received from\nI        the terminal. The maximum value that can be specified is\nI        70 minutes. If a value is specified and you want to let it\nI        default to NO, you must completely delete the value previously\nI        specified.\nN\nD    SCRNSIZE(DEFAULT | ALTERNATE)\nI      Specifies whether the DEFAULT or\nI      ALTERNATE buffer size for a 3270 display or printer is to be used.\nI      For further information on the choice of screen sizes and buffer\nI      sizes, refer to the ALTSCREEN and DEFSCREEN attributes on the\nI      TYPETERM definition.\nN\nI      The SCRNSIZE value is ignored if the TYPETERM definition has\nI      ALTSCREEN(0,0) and DEFSCREEN(0,0). That is, the screen size is\nI      assumed from the related TERMMODEL attribute in the TYPETERM\nI      definition; the page size is taken from PAGESIZE, and the ALTPAGE\nI      value is ignored. The 3270 erase write (EW) command is inserted\nI      for output requests with the ERASE option.\nN\nI      ALTERNATE: If the TYPETERM definition has nonzero ALTSCREEN, the\nI        alternate screen size mode is applied, using the erase write\nI        alternate (EWA) command. That is, whenever a terminal output\nI        request with the ERASE option is issued, the 3270 EWA command\nI        is inserted in the data stream. The ALTSCREEN value is assumed\nI        as the screen size, and BMS uses the value in ALTPAGE as the page\nI        size. SCRNSIZE(ALTERNATE) may be used for all CICS service\nI        transactions (for example, CSMT).\nN\nI      DEFAULT: If the TYPETERM definition has nonzero ALTSCREEN or\nI        nonzero DEFSCREEN, the default screen size mode is applied,\nI        using the erase write (EW) command. That is, whenever the\nI        terminal issues a terminal output request with the ERASE\nI        option, the 3270 EW command is inserted in the data stream.\nI        The screen size specified in the DEFSCREEN attribute is assumed,\nI        and BMS uses the value specified in the PAGESIZE attribute as\nI        the page size.\nN\nI      Note: Both DEFAULT and ALTERNATE can be overridden by the DEFAULT\nI      and ALTERNATE options on the SEND MAP, SEND TEXT, and SEND CONTROL\nI      commands.\nN\nD    UCTRAN(NO | YES)\nI      (z/OS Communications Server only): Specifies whether\nI      terminal input is to be translated to uppercase before passing to\nI      programs for the transaction using this profile.\nN\nI      You can also request translation to uppercase at the terminal level\nI      on the associated TYPETERM definition (see \"TYPETERM attributes\")\nI      but be aware of the following points:\nN\nI      -> A TYPETERM UCTRAN(YES) definition overrides a PROFILE UCTRAN(NO)\nI         definition. So, if you specify TYPETERM UCTRAN(YES), a\nI         PROFILE UCTRAN(NO) has no effect.\nN\nI      -> A PROFILE UCTRAN(YES) definition overrides a TYPETERM UCTRAN(NO)\nI         definition.\nN\nI      -> Specifying TYPETERM UCTRAN(TRANID) causes the tranid to be\nI         translated to uppercase so that CICS can locate the transaction\nI         definition. All other input received by the application is\nI         translated according to what is specified for PROFILE UCTRAN.\nN\nI      -> UCTRAN(YES) on a profile definition does not cause translation\nI         of the input data until an EXEC CICS RECEIVE or CONVERSE is\nI         executed. This means that if the transaction is routed through\nI         a dynamic routing program, for example DFHDYP, the copy of the\nI         input data passed to the routing program is unaffected by the\nI         UCTRAN option of the PROFILE definition.\nN\nI      Note: In a transaction routing environment where your\nI      z/OS Communications Server terminals have a remote definition on\nI      the AOR, and the AOR has a different UCTRAN value from the TOR,\nI      the TOR value of UCTRANST (as specified in an\nI      EXEC CICS SET TERMINAL command) overrides that on the AOR.\nN\nI      Table 11 shows which portion of the terminal input is translated\nI      (transaction id and/or data) according to the setting of the UCTRAN\nI      on the PROFILE and TYPETERM resource definitions.\nN\nI      Some national-language characters are not automatically translated\nI      when UCTRAN(YES) is specified. If that is the case, you can use one\nI      of the methods described in the CICS Customization Guide.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG26": {"ttr": 7172, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG26\nTCICS\nT-RDG\nT-Chapter 26. PROGRAM resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 26. PROGRAM resources\nN=============================\nNPROGRAM resources control information for a program that is stored in\nNthe program library and used to process a transaction, or part of a\nNtransaction.\nN\nNYou can create PROGRAM definitions by using CEDA or DFHCSDUP, or by\nNsetting the appropriate system initialization parameters and allowing\nNprograms to be autoinstalled. See Autoinstalling programs, map sets,\nNand partition sets in Configuring for information about autoinstall\nNfor programs.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2601": {"ttr": 7425, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2601\nTCICS\nT-RDG\nT-Chapter 26. PROGRAM resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-113555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 26. PROGRAM resources\nN=============================\nNPROGRAM attributes\nN------------------\nNDescribes the syntax and attributes of the PROGRAM resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    PROGRAM(name)\nI      Specifies the name of this PROGRAM definition. The name can be\nI      up to eight characters in length.\nN\nI      It is preferable not to use names that start with DFH because\nI       these characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nI      To use the program in an active CICS region, it must be\nI      link-edited into one of the libraries specified as part of the\nI      DFHRPL or dynamic LIBRARY concatenation. If the program is\nI      reentrant, you can place it in the link pack area (LPA). For\nI      more information about installing application programs, see the\nI      CICS Application Programming Guide.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    API(CICSAPI | OPENAPI)\nI      Specifies which API is to be used by the\nI      program. The API attribute applies to the following programs:\nN\nI      -> User application programs\nN\nI      -> PLT programs\nN\nI      -> User-replaceable programs\nN\nI      -> Task-related user exit programs. For more information, see\nI         Task-related user exit programs in Developing system programs.\nN\nI      The API attribute does not apply to global user exits.\nN\nI      CICSAPI: The program is restricted to use of the CICS permitted\nI        application programming interfaces only.\nN\nI        If the program is defined with CONCURRENCY(QUASIRENT), it always\nI        runs on the quasi-reentrant (QR) TCB. If the program is defined\nI        with CONCURRENCY(THREADSAFE), it runs on whichever TCB is in use\nI        by CICS at the time that is determined as suitable, and if the\nI        program is defined with CONCURRENCY(REQUIRED), it always runs\nI        on an open TCB.\nN\nI      OPENAPI: The program is not restricted to the CICS application\nI        programming interfaces.\nN\nI        CICS runs the program on its own open TCB. The type of open TCB\nI        used depends on the value of the EXECKEY attribute and the\nI        language of the program.\nN\nI        If CICS requires a switch to the QR TCB when running a command,\nI        it returns to the open TCB before handing control back to the\nI        application program.\nN\nI        To specify the OPENAPI attribute, your program must be coded to\nI        threadsafe standards and defined with CONCURRENCY(REQUIRED).\nN\nI        The primary use for OPENAPI programs is to move application\nI        workloads off the QR TCB and onto multiple open TCBs. You can\nI        benefit from better exploitation of server resources to achieve\nI        better throughput.\nN\nI        Note: The combination of CONCURRENCY(THREADSAFE) API(OPENAPI)\nI        supported in previous releases is deprecated but is kept for\nI        compatibility, and produces the same behavior as\nI        CONCURRENCY(REQUIRED) API(OPENAPI).\nN\nI        Use of other (non-CICS) APIs in OPENAPI programs is possible. If\nI        an open TCB is blocked by an operating system wait, only the\nI        single application is affected and not the whole of CICS. Such\nI        OPENAPI programs are not permitted to run on the QR TCB precisely\nI        because of this risk of blocking the TCB by an operating system\nI        wait and thus affecting the whole of CICS. Nevertheless, OPENAPI\nI        programs still have obligations to the CICS system as a whole.\nI        For more information, see Multithreading: Reentrant,\nI        quasi-reentrant, and threadsafe programs in Developing\nI        applications.\nN\nI        Important: Use of other (non-CICS) APIs within CICS is entirely\nI        at the discretion and risk of the user. No testing of other\nI        (non-CICS) APIs within CICS has been undertaken and use of such\nI        APIs is not supported by IBM Service.\nN\nD    CEDF(YES | NO)\nI      Specifies the action of the execution diagnostic\nI      facility (EDF) when the program is running under EDF control.\nN\nI      NO: The EDF diagnostic screens are not displayed.\nN\nI      YES: The EDF diagnostic screens are displayed. If the program is\nI        translated with the NOEDF option, only the program initiation\nI        and termination EDF screens are displayed.\nN\nD    DATALOCATION(BELOW | ANY)\nI      Commands that use the SET option can\nI      return a data address to an application program; this operand\nI      specifies the location of the data. For example, in the command\nI      EXEC CICS RECEIVE SET(ptr-ref), ptr-ref is less than 16 MB if\nI      DATALOCATION(BELOW) is specified, but might be greater than 16 MB\nI      if DATALOCATION(ANY) is specified. DATALOCATION does not affect\nI      the operation of the GETMAIN command. For more information about\nI      where CICS obtains storage in response to this command, see\nI      GETMAIN in Reference Application development.\nN\nI      ANY: The program can handle 31-bit addresses. The address of the\nI        data can be above or below the 16 MB line. The values specified\nI        for the DATALOCATION attribute are independent of the addressing\nI        mode of the link-edited program. Programs that are link-edited\nI        with addressing mode AMODE=24 cannot access data above 16 MB;\nI        ensure that the value you specify is compatible with the\nI        addressing mode of the link-edited application program:\nN\nI        -> Specify ANY for all 31-bit or 64-bit programs, unless they\nI           pass CICS data addresses on to other 24-bit programs.\nN\nI        -> Specify DATALOCATION(BELOW) for an AMODE=24 program, unless\nI           storage addresses are being passed to a program that can\nI           access storage above 16 MB, or the program explicitly switches\nI           addressing mode.\nN\nI      BELOW: The program can handle only 24-bit addresses and must\nI        therefore only be given data located below the 16 MB line. If\nI        required, data is copied below the 16 MB line before passing\nI        its address to the application program.\nN\nI      DATALOCATION does not affect the operation of the GETMAIN64 or\nI      GET64 CONTAINER commands. For more information about these\nI      commands, see GETMAIN64 in Reference Application development and\nI      GET64 CONTAINER in Reference Application development.\nN\nD    DYNAMIC(NO | YES)\nI      Specifies whether, if the program is the subject\nI      of a program-link request, the request can be dynamically routed.\nN\nI      NO: If the program is the subject of a program-link request, the\nI        dynamic routing program is not started.\nN\nI        For a distributed program link (DPL) request, the server region\nI        on which the program is to run must be specified explicitly on\nI        the REMOTESYSTEM attribute or on the SYSID option of the\nI        EXEC CICS LINK command; otherwise it defaults to the local\nI        region.\nN\nI      YES: If the program is the subject of a program-link request, the\nI        CICS dynamic routing program is started. If a remote region is\nI        not named on the SYSID option of the EXEC CICS LINK command, the\nI        routing program can route the request to the region on which the\nI        program is to run.\nN\nI      The DYNAMIC attribute takes precedence over the REMOTESYSTEM\nI      attribute; see REMOTESYSTEM.\nN\nI      For guidance information about the dynamic routing of DPL requests,\nI      see Dynamically routing DPL requests in Getting started.\nN\nD    EXECUTIONSET(FULLAPI | DPLSUBSET)\nI      Specifies whether you want CICS\nI      to link to and run a program as if it were running in a remote\nI      CICS region.\nN\nI      DPLSUBSET: Specify DPLSUBSET if you want CICS to link to the\nI        program and run it with the API restrictions of a remote DPL\nI        program. See Exception conditions for LINK command in Reference\nI        Application development for details of the API restrictions for\nI        a DPL program.\nN\nI      FULLAPI: Specify FULLAPI if you want CICS to link to the program\nI        and run it without the API restrictions of a DPL program. The\nI        program can use the full CICS API.\nN\nI      The EXECUTIONSET attribute applies only in these cases:\nN\nI      -> To programs that are being linked to, and not to those programs\nI         that are the first to be given control by a transaction.\nN\nI      -> When the REMOTESYSTEM name is the same name as the local CICS\nI         region. Its purpose is to test programs in a local CICS\nI         environment as if they were running as DPL programs.\nN\nD    JVM(NO | YES)\nI      Specifies whether the program is a Java program that\nI      must run in a Java Virtual Machine (JVM).\nN\nI      NO: The program is not to run in a JVM.\nN\nI      YES: The program is to run in a JVM. Specify a class name in the\nI        JVMCLASS attribute if you specify JVM(YES).\nN\nI      In addition to YES and NO, you can also specify DEBUG, but in\nI      compatibility mode only (see Sharing the CSD between different\nI      releases of CICS in Configuring).\nM\nI      If you set JVM to YES, and a value is also set for JVMPROFILE\nI      (an obsolete attribute), program installation is prevented.\nN\nD    REMOTENAME(program)\nI      Specifies the name of the program on the\nI      remote CICS region.\nN\nI      If you specify REMOTESYSTEM and omit REMOTENAME, the REMOTENAME\nI      attribute defaults to the same name as the local name (that is,\nI      the program name on this resource definition).\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the name of an IPCONN or a\nI      CONNECTION resource that defines a link to the remote CICS region\nI      on which the program resides. Specify this attribute if you want\nI      CICS to ship a distributed program link (DPL) request to another\nI      CICS region.\nN\nI      Besides the REMOTESYSTEM attribute of the program definition, the\nI      DPL server region can also be specified by the following:\nN\nI      -> The application program, using the SYSID option of the\nI         EXEC CICS LINK PROGRAM command\nN\nI      -> The dynamic routing program.\nN\nI      The rules of precedence are as follows:\nN\nI      1. If an application program issues a DPL request, and the SYSID\nI         option on the LINK command specifies a remote CICS region,\nI         CICS ships the request to the remote region.\nN\nI         If the installed program definition specifies DYNAMIC(YES), or\nI         there is no installed program definition, the dynamic routing\nI         program is called for notification only; it cannot reroute the\nI         request.\nN\nI      2. If an application program issues a DPL request, but the SYSID\nI         is the same name as the local CICS region or the SYSID option\nI         is not specified:\nN\nI         a. If the installed program definition specifies DYNAMIC(YES),\nI            or there is no installed program definition, the dynamic\nI            routing program is called and can route the request.\nN\nI            The REMOTESYSTEM attribute of the program definition, if\nI            specified, names the default server region passed to the\nI            dynamic routing program.\nN\nI         b. If the installed program definition specifies DYNAMIC(NO),\nI            CICS ships the request to the remote system named on the\nI            REMOTESYSTEM attribute. If REMOTESYSTEM is not specified,\nI            CICS runs the program locally.\nN\nI            The rules for specifying the remote system name are the same\nI            as for the CONNECTION attribute of the CONNECTION resource\nI            definition.\nN\nI      Note: You must not specify remote attributes for any user-written\nI      CICS programs, such as the dynamic transaction routing or\nI      autoinstall user programs.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the program status.\nN\nI      DISABLED: The program cannot be used.\nN\nI      ENABLED: The program can be used.\nN\nI      This attribute is ignored for PROGRAM resources that are\nI      dynamically generated by a CICS bundle. The initial status of a\nI      PROGRAM resource is derived from the initial status of the bundle\nI      that defines the resource.\nN\nD    TRANSID(char4)\nI      If the program is dynamic, this value is the default\nI      TRANSID used for the distributed program link (DPL) request. If the\nI      program is not dynamic, this value specifies the name of the\nI      transaction you want the remote CICS to attach, and under which\nI      it is to run the remote program.\nN\nI      If you do not specify a transaction name on the TRANSID attribute,\nI      the remote region runs the DPL program under one of the following\nI      CICS-supplied default mirror transactions. If you have defined a\nI      user transaction in the remote region to call the mirror program,\nI      the DPL program runs under that transaction ID.\nN\nI      CPMI: The mirror transaction that is used for LU6.2 connections\nI        that require data conversion and for TCP/IP and IPIC requests\nI        from the CICS Transaction Gateway for Multiplatforms.\nN\nI      CSMI: The CICS mirror transaction for MRO and LU6.2 connections\nI        with sync level 2 and for EXCI and IPIC requests from the CICS\nI        Transaction Gateway for z/OS.\nN\nN\nNAttributes for non-Java programs:\nN---------------------------------\nD    LANGUAGE(ASSEMBLER | C | COBOL | LE370 | PLI)\nI      Specifies the program language.\nN\nI      ASSEMBLER: An assembler language program that was not translated\nI        using the LEASM translator option. LEASM is used to translate\nI        those assembler programs that are Language Environment-conforming\nI        MAIN programs.\nN\nI      C: A C or C++ program that was not compiled by a Language\nI        Environment-conforming compiler.\nN\nI      COBOL: A COBOL program.\nN\nI      LE370: A program that uses multi-language support, or has been\nI        compiled by a Language Environment-conforming compiler, or is\nI        an assembler MAIN program that was translated using the LEASM\nI        option to produce a Language Environment-conforming program.\nN\nI      PLI: A PL/I program.\nN\nI      In most cases, you do not have to specify the LANGUAGE attribute,\nI      because the CICS program manager deduces the correct language and\nI      ignores the value you specify. However, if the program is written\nI      in assembler language and does not have a DFHEAI or DFHEAG stub,\nI      CICS cannot deduce the language and you must specify the\nI      appropriate value: If the language is not specified and CICS\nI      cannot deduce it, transactions that attempt to use the program\nI      abend with code ALIG.\nN\nI      Although, you usually do not have to specify a value for this\nI      attribute, be aware that the value specified is returned in the\nI      LANGDEDUCED and LANGUAGE options of the INQUIRE PROGRAM command.\nI      Programs that use this command might be affected if you change the\nI      value of this attribute.\nN\nI      This attribute does not apply to JVM programs. CICS deduces that\nI      the program is a Java program to run under the control of a JVM\nI      when JVM(YES) is specified.\nN\nI      Specifies the name of this PROGRAM definition. The name can be up\nI      to eight characters in length.\nN\nI      It is preferable not to use names that start with DFH because these\nI      characters are reserved for use by CICS. CICS can delete or discard\nI      them and replace them with CICS resources when you upgrade or\nI      provide new function or fixes.\nN\nI      To use the program in an active CICS region, it must be link-edited\nI      into one of the libraries specified as part of the DFHRPL or\nI      dynamic LIBRARY concatenation. If the program is reentrant, you\nI      can place it in the link pack area (LPA). For more information\nI      about installing application programs, see the CICS Application\nI      Programming Guide.\nN\nD    CONCURRENCY(QUASIRENT | THREADSAFE | REQUIRED)\nI      Specifies whether the\nI      program is written to threadsafe standards, or is only\nI      quasi-reentrant. You can specify the CONCURRENCY attribute for all\nI      CICS executable program objects:\nN\nI      -> User application programs.\nN\nI      -> PLT programs.\nN\nI      -> User-replaceable programs.\nN\nI      -> Global user exit programs. For more information, see Global\nI         user exit programs in Developing system programs.\nN\nI      -> Task-related user exit programs. For more information, see\nI         Task-related user exit programs in Developing system programs.\nN\nI      QUASIRENT: The program is quasi-reentrant only, and relies on the\nI        serialization provided by CICS when accessing shared resources.\nN\nI        The program is restricted to the CICS permitted programming\nI        interfaces, and must comply with the CICS quasi-reentrant rules.\nI        For more information, see Multithreading: Reentrant,\nI        quasi-reentrant, and threadsafe programs in Developing\nI        applications.\nN\nI        This value is supported for all executable programs.\nN\nI        CICS ensures that the program always runs under the QR TCB, even\nI        when control is returned after it has started a JVM or an open\nI        API task-related user exit, or when it interacts with threadsafe\nI        programs.\nN\nI      THREADSAFE: The program is written to threadsafe standards. When\nI        it accesses shared resources it takes into account the\nI        possibility that other programs might be running concurrently\nI        and attempting to modify the same resources. The program,\nI        therefore, uses appropriate serialization techniques when\nI        accessing any shared resources.\nN\nI        JVM programs and any C and C++ programs compiled with the XPLink\nI        option must be defined as threadsafe. For compatibility with\nI        previous releases, CONCURRENCY(THREADSAFE) is the default value\nI        for Java programs, but the preferred option to use is\nI        CONCURRENCY(REQUIRED).\nN\nI        For information about CICS DB2 application programs, see\nI        Application design and development considerations for\nI        CICS DB2 in Developing applications.\nN\nI        For information about writing threadsafe application programs,\nI        see Threadsafe programs in Developing applications.\nN\nI        This value is supported for all executable programs. Threadsafe\nI        programs must confirm with Language Environment, or be assembler\nI        language programs.\nN\nI      REQUIRED: The program is written to threadsafe standards. CICS\nI        starts the program on an open TCB and ensures that the program\nI        always runs on an open TCB. If CICS switches to the QR TCB to\nI        run a CICS command, it returns to the open TCB before handing\nI        control back to the application program. The type of open TCB\nI        used depends on the API setting and the language of the program.\nN\nI        -> Java programs and OSGi bundles that run in a JVM server use\nI           a T8 TCB.\nN\nI        -> C or C++ XPLink programs operate like OPENAPI programs and\nI           use an X8 TCB if CICS key is set, and an X9 TCB if user key\nI           is set.\nN\nI        -> COBOL, PL/I, non-XPLink C or C++, and assembler language\nI           programs that also specify API(CICSAPI) use an L8 TCB because\nI           CICS commands can operate on this TCB irrespective of the\nI           execution key of the program.\nN\nI        REQUIRED is applicable to user application programs, PLT\nI        programs, and user-replaceable programs, and is the preferred\nI        option for Java programs. The REQUIRED setting is also suitable\nI        for programs that access resource managers like DB2 and WebSphere\nI        MQ, which also require an L8 TCB. However, for OPENAPI programs\nI        CICS must use an L9 TCB for user key programs and an L8 TCB for\nI        CICS key programs so that non-CICS API commands such as MVS\nI        requests operate correctly. The CICS-DB2 task-related user exit\nI        will use an L8 TCB if it is run with CONCURRENCY(REQUIRED) and\nI        API(OPENAPI) or it will run on any eligible key 8 open TCB if\nI        run with CONCURRENCY(REQUIRED) and API(OPENAPI).\nN\nI        You can also specify the program CONCURRENCY attribute using a\nI        program autoinstall exit, if program autoinstall is active.\nN\nD    EXECKEY(USER | CICS)\nI      Specifies the key in which CICS gives control\nI      to the program, and determines whether the program can modify\nI      CICS-key storage. Except for reentrant programs (that is, programs\nI      link-edited with the RENT attribute), EXECKEY also defines, with\nI      the residency mode, into which of the DSAs CICS loads the program.\nN\nI      CICS: CICS gives control to the program in CICS key when it is\nI        called. CICS loads the program into one of the CICS-key DSAs\nI        - either the CDSA or the ECDSA, depending on the residency mode\nI        specified for the program.\nN\nI        In a CICS region with storage protection active, a CICS-key\nI        program has read and write access to CICS-key and user-key\nI        storage of its own task and all other tasks, whether transaction\nI        isolation is active.\nN\nI      USER: CICS gives control to the program in user key when it is\nI        called. CICS loads the program into one of the user-key shared\nI        DSAs - either the SDSA or the ESDSA, depending on the residency\nI        mode specified for the program.\nN\nI        In a CICS region with storage protection only active, a\nI        user-key program has read and write access to all user-key\nI        storage, but read-only access to CICS-key storage.\nN\nI        In a storage protection and transaction isolation environment,\nI        a user-key program has read and write access to the user-key\nI        task-lifetime storage of its own task only, and to any shared\nI        DSA storage, if the transaction is defined with ISOLATE(YES).\nN\nI        If a transaction is defined with ISOLATE(NO) in a transaction\nI        isolation environment, its user-key programs also have read and\nI        write access to the user-key task-lifetime storage of other\nI        transactions that are defined with ISOLATE(NO).\nN\nI        User-key programs always have read-only access to CICS-key\nI        storage.\nN\nI      The EXECKEY attribute is ignored in the following cases:\nN\nI      -> First-level global user exit programs, task-related user exit\nI         programs, user-replaceable programs, and PLT programs always\nI         run in CICS key.\nN\nI      -> If the program is link-edited with the RENT attribute, CICS\nI         loads the program into one of the read-only DSAs - either the\nI         RDSA or the ERDSA, depending on the residency mode specified\nI         for the program. The read-only DSAs are allocated from read-only\nI         storage only if RENTPGM=PROTECT is specified as a system\nI         initialization parameter.\nN\nI      -> Programs called by COBOL dynamic CALL always run in the same\nI         key as the caller.\nN\nD    RELOAD(NO | YES)\nI      Specifies whether a program control link, load, or\nI      XCTL request is to bring in a fresh copy of a program. This\nI      attribute does not apply to JVM programs.\nN\nI      NO: Any valid copy of the program currently in storage is reused\nI        for the request.\nN\nI      YES: A fresh copy of the program is brought into storage for every\nI        request. Furthermore, each of these program copies must be\nI        removed from storage explicitly, using a storage control\nI        FREEMAIN request, when it is no longer required and before the\nI        transaction terminates. If the relevant FREEMAIN requests are\nI        not issued, areas of the DSA/EDSA become tied up with\nI        inaccessible program copies, potentially causing storage\nI        shortage or fragmentation.\nN\nI      Note: If a new version of the program has been placed in the\nI      LIBRARY concatenation, a NEWCOPY or PHASEIN must be issued for\nI      the program before the new version is loaded.\nN\nI      You can use RELOAD(YES) to load tables or control blocks that are\nI      modified by the execution of any associated programs. Do not\nI      specify this value for the first program loaded for a task,\nI      because the task does not have a way to issue a FREEMAIN request\nI      for the program.\nN\nI      You must specify RELOAD(YES) for nonreentrant programs.\nN\nI      For more information about the RELOAD attribute, see the\nI      CICS Performance Guide.\nN\nD    RESIDENT(NO | YES)\nI      Specifies the residence status of the program.\nI      This attribute does not apply to JVM programs.\nN\nI      NO: The program is not to be permanently resident. This value must\nI        be specified if RELOAD(YES) is specified.\nN\nI      YES: The program is to be loaded on first reference and is then to\nI        be permanently resident in virtual storage, but is to be pageable\nI        by the operating system. When you specify RESIDENT(YES), CICS\nI        assumes a specification of USAGE(NORMAL).\nN\nI      For more information about the effects of the RESIDENT attribute,\nI      see the CICS Performance Guide.\nN\nI    RSL: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Obsolete attributes in Reference System definition.\nN\nD    USAGE(NORMAL | TRANSIENT)\nI      Specifies when the storage for this\nI      program is released. This attribute does not apply to JVM programs.\nN\nI      NORMAL: When the resident use count (RESCOUNT) for this program\nI        reaches zero, it becomes eligible for removal from storage as\nI        part of the normal dynamic program storage compression process.\nN\nI        This value must be specified if RELOAD(YES) is specified.\nN\nI      TRANSIENT: When the resident use count (RESCOUNT) for this\nI        program becomes zero, the storage for this program is released.\nI        Specify this value for programs that are referenced infrequently.\nN\nD    USELPACOPY(NO | YES)\nI      Specifies whether the program is to be used\nI      from the link pack area (LPA).\nN\nI      This attribute does not apply to JVM programs.\nN\nI      NO: The program is not to be used from the LPA. It is loaded into\nI        the CICS address space.\nN\nI      YES: The program can be used from the LPA if LPA=YES is specified\nI        as a system initialization parameter. The use of the program from\nI        the LPA requires that it has been installed there and that the\nI        program is not named by the PRVMOD system initialization\nI        parameter. For more information, see the CICS Transaction\nI        Server for z/OS Installation Guide.\nN\nNAttributes for Java programs:\nN-----------------------------\nD    CONCURRENCY(THREADSAFE | REQUIRED)\nI      Specifies whether the\nI      program is written to threadsafe standards, or is only\nI      quasi-reentrant. You can specify the CONCURRENCY attribute for all\nI      CICS executable program objects:\nN\nI      -> User application programs.\nN\nI      -> PLT programs.\nN\nI      -> User-replaceable programs.\nN\nI      -> Global user exit programs. For more information, see Global\nI         user exit programs in Developing system programs.\nN\nI      -> Task-related user exit programs. For more information, see\nI         Task-related user exit programs in Developing system programs.\nN\nI      QUASIRENT: The program is quasi-reentrant only, and relies on the\nI        serialization provided by CICS when accessing shared resources.\nN\nI        The program is restricted to the CICS permitted programming\nI        interfaces, and must comply with the CICS quasi-reentrant rules.\nI        For more information, see Multithreading: Reentrant,\nI        quasi-reentrant, and threadsafe programs in Developing\nI        applications.\nN\nI        This value is supported for all executable programs.\nN\nI        CICS ensures that the program always runs under the QR TCB, even\nI        when control is returned after it has started a JVM or an open\nI        API task-related user exit, or when it interacts with threadsafe\nI        programs.\nN\nI      THREADSAFE: The program is written to threadsafe standards. When\nI        it accesses shared resources it takes into account the\nI        possibility that other programs might be running concurrently\nI        and attempting to modify the same resources. The program,\nI        therefore, uses appropriate serialization techniques when\nI        accessing any shared resources.\nN\nI        JVM programs and any C and C++ programs compiled with the XPLink\nI        option must be defined as threadsafe. For compatibility with\nI        previous releases, CONCURRENCY(THREADSAFE) is the default value\nI        for Java programs, but the preferred option to use is\nI        CONCURRENCY(REQUIRED).\nN\nI        For information about CICS DB2 application programs, see\nI        Application design and development considerations for\nI        CICS DB2 in Developing applications.\nN\nI        For information about writing threadsafe application programs,\nI        see Threadsafe programs in Developing applications.\nN\nI        This value is supported for all executable programs. Threadsafe\nI        programs must confirm with Language Environment, or be assembler\nI        language programs.\nN\nI      REQUIRED: The program is written to threadsafe standards. CICS\nI        starts the program on an open TCB and ensures that the program\nI        always runs on an open TCB. If CICS switches to the QR TCB to\nI        run a CICS command, it returns to the open TCB before handing\nI        control back to the application program. The type of open TCB\nI        used depends on the API setting and the language of the program.\nN\nI        -> Java programs and OSGi bundles that run in a JVM server use\nI           a T8 TCB.\nN\nI        -> C or C++ XPLink programs operate like OPENAPI programs and\nI           use an X8 TCB if CICS key is set, and an X9 TCB if user key\nI           is set.\nN\nI        -> COBOL, PL/I, non-XPLink C or C++, and assembler language\nI           programs that also specify API(CICSAPI) use an L8 TCB because\nI           CICS commands can operate on this TCB irrespective of the\nI           execution key of the program.\nN\nI        REQUIRED is applicable to user application programs, PLT\nI        programs, and user-replaceable programs, and is the preferred\nI        option for Java programs. The REQUIRED setting is also suitable\nI        for programs that access resource managers like DB2 and WebSphere\nI        MQ, which also require an L8 TCB. However, for OPENAPI programs\nI        CICS must use an L9 TCB for user key programs and an L8 TCB for\nI        CICS key programs so that non-CICS API commands such as MVS\nI        requests operate correctly. The CICS-DB2 task-related user exit\nI        will use an L8 TCB if it is run with CONCURRENCY(REQUIRED) and\nI        API(OPENAPI) or it will run on any eligible key 8 open TCB if\nI        run with CONCURRENCY(REQUIRED) and API(OPENAPI).\nN\nI        You can also specify the program CONCURRENCY attribute using a\nI        program autoinstall exit, if program autoinstall is active.\nN\nD    EXECKEY(CICS)\nI      Specifies the key in which CICS gives control\nI      to the program, and determines whether the program can modify\nI      CICS-key storage. Except for reentrant programs (that is, programs\nI      link-edited with the RENT attribute), EXECKEY also defines, with\nI      the residency mode, into which of the DSAs CICS loads the program.\nN\nI      CICS: CICS gives control to the program in CICS key when it is\nI        called. CICS loads the program into one of the CICS-key DSAs\nI        - either the CDSA or the ECDSA, depending on the residency mode\nI        specified for the program.\nN\nI        In a CICS region with storage protection active, a CICS-key\nI        program has read and write access to CICS-key and user-key\nI        storage of its own task and all other tasks, whether transaction\nI        isolation is active.\nN\nI      USER: CICS gives control to the program in user key when it is\nI        called. CICS loads the program into one of the user-key shared\nI        DSAs - either the SDSA or the ESDSA, depending on the residency\nI        mode specified for the program.\nN\nI        In a CICS region with storage protection only active, a\nI        user-key program has read and write access to all user-key\nI        storage, but read-only access to CICS-key storage.\nN\nI        In a storage protection and transaction isolation environment,\nI        a user-key program has read and write access to the user-key\nI        task-lifetime storage of its own task only, and to any shared\nI        DSA storage, if the transaction is defined with ISOLATE(YES).\nN\nI        If a transaction is defined with ISOLATE(NO) in a transaction\nI        isolation environment, its user-key programs also have read and\nI        write access to the user-key task-lifetime storage of other\nI        transactions that are defined with ISOLATE(NO).\nN\nI        User-key programs always have read-only access to CICS-key\nI        storage.\nN\nI      The EXECKEY attribute is ignored in the following cases:\nN\nI      -> First-level global user exit programs, task-related user exit\nI         programs, user-replaceable programs, and PLT programs always\nI         run in CICS key.\nN\nI      -> If the program is link-edited with the RENT attribute, CICS\nI         loads the program into one of the read-only DSAs - either the\nI         RDSA or the ERDSA, depending on the residency mode specified\nI         for the program. The read-only DSAs are allocated from read-only\nI         storage only if RENTPGM=PROTECT is specified as a system\nI         initialization parameter.\nN\nI      -> Programs called by COBOL dynamic CALL always run in the same\nI         key as the caller.\nN\nD    JVMCLASS(class)\nI      Specifies the name of the main class in a Java\nI      program.\nN\nI      -> For OSGi bundles that run in a JVM server, this value is the\nI         name of the OSGi service. The OSGi service is registered when\nI         you install the BUNDLE resource that contains the OSGi bundle.\nI         You can look up the name of the OSGi service in the Bundle Parts\nI         view in CICS Explorer.\nN\nI      -> For Java programs that run in a JVM server, this value is the\nI         class name qualified by the package name.\nN\nI      -> For web applications in a Liberty JVM server, this value is the\nI         protocol qualified service name.\nN\nN      The names are case sensitive and must be entered with the correct\nI      combination of uppercase and lowercase letters. If you use a\nI      terminal, ensure that uppercase translation is suppressed.\nN\nI      This attribute applies only to Java applications running under the\nI      control of a JVM. If you specify JVM(NO), CICS ignores any value\nI      specified in the JVMClass field at program execution time.\nN\nD    JVMSERVER(jvmserver)\nN\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG27": {"ttr": 7683, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG27\nTCICS\nT-RDG\nT-Chapter 27. SESSIONS resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 27. SESSIONS resources\nN==============================\nNA SESSIONS resource defines the logical link between two CICS systems\nNthat communicate using intersystem communication (ISC) or multiregion\nNoperation (MRO).\nN\nNBefore two systems can communicate using , they must be logically\nNlinked through one or more sessions. The nature of the logical link\nNdetermines how they can communicate. CICS does not use the SESSIONS\nNname when the definition has been installed in the active system. This\nNname is used only to identify the definition in the CSD file.\nN\nNYou use the CONNECTION attribute of the SESSIONS resource to name the\nNCONNECTION with which these SESSIONS are associated when they are\nNinstalled in the active systems.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2701": {"ttr": 7685, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2701\nTCICS\nT-RDG\nT-Chapter 27. SESSIONS resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-115555\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 27. SESSIONS resources\nN==============================\nNSESSIONS attributes\nN-------------------\nNDescribes the syntax and attributes of the SESSIONS resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    SESSIONS(name)\nI      Specifies the name of this SESSIONS definition. The\nI      name can be up to eight characters in length.\nN\nI      This name is used to identify the SESSIONS definition on the CSD\nI      file. It is not used within the active CICS system.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    PROTOCOL(APPC | LU61 | EXCI)\nI      Specifies the type of protocol that is\nI      to be used for an intercommunication link (ISC or MRO).\nN\nI      APPC (LUTYPE6.2): Advanced program-to-program communication (APPC)\nI        protocol.\nN\nI        Specify this for CICS-CICS ISC.\nN\nI      EXCI: The external CICS interface. Specify this to indicate that\nI        the sessions are for use by a non-CICS client program using the\nI        external CICS interface.\nN\nI      LU61: LUTYPE6.1 protocol. Specify this for CICS-CICS ISC, for\nI        CICS-IMS, or for MRO.\nN\nD    AUTOCONNECT(NO | ALL | YES)\nI      Specifies how connections are to be\nI      established. What you have to specify for LU6.1 and APPC sessions\nI      is discussed below:\nN\nI      APPC sessions:\nI        For a z/OS Communications Server-connected system that has\nI        AUTOCONNECT(YES) or (ALL) on the connection definition:\nN\nI        NO: CICS does not attempt to bind any sessions when the\nI          connection is established. However, one or more user sessions\nI          may be allocated as part of any ACQUIRE CONNECTION processing\nI          which takes place.\nN\nI        YES or ALL: A contention-winner session is established (that is,\nI          BIND is performed) during CICS initialization, or when\nI          communication with z/OS Communications Server is started\nI          using the CEMT SET VTAM OPEN command. If the connection cannot\nI          be made at this time because the remote system is unavailable,\nI          the link must be subsequently acquired using the\nI          CEMT SET CONNECTION(sysid) INSERVICE ACQUIRED command, unless\nI          the remote system becomes available in the meantime and itself\nI          initiates communications.\nN\nI          AUTOCONNECT(ALL) should not be specified for sessions to other\nI          CICS systems, because this can cause a bind race.\nN\nI        For a z/OS Communications Server-connected system that has\nI        AUTOCONNECT(NO) on the CONNECTION definition:\nN\nI        ALL: All sessions, not just contention winners, are established\nI          when the connection is acquired by issuing\nI          CEMT SET CONNECTION(name) ACQUIRED, or when the remote system\nI          itself initiates communication.\nN\nI        NO: CICS does not attempt to bind any sessions when the\nI          connection is established. However, one or more user sessions\nI          may be allocated as part of any ACQUIRE CONNECTION processing\nI          that takes place.\nN\nI        YES: Contention-winner sessions are established when the\nI          connection is acquired by issuing\nI          CEMT SET CONNECTION(sysid) ACQUIRED, or when the remote\nI          system itself initiates communication.\nN\nI      LU6.1 sessions:\nI        Specify AUTOCONNECT(YES) on the SESSIONS if you want the\nI        connection to be established at initialization or CEDA install.\nN\nI        Specify AUTOCONNECT(NO) on the SESSIONS if you do not want the\nI        connection to be established at initialization or CEDA\nI        installation.\nN\nD    BUILDCHAIN(YES | NO)\nI      Specifies whether CICS is to perform chain\nI      assembly before passing the input data to the application program.\nN\nI      NO: Any TIOA received by an application program from this logical\nI        unit contains one request unit (RU).\nN\nI      YES: Any terminal input/output area (TIOA) received by an\nI        application program from this logical unit contains a complete\nI        chain.\nN\nD    CONNECTION(connection)\nI      Specifies the name of the connection\nI      definition that you want to use with this session definition. The\nI      name can be up to four characters in length.\nN\nI      Note that the CONNECTION definition must be in the same GROUP as\nI      the SESSIONS definition.\nN\nI    INSERVICE: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    NEPCLASS(0 | tranclass)\nI      Specifies the transaction class for the\nI      node error program. This value acts as the default.\nN\nI      0: This results in a link to the default node error program module.\nN\nI      tranclass: The transaction class for the (nondefault) node error\nI        program module. The value can be in the range 1 through 255. For\nI        programming information about the node error program, see the\nI        CICS Customization Guide.\nN\nI      The NEPCLASS attribute is ignored for SNASVCMGR sessions.\nN\nI    OPERID:\nI    OPERPRIORITY:\nI    OPERRSL:\nI    OPERSECURITY: These attributes ares obsolete, but are supported to\nI      provide compatibility with earlier releases of CICS.\nN\nD    RECEIVESIZE(4096 | number)\nI      Specifies the maximum z/OS Communications\nI      Server request unit (RU) size that these sessions are capable of\nI      receiving. The value must be between 1 and 30720 for LU61 sessions,\nI      or 256 and 30720 for APPC sessions. The default is 4096.\nN\nI      The value specified is transmitted to the connected logical unit.\nI      This value may be rounded down by CICS, depending on what value\nI      you specified, because the value must be transmitted in an\nI      architected form. The value may be negotiated down still further\nI      at BIND time.\nN\nI      If CICS is the secondary LU session, this indicates the maximum\nI      z/OS Communications Server request unit (RU) size that these\nI      sessions are capable of sending.\nN\nI    RECOVNOTIFY: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    RECOVOPTION(SYSDEFAULT | CLEARCONV | NONE | RELEASESESS |\nD      UNCONDREL)\nI      This option applies to the recovery of sessions in a CICS region\nI      running with z/OS Communications Server persistent sessions, or\nI      with XRF.\nN\nI      z/OS Communications Server persistent sessions: In a CICS region\nI      running with persistent session support, this option specifies\nI      how you want CICS to recover the session, and return the terminal\nI      to service on system restart within the persistent session delay\nI      interval.\nN\nI      XRF: In a CICS region running with XRF support, this option\nI        specifies how you want CICS to recover the session, and return\nI        the terminal to service after an XRF takeover.\nN\nI      For all recovery options other than NONE, if the action taken is\nI      a z/OS Communications Server UNBIND, the UNBIND is followed by a\nI      z/OS Communications Server SIMLOGON.\nN\nI      CLEARCONV: z/OS Communications Server persistent sessions:I\nI        CLEARCONV is not supported for APPC sessions. It defaults to\nI        SYSDEFAULT.\nN\nI        XRF: If AUTOCONNECT(YES) is specified, the session is restarted.\nI          If AUTOCONNECT(NO) is specified, the session is unbound.\nN\nI      NONE: z/OS Communications Server persistent sessions: In a CICS\nI        region running with persistent sessions support, this specifies\nI        that the session is not to be recovered at system restart within\nI        the persistent session delay interval: in effect, the sessions on\nI        the modegroup have no persistent sessions support. LU6.2 sessions\nI        are unbound and the modegroup CNOS value is reset to zero. After\nI        system restart, the session is reconnected automatically if you\nI        specify AUTOCONNECT(YES).\nN\nI        XRF: In a CICS region running with XRF support, this specifies\nI        that the logon state is not tracked by the alternate system, and\nI        the terminal session is not automatically recovered after a\nI        takeover; in effect, the terminal has no XRF support. After\nI        takeover, the terminal is reconnected automatically by the\nI        alternate system, if you specify AUTOCONNECT(YES).\nN\nI      RELEASESESS: z/OS Communications Server persistent sessions:\nI        RELEASESESS is not supported for APPC sessions. It defaults to\nI        SYSDEFAULT.\nN\nI        XRF: If AUTOCONNECT(YES) is specified, the session is restarted.\nI        If AUTOCONNECT(NO) is specified, the session is unbound.\nN\nI      SYSDEFAULT: z/OS Communications Server persistent sessions: In a\nI        CICS region running with persistent sessions support, this\nI        specifies that CICS is to select the optimum procedure to\nI        recover a session on system restart within the persistent\nI        session delay interval, depending on the session activity and\nI        on the characteristics of the terminal.\nN\nI        Although sessions are recovered, any transactions in-flight at\nI        the time of the failure are abended and not recovered.\nI        Transactions are also abended if the recovered session is being\nI        used by another CICS region over an APPC connection.\nN\nI        CICS recovers the session with the least possible impact, in\nI        one of the following ways:\nN\nI          -> If the session was not busy at the time that CICS failed,\nI             no action is required.\nN\nI          -> If the session was busy at the time that CICS failed, CICS\nI             issues a DEALLOCATE(ABEND) (equivalent to an\nI             EXEC CICS ISSUE ABEND) for the APPC conversation in\nI             progress at the time of the failure.\nN\nI          -> If neither of these events apply, the session is unbound.\nN\nI        XRF: If AUTOCONNECT(YES) is specified, the session is restarted.\nI        If AUTOCONNECT(NO) is specified, the session is unbound.\nN\nI      UNCONDREL: Requires CICS to send an UNBIND request to release the\nI        active session. The UNBIND is sent whether or not the session was\nI        busy at the time of system restart (in the case of persistent\nI        sessions support) or takeover (in the case of XRF).\nN\nD    RELREQ(NO | YES)\nI      Specifies whether CICS is to release the logical\nI      unit upon request by another z/OS Communications Server application\nI      program.\nN\nD    SENDSIZE(4096 | number)\nI      Specifies the maximum z/OS Communications\nI      Server request unit (RU) size that these sessions are capable of\nI      sending. The value must be between 1 and 30720 for LU61 sessions,\nI      or between 256 and 30720 for APPC sessions. The default is 4096.\nI      The value may be negotiated down at bind time. Increasing the\nI      value of SENDSIZE causes more storage to be allocated for the\nI      session but may decrease the number of physical messages sent\nI      between the two nodes.\nN\nI      If CICS is the secondary LU session, this attribute indicates the\nI      maximum z/OS Communications Server request unit (RU) size that\nI      these sessions are capable of receiving. The value must be\nI      between 256 and 30720.\nN\nD    SESSPRIORITY(0 | priority)\nI      Specifies the terminal priority. This\nI      decimal value (0 through 255) is used in establishing the overall\nI      transaction processing priority. (Transaction processing priority\nI      is equal to the sum of the terminal priority, transaction priority,\nI      and operator priority; this must not exceed 255.)\nN\nI    TRANSACTION: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    USERAREALEN(0 | number)\nI      Specifies the length, in bytes, of the user\nI      area for this session, in the range 0 through 255. It should be\nI      made as small as possible. The terminal user area is initialized\nI      to zeros when the session is installed.\nN\nI      The terminal user area might be located in 31-bit storage or in\nI      24-bit storage, depending on the value of the TCTUALOC system\nI      initialization parameter. The default is that the terminal user\nI      area can be in either 31-bit storage or 24-bit storage, but CICS\nI      uses 31-bit storage wherever possible. If you require the terminal\nI      user area to be in 24-bit storage, because you have application\nI      programs that are not capable of 31-bit addressing, specify the\nI      system initialization parameter TCTUALOC=BELOW for the CICS region.\nN\nD    USERID(userid)\nI      Specifies a user identifier used for sign-on\nI      (SEC=YES or MIGRATE) and referred to in security error messages,\nI      security violation messages, and the audit trail. It must be a\nI      valid userid defined to the security manager, or operators will be\nI      unable to sign on. All access to protected resources depends on\nI      USERID.\nN\nI      This USERID overrides a SECURITYNAME specified on the CONNECTION\nI      definition.\nN\nI      The name can be up to eight characters in length.\nN\nNAttributes for APPC sessions:\nN-----------------------------\nD    MAXIMUM(1,0 | value1,value2)\nI      (APPC only): Specifies the maximum\nI      number of sessions that are to be supported for the modeset.\nI      Value1 must be greater than or equal to value2.\nN\nI      1|value1: The maximum number of sessions in the group. This value\nI        can be in the range 1 through 999. The default is 1.\nN\nI      0|value2: The maximum number of sessions that are to be supported\nI        as contention winners. This value can be in the range 0 to 999.\nI        The default is 0. Note that this operand has no meaning for a\nI        single session connection.\nN\nI      SNA allows some resources (for example, switched lines) to be\nI      defined in the network as limited resources. At bind time,\nI      z/OS Communications Server indicates to CICS whether the bind\nI      is over a limited resource. When a CICS task frees a session\nI      across a limited resource, CICS unbinds the session if no other\nI      task wants to use it.\nN\nI      If the sessions are to use limited resources, specify\nI      MAXIMUM(value1,0). This causes any unbound session to be reset so\nI      that either side can then bind it as a winner when it is next\nI      required.\nN\nI      For further information on the effects of the MAXIMUM option, and\nI      the use of limited resources, see the CICS Intercommunication\nI      Guide.\nN\nD    MODENAME(modename)\nI      (APPC only): Specifies the name that identifies\nI      a group of sessions for use on an APPC connection. The name can be\nI      up to eight characters in length, and must be the name of a\nI      z/OS Communications Server LOGMODE entry defined to\nI      z/OS Communications Server. It must not be the reserved name\nI      SNASVCMG. If you omit the modename it defaults to blanks. See\nI      the CICS Intercommunication Guide for more information about\nI      z/OS Communications Server modenames.\nN\nI      The MODENAME must be unique for each group of sessions defined\nI      for any one intersystem link. That is, the MODENAME must be unique\nI      among the SESSIONS definitions related to one CONNECTION\nI      definition. It is passed to z/OS Communications Server as the\nI      LOGMODE name.\nN\nN\nNAttributes for MRO (ISC) and LU61 sessions:\nN-------------------------------------------\nD    DISCREQ(NO | YES)\nI      Specifies whether disconnect requests are to be\nI      honored. DISCREQ applies to LUTYPE6.1 ISC sessions, but not to MRO\nI      (ISC) sessions where CICS is not dealing with z/OS Communications\nI      Server devices.\nN\nI      DISCREQ does not apply to APPC (LUTYPE6.2) sessions. When APPC is\nI      used, individual sessions are acquired as transactions need them,\nI      then are subsequently freed. Because it is possible to have\nI      multiple sessions between APPC logical units, there should never\nI      be a problem of one request holding up another. It is not possible\nI      to disconnect an individual APPC session; instead, you can issue\nI      a CEMT SET CONNECTION RELEASED command.\nN\nI      NO: CICS is not to honor a disconnect request for a\nI        z/OS Communications Server device.\nN\nI      YES: CICS is to honor a disconnect request for a\nI        z/OS Communications Server device, and issue a\nI        z/OS Communications Server CLSDST macro instruction to terminate\nI        the z/OS Communications Server session with that logical unit.\nN\nI        CESF LOGOFF or GOODNIGHT commands issued from the terminal also\nI        cause disconnection if you specify DISCREQ(YES).\nN\nD    IOAREALEN(0,0 | value1,value2)\nI      Specifies the length, in bytes, of\nI      the terminal input/output area to be used for processing messages\nI      transmitted on the MRO (ISC) link.\nN\nI      value1: value1 specifies the minimum size of a terminal\nI        input/output area to be passed to an application program when\nI        a RECEIVE command is issued.\nN\nI      value2: If value2 is not specified, or is less than value1, it\nI        defaults to the value of value1.\nN\nI        You can specify value2 as greater than or equal to value1. In\nI        this case, when the size of an input message exceeds value1,\nI        CICS uses a terminal input/output area (TIOA) value2 bytes long.\nI        When a transaction is attached on an MRO link, CICS uses a TIOA\nI        that is long enough to contain the initial input message.\nI        Otherwise, if the input message size also exceeds value2, the\nI        node abnormal condition program sends an exception response to\nI        the terminal.\nN\nI      You can waste both real and virtual storage by specifying an\nI      IOAREALEN value that is too large for most messages transmitted\nI      on your MRO link. On the other hand, if you specify an IOAREALEN\nI      value that is either zero or smaller than most of your messages,\nI      excessive FREEMAIN and GETMAIN activity may occur. This results\nI      in additional processor requirements.\nN\nD    NETNAMEQ(netnameq)\nI      Specifies the name by which the remote IMS system knows this\nI      particular session. This is used for CICS-IMS sessions. The\nI      name can be up to eight characters in length. The acceptable\nI      characters are:\nI      A-Z 0-9 $ @ # . / - _ % & \u001b ? ! : | \" = \u00ac , ; < and >.\nI      Lowercase characters are converted to uppercase except\nI      when using the CREATE command.\nN\nD    RECEIVECOUNT(number | 1)\nI      For  MRO, and z/OS Communications Server LU6.1\nI      sessions, and for sessions with EXCI clients, specifies the number\nI      of receive sessions; that is, sessions that normally receive before\nI      sending:\nN\nI      -> MRO receive sessions (including sessions with EXCI clients)\nI         always receive before sending.\nN\nI      -> z/OS Communications Server LU6.1 receive sessions normally\nI         receive before sending, but may send before receiving when\nI         there is a shortage of suitable send sessions.\nN\nI       If you do not specify the RECEIVECOUNT attribute, there are no\nI       receive sessions.\nN\nI       The number of receive sessions you can specify depends upon the\nI       length of the prefix specified in the RECEIVEPFX attribute:\nN\nI       -> If you use the default receive prefix (<), or your own\nI          1-character prefix, you can specify 1 through 999 receive\nI          sessions.\nN\nI       -> If you use a 2-character prefix, you can specify 1 through\nI          99 receive sessions.\nN\nI      You should also ensure that the value specified matches the number\nI      of send sessions in the partner system:\nN\nI      -> If the partner is another CICS system, the value should match\nI         the SENDCOUNT specified in the partner system.\nN\nI      -> If the partner is an EXCI client, you cannot specify the number\nI         of send sessions in the partner. However, there is an upper\nI         limit of send sessions in an EXCI address space. When this\nI         limit is reached, IRP rejects further requests for a session\nI         with SYSTEM_ERROR reason code 608. For information about how\nI         the limit is specified for the CICS system, see EXCI pipe\nI         allocation.\nN\nD    RECEIVEPFX(< | prefix)\nI      Specifies a 1-or 2-character prefix that\nI      CICS is to use as the first one or two characters of the receive\nI      session names (the names of the terminal control table terminal\nI      entries (TCTTEs) for the sessions).\nN\nI      Prefixes must not cause a conflict with an existing connection or\nI      terminal name.\nN\nN      < (MRO and EXCI sessions)\nN      -------------------------\nI        For MRO and EXCI sessions, if you do not specify your own\nI        receive prefix, CICS enforces the default prefix the less-than\nI        symbol (<), which is used in conjunction with the receive count\nI        to generate receive session names.\nN\nI        CICS creates the last three characters of the session names.\nI        The acceptable characters are A-Z 1-9. These 3-character\nI        identifiers begin with the letters AAA, and continue in ascending\nI        sequence until the number of session entries reaches the limit\nI        set by the RECEIVECOUNT value. Note that receive session names\nI        are generated after the send sessions, and they follow in the\nI        same sequence.\nN\nI        For example, if the last session name generated for the send\nI        sessions is >AAJ, using the default sendprefix (>) CICS generates\nI        the receive session names as <AAK, <AAL, <AAM, and so on. (This\nI        method of generation of session identifiers is the same as for\nI        APPC sessions, except for the initial prefix symbol.)\nN\nI        If you use more than 46656 sessions (<AAA to <999), CICS\nI        allocates the next range of AAA< to 999<, again in a similar\nI        manner to APPC sessions.\nN\nI        A region with more than 46656 sessions might not perform well.\nI        You should consider the alternative of increasing the number of\nI        CICS regions.\nN\nI        Although you can define up to 93312 MRO sessions there is a\nI        current restriction that prevents you from attempting to acquire\nI        more than 65535 sessions in one attempt. This might occur when\nI        CICS starts or for a CEDA install for more than 65536 sessions\nI        if ALL the partner regions are up and running. Further sessions\nI        can be acquired later.\nN\nI        Note: If you specify your own prefix, CICS generates the session\nI        names in the same way as it does for LUTYPE6.1 sessions.\nN\nI      prefix (LUTYPE6.1 sessions): If the sessions are on LUTYPE6.1 ISC\nI        connections, you must specify a 1-or 2-character prefix. Do not\nI        use the default < symbol for LUTYPE6.1 sessions.\nN\nI        For LUTYPE6.1 sessions (and MRO if you specify your own 1-or\nI        2-character prefix), CICS generates session names by appending\nI        a number to the prefix, either in the range 1 through 99, or 1\nI        through 999. The number begins with 1 and is incremented by 1\nI        until the specified RECEIVECOUNT is reached.\nN\nD    SENDCOUNT(number | 1)\nI      For MRO, and z/OS Communications Server LU6.1\nI      sessions only, specifies the number of send sessions; that is,\nI      sessions that normally send before receiving:\nN\nI      -> MRO send sessions always send before receiving\nN\nI      -> z/OS Communications Server LU6.1 send sessions normally send\nI         before receiving, but may receive before sending when there is\nI         a shortage of suitable receive sessions\nN\nI      The number of send sessions you can specify depends upon the length\nI      of the prefix specified in the SENDPFX attribute:\nN\nI        -> If you use the default send prefix (>), or your own\nI           1-character prefix, you can specify 1 through 999 send\nI           sessions\nN\nI        -> If you use a 2-character prefix, you can specify 1 through 99\nI           send sessions.\nN\nI       You should also ensure that the value specified matches the\nI       number of receive sessions in the partner system:\nN\nI       -> If the partner is another CICS system, the value should match\nI          the RECEIVECOUNT specified in the partner system\nN\nI       If you do not specify the SENDCOUNT attribute, there are no send\nI       sessions. Do not specify the SENDCOUNT attribute when the partner\nI       is an EXCI client.\nN\nD    SENDPFX(> | prefix)\nI      Specifies a 1-or 2-character prefix that CICS\nI      is to use as the first one or two characters of the send session\nI      names (the names of the terminal control table terminal entries\nI     (TCTTEs) for the sessions).\nN\nI      Prefixes must not cause a conflict with an existing connection or\nI      terminal name.\nN\nI      > (MRO sessions): For MRO sessions, if you do not specify your\nI        own send prefix, CICS enforces the default prefix the\nI        greater-than symbol (>), which is used in conjunction with the\nI        send count to generate send session names.\nN\nI        CICS creates the last three characters of the session names\nI        from the alphanumeric characters A through Z, and 1 through 9.\nI        These 3-character identifiers begin with the letters AAA, and\nI        continue in ascending sequence until the number of session\nI        entries reaches the limit set by the SENDCOUNT value.\nN\nI        For example, using the default prefix (>), CICS generates\nI        session names as >AAA, >AAB, >AAC, and so on. If you use more\nI        than 46656 sessions (>AAA to >999), CICS allocates the next\nI        range of AAA> to 999>. (This method of generation of session\nI        identifiers is the same as for APPC sessions, except for the\nI        initial symbol.)\nN\nI        A region with more than 46656 sessions might not perform well.\nI        You should consider the alternative of increasing the number of\nI        CICS regions.\nN\nI        Although you can define up to 93312 MRO sessions there is a\nI        current restriction that prevents you from attempting to acquire\nI        more than 65535 sessions in one attempt. This might occur during\nI        CICS start up or for a CEDA install for more than 65536\nI        sessions if ALL the partner regions are up and running. Further\nI        sessions can be acquired later.\nN\nI        Note: If you specify your own prefix, CICS generates the session\nI        names in the same way as it does for LUTYPE6.1 sessions.\nN\nI      prefix (for LUTYPE6.1 sessions): If the sessions are on LUTYPE6.1\nI        ISC connections, you must specify a 1-or 2-character prefix. Do\nI        not use the default > symbol for LUTYPE6.1 sessions.\nN\nI      For LUTYPE6.1 sessions (and MRO if you specify your own 1-or\nI      2-character prefix), CICS generates session names by appending a\nI      number to the prefix, either in the range 1 through 99, or 1\nI      through 999. The number begins with 1 and are incremented by 1\nI      until the specified SENDCOUNT is reached.\nN\nD    SESSNAME(sessname)\nI      Specifies the symbolic identification to be used\nI      as the local half of a session qualifier pair in a CICS\nI      intercommunication parallel session. The name can be up to four\nI      characters in length.\nN\nNAttributes for EXCI sessions:\nN-----------------------------\nD    IOAREALEN(0,0 | value1,value2)\nI      Specifies the length, in bytes, of\nI      the terminal input/output area to be used for processing messages\nI      transmitted on the MRO (ISC) link.\nN\nI      value1: value1 specifies the minimum size of a terminal\nI        input/output area to be passed to an application program when\nI        a RECEIVE command is issued.\nN\nI      value2: If value2 is not specified, or is less than value1, it\nI        defaults to the value of value1.\nN\nI        You can specify value2 as greater than or equal to value1. In\nI        this case, when the size of an input message exceeds value1,\nI        CICS uses a terminal input/output area (TIOA) value2 bytes long.\nI        When a transaction is attached on an MRO link, CICS uses a TIOA\nI        that is long enough to contain the initial input message.\nI        Otherwise, if the input message size also exceeds value2, the\nI        node abnormal condition program sends an exception response to\nI        the terminal.\nN\nI      You can waste both real and virtual storage by specifying an\nI      IOAREALEN value that is too large for most messages transmitted\nI      on your MRO link. On the other hand, if you specify an IOAREALEN\nI      value that is either zero or smaller than most of your messages,\nI      excessive FREEMAIN and GETMAIN activity may occur. This results\nI      in additional processor requirements.\nN\nD    RECEIVECOUNT(number)\nI      For  MRO, and z/OS Communications Server LU6.1\nI      sessions, and for sessions with EXCI clients, specifies the number\nI      of receive sessions; that is, sessions that normally receive before\nI      sending:\nN\nI      -> MRO receive sessions (including sessions with EXCI clients)\nI         always receive before sending.\nN\nI      -> z/OS Communications Server LU6.1 receive sessions normally\nI         receive before sending, but may send before receiving when\nI         there is a shortage of suitable send sessions.\nN\nI       If you do not specify the RECEIVECOUNT attribute, there are no\nI       receive sessions.\nN\nI       The number of receive sessions you can specify depends upon the\nI       length of the prefix specified in the RECEIVEPFX attribute:\nN\nI       -> If you use the default receive prefix (<), or your own\nI          1-character prefix, you can specify 1 through 999 receive\nI          sessions.\nN\nI       -> If you use a 2-character prefix, you can specify 1 through\nI          99 receive sessions.\nN\nI      You should also ensure that the value specified matches the number\nI      of send sessions in the partner system:\nN\nI      -> If the partner is another CICS system, the value should match\nI         the SENDCOUNT specified in the partner system.\nN\nI      -> If the partner is an EXCI client, you cannot specify the number\nI         of send sessions in the partner. However, there is an upper\nI         limit of send sessions in an EXCI address space. When this\nI         limit is reached, IRP rejects further requests for a session\nI         with SYSTEM_ERROR reason code 608. For information about how\nI         the limit is specified for the CICS system, see EXCI pipe\nI         allocation.\nN\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG28": {"ttr": 7939, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG28\nTCICS\nT-RDG\nT-Chapter 28. TCPIPSERVICE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 28. TCPIPSERVICE resources\nN==================================\nNA TCPIPSERVICE resource defines which TCP/IP services are to use CICS\nNinternal sockets support.\nN\nNWith TCPIPSERVICE resources, the CICS services that can be defined are\nNECI over TCP/IP (for CICS Clients), CICS web support (HTTP), IPIC, or\nNa user-defined protocol. The TCPIPSERVICE definition allows you to\nNmanage these internal CICS interfaces, with CICS listening on multiple\nNports, with different flavors of ECI, CICS web support or the\nNuser-defined protocol on different ports.\nN\nNTCPIPSERVICE definitions are for use only with the CICS-provided TCP/IP\nNservices, and have nothing to do with the z/OS Communications Server IP\nNCICS Sockets interface. The TCP/IP Socket Interface for CICS is\nNsupplied with z/OS Communications Server, which is an integral part of\nNz/OS and does not use the CICS SO domain.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2801": {"ttr": 8193, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2801\nTCICS\nT-RDG\nT-Chapter 28. TCPIPSERVICE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-121455\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 28. TCPIPSERVICE resources\nN==================================\nNTCPIPSERVICE attributes\nN-----------------------\nNDescribes the syntax and attributes of the TCPIPSERVICE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TCPIPSERVICE(name)\nI      Specifies the 8-character name of this service.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    BACKLOG(0 | backlog)\nI      Specifies, in the range 1 - 32767, the maximum\nI      number of inbound TCP/IP connection open requests that can be\nI      queued in TCP/IP waiting for CICS processing. When the maximum is\nI      reached, TCP/IP rejects additional requests. If the value of\nI      BACKLOG is zero, the value of TCP/IP attribute SOMAXCONN is used.\nI      If the value of BACKLOG is greater than SOMAXCONN, the value of\nI      SOMAXCONN is used. For IPIC connections set this value to the\nI      maximum number of concurrent connection requests that can be\nI      established by using this TCPIPSERVICE.\nN\nI      If performance tuning for HTTP connections is enabled, when CICS\nI      is at maximum capacity, all inbound HTTP connection open requests\nI      will queue outside of CICS in the TCPIPSERVICE's listening\nI      connection's backlog queue in TCP/IP. Ensure the BACKLOG value is\nI      large enough, because when this queue is full, connection requests\nI      will be refused. NETSTAT ALL shows the backlog values in use for\nI      a listening connection. For more information, see Netstat in the\nI      z/OS Communication Server IP System Administrator's Commands.\nN\nI      When connection balancing is in use, the backlog queue's depth is\nI      included in the processing that determines the most suitable\nI      listener, so consider the BACKLOG attribute across all\nI      TCPIPSERVICEs on CICS regions that share a port.\nN\nI    DNSGROUP(dnsgroup): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS.\nN\nI    GRPCRITICAL({NO|YES}): This attribute is obsolete, but is supported\nI      to provide compatibility with earlier releases of CICS.\nN\nD    HOST(ANY | DEFAULT | hostname)\nI      Specifies the 116-character IPv4 or\nI      IPv6 address or host name on which CICS listens for incoming\nI      connections. Use HOST instead of IPADDRESS when you define new\nI      resources. Do not specify both HOST and IPADDRESS, because HOST\nI      always takes precedence over IPADDRESS. IPADDRESS is supported for\nI      existing programs that specify IPv4 function.\nN\nI      Possible values are as follows:\nN\nI      ANY: The ANY option has the same function as the ANY and INADDR_ANY\nI        options of IPADDRESS. The ANY option specifies that CICS listens\nI        on any of the addresses known to TCP/IP for the host system. You\nI        can have multiple IP addresses defined for a host. By specifying\nI        ANY, you also allow for the TCPIPSERVICE definition to be shared\nI        among CICS servers. If you specify ANY, CICS attempts to bind to\nI        the port on every stack where it is defined. If, in addition, you\nI        want more than one CICS region to bind to the port, you must\nI        specify the SHAREPORT option in every stack where the port is\nI        defined. If you do not do so, only one CICS region can bind to\nI        the port number in those stacks that do not have the SHAREPORT\nI        option. Subsequent attempts by other regions to bind to every\nI        stack fail, and CICS issues a message indicating that the port\nI        is in use.\nN\nI        If you specify the ANY option in a dual-mode (IPv4 and IPv6)\nI        environment, CICS attempts to reuse the most recent IPv4 or IPv6\nI        address. If this is the first connection, and CICS cannot\nI        retrieve an address, 0.0.0.0 is returned, and no affinity is\nI        assigned.\nN\nI      DEFAULT: The DEFAULT option assigns affinity to the TCP/IP stack\nI      that is defined as the default in a multistack CINET environment.\nN\nI        If the DEFAULT option is used in a dual-mode (IPv4 and IPv6)\nI        environment, affinity is assigned to the IPv4 environment because\nI        the DEFAULT option is applied to the IPv4 environment.\nN\nI        If DEFAULT is used in a non-CINET environment or no default\nI        TCP/IP stack exists, an exception trace is written, 0.0.0.0\nI        is returned, and no affinity is assigned.\nN\nI        If you are operating in a dual-mode (IPv4 and IPv6) environment,\nI        specifying HOST(DEFAULT) forces all traffic to pass across the\nI        IPv4 network connection.\nN\nI      hostname: hostname can be a character host name, an IPv4 address,\nI        or an IPv6 address.\nN\nI        You can specify an address as a character name that can be looked\nI        up on the domain name server. The host name can be entered in\nI        uppercase, lowercase, or mixed case, but if a host name is\nI        specified instead of an IP address, the host name is converted\nI        to lowercase in the TCPIPSERVICE definition.\nN\nI        Do not use a character host name if you have a list of addresses\nI        at the domain name server, because hostname resolves against the\nI        first IP address only in the list (that is, the server does not\nI        listen on any of the IP addresses in the list for this host\nI        name). If you require a particular IP address in a list at the\nI        domain name server, define the IP address explicitly in hostname.\nN\nI        If you specify an IPv6 address (or a host name that resolves to\nI        an IPv6 address), ensure that you are operating in a dual-mode\nI        (IPv4 and IPv6) environment and that the client or server that\nI        you are communicating with is also operating in a dual-mode\nI        (IPv4 and IPv6) environment.\nN\nI        For more information about IPv6, see Understanding IPv6 and CICS\nI        in Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. See IP addresses in Product overview for more\nI        information about address formats.\nN\nD    IPADDRESS(ANY | DEFAULT | INADDR_ANY | ipaddress)\nI      Specifies the dotted\nI      decimal IPv4 address on which this TCPIPSERVICE listens for\nI      incoming connections. It must be of the form nnn.nnn.nnn.nnn where\nI      nnn is 0 through 255. You can use the HOST attribute to specify\nI      the same information as IPADDRESS, but HOST also supports an IPv6\nI      format address and character host name. If you are using IPv6\nI      connections, you must use the HOST attribute for your definitions\nI      instead of IPADDRESS. HOST always takes precedence over IPADDRESS.\nI      The IPADDRESS attribute interacts with HOST in a number of ways:\nN\nI        -> If you specify HOST, IPADDRESS is always overwritten with a\nI           value that depends on the contents of HOST:\nN\nI           -> If you specify an IPv4 address, ANY, or DEFAULT in HOST,\nI              IPADDRESS is overwritten with the contents of HOST.\nN\nI           -> If you specify an IPv6 address or a character host name\nI              in HOST, IPADDRESS is overwritten with blanks.\nN\nI        -> If you specify both HOST and IPADDRESS, the HOST value is\nI           always used:\nN\nI           -> If HOST contains an IPv4 address, ANY, or DEFAULT,\nI              IPADDRESS is populated with the contents of HOST.\nN\nI           -> If HOST contains an IPv6 address, IPADDRESS is overwritten\nI              with blanks.\nN\nI      If you specify IPADDRESS (but not HOST), HOST is populated with\nI      the contents of IPADDRESS.\nN\nI      If you specify an IP address of 0.0.0.0 and the HOST option is\nI      blank, a warning is issued and the value ANY is assumed.IPADDRESS\nI      is supported for existing IPv4 function only. Use the HOST option\nI      for new resources.\nN\nI      Possible values are:\nN\nI      ANY or INADDR_ANY: The TCPIPSERVICE listens on any of the addresses\nI        known to TCP/IP for the host system. It is possible to have\nI        multiple IP addresses defined for a host. Specifying ANY or\nI        INADDR_ANY also allows for the TCPIPSERVICE definition to be\nI        shared among CICS servers.\nN\nI        If you specify ANY or INADDR_ANY, CICS attempts to bind to the\nI        port on every stack where it is defined. If, in addition, you\nI        want more than one CICS region to bind to the port you must\nI        specify the SHAREPORT option in every stack where the port is\nI        defined. If you do not do so, only one CICS region is able to\nI        bind to the port number in those stacks that do not have the\nI        SHAREPORT option. Subsequent attempts by other regions to bind\nI        to every stack fails: CICS issues a message indicating that the\nI        port is in use. For information about the SHAREPORT option, see\nI        z/OS Communications Server: IP Configuration Reference.\nN\nI      DEFAULT: Assigns affinity to the TCP/IP stack that is defined as\nI        the default in a multi stack CINET environment. If DEFAULT is\nI        used in a non-CINET environment or there is no default TCP/IP\nI        stack, then an exception trace is written and no affinity is\nI        assigned.\nN\nI      ipaddress: The TCPIPSERVICE accepts connections on this particular\nI        address. If the address specified is not known to TCP/IP on the\nI        host system, the TCPIPSERVICE does not open. If you enter a\nI        specific address here, this definition might not be valid for\nI        CICS servers running on other regions, and you might not be able\nI        to share the definition with those servers.\nN\nD    PORTNUMBER(port)\nI      Specifies, in the range 1 through 65535, the\nI      decimal number of the port on which CICS is to listen for incoming\nI      client requests.\nN\nI      The well-known ports are those from 1 through 1023. It is advisable\nI      to use well-known port numbers only for those services to which\nI      they are normally assigned. The well-known ports for services\nI      supported by CICS are:\nN\nI        80 HTTP (non-SSL)\nN\nI        443 HTTP with SSL\nN\nI        1435 ECI (Registered port number)\nN\nI      You should take care to resolve conflicts with any other servers\nI      on the same MVS image that might use the well-known ports. Port\nI      sharing must be enabled for any port that you want to share across\nI      CICS systems within an MVS image. For more information, see\nI      z/OS Communications Server: IP Configuration Reference.\nN\nI    PRIVACY: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS. For more information,\nI      see Obsolete attributes in Reference System definition.\nN\nD    PROTOCOL(HTTP | ECI | IPIC | USER)\nI      Specifies the application level\nI      protocol used on the TCP/IP port.\nN\nI      HTTP: HTTP protocol is used. HTTP protocol is handled by CICS Web\nI        support. CICS performs basic acceptance checks for messages sent\nI        and received using this protocol. This protocol is required for\nI        the well-known ports 80 (used for HTTP without SSL) and 443\nI        (used for HTTP with SSL). HTTP requests might qualify for being\nI        processed by directly attached user transactions, and bypassing\nI        the web attach task, defined in the TRANSACTION attribute of\nI        TCPIPSERVICE. For more information, see HTTP requests are\nI        processed by directly attached user transactions in Improving\nI        performance.\nN\nI      IIOP: The IIOP attribute in TCPIPSERVICE definitions is obsolete\nI        but is retained for compatibility reasons.\nN\nI      ECI: The CICS ECI protocol is used.\nN\nI      IPIC: IPIC protocol is used. Specify IPIC for TCPIPSERVICE\nI        resources that are to be used for IP interconnectivity (IPIC)\nI        connections. USER The user-defined protocol is used. Messages\nI        are processed as non-HTTP messages. They are flagged as non-HTTP\nI        and passed unchanged to the analyzer program for the TCPIPSERVICE\nI        resource.\nN\nI      CICS: Web support facilities are used for handling the request, but\nI        no acceptance checks are carried out for messages sent and\nI        received by using this protocol. Processing for all non-HTTP\nI        requests must be carried out under the USER protocol, so that\nI        they are protected from the basic acceptance checks that CICS\nI        carries out for requests by using the HTTP protocol. If an HTTP\nI        message is handled by the USER protocol, you are responsible\nI        for checking its validity.\nN\nD    STATUS(OPEN | CLOSED)\nI      Indicates the initial status of the service\nI      after installation. Set it to OPEN if CICS is to begin listening\nI      for this service after installation. Set to CLOSE if CICS is not\nI      to listen on behalf of this service after installation.\nN\nI      This attribute is ignored for TCPIPSERVICE resources that are\nI      dynamically generated by a CICS bundle. The initial status of a\nI      TCPIPSERVICE resource is derived from the initial status of the\nI      bundle that defines the resource.\nN\nNAttributes used with PROTOCOL(ECI):\nN-----------------------------------\nD    ATTACHSEC(VERIFY | LOCAL)\nI      Specifies the level of attach-time user\nI      security required for this connection.\nN\nI      This option is valid only for PROTOCOL(ECI).\nN\nI      LOCAL: Specifies that CICS does not require a user ID or password\nI        (or password phrase) from clients.\nN\nI      VERIFY: Specifies that incoming attach requests must specify a\nI        user ID, and a user password or password phrase. Specify VERIFY\nI        when connecting systems are unidentified and cannot be trusted.\nN\nD    SOCKETCLOSE(NO)\nI      Specifies whether, and for how long, CICS\nI      waits before it closes the socket. The SOCKETCLOSE attribute does\nI      not apply to the first receive request that is issued after a\nI      connection is made. On the first receive request for the ECI and\nI      USER protocols, CICS waits for data for 30 seconds before it closes\nI      the socket.\nN\nI      On the first receive request for the HTTP protocol, CICS waits for\nI      the DTIMEOUT value associated with the transaction specified on\nI      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for\nI      30 seconds.\nN\nI      The interval is measured from the time of the initial receive\nI      request for incoming data on that socket.\nN\nI      NO: The socket remains open until it is closed by the client, or\nI        by a user application program in CICS.\nN\nI      hhmmss: The interval (in HHMMSS format) from the time of the\nI        initial receive request for incoming data, after which CICS is\nI        to timeout the socket.\nN\nI        Choose a value that is appropriate to the responsiveness of the\nI        client, and the reliability of your network. Specifying\nI        000000 closes the socket immediately if no data is available\nI        for any receive requests other than the first one.\nN\nI        If you are using this TCPIPSERVICE resource for CICS web support\nI        with the HTTP protocol, a zero setting for SOCKETCLOSE means that\nI        CICS closes the connection immediately after receiving data from\nI        the web client, unless further data is waiting. This setting\nI        means that persistent connections cannot be maintained, and it\nI        is not compliant with the HTTP/1.1 specification. Use a zero\nI        setting for SOCKETCLOSE with the HTTP protocol only if you have\nI        a special requirement for it in a CICS region that is not\nI        currently handling external requests, for example, in a test\nI        environment.\nN\nI        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify\nI        SOCKETCLOSE(NO).\nN\nI        If you specify PROTOCOL(USER), persistent sessions are not\nI        supported, and you should specify SOCKETCLOSE(000000).\nN\nI        After the TCPIPSERVICE resource is installed, you cannot change\nI        this value using CEMT; you must set the TCPIPSERVICE resource\nI        out of service, then re-install the TCPIPSERVICE resource with\nI        the modified definition.\nN\nD    TRANSACTION(CIEP | transaction)\nI      Specifies the 4-character ID of the CICS\nI      transaction attached to process new requests received for this\nI      service.\nN\nI      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP\nI         (or another transaction that executes program DFHIEP).\nN\nI      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another\nI         transaction that executes program DFHWBXN). HTTP requests might\nI         qualify for being processed by directly attached user\nI         transactions, and bypassing the web attach task. For more\nI         information, see HTTP requests are processed by directly\nI         attached user transactions in Improving performance.\nN\nI      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another\nI         transaction that executes program DFHISCOP).\nN\nI      -> For a USER TCPIPSERVICE resource, specify CWXU (or another\nI         transaction that executes program DFHWBXN).\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nNAttributes used with PROTOCOL(HTTP):\nN------------------------------------\nD    AUTHENTICATE(NO | AUTOMATIC | AUTOREGISTER | BASIC | CERTIFICATE)\nI      Specifies the authentication and identification scheme to be used\nI      for inbound TCP/IP connections for the HTTP and USER protocols.\nN\nI      For the IPIC protocol, this attribute is not applicable.\nN\nI      For the ECI protocol, this attribute is invalid.\nN\nI      For more information about authentication, see Identification and\nI      authentication in Securing.\nN\nI      ASSERTED: The ASSERTED attribute in TCPIPSERVICE definitions is\nI        obsolete but is retained for compatibility reasons.\nN\nI      When PROTOCOL(HTTP) or PROTOCOL(USER) is specified:\nN\nI      NO: The client is not required to send authentication or\nI        identification information. However, if the client sends a\nI        valid certificate that is already registered to the security\nI        manager, and associated with a user ID, then that user ID\nI        identifies the client.\nN\nI      AUTOMATIC: This combines the AUTOREGISTER and BASIC functions.\nN\nI        -> If the client sends a certificate that is already registered\nI           to the security manager, and associated with a user ID, then\nI           that user ID identifies the client.\nN\nI        -> If the client sends a certificate that is not registered to\nI           the security manager, then HTTP Basic authentication is used\nI           to obtain a user ID, and password or password phrase from the\nI           client. If the password or password phrase is valid, CICS\nI           registers the certificate with the security manager, and\nI           associates it with the user ID. The user ID identifies the\nI           client.\nN\nI        -> If the client does not send a certificate, then HTTP Basic\nI           authentication is used to obtain a user ID, and password or\nI           password phrase from the user. When the user has been\nI           successfully authenticated, the user ID supplied identifies\nI           the client.\nN\nI      AUTOREGISTER: SSL client certificate authentication is used to\nI        authenticate the client.\nN\nI        -> If the client sends a valid certificate that is already\nI           registered to the security manager, and associated with a\nI           user ID, then that user ID identifies the client.\nN\nI        -> If the client sends a valid certificate that is not registered\nI           to the security manager, then HTTP Basic authentication is\nI           used to obtain a user ID, and password or password phrase from\nI           the client. If the password or password phrase is valid, CICS\nI           registers the certificate with the security manager, and\nI           associates it with the user ID. The user ID identifies the\nI           client.\nN\nI        -> For a certificate to be registered, the client needs the\nI           appropriate access definition in RACF. The access required\nI           is READ access to the IRR.DIGTCERT.ADD profile in the\nI           FACILITY class.\nN\nI        Note: If you specify AUTHENTICATE(AUTOREGISTER), you must also\nI        specify SSL(CLIENTAUTH | ATTLSAWARE).\nN\nI      BASIC: HTTP Basic authentication is used to obtain a user ID, and\nI        password or password phrase from the client.\nN\nI        If the client has sent an Authorization header, its contents are\nI        decoded as a user ID, and password or password phrase. If these\nI        are not valid, an HTTP 401 response is returned, together with\nI        a WWW-Authenticate header, which causes the client program to\nI        prompt the user for a new user ID, and password or password\nI        phrase. This process continues until the client either supplies\nI        a valid user ID, and password or password phrase, or cancels the\nI        connection.\nN\nI        When the user has been successfully authenticated, the user ID\nI        supplied identifies the client.\nN\nI      CERTIFICATE: SSL client certificate authentication is used to\nI        authenticate and identify the client. The client must send a\nI        valid certificate that is already registered to the security\nI        manager, and associated with a user ID. If a valid certificate\nI        is not received, or the certificate is not associated with a\nI        user ID, the connection is rejected.\nN\nI        When the user has been successfully authenticated, the user ID\nI        associated with the certificate identifies the client.\nN\nI        Note: If you specify AUTHENTICATE(CERTIFICATE), you must also\nI        specify SSL(CLIENTAUTH | ATTLSAWARE).\nN\nI        Note: For the HTTP or USER protocol, the analyzer program\nI        (named by the user replaceable module (URM) attribute) can change\nI        the user ID supplied by the authentication process. If the\nI        authentication process does not supply a user ID, the analyzer\nI        program or URIMAP definition can supply one. Otherwise, the CICS\nI        default user ID is used.\nN\nD    CERTIFICATE(label)\nI      Specifies the label of an X.509 certificate that\nI      is used as a server certificate during the SSL handshake when the\nI      connection is acquired. If this attribute is omitted, the default\nI      certificate defined in the key ring for the CICS region user ID is\nI      used.\nN\nI      Certificate labels can be up to 32 bytes long.\nN\nI      The certificate must be stored in a key ring in the database of\nI      the external security manager. For more information, see Building\nI      a key ring manually in Securing.\nN\nI      This attribute cannot be specified unless SSL(YES) or\nI      SSL(CLIENTAUTH) is also specified.\nN\nD    CIPHERS(value | value)\nI      The CIPHERS attribute can be specified in either\nI      of two ways:\nN\nI      -> A string of up to 56 hexadecimal digits that is interpreted as\nI         a list of up to 28 2-digit cipher suite codes.\nN\nI      -> The name of the SSL cipher suite specification file, which is\nI         a z/OS UNIX file in the security/ciphers subdirectory of the\nI         directory that is specified by the USSCONFIG system\nI         initialization parameter. For example if USSCONFIG is set to\nI         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,\nI         the fully qualified file name is\nI         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For\nI         more information, see SSL cipher suite specification file.\nN\nI      When you use the CEDA transaction to define the resource, CICS\nI      automatically initializes the attribute with a default list of\nI      acceptable codes. For CICS to initialize the attribute, the\nI      KEYRING system initialization parameter must be specified in the\nI      CICS region where you are running CEDA. If KEYRING is not set,\nI      CICS does not initialize the attribute. The default list of codes\nI      is 35363738392F303132330A1613100D15120F0C unless the system\nI      initialization parameter NISTSP800131A=CHECK is set, in which\nI      case it is 35363738392F303132330A1613100D.\nN\nI      You can reorder the cipher codes or remove them from the initial\nI      list. However, you cannot add cipher codes that are not in the\nI      default list for the specified encryption level. To reset the\nI      value to the default list of codes, delete all of the cipher suite\nI      codes. The field is automatically repopulated with the default\nI      list.\nN\nI      For more information, see Cipher suites in Securing.\nN\nD    MAXDATALEN(32 | number)\nI      Specifies, in kilobytes, the maximum length\nI      of data that can be received by CICS as an HTTP server, on the\nI      HTTP protocol or the USER protocol. The default value is 32 KB.\nI      The minimum is 3 KB, and the maximum is 524,288 KB.\nN\nI      Use MAXDATALEN to guard against denial of service attacks\nI      involving the transmission of large amounts of data.\nN\nD    MAXPERSIST(NO | number)\nI      Specifies the maximum number of persistent\nI      connections from web clients that the CICS region allows for this\nI      port at any one time. This setting applies only for the HTTP\nI      protocol.\nN\nI      -> The default value NO means that there is no limit on the number\nI         of persistent connections.\nN\nI      -> In a CICS region that is at risk of being overloaded with\nI         persistent connections, you can specify a suitable value (up\nI         to a theoretical maximum of 65535) based on the number of\nI         persistent connections that the CICS region can handle\nI         simultaneously. When this limit is reached and further web\nI         clients connect on the port, CICS requires the new clients to\nI         close the connection after they receive each response. When\nI         the new clients reconnect, if they connect to another CICS\nI         region that shares the port and has not reached its limit,\nI         they can maintain a persistent connection there instead. An\nI         HTTP/1.1 server should normally allow persistent connections,\nU         so only set this option in a CICS region that has experienced\nI         performance problems due to persistent connections from\nI         long-lived web clients.\nN\nI      -> If you specify a value of zero for this option, the CICS region\nI         does not allow persistent connections and requires every web\nI         client to close the connection after they receive each response.\nI         A zero setting for MAXPERSIST is not compliant with the\nI         HTTP/1.1 specification, so only use that setting if you have a\nI         special requirement for it in a CICS region that is not\nI         currently handling external requests, for example, in a test\nI         environment.\nN\nD    REALM(string)\nI      Specifies the realm that is used for HTTP basic\nI      authentication. You can only specify this attribute for the HTTP\nI      protocol.\nN\nI      The realm is provided by CICS in the WWW-Authenticate header, and\nI      is seen by the user during the process of basic authentication.\nI      It identifies the set of resources to which the authentication\nI      information requested (that is, the user ID, and password or\nI      password phrase) applies.\nN\nI      If you do not specify a realm, the default used by CICS is CICS\nI      application aaaaaaaa, where aaaaaaaa is the APPLID of the CICS\nI      region.\nN\nI      The realm can be up to 56 characters, and can include embedded\nI      blanks. It is specified in mixed case, and the case is preserved.\nI      Do not specify opening and closing double quotation marks, as CICS\nI      provides these when assembling the WWW-Authenticate header.\nN\nD    SOCKETCLOSE(NO | hhmmss)\nI      Specifies whether, and for how long, CICS\nI      waits before it closes the socket. The SOCKETCLOSE attribute does\nI      not apply to the first receive request that is issued after a\nI      connection is made. On the first receive request for the ECI and\nI      USER protocols, CICS waits for data for 30 seconds before it closes\nI      the socket.\nN\nI      On the first receive request for the HTTP protocol, CICS waits for\nI      the DTIMEOUT value associated with the transaction specified on\nI      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for\nI      30 seconds.\nN\nI      The interval is measured from the time of the initial receive\nI      request for incoming data on that socket.\nN\nI      NO: The socket remains open until it is closed by the client, or\nI        by a user application program in CICS.\nN\nI      hhmmss: The interval (in HHMMSS format) from the time of the\nI        initial receive request for incoming data, after which CICS is\nI        to timeout the socket.\nN\nI        Choose a value that is appropriate to the responsiveness of the\nI        client, and the reliability of your network. Specifying\nI        000000 closes the socket immediately if no data is available\nI        for any receive requests other than the first one.\nN\nI        If you are using this TCPIPSERVICE resource for CICS web support\nI        with the HTTP protocol, a zero setting for SOCKETCLOSE means that\nI        CICS closes the connection immediately after receiving data from\nI        the web client, unless further data is waiting. This setting\nI        means that persistent connections cannot be maintained, and it\nI        is not compliant with the HTTP/1.1 specification. Use a zero\nI        setting for SOCKETCLOSE with the HTTP protocol only if you have\nI        a special requirement for it in a CICS region that is not\nI        currently handling external requests, for example, in a test\nI        environment.\nN\nI        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify\nI        SOCKETCLOSE(NO).\nN\nI        If you specify PROTOCOL(USER), persistent sessions are not\nI        supported, and you should specify SOCKETCLOSE(000000).\nN\nI        After the TCPIPSERVICE resource is installed, you cannot change\nI        this value using CEMT; you must set the TCPIPSERVICE resource\nI        out of service, then re-install the TCPIPSERVICE resource with\nI        the modified definition.\nN\nD    SSL(NO | yes | ATTLSAWARE | CLIENTAUTH)\nI      Specifies whether the TCP/IP\nI      service is to use the secure sockets layer (SSL) for encryption\nI      and authentication. You can specify this attribute for the HTTP,\nI      USER, and IPIC protocols, but not for the ECI protocol.\nI      Note: When they use SSL, MAXSSLTCBs should be set to a value that\nI      is at least twice the number of IPIC connections that use SSL by\nI      the CICS region.\nN\nI      NO: SSL is not to be used. No security checks are applied when\nI        the connection is being acquired. No encryption is applied to\nI        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests\nI        might qualify for being processed by directly attached user\nI        transactions, and bypassing the web attach task. For more\nI        information, see HTTP requests are processed by directly\nI        attached user transactions in Improving performance.\nN\nI      YES: An SSL session is to be used; CICS sends a server certificate\nI        to the client. SSL decryption processing is applied to all\nI        messages arriving at this port. The level of encryption that is\nI        applied to inbound messages is found from the value of the\nI        CIPHERS attribute.\nN\nI      CLIENTAUTH: An SSL session is to be used; CICS sends a server\nI        certificate to the client. CICS expects to receive a client\nI        certificate from the partner system during the SSL handshake,\nI        when the connection is being acquired.\nN\nI      ATTLSAWARE: CICS queries the client connection to determine\nI        whether AT-TLS is active. CICS retrieves a client certificate\nI        from TCP/IP if one was provided by the partner. ATTLSAWARE\nI        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)\nI        and PROTOCOL(HTTP) HTTP requests might qualify for being\nI        processed by directly attached user transactions, and bypassing\nI        the web attach task. For more information, see HTTP requests are\nI        processed by directly attached user transactions in Improving\nI        performance.\nN\nD    TRANSACTION(CWXN | transaction)\nI      Specifies the 4-character ID of the CICS\nI      transaction attached to process new requests received for this\nI      service.\nN\nI      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP\nI         (or another transaction that executes program DFHIEP).\nN\nI      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another\nI         transaction that executes program DFHWBXN). HTTP requests might\nI         qualify for being processed by directly attached user\nI         transactions, and bypassing the web attach task. For more\nI         information, see HTTP requests are processed by directly\nI         attached user transactions in Improving performance.\nN\nI      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another\nI         transaction that executes program DFHISCOP).\nN\nI      -> For a USER TCPIPSERVICE resource, specify CWXU (or another\nI         transaction that executes program DFHWBXN).\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nD    URM(DFHWBAAX | program_name)\nI      Specifies the name of a user-replaceable\nI      program to be started by this service.\nN\nI      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.\nI        This is only applicable for PROTOCOL(IPIC).\nN\nI      program_name: For those protocols for which URM is a required\nI        attribute, the default program name depends upon the value of\nI        the PROTOCOL attribute:\nN\nI      -> For the HTTP protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE resource. The\nI         CICS-supplied analyzer program DFHWBAAX is the default.\nI         DFHWBAAX provides basic error handling when all requests on\nI         the port should be handled by URIMAP definitions (for example,\nI         web service requests). If you must provide support for requests\nI         that are not handled by URIMAP definitions, the analyzer\nI         program specified for your TCPIPSERVICE resource should be the\nI         CICS-supplied sample analyzer program DFHWBADX or your own\nI         customized analyzer program. See Analyzer programs in Reference\nI         Connectivity and standards for more information about analyzer\nI         programs.\nN\nI      -> For the IPIC protocol, specify the name of the autoinstall\nI         user program for IPIC connections, if required. For\nI         PROTOCOL(IPIC), if you do not specify this attribute CICS uses\nI         the CICS-supplied default autoinstall user program, DFHISAIP.\nN\nI      -> For the USER protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE definition. The analyzer\nI         program must be present, and it handles all requests on this\nI         protocol. The CICS-supplied sample analyzer program, DFHWBADX,\nI         is suitable. See the Analyzer programs in Reference Connectivity\nI         and standards for more information about analyzer programs.\nN\nNAttributes used with PROTOCOL(IPIC):\nN------------------------------------\nD    CERTIFICATE(label)\nI      Specifies the label of an X.509 certificate that\nI      is used as a server certificate during the SSL handshake when the\nI      connection is acquired. If this attribute is omitted, the default\nI      certificate defined in the key ring for the CICS region user ID is\nI      used.\nN\nI      Certificate labels can be up to 32 bytes long.\nN\nI      The certificate must be stored in a key ring in the database of\nI      the external security manager. For more information, see Building\nI      a key ring manually in Securing.\nN\nI      This attribute cannot be specified unless SSL(YES) or\nI      SSL(CLIENTAUTH) is also specified.\nN\nD    CIPHERS(value)\nI      The CIPHERS attribute can be specified in either\nI      of two ways:\nN\nI      -> A string of up to 56 hexadecimal digits that is interpreted as\nI         a list of up to 28 2-digit cipher suite codes.\nN\nI      -> The name of the SSL cipher suite specification file, which is\nI         a z/OS UNIX file in the security/ciphers subdirectory of the\nI         directory that is specified by the USSCONFIG system\nI         initialization parameter. For example if USSCONFIG is set to\nI         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,\nI         the fully qualified file name is\nI         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For\nI         more information, see SSL cipher suite specification file.\nN\nI      When you use the CEDA transaction to define the resource, CICS\nI      automatically initializes the attribute with a default list of\nI      acceptable codes. For CICS to initialize the attribute, the\nI      KEYRING system initialization parameter must be specified in the\nI      CICS region where you are running CEDA. If KEYRING is not set,\nI      CICS does not initialize the attribute. The default list of codes\nI      is 35363738392F303132330A1613100D15120F0C unless the system\nI      initialization parameter NISTSP800131A=CHECK is set, in which\nI      case it is 35363738392F303132330A1613100D.\nN\nI      You can reorder the cipher codes or remove them from the initial\nI      list. However, you cannot add cipher codes that are not in the\nI      default list for the specified encryption level. To reset the\nI      value to the default list of codes, delete all of the cipher suite\nI      codes. The field is automatically repopulated with the default\nI      list.\nN\nI      For more information, see Cipher suites in Securing.\nN\nD    SOCKETCLOSE(NO)\nI      Specifies whether, and for how long, CICS\nI      waits before it closes the socket. The SOCKETCLOSE attribute does\nI      not apply to the first receive request that is issued after a\nI      connection is made. On the first receive request for the ECI and\nI      USER protocols, CICS waits for data for 30 seconds before it closes\nI      the socket.\nN\nI      On the first receive request for the HTTP protocol, CICS waits for\nI      the DTIMEOUT value associated with the transaction specified on\nI      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for\nI      30 seconds.\nN\nI      The interval is measured from the time of the initial receive\nI      request for incoming data on that socket.\nN\nI      NO: The socket remains open until it is closed by the client, or\nI        by a user application program in CICS.\nN\nI      hhmmss: The interval (in HHMMSS format) from the time of the\nI        initial receive request for incoming data, after which CICS is\nI        to timeout the socket.\nN\nI        Choose a value that is appropriate to the responsiveness of the\nI        client, and the reliability of your network. Specifying\nI        000000 closes the socket immediately if no data is available\nI        for any receive requests other than the first one.\nN\nI        If you are using this TCPIPSERVICE resource for CICS web support\nI        with the HTTP protocol, a zero setting for SOCKETCLOSE means that\nI        CICS closes the connection immediately after receiving data from\nI        the web client, unless further data is waiting. This setting\nI        means that persistent connections cannot be maintained, and it\nI        is not compliant with the HTTP/1.1 specification. Use a zero\nI        setting for SOCKETCLOSE with the HTTP protocol only if you have\nI        a special requirement for it in a CICS region that is not\nI        currently handling external requests, for example, in a test\nI        environment.\nN\nI        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify\nI        SOCKETCLOSE(NO).\nN\nI        If you specify PROTOCOL(USER), persistent sessions are not\nI        supported, and you should specify SOCKETCLOSE(000000).\nN\nI        After the TCPIPSERVICE resource is installed, you cannot change\nI        this value using CEMT; you must set the TCPIPSERVICE resource\nI        out of service, then re-install the TCPIPSERVICE resource with\nI        the modified definition.\nN\nD    SPECIFTCPS(value)\nI      This parameter specifies the 8-character name of the\nI      specific TCPIPSERVICE when defining a generic TCPIPSERVICE as part\nI      of a high-availability cluster.\nN\nI      This parameter is only valid when the protocol is IPIC and the IP\nI      end point defined by the PORT and HOSTNAME or IPADDRESS attributes\nI      is the generic end point of an HA cluster of CICS regions.\nN\nD    SSL(NO | YES | CLIENTAUTH)\nI      Specifies whether the TCP/IP\nI      service is to use the secure sockets layer (SSL) for encryption\nI      and authentication. You can specify this attribute for the HTTP,\nI      USER, and IPIC protocols, but not for the ECI protocol.\nI      Note: When they use SSL, MAXSSLTCBs should be set to a value that\nI      is at least twice the number of IPIC connections that use SSL by\nI      the CICS region.\nN\nI      NO: SSL is not to be used. No security checks are applied when\nI        the connection is being acquired. No encryption is applied to\nI        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests\nI        might qualify for being processed by directly attached user\nI        transactions, and bypassing the web attach task. For more\nI        information, see HTTP requests are processed by directly\nI        attached user transactions in Improving performance.\nN\nI      YES: An SSL session is to be used; CICS sends a server certificate\nI        to the client. SSL decryption processing is applied to all\nI        messages arriving at this port. The level of encryption that is\nI        applied to inbound messages is found from the value of the\nI        CIPHERS attribute.\nN\nI      CLIENTAUTH: An SSL session is to be used; CICS sends a server\nI        certificate to the client. CICS expects to receive a client\nI        certificate from the partner system during the SSL handshake,\nI        when the connection is being acquired.\nN\nI      ATTLSAWARE: CICS queries the client connection to determine\nI        whether AT-TLS is active. CICS retrieves a client certificate\nI        from TCP/IP if one was provided by the partner. ATTLSAWARE\nI        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)\nI        and PROTOCOL(HTTP) HTTP requests might qualify for being\nI        processed by directly attached user transactions, and bypassing\nI        the web attach task. For more information, see HTTP requests are\nI        processed by directly attached user transactions in Improving\nI        performance.\nN\nD    TRANSACTION(CISS | transaction)\nI      Specifies the 4-character ID of the CICS\nI      transaction attached to process new requests received for this\nI      service.\nN\nI      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP\nI         (or another transaction that executes program DFHIEP).\nN\nI      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another\nI         transaction that executes program DFHWBXN). HTTP requests might\nI         qualify for being processed by directly attached user\nI         transactions, and bypassing the web attach task. For more\nI         information, see HTTP requests are processed by directly\nI         attached user transactions in Improving performance.\nN\nI      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another\nI         transaction that executes program DFHISCOP).\nN\nI      -> For a USER TCPIPSERVICE resource, specify CWXU (or another\nI         transaction that executes program DFHWBXN).\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nD    URM(DFHISAIP | NO | program_name)\nI      Specifies the name of a user-replaceable\nI      program to be started by this service.\nN\nI      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.\nI        This is only applicable for PROTOCOL(IPIC).\nN\nI      program_name: For those protocols for which URM is a required\nI        attribute, the default program name depends upon the value of\nI        the PROTOCOL attribute:\nN\nI      -> For the HTTP protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE resource. The\nI         CICS-supplied analyzer program DFHWBAAX is the default.\nI         DFHWBAAX provides basic error handling when all requests on\nI         the port should be handled by URIMAP definitions (for example,\nI         web service requests). If you must provide support for requests\nI         that are not handled by URIMAP definitions, the analyzer\nI         program specified for your TCPIPSERVICE resource should be the\nI         CICS-supplied sample analyzer program DFHWBADX or your own\nI         customized analyzer program. See Analyzer programs in Reference\nI         Connectivity and standards for more information about analyzer\nI         programs.\nN\nI      -> For the IPIC protocol, specify the name of the autoinstall\nI         user program for IPIC connections, if required. For\nI         PROTOCOL(IPIC), if you do not specify this attribute CICS uses\nI         the CICS-supplied default autoinstall user program, DFHISAIP.\nN\nI      -> For the USER protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE definition. The analyzer\nI         program must be present, and it handles all requests on this\nI         protocol. The CICS-supplied sample analyzer program, DFHWBADX,\nI         is suitable. See the Analyzer programs in Reference Connectivity\nI         and standards for more information about analyzer programs.\nN\nNAttributes used with PROTOCOL(USER):\nN------------------------------------\nD    AUTHENTICATE(NO | AUTOMATIC | BASIC | AUTOREGISTER | CERTIFICATE)\nI      Specifies the authentication and identification scheme to be used\nI      for inbound TCP/IP connections for the HTTP and USER protocols.\nN\nI      For the IPIC protocol, this attribute is not applicable.\nN\nI      For the ECI protocol, this attribute is invalid.\nN\nI      For more information about authentication, see Identification and\nI      authentication in Securing.\nN\nI      ASSERTED: The ASSERTED attribute in TCPIPSERVICE definitions is\nI        obsolete but is retained for compatibility reasons.\nN\nI      When PROTOCOL(HTTP) or PROTOCOL(USER) is specified:\nN\nI      NO: The client is not required to send authentication or\nI        identification information. However, if the client sends a\nI        valid certificate that is already registered to the security\nI        manager, and associated with a user ID, then that user ID\nI        identifies the client.\nN\nI      AUTOMATIC: This combines the AUTOREGISTER and BASIC functions.\nN\nI        -> If the client sends a certificate that is already registered\nI           to the security manager, and associated with a user ID, then\nI           that user ID identifies the client.\nN\nI        -> If the client sends a certificate that is not registered to\nI           the security manager, then HTTP Basic authentication is used\nI           to obtain a user ID, and password or password phrase from the\nI           client. If the password or password phrase is valid, CICS\nI           registers the certificate with the security manager, and\nI           associates it with the user ID. The user ID identifies the\nI           client.\nN\nI        -> If the client does not send a certificate, then HTTP Basic\nI           authentication is used to obtain a user ID, and password or\nI           password phrase from the user. When the user has been\nI           successfully authenticated, the user ID supplied identifies\nI           the client.\nN\nI      AUTOREGISTER: SSL client certificate authentication is used to\nI        authenticate the client.\nN\nI        -> If the client sends a valid certificate that is already\nI           registered to the security manager, and associated with a\nI           user ID, then that user ID identifies the client.\nN\nI        -> If the client sends a valid certificate that is not registered\nI           to the security manager, then HTTP Basic authentication is\nI           used to obtain a user ID, and password or password phrase from\nI           the client. If the password or password phrase is valid, CICS\nI           registers the certificate with the security manager, and\nI           associates it with the user ID. The user ID identifies the\nI           client.\nN\nI        -> For a certificate to be registered, the client needs the\nI           appropriate access definition in RACF. The access required\nI           is READ access to the IRR.DIGTCERT.ADD profile in the\nI           FACILITY class.\nN\nI        Note: If you specify AUTHENTICATE(AUTOREGISTER), you must also\nI        specify SSL(CLIENTAUTH | ATTLSAWARE).\nN\nI      BASIC: HTTP Basic authentication is used to obtain a user ID, and\nI        password or password phrase from the client.\nN\nI        If the client has sent an Authorization header, its contents are\nI        decoded as a user ID, and password or password phrase. If these\nI        are not valid, an HTTP 401 response is returned, together with\nI        a WWW-Authenticate header, which causes the client program to\nI        prompt the user for a new user ID, and password or password\nI        phrase. This process continues until the client either supplies\nI        a valid user ID, and password or password phrase, or cancels the\nI        connection.\nN\nI        When the user has been successfully authenticated, the user ID\nI        supplied identifies the client.\nN\nI      CERTIFICATE: SSL client certificate authentication is used to\nI        authenticate and identify the client. The client must send a\nI        valid certificate that is already registered to the security\nI        manager, and associated with a user ID. If a valid certificate\nI        is not received, or the certificate is not associated with a\nI        user ID, the connection is rejected.\nN\nI        When the user has been successfully authenticated, the user ID\nI        associated with the certificate identifies the client.\nN\nI        Note: If you specify AUTHENTICATE(CERTIFICATE), you must also\nI        specify SSL(CLIENTAUTH | ATTLSAWARE).\nN\nI        Note: For the HTTP or USER protocol, the analyzer program\nI        (named by the user replaceable module (URM) attribute) can change\nI        the user ID supplied by the authentication process. If the\nI        authentication process does not supply a user ID, the analyzer\nI        program or URIMAP definition can supply one. Otherwise, the CICS\nI        default user ID is used.\nN\nD    CERTIFICATE(label)\nI      Specifies the label of an X.509 certificate that\nI      is used as a server certificate during the SSL handshake when the\nI      connection is acquired. If this attribute is omitted, the default\nI      certificate defined in the key ring for the CICS region user ID is\nI      used.\nN\nI      Certificate labels can be up to 32 bytes long.\nN\nI      The certificate must be stored in a key ring in the database of\nI      the external security manager. For more information, see Building\nI      a key ring manually in Securing.\nN\nI      This attribute cannot be specified unless SSL(YES) or\nI      SSL(CLIENTAUTH) is also specified.\nN\nD    CIPHERS(value)\nI      The CIPHERS attribute can be specified in either\nI      of two ways:\nN\nI      -> A string of up to 56 hexadecimal digits that is interpreted as\nI         a list of up to 28 2-digit cipher suite codes.\nN\nI      -> The name of the SSL cipher suite specification file, which is\nI         a z/OS UNIX file in the security/ciphers subdirectory of the\nI         directory that is specified by the USSCONFIG system\nI         initialization parameter. For example if USSCONFIG is set to\nI         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,\nI         the fully qualified file name is\nI         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For\nI         more information, see SSL cipher suite specification file.\nN\nI      When you use the CEDA transaction to define the resource, CICS\nI      automatically initializes the attribute with a default list of\nI      acceptable codes. For CICS to initialize the attribute, the\nI      KEYRING system initialization parameter must be specified in the\nI      CICS region where you are running CEDA. If KEYRING is not set,\nI      CICS does not initialize the attribute. The default list of codes\nI      is 35363738392F303132330A1613100D15120F0C unless the system\nI      initialization parameter NISTSP800131A=CHECK is set, in which\nI      case it is 35363738392F303132330A1613100D.\nN\nI      You can reorder the cipher codes or remove them from the initial\nI      list. However, you cannot add cipher codes that are not in the\nI      default list for the specified encryption level. To reset the\nI      value to the default list of codes, delete all of the cipher suite\nI      codes. The field is automatically repopulated with the default\nI      list.\nN\nI      For more information, see Cipher suites in Securing.\nN\nD    MAXDATALEN(32 | number)\nI      Specifies, in kilobytes, the maximum length\nI      of data that can be received by CICS as an HTTP server, on the\nI      HTTP protocol or the USER protocol. The default value is 32 KB.\nI      The minimum is 3 KB, and the maximum is 524,288 KB.\nN\nI      Use MAXDATALEN to guard against denial of service attacks\nI      involving the transmission of large amounts of data.\nN\nD    SOCKETCLOSE(NO | hhmmss)\nI      Specifies whether, and for how long, CICS\nI      waits before it closes the socket. The SOCKETCLOSE attribute does\nI      not apply to the first receive request that is issued after a\nI      connection is made. On the first receive request for the ECI and\nI      USER protocols, CICS waits for data for 30 seconds before it closes\nI      the socket.\nN\nI      On the first receive request for the HTTP protocol, CICS waits for\nI      the DTIMEOUT value associated with the transaction specified on\nI      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for\nI      30 seconds.\nN\nI      The interval is measured from the time of the initial receive\nI      request for incoming data on that socket.\nN\nI      NO: The socket remains open until it is closed by the client, or\nI        by a user application program in CICS.\nN\nI      hhmmss: The interval (in HHMMSS format) from the time of the\nI        initial receive request for incoming data, after which CICS is\nI        to timeout the socket.\nN\nI        Choose a value that is appropriate to the responsiveness of the\nI        client, and the reliability of your network. Specifying\nI        000000 closes the socket immediately if no data is available\nI        for any receive requests other than the first one.\nN\nI        If you are using this TCPIPSERVICE resource for CICS web support\nI        with the HTTP protocol, a zero setting for SOCKETCLOSE means that\nI        CICS closes the connection immediately after receiving data from\nI        the web client, unless further data is waiting. This setting\nI        means that persistent connections cannot be maintained, and it\nI        is not compliant with the HTTP/1.1 specification. Use a zero\nI        setting for SOCKETCLOSE with the HTTP protocol only if you have\nI        a special requirement for it in a CICS region that is not\nI        currently handling external requests, for example, in a test\nI        environment.\nN\nI        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify\nI        SOCKETCLOSE(NO).\nN\nI        If you specify PROTOCOL(USER), persistent sessions are not\nI        supported, and you should specify SOCKETCLOSE(000000).\nN\nI        After the TCPIPSERVICE resource is installed, you cannot change\nI        this value using CEMT; you must set the TCPIPSERVICE resource\nI        out of service, then re-install the TCPIPSERVICE resource with\nI        the modified definition.\nN\nD    SSL(NO | YES | CLIENTAUTH)\nI      Specifies whether the TCP/IP\nI      service is to use the secure sockets layer (SSL) for encryption\nI      and authentication. You can specify this attribute for the HTTP,\nI      USER, and IPIC protocols, but not for the ECI protocol.\nI      Note: When they use SSL, MAXSSLTCBs should be set to a value that\nI      is at least twice the number of IPIC connections that use SSL by\nI      the CICS region.\nN\nI      NO: SSL is not to be used. No security checks are applied when\nI        the connection is being acquired. No encryption is applied to\nI        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests\nI        might qualify for being processed by directly attached user\nI        transactions, and bypassing the web attach task. For more\nI        information, see HTTP requests are processed by directly\nI        attached user transactions in Improving performance.\nN\nI      YES: An SSL session is to be used; CICS sends a server certificate\nI        to the client. SSL decryption processing is applied to all\nI        messages arriving at this port. The level of encryption that is\nI        applied to inbound messages is found from the value of the\nI        CIPHERS attribute.\nN\nI      CLIENTAUTH: An SSL session is to be used; CICS sends a server\nI        certificate to the client. CICS expects to receive a client\nI        certificate from the partner system during the SSL handshake,\nI        when the connection is being acquired.\nN\nI      ATTLSAWARE: CICS queries the client connection to determine\nI        whether AT-TLS is active. CICS retrieves a client certificate\nI        from TCP/IP if one was provided by the partner. ATTLSAWARE\nI        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)\nI        and PROTOCOL(HTTP) HTTP requests might qualify for being\nI        processed by directly attached user transactions, and bypassing\nI        the web attach task. For more information, see HTTP requests are\nI        processed by directly attached user transactions in Improving\nI        performance.\nN\nD    TRANSACTION(CWXU | transaction)\nI      Specifies the 4-character ID of the CICS\nI      transaction attached to process new requests received for this\nI      service.\nN\nI      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP\nI         (or another transaction that executes program DFHIEP).\nN\nI      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another\nI         transaction that executes program DFHWBXN). HTTP requests might\nI         qualify for being processed by directly attached user\nI         transactions, and bypassing the web attach task. For more\nI         information, see HTTP requests are processed by directly\nI         attached user transactions in Improving performance.\nN\nI      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another\nI         transaction that executes program DFHISCOP).\nN\nI      -> For a USER TCPIPSERVICE resource, specify CWXU (or another\nI         transaction that executes program DFHWBXN).\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nI    TSQPREFIX(prefix): This attribute is obsolete, but is supported to\nI      provide compatibility with earlier releases of CICS. For more\nI      information, see Obsolete attributes in Reference System\nI      definition.\nN\nD    URM(program)\nI      Specifies the name of a user-replaceable\nI      program to be started by this service.\nN\nI      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.\nI        This is only applicable for PROTOCOL(IPIC).\nN\nI      program_name: For those protocols for which URM is a required\nI        attribute, the default program name depends upon the value of\nI        the PROTOCOL attribute:\nN\nI      -> For the HTTP protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE resource. The\nI         CICS-supplied analyzer program DFHWBAAX is the default.\nI         DFHWBAAX provides basic error handling when all requests on\nI         the port should be handled by URIMAP definitions (for example,\nI         web service requests). If you must provide support for requests\nI         that are not handled by URIMAP definitions, the analyzer\nI         program specified for your TCPIPSERVICE resource should be the\nI         CICS-supplied sample analyzer program DFHWBADX or your own\nI         customized analyzer program. See Analyzer programs in Reference\nI         Connectivity and standards for more information about analyzer\nI         programs.\nN\nI      -> For the IPIC protocol, specify the name of the autoinstall\nI         user program for IPIC connections, if required. For\nI         PROTOCOL(IPIC), if you do not specify this attribute CICS uses\nI         the CICS-supplied default autoinstall user program, DFHISAIP.\nN\nI      -> For the USER protocol, specify the name of an analyzer program\nI         to be associated with this TCPIPSERVICE definition. The analyzer\nI         program must be present, and it handles all requests on this\nI         protocol. The CICS-supplied sample analyzer program, DFHWBADX,\nI         is suitable. See the Analyzer programs in Reference Connectivity\nI         and standards for more information about analyzer programs.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG29": {"ttr": 8452, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG29\nTCICS\nT-RDG\nT-Chapter 29. TDQUEUE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 29. TDQUEUE resources\nN=============================\nNA TDQUEUE definition defines the attributes of a transient data queue.\nNThe following transient data resources can be managed using RDO:\nN\nN-> Intrapartition\nN\nN-> Extrapartition\nN\nN-> Indirect\nN\nN-> Remote\nN\nNIntrapartition definitions contain attributes that provide information\nNabout recovery characteristics, trigger levels, associated\nNtransactions, facilities, and userids.\nN\nNExtrapartition definitions contain information about the associated\nNQSAM data set, and the number of buffers that are to be used.\nN\nNIndirect definitions identify the underlying queue name.\nN\nRemote definitions contain the name of the remote system and the name\nNby which the queue is known on that remote system.\nN\nNBefore a transient data queue can be used by an active CICS system,\nNyou must install its definition in the running system. CICS uses the\nNdefinition to access the data set associated with the queue, and\nNrecords the number of read and write operations on the queue.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG2901": {"ttr": 8705, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG2901\nTCICS\nT-RDG\nT-Chapter 29. TDQUEUE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-123655\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 29. TDQUEUE resources\nN=============================\nNTDQUEUE attributes\nN------------------\nNDescribes the syntax and attributes of the TDQUEUE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TDQUEUE(name)\nI      Specifies the 1- to 4-character name of a transient\nI      data queue.\nN\nI      If the name supplied is fewer than four characters, it is\nI      left-justified and padded with blanks up to four characters.\nN\nI      Note:\nI      1. If you use a comma (,) in a name, you will be unable to use\nI         those commands such as CEMT INQUIRE TDQUEUE(value1,value2)\nI         CEMT SET TDQUEUE(value1,value2) where the comma serves as a\nI         list delimiter. See CICS Supplied Transactions for information\nI         about using lists of resource identifiers.\nN\nI      2. If you protect your transient data queues using RACF, avoid\nI         using % and & in the name. RACF commands assign a special\nI         meaning to these characters when they are used in a profile\nI         name. See the CICS RACF Security Guide.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    TYPE(EXTRA | INTRA | INDIRECT)\nI      Specifies the following types of\nI      transient data queue:\nN\nI      EXTRA: A queue that is outside the CICS region is allocated to\nI        CICS. Extrapartition queues are used for:\nN\nI        -> Sending data outside the CICS region: for example, data\nI           created by a transaction for processing by a batch program.\nN\nI        -> Retrieving data from outside the region: for example, data\nI           received from terminals as input to a transaction.\nN\nI        Extrapartition data is sequential and is managed by QSAM.\nN\nI      INDIRECT: An indirect queue is a queue that does not point to an\nI        actual data set, but to another queue. An indirect queue can be\nI        extrapartition, intrapartition, remote, or even another indirect\nI        queue.\nN\nI        For example, you can give a different symbolic name,\nI        INDIRECTDEST, to each of several different message types. You\nI        can then send all these message types to the same physical queue\nI        (INDIRECTDEST), or to different physical queues.\nN\nI        The DFH$TDWT sample program demonstrates how you can use indirect\nI        queues to send different categories of message to the same\nI        terminal. For programming information about DFH$TDWT, see the\nI        CICS Customization Guide. DFH$TDWT sample definitions are given\nI        in the CICS/ESA 4.1 Sample Applications Guide.\nN\nI        If the QUEUE operand of an EXEC CICS WRITEQ TD, EXEC CICS READQ,\nI        or EXEC CICS DELETEQ command specifies an indirect queue, access\nI        is determined by the security setting of the final target queue.\nN\nI      INTRA: A queue for data that is to be stored temporarily.\nN\nI        An intrapartition destination can be a terminal, a file, or\nI        another system. A single data set, managed by VSAM, is used to\nI        hold the data for all intrapartition queues.\nN\nI        You can specify a transaction to process the records and a\nI        trigger level for each intrapartition queue. The trigger level\nI        represents a number of records that are allowed to accumulate\nI        before the specified transaction is initiated. See the\nI        description of the TRIGGERLEVEL attribute for more information\nI        about trigger levels.\nN\nI        The intrapartition queue can be defined as logically recoverable,\nI        physically recoverable, or not recoverable.\nN\nI        A logically recoverable queue is restored (after an individual\nI        transaction failure or a total system failure) to the status it\nI        had at the end of the last completed unit of work (UOW). (A UOW\nI        begins at start of task or at a syncpoint, and ends at end of\nI        task or at a syncpoint). Physically recoverable queues are\nI        restored (after a total system failure) to the statuses they had\nI        when the system failure occurred.\nN\nI      TYPE=REMOTE cannot be specified on the TDQUEUE resource definition.\nI      If you want to define a remote transient data queue, leave the\nI      TYPE attribute blank and specify values for the remote attributes,\nI      REMOTELENGTH, REMOTENAME, and REMOTESYSTEM. Alternatively, you\nI      can include the remote attributes as part of the resource\nI      definitions for the other transient data queue types.\nN\nNAttributes for extrapartition queues:\nN-------------------------------------\nD    BLOCKFORMAT(BLOCKED | UNBLOCKED)\nI      extrapartition queues only):\nI      Specifies the block format of the data set. There is no default.\nI      If you specify the record format (RECORDFORMAT attribute) as\nI      undefined (or allow it to default), you cannot specify anything\nI      for the BLOCKFORMAT attribute.\nN\nI      blank: Indicates that no block format is defined for this data\nI        set. Leave this field blank if you leave RECORDFORMAT blank.\nN\nI      BLOCKED: Blocked record format.\nN\nI      UNBLOCKED: Unblocked record format.\nN\nI      You are strongly advised to specify an unblocked record format\nI      for extrapartition queues that are used as an interface to the\nI      JES internal reader. If you use a blocked record format, your\nI      job is held in the SYSOUT data set, and not sent directly to\nI      JES until one of the following actions occurs:\nN\nI      -> You follow the JES /*EOF control statement with a second\nI         /*EOF statement\nN\nI      -> Your application writes another job to the same queue\nN\nI      -> You explicitly close the queue after the job is written\nN\nI      -> You shut down CICS normally\nN\nD    BLOCKSIZE(length)\nI      (extrapartition queues only): Specifies the\nI      length of the block in bytes, in the range 0 through 32767. The\nI      maximum value you can specify depends on whether SYSOUTCLASS is\nI      specified, either explicitly or by default, and on whether\nI      RECORDFORMAT is FIXED or VARIABLE.\nN\nI      -> If you specify SYSOUTCLASS, the maximum value of RECORDSIZE\nI         is 8968.\nN\nI      -> Each block in a variable format data set consists of a block\nI         descriptor word followed by one or more logical records.\nI         Therefore, if you specify RECORDFORMAT(VARIABLE), the value\nI         you specify for BLOCKSIZE must include 4 bytes for the block\nI         descriptor word, and space for the largest possible logical\nI         record.\nN\nD    DATABUFFERS(1 | number)\nI      (extrapartition queues only): Specifies the\nI      number of buffers to be provided, up to a maximum of 255.\nN\nD    DDNAME(ddname)\nI      Specifies a 1- to 8-character value that may refer\nI      to a data set defined in the startup JCL. The name must not start\nI      with the characters \"DFH\", which are reserved for use by CICS,\nI      unless the name describes one of the standard destinations.\nN\nD    DISPOSITION(SHR | OLD | MOD)\nI      (extrapartition queues only): Specifies\nI      the disposition of the data set.\nN\nI      MOD: CICS first assumes that the data set exists. For an existing\nI        sequential data set, MOD causes the read/write mechanism to be\nI        positioned after the last record in the data set. The read/write\nI        mechanism is positioned after the last record each time the data\nI        set is opened for output.\nN\nI        If CICS cannot find volume information for the data set:\nN\nI        -> On the DD statement\nN\nI        -> In the catalog\nN\nI        -> Passed with the data set from a previous step\nN\nI        it assumes that the data set is being created in this job step.\nI        A data set allocated dynamically in this way is deleted when the\nI        queue is closed, and all records are lost.\nN\nI        For a new data set, MOD causes the read/write mechanism to be\nI        positioned at the beginning of the data set.\nN\nI      OLD: The data set existed before this job step.\nN\nI      SHR: The data set existed before this job step and can be read by\nI        other concurrent jobs.\nN\nD    DSNAME(DUMMY | dsname)\nI      (extrapartition queues only): Specifies the\nI      name of the QSAM data set that is to be used to store records\nI      written to this extrapartition queue.\nN\nI      When CICS receives a request to open an extrapartition transient\nI      data queue, the startup JCL is referenced to check if a data set\nI      definition has been created. If one is not found, the 44-character\nI      name specified on the DSNAME attribute is used to dynamically\nI      allocate the required data set.\nN\nI      If you have JCL that preallocates for this queue the DSCNAME value\nI      to a DSNAME value, the DSNAME value in the resource definition is\nI      overridden by the DSNAME value from the JCL. JCL allocation always\nI      takes priority.\nN\nI      Partitioned data sets (PDS) are not supported on the DSNAME\nI      attribute. If you want to use a PDS member for an extrapartition\nI      queue data set, code it explicitly in your JCL. Bear in mind that\nI      if you inquire upon this queue, the DSNAME value that is returned\nI      will not give you any indication of the member name.\nN\nI      DUMMY: A dummy data set name.\nN\nI      name: The 44-character name of a physical data set.\nN\nI      Attention: If you use log streams for extrapartition queue data\nI        sets, unpredictable results may occur.\nN\nD    ERROROPTION(IGNORE | SKIP)\nI      (extrapartition queues only): Specifies\nI      the action to be taken if an I/O error occurs. This can be one of\nI      the following:\nN\nI      IGNORE: The block that caused the error is accepted.\nN\nI      SKIP: The block that caused the error is skipped.\nN\nD    OPENTIME(INITIAL | DEFERRED)\nI      (extrapartition queues only): Specifies\nI      the initial status of the data set. The initial status can be one\nI      of the following values:\nN\nI      DEFERRED: The data set remains closed until you indicate that you\nI        want to open it by using the CEMT INQUIRE|SET TDQUEUE command.\nN\nI      INITIAL: The data set is to be opened at install time. However,\nI        if the DSNAME attribute is not specified, and the data set name\nI        is not specified in the DD statement in the startup JCL, the\nI        transient data queue is allocated to JES during CICS startup.\nN\nD    PRINTCONTROL(A | M)\nI      (extrapartition queues only):\nI      Specifies the control characters to be used. There is no default.\nN\nI      If you allow RECORDFORMAT to default to blank, you cannot specify\nI      anything in the PRINTCONTROL field. You can use the following\nI      characters:\nN\nI      ASA: ASA control characters.\nN\nI      blank: No control characters are to be used.\nN\nI      MACHINE: Machine control characters.\nN\nD    RECORDFORMAT(FIXED | VARIABLE)\nI      (extrapartition queues only):\nI      Specifies the record format of the data set.\nN\nI      blank: If RECORDFORMAT is not specified (that is, remains blank),\nI        the BLOCKFORMAT and PRINTCONTROL fields must also remain blank.\nN\nI        If the RECORDFORMAT is not specified in the resource definition,\nI        TD attempts to derive this attribute from the CICS startup JCL\nI        or from the QSAM data set definition at the time it attempts to\nI        open the queue.\nN\nI        The open request will fail if this information cannot be derived\nI        from either of these sources.\nN\nI      FIXED: Fixed records. If you specify RECORDFormat(Fixed), you must\nI        also specify a block format.\nN\nI      VARIABLE: Variable records. If you specify RECORDFormat(Variable),\nI        you must also specify a block format.\nN\nD    RECORDSIZE(1 | number)\nI      (extrapartition and remote queues): Specifies\nI      the record length in bytes, in the range 0 through 32767.\nN\nI      1: The default record length is 1 byte.\nN\nI      number: The record length, in bytes, up to 32767.\nN\nI      The maximum value you can specify depends on whether SYSOUTCLASS\nI      is specified, either explicitly or by default, and on whether\nI      RECORDFORMAT is FIXED or VARIABLE.\nN\nI      -> If you specify SYSOUTCLASS, the maximum value of RECORDSIZE\nI         is 8968.\nN\nI      -> Each block in a variable format data set consists of a block\nI         descriptor word followed by one or more logical records.\nI         Therefore, if you specify RECORDFORMAT(VARIABLE), the value\nI         you specify for BLOCKSIZE must include four bytes for the block\nI         descriptor word, and space for the largest possible logical\nI         record.\nN\nD    REMOTELENGTH(number)\nI      (remote queues only): Specifies the length\nI      in bytes, in the range 1 through 32767. For SYSOUT data sets, the\nI      value entered in the REMOTELENGTH field must not be greater\nI      than 8968 bytes (when the SYSOUTCLASS attribute has been\nI      specified).\nN\nI      1: The length is 1 byte.\nN\nI      number: The length in bytes, up to 32767.\nN\nI      If the queue is defined with TYPE=EXTRA, and no value is specified\nI      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at\nI      installation time.\nN\nD    REMOTENAME(tdqueue)\nI      (remote queues only): Specifies, if the transient\nI      data queue resides on a remote system, the 4-character name by\nI      which the queue is known in the system or region on which the\nI      queue resides.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the 4-character alphanumeric\nI      name of the system or region in which the remote transient data\nI      queue resides. The name entered must be the same as the name\nI      specified on the RDO CONNECTION or the first 4 characters of\nI      the name specified on an RDO IPCONN definition. For more\nI      information about the connection definitions, see\nI      \"CONNECTION attributes\" or \"IPCONN attributes\".\nN\nI      When the transient data queue definition is installed, the name\nI      entered in the REMOTESYSTEM attribute is compared with the system\nI      identifier. If the names are different, the system or region is\nI      remote. If the names are the same, the value specified in the TYPE\nI      attribute is used. If the TYPE attribute is blank, the installation\nI      fails.\nN\nD    REWIND(LEAVE | REREAD)\nI      (extrapartition queues only): Specifies the\nI      disposition of a tape data set. The disposition can be one of the\nI      following:\nN\nI      LEAVE: The current tape is positioned at the logical end of the\nI        data set.\nN\nI      REREAD: The current tape is positioned at the logical start of the\nI        data set.\nN\nD    SYSOUTCLASS(* | class)\nI      {A..Z|0..9|*|blank}) (extrapartition queues only):\nI      Instead of allocating an extrapartition queue to a physical data\nI      set, you can allocate it to a system output data set (referred to\nI      as SYSOUT).\nN\nI      Use the SYSOUTCLASS attribute to specify the class of the SYSOUT\nI      data set.\nN\nI      A..Z|0..9: A single alphabetic or numeric character that represents\nI        an output class that has been set up on the MVS system on which\nI        the CICS job is to run.\nN\nI      *: This is the default class. SYSOUTCLASS defaults to an asterisk\nI        (*) if you leave the DSNAME attribute blank and specify OUTPUT\nI        for the Typefile field.\nN\nI      blank: SYSOUTCLASS defaults to a blank character if you leave the\nI        DSNAME attribute blank and specify INPUT or RDBACK for the\nI        Typefile attribute. In the latter case, the open operation will\nI        fail because a DSNAME must be specified for TYPEFILE=INPUT or\nI        TYPEFILE=RDBACK.\nN\nI      You can use SYSOUTCLASS as an alternative to DSNAME. As with\nI      DSNAME, the queue may already be preallocated to SYSOUT using a\nI      JCL DD statement.\nN\nI      A JCL DD statement overrides any specification made using the\nI      TDQUEUE resource definition.\nN\nI      When CICS receives a request to open an extrapartition transient\nI      data queue, the startup JCL is referenced to check if a data set\nI      definition has been created.\nN\nI      If one is not found, the 44-character name specified on the DSNAME\nI      attribute is used to dynamically allocate the required data set.\nN\nI      When SYSOUT is specified for a queue in the JCL, attributes other\nI      than class can also be specified (for example, form types).\nN\nI      Note: Specifying SYSOUT data sets using RDO supports the class\nI      parameter only. If you require other parameters, you specify\nI      SYSOUT data sets in the JCL.\nN\nI      For more information about SYSOUT and its associated classes, see\nI      the z/OS MVS JCL User's Guide.\nN\nD    TYPEFILE(INPUT | OUTPUT | RDBACK)\nI      Specifies the type of data set the\nI      queue is to be associated with.\nN\nI      INPUT: An input data set.\nN\nI      OUTPUT: An output data set.\nN\nI      RDBACK: An input data set that is to be read backward.\nN\nI      Note: This is appropriate only for data sets that have been\nI      defined on magnetic tape.\nN\nI      An extrapartition queue can be input or output, but not both.\nN\nI      For more information about the DCB macro fields, see the\nI      z/OS DFSMS Macro Instructions for Data Sets.\nN\nN\nNAttributes for intrapartition queues:\nN-------------------------------------\nD    ATIFACILITY(TERMINAL | FILE | SYSTEM)\nI      (intrapartition queues only):\nI      Specifies the type of destination the queue represents.\nN\nI      FILE: The transient data queue is to be used as a file of data\nI       records that are not associated with a particular terminal or\nI       system. ATI does not require a terminal to be available.\nN\nI      SYSTEM: The transient data queue is to be associated with the\nI        specified system identifier. The system must be defined to the\nI        local CICS system using an RDO CONNECTION definition.\nN\nI        Specifying ATIFACILITY(SYSTEM) initiates a distributed\nI        transaction processing (DTP) session. For more information about\nI        DTP considerations in application programming, see the\nI        CICS Application Programming Guide.\nN\nI      TERMINAL: The transient data queue is to be associated with the\nI        terminal. The terminal must be defined to CICS. If you do not\nI        specify TERMINAL, it defaults to the value of FACILITYID. If\nI        ATI is used, as specified in the TRANSID and TRIGGERLEVEL\nI        attributes, the transaction that is initiated is associated with\nI        the specified terminal, which must be available before the\nI        transaction can be initiated.\nN\nD    FACILITYID(terminal | connection)\nI      (intrapartition queues only):\nI      Specifies a 4-character field that contains either:\nN\nI      -> The system identifier for an intrapartition queue that specifies\nI         ATIFACILITY(SYSTEM)\nN\nI      -> The terminal identifier where ATIFACILITY(TERMINAL) is\nI         specified.\nN\nI      If you do not specify anything in the FACILITYID field, it\nI      defaults to the name of the queue in each case.\nN\nI      If ATIFACILITY(FILE) is specified, the FACILITYID field must\nI      remain blank.\nN\nD    RECOVSTATUS(NO | LOGICAL | PHYSICAL)\nI      (intrapartition queues only):\nI      Specifies the recoverability attributes of the queue in the event\nI      of an abnormal termination of either CICS or the transaction that\nI      is processing the queue. The recoverability attributes are:\nN\nI      LOGICAL: This queue is logically recoverable. Automatic logging\nI        is to be performed to keep track of accesses by application\nI        programs. If a transaction that accessed this queue was in-flight\nI        at the time of abnormal termination, or in the subsequent\nI        emergency restart or dynamic transaction backout, the queue is\nI        restored to the status it was in before the in-flight UOW\nI        modified it.\nN\nI        When this queue is accessed, the task that issued the DELETEQ TD,\nI        WRITEQ TD, or READQ TD command is enqueued on the input, the\nI        output, or both ends of the transient data queue. The enqueue is\nI        maintained until the task terminates (or issues a syncpoint\nI        request to signal the end of a UOW) to ensure the integrity of\nI        the data being accessed. This means that enqueues can be\nI        maintained for a longer time, and can result in a queue lockout\nI        if an application program accessing the queue performs more than\nI        one UOW against the queue without defining each separate UOW to\nI        CICS by issuing a syncpoint request.\nN\nI        Furthermore, when a DELETEQ request is issued for a logically\nI        recoverable queue, both the input and output ends of the queue\nI        are enqueued upon. This can increase the possibility of an\nI        enqueue lockout.\nN\nI        Note: CICS provides an enqueuing protection facility for\nI        logically recoverable (as distinct from physically recoverable)\nI        TD queues similar to that for recoverable files. However, CICS\nI        regards each logically recoverable destination as two separate\nI        recoverable resources one for writing and one for reading.\nN\nI        In the case of a file record, a record is treated as a single\nI        resource and requires only one lock. The TD queue, on the other\nI        hand, has two 'ends' - the read end and the write end, and these\nI        can be enqueued on (locked) independently. This is because, to\nI        control both reading and writing from the TD queue (at the same\nI        time), CICS has to maintain two pointers (cursors) -one for\nI        reading and one for writing, and these need to be protected from\nI        conflicting transactions.\nN\nI        Queue records are held on one or more control intervals (CIs).\nI        Each CI is marked for release as soon as the last record on it\nI        has been read.\nN\nI        However, the release does not occur until the end of task, or\nI        until after the next user syncpoint.\nN\nI      NO: This queue is not recoverable. Automatic logging is not\nI        performed to keep track of accesses to this queue. Queue records\nI        are held on one or more control intervals (CIs). Each CI is\nI        released as soon as the last record on it has been read.\nN\nI      PHYSICAL: This queue is physically recoverable. Automatic logging\nI        is to be emergency restart occurs, this queue is to be recovered\nI        to its status at the time CICS terminated.\nN\nI        The queue is not recovered to its status at the time CICS\nI        terminated if the last action on the queue was a READQ request,\nI        and if the associated unit of work (UOW) did not commit the\nI        changes. On emergency restart, the last read operation is backed\nI        out, and appears never to have taken place.\nN\nI        Queue records are held on one or more control intervals (CIs).\nI        Each CI is released as soon as the last record on it has been\nI        read.\nN\nD    REMOTELENGTH(number)\nI      (remote queues only): Specifies the length\nI      in bytes, in the range 1 through 32767. For SYSOUT data sets, the\nI      value entered in the REMOTELENGTH field must not be greater\nI      than 8968 bytes (when the SYSOUTCLASS attribute has been\nI      specified).\nN\nI      1: The length is 1 byte.\nN\nI      number: The length in bytes, up to 32767.\nN\nI      If the queue is defined with TYPE=EXTRA, and no value is specified\nI      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at\nI      installation time.\nN\nD    REMOTENAME(tdqueue)\nI      (remote queues only): Specifies, if the transient\nI      data queue resides on a remote system, the 4-character name by\nI      which the queue is known in the system or region on which the\nI      queue resides.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the 4-character alphanumeric\nI      name of the system or region in which the remote transient data\nI      queue resides. The name entered must be the same as the name\nI      specified on the RDO CONNECTION or the first 4 characters of\nI      the name specified on an RDO IPCONN definition. For more\nI      information about the connection definitions, see\nI      \"CONNECTION attributes\" or \"IPCONN attributes\".\nN\nI      When the transient data queue definition is installed, the name\nI      entered in the REMOTESYSTEM attribute is compared with the system\nI      identifier. If the names are different, the system or region is\nI      remote. If the names are the same, the value specified in the TYPE\nI      attribute is used. If the TYPE attribute is blank, the installation\nI      fails.\nN\nD    TRANSID(transaction)\nI      (intrapartition queues only): Specifies the\nI      name of the transaction that is to be automatically initiated when\nI      the trigger level is reached. Transactions are initiated in this\nI      way to read records from the queue. If the TRANSID attribute is\nI      not specified (or if TRIGGERLEVEL(0) is specified), you must use\nI      another method to schedule transactions to read records from\nI      transient data queues.\nN\nI      The transaction specified must not reside in a remote CICS system.\nI      If it does, transaction initiation fails and a warning message is\nI      issued to the console.\nN\nD    TRIGGERLEVEL(1 | number)\nI      (intrapartition queues only): Specifies the\nI      number of records to be accumulated before a task is automatically\nI      initiated to process them. (This number is known as the trigger\nI      level.)\nN\nI      If you specify the TRANSID attribute, TRIGGERLEVEL defaults to 1.\nI      Specify a trigger level of 0 if you want to disable ATI processing.\nI      If you do not specify a transaction id, the trigger level is\nI      ignored.\nN\nI      If you have specified ATIFACILITY(TERMINAL), the task is not\nI      initiated until the specified terminal is available. If you have\nI      specified ATIFACILITY(FILE), a terminal is not necessary for the\nI      task to be initiated.\nN\nI      If, at maximum task, a short-on-storage or a no-space condition\nI      exists for a nonterminal destination, the task is not initiated.\nI      This is also true during stages 1 and 2 of initialization, and\nI      during the final stage of shutdown. The task is initiated when the\nI      stress condition no longer exists, and a subsequent TD WRITE\nI      occurs.\nN\nI      For logically recoverable transient data queues, the ATI task is\nI      not attached until the task commits forward. This may mean that the\nI      trigger level is far exceeded before ATI occurs.\nN\nI      If a z/OS Communications Server terminal is defined as the\nI      destination for the CSTL transaction on two ISC CICS systems with\nI      a trigger level of 1, a performance problem may arise when both\nI      systems repeatedly acquire and release the terminal to write the\nI      session-started and session-ended messages.\nN\nI      You can change the trigger level when CICS is running using the\nI      CEMT transaction. If you reduce the trigger level to a number that\nI      is equal to (or less than) the number of records accumulated so\nI      far, the task is initiated when the next record is successfully\nI      put on the queue.\nN\nI      1: Only one record can accumulate.\nN\nI      number: The number of records that can accumulate (up to a\nI        maximum of 32767) before ATI occurs.\nN\nD    USERID(userid)\nN\nNTDQUEUE attributes for indirect queues:\nN---------------------------------------\nD    INDIRECTNAME(tdqueue)\nI      (indirect queues only): Specifies the name of\nI      the transient data queue to which this indirect queue routes data.\nI      The transient data queue must be defined to CICS, and it can be\nI      intrapartition, extrapartition, remote, or indirect.\nN\nD    REMOTELENGTH(number)\nI      (remote queues only): Specifies the length\nI      in bytes, in the range 1 through 32767. For SYSOUT data sets, the\nI      value entered in the REMOTELENGTH field must not be greater\nI      than 8968 bytes (when the SYSOUTCLASS attribute has been\nI      specified).\nN\nI      1: The length is 1 byte.\nN\nI      number: The length in bytes, up to 32767.\nN\nI      If the queue is defined with TYPE=EXTRA, and no value is specified\nI      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at\nI      installation time.\nN\nD    REMOTENAME(tdqueue)\nI      (remote queues only): Specifies, if the transient\nI      data queue resides on a remote system, the 4-character name by\nI      which the queue is known in the system or region on which the\nI      queue resides.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the 4-character alphanumeric\nI      name of the system or region in which the remote transient data\nI      queue resides. The name entered must be the same as the name\nI      specified on the RDO CONNECTION or the first 4 characters of\nI      the name specified on an RDO IPCONN definition. For more\nI      information about the connection definitions, see\nI      \"CONNECTION attributes\" or \"IPCONN attributes\".\nN\nI      When the transient data queue definition is installed, the name\nI      entered in the REMOTESYSTEM attribute is compared with the system\nI      identifier. If the names are different, the system or region is\nI      remote. If the names are the same, the value specified in the TYPE\nI      attribute is used. If the TYPE attribute is blank, the installation\nI      fails.\nN\nN\nNTDQUEUE attributes for remote queues of unspecified TYPE:\nN---------------------------------------------------------\nD    REMOTELENGTH(number)\nI      (remote queues only): Specifies the length\nI      in bytes, in the range 1 through 32767. For SYSOUT data sets, the\nI      value entered in the REMOTELENGTH field must not be greater\nI      than 8968 bytes (when the SYSOUTCLASS attribute has been\nI      specified).\nN\nI      1: The length is 1 byte.\nN\nI      number: The length in bytes, up to 32767.\nN\nI      If the queue is defined with TYPE=EXTRA, and no value is specified\nI      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at\nI      installation time.\nN\nD    REMOTENAME(tdqueue)\nI      (remote queues only): Specifies, if the transient\nI      data queue resides on a remote system, the 4-character name by\nI      which the queue is known in the system or region on which the\nI      queue resides.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the 4-character alphanumeric\nI      name of the system or region in which the remote transient data\nI      queue resides. The name entered must be the same as the name\nI      specified on the RDO CONNECTION or the first 4 characters of\nI      the name specified on an RDO IPCONN definition. For more\nI      information about the connection definitions, see\nI      \"CONNECTION attributes\" or \"IPCONN attributes\".\nN\nI      When the transient data queue definition is installed, the name\nI      entered in the REMOTESYSTEM attribute is compared with the system\nI      identifier. If the names are different, the system or region is\nI      remote. If the names are the same, the value specified in the TYPE\nI      attribute is used. If the TYPE attribute is blank, the installation\nI      fails.\nN\nI      (intrapartition queues only): Specifies the userid\nI      you want CICS to use for security checking when verifying the\nI      trigger-level transaction specified in the TRANSID field. The\nI      userid can be up to eight characters in length.\nN\nI      The value entered in the USERID field is valid only when\nI      ATIFACILITY(FILE) is also specified.\nN\nI      When security is active, the trigger-level transaction runs under\nI      the authority of the specified userid. This userid must be\nI      authorized to all the resources used by the trigger-level\nI      transaction.\nN\nI      If you omit the userid from a transient data queue definition,\nI      CICS uses the CICS default userid, specified on the DFLTUSER\nI      system initialization parameter. Security checking takes place\nI      when you are installing an intrapartition definition containing a\nI      userid. If the security check fails, the resource definition for\nI      that intrapartition queue is not installed.\nN\nI      For further information about surrogate user security, see the\nI      CICS RACF Security Guide.\nN\nD    WAIT(YES | NO)\nI      (intrapartition queues only): Specifies whether an\nI      indoubt unit of work (UOW) that has modified a logically\nI      recoverable queue should wait for resynchronization with its\nI      coordinator to determine whether to commit or back out the\nI      changes.\nN\nI      NO: The UOW is not to wait. Any changes made to recoverable\nI        resources are to be backed out or committed, as specified by\nI        the ACTION attribute on the TRANSACTION resource definition.\nN\nI      YES: The UOW is to wait, and any action required while waiting is\nI        determined by the WAITACTION attribute.\nN\nI      This attribute overrides the WAIT attribute defined on the UOW's\nI      transaction definition. See Table 13 on page 298 for an explanation\nI      of the interactions of indoubt attributes on the TDQUEUE and\nI      TRANSACTION definitions.\nN\nD    WAITACTION(REJECT | QUEUE)\nI      (intrapartition queues only): Specifies\nI      the action CICS is to take for an indoubt unit of work (UOW) if\nI      the definition for this queue specifies WAIT(YES). The possible\nI      actions are:\nN\nI      QUEUE: The UOW is indoubt and waiting; any locks held by the UOW\nI        for this queue remain active until the final state of the UOW\nI        is known. This means that tasks are suspended rather than\nI        receiving the LOCKED response. When the final state of the UOW\nI        is known, any changes that it has made are committed or backed\nI        out. Until then, any further requests of the following types\nI        that need one of the active locks must wait:\nN\nI      READQ, if the indoubt UOW had issued READQ or DELETEQ requests.\nN\nI      WRITEQ, if the indoubt UOW had issued WRITEQ or DELETEQ requests.\nN\nI      DELETEQ, if the indoubt UOW had issued READQ, WRITEQ or DELETEQ\nI        requests.\nN\nI    REJECT: The UOW is indoubt and is waiting. Any lock held by the\nI      UOW for this queue is retained until the final state of the UOW\nI      is known. When the final state is known, any changes the UOW\nI      has made are committed or backed out. Until then, any further\nI      request that needs one of the retained locks is rejected, and\nI      a LOCKED response is returned. WAITACTION=REJECT causes LOCKED\nI      to be raised in exactly the same circumstances as those in which\nI      QUEUE causes a transaction to wait.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG30": {"ttr": 8963, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG30\nTCICS\nT-RDG\nT-Chapter 30. TERMINAL resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 30. TERMINAL resources\nN==============================\nNA TERMINAL resource defines the characteristics of a terminal device\nNwhich communicates with CICS. Terminal devices include visual display\nMunits, printers, operating system consoles, and more specialized\nNdevices such as facsimile (FAX) machines.\nN\nNThe unique and possibly dynamic properties of terminals are defined in\nNthe TERMINAL definition in the CSD file.\nN\nNHowever, many of your terminals have identical properties, and you do\nNnot need to define each of them separately and fully to CICS. There are\nNtwo ways you can reduce the time and effort needed to define each\nNterminal. They are:\nN\nN1. TYPETERM definitions, with or without the QUERY function. Each\nN   TERMINAL definition must refer to a TYPETERM definition that defines\nN   the properties that are common, often more complex, and usually\nN   static. Together, information from the TERMINAL and TYPETERM\nN   definitions makes up a terminal entry in the TCT (a TCTTE).\nN\nN   One TYPETERM can represent a lot of the properties of many\nN   terminals. Some of these properties can be undefined at the time of\nN   creating the TYPETERM definition. These properties can be determined\nN   at logon time for each terminal, from the QUERY structured field.\nN\nN   There are, however, still more properties that many terminals have\nN   in common, to the extent that their TERMINAL definitions would all\nN   be identical. CICS provides a facility that avoids the need for each\nN   terminal to have its own resource definition installed in the TCT\nN   the whole time CICS is active.\nN\nN2. Autoinstall, using one TERMINAL definition to represent many\nN   terminals. You can let CICS create and install the resource\nN   dynamically when the terminal is needed, at logon time. To do this,\nN   CICS uses a model TERMINAL definition from the CSD file. This\nN   process is known as automatic installation, or autoinstall.\nN\nN   Autoinstall reduces the virtual storage required for the terminal\nN   control table (TCT) if some of your terminals are not logged on when\nN   CICS is active.\nN\nN   If you are involved in planning for and managing CICS communications\nN   resources such as terminals, read \"Autoinstalling\nN   z/OS Communications Server terminals\" for further information.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3001": {"ttr": 8965, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3001\nTCICS\nT-RDG\nT-Chapter 30. TERMINAL resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-125055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 30. TERMINAL resources\nN==============================\nNTERMINAL attributes\nN-------------------\nNDescribes the syntax and attributes of the TERMINAL resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TERMINAL(name)\nI      Specifies the terminal identifier. For a terminal,\nI      the name can be up to 4 characters in length.\nN\nI      If the name supplied is fewer than 4 characters, it is\nI      left-justified and padded with blanks up to 4 characters. You\nI      should not have a TERMINAL definition and a CONNECTION definition\nI      with the same name.\nN\nI      Note: If you use a comma (,) in a name, you cannot use commands\nI      such as:\nN\nI        CEMT INQUIRE TERMINAL(value1,value2)\nI        CEMT SET TERMINAL(value1,value2)\nN\nI      where the comma serves as a list delimiter. See CICS Supplied\nI      Transactions for information about using lists of resource\nI      identifiers.\nN\nI      Also, if you are allowing CICS to automatically generate session\nI      names or terminal IDs for consoles, avoid using any of the\nI      following symbols as the first or fourth character in the terminal\nI      name:\nN\nI      -: The hyphen is used by CICS for automatically generated terminal\nI        names for APPC sessions\nN\nI      > and <: The > (greater than) and < (less than) symbols are used\nI        by CICS for automatically generated terminal names for IRC\nI        sessions\nN\nI      ,: The , (logical not) symbol is used by CICS for automatically\nI        generated terminal names for MVS consoles.\nN\nI      The name specified becomes the name of the TCT entry, when this\nI      TERMINAL definition is installed. For this reason, the TERMINAL\nI      name must be unique.\nN\nI      Note that the value CERR is reserved for the identification\nI      generated for the error console. If you specify AUTINSTMODEL(ONLY),\nI      you do not need a unique TERMINAL name, because it is not used as\nI      the name of a TCT entry. If you specify AUTINSTMODEL(YES), the\nI      TERMINAL name is used as the name of the TCT entry that is\nI      installed in the TCT when the TERMINAL definition is installed;\nI      the names of the TCT entries for the autoinstalled terminals are\nI      determined by the autoinstall user program.\nN\nI      If the terminal is to be associated with a transient data\nI      destination, the terminal name and the transient data queue name\nI      in the TDQUEUE resource definition must be the same.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ALTPRINTCOPY(NO | YES)\nI      Specifies whether the hardware COPY feature\nI      is to be used to satisfy a print request on the printer named in\nI      the ALTPRINTER attribute. For more details, see the PRINTERCOPY\nI      attribute.\nN\nI      NO: CICS will use the hardware COPY feature.\nN\nI      YES: CICS will not use the hardware COPY feature.\nN\nD    ALTPRINTER(printer)\nI      Specifies the name of a 3270 printer to be used,\nI      if the printer named in the PRINTER attribute of this terminal\nI      definition is not available. The name can be up to 4 characters in\nI      length. For more details, see the PRINTER attribute. If you specify\nI      an ALTPRINTER without specifying a PRINTER, ALTPRINTER is ignored.\nN\nI      The printer that you name must be owned by the CICS system that\nI      owns this terminal definition.\nN\nI      To specify the hardware COPY feature for the alternative printer,\nI      specify YES for ALTPRINTCOPY on this terminal definition.\nN\nD    AUTINSTMODEL(NO | ONLY | YES)\nI      Specifies whether this terminal\nI      definition can be used as a model terminal definition for\nI      autoinstall. For more information on autoinstall and model terminal\nI      definitions, see \"Autoinstalling z/OS Communications Server\nI      terminals\".\nN\nI      NO: This definition is not used as a model for autoinstall. It is\nI        used only as a definition for a specific device that is not\nI        autoinstalled.\nN\nI      ONLY: This definition is used only as a model for autoinstall. It\nI        is not used as a definition for a specific device.\nN\nI      YES: This definition is used for a specific device that is not\nI        autoinstalled. The definition is also used as a model for\nI        automatic installation.\nN\nD    AUTINSTNAME(autinstname)\nI      Specifies the name by which this model\nI      definition is known in the autoinstall control program. The name\nI      can be up to 8 characters in length.\nN\nI      You specify this name only if AUTINSTMODEL is YES or ONLY. You can\nI      default to the terminal name followed by four blanks, if this name\nI      is acceptable to the autoinstall control program. For more\nI      information about autoinstall models, autoinstall names, and the\nI      autoinstall control program, see \"Autoinstall control program\".\nN\nI      This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nN    CONSOLE\nI      This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    CONSNAME(console)\nI      Using CONSNAME, you can install a CICS console\nI      definition without having an existing console, and without the\nI      console being previously defined in the CONSOLnn member of the\nI      MVS SYS1.PARMLIB. However, before you can use the console, you must\nI      define the name to MVS, either in the CONSOLnn member of\nI      SYS1.PARMLIB or by dynamic allocation. The length of CONSNAME must\nI      be 2 - 8 characters and must begin with an alphabetic character or\nI      one of #, @, or $. It uniquely identifies the console device in a\nI      CICS region, regardless of the MVS image to which it is connected;\nI      that is, you cannot install two console definitions with the same\nI      CONSNAME. The CONSNAME corresponds to the name defined for the\nI      console in the MVS SYS1.PARMLIB member, CONSOLnn.\nN\nI      To define a TSO user as a console device, specify CONSNAME(name),\nI      where name is the TSO user ID. This definition enables a TSO user\nI      authorized to use the TSO CONSOLE command to initiate CICS\nI      transactions. The TSO user ID does not have to be defined in the\nI      CONSOLnn member of SYS1.PARMLIB member.\nN\nI      The equivalent of CONSOLE(00) is CONSNAME(INTERNAL) or\nI      CONSNAME(INSTREAM), depending on the service level of CICS and the\nI      release of MVS being used; specify this option if you want to\nI      initiate a CICS transaction and issue a command to it in a JCL\nI      statement. For guidance about using JCL to issue CICS commands,\nI      see the CICS Operations and Utilities Guide.\nN\nD    INSERVICE(YES | NO)\nI      Specifies the status of the terminal that is\nI      being defined.\nN\nI      YES: Transactions can be initiated and messages are automatically\nI        sent to the terminal.\nN\nI      NO: The terminal cannot receive messages or transmit input.\nN\nD    NATLANG(code)\nI      Specifies the language in which all\nI      globalization-enabled messages are displayed for this terminal.\nI      Specify one of the following NATLANG codes. The default is the\nI      value specified in the NATLANG system initialization parameter.\nN\nI      E: English, which is the system default (that is, is provided even\nI        if you do not specifically code E).\nN\nI      C: Simplified Chinese, a Double-Byte Character Set language.\nI        Translation is performed by IBM.\nN\nI      K: Japanese, a Double-Byte Character Set language. Translation is\nI        performed by IBM.\nN\nD    NETNAME(netname)\nI      Specifies the network name that identifies the\nI      terminal to ACF/Communications Server. The name can be up to\nI      8 characters in length. The name follows assembler language rules\nI      and must start with an alphabetic character.\nN\nI      If you do not specify a name, the NETNAME defaults to the\nI      TERMINAL name.\nN\nI      The NETNAME must be unique except in the case of a remote terminal.\nI      That is, you cannot install two local terminals with the same\nI      NETNAME, or a local terminal and any connection with the same\nI      NETNAME. However, the NETNAME for a remote terminal can be the\nI      same as the NETNAME for any other terminal or the NETNAME for any\nI      connection.\nN\nI      If the CICS region supports z/OS Communications Server dynamic LU\nI      alias; that is, LUAPFX=xx is specified on the CICS region APPL\nI      statement, the terminal with this NETNAME is assumed to be in the\nI      same network as the CICS region. If the terminal is in another\nI      network, it must be defined to z/OS Communications Server on a\nI      CDRSC definition with a predefined LUALIAS (LUALIAS=netname) to\nI      override z/OS Communications Server dynamic allocation. In this\nI      case, netname on the LUALIAS parameter must match the NETNAME\nI      defined on this terminal resource definition.\nN\nI    OPERID:\nI    OPERPRIORITY:\nI    OPERRSL:\nI    OPERSECURITY: These attributes are obsolete, but are supported to\nI      provide compatibility with earlier releases of CICS.\nN\nD    POOL(poolname)\nI      Specifies the pool name for a 3600 or 3650 pipeline\nI      terminal pooled with other pipeline terminals.\nN\nI      When you define a 3600 pipeline logical unit, you generate a\nI      TCTTE that is associated with a pool of TCTTEs. A pool of pipeline\nI      TCTTEs can be used by one pipeline logical unit, or it can be\nI      shared by a number of pipeline logical units.\nN\nI      The pool name is used only as a method of identifying the related\nI      TERMINAL definitions on the CSD file. It is not used in the active\nI      CICS system. The name can be up to 8 characters in length.\nN\nI      For a pipeline terminal, you must specify a TYPETERM with\nI      SESSIONTYPE(PIPELINE) specified. You must specify a TASKLIMIT on\nI      at least one of the pool of pipeline terminals. You must name the\nI      same group for each of the pipeline terminals in a pool.\nN\nI        Here is an example of the definitions for a pool of pipeline\nI        terminals:\nN\nI        DEFINE TERMINAL(ttt1) GROUP(g)\nI          NETNAME(nnnnnnn1)\nI          POOL(poolid)\nI          TYPETERM(xxxxxxxx)\nI          ...\nI        DEFINE TERMINAL(ttt2) GROUP(g)\nI          NETNAME(nnnnnnn2)\nI          POOL(poolid)\nI          TYPETERM(xxxxxxxx)\nI          ...\nI        DEFINE TERMINAL(ttt3) GROUP(g)\nI          NETNAME(nnnnnnn3)\nI          POOL(poolid)\nI          TYPETERM(xxxxxxxx)\nI          ...\nI        DEFINE TERMINAL(ttt4) GROUP(g)\nI          NETNAME(nnnnnnn4)\nI          POOL(poolid)\nI          TASKLIMIT(nn)\nI          TYPETERM(xxxxxxxx)\nI          ...\nI        DEFINE TYPETERM(xxxxxxxx) GROUP(g)\nI          DEVICE(3650)\nI          SESSIONTYPE(PIPELINE)\nN\nD    PRINTER(printer)\nI      Specifies the name of the primary 3270 printer to\nI      be used to respond to an ISSUE PRINT command or a PRINT request\nI      from an operator pressing a program access (PA) key. The name can\nI      be up to 4 characters in length. The name is the TERMINAL name on\nI      the definition for the printer. If you name a PRINTER here, the\nI      TYPETERM referenced by this TERMINAL definition must have\nI      PRINTADAPTER(NO).\nN\nI      The printer that you name must be owned by the same CICS system\nI      that owns this TERMINAL definition.\nN\nI      You can name a PRINTER if this TERMINAL definition is for one of\nI      the following:\nN\nI      -> A 3270 display without the printer-adapter feature\nN\nI      -> A 3270 display attached to a 3274 control unit\nN\nI      -> A 3276 control unit display station\nN\nI      -> A 3790 in 3270 compatibility mode\nN\nI      If you want to specify the hardware COPY feature, specify\nI      PRINTERCOPY(YES) on this TERMINAL definition.\nN\nI      Note that SNA character string (SCS) printers accept only 3790\nI      data streams; they do not accept 3270 data streams. They therefore\nI      cannot be used to print the buffer contents of a display unit.\nN\nI      If you use a program attention key, for example, PA1, to print\nI      the contents of the screen on an associated z/OS Communications\nI      Server printer, the screen size of the printer is chosen according\nI      to the SCRNSIZE operand as defined in the CICS-supplied default\nI      profile DFHCICST. This profile is defined with SCRNSIZE(DEFAULT)\nI      and, if you want to use the alternate screen size of the printer,\nI      you have to change the profile entry for transaction CSPP.\nN\nD    PRINTERCOPY(NO | YES)\nI      Specifies whether the hardware COPY feature\nI      is to be used to satisfy a print request on the printer named in\nI      the PRINTER attribute of this terminal definition.\nN\nI      CICS uses the hardware COPY feature of the 3270 to perform the\nI      print, unless a task is currently attached to the display.\nN\nI      You do not need to specify COPY(YES) on the TYPETERM definition,\nI      because it is implied by PRINTERCOPY(YES) on the terminal\nI      definition.\nN\nI      If you have named an ALTPRINTER as well as a PRINTER, you can\nI      specify ALTPRINTCOPY(YES).\nN\nI      To use the COPY feature, both the printer and the display terminal\nI      must be on the same 3270 control unit. Otherwise, either the COPY\nI      might fail, raising an error condition, or, if the display device\nI      address is valid for the printer control unit, copying might be\nI      performed from a different display.\nN\nI      Do not specify PRINTERCOPY(YES) if, in a networking environment,\nI      the 3270 control unit is connected to a TCAM system in one domain,\nI      and a CICS system in another domain has access to the control unit\nI      through z/OS Communications Server. The hardware COPY address is\nI      not available to CICS and cannot therefore be used by terminals\nI      attached to such a control unit.\nN\nI      The COPY command is invalid for a 3270 compatibility mode display.\nN\nD    REMOTENAME(terminal)\nI      Specifies the name by which the terminal is\nI      known in the system or region that owns the terminal. The name can\nI      be up to 4 characters in length.\nN\nD    REMOTESYSNET(netname)\nI      Specifies the network name (APPLID) of the\nI      region that owns the terminal. The name can be up to 8 characters\nI      in length. It follows assembler language rules, and must start\nI      with an alphabetic character.\nN\nI      REMOTESYSNET is used where there is no direct link between the\nI      region in which this definition is installed and the\nI      terminal-owning region. You do not need to specify REMOTESYSNET\nI      if either of the following is true:\nN\nI      -> You are defining a local terminal; that is, REMOTESYSTEM is not\nI         specified, or specifies the sysid of the local system.\nN\nI      -> REMOTESYSTEM names a direct link to the terminal-owning region.\nI         However, if the terminal-owning region is a member of a\nI         z/OS Communications Server generic resources group and the\nI         direct link is an APPC connection, you might need to specify\nI         REMOTESYSNET.\nN\nI      REMOTESYSNET is needed in this case if the NETNAME specified on\nI      the CONNECTION definition for the direct link is the generic\nI      resource name of the TOR (not the applid).\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the name that identifies the\nI      intercommunication link to the system that owns the terminal. The\nI      name can be up to 4 characters in length.\nN\nI      REMOTESYSTEM is one of these identifiers:\nN\nI      -> For IPIC connections, the first 4 characters of the IPCONN name\nI         on the IPCONN definition, which is in service and acquired.\nN\nI      -> For MRO and APPC connections, the CONNECTION name on the\nI         CONNECTION definition. If the CONNECTION name is not specified,\nI         or if the name is specified as the sysid of the local system,\nI         the terminal is local to this system. If the name is the name\nI         of another system, the terminal is remote. You can therefore\nI         use the same definition for the terminal in both the local\nI         system and a remote system.\nN\nI      If you have intermediate systems between this CICS and the\nI      terminal-owning region, REMOTESYSTEM specifies the first link in\nI      the path to the TOR. If more than one path is possible,\nI      REMOTESYSTEM specifies the first link in the preferred path.\nN\nI      REMOTESYSTEM is ignored if you specify AUTINSTMODEL(YES) or\nI      AUTINSTMODEL(ONLY).\nN\nD    SECURITYNAME(securityname)\nI      Specifies the security name of the remote system.\nN\nI      In a CICS system with security initialized (SEC=YES or MIGRATE),\nI      the security name is used to establish the authority of the remote\nI      system.\nN\nI      If USERID is specified in the session definition (DEFINE SESSIONS\nI      command) associated with the connection definition, the user ID\nI      overrides the user ID specified in the SECURITYNAME attribute, and\nI      is used for link security. The security name, or USERID on the\nI      sessions definition, must be a valid RACF user ID on your system.\nI      Access to protected resources on your system is based on the RACF\nI      user profile and its group membership.\nN\nI      For more information on defining security for MRO, LUTYPE6.1, and\nI      APPC connections, see the RACF Security Guide.\nN\nD    SOLICITED(NO | YES)\nI      Specifies whether CICS messages issued to a\nI      console will be treated by NetView as solicited or unsolicited.\nN\nI      NO: CICS messages will be treated as unsolicited\nN\nI      YES: CICS messages will be treated as solicited. When\nI        SOLICITED(YES) is specified for a console, CICS adds the console\nI        name or the console identification number and a command and\nI        response token to each console message.\nN\nI      The SOLICITED attribute applies only to consoles; it is ignored\nI      for other TERMINAL definitions.\nN\nD    TASKLIMIT(NO | number)\nI      Specifies the number of concurrent tasks\nI      allowed to run in a pipeline session or in a pool of pipeline\nI      sessions.\nN\nI      NO: No concurrent tasks are allowed.\nN\nI      number: The number of concurrent tasks allowed to run, in the\nI        range 1 - 32767.\nN\nI      When you define a 3600 pipeline logical unit, you generate a\nI      TCTTE that is associated with a pool of TCTTEs. When messages\nI      enter CICS from the 3600 pipeline logical unit, a task is attached\nI      to process this message, using as an anchor block one of the TCTTEs\nI      from the pool. In this way, consecutive messages sent using the\nI      pipeline logical unit can be processed concurrently, the number\nI      of concurrent transactions being limited by the number of TCTTEs\nI      in the pool. The number of TCTTEs in the pool should represents\nI      the high-water mark of inquiry activity. In this way, the pipeline\nI      facility allows fewer TCTTEs to be defined to CICS than the total\nI      number of pipeline inquiry terminals.\nN\nD    TERMPRIORITY(0 | priority)\nI      Specifies the terminal priority. This\nI      decimal value (0 - 255) is used in establishing the overall\nI      transaction processing priority. Transaction processing priority\nI      is equal to the sum of the terminal priority, transaction priority,\nI      and operator priority, not exceeding 255.\nN\nD    TRANSACTION(transaction)\nI      Specifies a 1- to 4-character name of the\nI      transaction that is to be initiated each time input is received\nI      from the terminal when there is no active task.\nN\nI      For z/OS Communications Server non-3270 devices, a TRANSACTION name\nI      of fewer than 4 characters requires a delimiter.\nN\nI      For information on what happens when a transaction is initiated,\nI      see the CICS Application Programming Guide.\nN\nI      If you specify this operand for a 3270 display, the only CICS\nI      functions the operator can start, other than this transaction, are\nI      paging commands and print requests.\nN\nI      You are unlikely to specify the TRANSACTION attribute for a 3270\nI      display or SCS printer. It is optional for 3601 logical units,\nI      but is mandatory for 3614 logical units.\nN\nI      If this operand is specified for a 3790 Communication System, and\nI      multiple sessions are used to connect the same 3791, specify the\nI      same TRANSACTION name for all sessions.\nN\nD    TYPETERM(typeterm)\nI      Specifies the name of the TYPETERM definition to\nI      be associated with this TERMINAL definition. The name can be up to\nI      8 characters in length.\nN\nI      The TYPETERM definition specifies many attributes for a number of\nI      similar terminals. For more information, see \"TYPETERM attributes\"\nI      and \"Ways of defining CICS resources\". The TYPETERM attribute is\nI      mandatory for all TERMINAL definitions.\nN\nI      The TYPETERM definition must already be installed when you install\nI      this TERMINAL definition.\nN\nD    USERID(userid | *EVERY | *FIRST)\nI      Specifies a user identifier used for\nI      sign-on and referred to in security error messages, security\nI      violation messages, and the audit trail. It must be a valid\nI      user ID defined to the security manager.\nN\nI      The USERID attribute provides the only way to specify a user\nI      identifier for devices such as printers that are unable to sign\nI      on using CESN. You can also specify USERID for a display device;\nI      if so, the display is permanently signed on. Operators are unable\nI      to sign on. All access to protected resources depends on the\nI      authorizations permitted by RACF for the specified USERID.\nN\nI      For an APPC single session terminal, USERID overrides any\nI      SECURITYNAME that you have specified for the connection.\nN\nI      name: This name can be up to 8 characters in length.\nN\nI      *EVERY: This special operand is for autoinstalled consoles only.\nI        It means that CICS is to use the user ID passed on the\nI        MVS MODIFY command every time a MODIFY command is received. The\nI        console is signed on using the MVS user ID as the preset\nI        user ID for the console being autoinstalled. The console remains\nI        signed on with this user ID until the console is deleted or\nI        another MODIFY is received with another user ID. If a MODIFY\nI        command is received without a user ID, CICS signs on the default\nI        CICS user ID until a MODIFY command is received that has a valid\nI        user ID. For non-console terminals, or if security is not\nI        enabled, this value is ignored.\nN\nI      *FIRST: This special is operand for autoinstalled consoles only.\nI        It means that CICS is to use the user ID passed on the first\nI        MVS MODIFY command that requires the console to be autoinstalled.\nI        The console is signed on with the MVS user ID as the preset\nI        user ID. The console remains signed on with this user ID until\nI        the console is deleted. If a MODIFY command is received without\nI        a user ID, CICS signs on the default CICS user ID. For\nI        non-console terminals, or if security is not enabled, this value\nI        is ignored.\nN\nI      If this terminal definition defines a console, the user ID must\nI      be authorized to the appropriate profile in the CONSOLE general\nI      resource class. See the CICS RACF Security Guide for information\nI      about preset security on consoles and terminals.\nN\nNAPPC attributes:\nN----------------\nD    ATTACHSEC(LOCAL | IDENTIFY | MIXIDPE | PERSISTENT | VERIFY)\nI      (APPC only):\nI      Specifies the level of attach time user security required for the\nI      connection.\nN\nI      PERSISTENT and MIXIDPE are valid only with z/OS Communications\nI      Server as the access method and when APPC is used.\nN\nI      LOCAL: The authority of the user is taken to be the authority of\nI      the link itself, and link security protects only the resource.\nN\nI      IDENTIFY: Incoming attach requests must specify a user identifier.\nI        Specify IDENTIFY when the connecting terminal has a security\nI        manager.\nN\nI      MIXIDPE: A connection can support attaches using either or both of\nI        the IDENTIFY and PERSISTENT security types. The security type\nI        used depends on the incoming attach.\nN\nI        As in previous releases, IDENTIFY implies a degree of trust\nI        between the two systems that allows this system to accept the\nI        sign-on logic of the other system. In effect, you have a\nI        distributed security manager, with one system performing the\nI        sign-on function and the other system performing the security\nI        check.\nN\nI      PERSISTENT: This option involves a user sign-on to a remote system\nI        that persists over multiple conversations until the user signs\nI        off from the remote system. In this way, the user ID and password\nI        are passed only on the first (sign-on) attach. Subsequent attach\nI        requests require only the user ID.\nN\nI      VERIFY: Incoming attach requests must specify a user identifier and\nI        a user password. Specify VERIFY when the connecting terminal has\nI        no security manager and therefore requires verification.\nN\nD    BINDSECURITY(NO | YES)\nI      (APPC only): Specifies whether an external\nI      security manager (ESM) is being used for bind-time security.\nN\nI      NO: No external bind-time security is required.\nN\nI      YES: If security is active and the XAPPC system initialization\nI        parameter is set to YES, CICS attempts to extract the session\nI        key from RACF to carry out bind-time security. If no RACF\nI        profile is available, the bind fails.\nN\nD    MODENAME(modename)\nI      (APPC single session terminals only): Specifies\nI      the name that is passed to z/OS Communications Server as the\nI      LOGMODE name. The name can be up to 8 characters in length, but\nI      cannot have the reserved name SNASVCMG. The name follows assembler\nI      language rules and must start with an alphabetic character.\nN\nI      For further guidance on the LOGMODE name, see Coding entries in\nI      the z/OS Communications Server LOGON mode table in the\nI      CICS Customization Guide.\nN\nD    USEDFLTUSER(NO | YES)\nI      (APPC only): Specifies the kind of security\nI      checking that will take place for each inbound attach FMH.\nN\nI      NO: Indicates that each inbound attach FMH will be checked for the\nI        presence of those fields required by the ATTACHSEC option. If\nI        the required fields are not present, a protocol violation message\nI        is issued and the attach fails. NO is the default.\nN\nI      YES: Indicates that some checks on the validity of the attach\nI        Function Management Header (FMH) are bypassed. See the\nI        CICS RACF Security Guide.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG31": {"ttr": 9219, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG31\nTCICS\nT-RDG\nT-Chapter 31. TRANCLASS resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 31. TRANCLASS resources\nN===============================\nNA TRANCLASS resource defines the characteristics of a transaction\nNclass.\nN\nNTransactions that are defined as belonging to a transaction class are\nNsubject to scheduling constraints before they are allowed to execute.\nNIf transactions belonging to an active transaction class are already\nNrunning, any new transactions are queued. Use the MAXACTIVE attribute\nNto specify the maximum number of transactions that you want to run. To\nNlimit the size of the queue, you can use the PURGETHRESH attribute.\nN\nNBy putting your transactions into transaction classes, you can control\nNhow CICS dispatches tasks. For example, you can separate transactions\nNinto those that are heavy resource users and those that are of lesser\nNimportance, such as the Good morning\" broadcast messages. You can then\nNuse the attributes on the TRANCLASS definition to control the number of\nNactive tasks allowed from each transaction class.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3101": {"ttr": 9221, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3101\nTCICS\nT-RDG\nT-Chapter 31. TRANCLASS resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-125455\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 31. TRANCLASS resources\nN===============================\nNTRANCLASS attributes\nN--------------------\nNDescribes the syntax and attributes of the TRANCLASS resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TRANCLASS(name)\nI      Specifies the name of the transaction class.\nI      Transactions belonging to a transaction class are subject to\nI      scheduling constraints before they are allowed to execute. The\nI      reserved TRANCLASS name DFHTCL00 is used to indicate that the\nI      transaction does not belong to any transaction class.\nN\nI      For compatibility with releases that support a TCLASS attribute,\nI      CICS provides the following TRANCLASS equivalents:\nN\nI      TCLASS TRANCLASS\nI      ------ ---------\nI      NO   DFHTCL00\nI      1    DFHTCL01\nI      2    DFHTCL02\nI      3    DFHTCL03\nI      4    DFHTCL04\nI      5    DFHTCL05\nI      6    DFHTCL06\nI      7    DFHTCL07\nI      8    DFHTCL08\nI      9    DFHTCL09\nI      10   DFHTCL10\nN\nI      Sample definitions for these transaction classes are in group\nI      DFHTCL, supplied as part of DFHLIST.\nN\nI      Note: If a transaction is run and its associated TRANCLASS\nI      definition is not installed, the transaction runs without any of\nI      the scheduling constraints specified in the TRANCLASS. Attention\nI      message DFHXM0212 is issued.\nN\nI      TRANCLASS can be up to eight characters in length.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    MAXACTIVE(number)\nI      Specifies the maximum number of transactions in\nI      this transaction class that are allowed to be active. You must\nI      specify a MAXACTIVE value when you define a transaction class, in\nI      the range 0 through 999.\nN\nI      New transactions attached when the number of active transactions\nI      has reached the MAXACTIVE limit are considered for queueing\nI      subject to the PURGETHRESH limit.\nN\nI      Defining a transaction class with a zero MAXACTIVE value signifies\nI      that all tasks are to be queued.\nN\nD    PURGETHRESH(NO | number)\nI      This is an optional purge threshold for\nI      the transaction class; it defines a threshold number at which\nI      transactions queuing for membership of the transaction class are\nI      purged. Specify it if you want to limit the number of transactions\nI      queueing in this transaction class. It can have the following\nI      values:\nN\nI      NO: The size of the queue is unlimited (other than by the storage\nI        available to attach tasks).\nN\nI      number: The purge threshold number in the range 1-1000000.\nN\nI        If you specify this as 1, no transactions are allowed to\nI        queue. If you specify it as any other number (n), the size of\nI        the queue is restricted to number-1. All new transactions\nI        attached after the limit of n-1 is reached are purged.\nN\nI      Example of PURGETHRESH: In the case of a transaction class where the\nI      maximum number of active tasks (MAXACTIVE) is set to 50, and the\nI      purge threshold (PURGETHRESH) is set to 10 to limit queuing\nI      transactions, CICS begins to abend new transactions for the class\nI      when:\nN\nI      -> The number of active transactions reaches 50, and\nN\nI      -> The number of transactions queuing for membership of the\nI         transaction class has reached 9\nN\nI      CICS accepts new transactions for this transaction class queue\nI      only when the number queued falls below the maximum size of the\nI      queue (9 in our example).\nN\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG32": {"ttr": 9223, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG32\nKTXID TRANSID\nTCICS\nT-RDG\nT-Chapter 32. TRANSACTION resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 32. TRANSACTION resources\nN=================================\nNA TRANSACTION resource defines transaction attributes that relate to\nNfunctions provided by CICS.\nN\nNA CICS application consists of one or more programs written to perform\nNa specific function. A particular invocation of such an application is\nNknown as a transaction, and the CICS transaction manager identifies it\nNby its transaction identifier (TRANSID). The TRANSACTION resource can\nNalso be used as an application entry point. Entry points are described\nNin Application entry points.\nN\nNYou tell CICS how you want your transaction to run, primarily in a\nNTRANSACTION definition, by providing such information as the\nNtransaction priority, security key, and the length of the transaction\nNwork area (TWA). The name of this definition, the TRANSACTION name, is\nNthe same as the TRANSID. You also link the transaction with other\nNresources by coding the names of their definitions in the TRANSACTION\nNdefinition. These other resources are PROGRAM, PROFILE, PARTITIONSET,\nNREMOTESYSTEM, and TRANCLASS.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3201": {"ttr": 9473, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3201\nTCICS\nT-RDG\nT-Chapter 32. TRANSACTION resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-142355\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 32. TRANSACTION resources\nN=================================\nNTRANSACTION attributes\nN----------------------\nNDescribes the syntax and attributes of the TRANSACTION resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TRANSACTION(name)\nI      Specifies the name of the transaction or\nI      transaction identifier (TRANSID). The name can be up to\nI      4 characters in length.\nN\nI      It is preferable not to use names that start with DFH because\nI      these characters are reserved for use by CICS.\nN\nI      CICS can delete or discard them and replace them with CICS\nI      resources when you upgrade or provide new function or fixes.\nN\nI      Note:\nI      1. If you use a comma (,) in a name, you cannot use commands such\nI         as these:\nN\nI         CEMT INQUIRE TRANSACTION(value1,value2)\nI         CEMT SET TRANSACTION(value1,value2)\nN\nI         where the comma serves as a list delimiter. See CICS Supplied\nI         Transactions for information about using lists of resource\nI         identifiers.\nN\nI      2. If you protect your transient data queues using RACF, avoid\nI         using % and & in the name. RACF commands assign a special\nI         meaning to these characters when they are used in a profile\nI         name. See the CICS RACF Security Guide.\nN\nI       If you want to use other special characters in a transaction\nI       identifier, use the XTRANID attribute to specify another name that\nI       can be used to initiate the transaction. You must also specify a\nI       TRANSACTION name, because this name is the one by which the\nI       TRANSACTION definition is known on the CSD file. When defining a\nI       transaction, you must also name either a PROGRAM or a\nI       REMOTESYSTEM.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ACTION(BACKOUT | COMMIT)\nI      Specifies the action to be taken when a\nI      CICS region fails, or loses connectivity with its coordinator,\nI      during 2-phase commit processing after the unit of work has entered\nI      the indoubt period. The action depends on the WAIT attribute.\nN\nI      If WAIT specifies YES, ACTION has no effect unless the WAITTIME\nI      expires before recovery from the failure.\nN\nI      If WAIT specifies NO, the action taken is one of the following:\nN\nI      BACKOUT: All changes made to recoverable resources are backed out,\nI      and the resources are returned to the state they were in before\nI      the start of the UOW.\nN\nI      COMMIT: All changes made to recoverable resources are committed,\nI      and the UOW is marked as completed.\nN\nD    ALIAS(alias)\nI      Specifies an alias transaction name for this\nI      transaction. The name can be up to 4 characters in length. This\nI      option is useful if you want to run on a terminal defined with\nI      UCTRAN(NO), or a transaction that allows mixed case input\nI      (PROFILE UCTRAN(NO)). For example, you can start the same\nI      transaction as ABCD by means of ALIAS(abcd).\nN\nI      When you install a TRANSACTION definition that contains the ALIAS\nI      attribute, the result depends on whether the alias name is already\nI      in use in the system:\nN\nI      -> If the alias name is in use as a primary transaction ID, the\nI         ALIAS attribute is ignored.\nN\nI      -> If the alias name is in use as the alias for a different\nI         transaction, the original alias is replaced by the new one. In\nI         other words, after the TRANSACTION definition has been\nI         installed, the alias name refers to the new transaction, and not\nI         the original.\nN\nD    BREXIT(program)\nI      Defines the name of the default bridge exit to be\nI      associated with this transaction, if it is started in the 3270\nI      bridge environment with a START BREXIT command that does not\nI      specify a name on its BREXIT option. The name can be up to\nI      8 characters in length.\nN\nI      If BREXIT is defined, do not specify REMOTESYSTEM, REMOTENAME,\nI      DYNAMIC(YES), or RESTART(YES) because they are ignored.\nN\nI      Note: The Link3270 mechanism is now the recommended way to use\nI      the 3270 bridge. Refer to the publications for CICS Transaction\nI      Server for OS/390, Version 1 Release 3 if you need to implement\nI      new applications using the START BREXIT interface.\nN\nD    CMDSEC(NO | YES)\nI      Specifies whether security checking is to be\nI      applied on system programming commands.\nN\nI      NO: No check is made. The commands are always run.\nN\nI      YES: A call is made to the external security manager (ESM). CICS\nI        either authorizes or prevents access. If the ESM cannot identify\nI        the resource or resource type, access is prevented.\nN\nD    CONFDATA(NO | YES)\nI     Specifies whether CICS is to suppress user data\nI      from CICS trace entries when the CONFDATA system initialization\nI      parameter specifies HIDETC. If the system initialization parameter\nI      specifies CONFDATA=SHOW, CONFDATA on the transaction definition\nI      is ignored.\nN\nI      If the system initialization parameter specifies CONFDATA=HIDETC,\nI      the following options are effective:\nN\nI      NO: CICS does not suppress any user data. z/OS Communications\nI        Server and MRO initial user data is traced in trace point\nI        AP FC92. FEPI user data is traced in the normal CICS FEPI trace\nI        points. IPIC user data is traced in the normal CICS IS trace\nI        points.\nN\nI      YES: CICS suppresses user data from the CICS trace points.\nN\nD    DTIMOUT(NO | mmss)\nI      Specifies whether deadlock timeout is to be\nI      applied to the task. If the task is suspended (for example,\nI      through lack of storage), a purge of the task is initiated if the\nI      task stays suspended for longer than the DTIMOUT value. If the\nI      purge leads to a transaction abend, the abend code used depends\nI      on which part of CICS suspended the task. When using CEDF, the\nI      user task, if possible, specifies DTIMOUT(NO) or a large value.\nI      This value is also now used as the timeout on all RLS file requests\nI      if DTIMOUT is nonzero; otherwise, the request gets the\nI      SIT FTIMEOUT value. FTIMEOUT applies to transactions that do not\nI      have a deadlock timeout interval active. If a time value is\nI      specified for the DTIMOUT keyword of the TRANSACTION definition,\nI      this value is used as the file timeout value for that transaction.\nN\nI      When using CEDF, if any DTIMOUT value has been specified for the\nI      user task, the DTIMOUT value is ignored while the user task is\nI      suspended and a CEDF task is active. Therefore, the suspended user\nI      task cannot end with a deadlock timeout (abend AKCS) while a CEDF\nI      task is waiting for a user response.\nN\nI      For DTIMOUT to be effective in non-RLS usage, set SPURGE to YES.\nI      CICS inhibits deadlock timeout at certain points.\nN\nI      DTIMOUT is not triggered for terminal I/O waits. Because the relay\nI      transaction does not access resources after obtaining a session,\nI      it has little need for DTIMOUT except to trap suspended allocate\nI      requests. However, for I/O waits on a session, the RTIMOUT\nI      attribute can be specified on PROFILE definitions for transaction\nI      routing on IPIC or MRO sessions and mapped APPC connections.\nN\nI      You must define some transactions with a DTIMOUT value, because\nI      deadlock timeout is the mechanism that CICS uses to deal with\nI      short-on-storage (SOS) situations.\nN\nI      NO: The deadlock timeout feature is not required.\nN\nI      mmss: The length of time (MMSS for minutes and seconds) after\nI        which deadlock timeout ends a suspended task. The maximum value\nI        that you can specify is 68 minutes; this value is accurate to\nI        one second.\nN\nD    DUMP(YES | NO)\nI      Specifies whether a call is to be made to the dump\nI      domain to produce a transaction dump if the transaction ends\nI      abnormally.\nN\nI      This operand has no effect on the following dump operations:\nN\nI      -> An EXEC CICS DUMP command, which always produces a dump.\nN\nI      -> The system dumps for dump codes AP0001 and SR0001 that CICS\nI         produces with ASRA, ARSB, or ASRD abends. If you specify NO on\nI         the transaction DUMP attribute, CICS suppresses the transaction\nI         dump, but not the system dump.\nN\nI      YES: CICS calls the dump domain to produce a transaction dump.\nI        Note that the final production or suppression of the transaction\nI        dump is controlled by the transaction dump table. For more\nI        information about the dump table, see the CICS Operations and\nI        Utilities Guide.\nN\nI        If no transaction dump table entry exists for the given dump code\nI        when a transaction abends, CICS creates a temporary entry for\nI        which the default is to produce a transaction dump.\nN\nI        You control dump table entries for transaction dumps using the\nI        CEMT SET TRDUMPCODE command, or the CEMT SET TRANDUMPCODE SPI\nI        command.\nN\nI      NO: No call is made to the dump domain, suppressing any potential\nI        transaction dump.\nN\nD    DYNAMIC(NO | YES)\nI      Specifies whether the transaction can be\nI      dynamically routed to a remote region, using the CICS dynamic\nI      transaction routing facility.\nN\nI      NO: Creates a local or remote definition according to the\nI        REMOTESYSTEM attribute.\nN\nI      YES: Allows the dynamic transaction routing program to determine\nI        the localor remote status dynamically at invocation time. For\nI        programming information about the dynamic transaction routing\nI        program, see the CICS Customization Guide.\nN\nI    EXTSEC: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nI    INDOUBT: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    ISOLATE(YES | NO)\nI      Specifies whether CICS is to isolate the\nI      transaction user-key task-lifetime storage to provide\nI      transaction-to-transaction protection. (See the TASKDATAKEY\nI      attribute for a description of user-key storage.) Isolation means\nI      that the user-key task-lifetime storage is protected from both\nI      reading and writing by the user-key programs of other transactions;\nI      that is, from programs defined with EXECKEY(USER). The effect of\nI      the ISOLATE attribute of storage access shows the effect of the\nI      ISOLATE attribute.\nN\nI      Note:\nI      1. The ISOLATE attribute does not provide any protection against\nI         application programs that run in CICS key; that is, from\nI         programs defined with EXECKEY(CICS).\nN\nI      2. VSAM nonshared resources (NSR) are not supported for\nI         transactions that use transaction isolation. You must specify\nI         ISOLATE(NO) when you define transactions that access VSAM files\nI         using NSR. You can also function ship the file request to a\nI         remote region. The DFHMIRS program that carries out the\nI         request is defined with an EXECKEY of CICS. A CICS-key program\nI         has read and write access to CICS-key and user-key storage of\nI         its own task and all other tasks, whether transaction isolation\nI         is active.\nN\nI      3. Transaction isolation does not apply to 64-bit storage.\nN\nI      YES: The transaction user-key task-lifetime storage is isolated\nI        from the user-key programs of all other transactions; that is,\nI        from programs defined with EXECKEY(USER), but not from programs\nI        defined with EXECKEY(CICS).\nN\nI        Also, the user-key task-lifetime storage of all other\nI        transactions is protected from the user-key programs of\nI        transactions defined with ISOLATE(YES).\nN\nI      NO: If you specify ISOLATE(NO), the transaction task-lifetime\nI        storage is isolated from the user-key programs of those\nI        transactions defined with ISOLATE(YES). The transaction storage\nI        is not, however, isolated from user-key programs of other\nI        transactions that also specify ISOLATE(NO) because, with this\nI        option, the transactions are all allocated to the common\nI        subspace.\nN\nI      Note also that the user-key task-lifetime storage of all\nI      transactions defined with ISOLATE(YES) is protected from the\nI      user-key programs of transactions defined with ISOLATE(NO).\nN\nI      Specify ISOLATE(NO) for those transactions that share any part of\nI      their user-key task-lifetime storage.\nN\nD    LOCALQ(NO | YES)\nI      Specifies whether queuing on the local system is\nI      to be performed.\nN\nI      NO: No local queuing is to be performed.\nN\nI      YES: Local queuing can be attempted for a START command with\nI        NOCHECK option request when the system or IPIC connection is\nI        not available and the system name is valid.\nN\nI        A system is defined as not available in the following\nI        circumstances:\nN\nI        -> The system is OUT OF SERVICE when the request is initiated.\nN\nI        -> The attempt to initiate any session to the remote system\nI           fails and the corrective action taken by the abnormal\nI           condition program (DFHZNAC) or the node error program\nI           (DFHZNEP) is to place the system OUT OF SERVICE.\nN\nI        -> No sessions to the remote system are immediately available,\nI           and your XISCONA global user exit program specifies that the\nI           request is not to be queued in the issuing region.\nN\nI        An IPIC connection is defined as not available in the\nI        following circumstances:\nN\nI        -> The IPIC connection is not acquired.\nN\nI        -> A session is not available and CICS does not queue the\nI           request for a new session.\nN\nI      Use local queuing only for those START commands that represent\nI      time-independent requests. The delay implied by local queuing\nI      affects the time at which the request is started. It is your\nI      responsibility to ensure that this condition is met.\nN\nI      If you specify LOCALQ(YES), you cannot specify ROUTABLE(YES).\nI      You can use the global user exits, XISLCLQ or XISQLCL, to override\nI      the setting of the LOCALQ attribute. For programming information\nI      about the user exits in the intersystem communication program,\nI      see the CICS Customization Guide.\nN\nD    OTSTIMEOUT(NO | hhmmss)\nI      Specifies, in hours, minutes, and seconds,\nI      the length of time for which an Object Transaction Service (OTS)\nI      transaction, created in an enterprise beans environment and running\nI      as a task under this CICS transaction, is allowed to run before\nI      the initiator of the OTS transaction must take a sync point or\nI      roll back the transaction. If the specified period expires, CICS\nI      purges the task.\nN\nI      The initiator of the OTS transaction can be one of these:\nN\nI      -> The client of the enterprise bean.\nN\nI      -> The EJB container. The container issues a sync point at the\nI         end of the bean method.\nN\nI      -> A session bean that manages its own OTS transactions.\nN\nI      Methods of session beans that manage their own OTS transactions\nI      can override the default timeout value by using the\nI      setTransactionTimeout method of the\nI      javax.Transaction.UserTransaction interface.\nN\nI      NO: OTS transactions will not timeout. NO is the default.\nN\nI      hhmmss: The time (in HHMMSS format) before the task is purged.\nI        The maximum period is 24 hours (240000).\nN\nD    PARTITIONSET(partitionset | KEEP | OWN)\nI      Specifies the name of the\nI      partition set that is to be the default application partition set.\nI      The name can be up to 8 characters in length.\nN\nI      If you do not specify a partition set name or either of the\nI      reserved names, CICS destroys existing partitions before the\nI      first BMS output to the terminal from the transaction.\nN\nI      partitionset: CICS destroys existing partitions and loads the\nI      named partition set before the first BMS output to the terminal\nI      from the transaction. (Existing partitions are not destroyed if\nI      the terminal partition set matches the application partition set.)\nN\nI        This name must not be the same as that specified in\nI        PROGRAM(name).\nN\nI      KEEP: The transaction uses the application partition set for this\nI        terminal. This option is typically used for successor\nI        transactions in a chain of pseudoconversational transactions.\nN\nI      OWN: The transaction performs its own partition management.\nN\nI    PRIMEDSIZE: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    PRIORITY(1 | priority)\nI      Specifies the transaction priority. This\nI      1- to 3-digit decimal value from 0 to 255 is used to establish\nI      the overall transaction processing priority. Transaction processing\nI      priority is equal to the sum of the terminal priority, transaction\nI      priority, and operator priority, not exceeding 255. The higher the\nI      number, the higher the priority.\nN\nD    PROFILE(DFHCICST | profile)\nI      Is the name of the PROFILE definition\nI      that specifies the processing options used with the terminal that\nI      initiated the transaction.\nN\nI      The default is DFHCICST.\nN\nI      The processing options provided by the default DFHCICST are shown\nI      in PROFILE definitions in group DFHISC. DFHCICST is not suitable\nI      for use with a distributed program link. Instead, specify DFHCICSA,\nI      which has INBFMH=ALL.\nN\nD    PROGRAM(program)\nI      Specifies the name of the program to which CICS\nI      gives control to process this transaction. The name can be up to\nI      8 characters in length.\nN\nI      Ensure that this name is not the same as that specified in\nI      PARTITIONSET(name).\nN\nI      If a name is specified for REMOTESYSTEM, and it differs from that\nI      of the current system, you do not need to specify a name for\nI      PROGRAM. If, in these circumstances, you do specify a name for\nI      PROGRAM, it might be ignored.\nN\nI      If this transaction definition is for use on a remote program\nI      link request, the program name that you specify in this attribute\nI      must be the name of the CICS mirror program, DFHMIRS. See the\nI      TRANSID attribute on the PROGRAM definition in PROGRAM attributes\nI      in Reference System definition.\nN\nD    REMOTENAME(transaction)\nI      Specifies the name of this transaction as\nI      it is known in a remote system, if it is to run in a remote system\nI      or region using intersystem communication. The remote system can\nI      be another CICS region or an IMS system. REMOTENAME can be\nI      1 - 4 characters in length if the REMOTESYSTEM attribute specifies\nI      another CICS region, or 1 - 8 characters in length if REMOTESYSTEM\nI      specifies an IMS system. IMS uses 8-character names and, if\nI      REMOTENAME has fewer than 8 characters, IMS translates it into a\nI      usable format.\nN\nI      If you specify REMOTESYSTEM and omit REMOTENAME, the value of\nI      REMOTENAME defaults to the local name; that is, the TRANSACTION\nI      name on this definition. Note that the transaction does not have\nI      to be on the remote system or region.\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the name that identifies the\nI      intercommunication link on which the transaction attach request\nI      is sent.\nN\nI      REMOTESYSTEM is one of these identifiers:\nN\nI      -> For IPIC connections, the first 4 characters of the IPCONN name\nI         on the IPCONN definition, which is in service and acquired.\nN\nI      -> For MRO and APPC connections, the CONNECTION name on the\nI         CONNECTION definition.\nN\nI      REMOTESYSTEM is used for CICS function request shipping\nI      (asynchronous processing and transaction routing).\nN\nI      Ensure that the REMOTESYSTEM options which are specified for a set\nI      of transactions do not refer to any other transaction in that set;\nI      that is, they are not self-referent, which can lead to looping\nI      starts of multiple mirror transactions.\nN\nD    RESSEC(NO | YES)\nI      Specifies whether resource security checking is to\nI      be used for resources accessed by this transaction.\nN\nI      NO: All resources are available to any user who has the authority\nI        to use this transaction.\nN\nI      YES: An external security manager is used. For more details about\nI        external security checking, see the CICS RACF Security Guide\nN\nD    RESTART(NO | YES)\nI      Specifies whether the transaction restart facility\nI      is to be used to restart those tasks that end abnormally and are\nI      later backed out by the dynamic transaction backout facility.\nN\nI      If RESTART(YES) is specified, the task that failed is restarted\nI      from the beginning of the initial program. If dynamic transaction\nI      backout fails, or if restart is suppressed dynamically, DFHPEP is\nI      called in the normal way. The transaction restart facility is\nI      especially useful in situations such as a program isolation\nI      deadlock, where the task can be restarted automatically rather\nI      than resubmitted manually. A terminal-initiated transaction is\nI      allowed to restart during CICS shutdown even if SHUTDOWN(DISABLED)\nI      is specified. For more details about automatic transaction restart,\nI      see the CICS Recovery and Restart Guide.\nN\nI      NO: The restart facility is not required.\nN\nI      YES: The restart facility is to be used.\nN\nD    ROUTABLE(NO | YES)\nI      Specifies whether, if the transaction is the\nI      subject of an eligible EXEC CICS START command, it is routed using\nI      the enhanced routing method.\nN\nI      NO: If the transaction is the subject of a START command, it is\nI        routed using the traditional method.\nN\nI      YES: If the transaction is the subject of an eligible START\nI        command, it is routed using the enhanced method.\nN\nI      If you specify ROUTABLE(YES), you cannot specify LOCALQ(YES).\nN\nI      For details of the enhanced and traditional methods of routing\nI      transactions called by EXEC CICS START commands, see the\nI      CICS Intercommunication Guide.\nN\nI    RSL: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    RUNAWAY(SYSTEM | 0 | 500-2700000)\nI      The time, in milliseconds, for which\nI      any task running under this transaction definition can have\nI      control of the processor before it is assumed to be in a runaway\nI      condition (logical loop). When this interval expires, CICS can\nI      abnormally end the task.\nN\nI      SYSTEM: CICS is to use the ICVR system initialization parameter\nI        value as the runaway time limit for this transaction.\nN\nI      0: No limit applies and no runaway task detection is required for\nI        the transaction.\nN\nI      500-2700000: The runaway time limit in the range 500 - 2700000.\nI        When checking whether a task is in a runaway condition, CICS\nI        rounds the value you specify downwards, to a multiple of 500.\nN\nD    SHUTDOWN(DISABLED | ENABLED)\nI      Applies to all transactions, and\nI      specifies whether the transaction can be run during CICS shutdown.\nI      This option supplements the XLT option of the PERFORM SHUTDOWN\nI      command. For a transaction to be attached during shutdown, it\nI      must either be defined as SHUTDOWN(ENABLED) or, in the case of\nI      terminal-based transactions, be named in the XLT specified in the\nI      PERFORM SHUTDOWN command.\nN\nI      DISABLED: The transaction is disabled from running during CICS\nI      shutdown.\nN\nI      ENABLED: The transaction is enabled to run during CICS shutdown.\nN\nD    SPURGE(NO | YES)\nI      Specifies whether the transaction is initially\nI      system purgeable or not. SPURGE=NO prevents a transaction being\nI      purged by these means:\nN\nI      ->v Deadlock timeout (DTIMOUT)\nN\nI      -> An EXEC CICS ... PURGE command\nN\nI      -> TWAOCT (Cancel Task) being set in the node error program (NEP)\nN\nI      -> A CEMT SET ... PURGE command\nN\nI      SPURGE=YES allows such purges to go ahead as far as the user is\nI      concerned. CICS might, however, prevent the purge if it is not\nI      safe to allow a purge at the point the transaction has reached.\nN\nI      Note that SPURGE=NO does not prevent a transaction being purged\nI      by the read timeout (RTIMOUT) facility, an\nI      EXEC CICS SET ... FORCEPURGE command, or a\nI      CEMT SET TRANSACTION(tranid) FORCEPURGE command.\nN\nI      SPURGE determines only the initial value, which can be changed by\nI      the transaction while it is running.\nN\nI      NO: The transaction is not initially system purgeable.\nN\nI      YES: The transaction is initially system purgeable.\nN\nD    STATUS(ENABLED | DISABLED)\nI      Specifies the transaction status.\nN\nI      ENABLED: Allows the transaction to be run normally.\nN\nI      DISABLED: Prevents the transaction from running.\nN\nI      This attribute is ignored for TRANSACTION resources that are\nI      dynamically generated by a CICS bundle. The initial status of a\nI      TRANSACTION resource is derived from the initial status of the\nI      bundle that defines the resource.\nN\nD    STORAGECLEAR(NO | YES)\nI      Specifies whether task-lifetime storage for\nI      this transaction is to be cleared on release. Use STORAGECLEAR to\nI      prevent other tasks accidentally viewing any confidential or\nI      sensitive data that was being stored by this transaction in\nI      task-lifetime storage.\nN\nD    TASKDATAKEY(USER | CICS)\nI      Specifies the storage key of the storage\nI      that CICS allocates at task initialization for the duration of the\nI      task (task-lifetime storage), and which is accessible by the\nI      application. These storage areas are the EXEC interface block\nI      (EIB) and the transaction work area (TWA).\nN\nI      TASKDATAKEY also specifies the key of the storage that CICS\nI      obtains on behalf of all programs that run under the transaction.\nI      The program-related storage that CICS allocates in the specified\nI      key includes these items:\nN\nI      -> The copies of working storage that CICS obtains for each run\nI         of an application program.\nN\nI      -> The storage that CICS obtains for the program in response to\nI         implicit and explicit GETMAIN requests. For example, the program\nI         can request storage by a GETMAIN or GETMAIN64 command, or as a\nI         result of the SET option on other CICS commands.\nN\nI      You must specify TASKDATAKEY(USER) if any of the programs in the\nI      transaction is defined with EXECKEY(USER). If you specify\nI      TASKDATAKEY(CICS) for a transaction, an attempt to run any\nI      program in user key under this transaction leads to a task abend,\nI      with abend code AEZD.\nN\nI      USER: CICS obtains user-key storage for this transaction.\nI        Application programs running in any key can both read and modify\nI        these storage areas.\nN\nI        User-key programs of transactions defined with ISOLATE(YES) have\nI        access only to the user-key task-lifetime storage of their own\nI        tasks.\nN\nI        User-key programs of transactions defined with ISOLATE(NO) also\nI        have access to the user-key task-lifetime storage of other tasks\nI        defined with ISOLATE(NO).\nN\nI        See the description of the EXECKEY attribute on the PROGRAM\nI        definition for more information about task storage protection.\nN\nI      CICS: CICS obtains CICS-key storage for this transaction.\nI        Application programs running in CICS key can both read and\nI        modify these storage areas. Application programs running in\nI        user key can only read these storage areas.\nN\nD    TASKDATALOC(BELOW | ANY)\nI      Specifies whether task-lifetime storage\nI      acquired by CICS for the duration of the transaction can be located\nI      above the 16 MB line in virtual storage. These areas, which relate\nI      to specific CICS tasks, include the EXEC interface block (EIB) and\nI      the transaction work area (TWA).\nN\nI      You must specify TASKDATALOC(BELOW) if any of the programs that\nI      make up the transaction runs in 24-bit addressing mode. This\nI      restriction also applies to task-related user exits running on\nI      behalf of the transaction).\nN\nI      For transactions that do not satisfy any of these conditions, you\nI      can specify ANY to obtain the associated virtual storage constraint\nI      relief.\nN\nI      CICS monitors the use of TASKDATALOC(ANY), particularly the\nI      following actions:\nN\nI      -> An attempt to call an AMODE 24 program running under a\nI         transaction defined with TASKDATALOC(ANY) results in an AEZC\nI         abend.\nN\nI      -> An attempt to issue an EXEC CICS command or call a task-related\nI         user exit while running AMODE(24) with TASKDATALOC(ANY)\nI         specified results in an AEZA abend.\nN\nI      -> An AMODE 31 program running as a transaction with\nI         TASKDATALOC(ANY), which attempts to call a task-related user\nI         exit that is forced to run AMODE(24), results in an AEZB abend.\nN\nI      -> If a task-related user exit that is forced to run in AMODE 24\nI         is enabled for task start, CICS forces TASKDATALOC(BELOW) for\nI         all transactions for the remainder of the CICS run.\nN\nI      BELOW: Storage areas that CICS acquires for the transaction must\nI        be located below the 16 MB line.\nN\nI      ANY: Storage areas that CICS acquires for the transaction can be\nI        located above the 16 MB line in virtual storage.\nN\nD    TASKREQ(LPA | MSRE | OPID | PA1-3 | PF1-24)\nI      Specifies whether a transaction is to be initiated\nI      by pressing a function (F or PF) key, by using a light pen, or by\nI      using a card. Possible values are as follows:\nN\nI      -> PA1, PA2, or PA3 for PA keys.\nN\nI      -> PF1 through PF24 for function keys.\nN\nI      -> OPID for the operator identification card reader.\nN\nI      -> LPA for a light-pen-detectable field on a 3270 device.\nN\nI      -> MSRE for the 10/63 character magnetic slot reader.\nN\nI      For PA and PF keys, be aware of the following:\nN\nI      -> If a PA or PF key is specified in the PRINT system\nI         initialization parameter, you cannot use the same PF key as the\nI         TASKREQ to initiate a transaction.\nN\nI      -> PA or PF keys specified in the SKRxxxx system initialization\nI         parameter as page retrieval keys are interpreted as such during\nI         a page retrieval session. You can use the same keys to initiate\nI         transactions at other times. Define the keys with the following\nI         values:\nN\nI          TASKREQ=KEY-ID\nI          PROGRAM=DFHTPR\nI          TWASIZE=1024\nI          TPURGE=NO\nI          SPURGE=NO\nN\nI      -> If you define a transaction with PROGRAM(DFHTPR) and define a\nI         TASKREQ key, the key initiates the transaction and opens the\nI         page retrieval session at the same time.\nN\nI    TCLASS: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    TPNAME(tpname)\nI      Specifies the name of the transaction that can be used\nI      by an APPC partner if the 4-character length limitation of the\nI      TRANSACTION attribute is too restrictive. This name can be up to\nI      64 characters in length.\nN\nI      If this range of characters is not sufficient for a name that you\nI      want to specify, you can use the XTPNAME attribute instead of\nI      TPNAME.\nN\nD    TPURGE(NO | YES)\nI      Specifies, for non-z/OS Communications Server\nI      terminals only, whether the transaction can be purged because of\nI      a terminal error.\nN\nI      NO: The task cannot be purged when a terminal error occurs. Manual\nI        intervention by the master terminal operator is required when\nI        this happens.\nN\nI      YES: The task can be purged when a terminal error occurs.\nN\nD    TRACE(YES | NO)\nI      Specifies whether the activity of this transaction\nI      is to be traced.\nN\nI      YES: Trace the activity for this transaction.\nN\nI      NO: Do not trace the activity for this transaction.\nN\nI      The CICS-provided transaction definitions for CEDF and CSGM\nI      specify TRACE(NO).\nN\nD    TRANCLASS(DFHTCL00 | tranclass)\nI      Specifies the name of the transaction\nI      class to which the transaction belongs. Transactions belonging to\nI      a transaction class are subject to scheduling constraints before\nI      they are allowed to run. The reserved TRANCLASS name DFHTCL00 is\nI      used to indicate that the transaction does not belong to any\nI      transaction class.\nN\nI      If a transaction is run and its associated TRANCLASS definition is\nI      not installed, the transaction runs without any of the scheduling\nI      constraints specified in the TRANCLASS. Message DFHXM0212 is issued\nI      as a warning. TRANCLASS can be up to 8 characters in length.\nN\nI    TRANSEC: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    TRPROF(DFHCICSS | profile)\nI      Specifies the name of the PROFILE for\nI      the session that carries intersystem flows during ISC transaction\nI      routing. The name can be up to 8 characters in length.\nN\nI      You can specify this option only for remote transactions.\nN\nD    TWASIZE(0 | number)\nI      Specifies the size in bytes of the transaction\nI      work area to be acquired for this transaction. Specify a\nI      1- to 5-digit decimal value in the range 0 - 32767.\nN\nI      Note:\nI      1. Your storage might be corrupted if your TWASIZE is too small.\nN\nI      2. Do not change the TWASIZE of the CICS-supplied transactions.\nN\nD    WAIT(YES | NO)\nI      Specifies whether an indoubt unit of work (UOW) is\nI      to wait, pending recovery from a failure that occurs after the\nI      UOW has entered the indoubt state.\nN\nI      Old-style transaction definitions using INDOUBT(WAIT) are accepted\nI      by CICS, and are interpreted as WAIT(YES) ACTION(BACKOUT).\nN\nI      YES: The UOW is to wait, pending recovery from the failure, to\nI        resolve its indoubt state and determine whether recoverable\nI        resources are to be backed out or committed. In other words,\nI        the UOW is to be shunted.\nN\nI        Recoverable resources can include one of the following:\nN\nI        -> DBCTL databases\nN\nI        -> DB2 databases\nN\nI        -> Temporary storage queues\nN\nI        -> Logically recoverable intrapartition transient data queues\nI           that specify WAIT(YES) in the TDQUEUE definition\nN\nI        -> VSAM data sets\nN\nI        -> BDAM data sets\nN\nI        The WAIT(YES) option takes effect if none of the following\nI        applies:\nN\nI        -> The transaction has subordinate MRO sessions to back-level\nI           systems.\nN\nI        -> The transaction has LU6.1 subordinate sessions. Note that,\nI           in this context, LU6.1 IMS sessions are not subordinates.\nN\nI        -> The transaction has more than one session and its coordinator\nI           session is to a back-level system, or LU6.1.\nN\nI        -> The task-related user exits attached to the transaction do not\nI           support the CICS indoubt protocols.\nN\nI        If none of the previous exceptions applies, but you have\nI        subordinate LU6.2 sessions to systems other than CICS Transaction\nI        Server for z/OS systems that do not use the CICS Transaction\nI        Server for z/OS indoubt architecture, CICS can indicate that the\nI        subordinate must wait by forcing session outage.\nN\nI        If any resources cannot wait for indoubt resolution by the\nI        coordinator, a decision is taken for the transaction in\nI        accordance with the ACTION attribute. In practice, the only\nI        circumstances that force decisions in this way are updates to\nI        transient data queues with WAIT(NO) specified in the TDQUEUE\nI        definition, and installations of terminal-related resources. The\nI        latter are typically installed using an INSTALL command.\nN\nI        Table 13 (IN THE MANUAL) shows how the WAIT attribute defined\nI        on a TRANSACTION definition and a logically recoverable TDQUEUE\nI        definition are resolved when they conflict.\nN\nI      NO: The UOW is not to wait. CICS immediately takes whatever action\nI        is specified on the ACTION attribute.\nN\nI        If the UOW references more than one transient data queue, and\nI        the queues have inconsistent WAIT options, WAIT(NO) always takes\nI        precedence and overrides a WAIT(YES). Therefore, a WAIT(NO) on\nI        one TDQUEUE definition forces a failed indoubt UOW to take either\nI        the BACKOUT or COMMIT attribute defined on the TRANSACTION\nI        definition of the UOW.\nN\nD    WAITTIME(0,0,0 | dd,hh,mm)\nI      Specifies how long a transaction is\nI      to wait before taking a decision about an indoubt unit of work,\nI      based on what is specified in the ACTION attribute.\nN\nI      00,00,00: The transaction waits indefinitely.\nN\nI      dd,hh,mm: The time, in days, hours, and minutes, for which the\nI        transaction is to wait. The maximum value is 99,23,59.\nN\nI      WAITTIME takes effect only if WAIT(YES) is specified.\nN\nD    XTPNAME(xtpname)\nI      You can use this attribute as an alternative to\nI      TPNAME. Enter a hexadecimal string up to 128 characters in length,\nI      representing the name of the transaction that can be used by an\nI      APPC partner. All hexadecimal combinations are acceptable except\nI      X'40'. To specify an XTPNAME more than 72 characters long to\nI      DFHCSDUP, put an asterisk in column 72. The asterisk causes the\nI      following line to be concatenated to the current line.\nN\nD    XTRANID(xtranid)\nI      Specifies another name to be used instead of the\nI      TRANSACTION name for initiating transactions. The name can be up\nI      to 8 hexadecimal digits in length. Because XTRANID is specified\nI      in hexadecimal form, you can use a name that contains characters\nI      that you cannot specify in the TRANSACTION attribute.\nN\nI      See also TASKREQ, another transaction alias that can be specified.\nN\nI      xtranid: A 4-byte transaction identifier in hexadecimal notation;\nI        the identifier therefore uses up to 8 hexadecimal digits. If you\nI        specify fewer than 8 hexadecimal digits, the identifier is padded\nI        on the right with blanks.\nN\nI      Certain values are reserved for use by CICS, and so the values\nI      that you can specify are restricted:\nN\nI      -> The first byte must not be X'C3'.\nN\nI      -> The first byte must not be less than or equal to X'40'.\nN\nI      -> The value must not be X'00000000'.\nN\nI      -> The last 3 bytes must not be X'FFFFFF'.\nN\nI      Avoid using values in the range X'00' through X'3F' in the second,\nI      third, and fourth bytes if the transaction is to be attached by\nI      unsolicited data received from a terminal defined as a 3270 device,\nI      because CICS interprets these values as control characters, and not\nI      as part of the transaction identifier. For example, if you issue\nI      EXEC CICS RETURN or EXEC CICS START and specify\nI      TRANSID(X'41303238'), the correct transaction is attached. However,\nI      if you issue EXEC CICS RETURN without specifying a TRANSID, and the\nI      3270 device transmits data that begins with X'41303238', CICS\nI      attempts to attach a transaction as if X'41404040' had been\nI      transmitted.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG33": {"ttr": 9731, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG33\nTCICS\nT-RDG\nT-Chapter 33. TSMODEL resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 33. TSMODEL resources\nN=============================\nNA temporary storage model specifies the properties of a set of TS\nNqueues. Individual TS queues are associated with a TSMODEL by the\nNprefix, a character string that matches the leading characters of the\nNqueue name.\nN\nNYou can also map names directly to a shared TS pool (without the need\nNfor a shared sysid).\nN\nNNote: CICS takes default actions on a region where a TSMODEL is not\nNdefined. This means that if you have an AOR and a QOR, and a TSMODEL\nNdefined in the AOR directs requests to the QOR, then unless a\nNcorresponding TSMODEL exists in the QOR, some queue attributes are\nNtaken from default values. For example, the location of a queue (MAIN\nNor AUX) is determined from default settings within CICS. If there is\nNno matching model, the location that is specified in the EXEC CICS\nNcommand is used; if there is a model match, the location in this is\nNused.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3301": {"ttr": 9733, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3301\nTCICS\nT-RDG\nT-Chapter 33. TSMODEL resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-142755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 33. TSMODEL resources\nN=============================\nNTSMODEL attributes\nN------------------\nNDescribes the syntax and attributes of the TSMODEL resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TSMODEL(name)\nI      Specifies the name of this TSMODEL resource\nI      definition. The name can be up to eight characters in length.\nN\nI      Embedded blanks are not acceptable.\nN\nI      This name is used to identify the TSMODEL resource definition on\nI      the CSD file. It is not used within the active CICS system.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    EXPIRYINTMIN(0 | number)\nI      Specifies the expiry interval, in minutes,\nI      for a temporary storage queue that matches this model. CICS uses\nI      the value rounded up to the nearest multiple of 10 minutes. The\nI      interval count begins after each use of the temporary storage\nI      queue. If the queue is not used again before the expiry interval\nI      is reached, the queue becomes eligible for CICS to delete it\nI      automatically.\nN\nI      0: No expiry interval applies to temporary storage queues that\nI        match this model, and they are never eligible for automatic\nI        deletion. This setting is the default.\nN\nI      number: An expiry interval in minutes, in the range 1 - 900000.\nI        After this expiry interval, a temporary storage queue that\nI        matches this model becomes eligible for automatic deletion if it\nI        has not been used again.\nN\nI      Expiry intervals apply to temporary storage queues in the following\nI      locations:\nN\nI      -> Main temporary storage in the local CICS region.\nN\nI      -> Nonrecoverable auxiliary temporary storage (DFHTEMP data set)\nI         associated with the local CICS region.\nN\nI      -> Temporary storage queues in shared temporary storage pools\nI         (CICS TS 5.2 and higher).\nN\nI      Expiry intervals do not apply to the following types of temporary\nI      storage queues, so CICS never deletes them automatically:\nN\nI      -> Queues in auxiliary temporary storage that are defined as\nI         recoverable.\nN\nI      -> Queues in a remote CICS region. To make CICS delete remote\nI         temporary storage queues, specify an expiry interval in a\nI         suitable TSMODEL resource definition in the region that owns\nI         the queues.\nN\nI      -> Queues that CICS creates for its own use.\nN\nI      If you change the expiry interval in a TSMODEL resource definition,\nI      existing temporary storage queues that match the model are not\nI      affected. Those queues continue to use the expiry interval that\nI      applied when they were created. If all the TSMODEL resource\nI      definitions with a nonzero expiry interval are deleted from a\nI      CICS region, CICS stops scanning for expired temporary storage\nI      queues.\nN\nD    LOCATION(AUXILIARY | MAIN)\nI      Specifies whether the queue is to be\nI      held in auxiliary or main storage:\nN\nI      AUXILIARY: Queues matching this model are to be held in auxiliary\nI        temporary storage. Whatever is specified on the API request is\nI        disregarded.\nN\nI      MAIN: Queues matching this model are to be held in main temporary\nI        storage. Whatever is specified on the API request is disregarded.\nN\nI      LOCATION is ignored for temporary storage models that relate to\nI      remote queues and to queues in shared temporary storage pools.\nI      Using LOCATION in a TSMODEL resource definition for a remote queue\nI      allows the same definition to be installed in both a local and\nI      remote region. See Shared resources for intercommunication in\nI      Product overview.\nN\nD    POOLNAME(pool)\nI      Specifies the name of the shared TS pool definition\nI      that you want to use with this TSMODEL resource definition. The\nI      name can be up to eight characters in length.\nN\nI      Embedded blanks are not acceptable and a name consisting entirely\nI      of blanks is treated as though no pool name had been supplied.\nN\nI      You cannot specify POOLNAME if REMOTESYSTEM is also specified.\nN\nI      CICS does not search for a matching TSMODEL resource definition\nI      if an application program specifies a SYSID on the EXEC CICS\nI      temporary storage command, or if a SYSID is added by an XTSEREQ\nI      global user exit program. To enable CICS to find the name of a\nI      temporary storage data sharing pool when the application program\nI      explicitly specifies a SYSID, you must use a temporary storage\nI      table (TST) with a suitable TYPE=SHARED entry.\nN\nD    PREFIX(prefix)\nI      Specifies the character string that CICS uses to\nI      identify matching temporary storage queues. The prefix can be up\nI      to 16 characters in length.\nN\nI      In the simplest case, a prefix matches the TS queue names that\nI      start with the prefix. For example, the prefix ABCD matches queue\nI      names ABCD, ABCDE, and ABCD99.\nN\nI      You can use the generic character (+) one or more times within the\nI      prefix to match any character in a TS queue name. For example, the\nI      prefix A++D matches queue names: ABCD, A99D, and ABCD99. It does\nI      not match ABD. You do not need to specify + characters at the end\nI      of a prefix; you can think of a prefix as being padded on the\nI      right with + characters, up to the maximum length of a TS queue\nI      name (16 characters). For example, a prefix of ABC is exactly\nI      equivalent to a prefix of ABC+ or ABC+++++.\nN\nI      When you use the + character in a prefix, you might find that,\nI      considered individually, more than one prefix matches a TS queue\nI      name. In this situation, CICS uses the following rules to select\nI      the matching TS model:\nN\nI      -> Characters that are exactly specified in the prefix are a\nI         stronger match than the + character.\nN\nI      -> Characters are compared one at a time, from left to right, and\nI         matching characters are a stronger match the further to the\nI         left they are.\nN\nI      For example:\nN\nI      -> Queue name ABCD99 matches prefix ABCD rather than AB+D: In the\nI         first prefix, the four matching characters are specified\nI         exactly; in the second, only three characters are specified\nI         exactly.\nN\nI      -> Queue name ABCD99 matches prefix ABC+ rather than AB+D: In both\nI         prefixes, the same number of matching characters are specified\nI         exactly. However, the third character that matches exactly is\nI         further to the left in the first prefix.\nN\nI      Creating a TSMODEL definition with a blank prefix can produce\nI      unexpected results. A TSMODEL definition with a blank prefix\nI      matches any queue name that is not matched by any other TSMODEL\nI      definition.\nN\nI      To enable CICS to find the name of a temporary storage data sharing\nI      pool when the application program explicitly specifies a SYSID,\nI      you must use a temporary storage table (TST) with a suitable\nI      TYPE=SHARED entry.\nN\nD    RECOVERY(NO | YES)\nI      Specifies whether queues matching this model\nI      are to be recoverable.\nN\nI      NO: Queues matching this model are unrecoverable.\nN\nI      YES: Queues matching this model are recoverable.\nN\nI      RECOVERY(YES) is not allowed with LOCATION(MAIN).\nN\nD    REMOTEPREFIX(prefix)\nI      Specifies the character string that CICS uses\nI      to identify matching temporary storage queues in the remote system.\nI      The prefix can be up to 16 characters in length.\nN\nI      REMOTEPREFIX is not allowed unless REMOTESYSTEM is also specified.\nI      The length of the REMOTEPREFIX attribute must be the same as the\nI      PREFIX attribute.\nN\nI      The rules for character matching in the REMOTEPREFIX attribute are\nI      the same as for the PREFIX attribute. If you use + characters for\nI      generic matching, they must be in the same position in PREFIX and\nI      REMOTEPREFIX. For example:\nN\nI      PREFIX: A++D\nI      REMOTEPREFIX: X++Y\nN\nD    REMOTESYSTEM(connection)\nI      Specifies the name of the connection that\nI      links the local system to the remote system where the temporary\nI      storage queue resides.\nN\nI      Embedded blanks are not acceptable and a name consisting entirely\nI      of blanks is treated as though no remote system had been specified.\nN\nI      REMOTESYSTEM and POOLNAME are mutually exclusive. If REMOTESYSTEM\nI      is specified, POOLNAME is ignored.\nN\nD    SECURITY(NO | YES)\nI      Specifies whether security checking is to be\nI      performed for queues matching this model.\nN\nI      NO: Security checking is not to be performed for queues matching\nI        this model.\nN\nI      YES: Security checking is to be performed for queues matching this\nI        model.\nN\nI      For more information, see the CICS RACF Security Guide.\nN\nD    XPREFIX(xprefix)\nI      Can be used as an alternative to PREFIX. Enter a\nI      hexadecimal string, up to 32 characters in length, that is to be\nI      used as the prefix for this model. Because XPREFIX is specified\nI      in hexadecimal form, you can use a name that contains characters\nI      that you cannot enter in the PREFIX attribute.\nN\nI      To specify generic characters in the XPREFIX attribute, code X'4E'.\nN\nI      The rules for matching the XPREFIX to TS queue names are the same\nI      as they are for the PREFIX attribute.\nN\nD    XREMOTEPFX(xprefix)\nI      Can be used as an alternative to REMOTEPREFIX.\nI      Enter a hexadecimal string, up to 32 characters in length, that\nI      is to be used as the prefix on the remote system. Because\nI      XREMOTEPFX is specified in hexadecimal form, you can use a name\nI      that contains characters that you cannot enter in the REMOTEPREFIX\nI      attribute.\nN\nI      To specify generic characters in the XPREFIX attribute, code X'4E'.\nN\nI      The rules for matching the XREMOTEPFX to TS queue names are the\nI      same as they are for the REMOTEPREFIX attribute.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG34": {"ttr": 9735, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG34\nTCICS\nT-RDG\nT-Chapter 34. TYPETERM resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 34. TYPETERM resources\nN==============================\nNA TYPETERM resource defines a set of attributes that are common to a\nNgroup of terminals.\nN\nNThe resource is a logical extension of the TERMINAL resource. If you\nNhave a number of terminals with the same properties, you would define\nNone TYPETERM with the required values, and then name that TYPETERM in\nNeach TERMINAL definition (or in the autoinstall model definition if you\nNare using autoinstall).\nN\nNEach TERMINAL definition must name a TYPETERM definition. This single\nNattribute represents many other characteristics, and thus can save\nNconsiderable effort, and reduce the chance of making mistakes.\nNTYPETERMs make it easier to define your terminals if you have many\nNterminals of the same kind.\nN\nNTwo TYPETERM attributes are worthy of note here, because they further\nNsimplify the terminal definition process:\nN\nNDEVICE\nN\nNQUERY\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3401": {"ttr": 9985, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3401\nTCICS\nT-RDG\nT-Chapter 34. TYPETERM resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-150855\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 34. TYPETERM resources\nN==============================\nNTYPETERM attributes\nN-------------------\nNDescribes the syntax and attributes of the TYPETERM resource.\nN\nNWhen you specify the DEVICE, SESSIONTYPE and TERMMODEL in a TYPETERM\nNdefinition, CICS supplies default values for many of the other\nNattributes.\nN\nNThe default values are shown in Table 14 (IN THE MANUAL). Note that\nNfor some attributes, the supplied values are mandatory, and you\nNcannot change them.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    TYPETERM(name)\nI      Specifies the name of this extension of a TERMINAL\nI      definition. The name can be up to eight characters in length.\nN\nI      This name is referred to in all the TERMINAL definitions using this\nI      TYPETERM. Note that this TYPETERM definition must be installed\nI      before or at the same time as the TERMINAL definitions that\nI      reference it.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ASCII({NO|7|8})\nI      Specifies whether the terminal has an ASCII feature.\nN\nI      NO: This terminal does not have an ASCII feature.\nN\nI      7: Specify this value to communicate with ASCII-7 terminals.\nI        Devices configured with the ASCII-7 feature must be LUTYPE2 or\nI        LUTYPE3 without extended 3270 features. Only the following\nI        devices are supported:\nN\nI        3274 Model 1C and 51C\nI        3276 Model 12\nI        3278\nI        3287\nN\nI        Any terminal configured with the ASCII-7 option has all FM data\nI        outbound from CICS converted to ASCII-7, and all FM data inbound\nI        to CICS converted to EBCDIC. Only FM request data is translated.\nI        All other data in the RU such as LU status or sense data is\nI        assumed to be in EBCDIC on output. ASCII-7 does not support data\nI        streams that contain extended attributes, such as structured\nI        fields and function management headers.\nN\nI        The ASCII-7 support is available on 3274-1C as an option on the\nI        configuration of the standard microcode. The use of the ASCII-7\nI        option is determined at session initiation by BIND parameters\nI        set by CICS as a result of the TCT definition described.\nN\nI      8: Specify this to communicate with ASCII-8 terminals. Devices\nI        configured with the ASCII-8 feature can be LUTYPE1, LUTYPE2, or\nI        LUTYPE3 with or without extended 3270 and SCS data stream\nI        features.\nN\nI        Any terminal configured with the ASCII-8 option has all FM data\nI        outbound from CICS converted to ASCII-8, and all FM data inbound\nI        to CICS converted to EBCDIC. All FM request data is translated.\nI        This includes the AID, cursor address, FM headers and structured\nI        fields.\nN\nI        Any other form of the RU such as LU status or sense data is\nI        assumed to be in EBCDIC on input and is transmitted in EBCDIC\nI        on output.\nN\nI        This ASCII-8 support is intended only for devices that operate\nI        in EBCDIC but translate or retranslate the data stream to or from\nI        ASCII-8, as is done by this CICS support. This is because the\nI        data stream is treated as a character string, and any binary\nI        number fields are translated byte by byte as though they were\nI        graphic characters. Thus they may not represent their true\nI        value while in ASCII form.\nN\nI        The ASCII-8 support is available as a microcode RPQ on the 3274\nI        and is mutually exclusive with the ASCII-7 option. The use of\nI        the ASCII-8 option is determined at session initiation by BIND\nI        parameters set by CICS as a result of the TCT definitions\nI        described.\nN\nD    ATI(NO | YES)\nI      Specifies whether transactions can start at the\nI      terminal by automatic transaction initiation:\nN\nI      YES: Transactions can start at the terminal by automatic\nI        transaction initiation.\nN\nI      NO: Transactions cannot start at the terminal by automatic\nI        transaction initiation.\nN\nI      ATI(YES) allows transactions to be started at the terminal by\nI      transient data control or by an EXEC CICS START command issued by\nI      another transaction. If there is already a transaction at the\nI      terminal, the ATI transaction is held until it ends. If you\nI      specify ATI(YES), you must specify an IOAREALEN of at least one\nI      byte, except for DEVICE(APPC) when ATI and IOAREALEN have forced\nI      default values of YES and 0.\nN\nI      If ATI is specified as YES and CREATESESS is specified as YES,\nI      and if a transaction is initiated when the terminal is not\nI      ACQUIRED, it is automatically acquired.\nN\nI      See also the TTI attribute.\nN\nD    AUTOCONNECT(NO | ALL | YES)\nI      Specifies whether autoconnect processing\nI      is to occur for the terminal. AUTOCONNECT(YES) or (ALL) specifies\nI      that the session with the terminal is to be established (that is,\nI      BIND is to be performed) during CICS initialization, or when\nI      communication with z/OS Communications Server is started using\nI      the SET VTAM OPEN command. If the connection cannot be made at\nI      this time because the terminal is unavailable, the link must be\nI      subsequently acquired using the\nI      CEMT SET TERMINAL(termid) INSERVICE ACQUIRED command, unless the\nI      terminal becomes available in the meantime and itself initiates\nI      communications.\nN\nI      Note: If you use the z/OS Communications Server LOGAPPL function,\nI      do not specify AUTOCONNECT(YES), because this can lead to race\nI      conditions causing errors or hung logical units.\nN\nI      NO: CICS does not attempt to bind sessions when the connection is\nI        established.\nN\nI      YES: CICS attempts to bind as a contention winner session, when\nI        the connection is established.\nN\nI      ALL: Not applicable.\nN\nI      For background information about AUTOCONNECT, see Defining\nI      intercommunication resources in Developing applications.\nN\nD    BRACKET(YES | NO)\nI      Specifies whether bracket protocol is to be\nI      enforced for this logical unit. The default depends on the value\nI      you specify for the DEVICE attribute (see \"Default values for\nI      TYPETERM attributes\").\nN\nI      YES: Bracket protocol is to be used. This option is required for\nI        the 3790 inquiry and full function logical units. BRACKET(YES)\nI        is forced for many DEVICE types\nN\nI      NO: Bracket protocol is not to be used. You must specify\nI        BRACKET(NO) for a 3614 logical unit and the 3650 Host Command\nI        Processor (HCP) session.\nN\nI      Bracket protocol is a feature of SNA; if you specify BRACKET(YES)\nI      for non-SNA devices, CICS will neither follow, nor enforce,\nI      strict bracket protocol.\nN\nD    BUILDCHAIN(NO | YES)\nI      Specifies whether CICS is to perform chain\nI      assembly before passing the input data to the application program.\nN\nI      The default depends on the value you specify for the DEVICE\nI      attribute.\nN\nI      NO: Any terminal input/output area (TIOA) received by an\nI        application program from this logical unit contains one request\nI        unit (RU).\nN\nI      YES: Any TIOA received by an application program from this logical\nI        unit contains a complete chain.\nN\nD    CREATESESS(NO | YES)\nI      Specifies whether sessions are to be created.\nN\nI      NO: Specify this to prevent internally generated session requests\nI        from creating a session. During CICS execution, this can be\nI        changed only by a CEMT command.\nN\nI        CREATESESS(NO) prevents EXEC START requests and automatic\nI        transaction initiation (ATI) requests for this terminal causing\nI        a session to be created. This means that the requests are either\nI        queued or rejected when no session is currently established.\nN\nI      YES: Specify this for a status that allows internally generated\nI        session requests to create a session. During CICS execution,\nI        this status can be generated only by a CEMT command.\nN\nI        CREATESESS(YES) allows EXEC START requests and automatic\nI        transaction initiation (ATI) requests for this terminal to cause\nI        a session to be created automatically.\nN\nD    DEVICE(char8)\nI      Specifies the device type which this TYPETERM\nI      defines. This attribute is mandatory for all TYPETERM definitions.\nN\nI      If you type DEVICE(xxxx), where xxxx is a valid device type, on\nI      the command line, together with SESSIONTYPE and TERMMODEL if\nI      appropriate, other attributes are given appropriate default values.\nI      For further guidance, see \"Default values for TYPETERM attributes\".\nI      Entering or overtyping the DEVICE, SESSIONTYPE, or TERMMODEL values\nI      on the overtype-to-modify panel does not provide these defaults.\nN\nI      The valid attributes and the defaults for each device type are\nI      listed in \"Default values for TYPETERM attributes\". The recommended\nI      attributes for non-SNA z/OS Communications Server 3270 devices are\nI      3270 and 3270P for displays and printers, respectively. The\nI      following attributes can also be specified and are retained for\nI      compatibility with previous releases:\nN\nI      -> Displays: 3277 and L3277\nN\nI      -> Printers: 3284 and L3284, 3286 and L3286\nN\nI      For SNA z/OS Communications Server 3270 devices, use the LUTYPE2\nI      or LUTYPE3 attribute as appropriate. LUTYPE2 logical units are\nI      those defined by SNA, which accept a 3270-display data stream.\nI      LUTYPE3 logical units are those defined by SNA, which accept a\nI      data stream similar to that for a 3270 printer.\nN\nI      For a list of device types supported by CICS, see \"DFHTCT: CICS\nI      terminals list\". See also \"Default values for TYPETERM attributes\"\nI      for a list of valid device names and the default attributes that\nI      they generate.\nN\nD    DISCREQ(YES | NO)\nI      Specifies whether disconnect requests are to be\nI      honored.\nN\nI      YES: CICS is to honor a disconnect request for a z/OS\nI        Communications Server device, and issue a z/OS Communications\nI        Server CLSDST macroinstruction to terminate the\nI        z/OS Communications Server session with that logical unit.\nN\nI        In addition, CESF LOGOFF or GOODNIGHT from the terminal causes\nI        disconnection if you specify YES.\nN\nI        YES is essential if the TYPETERM definition is referenced by\nI        AUTINSTMODEL TERMINAL definitions, so that autoinstalled terminal\nI        entries can be deleted automatically.\nN\nI        YES is the default, but in some situations, if your resource\nI        definition does not specify this attribute, CICS enforces the\nI        NO value for the attribute if this value is required for\nI        compatibility with other options in your resource definition.\nN\nI      NO: CICS is not to honor a disconnect request for a\nI        z/OS Communications Server device.\nN\nD    IOAREALEN(0,0 | value1,value2)\nI      Specifies the length in bytes of\nI      a terminal input/output area to be passed to a transaction.\nN\nI      If you specify ATI(YES), you must specify an IOAREALEN of at least\nI      one byte.\nN\nI      value1: Value1 specifies the minimum size of a terminal\nI        input/output area to be passed to an application program when a\nI        RECEIVE command is issued.\nN\nI      value2: You can specify value2 as greater than or equal to value1.\nI        In this case, when the size of an input message exceeds value1,\nI        CICS uses a terminal input/output area value2 bytes long. If the\nI        input message size also exceeds value2, the node abnormal\nI        condition program sends an exception response to the terminal.\nN\nI        If value2 is not specified, or is less than value1, it defaults\nI        to the value of value1.\nN\nI      The maximum value that you can specify for IOAREALEN is\nI      32767 bytes.\nN\nD    LDCLIST(list)\nI      Specifies the name of a logical device code (LDC)\nI      list. The name can be up to eight characters in length. The name\nI      follows assembler language rules. It must start with an\nI      alphabetic character.\nN\nI      Define the LDCLIST and its contents using macroinstruction(s).\nN\nI      A local LDC list is defined by:\nN\nI        listname DFHTCT TYPE=LDCLIST,\nI        LDC(aa=nnn,bb=nnn,....)\nN\nI      An extended local LDC list is defined by:\nN\nI        listname DFHTCT TYPE=LDC,LOCAL=INITIAL\nI                 DFHTCT TYPE=LDC=(aa=nnn)....\nI                 DFHTCT TYPE=LDC=(bb=nnn)....\nI                 DFHTCT TYPE=LDC,LOCAL=FINAL\nN\nI      You specify this listname as the value for the LDCLIST attribute\nI      on the TYPETERM definition.\nN\nI      This attribute applies only to 3600, 3770 batch, 3770, and 3790\nI      batch data interchange, and LUTYPE4 logical units. The list\nI      specifies which LDCs are valid for this logical unit and,\nI      optionally, which device characteristics are valid for each LDC.\nI      CICS uses the first LDC generated in this list when choosing a\nI      default LDC for a logical unit. For further guidance, see\nI      \"DFHTCT logical device codes: z/OS Communications Server non-3270\".\nN\nD    LOGMODE(logmode | 0)\nI      Specifies how CICS is to build the BIND\nI      to be sent to the logical unit. blank A defined terminal definition\nI      uses the BIND image generated by the CICS definitions for this\nI      device by means of this TYPETERM definition and its associated\nI      terminal definitions. An autoinstalled terminal uses the fields\nI      specified in the incoming CINIT.\nN\nI      name: This is the LOGMODE name from a z/OS Communications Server\nI        logon mode table that has been set up for use by this logical\nI        unit. The name may be up to eight characters in length and must\nI        follow assembler language rules. The name must start with an\nI        alphabetic character.\nN\nI        This allows you to override the BIND image provided by CICS for\nI        the logical unit. For further information, see the appropriate\nI        CICS subsystem guide.\nN\nI        You cannot code a LOGMODE name when the terminal is a\nI        cross-domain resource.\nN\nI        The TCTTE is updated to reflect the logmode bind image fields.\nI        These include SEND and RECEIVE sizes and default and alternate\nI        screen sizes. If the logmode indicates that the terminal is not\nI        queriable, the extended data stream fields are all set to zero.\nN\nI      0 (zero): This causes CICS to use some of the information from the\nI        BIND image contained in the CINIT coming from the logical unit.\nI        The BIND image in the CINIT was created by z/OS Communications\nI        Server based on the LOGMODE entry defined for the logical unit\nI        requesting to log on to CICS. The node initialization block (NIB)\nI        is built with LOGMODE=0 and BNDAREA=0. When the TYPETERM's\nI        SENDSIZE and RECEIVESIZE have been specified as zero, CICS\nI        replaces them with the values from the LOGMODE's RUSIZES.\nN\nI        The TCTTE is updated to reflect the incoming CINIT fields. These\nI        include SEND and RECEIVE sizes and default and alternate screen\nI        sizes. If the logmode indicates that the terminal is not\nI        queriable, the extended data stream fields are all set to 0. Use\nI        LOGMODE(0) only in exceptional circumstances. Although the LU\nI        is bound with the z/OS Communications Server definition, CICS\nI        keeps the main session characteristics from the CICS definition.\nI        For example, if a printer is defined to z/OS Communications\nI        Server as LUTYPE1 but to CICS as an LUTYPE3 with LOGMODE(0),\nI        CICS accepts the bind but sends LUTYPE3 control characters to\nI        the printer, giving rise to incorrect results. This restriction\nI        does not apply to pipeline terminals.\nN\nI        Note:\nI        1. You should only need to use this value for the logmode\nI           attribute in exceptional circumstances.\nN\nI        2. For a logical unit in a cross-domain environment, specify\nI           LOGMODE(0) and provide the logical unit mode information in\nI           the DLOGMOD and MODETAB operands of the z/OS Communications\nI           Server(LU) statement. In a cross-domain environment, LOGMODE\nI           with a name causes a z/OS Communications Server error.\nN\nI    LOGMODECOM: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nD    LOGONMSG(NO | YES)\nI      Specifies whether the 'good morning' transaction,\nI      specified in the GMTRAN system initialization parameter, will be:\nN\nI      -> Automatically initiated when the logical unit is first logged\nI         on to CICS through z/OS Communications Server.\nN\nI      -> Initiated after the terminal user's TIMEOUT period has expired\nI         under certain conditions.\nN\nI      If you have specified ERRLASTLINE(YES), the messages written by\nI      the transaction do not overwrite the error message line.\nN\nI      NO: CICS does not run the 'good morning' transaction.\nN\nI        Note: If you are using a non-SNA terminal such as a Telnet 3270,\nI        LOGONMSG(NO) does not automatically release the keyboard lock.\nI        You need to press the Reset key to release the keyboard lock.\nN\nI      YES: CICS runs the 'good morning' transaction when the OPNDST exit\nI        is successfully completed and a session is established. The\nI        transaction is initiated by automatic task initiation (ATI) and\nI        competes with other ATI transactions for use of the terminal.\nI        Specify ATI(YES) for this TYPETERM.\nN\nI        Note: If you are using a non-SNA terminal such as a Telnet 3270,\nI        LOGONMSG(YES) also automatically releases the keyboard lock.\nN\nD    NEPCLASS(0 | tranclass)\nI      Specifies the node error program\nI      transaction class.\nN\nI      0: This results in a link to the default node error program module.\nN\nI      tranclass: The transaction class for the (nondefault) node error\nI        program module. tranclass can be in the range 1 through 255.\nI        For programming information about the node error program, see\nI        Writing a node error program in Developing system programs.\nN\nD    OBOPERID(NO | YES)\nI      Specifies whether CICS uses the outboard operator\nI      identifiers to support the BMS routing facilities required for\nI      this terminal. This option applies only to the 3790 and 3770 batch\nI      data interchange logical units.\nN\nI      NO: CICS does not use the outboard operator identifiers.\nN\nI      YES: CICS uses the outboard operator identifiers.\nN\nD    PAGESIZE(rows,columns)\nI      Specifies the default page size for this\nI      printer. The default page size is used by BMS when the default\nI      screen size has been selected in the DEFSCREEN attribute.\nN\nI      rows: Indicates the number of rows in the page. The PAGESIZE rows\nI        value can usefully be less than the DEFSCREEN rows value,\nI        perhaps to reserve the bottom line of a screen for error messages\nI        (see the ERRLASTLINE attribute), if the same BMS map is being\nI        used for both printing and display.\nN\nI      columns: Indicates the number of characters in each line.\nI        Unexpected results occur if the columns value specified in\nI        PAGESIZE differs from the columns value specified in DEFSCREEN.\nN\nI      The product of rows and columns must not exceed 32767.\nN\nI      The default value depends on the value you specify for the DEVICE\nI      attribute.\nN\nI      See \"Default values for TYPETERM attributes\" for details.\nN\nI      BMS uses the page size values when preparing output data streams.\nI      The specified number of characters in each line of the page should\nI      not exceed the physical line width of the terminal. In the case of\nI      printers that automatically perform a new-line function on reaching\nI      the end of the carriage (for example, 3270 printers), the line\nI      width specified here should be less than the physical line width.\nN\nI      This ensures that the formatting of the output data is governed\nI      entirely by the new-line (NL) characters supplied by BMS or by you,\nI      not by new-line functions performed by the device itself, which\nI      would produce additional lines of output, resulting in a physical\nI      page depth greater than that specified here.\nN\nI      For 3270-type printers, the hardware limits the amount of data\nI      that BMS may transmit. If the map or application program request\nI      specifies L40, L64, or L80, or does not specify NLEOM on the\nI      SEND MAP command, the product of lines and columns specified in\nI      PAGESIZE must not be greater than the buffer size.\nN\nI      If the BMS request specifies NLEOM, the page length may be any\nI      number of lines, but the product of lines and columns specified\nI      in the DEFSCREEN or ALTSCREEN attributes must not exceed the\nI      buffer size of the device. In other words, the number of characters\nI      that BMS transmits must not exceed the physical buffer size of\nI      the printer.\nN\nI      Note: BMS divides a large page into smaller segments for\nI      transmission. PAGESIZE should therefore correspond to the required\nI      logical page size (the product of lines and columns), and the\nI      DEFSCREEN value should correspond to the actual buffer size.\nN\nI      For a z/OS Communications Server 3600, the PAGESIZE specified is\nI      used if a BMS page build operation is attempted without specifying\nI      a logical device code (LDC). A default device type of 3604 is\nI      assumed.\nN\nI      For 3770, LUTYPE4, or 3790 batch data interchange logical units,\nI      the PAGESIZE specified is used if a BMS page build operation is\nI      requested without specifying a logical device code (LDC). The\nI      default device type is the console printer.\nN\nI      Take care when routing a message to a list of terminals. If the\nI      PAGESIZE you have defined (or allowed to default) is too small to\nI      accommodate the message, the transaction abends.\nN\nI      For cumulative text processing, the maximum allowed buffer size\nI      is 32767. If this is exceeded, BMS internally forces a reduced\nI      page length to ensure that the PAGESIZE stays within the limit.\nN\nD    RECEIVESIZE(number)\nI      For a defined nonautoinstalled terminal,\nI      specify the maximum size of a request unit that can satisfy a\nI      z/OS Communications Server RECEIVE request. The RECEIVESIZE value\nI      is transmitted to the connected logical unit, and must be in the\nI      range 0 through 30720. It may be rounded down by CICS, because it\nI      must be transmitted in an architected form.\nN\nI      The effect of RECEIVESIZE depends on whether a RECEIVE RUSIZE is\nI      present in the z/OS Communications Server LOGMODE table. Table 16\nI      (IN THE MANUAL) shows the RECEIVE RUSIZE used to bind a session for\nI      each possible combination of TYPETERM and LOGMODE values.\nN\nI      APPC terminal For an APPC (LUTYPE6.2) single session terminal,\nI      256 would be a suitable value.\nN\nI      Autoinstalled terminal For an autoinstalled terminal, a nonzero\nI      value for RECEIVESIZE specifies either the maximum or actual\nI      RECEIVE RUSIZE value used in binding a session for a logical unit\nI      defined with this TYPETERM.\nN\nI      The effect of RECEIVESIZE depends on whether a RECEIVE RUSIZE is\nI      present in the z/OS Communications Server LOGMODE table. Table 17\nI      (IN THE MANUAL) shows the RECEIVE RUSIZE used to bind a session\nI      for each possible combination of TYPETERM and LOGMODE values.\nN\nI    RELREQ({NO|YES})\nI      Specifies whether CICS is to release the logical\nI      unit upon request by another z/OS Communications Server\nI      application program.\nN\nI      NO: CICS is not to release the logical unit.\nN\nI      YES: CICS is to release the logical unit, if the logical unit is\nI        not currently part of a transaction.\nN\nD    RSTSIGNOFF(NOFORCE | FORCE)\nI      Specifies whether the terminal user\nI      should be signed off in the event of a persistent sessions restart\nI      or an XRF takeover.\nN\nI      FORCE: The terminal will be signed off after a persistent sessions\nI        restart or XRF takeover.\nN\nI      NOFORCE: The terminal will remain signed on after a persistent\nI        sessions restart or XRF takeover, provided that the RSTSIGNOFF\nI        system initialization parameter and the XRFSOFF entry in the CICS\nI        segment of the RACF user profile are both set to NOFORCE.\nN\nD    SENDSIZE(number)\nI      Defined terminal (nonautoinstalled): For a\nI      nonautoinstalled terminal, this is the maximum size in bytes of a\nI      request unit that can satisfy a z/OS Communications Server\nI      VTAM SEND request. The SENDSIZE value is transmitted to the\nI      connected logical unit, and must be in the range 0 through 30720.\nI      It may be rounded down by CICS, because it must be transmitted in\nI      an architected form.\nN\nI      The effect of SENDSIZE depends on whether a SEND RUSIZE is present\nI      in the z/OS Communications Server LOGMODE table. Table 18 (IN THE\nI      MANUAL) shows the SEND RUSIZE used to bind a session for each\nI      possible combination of TYPETERM and LOGMODE values.\nN\nI      APPC terminal: For an APPC (LUTYPE6.2) single session terminal,\nI      256 is a suitable value.\nN\nI      Autoinstalled terminal: For an autoinstalled terminal, a nonzero\nI      value for SENDSIZE specifies either the maximum or actual\nI      SEND RUSIZE value used in binding a session for a logical unit\nI      defined with this TYPETERM.\nN\nI      The effect of SENDSIZE depends on whether a SEND RUSIZE is present\nI      in the z/OS Communications Server LOGMODE table. Table 19 (IN THE\nI      MANUAL) shows the SEND RUSIZE used to bind a session for each\nI      possible combination of TYPETERM and LOGMODE values.\nN\nD    SESSIONTYPE(type)\nI      Specifies the type of session that can be used for\nI      a z/OS Communications Server SNA logical unit. For details, see\nI      \"Default values for TYPETERM attributes\".\nN\nD    SHIPPABLE(NO | YES)\nI      Specifies whether the definition is allowed to\nI      be sent to a remote system if this device tries to initiate a\nI      remote transaction.\nN\nI      NO: This definition cannot be shipped to a remote system.\nN\nI      YES: This definition can be shipped to a remote system.\nN\nI        This function may be used for any terminal, whether autoinstalled\nI        or with its own TERMINAL definition. The shipping does not work\nI        unless the terminal has a definition installed, by one of these\nI        methods, in the local system. Using SHIPPABLE(YES) means that\nI        you do not need to ensure that a definition of the terminal\nI        exists on the remote system for a locally defined terminal to\nI        initiate a transaction in that system. This can be useful when\nI        the remote system cannot share the CSD file with the local\nI        system.\nN\nI       A definition for the terminal must already be installed in (or\nI       already shipped to) the remote system.\nN\nI       For guidance on deciding whether to use SHIPPABLE(YES), see\nI       \"Terminals for transaction routing\".\nN\nD    SIGNOFF(YES | NO | LOGOFF)\nI      Specifies the actions taken when GNTRAN\nI      (CESF or user-defined transaction) is attached and attempts to\nI      sign off the terminal. If you are using RACF 1.9 or later, specify\nI      the TIMEOUT limit in the RACF segment.\nN\nI      YES: When the specified time has elapsed after the last input from\nI        the operator, the terminal is automatically signed off from CICS.\nN\nI      NO: The terminal is not timed out.\nN\nI      LOGOFF: When the specified time has elapsed after the last input\nI        from the operator, the terminal is automatically signed off from\nI        CICS and then logged off from z/OS Communications Server. LOGOFF\nI        is useful for an autoinstall model, because virtual storage is\nI        not wasted on entries for terminals that have been timed out.\nN\nI        If GNTRAN fails to attach because of unprocessed data in the\nI        terminal buffer (resulting in a BID failure), the terminal will\nI        be signed off and logged off. GNTRAN will not run and will have\nI        no effect.\nN\nI        Note: You cannot change the value of this attribute when\nI        DEVICE(APPC) is specified. The default value in that case is\nI        SIGNOFF(NO).\nN\nD    TERMMODEL(1 | 2)\nI      Specifies the model number of the terminal. If the\nI      device is a component of the 3270 Information Display System,\nI      specify the model number of the terminal:\nN\nI      1: Specify 1 for the 3270 Model 1 displays and printers (for\nI        example, 3277 Model 1) with a default screen or buffer size\nI        of 12x40 (480 bytes/characters). TERMMODEL(1) is the default\nI        for 3270 Model 1 printers and displays.\nN\nI        Specify 1 for the 3275 Display Station Model 11. The CICS support\nI        obtained is identical to that obtained by coding TERMMODEL(1) for\nI        3275 Display Station Model 1.\nN\nI      2 Specify 2 for the 3270 displays and printers (for example,\nI        3278 Model 4) with a default screen or buffer size of\nI        24x80 (1920 bytes/characters). TERMMODEL(2) is the default for\nI        the 3286 printer in 3270 compatibility mode.\nN\nI       Specify 2 for the 3275 Display Station Model 12. The CICS support\nI       obtained is identical to that obtained by coding TERMMODEL(2) for\nI       3275 Display Station Model 2.\nN\nD    TTI(YES | NO)\nI      Specifies whether transactions can be initiated at\nI      the terminal by a user.\nN\nI      YES: Transactions can be initiated at the terminal by a user. If\nI        you also specify ATI(YES), transactions can also be initiated\nI        automatically. In this case, the automatic transaction\nI        initiation, either by transient data control or interval control,\nI        sets a condition in an appropriate terminal control table\nI        terminal entry. If both ATI and TTI are specified as YES, and if\nI        there is no transaction at the terminal, terminal control\nI        initiates the user-defined task. This task is expected to send\nI        messages to the terminal.\nN\nI        For a terminal used in the processing of transactions such as\nI        inquiries or order entries, specify TTI(YES) and ATI(NO). This\nI        also applies to a display station or hard-copy terminal to which\nI        no messages are sent without a terminal request and through which\nI        transactions are entered. Note that this is the only\nI        specification allowed for 3790 inquiry logical units.\nN\nI      NO: Transactions cannot be initiated at the terminal by a user. If\nI        you specify NO, specify ATI(YES) to allow transactions to be\nI        initiated automatically. An example of this type of terminal is\nI        one that is located in a remote location, such as a warehouse,\nI        and is unattended but may receive messages.\nN\nD    UCTRAN(NO | TRANID | YES)\nI      Specifies whether the input data stream from\nI      a terminal is to be translated to uppercase. The input data stream\nI      may include a transaction identifier as well as program data. CICS\nI      supports transaction identifier definition in mixed case, and the\nI      UCTRAN attribute can be used to ensure that the correct transaction\nI      is located. Uppercase translation is done for both 3270 and\nI      non-3270 data streams.\nN\nI      NO: No uppercase translation is performed.\nN\nI      YES: All the data input from the terminal, both the transaction\nI        identifier if present and the program data, is translated to\nI        uppercase before any processing.\nN\nI      TRANID: When the input data stream includes a transaction\nI        identifier, CICS translates it to uppercase before attempting to\nI        locate its definition. However, all the input data, both the\nI        transaction identifier and the program data, is passed to the\nI        program without any translation.\nN\nI        Therefore both the YES and the TRANID options allow transaction\nI        identifiers to be defined in uppercase and to be entered from the\nI        terminal in either uppercase or lowercase, but the TRANID option\nI        causes the transaction identifier and program data to be passed\nI        to the program without any translation.\nN\nI      You can also request translation to uppercase at the transaction\nI      level on PROFILE resources (see \"PROFILE attributes\"), but be aware\nI      that a TYPETERM UCTRAN(YES) definition overrides a\nI      PROFILE UCTRAN(NO) definition. So, if you specify\nI      TYPETERM UCTRAN(YES), a PROFILE UCTRAN(NO) has no effect.\nI      Translation can be overridden by the application program for all\nI      RECEIVE requests except the first, by using the ASIS option.\nN\nI      Table 20 (IN THE MANUAL) shows which portion of the terminal input\nI      is translated (transaction id and/or data) according to the setting\nI      of the UCTRAN on the PROFILE and TYPETERM resource definitions.\nN\nI      Some national-language characters are not automatically translated\nI      when UCTRAN(YES) or UCTRAN(TRANID) is specified. If that is the\nI      case, you can use one of the methods described in Upper translation\nI      in Reference System programming.\nN\nD    USERAREALEN(0 | 0-255)\nI      Specifies the length in bytes (0 to 255) of\nI      the user area for this terminal. It should be made as small as\nI      possible. The terminal user area is initialized to zeros at\nI      system initialization.\nN\nI      The terminal user area might be located in 31-bit storage or in\nI      24-bit storage, depending on the value of the TCTUALOC system\nI      initialization parameter. The default is that the terminal user\nI      area can be in either 31-bit storage or 24-bit storage, but CICS\nI      uses 31-bit storage wherever possible. If you require the terminal\nI      user area to be in 24-bit storage, because you have application\nI      programs that are not capable of 31-bit addressing, specify the\nI      system initialization parameter TCTUALOC=BELOW for the CICS region.\nN\nI    XRFSIGNOFF: This attribute is obsolete, but is supported to provide\nI      compatibility with earlier releases of CICS.\nN\nNNBMS-related attributes:\nN------------------------\nD    ALTPAGE(0,0 | rows,columns)\nI      Specifies the page size to be used by\nI      BMS for this terminal entry when ALTSCREEN has been selected as the\nI      screen size. The default is the PAGESIZE. The values for both rows\nI      and columns must be in the range 0 through 999. The product of rows\nI      and columns must not exceed 32767.\nN\nI      You will get unexpected results if the columns value of ALTPAGE is\nI      different from that of ALTSCREEN. The rows value of ALTPAGE can use\nI      fully be less than that of ALTSCREEN, perhaps to reserve the bottom\nI      line of the screen for error messages.\nN\nI      If you use the QUERY structured field, the alternate page size used\nI      is the size set up as the alternate screen size. For terminals that\nI      can be queried, you can set ALTPAGE to zero and have the ALTSCREEN\nI      value defined explicitly by the CINIT BIND. If ALTPAGE is not zero,\nI      it is possible to have different values for the ALTPAGE and the\nI      ALTSCREEN.\nN\nD    ALTSUFFIX(char1)\nI      A 1-character numeric suffix that BMS is\nI      to append to map set names (specified in the SUFFIX operand of the\nI      DFHMSD TYPE={DSECT|MAP} macro).\nN\nI      blank: Leave this attribute blank if you do not want a suffixed\nI        map set.\nN\nI      number: BMS appends this suffix to map set names if the screen size\nI        being used is the same value as the alternate screen size; that\nI        is, if the transaction has an alternate screen size specified in\nI        the PROFILE definition, or if the default and alternate screen\nI        size are the same. In this case, BMS map selection routines\nI        attempt to load the map set with the suffix specified in the\nI        ALTSUFFIX operand.\nN\nI      If there is no such map set, BMS tries to load a map set suffixed\nI      with M or L and, if this load fails, BMS tries to load an\nI      unsuffixed map set version.\nN\nI      If the transaction uses default screen size, BMS first tries to\nI      load a map set suffixed with M or L and, if this load fails, BMS\nI      tries to load an unsuffixed map set version.\nN\nI      To use a suffixed map set, you must specify the BMS=(,,,DDS)\nI      system initialization parameter.\nN\nD    AUTOPAGE(NO | YES)\nI      Specifies whether BMS autopaging is to be used.\nI      Specify YES for printers and NO for display devices. The default\nI      depends on the value you specify for the DEVICE attribute. The\nI      default values are indicated in \"Default values for TYPETERM\nI      attributes\".\nN\nD    FMHPARM(NO | YES)\nI      Specifies whether BMS is to accept user-supplied\nI      parameters for inclusion in the function management header built\nI      by BMS:\nN\nI      NO: Do not accept user-supplied parameters for inclusion in the\nI        function management header built by BMS.\nN\nI      YES: Accept user-supplied parameters for inclusion in the function\nI        management header built by BMS.\nN\nI      Specify YES only if the DEVICE type is 3650.\nN\nD    ROUTEDMSGS(ALL | NONE | SPECIFIC)\nI      Specifies which messages are to be\nI      routed to this terminal by an EXEC CICS ROUTE command. The default\nI      depends on the value you specify for the DEVICE attribute. See\nI      \"Default values for TYPETERM attributes\" for details.\nN\nI      ALL: BMS routes to this terminal messages that are destined for\nI        all terminals as well as those specifically destined for this\nI        terminal.\nN\nI      NONE: BMS does not route any messages to this terminal, whether\nI        they are destined for all terminals or for this terminal\nI        specifically.\nN\nI      SPECIFIC: BMS routes messages to this terminal when they are\nI        destined specifically for this terminal, but not when they are\nI        destined for all terminals.\nN\nNDevice properties:\nN------------------\nD    ALTSCREEN(rows,columns)\nI      Specifies the 3270 screen size to be used\nI      for a transaction that has an alternate screen size specified in\nI      its profile definition. The values that can be specified are:\nN\nI      Device Alternate Screen Size\nI      ----------------------------\nI      3276-1, 3278-1 (12,80)\nI      3276-2, 3278-2 (24,80)\nI      3276-3, 3278-3 (32,80)\nI      3276-4, 3278-4 (43,80)\nI      3278-5         (27,132)\nI      3279-2A, 3279-2B (24,80)\nI      3279-3A, 3279-3B (32,80)\nN\nI      No validity checking is performed on the screen size selected, and\nI      incorrect sizes may lead to unpredictable results.\nN\nI      For BSC devices, both the alternate and default screen sizes are\nI      determined by the device hardware. The alternate screen size is\nI      the maximum screen size. For the 3290 display, both the default\nI      and alternate screen sizes are determined by the customer setup\nI      procedure.\nN\nI      For SNA devices (LUTYPE2 and LUTYPE3), you can specify any value\nI      for both alternate and default screen sizes, up to the maximum\nI      physical screen size. In particular, both the alternate and default\nI      screen sizes can be the maximum screen size, or the default screen\nI      size can be the maximum screen size with no alternate screen size\nI      specified. The SNA bind is generated by CICS from this information.\nI      You do not need to provide logmode table entries, or to customize\nI      the device.\nN\nI      For non-SNA 3270 and LUTYPE2 devices, you can use the QUERY\nI      structured field to determine the alternate screen size that has\nI      been set up for the display. To use QUERY, leave the DEFSCREEN to\nI      default to (24,80) and leave ALTSCREEN unspecified. The alternate\nI      screen size is the size set up by the terminal user. Otherwise,\nI      QUERY(COLD) or QUERY(ALL) has no effect on the alternate screen\nI      size. Leaving ALTSCREEN unspecified without using QUERY under the\nI      conditions described results in an alternate screen size of\nI      (00,00).\nN\nI      If you use dual screen sizes, you can make a CICS transaction use\nI      the alternate screen size by coding SCRNSIZE(ALTERNATE) in its\nI      associated profile. If an application consists of several\nI      pseudo-conversationally linked transactions, specify\nI      SCRNSIZE(ALTERNATE) in the profile for each of these transactions\nI      if the application uses the alternate screen size.\nN\nI      For 3287 and 3289 printers, the value specified must equal the\nI      buffer size of the particular device. For non-SNA 3287 and 3289\nI      printers, the sizes depend on the feature ordered, not on the\nI      model number. For SNA printers, there are no features, and any\nI      two sizes can be specified from the list of valid sizes. When\nI      printing to a printer whose associated TERMINAL definition has\nI      PRINTERCOPY(YES) specified, the ALTSCREEN value should match the\nI      screen size of the terminal whose screen is to be printed. If the\nI      values differ, unpredictable results may occur.\nN\nD    APLKYBD(NO | YES)\nI      Specifies whether the 3270 device has the\nI      APL keyboard feature:\nN\nI      YES: The 3270 device has the APL keyboard feature.\nN\nI      NO: The 3270 device does not have the APL keyboard feature.\nN\nD    APLTEXT(NO | YES)\nI      Specifies whether the 3270 device has the\nI      APL text feature:\nN\nI      YES: The 3270 device has the APL text feature.\nN\nI      NO: The 3270 device does not have the APL text feature.\nN\nI      Do not specify YES for a 3288 printer, with or without\nI      TEXTPRINT(YES). The APLTEXT feature is used in conjunction with\nI      the TEXTKYBD and APLKYBD operands.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the APL text feature.\nN\nD    AUDIBLEALARM(NO | YES)\nI      Specifies whether the audible alarm feature\nI      is installed for a 3270 display or for a 3270 printer attached to\nI      a 3651 controller:\nN\nI     YES: The audible alarm feature is installed.\nN\nI      NO The audible alarm feature is not installed.\nN\nD    BACKTRANS(NO | YES)\nI      Specifies whether the device has the background\nI      transparency feature:\nN\nI      NO: The device does not have the background transparency feature.\nN\nI      YES: The device does have the background transparency feature.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the background transparency feature.\nN\nD    CGCSGID(0,0 | gcsid,cpgid)\nI      The coded graphic character set global\nI      identifier (CGCSGID) enables application programs to determine the\nI      character set supported at the device.\nN\nI      You can get this information from a QUERY structured field for\nI      some devices. For others, you must supply this information here,\nI     so that application programs can retrieve it using the EXEC CICS ASSIGN com\nN\nI      0,0 No CGCSGID is specified.\nN\nI      gcsid,cpgid: The CGCSGID consists of two 5-digit decimal numbers\nI        which can take values in the range 1 through 65535. gcsid is the\nI        graphic character set global identifier (GCSGID) and cpgid is a\nI        specification of the code points for the set, the code page\nI        global identifier (CPGID).\nN\nD    COLOR(NO | YES)\nI      Specifies whether the 3270 device or the SCS\nI      printer has the extended color feature, which allows colors to be\nI      selected for each field or character:\nN\nI      NO: The device does not have the extended color feature.\nN\nI      YES: The device has the extended color feature.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the color feature.\nN\nD    COPY(NO) | YES)\nI      Specifies whether the copy feature for a 3270 display\nI      or printer is included in the 3270 control unit:\nN\nI      NO: The copy feature is included.\nN\nI      YES: The copy feature is not included.\nN\nI      Leave it to default to COPY(NO) for 3270 compatibility mode\nI      logical units, because COPY(YES) is ignored.\nN\nI      See also the PRINTERCOPY and ALTPRINTCOPY attributes of the\nI      TERMINAL definition.\nN\nI      For further details about screen copying, see the CICS 3270 Data\nI      Stream Device Guide.\nN\nD    DEFSCREEN(rows,columns)\nI      Specifies the 3270 screen size or 3270\nI      printer page size to be used on this device when attached to a\nI      transaction or used by BMS for which the default screen size has\nI      been specified in the profile definition. The default depends on\nI      the value you specify for the DEVICE attribute (see \"Default\nI      values for TYPETERM attributes\"). The values that can be\nI      specified for a BSC 3270 are:\nN\nI      Device Screen size\nI      ------------------------\nI      3278-1         (12,40)\nI      3278-2         (24,80)\nI      3276-3, 3278-3 (24,80)\nI      3276-4, 3278-4 (24,80)\nI      3278-5         (24,80)\nI      3279-2A, 3279-2B (24,80)\nI      3279-3A, 3279-3B (24,80)\nN\nI      For BSC devices, both default and alternate screen sizes are\nI      determined by the terminal hardware. The default screen size is\nI      (24,80), except for the 3278-1 where it is (12,40).\nN\nI      For SNA devices (LUTYPE2 and LUTYPE3), both default and alternate\nI      screen sizes can be any value you choose, up to the maximum\nI      physical screen size (see ALTSCREEN). In particular, both default\nI      and alternate screen sizes can be the maximum screen size; or the\nI      default screen size can be the maximum screen size with no\nI      alternate screen size specified. The SNA bind is generated by\nI      CICS from this TCT information. You do not need to provide\nI      logmode table entries, or to customize the device.\nN\nD    DUALCASEKYBD(NO | YES)\nI      Specifies whether a 3270 display has a\nI      typewriter keyboard or an operator console keyboard. Both\nI      uppercase and lowercase data can be transmitted with either of\nI      these keyboards.\nN\nI      NO: The device does not have a dual-case keyboard.\nN\nI      YES: The device has a dual-case keyboard.\nN\nD    EXTENDEDDS(NO | YES)\nI      Specifies whether the 3270 device or the SCS\nI      printer supports extensions to the 3270 data stream:\nN\nI      NO: The device does not support 3270 data stream extensions.\nN\nI      YES: The device supports 3270 data stream extensions.\nN\nI      EXTENDEDDS(YES) is implied if you specify YES for any one of the\nI      COLOR, HILIGHT, PROGSYMBOLS, QUERY, or VALIDATION (3270 only)\nI      attributes.\nN\nI      If extended data stream (EXTENDEDDS) is set to YES, the device\nI      will support the write structured field COMMAND and Outbound\nI      Query structured field.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the extended data stream. Using the QUERY\nI      structured field sets EXTENDEDDS to YES if query is valid.\nN\nD    FORMFEED(NO | YES)\nI      Specifies whether or not the device has the\nI      forms feed feature, which means that BMS uses the form-feed\nI      character when formatting output documents:\nN\nI      NO: The device does not have the form feed feature.\nN\nI      YES The device has the form feed feature.\nN\nI      If DEVICE(SCSPRINT) is specified, BMS inserts a form-feed\nI      character at the beginning of the data stream. This causes the\nI      device to skip to the top margin of a new page before starting to\nI      print.\nN\nI      The top margin is defined by a set vertical format (SVF) data\nI      stream, and may be a line number equal to or greater than one. If\nI      a SVF data stream has not been sent to the printer, the top margin\nI      is line one. The line counter in the device is set to 1 when the\nI      operator sets up the paper.\nN\nI      Note that the device may also perform an automatic form feed if\nI      you try to print beyond a bottom margin. The bottom margin is\nI      also determined by the SVF data stream and defaults to the maximum\nI      presentation line (MPL). The MPL is the last line on the page and\nI      its value represents the page or form length as a number of lines\nI      (that is, physical page size times the line density). Both the MPL\nI      and the line density can be determined by the SVF data stream.\nI      Otherwise the MPL (the number of lines) can be set up on the\nI      device by the operator.\nN\nI      If DEVICE(3270), DEVICE(3270P), DEVICE(LUTYPE2), or DEVICE(LUTYPE3)\nI      is specified, use FORMFEED(YES) in conjunction with the FORMFEED\nI      option in the BMS SEND commands. Using form feed on display\nI      devices provides for a skip to a new page when the screen data is\nI      copied to a printer.\nN\nI      The options discussed here for SCSPRINT operation do not apply\nI      when the devices are operating as 3270P or LUTYPE3 devices. In\nI      this case there is only the concept of a form length, and this\nI      can be set on the device only by the operator.\nN\nD    HILIGHT(NO | YES)\nI      Specifies whether the 3270 device or SCS printer\nI      has the extended highlight facility, which enables fields or\nI      characters to be displayed in reverse-video, underline mode, or\nI      blink (3270 only):\nN\nI      NO: The device does not have the extended highlight facility.\nN\nI      YES: The device has the extended highlight facility.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the extended highlight facility.\nN\nD    HORIZFORM(NO | YES)\nI      Specifies whether or not the device has the\nI      horizontal form feature, which means that BMS should use the\nI      horizontal tabbing when formatting output documents:\nN\nI      NO: The device does not have the horizontal form feature.\nN\nI      YES: The device has the horizontal form feature.\nN\nI      The devices that can use this feature are batch, batch data\nI      interchange, interactive, SCSPRT or LUTYPE4 logical units.\nN\nI      NO: The HTAB option in the BMS map definition is ignored.\nN\nI      YES: BMS uses horizontal tabbing when formatting output documents.\nN\nD    KATAKANA(NO | YES)\nI      Specifies whether Katakana support is required.\nI      Katakana terminals cannot display mixed case output; uppercase\nI      characters appear as uppercase English characters, but lowercase\nI      characters appear as Katakana characters. If you have any Katakana\nI      terminals connected to your CICS system, specify UPPER on the\nI      MSGCASE system initialization parameter.\nN\nI      NO: Katakana support is not required.\nN\nI      YES: Katakana support is required. All lowercase characters sent\nI        to the terminal from the following transactions are translated\nI        to uppercase:\nN\nI      CBRC CDBC CDBI CEBR CECI CEDA CEDF CEMT CEOT CESN\nI      CEST CMSG CRTE CSPG CWTO\nN\nI      Important: For emulated Katakana terminals, results depend on the\nI      code page that is in use. In some cases, lowercase English\nI      characters are not translated to uppercase.\nN\nD    LIGHTPEN(NO | YES)\nI      Specifies whether a 3270 display has the\nI      selector pen feature:\nN\nI      NO: The 3270 display does not have the selector pen feature.\nN\nI      YES: The 3270 display has the selector pen feature.\nN\nD    MSRCONTROL(NO | YES)\nI      Specifies whether the terminal, an 8775 or\nI      3643, has a magnetic slot reader. This option is not valid for\nI      SCS printers.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use a magnetic slot reader.\nN\nD    OBFORMAT(NO | YES)\nI      Specifies whether outboard formatting is used.\nI      If the devices for which you are defining this TYPETERM use BMS\nI      outboard formatting, specify OBFORMAT(YES). OBFORMAT(YES) can be\nI      specified for two device types only:\nN\nI      -> 3650, SESSIONTYPE(3270)\nN\nI      -> LUTYPE2, for an 8100 Information System using the DPPX operating\nI         system with DPPX/DPS Version 2 for presentation services\nN\nI      Use the QUERY structured field to determine whether the device is\nI      set up to use outboard formatting.\nN\nD    OUTLINE(NO | YES)\nI      Specifies whether the device supports field\nI      outlining:\nN\nI      NO: The device does not support field outlining.\nN\nI      YES: The device supports field outlining.\nN\nI      Use the QUERY structured field to determine whether the device is\nI      set up to use field outlining.\nN\nD    PARTITIONS(NO | YES)\nI      Specifies whether a device is to use\nI      partitions. This option is not valid for SCS printers.\nN\nI      NO: The device is not to use partitions.\nN\nI      YES: The device is to use partitions.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use partitions.\nN\nD    PRINTADAPTER(NO | YES)\nI      For the 3275: specifies whether the printer\nI      adapter feature and corresponding 3284 Printer Model 3 are present\nI      on the 3275 Display Station. This feature makes the 3284 eligible\nI      for print requests through the PA key from the host 3275.\nN\nI      NO: The printer adapter feature and corresponding 3284 Printer\nI        Model 3 are not available.\nN\nI      YES: The printer adapter feature and corresponding 3284 Printer\nI        Model 3 are available.\nN\nI      For LUTYPE2 logical units: specifies whether, for print requests\nI      initiated by the PRINT key or by an ISSUE PRINT command, printer\nI      allocation is handled by the 3790, or by the 3274 or 3276,\nI      according to the printer authorization matrix for both\nI      z/OS Communications Server and non-z/OS Communications Server\nI      attachments.\nN\nI      NO: Print requests are not handled according to the printer\nI        authorization matrix for both z/OS Communications Server and\nI        non-z/OS Communications Server attachments.\nN\nI      YES: Print requests are handled according to the printer\nI        authorization matrix for both z/OS Communications Server and\nI        non-z/OS Communications Server attachments.\nN\nI      Further, 3270 printers attached to the same 3790 are available\nI      for print requests sent to the 3270-display logical unit by a\nI      terminal control print request or initiated by the operator. If\nI      PRINTADAPTER is NO, printer allocation is determined by the\nI      PRINTER and ALTPRINTER attributes of the TERMINAL definition.\nN\nI      If output is created on the screen by BMS requests with the PRINT\nI      option, by BMS requests with the NLEOM option, or by the CMSG\nI      command, the contents of the screen are automatically copied to\nI      a 3270 printer, whether or not the CICS-defined PRINT key\nI      (usually a PA key) was pressed.\nN\nD    PROGSYMBOLS(NO | YES)\nI      Specifies whether the programmed symbol (PS)\nI      facility can be used on this 3270 device or SCS printer. The\nI      facility enables up to six 191-character sets, with\nI      customer-defined and program-loaded fonts and codes, to be stored\nI      and accessed.\nN\nI      NO: Programmed symbol (PS) facility cannot be used.\nN\nI      YES: Programmed symbol (PS) facility can be used.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use programmed symbols.\nN\nD    QUERY(NO | ALL | COLD)\nI      Specifies whether CICS should use the QUERY\nI      structured field to determine the characteristics of the device.\nN\nI      NO: CICS does not use the QUERY function.\nN\nI      COLD: CICS uses the QUERY function to determine the characteristics\nI        of the device only when the device is first connected after an\nI        initial or a cold start of CICS. The device characteristics are\nI        stored in the CICS global catalog for use on subsequent warm and\nI        emergency starts.\nN\nI      ALL: CICS uses the QUERY function to determine the characteristics\nI        of the device each time the device is connected.\nN\nD    SOSI(NO | YES)\nI      Specifies whether the device supports mixed EBCDIC\nI      and double-byte character set (DBCS) fields.\nN\nI      NO: The device does not support mixed EBCDIC and double-byte\nI        character set (DBCS) fields.\nN\nI       YES: The device supports mixed EBCDIC and double-byte character\nI        set (DBCS) fields.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use mixed EBCDIC and DBCS fields.\nN\nD    TEXTKYBD(NO | YES)\nI      Specifies whether the 3270 device has the\nI      text-keyboard feature.\nN\nI      NO: The 3270 device does not have the text-keyboard feature.\nN\nI      YES: The 3270 device has the text-keyboard feature.\nN\nD    TEXTPRINT(NO | YES)\nI      Specifies whether the 3288 printer has the\nI      text-print feature.\nN\nI      NO: The 3288 printer doe not have the text-print feature.\nN\nI      YES: The 3288 printer has the text-print feature.\nN\nD    VALIDATION(NO | YES)\nI      For the 8775, specifies whether the 8775 device\nI      has the extended validation feature, which allows fields to be\nI      defined as TRIGGER, MANDATORY FILL, or MANDATORY ENTER.\nN\nI      For the 3290, specifies whether the 3290 device has the validation\nI      feature, which allows fields to be defined as MANDATORY FILL or\nI      MANDATORY ENTER.\nN\nI      This option is not valid for SCS printers. If VALIDATION(YES) is\nI      specified for an SCS printer, an error message is raised and the\nI      option is ignored.\nN\nI      You can use the QUERY structured field to determine whether the\nI      device is set up to use the validation feature.\nN\nD    VERTICALFORM(NO | YES)\nI      Specifies whether the device has the vertical\nI      form feature. The devices that can use this feature are batch,\nI      batch data interchange, interactive, SCSPRT or LUTYPE4 logical\nI      units.\nN\nI      NO: The device does not have the vertical form feature.\nN\nI      YES: The device has the vertical form feature.\nN\nN\nNError display attributes:\nN-------------------------\nD    ERRCOLOR(NO | BLUE | GREEN | NEUTRAL | PINK | RED |\nD      TURQUOISE | YELLOW)\nI      Specifies whether the error message is to be\nI      displayed in color. Coding ERRCOLOR(color) implies\nI      ERRLASTLINE(YES).\nN\nI      The colors you can specify are:\nN\nI      BLUE\nI      RED\nI      PINK\nI      GREEN\nI      TURQUOISE\nI      YELLOW\nI      NEUTRAL\nN\nD    ERRHILIGHT(NO | BLINK | REVERSE | UNDERLINE)\nI      Specifies the highlighting,\nI      if any, with which error messages are to be displayed.\nN\nD    ERRINTENSIFY(NO | YES)\nI      Specifies whether the error message is to\nI      be displayed in an intensified field.\nN\nI      Coding ERRINTENSIFY(YES) implies ERRLASTLINE(YES).\nN\nD    ERRLASTLINE(NO | YES)\nI      Specifies where error messages are to be\nI      displayed.\nN\nI      NO: An error message is displayed at the current cursor position\nI        and without any additional attributes.\nN\nI      YES: An error message is displayed starting at the beginning of\nI        the line nearest the bottom of the screen so that the whole\nI        message fits on the screen.\nN\nI       Because all error messages occupy the same line, if the messages\nI       are received in quick succession, they overlay one another and\nI       earlier messages may disappear before they have been read.\nN\nNRecovery-related attributes:\nN----------------------------\nD    RECOVNOTIFY(NONE | MESSAGE | TRANSACTION)\nI      In a CICS region running\nI      with persistent session support, this option specifies how a\nI      terminal end user is notified that the terminal session has been\nI      recovered; in a CICS region running with XRF support, it specifies\nI      how the terminal user is notified that an XRF takeover has\nI      occurred.\nN\nI      This option is not applicable to APPC sessions.\nN\nI      NONE: There is no notification that a terminal session has been\nI        recovered, or that an XRF takeover has occurred.\nN\nI      MESSAGE: A message is displayed on the screen to say that the\nI        system has recovered. The message is specified in two BMS maps\nI        (DFHXRC1 and DFHXRC2) for XRF and in one BMS map (DFHXRC3) for\nI        z/OS Communications Server persistent sessions. These maps are\nI        in map set DFHXMSG. If reduced takeover time is important, use\nI        MESSAGE rather than TRANSACTION.\nN\nI        The terminal must be defined with the ATI(YES) option, and must\nI        be capable of displaying a BMS map.\nN\nI      TRANSACTION: A transaction is initiated at the terminal. The name\nI        of the transaction is specified by the RMTRAN system\nI        initialization parameter. For z/OS Communications Server\nI        persistent sessions, only the first transaction named in the\nI        RMTRAN system initialization parameter is used.\nN\nI        Tip: The default transaction for RMTRAN is the one specified in\nI        the GMTRAN system initialization parameter: the good-morning\nI        transaction. For the TRANSACTION option, the terminal must be\nI        defined with the ATI(YES) option. If reduced takeover time is\nI        important, use MESSAGE rather than TRANSACTION.\nN\nD    RECOVOPTION(SYSDEFAULT | CLEARCONV | NONE |\nD      RELEASESESS | UNCONDREL)\nI      This option applies to the recovery of sessions in a CICS\nI      region running with z/OS Communications Server persistent\nI      sessions, or with XRF.\nN\nI      In a CICS region running with persistent session support, this\nI      option specifies how you want CICS to recover the session, and\nI      return the terminal to service on system restart within the\nI      persistent session delay interval.\nN\nI      For all recovery options other than NONE, if the action taken is a\nI      z/OS Communications Server UNBIND, the UNBIND is followed by a\nI      z/OS Communications Server SIMLOGON.\nN\nI      SYSDEFAULT is the default, but in some situations, if your\nI      resource definition does not specify this attribute, CICS enforces\nI      the NONE value for the attribute if this value is required for\nI      compatibility with other options in your resource definition.\nN\nI      SYSDEFAULT: In a CICS region running with persistent sessions\nI        support, this specifies that CICS is to select the optimum\nI        procedure to recover a session on system restart within the\nI        persistent session delay interval, depending on the session\nI        activity and on the characteristics of the terminal.\nN\nI         Although sessions are recovered, any transactions in-flight at\nI         the time of the failure are abended and not recovered.\nI         Transactions are also abended if the recovered session is being\nI         used by another CICS region over an APPC connection.\nN\nI         CICS recovers the session with the least possible impact, in\nI         one of the following ways:\nN\nI         -> If the terminal was not executing a transaction at the time\nI            of the CICS failure, no recovery action is required, and\nI            CICS takes the appropriate recovery notification action as\nI            defined by the RECOVNOTIFY attribute.\nN\nI         -> If the terminal was busy (that is, executing a transaction)\nI            when CICS failed, CICS first tries to recover the session\nI            by sending a z/OS Communications Server end-bracket\nI            indicator. If the end-bracket does not recover the session\nI            (for example, CICS may be in RECEIVE mode), CICS issues a\nI            CLEAR command. If the terminal does not support the CLEAR\nI            command, the recovery action taken is a z/OS Communications\nI            Server UNBIND followed by a SIMLOGON. See Application design\nI            considerations in Developing applications for more\nI            information about persistent sessions.\nN\nI      CLEARCONV: Prevents CICS from sending an end-bracket indicator to\nI        close an in-bracket session. Instead CICS sends a CLEAR request,\nI        to reset the conversation states. If the session does not support\nI        the CLEAR request, CICS sends an UNBIND request. The CLEAR or\nI        UNBIND is sent only if the session was busy at the time of system\nI        restart (in the case of persistent sessions) or takeover (in the\nI        case of XRF).\nN\nI      RELEASESESS: Requires CICS to send an UNBIND request to release the\nI        active session. The UNBIND is sent only if the session was busy\nI        at the time of system restart (in the case of persistent\nI        sessions), or takeover (in the case of XRF). Following the\nI        UNBIND, the session is queued for SIMLOGON. If the session is\nI        not busy, the requested recovery notification is carried out.\nN\nI      UNCONDREL: Requires CICS to send an UNBIND request to release the\nI        active session. The UNBIND is sent whether or not the session was\nI        busy at the time of system restart (in the case of persistent\nI        sessions support) or the takeover (in the case of XRF). Following\nI        the UNBIND, the session is queued for SIMLOGON.\nN\nI      NONE: In a CICS region running with persistent sessions support,\nI        this specifies that the terminal session is not to be recovered\nI        at system restart within the persistent session delay interval:\nI        in effect, the terminal has no persistent sessions support.\nI        LU6.2 sessions are unbound, but the latest negotiated CNOS value\nI        is returned to the CICS system after the restart. After system\nI        restart, the terminal is reconnected automatically if you specify\nI        AUTOCONNECT(YES), subject to the operation of the AIRDELAY\nI        system initialization parameter (AIRDELAY=0 overrides\nI        AUTOCONNECT(YES), and the terminal is not reconnected).\nN\nI        Use RECOVOPTION(NONE) if this terminal or autoinstall model is to\nI        be used with persistent sessions (PSDINT = nnn in the SIT) but\nI        the terminal may be the subject of an\nI        EXEC CICS ISSUE PASS LUNAME() LOGONLOGMODE.\nN\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG35": {"ttr": 10499, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG35\nTCICS\nT-RDG\nT-Chapter 35. URIMAP resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 35. URIMAP resources\nN============================\nNURIMAP definitions are resources that match the URIs of HTTP, Atom\nNfeed, or web service requests, and provide information on how to\nNprocess the requests.\nN\nNThe following sub-topics can be found in the manual:\nN\nN-> Requests from a web client, to CICS as an HTTP server\nN\nN-> Requests to a server, from CICS as an HTTP client\nN\nN-> Requests from a SOAP client to CICS as a web service provider\nN\nN-> Requests to a web service provider from CICS as a web service\nN   requester\nN\nN-> Requests from a web client to Java web application\nN\nN-> Atom feed requests\nN\nN-> Business event emissions from the HTTP EP adapter\nN\nN-> URIMAP search order\nN\nN-> URIMAP resources in CICS bundles\nN\nN-> URIMAP resources as application entry points\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3501": {"ttr": 10501, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3501\nTCICS\nT-RDG\nT-Chapter 35. URIMAP resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180220-152855\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 35. URIMAP resources\nN============================\nNURIMAP attributes\nN-----------------\nNDescribes the syntax and attributes of the URIMAP resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    URIMAP(name)\nI      Specifies the name of this URIMAP definition.\nN\nI      name: The name can be up to 8 characters in length. The attribute\nI        is specified in mixed case, and the case is preserved in the\nI        URIMAP definition.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    PATH(path)\nI      This attribute is for all USAGE options.\nN\nI      path: specifies the path component of the URI to which the URIMAP\nI        definition applies, which can be up to 255 characters, including\nI        the forward slash (/) at the beginning of the path component. If\nI        you do not include the forward slash, you can use only\nI        254 characters to specify the path. The minimum possible path is\nI        a forward slash, which represents the root of the URL structure\nI        for the specified host name. You can include or omit the forward\nI        slash at the beginning of the path component; however, if you\nI        omit it, CICS adds it at runtime. An example of a path is\nI        software/htp/cics/index.html. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The PATH attribute is specified in mixed case, and the case is\nI        preserved in the URIMAP definition. The PATH attribute must\nI        contain only the characters that are allowed in URIs.\nI        Specifically, the characters < > # % \" { } | \\ \u00ac \u00dd \u00a8 ` and\nI        embedded blanks must be excluded (except that % is allowed when\nI        it introduces a valid hexadecimal escape sequence; that is, when\nI        it is followed by two valid hexadecimal digits in uppercase or\nI        lowercase). The tilde character ~ cannot be specified in CICS and\nI        must be replaced by the corresponding hexadecimal escape sequence\nI        (%7E). CICS validates the use of characters at define time.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        path that contains Unicode characters, any Unicode characters\nI        must be escaped to the percent-encoded representation of the\nI        Unicode character. If you do not have an application that can\nI        convert Unicode characters to percent-encoded representations,\nI        free applications are available on the Internet to do this task.\nI        The path must still be 255 characters or less, and a character\nI        in this context means a single ASCII character, not the original\nI        Unicode character. For example, the Cyrillic character that has\nI        the percent-encoded representation %D0%B4 counts as 6 characters\nI        from the 255-character limit.\nN\nI        For URIMAP definitions that relate to CICS as an HTTP server and\nI        web services, if you want the URIMAP definition to match more\nI        than one path, you can use an asterisk as a wildcard character\nI        at the end of the path. For example, specifying the path\nI        /software/htp/cics/* makes the URIMAP definition match all\nI        requests with paths that begin with the string to the left of the\nI        asterisk. Specifying a path of /* makes the URIMAP definition\nI        match any requests that are directed to the host named in the\nI        HOST attribute. If an HTTP request is matched by more than one\nI        URIMAP definition, the most specific match is taken.\nN\nI        If a query component is present, and you want to apply the URIMAP\nI        definition to that specific query alone, you can include it as\nI        part of the path component. Include the question mark at the\nI        beginning of the string. The query string must contain only the\nI        characters that are allowed in URIs. A query string cannot itself\nI        include an asterisk as a wildcard, but it can follow a path that\nI        includes an asterisk as a wildcard. If you do not include a query\nI        string in the URIMAP definition, any query string that is present\nI        in the HTTP request is automatically ignored for matching\nI        purposes.\nN\nI        For URIMAP definitions for Atom feeds, you must use an asterisk\nI        as a wildcard character at the end of the path. The part of the\nI        path that you specify in the URIMAP definition is the part that\nI        is common to the Atom feed and Atom entry URLs. CICS matches the\nI        remainder of the URL to the URLs specified in all the\nI        <atom:link> elements in the Atom configuration file for the feed.\nN\nI        For URIMAP definitions for CICS as an HTTP client, you cannot\nI        use an asterisk as a wildcard; you must specify the complete\nI        path for the request. If the URIMAP definition is referenced on\nI        a WEB OPEN command, this path becomes the default path for\nI        WEB SEND commands that relate to that connection. If the URIMAP\nI        definition is referenced on a WEB SEND command, the path is used\nI        for that WEB SEND command. However, the host attribute for that\nI        URIMAP definition must match the host that is specified on the\nI        WEB OPEN command for the connection.\nN\nD    SCHEME(HTTP | HTTPS)\nN\nI      This attribute is for all USAGE options.\nN\nI      SCHEME specifies the scheme component of the URI to which the\nI      URIMAP definition applies, which is either HTTP (without SSL) or\nI      HTTPS (with SSL). Do not include the delimiters :// (colon and two\nI      forward slashes) that follow the scheme component in the URI.\nN\nI      A URIMAP specifying the HTTP scheme accepts web client requests\nI      made by using either the HTTP scheme or the HTTPS scheme. A URIMAP\nI      specifying the HTTPS scheme accepts only web client requests made\nI      by using the HTTPS scheme. However, if the transport is WebSphere\nI      MQ, a URIMAP specifying either the HTTP scheme or the HTTPS scheme\nI      accepts web client requests made by using either the HTTP scheme\nI      or the HTTPS scheme.\nN\nI      Inbound HTTP requests that arrive on SSL(ATTLSAWARE) TCPIPSERVICEs\nI      must use secure connections so they are always treated as HTTPS.\nN\nD    STATUS(ENABLED | DISABLED)\nI      This attribute is for all USAGE options.\nN\nI      STATUS specifies whether the URIMAP definition is to be installed\nI      in an enabled or disabled state. The default is enabled.\nN\nI      This attribute is ignored for URIMAP resources that are dynamically\nI      generated by a CICS bundle. The initial status of a URIMAP\nI      resource is derived from the initial status of the bundle that\nI      defines the resource.\nN\nD    USAGE(SERVER | CLIENT | PIPELINE | ATOM | JVMSERVER)\nI      Specifies whether\nI      this URIMAP definition is for CICS as an HTTP server (SERVER),\nI      CICS as an HTTP client (CLIENT), a web service (PIPELINE), an Atom\nI      feed (ATOM), or a JVM server (JVMSERVER). The USAGE attribute\nI      governs which other attributes in the URIMAP definition can be\nI      used.\nN\nI      SERVER: you create a URIMAP definition for CICS as an HTTP server.\nI        This type of URIMAP definition is used to map the URI of an\nI        incoming HTTP request from a web client to CICS resources. An\nI        application-generated response or a static response can be\nI        provided. Requests that require an application-generated response\nI        might qualify for being processed by directly attached user\nI        transactions, and bypassing the web attach task. For more\nI        information, see HTTP requests are processed by directly attached\nI        user transactions.\nN\nI      CLIENT: you create a URIMAP definition for CICS as an HTTP client.\nI        This type of URIMAP definition is used when CICS makes a request\nI        for an HTTP resource on a server, so that you can avoid\nI        identifying the URI in your application program.\nN\nI      PIPELINE: you create a URIMAP definition for a web service. This\nI        type of URIMAP definition is used for an inbound web service\nI        request; that is, a request by which a client invokes a web\nI        service in CICS. The URI of the incoming request is associated\nI        with WEBSERVICE and PIPELINE resources, which specify the\nI        processing that is to be performed on the message. Requests might\nI        qualify for being processed by directly attached user\nI        transactions, and bypassing the web attach task. For more\nI        information, see HTTP requests are processed by directly attached\nI        user transactions.\nN\nI      ATOM: you create a URIMAP definition for an Atom feed. This type\nI        of URIMAP definition is used for an incoming request for data\nI        that CICS makes available as an Atom feed. The URIMAP definition\nI        maps the request URI to an ATOMSERVICE resource definition, which\nI        defines an Atom document. Requests might qualify for being\nI        processed by directly attached user transactions, and bypassing\nI        the web attach task. For more information, see HTTP requests are\nI        processed by directly attached user transactions.\nN\nI      JVMSERVER: you create a URIMAP for a web application that is\nI        running in a JVM server. This type of URIMAP is used to map\nI        incoming application requests to a CICS transaction. If no\nI        URIMAP matches the URI of the incoming request, CICS uses the\nI        CJSA transaction.\nN\nNATOM attributes:\nN----------------\nD    ATOMSERVICE(name)\nI      This attribute is for USAGE(ATOM).\nN\nI      When a client makes a request to CICS for an Atom feed by using the\nI      URI specified by this URIMAP definition, ATOMSERVICE specifies the\nI      1- to 8-character name of the ATOMSERVICE resource definition for\nI      the Atom feed. The ATOMSERVICE resource definition defines an Atom\nI      service, feed, collection, or category document, and identifies\nI      the Atom configuration file, CICS resource or application program,\nI      and XML binding that are used to supply the data for the feed.\nN\nD    HOST(hostname | *)\nI      This attribute is for all USAGE options.\nN\nI      hostname: Specifies the host name of the URI to which the URIMAP\nI        definition applies, or its IPv4 or IPv6 address. The name can be\nI        up to 116 characters long. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The HOST attribute must be present. The HOST attribute must\nI        contain only alphanumeric characters, hyphens -, colons :, or\nI        periods ., although you cannot use colons when you are specifying\nI        a character host name instead of an IP address. CICS validates\nI        the host name at define time. A host name can be entered in any\nI        case, but if a character host name is specified instead of an\nI        IP address, the host name is converted to lowercase in the\nI        URIMAP definition.\nN\nI        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or\nI        USAGE(JVMSERVER) you can use a single asterisk in the HOST\nI        attribute, making the URIMAP definition match any host name. You\nI        cannot use an asterisk as a wildcard in the HOST attribute with\nI        any other characters. Do not set a port number in this attribute\nI        for these usage types.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        host name that contains Unicode characters, you must convert the\nI        host name to Punycode format, which is described by RFC 3492.\nI        CICS does not provide a tool to carry out this conversion, but\nI        free applications are available on the Internet to support the\nI        conversion of Unicode to Punycode. If you use an asterisk as the\nI        host name, you do not need to use Punycode. For more information\nI        about IRIs, see Internationalized Resource Identifiers (IRIs) in\nI        Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. For more information about address formats, see\nI        IP addresses.\nN\nI        If CICS is an HTTP client and you specify USAGE(CLIENT), you can\nI        specify a port number in the request to the server:\nN\nI        -> Use the PORT attribute to specify the port number. PORT\nI           replaces the use of the HOST attribute for specifying a port\nI           number.\nN\nI        -> For compatibility purposes in existing programs that use\nI           native IPv4 addresses and host names, you can use the HOST\nI           attribute when you specify the port number. Native IPv4\nI           addresses and host names are the only formats in which you\nI           can specify the port number, together with a preceding colon;\nI           for example, 1.2.3.4:80 or hostname.com:443.\nN\nI        -> If you specify an IPv6 address (or a host name that resolves\nI           to an IPv6 address), ensure that you are operating in a\nI           dual-mode (IPv4 and IPv6) environment and that the client or\nI           server that you are communicating with is also operating in\nI           a dual-mode (IPv4 and IPv6) environment. For more information\nI           about IPv6, see Understanding IPv6 and CICS in Product\nI           overview.\nN\nI        -> For native IPv6 addresses, you must use the PORT attribute to\nI           specify the port number. IPv6 addresses require square\nI           brackets to separate the address from the port number, and,\nI           because square brackets are not fixed values in all EBCDIC\nI           character sets, square brackets are not supported in the\nI           HOST attribute.\nN\nI        -> Specify the port number only if it is different from the\nI           default for the scheme; 80 for HTTP without SSL, or 443 for\nI           HTTPS and HTTP with SSL.\nN\nI        -> If you specify a port number in the HOST attribute and a\nI           different port number in the PORT attribute, an error is\nI           returned. If you do not specify a port number in either the\nI           HOST or the PORT attribute, the default port number for the\nI           scheme is used.\nN\nD    LOCATION(url)\nI      This attribute is for USAGE(SERVER), USAGE(PIPELINE),\nI      and USAGE(ATOM).\nN\nI      url: specifies a URL of up to 255 characters to which the client\nI        request is redirected. The URL must be complete, including\nI        scheme, host, path components, and appropriate delimiters. CICS\nI        does not check that the URL is valid, so you must ensure that\nI        the destination exists and that the URL is specified correctly.\nN\nI        The description for the PATH attribute lists the characters that\nI        must be excluded from a URL. These characters must not be used\nI        in the LOCATION attribute. The exception is the # character,\nI        which can be used in the LOCATION attribute as a separator before\nI        a fragment identifier that follows the URL.\nN\nI        The REDIRECTTYPE attribute is used to specify the type of\nI        redirection. If temporary or permanent redirection is specified,\nI        the URL in the LOCATION attribute is used for redirection. If\nI        no redirection is specified, the URL in the LOCATION attribute\nI        is ignored. You can use the SET URIMAP command to change the\nI        REDIRECTTYPE attribute and the LOCATION attribute.\nN\nD    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)\nI      This attribute is for\nI      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      REDIRECTTYPE specifies the type of redirection for requests that\nI      match this URIMAP definition. The URL specified by the LOCATION\nI      attribute is used for redirection when required.\nN\nI      NONE: means that requests are not redirected. Any URL specified by\nI        the LOCATION attribute is ignored.\nN\nI      TEMPORARY: means that requests are redirected on a temporary basis.\nI        The URL specified by the LOCATION attribute is used for\nI        redirection, and the status code that is used for the response\nI        is 302 (Found).\nN\nI      PERMANENT: means that requests are redirected permanently. The URL\nI        specified by the LOCATION attribute is used for redirection, and\nI        the status code that is used for the response is\nI        301 (Moved Permanently).\nN\nI      You can use the SET URIMAP command to change the REDIRECTTYPE\nI      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)\nI      or REDIRECTTYPE(PERMANENT) is specified when you are creating a\nI      URIMAP definition, the following attributes are optional: ANALYZER,\nI      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,\nI      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to\nI      set the REDIRECTTYPE attribute to NONE after the URIMAP definition\nI      is installed, any of the listed attributes that are specified in\nI      the URIMAP definition are activated.\nN\nD    TCPIPSERVICE(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      name: specifies the 1- to 8-character name of a TCPIPSERVICE\nI        resource definition, with PROTOCOL(HTTP), that defines an inbound\nI        port to which this URIMAP definition relates. If this attribute\nI        is not specified, the URIMAP definition applies to a request on\nI        any inbound ports.\nN\nI      When a URIMAP definition with HTTPS as the scheme matches a request\nI      that a web client is making, CICS checks that the inbound port used\nI      by the request is using SSL. If SSL is not specified for the port,\nI      the request is rejected with a 403 (Forbidden) status code. When\nI      the URIMAP definition applies to all inbound ports, this check\nI      ensures that a web client cannot use an unsecured port to access\nI      a secured resource. No check is carried out for a URIMAP definition\nI      that specifies HTTP as the scheme, so web clients can use either\nI      unsecured or secured (SSL) ports to access these resources.\nN\nI      You specify the security measures that are applied for each port in\nI      the TCPIPSERVICE resource definition. You can choose whether to use\nI      SSL, and, if you do use SSL, you need to choose the exact security\nI      measures that are applied, for example, the authentication method,\nI      the sending of certificates by client and server, and encryption\nI      of messages. Read Security for CICS web support in Securing for\nI      more information about the security features that you can use to\nI      keep your CICS web support facility safe.\nN\nD    TRANSACTION(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).\nN\nI      name: specifies the 1-4 character name of an alias transaction that\nI        is to be used to run the application, or to start the pipeline.\nN\nI      The default alias transaction is different for each type of URIMAP:\nN\nI      -> USAGE(SERVER) uses the CWBA transaction\nN\nI      -> USAGE(PIPELINE) uses the CPIH transaction\nN\nI      -> USAGE(ATOM) uses the CW2A transaction\nN\nI      -> USAGE(JVMSERVER) uses the CJSA transaction\nN\nI      You can select a different transaction name for the purposes of\nI      security, monitoring and accounting, or transaction class\nI      limitation. Whatever name you choose for the alias transaction, it\nI      must always run the same program, which is determined by the\nI      USAGE attribute.\nN\nI      -> For USAGE(SERVER), the program is DFHWBA, which links to the\nI         application program named in the PROGRAM attribute of the URIMAP\nI         definition or named by the analyzer program.\nN\nI      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the\nI         pipeline that is named in the PIPELINE attribute and the web\nI         service that is named in the WEBSERVICE attribute, if specified.\nN\nI      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias\nI         program.\nN\nI      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks\nI         in the JVM server for an application request.\nN\nI      For USAGE(SERVER) only, if the ANALYZER attribute is specified as\nI      YES, the TRANSACTION attribute is used as input to the analyzer\nI      program, but the analyzer program can override it. Alternatively,\nI      you can leave this attribute blank and let the analyzer program\nI      specify it. The analyzer is not used for other types of URIMAP.\nN\nD    USERID(id)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided, USAGE(PIPELINE),\nI      USAGE(JVMSERVER), and USAGE(ATOM).\nN\nI      id: specifies a 1- to 8-character default user ID that can be used\nI        by any client. For an application-generated response or a web\nI        service, the alias transaction is attached under this user ID.\nN\nI      For USAGE(JVMSERVER), the user ID is used to attach a transaction\nI      to run work in the Liberty profile server. The transaction can be\nI      specified in the URI map or use the default transaction CJSA. The\nI      user ID is not used if basic authentication is enabled; CICS\nI      expects a user ID and password in the HTTP header for the\nI      application request and rejects the request if authentication\nI      fails. If security is not enabled and no user ID is present in\nI      the HTTP header or in the URI map, the default user ID for the\nI      CICS region is used.\nN\nI      For other usage types, when authentication is required for the\nI      connection, so that CICS requests an authenticated user ID directly\nI      from the client, the default user ID that you specify in the\nI      URIMAP definition is not used. The authenticated user ID of the\nI      client is used instead, or if authentication fails, the request\nI      is rejected. Authentication procedures are specified by the\nI      AUTHENTICATE attribute of the TCPIPSERVICE definition for the\nI      connection.\nN\nI      For an application-generated response, if ANALYZER(YES)\nI      is specified, the USERID attribute is used as input to the\nI      analyzer program, but the analyzer program can override it.\nI      Alternatively, you can leave this attribute blank and let the\nI      analyzer program specify it. The analyzer is used only when\nI      USAGE(SERVER) is specified. A user ID specified by a client can\nI      also be changed by the analyzer program. If no user ID is\nI      specified by any of the methods that are mentioned, the default\nI      user ID for an application-generated response is the CICS default\nI      user ID.\nN\nI      For static responses, the USERID attribute does not apply. Resource\nI      security checking for static responses can be carried out by using\nI      the authenticated user ID of a client.\nN\nI      If surrogate user checking is enabled in the CICS region, with\nI      XUSER=YES specified as a system initialization parameter, CICS\nI      checks that the user ID used to install the URIMAP definition is\nI      authorized as a surrogate of the user ID specified for the USERID\nI      attribute. For more information about surrogate user checking, see\nI      Where surrogate user checking applies in Securing.\nN\nN\nNCLIENT attributes:\nN------------------\nD    AUTHENTICATE(NO | BASIC)\nI      This attribute is for USAGE(CLIENT).\nN\nI      AUTHENTICATE specifies whether to send HTTP basic authentication\nI      information to the HTTP server. AUTHENTICATE(BASIC) requires a\nI      user ID and password to be provided by the XWBAUTH global user\nI      exit, or as values on the API commands such as WEB SEND or\nI      WEB CONVERSE. The XWBAUTH global user exit is not called if\nI      USERNAME and PASSWORD are specified on the API command. If you\nI      specify an authentication value on the API command, this value is\nI      used instead of the AUTHENTICATE value that is specified in the\nI      URIMAP resource.\nN\nD    CERTIFICATE(label)\nI      This attribute is for USAGE(CLIENT).\nN\nI      CERTIFICATE specifies the label of the X.509 certificate that is to\nI      be used as the SSL client certificate during the SSL handshake.\nI      Certificate labels can be up to 32 characters long. This attribute\nI      is used only when the URI specified by the URIMAP definition is to\nI      be used for an HTTPS request that is made by CICS as a client. It\nI      is up to the server to request an SSL client certificate, and, if\nI      it does, CICS supplies the certificate label that is specified in\nI      the URIMAP definition. If this attribute is omitted, the default\nI      certificate that is defined in the key ring for the CICS region\nI      user ID is used. The certificate must be stored in a key ring in\nI      the external security manager database. The certificate that is\nI      specified, or the default certificate, must have a private key\nI      available to it or the URIMAP cannot install. If you do not want\nI      to use a certificate, leave this field blank and ensure that the\nI      key ring used by the CICS region does not have a default\nI      certificate. For more information, see Building a key ring\nI      manually in Securing.\nN\nD    CIPHERS(value)\nI      This attribute is for USAGE(CLIENT).\nN\nI      The CIPHERS attribute can be specified in either of two ways:\nN\nI      -> A string of up to 56 hexadecimal digits that is interpreted as\nI         a list of up to 28 2-digit cipher suite codes.\nN\nI      -> The name of the SSL cipher suite specification file, which is a\nI         z/OS UNIX file in the security/ciphers subdirectory of the\nI         directory that is specified by the USSCONFIG system\nI         initialization parameter. For example if USSCONFIG is set to\nI         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,\nI         the fully qualified file name is\nI         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For\nI         more information, see SSL cipher suite specification file.\nN\nI      When you use the CEDA transaction to define the resource, CICS\nI      automatically initializes the attribute with a default list of\nI      acceptable codes. For CICS to initialize the attribute, the\nI      KEYRING system initialization parameter must be specified in the\nI      CICS region where you are running CEDA. If KEYRING is not set,\nI      CICS does not initialize the attribute. The default list of codes\nI      is 35363738392F303132330A1613100D15120F0C unless the system\nI      initialization parameter NISTSP800131A=CHECK is set, in which\nI      case it is 35363738392F303132330A1613100D.\nN\nI      You can reorder the cipher codes or remove them from the initial\nI      list. However, you cannot add cipher codes that are not in the\nI      default list for the specified encryption level. To reset the\nI      value to the default list of codes, delete all of the cipher suite\nI      codes. The field is automatically repopulated with the default\nI      list.\nN\nI      For more information, see Cipher suites in Securing.\nN\nD    HOST(hostname)\nI      This attribute is for all USAGE options.\nN\nI      hostname: Specifies the host name of the URI to which the URIMAP\nI        definition applies, or its IPv4 or IPv6 address. The name can be\nI        up to 116 characters long. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The HOST attribute must be present. The HOST attribute must\nI        contain only alphanumeric characters, hyphens -, colons :, or\nI        periods ., although you cannot use colons when you are specifying\nI        a character host name instead of an IP address. CICS validates\nI        the host name at define time. A host name can be entered in any\nI        case, but if a character host name is specified instead of an\nI        IP address, the host name is converted to lowercase in the\nI        URIMAP definition.\nN\nI        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or\nI        USAGE(JVMSERVER) you can use a single asterisk in the HOST\nI        attribute, making the URIMAP definition match any host name. You\nI        cannot use an asterisk as a wildcard in the HOST attribute with\nI        any other characters. Do not set a port number in this attribute\nI        for these usage types.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        host name that contains Unicode characters, you must convert the\nI        host name to Punycode format, which is described by RFC 3492.\nI        CICS does not provide a tool to carry out this conversion, but\nI        free applications are available on the Internet to support the\nI        conversion of Unicode to Punycode. If you use an asterisk as the\nI        host name, you do not need to use Punycode. For more information\nI        about IRIs, see Internationalized Resource Identifiers (IRIs) in\nI        Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. For more information about address formats, see\nI        IP addresses.\nN\nI        If CICS is an HTTP client and you specify USAGE(CLIENT), you can\nI        specify a port number in the request to the server:\nN\nI        -> Use the PORT attribute to specify the port number. PORT\nI           replaces the use of the HOST attribute for specifying a port\nI           number.\nN\nI        -> For compatibility purposes in existing programs that use\nI           native IPv4 addresses and host names, you can use the HOST\nI           attribute when you specify the port number. Native IPv4\nI           addresses and host names are the only formats in which you\nI           can specify the port number, together with a preceding colon;\nI           for example, 1.2.3.4:80 or hostname.com:443.\nN\nI        -> If you specify an IPv6 address (or a host name that resolves\nI           to an IPv6 address), ensure that you are operating in a\nI           dual-mode (IPv4 and IPv6) environment and that the client or\nI           server that you are communicating with is also operating in\nI           a dual-mode (IPv4 and IPv6) environment. For more information\nI           about IPv6, see Understanding IPv6 and CICS in Product\nI           overview.\nN\nI        -> For native IPv6 addresses, you must use the PORT attribute to\nI           specify the port number. IPv6 addresses require square\nI           brackets to separate the address from the port number, and,\nI           because square brackets are not fixed values in all EBCDIC\nI           character sets, square brackets are not supported in the\nI           HOST attribute.\nN\nI        -> Specify the port number only if it is different from the\nI           default for the scheme; 80 for HTTP without SSL, or 443 for\nI           HTTPS and HTTP with SSL.\nN\nI        -> If you specify a port number in the HOST attribute and a\nI           different port number in the PORT attribute, an error is\nI           returned. If you do not specify a port number in either the\nI           HOST or the PORT attribute, the default port number for the\nI           scheme is used.\nN\nD    PORT(NO | port)\nI      This attribute applies to the USAGE(CLIENT) and\nI      USAGE(JVMSERVER) options only.\nN\nI      For USAGE(CLIENT), the PORT attribute specifies the decimal number\nI      of the port that is used by a CICS application when it communicates\nI      with a server. The value must be a number in the range 1 - 65535.\nN\nI      The port number is combined with the HOST value to determine the\nI      destination for outbound requests for this URIMAP. Specify the\nI      port number only if it is different from the default for the\nI      scheme: 80 for HTTP without SSL, or 443 for HTTPS and HTTP with\nI      SSL.\nN\nI      If you specify a port number in the HOST attribute and a different\nI      port number in the PORT attribute, an error is returned. If you do\nI      not specify a port number in either the HOST or the PORT attribute,\nI      the default port number for the scheme is used.\nN\nI      For USAGE(JVMSERVER), the PORT attribute specifies the port number\nI      that is used to receive requests to access an application that is\nI      running in a Liberty profile server.\nN\nI      If you do not specify a value for the PORT attribute, PORT is set\nI      to NO to indicate that the attribute is not being used.\nN\nD    SOCKETCLOSE(0 | hhmmss)\nI      This attribute is for USAGE (CLIENT).\nN\nI      SOCKETCLOSE specifies whether, and for how long, CICS keeps a\nI      client HTTP connection open after the CICS application finishes\nI      using it. After use, CICS checks the state of the connection and\nI      then places it in a pool in a dormant state. A dormant connection\nI      can be reused by the same application or by another application\nI      that connects to the same host and port.\nN\nI      0: CICS closes each client HTTP connection when the CICS\nI        application finishes using it. CICS does not place the\nI        connection in a pool for reuse.\nN\nI      hhmmss: When a CICS application finishes using its client HTTP\nI        connection, CICS checks the state of the connection and places\nI        it in a pool for reuse. A dormant connection that is not reused\nI        is discarded after the length of time that you specify here.\nN\nI      Connection pooling can provide performance benefits for the\nI      HTTP EP adapter for CICS event processing, or where multiple\nI      invocations of CICS web support applications make connection\nI      requests for the same host and port, or where a web services\nI      application makes multiple requests and responses. To activate\nI      connection pooling, your application programs must specify the\nI      URIMAP resource on the INVOKE SERVICE or WEB OPEN command. For\nI      more information about connection pooling, see Connection pooling\nI      for HTTP client performance in Improving performance.\nN\nN\nNJVMSERVER attributes:\nN---------------------\nD    HOST(hostname | *)\nI      This attribute is for all USAGE options.\nN\nI      hostname: Specifies the host name of the URI to which the URIMAP\nI        definition applies, or its IPv4 or IPv6 address. The name can be\nI        up to 116 characters long. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The HOST attribute must be present. The HOST attribute must\nI        contain only alphanumeric characters, hyphens -, colons :, or\nI        periods ., although you cannot use colons when you are specifying\nI        a character host name instead of an IP address. CICS validates\nI        the host name at define time. A host name can be entered in any\nI        case, but if a character host name is specified instead of an\nI        IP address, the host name is converted to lowercase in the\nI        URIMAP definition.\nN\nI        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or\nI        USAGE(JVMSERVER) you can use a single asterisk in the HOST\nI        attribute, making the URIMAP definition match any host name. You\nI        cannot use an asterisk as a wildcard in the HOST attribute with\nI        any other characters. Do not set a port number in this attribute\nI        for these usage types.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        host name that contains Unicode characters, you must convert the\nI        host name to Punycode format, which is described by RFC 3492.\nI        CICS does not provide a tool to carry out this conversion, but\nI        free applications are available on the Internet to support the\nI        conversion of Unicode to Punycode. If you use an asterisk as the\nI        host name, you do not need to use Punycode. For more information\nI        about IRIs, see Internationalized Resource Identifiers (IRIs) in\nI        Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. For more information about address formats, see\nI        IP addresses.\nN\nI        If CICS is an HTTP client and you specify USAGE(CLIENT), you can\nI        specify a port number in the request to the server:\nN\nI        -> Use the PORT attribute to specify the port number. PORT\nI           replaces the use of the HOST attribute for specifying a port\nI           number.\nN\nI        -> For compatibility purposes in existing programs that use\nI           native IPv4 addresses and host names, you can use the HOST\nI           attribute when you specify the port number. Native IPv4\nI           addresses and host names are the only formats in which you\nI           can specify the port number, together with a preceding colon;\nI           for example, 1.2.3.4:80 or hostname.com:443.\nN\nI        -> If you specify an IPv6 address (or a host name that resolves\nI           to an IPv6 address), ensure that you are operating in a\nI           dual-mode (IPv4 and IPv6) environment and that the client or\nI           server that you are communicating with is also operating in\nI           a dual-mode (IPv4 and IPv6) environment. For more information\nI           about IPv6, see Understanding IPv6 and CICS in Product\nI           overview.\nN\nI        -> For native IPv6 addresses, you must use the PORT attribute to\nI           specify the port number. IPv6 addresses require square\nI           brackets to separate the address from the port number, and,\nI           because square brackets are not fixed values in all EBCDIC\nI           character sets, square brackets are not supported in the\nI           HOST attribute.\nN\nI        -> Specify the port number only if it is different from the\nI           default for the scheme; 80 for HTTP without SSL, or 443 for\nI           HTTPS and HTTP with SSL.\nN\nI        -> If you specify a port number in the HOST attribute and a\nI           different port number in the PORT attribute, an error is\nI           returned. If you do not specify a port number in either the\nI           HOST or the PORT attribute, the default port number for the\nI           scheme is used.\nN\nD    PIPELINE(name)\nI      This attribute is for USAGE(PIPELINE).\nN\nI      When a client makes an inbound web service request to CICS with\nI      the URI specified by this URIMAP definition, PIPELINE specifies\nI      the 1- to 8-character name of the PIPELINE resource definition for\nI      the web service. The PIPELINE resource definition provides\nI      information about the message handlers, which act on the service\nI      request from the client. PIPELINE resources in Reference System\nI      definition describes these resource definitions.\nN\nD    PORT(NO | port)\nI      This attribute applies to the USAGE(CLIENT) and\nI      USAGE(JVMSERVER) options only.\nN\nI      For USAGE(CLIENT), the PORT attribute specifies the decimal number\nI      of the port that is used by a CICS application when it communicates\nI      with a server. The value must be a number in the range 1 - 65535.\nN\nI      The port number is combined with the HOST value to determine the\nI      destination for outbound requests for this URIMAP. Specify the\nI      port number only if it is different from the default for the\nI      scheme: 80 for HTTP without SSL, or 443 for HTTPS and HTTP with\nI      SSL.\nN\nI      If you specify a port number in the HOST attribute and a different\nI      port number in the PORT attribute, an error is returned. If you do\nI      not specify a port number in either the HOST or the PORT attribute,\nI      the default port number for the scheme is used.\nN\nI      For USAGE(JVMSERVER), the PORT attribute specifies the port number\nI      that is used to receive requests to access an application that is\nI      running in a Liberty profile server.\nN\nI      If you do not specify a value for the PORT attribute, PORT is set\nI      to NO to indicate that the attribute is not being used.\nN\nD    TRANSACTION(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).\nN\nI      name: specifies the 1-4 character name of an alias transaction that\nI        is to be used to run the application, or to start the pipeline.\nN\nI      The default alias transaction is different for each type of URIMAP:\nN\nI      -> USAGE(SERVER) uses the CWBA transaction\nN\nI      -> USAGE(PIPELINE) uses the CPIH transaction\nN\nI      -> USAGE(ATOM) uses the CW2A transaction\nN\nI      -> USAGE(JVMSERVER) uses the CJSA transaction\nN\nI      You can select a different transaction name for the purposes of\nI      security, monitoring and accounting, or transaction class\nI      limitation. Whatever name you choose for the alias transaction, it\nI      must always run the same program, which is determined by the\nI      USAGE attribute.\nN\nI      -> For USAGE(SERVER), the program is DFHWBA, which links to the\nI         application program named in the PROGRAM attribute of the URIMAP\nI         definition or named by the analyzer program.\nN\nI      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the\nI         pipeline that is named in the PIPELINE attribute and the web\nI         service that is named in the WEBSERVICE attribute, if specified.\nN\nI      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias\nI         program.\nN\nI      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks\nI         in the JVM server for an application request.\nN\nI      For USAGE(SERVER) only, if the ANALYZER attribute is specified as\nI      YES, the TRANSACTION attribute is used as input to the analyzer\nI      program, but the analyzer program can override it. Alternatively,\nI      you can leave this attribute blank and let the analyzer program\nI      specify it. The analyzer is not used for other types of URIMAP.\nN\nD    USERID(id)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided, USAGE(PIPELINE),\nI      USAGE(JVMSERVER), and USAGE(ATOM).\nN\nI      id: specifies a 1- to 8-character default user ID that can be used\nI        by any client. For an application-generated response or a web\nI        service, the alias transaction is attached under this user ID.\nN\nI      For USAGE(JVMSERVER), the user ID is used to attach a transaction\nI      to run work in the Liberty profile server. The transaction can be\nI      specified in the URI map or use the default transaction CJSA. The\nI      user ID is not used if basic authentication is enabled; CICS\nI      expects a user ID and password in the HTTP header for the\nI      application request and rejects the request if authentication\nI      fails. If security is not enabled and no user ID is present in\nI      the HTTP header or in the URI map, the default user ID for the\nI      CICS region is used.\nN\nI      For other usage types, when authentication is required for the\nI      connection, so that CICS requests an authenticated user ID directly\nI      from the client, the default user ID that you specify in the\nI      URIMAP definition is not used. The authenticated user ID of the\nI      client is used instead, or if authentication fails, the request\nI      is rejected. Authentication procedures are specified by the\nI      AUTHENTICATE attribute of the TCPIPSERVICE definition for the\nI      connection.\nN\nI      For an application-generated response, if ANALYZER(YES)\nI      is specified, the USERID attribute is used as input to the\nI      analyzer program, but the analyzer program can override it.\nI      Alternatively, you can leave this attribute blank and let the\nI      analyzer program specify it. The analyzer is used only when\nI      USAGE(SERVER) is specified. A user ID specified by a client can\nI      also be changed by the analyzer program. If no user ID is\nI      specified by any of the methods that are mentioned, the default\nI      user ID for an application-generated response is the CICS default\nI      user ID.\nN\nI      For static responses, the USERID attribute does not apply. Resource\nI      security checking for static responses can be carried out by using\nI      the authenticated user ID of a client.\nN\nI      If surrogate user checking is enabled in the CICS region, with\nI      XUSER=YES specified as a system initialization parameter, CICS\nI      checks that the user ID used to install the URIMAP definition is\nI      authorized as a surrogate of the user ID specified for the USERID\nI      attribute. For more information about surrogate user checking, see\nI      Where surrogate user checking applies in Securing.\nN\nD    WEBSERVICE(name)\nI      This attribute is for USAGE(PIPELINE).\nN\nI      When a client makes an inbound web service request to CICS with the\nI      URI specified by this URIMAP definition, WEBSERVICE specifies the\nI      name of the web service. This name can be the 1- to 8-character\nI      name of a WEBSERVICE resource definition, or a name up to\nI      32 characters in mixed case that represents a web service that is\nI      generated by the CICS web services assistant.\nN\nI      A WEBSERVICE resource defines aspects of the runtime environment\nI      for a CICS application program that is deployed in a web services\nI      setting, where the mapping between application data structure and\nI      SOAP messages is generated by using the CICS tools.\nN\nI      This attribute is optional. However, if you do not specify a\nI      WEBSERVICE resource for USAGE(PIPELINE), the WEBSERVICE name must\nI      be resolved by a handler program in the pipeline, or you must use\nI      an alternative application or terminal handler in place of a\nI      WEBSERVICE resource.\nN\nNPIPELINE attributes:\nN--------------------\nD    HOST(hostname | *)\nI      This attribute is for all USAGE options.\nN\nI      hostname: Specifies the host name of the URI to which the URIMAP\nI        definition applies, or its IPv4 or IPv6 address. The name can be\nI        up to 116 characters long. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The HOST attribute must be present. The HOST attribute must\nI        contain only alphanumeric characters, hyphens -, colons :, or\nI        periods ., although you cannot use colons when you are specifying\nI        a character host name instead of an IP address. CICS validates\nI        the host name at define time. A host name can be entered in any\nI        case, but if a character host name is specified instead of an\nI        IP address, the host name is converted to lowercase in the\nI        URIMAP definition.\nN\nI        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or\nI        USAGE(JVMSERVER) you can use a single asterisk in the HOST\nI        attribute, making the URIMAP definition match any host name. You\nI        cannot use an asterisk as a wildcard in the HOST attribute with\nI        any other characters. Do not set a port number in this attribute\nI        for these usage types.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        host name that contains Unicode characters, you must convert the\nI        host name to Punycode format, which is described by RFC 3492.\nI        CICS does not provide a tool to carry out this conversion, but\nI        free applications are available on the Internet to support the\nI        conversion of Unicode to Punycode. If you use an asterisk as the\nI        host name, you do not need to use Punycode. For more information\nI        about IRIs, see Internationalized Resource Identifiers (IRIs) in\nI        Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. For more information about address formats, see\nI        IP addresses.\nN\nI        If CICS is an HTTP client and you specify USAGE(CLIENT), you can\nI        specify a port number in the request to the server:\nN\nI        -> Use the PORT attribute to specify the port number. PORT\nI           replaces the use of the HOST attribute for specifying a port\nI           number.\nN\nI        -> For compatibility purposes in existing programs that use\nI           native IPv4 addresses and host names, you can use the HOST\nI           attribute when you specify the port number. Native IPv4\nI           addresses and host names are the only formats in which you\nI           can specify the port number, together with a preceding colon;\nI           for example, 1.2.3.4:80 or hostname.com:443.\nN\nI        -> If you specify an IPv6 address (or a host name that resolves\nI           to an IPv6 address), ensure that you are operating in a\nI           dual-mode (IPv4 and IPv6) environment and that the client or\nI           server that you are communicating with is also operating in\nI           a dual-mode (IPv4 and IPv6) environment. For more information\nI           about IPv6, see Understanding IPv6 and CICS in Product\nI           overview.\nN\nI        -> For native IPv6 addresses, you must use the PORT attribute to\nI           specify the port number. IPv6 addresses require square\nI           brackets to separate the address from the port number, and,\nI           because square brackets are not fixed values in all EBCDIC\nI           character sets, square brackets are not supported in the\nI           HOST attribute.\nN\nI        -> Specify the port number only if it is different from the\nI           default for the scheme; 80 for HTTP without SSL, or 443 for\nI           HTTPS and HTTP with SSL.\nN\nI        -> If you specify a port number in the HOST attribute and a\nI           different port number in the PORT attribute, an error is\nI           returned. If you do not specify a port number in either the\nI           HOST or the PORT attribute, the default port number for the\nI           scheme is used.\nN\nD    LOCATION(url)\nI      This attribute is for USAGE(SERVER), USAGE(PIPELINE),\nI      and USAGE(ATOM).\nN\nI      url: specifies a URL of up to 255 characters to which the client\nI        request is redirected. The URL must be complete, including\nI        scheme, host, path components, and appropriate delimiters. CICS\nI        does not check that the URL is valid, so you must ensure that\nI        the destination exists and that the URL is specified correctly.\nN\nI        The description for the PATH attribute lists the characters that\nI        must be excluded from a URL. These characters must not be used\nI        in the LOCATION attribute. The exception is the # character,\nI        which can be used in the LOCATION attribute as a separator before\nI        a fragment identifier that follows the URL.\nN\nI        The REDIRECTTYPE attribute is used to specify the type of\nI        redirection. If temporary or permanent redirection is specified,\nI        the URL in the LOCATION attribute is used for redirection. If\nI        no redirection is specified, the URL in the LOCATION attribute\nI        is ignored. You can use the SET URIMAP command to change the\nI        REDIRECTTYPE attribute and the LOCATION attribute.\nN\nD    PIPELINE(name)\nI      This attribute is for USAGE(PIPELINE).\nN\nI      When a client makes an inbound web service request to CICS with\nI      the URI specified by this URIMAP definition, PIPELINE specifies\nI      the 1- to 8-character name of the PIPELINE resource definition for\nI      the web service. The PIPELINE resource definition provides\nI      information about the message handlers, which act on the service\nI      request from the client. PIPELINE resources in Reference System\nI      definition describes these resource definitions.\nN\nD    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)\nI      This attribute is for\nI      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      REDIRECTTYPE specifies the type of redirection for requests that\nI      match this URIMAP definition. The URL specified by the LOCATION\nI      attribute is used for redirection when required.\nN\nI      NONE: means that requests are not redirected. Any URL specified by\nI        the LOCATION attribute is ignored.\nN\nI      TEMPORARY: means that requests are redirected on a temporary basis.\nI        The URL specified by the LOCATION attribute is used for\nI        redirection, and the status code that is used for the response\nI        is 302 (Found).\nN\nI      PERMANENT: means that requests are redirected permanently. The URL\nI        specified by the LOCATION attribute is used for redirection, and\nI        the status code that is used for the response is\nI        301 (Moved Permanently).\nN\nI      You can use the SET URIMAP command to change the REDIRECTTYPE\nI      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)\nI      or REDIRECTTYPE(PERMANENT) is specified when you are creating a\nI      URIMAP definition, the following attributes are optional: ANALYZER,\nI      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,\nI      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to\nI      set the REDIRECTTYPE attribute to NONE after the URIMAP definition\nI      is installed, any of the listed attributes that are specified in\nI      the URIMAP definition are activated.\nN\nD    TCPIPSERVICE(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      name: specifies the 1- to 8-character name of a TCPIPSERVICE\nI        resource definition, with PROTOCOL(HTTP), that defines an inbound\nI        port to which this URIMAP definition relates. If this attribute\nI        is not specified, the URIMAP definition applies to a request on\nI        any inbound ports.\nN\nI      When a URIMAP definition with HTTPS as the scheme matches a request\nI      that a web client is making, CICS checks that the inbound port used\nI      by the request is using SSL. If SSL is not specified for the port,\nI      the request is rejected with a 403 (Forbidden) status code. When\nI      the URIMAP definition applies to all inbound ports, this check\nI      ensures that a web client cannot use an unsecured port to access\nI      a secured resource. No check is carried out for a URIMAP definition\nI      that specifies HTTP as the scheme, so web clients can use either\nI      unsecured or secured (SSL) ports to access these resources.\nN\nI      You specify the security measures that are applied for each port in\nI      the TCPIPSERVICE resource definition. You can choose whether to use\nI      SSL, and, if you do use SSL, you need to choose the exact security\nI      measures that are applied, for example, the authentication method,\nI      the sending of certificates by client and server, and encryption\nI      of messages. Read Security for CICS web support in Securing for\nI      more information about the security features that you can use to\nI      keep your CICS web support facility safe.\nN\nD    TRANSACTION(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).\nN\nI      name: specifies the 1-4 character name of an alias transaction that\nI        is to be used to run the application, or to start the pipeline.\nN\nI      The default alias transaction is different for each type of URIMAP:\nN\nI      -> USAGE(SERVER) uses the CWBA transaction\nN\nI      -> USAGE(PIPELINE) uses the CPIH transaction\nN\nI      -> USAGE(ATOM) uses the CW2A transaction\nN\nI      -> USAGE(JVMSERVER) uses the CJSA transaction\nN\nI      You can select a different transaction name for the purposes of\nI      security, monitoring and accounting, or transaction class\nI      limitation. Whatever name you choose for the alias transaction, it\nI      must always run the same program, which is determined by the\nI      USAGE attribute.\nN\nI      -> For USAGE(SERVER), the program is DFHWBA, which links to the\nI         application program named in the PROGRAM attribute of the URIMAP\nI         definition or named by the analyzer program.\nN\nI      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the\nI         pipeline that is named in the PIPELINE attribute and the web\nI         service that is named in the WEBSERVICE attribute, if specified.\nN\nI      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias\nI         program.\nN\nI      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks\nI         in the JVM server for an application request.\nN\nI      For USAGE(SERVER) only, if the ANALYZER attribute is specified as\nI      YES, the TRANSACTION attribute is used as input to the analyzer\nI      program, but the analyzer program can override it. Alternatively,\nI      you can leave this attribute blank and let the analyzer program\nI      specify it. The analyzer is not used for other types of URIMAP.\nN\nD    USERID(id)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided, USAGE(PIPELINE),\nI      USAGE(JVMSERVER), and USAGE(ATOM).\nN\nI      id: specifies a 1- to 8-character default user ID that can be used\nI        by any client. For an application-generated response or a web\nI        service, the alias transaction is attached under this user ID.\nN\nI      For USAGE(JVMSERVER), the user ID is used to attach a transaction\nI      to run work in the Liberty profile server. The transaction can be\nI      specified in the URI map or use the default transaction CJSA. The\nI      user ID is not used if basic authentication is enabled; CICS\nI      expects a user ID and password in the HTTP header for the\nI      application request and rejects the request if authentication\nI      fails. If security is not enabled and no user ID is present in\nI      the HTTP header or in the URI map, the default user ID for the\nI      CICS region is used.\nN\nI      For other usage types, when authentication is required for the\nI      connection, so that CICS requests an authenticated user ID directly\nI      from the client, the default user ID that you specify in the\nI      URIMAP definition is not used. The authenticated user ID of the\nI      client is used instead, or if authentication fails, the request\nI      is rejected. Authentication procedures are specified by the\nI      AUTHENTICATE attribute of the TCPIPSERVICE definition for the\nI      connection.\nN\nI      For an application-generated response, if ANALYZER(YES)\nI      is specified, the USERID attribute is used as input to the\nI      analyzer program, but the analyzer program can override it.\nI      Alternatively, you can leave this attribute blank and let the\nI      analyzer program specify it. The analyzer is used only when\nI      USAGE(SERVER) is specified. A user ID specified by a client can\nI      also be changed by the analyzer program. If no user ID is\nI      specified by any of the methods that are mentioned, the default\nI      user ID for an application-generated response is the CICS default\nI      user ID.\nN\nI      For static responses, the USERID attribute does not apply. Resource\nI      security checking for static responses can be carried out by using\nI      the authenticated user ID of a client.\nN\nI      If surrogate user checking is enabled in the CICS region, with\nI      XUSER=YES specified as a system initialization parameter, CICS\nI      checks that the user ID used to install the URIMAP definition is\nI      authorized as a surrogate of the user ID specified for the USERID\nI      attribute. For more information about surrogate user checking, see\nI      Where surrogate user checking applies in Securing.\nN\nD    WEBSERVICE(name)\nI      This attribute is for USAGE(PIPELINE).\nN\nI      When a client makes an inbound web service request to CICS with the\nI      URI specified by this URIMAP definition, WEBSERVICE specifies the\nI      name of the web service. This name can be the 1- to 8-character\nI      name of a WEBSERVICE resource definition, or a name up to\nI      32 characters in mixed case that represents a web service that is\nI      generated by the CICS web services assistant.\nN\nI      A WEBSERVICE resource defines aspects of the runtime environment\nI      for a CICS application program that is deployed in a web services\nI      setting, where the mapping between application data structure and\nI      SOAP messages is generated by using the CICS tools.\nN\nI      This attribute is optional. However, if you do not specify a\nI      WEBSERVICE resource for USAGE(PIPELINE), the WEBSERVICE name must\nI      be resolved by a handler program in the pipeline, or you must use\nI      an alternative application or terminal handler in place of a\nI      WEBSERVICE resource.\nN\nNSERVER attributes:\nN------------------\nD    ANALYZER(NO | YES)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided. For other usage\nI      types, the attribute is forced to NO.\nN\nI      Setting ANALYZER to NO is required for HTTP requests to be\nI      processed by directly attaching the user transaction. For more\nI      information, see HTTP requests are processed by directly attached\nI      user transactions. ANALYZER specifies whether an analyzer program\nI      is to be used in processing the HTTP request. The analyzer must be\nI      associated with the TCPIPSERVICE definition or definitions to which\nI      this URIMAP definition relates. (An analyzer program must be in the\nI      local CICS region.) YES runs the analyzer. NO means that the\nI      analyzer is not used.\nN\nI      The default analyzer DFHWBAAX and sample analyzer DFHWBADX do not\nI      analyze a request when a matching URIMAP definition is found for\nI      the request, even if the URIMAP specifies ANALYZER(YES). If an\nI      analyzer program is used, you can still specify the CONVERTER,\nI      TRANSACTION, USERID, and PROGRAM attributes. The values that you\nI      specify for these attributes are used as input to the analyzer\nI      program, but they can be overridden by it. Alternatively, you can\nI      leave these attributes blank and let the analyzer program specify\nI      them.\nN\nD    CHARACTERSET(characterset)\nI      This attribute is for USAGE(SERVER),\nI      where a static response is to be provided.\nN\nI      CHARACTERSET: specifies the 1- to 40-character name of the\nI        character set into which CICS converts the entity body of the\nI        response that is sent to the web client. CICS does not support\nI        all of the character sets that are named by IANA. HTML coded\nI        character sets in Reference -> Connectivity and standards lists\nI        the IANA character sets that are supported by CICS. The value of\nI        this attribute is included in the Content-Type header of the\nI        response.\nN\nI      You must specify CHARACTERSET if a static response is being\nI      provided and the MEDIATYPE attribute specifies a text type.\nN\nD    CONVERTER(name)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided.\nN\nI      name: specifies the 1- to 8-character name of a converter program\nI        that converts the request and response. Typically, a converter\nI        program transforms the HTTP request into a COMMAREA that can be\nI        used by an application program and transforms the output into an\nI        HTTP response. The converter program can be any converter program\nI        that is available in the local CICS region.\nN\nI      Unlike the relationship between the analyzer program and the\nI      TCPIPSERVICE definition, the converter program and the\nI      TCPIPSERVICE definition have no association.\nN\nI      If the ANALYZER attribute is specified as YES, the CONVERTER\nI      attribute is used as input to the analyzer program, but it can be\nI      overridden by the analyzer program. If a converter program is used,\nI      you can still specify the PROGRAM attribute of the URIMAP\nI      definition, but the values that you specify for this attribute can\nI      be overridden by the converter program. Alternatively, you can\nI      leave this attribute blank and let the converter program specify\nI      it.\nN\nD    HFSFILE(name)\nI      This attribute is for USAGE(SERVER), where a static\nI      response is to be provided.\nN\nI      name: specifies the fully qualified (absolute) or relative name of\nI        a z/OS UNIX System Services zFS file that forms the body of the\nI        static response that is sent to the HTTP request from the web\nI        client. Up to 255 characters can be used.\nN\nI       You can specify the name as an absolute path, including all\nI       directories and beginning with a slash; for example,\nI       /u/facts/images/bluefish.jpg. Alternatively, you can specify it as\nI       a relative path for example, facts/images/bluefish.jpg.\nN\nI      -> For a static response file for a URIMAP resource that is defined\nI         by online resource definition, the file path is either fully\nI         qualified, if prefixed with a forward slash /, or is relative to\nI         the HOME directory of the CICS region user ID.\nN\nI      -> For a static response file for a URIMAP resource that is defined\nI         in a CICS bundle, the file path is relative to the root\nI         directory of the CICS bundle. The zFS file must be packaged in\nI         the CICS bundle with the URIMAP resource. The MEDIATYPE and\nI         HOSTCODEPAGE attributes must be specified to inform CICS of the\nI         file type and the code page with which the file is encoded. When\nI         the file is defined in a CICS bundle and exported to zFS by\nI         using CICS Explorer, the code page with which the file is\nI         encoded is the same as the one used by CICS Explorer. For more\nI         information, see \"Referencing zFS artifacts in a bundle\".\nN\nI      If TEMPLATENAME or HFSFILE is specified, ANALYZER must be set to\nI      NO. Other attributes that relate only to application-generated\nI      responses (TRANSACTION, CONVERTER, and PROGRAM) must remain blank.\nN\nI      If you want to use path matching, include an asterisk as a wildcard\nI      character at the end of the path for the zFS file and also at the\nI      end of the path that is specified by the PATH attribute. CICS takes\nI      the portion of the path of each HTTP request that is covered by the\nI      wildcard character and substitutes it as the last part of the file\nI      path.\nN\nI      For example, you can create a URIMAP definition with the PATH\nI      attribute specified as:\nN\nI      findout/pictures/*\nN\nI      and the HFSFILE attribute that is specified as:\nN\nI      /u/facts/images/*\nN\nI      The URIMAP definition is used to process an incoming HTTP request\nI      http://www.example.com/findout/pictures/bluefish.jpg\nN\nI      CICS appends bluefish.jpg to the zFS file path specified in the\nI      URIMAP definition in place of the asterisk, so that the zFS file\nN\nI      /u/facts/images/bluefish.jpg\nN\nI      is used as the static response.\nN\nI      You cannot use an asterisk alone in the HFSFILE specification. At\nI      least one level of the directory structure must be specified.\nN\nI      If you are using IRIs (Internationalized Resource Identifiers)\nI      containing Unicode characters, the Unicode characters must be\nI      escaped to their percent-encoded representations in the zFS file\nI      name and in the corresponding path. Tools are available on the\nI      web to help you. Search the web for \"Unicode percent escaped\".\nM\nM        GOOGLE wants to change \"escaped\" to \"encoding\".\nM        https://en.wikipedia.org/wiki/Percent-encoding\nN\nI      A query string cannot be substituted into the zFS file contents,\nI      although you can define the zFS file as a CICS document template\nI      and specify it using the TEMPLATENAME attribute instead of the\nI      HFSFILE attribute.\nN\nD    HOST(hostname | *)\nI      This attribute is for all USAGE options.\nN\nI      hostname: Specifies the host name of the URI to which the URIMAP\nI        definition applies, or its IPv4 or IPv6 address. The name can be\nI        up to 116 characters long. The components of a URL in Product\nI        overview explains each of the components and how they are\nI        delimited.\nN\nI        The HOST attribute must be present. The HOST attribute must\nI        contain only alphanumeric characters, hyphens -, colons :, or\nI        periods ., although you cannot use colons when you are specifying\nI        a character host name instead of an IP address. CICS validates\nI        the host name at define time. A host name can be entered in any\nI        case, but if a character host name is specified instead of an\nI        IP address, the host name is converted to lowercase in the\nI        URIMAP definition.\nN\nI        When you specify USAGE(SERVER), USAGE(PIPELINE), USAGE(ATOM), or\nI        USAGE(JVMSERVER) you can use a single asterisk in the HOST\nI        attribute, making the URIMAP definition match any host name. You\nI        cannot use an asterisk as a wildcard in the HOST attribute with\nI        any other characters. Do not set a port number in this attribute\nI        for these usage types.\nN\nI        URIMAP resources support Internationalized Resource Identifiers\nI        (IRIs), which can contain Unicode characters. If you specify a\nI        host name that contains Unicode characters, you must convert the\nI        host name to Punycode format, which is described by RFC 3492.\nI        CICS does not provide a tool to carry out this conversion, but\nI        free applications are available on the Internet to support the\nI        conversion of Unicode to Punycode. If you use an asterisk as the\nI        host name, you do not need to use Punycode. For more information\nI        about IRIs, see Internationalized Resource Identifiers (IRIs) in\nI        Product overview.\nN\nI        You can specify IPv4 and IPv6 addresses in a number of acceptable\nI        formats. For more information about address formats, see\nI        IP addresses.\nN\nI        If CICS is an HTTP client and you specify USAGE(CLIENT), you can\nI        specify a port number in the request to the server:\nN\nI        -> Use the PORT attribute to specify the port number. PORT\nI           replaces the use of the HOST attribute for specifying a port\nI           number.\nN\nI        -> For compatibility purposes in existing programs that use\nI           native IPv4 addresses and host names, you can use the HOST\nI           attribute when you specify the port number. Native IPv4\nI           addresses and host names are the only formats in which you\nI           can specify the port number, together with a preceding colon;\nI           for example, 1.2.3.4:80 or hostname.com:443.\nN\nI        -> If you specify an IPv6 address (or a host name that resolves\nI           to an IPv6 address), ensure that you are operating in a\nI           dual-mode (IPv4 and IPv6) environment and that the client or\nI           server that you are communicating with is also operating in\nI           a dual-mode (IPv4 and IPv6) environment. For more information\nI           about IPv6, see Understanding IPv6 and CICS in Product\nI           overview.\nN\nI        -> For native IPv6 addresses, you must use the PORT attribute to\nI           specify the port number. IPv6 addresses require square\nI           brackets to separate the address from the port number, and,\nI           because square brackets are not fixed values in all EBCDIC\nI           character sets, square brackets are not supported in the\nI           HOST attribute.\nN\nI        -> Specify the port number only if it is different from the\nI           default for the scheme; 80 for HTTP without SSL, or 443 for\nI           HTTPS and HTTP with SSL.\nN\nI        -> If you specify a port number in the HOST attribute and a\nI           different port number in the PORT attribute, an error is\nI           returned. If you do not specify a port number in either the\nI           HOST or the PORT attribute, the default port number for the\nI           scheme is used.\nN\nD    HOSTCODEPAGE(code page)\nI      This attribute is for USAGE(SERVER), where\nI      a static response is to be provided.\nN\nI      code page: Specifies the 1- to 10-character name of the IBM code\nI        page (EBCDIC) in which the text document that forms the static\nI        response is encoded. CICS needs this information to convert the\nI        code pages for the entity body of the static response.\nN\nI        The standard CICS form of a host code page name consists of the\nI        code page number (or more generally CCSID) written by using\nI        3 - 5 decimal digits as necessary then padded with trailing\nI        spaces. For code page 37, which is fewer than 3 digits, the\nI        standard form is 037. CICS accepts any decimal number, padded\nI        with trailing spaces, in the range 1 - 65535 as a code page name,\nI        even if it is not in the standard form.\nN\nI        You must specify HOSTCODEPAGE if a static response is being\nI        provided and the MEDIATYPE attribute specifies a text type.\nN\nD    LOCATION(url)\nI      This attribute is for USAGE(SERVER), USAGE(PIPELINE),\nI      and USAGE(ATOM).\nN\nI      url: specifies a URL of up to 255 characters to which the client\nI        request is redirected. The URL must be complete, including\nI        scheme, host, path components, and appropriate delimiters. CICS\nI        does not check that the URL is valid, so you must ensure that\nI        the destination exists and that the URL is specified correctly.\nN\nI        The description for the PATH attribute lists the characters that\nI        must be excluded from a URL. These characters must not be used\nI        in the LOCATION attribute. The exception is the # character,\nI        which can be used in the LOCATION attribute as a separator before\nI        a fragment identifier that follows the URL.\nN\nI        The REDIRECTTYPE attribute is used to specify the type of\nI        redirection. If temporary or permanent redirection is specified,\nI        the URL in the LOCATION attribute is used for redirection. If\nI        no redirection is specified, the URL in the LOCATION attribute\nI        is ignored. You can use the SET URIMAP command to change the\nI        REDIRECTTYPE attribute and the LOCATION attribute.\nN\nD    MEDIATYPE(type)\nI      This attribute is for USAGE(SERVER), where a static\nI      response is to be provided.\nN\nI      type: Specifies the media type (data content) of the static\nI        response that CICS provides to the HTTP request; for example,\nI        image/jpg, text/html or text/xml. Up to 56 characters can be\nI        used. The media type must contain exactly one forward slash (/).\nI        The media type can be entered in uppercase or lowercase, but it\nI        is converted to lowercase in the URIMAP definition.\nN\nI        The name for each formally recognized type of data content is\nI        defined by IANA. A list is available at\nI        http://www.iana.org/assignments/media-types/. CICS creates a\nI        Content-Type header for the response by using the value of this\nI        attribute.\nN\nI        This attribute has no default, and it must be specified. If the\nI        MEDIATYPE attribute specifies a text type, such as a type that\nI        begins with text/, or a type that contains +xml, you must also\nI        specify the CHARACTERSET and HOSTCODEPAGE attributes so that\nI        code page conversion can take place. Text media types are\nI        identified by RFC 3023, which is available at\nI        http://www.ietf.org/rfc/rfc3023.txt.\nN\nI        For a dynamic (application-generated) response, this attribute\nI        is not used. The media type for the response is specified by the\nI        WEB SEND command.\nN\nD    PROGRAM(name)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided.\nN\nI      name: specifies the 1- to 8-character name of the user application\nI        program that composes the HTTP response. For CICS as an HTTP\nI        server, this attribute is required unless an analyzer or\nI        converter program is specified, or a template name or zFS file\nI        is specified, or redirection is specified.\nN\nI        If the ANALYZER attribute is specified as YES, or a converter\nI        program is specified in the CONVERTER attribute, the PROGRAM\nI        attribute is used as input to the analyzer or converter program,\nI        but it can be overridden by those programs. Alternatively, you\nI        can leave this attribute blank and let the analyzer or converter\nI        program specify it.\nN\nD    REDIRECTTYPE(NONE | TEMPORARY | PERMANENT)\nI      This attribute is for\nI      USAGE(SERVER), USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      REDIRECTTYPE specifies the type of redirection for requests that\nI      match this URIMAP definition. The URL specified by the LOCATION\nI      attribute is used for redirection when required.\nN\nI      NONE: means that requests are not redirected. Any URL specified by\nI        the LOCATION attribute is ignored.\nN\nI      TEMPORARY: means that requests are redirected on a temporary basis.\nI        The URL specified by the LOCATION attribute is used for\nI        redirection, and the status code that is used for the response\nI        is 302 (Found).\nN\nI      PERMANENT: means that requests are redirected permanently. The URL\nI        specified by the LOCATION attribute is used for redirection, and\nI        the status code that is used for the response is\nI        301 (Moved Permanently).\nN\nI      You can use the SET URIMAP command to change the REDIRECTTYPE\nI      attribute and the LOCATION attribute.If REDIRECTTYPE(TEMPORARY)\nI      or REDIRECTTYPE(PERMANENT) is specified when you are creating a\nI      URIMAP definition, the following attributes are optional: ANALYZER,\nI      CONVERTER, HFSFILE, PIPELINE, PROGRAM, TEMPLATENAME, TRANSACTION,\nI      USERID, and WEBSERVICE. If you use a CEMT or EXEC CICS command to\nI      set the REDIRECTTYPE attribute to NONE after the URIMAP definition\nI      is installed, any of the listed attributes that are specified in\nI      the URIMAP definition are activated.\nN\nD    TCPIPSERVICE(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE), and USAGE(ATOM).\nN\nI      name: specifies the 1- to 8-character name of a TCPIPSERVICE\nI        resource definition, with PROTOCOL(HTTP), that defines an inbound\nI        port to which this URIMAP definition relates. If this attribute\nI        is not specified, the URIMAP definition applies to a request on\nI        any inbound ports.\nN\nI      When a URIMAP definition with HTTPS as the scheme matches a request\nI      that a web client is making, CICS checks that the inbound port used\nI      by the request is using SSL. If SSL is not specified for the port,\nI      the request is rejected with a 403 (Forbidden) status code. When\nI      the URIMAP definition applies to all inbound ports, this check\nI      ensures that a web client cannot use an unsecured port to access\nI      a secured resource. No check is carried out for a URIMAP definition\nI      that specifies HTTP as the scheme, so web clients can use either\nI      unsecured or secured (SSL) ports to access these resources.\nN\nI      You specify the security measures that are applied for each port in\nI      the TCPIPSERVICE resource definition. You can choose whether to use\nI      SSL, and, if you do use SSL, you need to choose the exact security\nI      measures that are applied, for example, the authentication method,\nI      the sending of certificates by client and server, and encryption\nI      of messages. Read Security for CICS web support in Securing for\nI      more information about the security features that you can use to\nI      keep your CICS web support facility safe.\nN\nD    TEMPLATENAME(name)\nI      This attribute is for USAGE(SERVER), where a\nI      static response is to be provided.\nN\nI      name: specifies the 1- to 48-character name of a CICS document\nI        template that forms the body of the static response that is sent\nI        to the HTTP request from the web client. It must be defined by\nI        using a DOCTEMPLATE resource definition, and the TEMPLATENAME\nI        attribute of that definition specifies the name that is used in\nI        the URIMAP definition. For more information, see CICS documents\nI        and document templates.\nN\nI      If you specify TEMPLATENAME or HFSFILE, you must set ANALYZER to\nI      NO. The other attributes that relate only to application-generated\nI      responses (TRANSACTION, CONVERTER, and PROGRAM) must remain blank.\nN\nI      If you want to use path matching, include an asterisk as a wildcard\nI      character at the end of the name of the CICS document template and\nI      also at the end of the path that is specified by the PATH\nI      attribute. CICS takes the portion of each HTTP requests path that\nI      is covered by the wildcard character and substitutes it as the last\nI      part of the template name.\nN\nI      For example, you can create a URIMAP definition with the PATH\nI      attribute specified as:\nN\nI      findout/about/*\nN\nI      and the TEMPLATENAME attribute that is specified as:\nN\nI      templates.facts.*\nN\nI      The URIMAP definition is used to process an incoming HTTP request\nI      http://www.example.com/findout/about/fish.html\nN\nI      CICS appends fish.html to the template name specified in the URIMAP\nI      definition in place of the asterisk, so that the template\nN\nI      templates.facts.fish.html\nN\nI      is used to form the static response.\nN\nI      Specifying an asterisk alone for the TEMPLATENAME attribute means\nI      that the selected template has the same name as the part of the\nI      URL that corresponds to the wildcard character in the PATH\nI      attribute.\nN\nI      When you specify the TEMPLATENAME attribute, if a query string is\nI      present on the URI, but is not used in the PATH attribute, CICS\nI      automatically passes the content of the query string into the named\nI      CICS document template as a symbol list. If you want to use the\nI      content of the query string in the document template, include\nI      appropriate variables in your document template to be substituted\nI      for the content of the query string.\nN\nD    TRANSACTION(name)\nI      This attribute is for USAGE(SERVER),\nI      USAGE(PIPELINE) USAGE(ATOM), and USAGE(JVMSERVER).\nN\nI      name: specifies the 1-4 character name of an alias transaction that\nI        is to be used to run the application, or to start the pipeline.\nN\nI      The default alias transaction is different for each type of URIMAP:\nN\nI      -> USAGE(SERVER) uses the CWBA transaction\nN\nI      -> USAGE(PIPELINE) uses the CPIH transaction\nN\nI      -> USAGE(ATOM) uses the CW2A transaction\nN\nI      -> USAGE(JVMSERVER) uses the CJSA transaction\nN\nI      You can select a different transaction name for the purposes of\nI      security, monitoring and accounting, or transaction class\nI      limitation. Whatever name you choose for the alias transaction, it\nI      must always run the same program, which is determined by the\nI      USAGE attribute.\nN\nI      -> For USAGE(SERVER), the program is DFHWBA, which links to the\nI         application program named in the PROGRAM attribute of the URIMAP\nI         definition or named by the analyzer program.\nN\nI      -> For USAGE(PIPELINE), the program is DFHPIDSH, which starts the\nI         pipeline that is named in the PIPELINE attribute and the web\nI         service that is named in the WEBSERVICE attribute, if specified.\nN\nI      -> For USAGE(ATOM), the program is DFHW2A, the W2 domain alias\nI         program.\nN\nI      -> For USAGE(JVMSERVER), the program is DFHSJTHP, which runs tasks\nI         in the JVM server for an application request.\nN\nI      For USAGE(SERVER) only, if the ANALYZER attribute is specified as\nI      YES, the TRANSACTION attribute is used as input to the analyzer\nI      program, but the analyzer program can override it. Alternatively,\nI      you can leave this attribute blank and let the analyzer program\nI      specify it. The analyzer is not used for other types of URIMAP.\nN\nD    USERID(id)\nI      This attribute is for USAGE(SERVER), where an\nI      application-generated response is to be provided, USAGE(PIPELINE),\nI      USAGE(JVMSERVER), and USAGE(ATOM).\nN\nI      id: specifies a 1- to 8-character default user ID that can be used\nI        by any client. For an application-generated response or a web\nI        service, the alias transaction is attached under this user ID.\nN\nI      For USAGE(JVMSERVER), the user ID is used to attach a transaction\nI      to run work in the Liberty profile server. The transaction can be\nI      specified in the URI map or use the default transaction CJSA. The\nI      user ID is not used if basic authentication is enabled; CICS\nI      expects a user ID and password in the HTTP header for the\nI      application request and rejects the request if authentication\nI      fails. If security is not enabled and no user ID is present in\nI      the HTTP header or in the URI map, the default user ID for the\nI      CICS region is used.\nN\nI      For other usage types, when authentication is required for the\nI      connection, so that CICS requests an authenticated user ID directly\nI      from the client, the default user ID that you specify in the\nI      URIMAP definition is not used. The authenticated user ID of the\nI      client is used instead, or if authentication fails, the request\nI      is rejected. Authentication procedures are specified by the\nI      AUTHENTICATE attribute of the TCPIPSERVICE definition for the\nI      connection.\nN\nI      For an application-generated response, if ANALYZER(YES)\nI      is specified, the USERID attribute is used as input to the\nI      analyzer program, but the analyzer program can override it.\nI      Alternatively, you can leave this attribute blank and let the\nI      analyzer program specify it. The analyzer is used only when\nI      USAGE(SERVER) is specified. A user ID specified by a client can\nI      also be changed by the analyzer program. If no user ID is\nI      specified by any of the methods that are mentioned, the default\nI      user ID for an application-generated response is the CICS default\nI      user ID.\nN\nI      For static responses, the USERID attribute does not apply. Resource\nI      security checking for static responses can be carried out by using\nI      the authenticated user ID of a client.\nN\nI      If surrogate user checking is enabled in the CICS region, with\nI      XUSER=YES specified as a system initialization parameter, CICS\nI      checks that the user ID used to install the URIMAP definition is\nI      authorized as a surrogate of the user ID specified for the USERID\nI      attribute. For more information about surrogate user checking, see\nI      Where surrogate user checking applies in Securing.\nN\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG36": {"ttr": 11266, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG36\nTCICS\nT-RDG\nT-Chapter 36. WEBSERVICE resources\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180205-091055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 36. WEBSERVICE resources\nN================================\nNA WEBSERVICE resource defines aspects of the run time environment for\nNa CICS application program deployed in a web services setting, where\nNthe mapping between application data structure and SOAP messages has\nNbeen generated using the CICS web services assistant. Although CICS\nNprovides the usual resource definition mechanisms for WEBSERVICE\nNresources, they are typically installed dynamically, using the output\nNproduced by the assistant.\nN\nNThe aspects of the run time environment that are defined by the\nNWEBSERVICE resource are:\nN\nNA pipeline\nN----------\nNDefines the set of message handlers that operate on web service\nNrequests and responses. The WEBSERVICE resource specifies a separate\nNPIPELINE resource which, in turn, specifies the pipeline configuration\nNfile.\nN\nNA web service binding file\nN--------------------------\nNContains information that is used at run time to perform the mapping\nNbetween application data structures and SOAP messages. The web service\nNbinding file is generated by the CICS-supplied tools.\nN\nNA web service description\nN-------------------------\nNThe web services description is used only when runtime validation of\nNSOAP messages is required. Validation of each message is performed\nNagainst its schema, which is imbedded within the web service\nNdescription.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3601": {"ttr": 11268, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3601\nTCICS\nT-RDG\nT-Chapter 36. WEBSERVICE resources -Syntax\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180210-153055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 36. WEBSERVICE resources\nN================================\nNWEBSERVICE attributes\nN---------------------\nNDescribes the syntax and attributes of the WEBSERVICE resource.\nN\nNSyntax:\nN-------\nD  DEFINE\nD    WEBSERVICE(name)\nI      Specifies the 1-8 character name of the WEBSERVICE\nI      resource.\nN\nI      It is preferable not to use names that start with DFH because\nI      these characters are reserved for use by CICS. CICS can delete or\nI      discard them and replace them with CICS resources when you upgrade\nI      or provide new function or fixes.\nN\nD    GROUP(groupname)\nI      Every resource definition must have a GROUP name.\nI      The resource definition becomes a member of the group and is\nI      installed in the CICS system when the group is installed.\nN\nI      The GROUP name can be up to 8 characters in length. Lowercase\nI      characters are treated as uppercase characters.\nN\nD    DESCRIPTION(text)\nI      You can provide a description of the resource that\nI      you are defining in this field. The description text can be up to\nI      58 characters in length. No restrictions apply to the characters\nI      that you can use. However, if you use parentheses, ensure that for\nI      each left parenthesis there is a matching right parenthesis. If you\nI      use the CREATE command, for each single apostrophe in the text,\nI      code two apostrophes.\nN\nD    ARCHIVEFILE(hfsfile)\nI      Specifies the 1-255 character fully qualified\nI      or relative name of an archive that contains one or more WSDL\nI      files. The supported format for the archive is .zip.\nN\nI      -> For an archive for a WEBSERVICE resource defined by online\nI         resource definition, the file path is either fully qualified,\nI         if prefixed with a forward slash (/), or is relative to the\nI         HOME directory of the CICS region user ID.\nN\nI      -> For an archive for a WEBSERVICE resource defined in a CICS\nI         bundle, the file path is relative to the root directory of the\nI         CICS bundle. The zFS file must be packaged in the CICS bundle\nI         with the WEBSERVICE resource. For more information, see\nI        \"Referencing zFS artifacts in a bundle\".\nN\nD    PIPELINE(pipelinename)\nI      Specifies the 1-8 character name of the\nI      PIPELINE resource with which this WEBSERVICE resource is\nI      associated.\nN\nD    VALIDATION(NO | YES)\nI      Specifies whether full validation of SOAP\nI      messages against the corresponding schema in the web service\nI      description should be performed at run time. Validating a SOAP\nI      message against its schema incurs considerable processing overhead,\nI      and you should normally specify VALIDATION(NO).\nN\nI      Full validation ensures that all SOAP messages that are sent and\nI      received are valid XML with respect to the XML schema. If\nI      VALIDATION(NO) is specified, checking is performed to ensure that\nI      the message contains well-formed XML, but there is no guarantee\nI      that the XML is valid.\nN\nD    WSBIND(hfsfile)\nI      Specifies the 1-255 character fully-qualified or\nI      relative name of the web service binding file on z/OS UNIX.\nN\nI      -> For a web service binding file for a WEBSERVICE resource\nI         defined by online resource definition, the file path is either\nI         fully qualified, if prefixed with a forward slash (/), or is\nI         relative to the HOME directory of the CICS region user ID.\nN\nI      -> For a web service binding file for a WEBSERVICE defined in a\nI         CICS bundle, the file path is relative to the root directory\nI         of the CICS bundle. The zFS file must be packaged in the CICS\nI         bundle with the WEBSERVICE resource. For more information, see\nI         \"Referencing zFS artifacts in a bundle\".\nN\nD    WSDLFILE(hfsfile)\nI      Specifies the 1-255 character fully-qualified or\nI      relative name of the web service description (WSDL) file on\nI      z/OS UNIX. This file is used when full runtime validation is\nI      active.\nN\nI      -> For a web service description file for a WEBSERVICE resource\nI         defined by online resource definition, the file path is either\nI         fully qualified, if prefixed with a forward slash (/), or is\nI         relative to the HOME directory of the CICS region user ID.\nN\nI      -> For a web service description file for a WEBSERVICE resource\nI         defined in a CICS bundle, the file path is relative to the\nI         root directory of the CICS bundle. The zFS file must be packaged\nI         in the CICS bundle with the WEBSERVICE resource. For more\nI         information, see \"Referencing zFS artifacts in a bundle\".\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG37": {"ttr": 11270, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG37\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180203-133055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNUse the CEDA transaction to add, remove, or change resource\nNdefinitions online.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3711": {"ttr": 11272, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3711\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA ADD command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA ADD command\nN--------------------\nNUse the CEDA ADD command to add a group to a list on the CSD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3712": {"ttr": 11274, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3712\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA ALTER command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA ALTER command\nN--------------------\nNUse the CEDA ALTER command to change some or all of the attributes of\nNan existing resource definition.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3713": {"ttr": 11276, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3713\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA APPEND command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA APPEND command\nN-----------------------\nNUse the CEDA APPEND command to append the groups in one list on the\nNCSD to the end of another list.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3714": {"ttr": 11278, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3714\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA CHECK command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA CHECK command\nN----------------------\nNUse the CEDA CHECK command to check the consistency of a set of\nNresource definitions on the CSD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3715": {"ttr": 11280, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3715\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA COPY command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA COPY command\nN---------------------\nNUse the CEDA COPY command to copy a resource definition, either within\nNthe same group or to a different group on the CSD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3716": {"ttr": 11282, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3716\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA DEFINE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA DEFINE command\nN-----------------------\nNUse the CEDA DEFINE command to create new resource definitions on the\nNCSD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3717": {"ttr": 11284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3717\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA DELETE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA DELETE command\nN-----------------------\nNUse the CEDA DELETE command to delete one or more resource definitions\nNfrom the CSD file.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3718": {"ttr": 11286, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3718\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA DISPLAY command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA DISPLAY command\nN------------------------\nNUse the CEDA DISPLAY command to display one or more group names, list\nNnames, or resources.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3719": {"ttr": 11288, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3719\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA EXPAND command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA EXPAND command\nN-----------------------\nNUse the CEDA EXPAND command to display the resource definitions that\nNare contained in one or more groups or lists. You can enter other CEDA\nNcommands against the resource names that are displayed.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3720": {"ttr": 11290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3720\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA INSTALL command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA INSTALL command\nN------------------------\nNUse the CEDA INSTALL command to make the resource definitions in the\nNnamed group or group list available to the active CICS system.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3721": {"ttr": 11292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3721\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA LOCK command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA LOCK command\nN---------------------\nNUse the CEDA LOCK command to restrict update and delete access to a\nNsingle operator identifier.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3722": {"ttr": 11294, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3722\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA MOVE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA MOVE command\nN---------------------\nNUse the CEDA MOVE command to move one or more resource definitions from\nNone group to another.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3723": {"ttr": 11521, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3723\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA REMOVE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA REMOVE command\nN-----------------------\nNUse the CEDA REMOVE command to remove the name of a group from a list.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3724": {"ttr": 11523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3724\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA RENAME command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA RENAME command\nN-----------------------\nNUse the CEDA RENAME command to change the name of a resource on the CSD\nNor move it to a different group.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3725": {"ttr": 11525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3725\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA UNLOCK command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA UNLOCK command\nN-----------------------\nNUse the CEDA UNLOCK command to remove the lock from a group or a list\nNof definitions.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3726": {"ttr": 11527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3726\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA USERDEFINE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA USERDEFINE command\nN---------------------------\nNUse the CEDA USERDEFINE command to create a new resource definition on\nNthe CSD with user-defined default attributes.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3727": {"ttr": 11529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3727\nTCICS\nT-RDG\nT-Chapter 37. RDO -Transaction CEDA\nT-The CEDA VIEW command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-114055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 37. Resource definition online (RDO) transaction CEDA\nN=============================================================\nNThe CEDA VIEW command\nN---------------------\nNUse the CEDA VIEW command to view the attributes of a resource\nNdefinition on the CSD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG38": {"ttr": 11531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG38\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP -The resource definition batch utility\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180203-133055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNThe CICS system definition utility program, DFHCSDUP, is a component\nNof resource definition online (RDO). DFHCSDUP is an offline utility\nNprogram that allows you to read from and write to a CICS system\nNdefinition (CSD) file, either while CICS is running or while it is\nNinactive.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3801": {"ttr": 11533, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3801\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-Invoking DFHCSDUP as a batch program\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180203-133055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe example job shows you the job control statements that you can use\nNto invoke DFHCSDUP as a batch program.\nN\nD//CSDJOB JOB accounting info,name,MSGLEVEL=1\nD//ST01#01 EXEC PGM=DFHCSDUP,REGION=32M,\nD//             PARM='CSD(READWRITE),PAGESIZE(60),NOCOMPAT'\nD//STEPLIB   DD DISP=SHR,DSN=CICSTS53.CICS.SDFHLOAD\nD//SYSIN     DD * ...\n*DFHCSDUP commands\nI  ADd Group ( groupname ) LIst ( listname )\nI    After ( groupname2 ) | Before ( groupname3 )\nI*\nI  ALter resource-type(resource-name) Group ( groupname )\nI    attribute list ( new value )\nM    See Chapter 5 for the resource types and their attributes.\nI*\nI  APpend FRomcsd ( ddname ) LIst ( listname1 ) To ( listname2 )\nI*\nI  Copy Group ( groupname1 ) TO(groupname2) Merge\nI    resource-type(resource-name)\nM    See Chapter 5 for the resource types and their attributes.\nI*\nI  DEFine resource-type(resource-name) Group ( groupname )\nI    attribute list ( new value )\nM    See Chapter 5 for the resource types and their attributes.\nI*\nI  DELete ALL | resource-type(resource-name)\nI    Group ( groupname ) | List ( listname)\nI    Remove\nM    See Chapter 5 for the resource types and their attributes.\nI  EXtract Group ( groupname ) | LIst ( listname )\nI    USerprogram ( DFH0CBDC | DFHxCRFy | DFHxFORy | your-program )\nI    Objects\nM      DFH0CBDC creates DEFINE statements to //CBDOUT.\nI*\nI*  INITialize\nI*   Wipes out anything you previously had in the DFHCSD!\nI*\nI  LIst All | Group ( groupname ) | LIst ( listname )\nI    Objects\nI    Sigsumm\nI*\nI  PROCESS Apar ( aparnumber )\nI*\nI  Remove Group ( groupname ) LIst ( listname )\nI*\nI  SCAN resource-type(resource-name) ALIAS ( aliasname )\nI*\nI  Service FRomcsd ( ddname ) LEvel ( nnn )\nI*\nI  UPgrade USing ( filename ) Replace\nI*\nI  USERDEFINE resource-type(resource-name) Group ( groupname )\nI    Attribute list ( value )\nM    See Chapter 5 for the resource types and their attributes.\nI*\nI  VERIFY\nD/*\nD//SYSPRINT  DD SYSOUT=*\nD//DFHCSD    DD DISP=SHR,DSN=CICSTS53.CICS.DFHCSD   <==TO\nI  Optional DD statements shown for reference only.\nD//fromcsd   DD DISP=SHR,DSN=CICSTS52.CICS.DFHCSD   <==FROM\nD//*\nD//indd      DD DISP=SHR,DSN=extract.input.dataset\nD//CBDOUT    DD DISP=SHR,DSN=extract.output.dataset <==DFH0CBDC\nD//* or\nD//outdd     DD SYSOUT=*\nD//*\nD//* End of job CRDG3801.\nD//\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3811": {"ttr": 11535, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3811\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP ADD command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180203-133055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP ADD command\nN------------------------\nNAdd a group to a list.\nN\nNSyntax\nN------\nD  ADd Group ( groupname ) LIst ( listname )\nD    After ( groupname2 ) | Before ( groupname3 )\nN\nNOptions\nN-------\nN    Group(groupname): specifies the name of the group to be added. The\nN                    name must not already exist in the list. A generic\nN                    group name is not accepted.\nN\nN    LIst(listname): specifies the name of the list to which the group\nN                    is to be added. If the list does not already exist,\nN                    a new one is created. A generic list name is not\nN                    accepted.\nN\nN    After(groupname2): specify AFTER to place the new group name after\nN                       the existing group name. The group name is added\nN                       at the end of the list if BEFORE or AFTER is not\nN                       specified.\nN\nN    Before(groupname3): specify BEFORE to place the new group name\nN                        before the existing group name. The group name\nN                        is added at the end of the list if BEFORE or\nN                        AFTER is not specified.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3812": {"ttr": 11537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3812\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP ALTER command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP ALTER command\nN--------------------------\nNChange some or all of the attributes of an existing resource\nNdefinition.\nN\nNSyntax\nN------\nD  ALter resource-type(resource-name) Group ( groupname )\nD    attribute list ( new value )\nN\nNOptions\nN-------\nN    Attribute list: specifies the attributes to be altered.\nM      See Chapter 5 for the resource types and their attributes.\nN\nN    Group(groupname): specifies the name of the group containing the\nN                      resource to be altered.\nN\nN    resource-type(resource-name): specifies the resource whose\nN                                  attributes you want to alter. You can\nN                                  specify a generic name by using the\nN                                  characters + and *.\nN\nM      See Chapter 5 for the resource types and their attributes.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3813": {"ttr": 11539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3813\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP APPEND command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP APPEND command\nN---------------------------\nNAdd the groups in one list to the end of another list.\nN\nNNo duplicate group names are allowed in a list. If DFHCSDUP finds any\nNduplicate names during the APPEND operation it ignores them, and they\nNare not appended. The DFHCSDUP output listing contains a warning\nNmessage if this happens.\nN\nNSyntax\nN------\nD  APpend FRomcsd ( ddname ) LIst ( listname1 ) To ( listname2 )\nN\nNOptions\nN-------\nN    FRomcsd(ddname): specifies the ddname of the secondary CSD file\nN                     from which you are appending listname1.\nN\nN    List(listname1): specifies the name of the list that is appended.\nN                     Do not use a generic list name. The list being\nN                     appended can be on the primary CSD file, or on\nN                     another CSD file. If you are appending from\nN                     another CSD file, you must identify it by\nN                     specifying the FROMCSD parameter.\nN\nN    To(listname2): specifies the name of the list to which you want\nN                   the group names appended. If you are appending from\nN                   another CSD file, you can give this list the same\nN                   name as the one you are appending from. Do not use\nN                   a generic list name. If this target list already\nN                   exists, the source list is appended to the end of\nN                   it. If the target list does not exist, it is\nN                   created. (In effect, you are copying the source\nN                   list.)\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3814": {"ttr": 11541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3814\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP COPY command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP COPY command\nN-------------------------\nNCopy resource definitions from one group to another group.\nN\nNSyntax\nN------\nD  Copy Group ( groupname1 ) TO(groupname2)\nD    resource-type(resource-name)\nD    Merge | Replace\nD    FRomcsd ( ddname )\nN\nNOptions\nN-------\nN    FRomcsd(ddname): Specifies the ddname of the secondary CSD file\nN                     from which you are copying the group groupname1.\nN\nN    Group(groupname1): Specifies the name of the group to be copied.\nN                       You can specify a generic name for the group by\nN                       using an asterisk (*). The default action is to\nN                       copy the whole group. Alternatively, you can\nN                       specify one of the resource type options and\nN                       name an individual resource definition of that\nN                       type to be copied.\nN\nN    resource-type(resource-name)\nM      See Chapter 5 for the resource types and their attributes.\nN\nN    MErge: Specifies that if groupname2 already exists and duplicate\nN           definitions occur, the original definitions in groupname2\nN           are preserved.\nN\nN    Replace: Specifies that if groupname2 already exists and duplicate\nN             definitions occur, the definitions in groupname1 replace\nN             those in groupname2.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3815": {"ttr": 11543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3815\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP DEFINE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP DEFINE command\nN---------------------------\nNCreate new resource definitions.\nN\nNSyntax\nN------\nD  DEFine resource-type(resource-name) Group ( groupname )\nD    attribute list ( value )\nN\nNOptions\nN-------\nN    Attribute list: The attribute list depends on the resource type\nN                    being defined; some resources have attributes that\nN                    must be included in the definition. For a\nN                    description of the attributes and default values of\nN                    each resource type, see Chapter 5 for the resource\nN                    types and their attributes. Attributes that you do\nN                    not specify are given default values.\nN\nN    Group(groupname): Specifies the name of the group that contains\nN                      the resource definition that is created. Do not\nN                      use a generic group name. If you specify the name\nN                      of a group that does not already exist, the group\nN                      is created.\nN\nN    resource-type(resource-name): Specifies the name of the resource\nN                                  you want to  define. Do not use a\nN                                  generic resource name. The resource\nN                                  option must always be the first\nN                                  operand of the DEFINE command.\nN\nM      See Chapter 5 for the resource types and their attributes.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3816": {"ttr": 11777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3816\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP DELETE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP DELETE command\nN---------------------------\nNDelete a single resource definition in a group, all the resource\nNdefinitions in a group, or all the group names in a group list.\nN\nNSyntax\nN------\nD  DELete ALL | resource-type(resource-name) Group ( groupname )\nD    Remove\nD    List ( listname )\nN\nNOptions\nN-------\nN    Group(groupname): If this is specified alone, it indicates the name\nN                      of the group to be deleted. If a resource is also\nN                      specified, it indicates the group to which the\nN                      resource belongs.\nN\nN                      Do not use a generic group name.\nN\nN    List(listname): specifies the name of the list to be deleted.\nN\nN                    Do not use a generic list name.\nN\nN    Remove: If this is specified when the group is deleted, the group\nN            is removed from all lists that contained it unless UPGRADE\nN            commands are running.\nN\nN    resource-type(resource-name): specifies the name of the resource to\nN                                  be deleted. Do not use a generic\nN                                  resource name.\nN\nN                                  This operand can be used only with\nN                                  the GROUP option.\nN\nM      See Chapter 5 for the resource types.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3817": {"ttr": 11779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3817\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP EXTRACT command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP EXTRACT command\nN----------------------------\nNExtract a resource definition, group, or list from the CSD file.\nN\nNSyntax\nN------\nD  EXtract Group ( groupname )\nD    LIst ( listname )\nD    USerprogram ( DFHxCRFy | DFHxFORy | DFH0CBDC | user program )\nD    Objects\nN\nNOptions\nN-------\nN    Group(groupname): Specifies only those resource definitions within\nN                      the named group. You can specify a generic group\nN                      name.\nN\nN    LIst(listname): Specifies only those resource definitions within\nN                    the groups contained in the named list. You can use\nN                    a generic list name only if you are not using the\nN                    OBJECTS option.\nN\nN    Objects: Returns the detail of each resource definition. You can\nN             extract resource definition data at two levels of detail:\nN\nN             -> Without the OBJECTS option, the command extracts either\nN                the names of all the groups within a specified list, or\nN                the names of all the resource definitions within a\nN                specified group.\nN\nN             -> With the OBJECTS option, all the resource definition\nN                attributes are also extracted.\nN\nN             You must specify OBJECTS for the supplied sample user\nN             programs DFHxCRFy and DFHxFORy. It is optional for\nN             DFH0CBDC and user-written user programs.\nN\nN    USerprogram(user-written program): Specifies the name of the\nN                                       user-written program that is to\nN                                       process the data retrieved by\nN                                       the EXTRACT command. You must\nN                                       supply a USERPROGRAM value.\nN\nN      CICS supplies three types of sample user program: DFHxCRFy,\nN      DFHxFORy, and DFH0CBDC. The letter x in the program name is $\nN      for assembler or PL/I and 0 for COBOL. The letter y in the\nN      program name denotes the programming language, where y=A is the\nN      assembler version, y=C is the COBOL version, and y=P is the\nN      PL/I version.\nN\nN      All other user programs are available in source form, in\nN      prefix.SDFHSAMP, and the assembler versions are also available\nN      in pregenerated form in prefix.SDFHLOAD.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3818": {"ttr": 11781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3818\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP INITIALIZE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP INITIALIZE command\nN-------------------------------\nNPrepare a newly defined data set for use as a CSD file.\nN\nNSyntax\nN------\nD  INITialize\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3819": {"ttr": 11783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3819\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP LIST command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP LIST command\nN-------------------------\nNProduces listings of the current status of the CSD file.\nN\nMWell, status is rather vague, it produces a report showing:\nM-> The groups in a list\nM   OR\nM-> The resource-types in a group, optionally showing the attribute-list\nM   if you specified Objects.\nN\nNSyntax\nN------\nD  LIst All Group ( groupname ) LIst ( listname )\nD    Objects\nD    Sigsumm\nN\nNOptions\nN-------\nN    Group(groupname): Specifies only those resource definitions within\nN                      the named group. You can specify a generic group\nN                      name.\nN\nN    LIst(listname): Specifies only those resource definitions within\nN                    the groups contained in the named list. You can use\nN                    a generic list name only if you are not using the\nN                    OBJECTS option.\nN\nN    Objects: Specifies the level of detail required for each resource\nN             definition. You can extract resource definition data at\nN             two levels of detail:\nN\nN             -> Without the OBJECTS option, the command extracts either\nN                the names of all the groups in a specified list or the\nN                names of all the resource definitions in a specified\nN                group.\nN\nN             -> With the OBJECTS option, all the resource definition\nN                attributes are also extracted, including the definition\nN                signature fields.\nN\nN    Sigsumm: Shows the definition signature for each of the resource\nN             definitions displayed.\nI\nIExample:\nI--------\nI  LIST ALL OBJECTS\nI  LIST GROUP(DEMO*) OBJECTS\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3820": {"ttr": 11785, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3820\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP PROCESS command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP PROCESS command\nN----------------------------\nNApply maintenance to the CSD file for a specific APAR.\nN\nNSyntax\nN------\nD  PROCESS Apar ( aparnumber )\nN\nNOptions\nN-------\nN    Apar(aparnumber): The number of the APAR providing the maintenance;\nN                      for example, PROCESS APAR(PQ12417) is used to\nN                      apply maintenance for APAR PQ12417.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3821": {"ttr": 11787, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3821\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP REMOVE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP REMOVE command\nN---------------------------\nNRemove a group name from a list.\nN\nNSyntax\nN------\nD  Remove Group ( groupname ) LIst ( listname )\nN\nNOptions\nN-------\nN    Group(groupname): specifies the name of the group to be removed.\nN                      Do not use a generic group name.\nN\nN    LIst(listname): specifies the name of the list from which a group\nN                    is to be removed. Do not use a generic list name.\nN                    When the last group is removed from a list, the\nN                    list no longer exists on the CSD file.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3822": {"ttr": 11789, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3822\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP SCAN command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP SCAN command\nN-------------------------\nNSCAN all the IBM-supplied groups and user-defined groups for a\nNspecified resource. The definition of the matched resource in an IBM\nNsupplied group is compared with the definition(s) of the corresponding\nNmatched resource in the user groups.\nM\nMThis is the equivalent of using a wildcard with CEDA.\nN\nNSyntax\nN------\nD  SCAN resource-type(resource-name) ALIAS( alias-name )\nN\nNOptions\nN-------\nN    Alias(aliasname): specifies the alias name of the resource type to\nN                      be searched for in the user-defined groups.\nN\nN                      This operand is optional.\nN\nN    resource-type(resource-name): specifies the name of the resource\nN                                  type to be searched for in the\nN                                  IBM-supplied groups, and in the\nN                                  user-defined groups if aliasname is\nN                                  not specified. The resource option\nN                                  must always be the first operand of\nN                                  the SCAN command.\nN\nN      See Chapter 5 for the resource types.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3823": {"ttr": 11791, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3823\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP SERVICE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP SERVICE command\nN----------------------------\nNCarry out maintenance to your CSD file.\nN\nNSyntax\nN------\nD  Service FRomcsd ( ddname ) LEvel ( nnn )\nN\nNOptions\nN-------\nN    FRomcsd(ddname): specifies the ddname of the current CSD file,\nN                     which for the purposes of the command is treated\nN                     as the secondary CSD file.\nN\nN    LEvel(nnn): Associated with your CSD file is a current service\nN                level, initially set to 000 when the file was\nN                initialized. Applying the service routine causes the\nN                service level to be incremented in steps of one, from\nN                a \"current level\" to a \"target level\".\nN\nN                This operand specifies the target service level to\nN                which the CSD file is to be upgraded, and must be 1\nN                higher than the current level of FROMCSD. Specify it\nN                as a 3-character integer; for example, LEVEL(001).\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3824": {"ttr": 11793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3824\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP UPGRADE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP UPGRADE command\nN----------------------------\nNCarry out maintenance to your CSD file.\nN\nNSyntax\nN------\nD  UPgrade USing ( filename ) Replace\nN\nNOptions\nN-------\nN    Replace: Specify the REPLACE option when you need to rerun the\nN             UPGRADE command (for example, because of a previous\nN             issue).\nN\nN    USing(filename): To install IBM features onto CICS, specify\nN                     UPGRADE USING(filename). For example, UPGRADE\nN                     USING(DFHRDJPN) is used to place the double-byte\nN                     character set feature definitions onto the CSD\nN                     file.\nN\nN                     To upgrade a CSD, do not specify the USING\nN                     operand. All IBM-supplied definitions from any\nN                     release are deleted and then the CSD file is\nN                     initialized, so you do not need to say which\nN                     release you came from.\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3825": {"ttr": 11795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3825\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP USERDEFINE command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP USERDEFINE command\nN-------------------------------\nNCreate new resource definitions using your own default values instead\nNof the default values supplied by CICS.\nN\nNSyntax\nN------\nD  USERDEFINE resource-type(resource-name) Group ( groupname )\nD    Attribute list ( value )\nN\nNOptions\nN-------\nN    Attribute list(value): The attribute list depends on the resource\nN                           type that is being defined; some resources\nN                           have attributes that must be included in the\nN                           definition. For a description of the\nN                           attributes and default values of each\nN                           resource type, see RDO resources in Reference\nN                           System definition. Attributes that you do\nN                           not specify are given default values.\nN\nN    Group(groupname): Specifies the name of the group that will contain\nN                      the resource definition to be created. Do not use\nN                      a generic group name. If you specify the name of\nN                      a group which does not already exist, the group\nN                      is created.\nN\nN    Resource(name): Specifies the name of the resource you want to\nN                    define. Do not use a generic resource name. The\nN                    resource option must always be the first operand of\nN                    the USERDEFINE command.\nN\nNExample:\nI  DEFINE PROGRAM(USER) GROUP(USERDEF) LANGUAGE(ASSEMBLER)\nI*\nI* Define an ASSEMBLER program using the PROGRAM values in USERDEF.\nI  USERDEFINE PROGRAM(P2) GROUP(GRP)\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG3826": {"ttr": 11797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG3826\nTCICS\nT-RDG\nT-Chapter 38. DFHCSDUP\nT-The DFHCSDUP VERIFY command\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180204-094755\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNChapter 38. The resource definition batch utility DFHCSDUP\nN==========================================================\nNInvoking DFHCSDUP as a batch program\nN------------------------------------\nNThe DFHCSDUP VERIFY command\nN---------------------------\nNRemove internal locks on groups and lists.\nN\nNSyntax\nN------\nD  VERIFY\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG9A": {"ttr": 12033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG9A\nTCICS\nT-RDG\nT-Appendix A. Obsolete attributes\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180212-093055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNAppendix A. Obsolete attributes\nN===============================\nNSome resource definition attributes are obsolete, but are supported in order to\nN\nNObsolete attributes retained for compatibility\nN----------------------------------------------\nNSome resource definition attributes do not apply to resources used in CICS Trans\nN\nNFor information about compatibility mode, see Sharing the CSD between different\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CRDG9A01": {"ttr": 12035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SCRDG9A01\nTCICS\nT-RDG\nT-Obsolete attributes retained for compatibility\nE\"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\nZ20180212-093055\n*\n@IBM Corporation\n*\nBdfha4h00.pdf\nBSC34-7425-00 CICS Transaction Server for z/OS\nB-Resource Definition Guide\nB-Version 5 Release 3\n*\nNAppendix A. Obsolete attributes\nN===============================\nNObsolete attributes retained for compatibility\nN----------------------------------------------\nNTable 40. Obsolete resource definition attributes\nN    Resource     Attribute Description\nN    ------------ ------------ ------------------------------------------\nN    CONNECTION   BINDPASSWORD APPC bind-time security password\nN    FILE         RESSECNUM    Resource security value\nN    FILE         PASSWORD     File access verification\nN    LSRPOOL      LSRPOOLID    Numeric identifier 1-8 for pool\nN    MAPSET       RSL          Resource security value\nN    PARTITIONSET RSL          Resource security value\nN    PROFILE      PROTECT      Message integrity and message logging\nN    PROGRAM      HOTPOOL      Java hotpooling\nN    PROGRAM      JVMPROFILE   JVM profile for pooled JVMs\nN    PROGRAM      RSL          Resource security value\nN    SESSIONS     INSERVICE    Session can be used\nN    SESSIONS     OPERID       3-character operator ID\nN    SESSIONS     OPERPRIORITY Operator priority code\nN    SESSIONS     OPERRSL      Resource security key\nN    SESSIONS     OPERSECURITY Preset transaction security keys\nN    SESSIONS     RECOVNOTIFY  Notification of XRF takeover\nN    SESSIONS     TRANSACTION  Allow only specified transaction\nN    TCPIPSERVICE DNSGROUP     Specifies the group name with which\nN                              CICS registers to Workload Manager\nN    TCPIPSERVICE GRPCRITICAL  Marks the service as a critical\nN                              member of the DNS group\nN    TCPIPSERVICE PRIVACY      Level of SSL encryption required\nN    TCPIPSERVICE TSQPREFIX    TS queue prefix\nN    TERMINAL     BINDPASSWORD APPC bind-time security password\nN    TERMINAL     CONSOLE      Console identification number\nN    TERMINAL     OPERID       3-character operator ID\nN    TERMINAL     OPERPRIORITY Operator priority code\nN    TERMINAL     OPERRSL      Resource security key\nN    TERMINAL     OPERSECURITY Preset transaction security keys\nN    TERMINAL     XRFSIGNOFF   Force sign-off after an XRF takeover\nN    TRANSACTION  EXTSEC       Use an external security manager\nN    TRANSACTION  INDOUBT      Action at abend\nN    TRANSACTION  PRIMEDSIZE   Primed storage allocation size\nN    TRANSACTION  RSL          Resource security value\nN    TRANSACTION  TCLASS       Class assigned to task\nN    TRANSACTION  TRANSEC      Transaction security value\nN    TYPETERM     LOGMODECOM   LOGMODE compatibility\nN    TYPETERM     XRFSIGNOFF   Force sign-off after an XRF takeover\n* End of wish.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT972/CBT.V500.FILE972.PDS/XMCRDG.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT972/CBT.V500.FILE972.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}