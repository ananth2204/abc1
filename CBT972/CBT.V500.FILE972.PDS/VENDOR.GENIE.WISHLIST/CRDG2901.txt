SCRDG2901
TCICS
T-RDG
T-Chapter 29. TDQUEUE resources -Syntax
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180220-123655
*
@IBM Corporation
*
Bdfha4h00.pdf
BSC34-7425-00 CICS Transaction Server for z/OS
B-Resource Definition Guide
B-Version 5 Release 3
*
NChapter 29. TDQUEUE resources
N=============================
NTDQUEUE attributes
N------------------
NDescribes the syntax and attributes of the TDQUEUE resource.
N
NSyntax:
N-------
D  DEFINE
D    TDQUEUE(name)
I      Specifies the 1- to 4-character name of a transient
I      data queue.
N
I      If the name supplied is fewer than four characters, it is
I      left-justified and padded with blanks up to four characters.
N
I      Note:
I      1. If you use a comma (,) in a name, you will be unable to use
I         those commands such as CEMT INQUIRE TDQUEUE(value1,value2)
I         CEMT SET TDQUEUE(value1,value2) where the comma serves as a
I         list delimiter. See CICS Supplied Transactions for information
I         about using lists of resource identifiers.
N
I      2. If you protect your transient data queues using RACF, avoid
I         using % and & in the name. RACF commands assign a special
I         meaning to these characters when they are used in a profile
I         name. See the CICS RACF Security Guide.
N
D    GROUP(groupname)
I      Every resource definition must have a GROUP name.
I      The resource definition becomes a member of the group and is
I      installed in the CICS system when the group is installed.
N
I      The GROUP name can be up to 8 characters in length. Lowercase
I      characters are treated as uppercase characters.
N
D    DESCRIPTION(text)
I      You can provide a description of the resource that
I      you are defining in this field. The description text can be up to
I      58 characters in length. No restrictions apply to the characters
I      that you can use. However, if you use parentheses, ensure that for
I      each left parenthesis there is a matching right parenthesis. If you
I      use the CREATE command, for each single apostrophe in the text,
I      code two apostrophes.
N
D    TYPE(EXTRA | INTRA | INDIRECT)
I      Specifies the following types of
I      transient data queue:
N
I      EXTRA: A queue that is outside the CICS region is allocated to
I        CICS. Extrapartition queues are used for:
N
I        -> Sending data outside the CICS region: for example, data
I           created by a transaction for processing by a batch program.
N
I        -> Retrieving data from outside the region: for example, data
I           received from terminals as input to a transaction.
N
I        Extrapartition data is sequential and is managed by QSAM.
N
I      INDIRECT: An indirect queue is a queue that does not point to an
I        actual data set, but to another queue. An indirect queue can be
I        extrapartition, intrapartition, remote, or even another indirect
I        queue.
N
I        For example, you can give a different symbolic name,
I        INDIRECTDEST, to each of several different message types. You
I        can then send all these message types to the same physical queue
I        (INDIRECTDEST), or to different physical queues.
N
I        The DFH$TDWT sample program demonstrates how you can use indirect
I        queues to send different categories of message to the same
I        terminal. For programming information about DFH$TDWT, see the
I        CICS Customization Guide. DFH$TDWT sample definitions are given
I        in the CICS/ESA 4.1 Sample Applications Guide.
N
I        If the QUEUE operand of an EXEC CICS WRITEQ TD, EXEC CICS READQ,
I        or EXEC CICS DELETEQ command specifies an indirect queue, access
I        is determined by the security setting of the final target queue.
N
I      INTRA: A queue for data that is to be stored temporarily.
N
I        An intrapartition destination can be a terminal, a file, or
I        another system. A single data set, managed by VSAM, is used to
I        hold the data for all intrapartition queues.
N
I        You can specify a transaction to process the records and a
I        trigger level for each intrapartition queue. The trigger level
I        represents a number of records that are allowed to accumulate
I        before the specified transaction is initiated. See the
I        description of the TRIGGERLEVEL attribute for more information
I        about trigger levels.
N
I        The intrapartition queue can be defined as logically recoverable,
I        physically recoverable, or not recoverable.
N
I        A logically recoverable queue is restored (after an individual
I        transaction failure or a total system failure) to the status it
I        had at the end of the last completed unit of work (UOW). (A UOW
I        begins at start of task or at a syncpoint, and ends at end of
I        task or at a syncpoint). Physically recoverable queues are
I        restored (after a total system failure) to the statuses they had
I        when the system failure occurred.
N
I      TYPE=REMOTE cannot be specified on the TDQUEUE resource definition.
I      If you want to define a remote transient data queue, leave the
I      TYPE attribute blank and specify values for the remote attributes,
I      REMOTELENGTH, REMOTENAME, and REMOTESYSTEM. Alternatively, you
I      can include the remote attributes as part of the resource
I      definitions for the other transient data queue types.
N
NAttributes for extrapartition queues:
N-------------------------------------
D    BLOCKFORMAT(BLOCKED | UNBLOCKED)
I      extrapartition queues only):
I      Specifies the block format of the data set. There is no default.
I      If you specify the record format (RECORDFORMAT attribute) as
I      undefined (or allow it to default), you cannot specify anything
I      for the BLOCKFORMAT attribute.
N
I      blank: Indicates that no block format is defined for this data
I        set. Leave this field blank if you leave RECORDFORMAT blank.
N
I      BLOCKED: Blocked record format.
N
I      UNBLOCKED: Unblocked record format.
N
I      You are strongly advised to specify an unblocked record format
I      for extrapartition queues that are used as an interface to the
I      JES internal reader. If you use a blocked record format, your
I      job is held in the SYSOUT data set, and not sent directly to
I      JES until one of the following actions occurs:
N
I      -> You follow the JES /*EOF control statement with a second
I         /*EOF statement
N
I      -> Your application writes another job to the same queue
N
I      -> You explicitly close the queue after the job is written
N
I      -> You shut down CICS normally
N
D    BLOCKSIZE(length)
I      (extrapartition queues only): Specifies the
I      length of the block in bytes, in the range 0 through 32767. The
I      maximum value you can specify depends on whether SYSOUTCLASS is
I      specified, either explicitly or by default, and on whether
I      RECORDFORMAT is FIXED or VARIABLE.
N
I      -> If you specify SYSOUTCLASS, the maximum value of RECORDSIZE
I         is 8968.
N
I      -> Each block in a variable format data set consists of a block
I         descriptor word followed by one or more logical records.
I         Therefore, if you specify RECORDFORMAT(VARIABLE), the value
I         you specify for BLOCKSIZE must include 4 bytes for the block
I         descriptor word, and space for the largest possible logical
I         record.
N
D    DATABUFFERS(1 | number)
I      (extrapartition queues only): Specifies the
I      number of buffers to be provided, up to a maximum of 255.
N
D    DDNAME(ddname)
I      Specifies a 1- to 8-character value that may refer
I      to a data set defined in the startup JCL. The name must not start
I      with the characters "DFH", which are reserved for use by CICS,
I      unless the name describes one of the standard destinations.
N
D    DISPOSITION(SHR | OLD | MOD)
I      (extrapartition queues only): Specifies
I      the disposition of the data set.
N
I      MOD: CICS first assumes that the data set exists. For an existing
I        sequential data set, MOD causes the read/write mechanism to be
I        positioned after the last record in the data set. The read/write
I        mechanism is positioned after the last record each time the data
I        set is opened for output.
N
I        If CICS cannot find volume information for the data set:
N
I        -> On the DD statement
N
I        -> In the catalog
N
I        -> Passed with the data set from a previous step
N
I        it assumes that the data set is being created in this job step.
I        A data set allocated dynamically in this way is deleted when the
I        queue is closed, and all records are lost.
N
I        For a new data set, MOD causes the read/write mechanism to be
I        positioned at the beginning of the data set.
N
I      OLD: The data set existed before this job step.
N
I      SHR: The data set existed before this job step and can be read by
I        other concurrent jobs.
N
D    DSNAME(DUMMY | dsname)
I      (extrapartition queues only): Specifies the
I      name of the QSAM data set that is to be used to store records
I      written to this extrapartition queue.
N
I      When CICS receives a request to open an extrapartition transient
I      data queue, the startup JCL is referenced to check if a data set
I      definition has been created. If one is not found, the 44-character
I      name specified on the DSNAME attribute is used to dynamically
I      allocate the required data set.
N
I      If you have JCL that preallocates for this queue the DSCNAME value
I      to a DSNAME value, the DSNAME value in the resource definition is
I      overridden by the DSNAME value from the JCL. JCL allocation always
I      takes priority.
N
I      Partitioned data sets (PDS) are not supported on the DSNAME
I      attribute. If you want to use a PDS member for an extrapartition
I      queue data set, code it explicitly in your JCL. Bear in mind that
I      if you inquire upon this queue, the DSNAME value that is returned
I      will not give you any indication of the member name.
N
I      DUMMY: A dummy data set name.
N
I      name: The 44-character name of a physical data set.
N
I      Attention: If you use log streams for extrapartition queue data
I        sets, unpredictable results may occur.
N
D    ERROROPTION(IGNORE | SKIP)
I      (extrapartition queues only): Specifies
I      the action to be taken if an I/O error occurs. This can be one of
I      the following:
N
I      IGNORE: The block that caused the error is accepted.
N
I      SKIP: The block that caused the error is skipped.
N
D    OPENTIME(INITIAL | DEFERRED)
I      (extrapartition queues only): Specifies
I      the initial status of the data set. The initial status can be one
I      of the following values:
N
I      DEFERRED: The data set remains closed until you indicate that you
I        want to open it by using the CEMT INQUIRE|SET TDQUEUE command.
N
I      INITIAL: The data set is to be opened at install time. However,
I        if the DSNAME attribute is not specified, and the data set name
I        is not specified in the DD statement in the startup JCL, the
I        transient data queue is allocated to JES during CICS startup.
N
D    PRINTCONTROL(A | M)
I      (extrapartition queues only):
I      Specifies the control characters to be used. There is no default.
N
I      If you allow RECORDFORMAT to default to blank, you cannot specify
I      anything in the PRINTCONTROL field. You can use the following
I      characters:
N
I      ASA: ASA control characters.
N
I      blank: No control characters are to be used.
N
I      MACHINE: Machine control characters.
N
D    RECORDFORMAT(FIXED | VARIABLE)
I      (extrapartition queues only):
I      Specifies the record format of the data set.
N
I      blank: If RECORDFORMAT is not specified (that is, remains blank),
I        the BLOCKFORMAT and PRINTCONTROL fields must also remain blank.
N
I        If the RECORDFORMAT is not specified in the resource definition,
I        TD attempts to derive this attribute from the CICS startup JCL
I        or from the QSAM data set definition at the time it attempts to
I        open the queue.
N
I        The open request will fail if this information cannot be derived
I        from either of these sources.
N
I      FIXED: Fixed records. If you specify RECORDFormat(Fixed), you must
I        also specify a block format.
N
I      VARIABLE: Variable records. If you specify RECORDFormat(Variable),
I        you must also specify a block format.
N
D    RECORDSIZE(1 | number)
I      (extrapartition and remote queues): Specifies
I      the record length in bytes, in the range 0 through 32767.
N
I      1: The default record length is 1 byte.
N
I      number: The record length, in bytes, up to 32767.
N
I      The maximum value you can specify depends on whether SYSOUTCLASS
I      is specified, either explicitly or by default, and on whether
I      RECORDFORMAT is FIXED or VARIABLE.
N
I      -> If you specify SYSOUTCLASS, the maximum value of RECORDSIZE
I         is 8968.
N
I      -> Each block in a variable format data set consists of a block
I         descriptor word followed by one or more logical records.
I         Therefore, if you specify RECORDFORMAT(VARIABLE), the value
I         you specify for BLOCKSIZE must include four bytes for the block
I         descriptor word, and space for the largest possible logical
I         record.
N
D    REMOTELENGTH(number)
I      (remote queues only): Specifies the length
I      in bytes, in the range 1 through 32767. For SYSOUT data sets, the
I      value entered in the REMOTELENGTH field must not be greater
I      than 8968 bytes (when the SYSOUTCLASS attribute has been
I      specified).
N
I      1: The length is 1 byte.
N
I      number: The length in bytes, up to 32767.
N
I      If the queue is defined with TYPE=EXTRA, and no value is specified
I      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at
I      installation time.
N
D    REMOTENAME(tdqueue)
I      (remote queues only): Specifies, if the transient
I      data queue resides on a remote system, the 4-character name by
I      which the queue is known in the system or region on which the
I      queue resides.
N
D    REMOTESYSTEM(connection)
I      Specifies the 4-character alphanumeric
I      name of the system or region in which the remote transient data
I      queue resides. The name entered must be the same as the name
I      specified on the RDO CONNECTION or the first 4 characters of
I      the name specified on an RDO IPCONN definition. For more
I      information about the connection definitions, see
I      "CONNECTION attributes" or "IPCONN attributes".
N
I      When the transient data queue definition is installed, the name
I      entered in the REMOTESYSTEM attribute is compared with the system
I      identifier. If the names are different, the system or region is
I      remote. If the names are the same, the value specified in the TYPE
I      attribute is used. If the TYPE attribute is blank, the installation
I      fails.
N
D    REWIND(LEAVE | REREAD)
I      (extrapartition queues only): Specifies the
I      disposition of a tape data set. The disposition can be one of the
I      following:
N
I      LEAVE: The current tape is positioned at the logical end of the
I        data set.
N
I      REREAD: The current tape is positioned at the logical start of the
I        data set.
N
D    SYSOUTCLASS(* | class)
I      {A..Z|0..9|*|blank}) (extrapartition queues only):
I      Instead of allocating an extrapartition queue to a physical data
I      set, you can allocate it to a system output data set (referred to
I      as SYSOUT).
N
I      Use the SYSOUTCLASS attribute to specify the class of the SYSOUT
I      data set.
N
I      A..Z|0..9: A single alphabetic or numeric character that represents
I        an output class that has been set up on the MVS system on which
I        the CICS job is to run.
N
I      *: This is the default class. SYSOUTCLASS defaults to an asterisk
I        (*) if you leave the DSNAME attribute blank and specify OUTPUT
I        for the Typefile field.
N
I      blank: SYSOUTCLASS defaults to a blank character if you leave the
I        DSNAME attribute blank and specify INPUT or RDBACK for the
I        Typefile attribute. In the latter case, the open operation will
I        fail because a DSNAME must be specified for TYPEFILE=INPUT or
I        TYPEFILE=RDBACK.
N
I      You can use SYSOUTCLASS as an alternative to DSNAME. As with
I      DSNAME, the queue may already be preallocated to SYSOUT using a
I      JCL DD statement.
N
I      A JCL DD statement overrides any specification made using the
I      TDQUEUE resource definition.
N
I      When CICS receives a request to open an extrapartition transient
I      data queue, the startup JCL is referenced to check if a data set
I      definition has been created.
N
I      If one is not found, the 44-character name specified on the DSNAME
I      attribute is used to dynamically allocate the required data set.
N
I      When SYSOUT is specified for a queue in the JCL, attributes other
I      than class can also be specified (for example, form types).
N
I      Note: Specifying SYSOUT data sets using RDO supports the class
I      parameter only. If you require other parameters, you specify
I      SYSOUT data sets in the JCL.
N
I      For more information about SYSOUT and its associated classes, see
I      the z/OS MVS JCL User's Guide.
N
D    TYPEFILE(INPUT | OUTPUT | RDBACK)
I      Specifies the type of data set the
I      queue is to be associated with.
N
I      INPUT: An input data set.
N
I      OUTPUT: An output data set.
N
I      RDBACK: An input data set that is to be read backward.
N
I      Note: This is appropriate only for data sets that have been
I      defined on magnetic tape.
N
I      An extrapartition queue can be input or output, but not both.
N
I      For more information about the DCB macro fields, see the
I      z/OS DFSMS Macro Instructions for Data Sets.
N
N
NAttributes for intrapartition queues:
N-------------------------------------
D    ATIFACILITY(TERMINAL | FILE | SYSTEM)
I      (intrapartition queues only):
I      Specifies the type of destination the queue represents.
N
I      FILE: The transient data queue is to be used as a file of data
I       records that are not associated with a particular terminal or
I       system. ATI does not require a terminal to be available.
N
I      SYSTEM: The transient data queue is to be associated with the
I        specified system identifier. The system must be defined to the
I        local CICS system using an RDO CONNECTION definition.
N
I        Specifying ATIFACILITY(SYSTEM) initiates a distributed
I        transaction processing (DTP) session. For more information about
I        DTP considerations in application programming, see the
I        CICS Application Programming Guide.
N
I      TERMINAL: The transient data queue is to be associated with the
I        terminal. The terminal must be defined to CICS. If you do not
I        specify TERMINAL, it defaults to the value of FACILITYID. If
I        ATI is used, as specified in the TRANSID and TRIGGERLEVEL
I        attributes, the transaction that is initiated is associated with
I        the specified terminal, which must be available before the
I        transaction can be initiated.
N
D    FACILITYID(terminal | connection)
I      (intrapartition queues only):
I      Specifies a 4-character field that contains either:
N
I      -> The system identifier for an intrapartition queue that specifies
I         ATIFACILITY(SYSTEM)
N
I      -> The terminal identifier where ATIFACILITY(TERMINAL) is
I         specified.
N
I      If you do not specify anything in the FACILITYID field, it
I      defaults to the name of the queue in each case.
N
I      If ATIFACILITY(FILE) is specified, the FACILITYID field must
I      remain blank.
N
D    RECOVSTATUS(NO | LOGICAL | PHYSICAL)
I      (intrapartition queues only):
I      Specifies the recoverability attributes of the queue in the event
I      of an abnormal termination of either CICS or the transaction that
I      is processing the queue. The recoverability attributes are:
N
I      LOGICAL: This queue is logically recoverable. Automatic logging
I        is to be performed to keep track of accesses by application
I        programs. If a transaction that accessed this queue was in-flight
I        at the time of abnormal termination, or in the subsequent
I        emergency restart or dynamic transaction backout, the queue is
I        restored to the status it was in before the in-flight UOW
I        modified it.
N
I        When this queue is accessed, the task that issued the DELETEQ TD,
I        WRITEQ TD, or READQ TD command is enqueued on the input, the
I        output, or both ends of the transient data queue. The enqueue is
I        maintained until the task terminates (or issues a syncpoint
I        request to signal the end of a UOW) to ensure the integrity of
I        the data being accessed. This means that enqueues can be
I        maintained for a longer time, and can result in a queue lockout
I        if an application program accessing the queue performs more than
I        one UOW against the queue without defining each separate UOW to
I        CICS by issuing a syncpoint request.
N
I        Furthermore, when a DELETEQ request is issued for a logically
I        recoverable queue, both the input and output ends of the queue
I        are enqueued upon. This can increase the possibility of an
I        enqueue lockout.
N
I        Note: CICS provides an enqueuing protection facility for
I        logically recoverable (as distinct from physically recoverable)
I        TD queues similar to that for recoverable files. However, CICS
I        regards each logically recoverable destination as two separate
I        recoverable resources one for writing and one for reading.
N
I        In the case of a file record, a record is treated as a single
I        resource and requires only one lock. The TD queue, on the other
I        hand, has two 'ends' - the read end and the write end, and these
I        can be enqueued on (locked) independently. This is because, to
I        control both reading and writing from the TD queue (at the same
I        time), CICS has to maintain two pointers (cursors) -one for
I        reading and one for writing, and these need to be protected from
I        conflicting transactions.
N
I        Queue records are held on one or more control intervals (CIs).
I        Each CI is marked for release as soon as the last record on it
I        has been read.
N
I        However, the release does not occur until the end of task, or
I        until after the next user syncpoint.
N
I      NO: This queue is not recoverable. Automatic logging is not
I        performed to keep track of accesses to this queue. Queue records
I        are held on one or more control intervals (CIs). Each CI is
I        released as soon as the last record on it has been read.
N
I      PHYSICAL: This queue is physically recoverable. Automatic logging
I        is to be emergency restart occurs, this queue is to be recovered
I        to its status at the time CICS terminated.
N
I        The queue is not recovered to its status at the time CICS
I        terminated if the last action on the queue was a READQ request,
I        and if the associated unit of work (UOW) did not commit the
I        changes. On emergency restart, the last read operation is backed
I        out, and appears never to have taken place.
N
I        Queue records are held on one or more control intervals (CIs).
I        Each CI is released as soon as the last record on it has been
I        read.
N
D    REMOTELENGTH(number)
I      (remote queues only): Specifies the length
I      in bytes, in the range 1 through 32767. For SYSOUT data sets, the
I      value entered in the REMOTELENGTH field must not be greater
I      than 8968 bytes (when the SYSOUTCLASS attribute has been
I      specified).
N
I      1: The length is 1 byte.
N
I      number: The length in bytes, up to 32767.
N
I      If the queue is defined with TYPE=EXTRA, and no value is specified
I      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at
I      installation time.
N
D    REMOTENAME(tdqueue)
I      (remote queues only): Specifies, if the transient
I      data queue resides on a remote system, the 4-character name by
I      which the queue is known in the system or region on which the
I      queue resides.
N
D    REMOTESYSTEM(connection)
I      Specifies the 4-character alphanumeric
I      name of the system or region in which the remote transient data
I      queue resides. The name entered must be the same as the name
I      specified on the RDO CONNECTION or the first 4 characters of
I      the name specified on an RDO IPCONN definition. For more
I      information about the connection definitions, see
I      "CONNECTION attributes" or "IPCONN attributes".
N
I      When the transient data queue definition is installed, the name
I      entered in the REMOTESYSTEM attribute is compared with the system
I      identifier. If the names are different, the system or region is
I      remote. If the names are the same, the value specified in the TYPE
I      attribute is used. If the TYPE attribute is blank, the installation
I      fails.
N
D    TRANSID(transaction)
I      (intrapartition queues only): Specifies the
I      name of the transaction that is to be automatically initiated when
I      the trigger level is reached. Transactions are initiated in this
I      way to read records from the queue. If the TRANSID attribute is
I      not specified (or if TRIGGERLEVEL(0) is specified), you must use
I      another method to schedule transactions to read records from
I      transient data queues.
N
I      The transaction specified must not reside in a remote CICS system.
I      If it does, transaction initiation fails and a warning message is
I      issued to the console.
N
D    TRIGGERLEVEL(1 | number)
I      (intrapartition queues only): Specifies the
I      number of records to be accumulated before a task is automatically
I      initiated to process them. (This number is known as the trigger
I      level.)
N
I      If you specify the TRANSID attribute, TRIGGERLEVEL defaults to 1.
I      Specify a trigger level of 0 if you want to disable ATI processing.
I      If you do not specify a transaction id, the trigger level is
I      ignored.
N
I      If you have specified ATIFACILITY(TERMINAL), the task is not
I      initiated until the specified terminal is available. If you have
I      specified ATIFACILITY(FILE), a terminal is not necessary for the
I      task to be initiated.
N
I      If, at maximum task, a short-on-storage or a no-space condition
I      exists for a nonterminal destination, the task is not initiated.
I      This is also true during stages 1 and 2 of initialization, and
I      during the final stage of shutdown. The task is initiated when the
I      stress condition no longer exists, and a subsequent TD WRITE
I      occurs.
N
I      For logically recoverable transient data queues, the ATI task is
I      not attached until the task commits forward. This may mean that the
I      trigger level is far exceeded before ATI occurs.
N
I      If a z/OS Communications Server terminal is defined as the
I      destination for the CSTL transaction on two ISC CICS systems with
I      a trigger level of 1, a performance problem may arise when both
I      systems repeatedly acquire and release the terminal to write the
I      session-started and session-ended messages.
N
I      You can change the trigger level when CICS is running using the
I      CEMT transaction. If you reduce the trigger level to a number that
I      is equal to (or less than) the number of records accumulated so
I      far, the task is initiated when the next record is successfully
I      put on the queue.
N
I      1: Only one record can accumulate.
N
I      number: The number of records that can accumulate (up to a
I        maximum of 32767) before ATI occurs.
N
D    USERID(userid)
N
NTDQUEUE attributes for indirect queues:
N---------------------------------------
D    INDIRECTNAME(tdqueue)
I      (indirect queues only): Specifies the name of
I      the transient data queue to which this indirect queue routes data.
I      The transient data queue must be defined to CICS, and it can be
I      intrapartition, extrapartition, remote, or indirect.
N
D    REMOTELENGTH(number)
I      (remote queues only): Specifies the length
I      in bytes, in the range 1 through 32767. For SYSOUT data sets, the
I      value entered in the REMOTELENGTH field must not be greater
I      than 8968 bytes (when the SYSOUTCLASS attribute has been
I      specified).
N
I      1: The length is 1 byte.
N
I      number: The length in bytes, up to 32767.
N
I      If the queue is defined with TYPE=EXTRA, and no value is specified
I      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at
I      installation time.
N
D    REMOTENAME(tdqueue)
I      (remote queues only): Specifies, if the transient
I      data queue resides on a remote system, the 4-character name by
I      which the queue is known in the system or region on which the
I      queue resides.
N
D    REMOTESYSTEM(connection)
I      Specifies the 4-character alphanumeric
I      name of the system or region in which the remote transient data
I      queue resides. The name entered must be the same as the name
I      specified on the RDO CONNECTION or the first 4 characters of
I      the name specified on an RDO IPCONN definition. For more
I      information about the connection definitions, see
I      "CONNECTION attributes" or "IPCONN attributes".
N
I      When the transient data queue definition is installed, the name
I      entered in the REMOTESYSTEM attribute is compared with the system
I      identifier. If the names are different, the system or region is
I      remote. If the names are the same, the value specified in the TYPE
I      attribute is used. If the TYPE attribute is blank, the installation
I      fails.
N
N
NTDQUEUE attributes for remote queues of unspecified TYPE:
N---------------------------------------------------------
D    REMOTELENGTH(number)
I      (remote queues only): Specifies the length
I      in bytes, in the range 1 through 32767. For SYSOUT data sets, the
I      value entered in the REMOTELENGTH field must not be greater
I      than 8968 bytes (when the SYSOUTCLASS attribute has been
I      specified).
N
I      1: The length is 1 byte.
N
I      number: The length in bytes, up to 32767.
N
I      If the queue is defined with TYPE=EXTRA, and no value is specified
I      for REMOTELENGTH, the value on the RECORDSIZE attribute is used at
I      installation time.
N
D    REMOTENAME(tdqueue)
I      (remote queues only): Specifies, if the transient
I      data queue resides on a remote system, the 4-character name by
I      which the queue is known in the system or region on which the
I      queue resides.
N
D    REMOTESYSTEM(connection)
I      Specifies the 4-character alphanumeric
I      name of the system or region in which the remote transient data
I      queue resides. The name entered must be the same as the name
I      specified on the RDO CONNECTION or the first 4 characters of
I      the name specified on an RDO IPCONN definition. For more
I      information about the connection definitions, see
I      "CONNECTION attributes" or "IPCONN attributes".
N
I      When the transient data queue definition is installed, the name
I      entered in the REMOTESYSTEM attribute is compared with the system
I      identifier. If the names are different, the system or region is
I      remote. If the names are the same, the value specified in the TYPE
I      attribute is used. If the TYPE attribute is blank, the installation
I      fails.
N
I      (intrapartition queues only): Specifies the userid
I      you want CICS to use for security checking when verifying the
I      trigger-level transaction specified in the TRANSID field. The
I      userid can be up to eight characters in length.
N
I      The value entered in the USERID field is valid only when
I      ATIFACILITY(FILE) is also specified.
N
I      When security is active, the trigger-level transaction runs under
I      the authority of the specified userid. This userid must be
I      authorized to all the resources used by the trigger-level
I      transaction.
N
I      If you omit the userid from a transient data queue definition,
I      CICS uses the CICS default userid, specified on the DFLTUSER
I      system initialization parameter. Security checking takes place
I      when you are installing an intrapartition definition containing a
I      userid. If the security check fails, the resource definition for
I      that intrapartition queue is not installed.
N
I      For further information about surrogate user security, see the
I      CICS RACF Security Guide.
N
D    WAIT(YES | NO)
I      (intrapartition queues only): Specifies whether an
I      indoubt unit of work (UOW) that has modified a logically
I      recoverable queue should wait for resynchronization with its
I      coordinator to determine whether to commit or back out the
I      changes.
N
I      NO: The UOW is not to wait. Any changes made to recoverable
I        resources are to be backed out or committed, as specified by
I        the ACTION attribute on the TRANSACTION resource definition.
N
I      YES: The UOW is to wait, and any action required while waiting is
I        determined by the WAITACTION attribute.
N
I      This attribute overrides the WAIT attribute defined on the UOW's
I      transaction definition. See Table 13 on page 298 for an explanation
I      of the interactions of indoubt attributes on the TDQUEUE and
I      TRANSACTION definitions.
N
D    WAITACTION(REJECT | QUEUE)
I      (intrapartition queues only): Specifies
I      the action CICS is to take for an indoubt unit of work (UOW) if
I      the definition for this queue specifies WAIT(YES). The possible
I      actions are:
N
I      QUEUE: The UOW is indoubt and waiting; any locks held by the UOW
I        for this queue remain active until the final state of the UOW
I        is known. This means that tasks are suspended rather than
I        receiving the LOCKED response. When the final state of the UOW
I        is known, any changes that it has made are committed or backed
I        out. Until then, any further requests of the following types
I        that need one of the active locks must wait:
N
I      READQ, if the indoubt UOW had issued READQ or DELETEQ requests.
N
I      WRITEQ, if the indoubt UOW had issued WRITEQ or DELETEQ requests.
N
I      DELETEQ, if the indoubt UOW had issued READQ, WRITEQ or DELETEQ
I        requests.
N
I    REJECT: The UOW is indoubt and is waiting. Any lock held by the
I      UOW for this queue is retained until the final state of the UOW
I      is known. When the final state is known, any changes the UOW
I      has made are committed or backed out. Until then, any further
I      request that needs one of the retained locks is rejected, and
I      a LOCKED response is returned. WAITACTION=REJECT causes LOCKED
I      to be raised in exactly the same circumstances as those in which
I      QUEUE causes a transaction to wait.
* End of wish.
