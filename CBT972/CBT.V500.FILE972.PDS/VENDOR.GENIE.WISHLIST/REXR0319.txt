SREXR0319
KEXIT
Tz/OS TSO/E REXX Reference
T-Chapter 3. Keyword instructions
T-Instructions
T-RETURN
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171203-082355
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 3. Keyword instructions
N-------------------------------
NInstructions
N------------
NRETURN
N------
NRETURN returns control (and possibly a result) from a REXX
Nprogram or internal routine to the point of its invocation.
I
IIf no internal routine is active, RETURN and EXIT are identical in
Itheir effect on the program that is being run.
M
MMessage from Kenneth Tomiak
MEXIT declares it leaves the program unconditionally. For that reason,
MKenneth uses RETURN to terminate non-EDIT macro code. For EDIT macro
Mcode, EXIT influences where the cursor is placed.
N
N
NSyntax:
D  RETURN expression
I    expression: A string resulting from evaluating expression.
N
N
NExample:
I  SAY ""
I  SAY "CALL 24"
I  SAY "-------"
I  CALL no_result 24
I  SAY "Result shows:" RESULT
I
I  SAY ""
I  SAY "subroutine(24)"
I  SAY "--------------"
I  subroutine_rc = yes_result(24)
I  SAY "Result shows:" RESULT
I  SAY "subroutine_rc shows:" subroutine_rc
I  SAY "That would be a 15% tip!"
I
I  RETURN 0
I
Ino_result:
I  SAY "I see your" Arg(1) "and accept it."
I  SAY "But you will not know that."
I  tip = (Arg(1) * 1.15) - Arg(1)
I  SAY "You might include" tip "for the tip."
I  Result = tip
I  RETURN
I
Iyes_result:
I  SAY "I see your" Arg(1) "and accept it."
I  SAY "You will know that by checking what I returned."
I  RETURN (Arg(1) * 1.15) - Arg(1)
* End of wish.
