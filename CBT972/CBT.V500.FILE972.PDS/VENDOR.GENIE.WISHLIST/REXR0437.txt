SREXR0437
Tz/OS TSO/E REXX Reference
T-Chapter 4. Functions
T-Built-in functions
T-OVERLAY
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171219-125555
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NOVERLAY
N-------
NOVERLAY returns the string target, which, starting at the nth
Ncharacter, is overlaid with the string new, padded or truncated to
Nlength length. (The overlay may extend beyond the end of the original
Ntarget string.) If you specify length, it must be a positive whole
Nnumber or zero. The default value for length is the length of new. If
Nn is greater than the length of the target string, padding is added
Nbefore the new string. The default pad character is a blank, and the
Ndefault value for n is 1. If you specify n, it must be a positive whole
Nnumber.
N
N
NSyntax:
D  OVERLAY(new,target,n ,length ,pad)
I    new: Your new text.
N
I  target: the larger string that will be overlayed to produce a new
I          string.
N
I    n: The starting position to overlay.
N
I length: How long the new string is.
N
I    pad: A character to pad if length is greater than length(new).
N
N
NExample
N-------
I  page_ctr = 1
I  heading_line = Center("My REXX Program",79)
I  week_day = Date("W")
I  report_line.1 = Overlay(week_day,heading_line,5)
I  report_line.1 = Overlay("Page",report_line.1,65)
I  Call Print_Heading
I  Do report_ctr = 1 To 22
I    If ((report_ctr // 5) = 0) Then Call Print_Heading
I    Say report_ctr "just some data"
I  End
I
I  SAY ""
I  SAY OVERLAY(' ','abcdef',3) "->  ab def"
I  SAY OVERLAY('.','abcdef',3,2) "->  ab. ef"
I  SAY OVERLAY('qq','abcd') "->  qqcd"
I  SAY OVERLAY('qq','abcd',4) "->  abcqq"
I  SAY OVERLAY('123','abc',5,6,'+') "->  abc+123+++"
I  Return 0
I
IPrint_Heading:
I  If (report_ctr = 22) Then Return 0
I  report_line.1 = Overlay(page_ctr,report_line.1,70)
I  Say report_line.1
I  page_ctr = page_ctr + 1
I  RETURN 0
* End of wish.
