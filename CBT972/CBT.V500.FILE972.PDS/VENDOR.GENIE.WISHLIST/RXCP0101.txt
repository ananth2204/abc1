SRXCP0101
TREXX Compiler Presentation
T-George Fulk -Tomiak source ANYREXX
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20170612-131255
Whttp://www.ktomiak.biz/ORG/
@Kenneth E. Tomiak
*
NUsing the REXX Compiler
N=======================
N
Dpgm_anyrexx:  /* We still need rexx in comment if read from SYSPROC. */
D  rexxpgm_version = "01.00"
D  Say ""
D  Say "Begin."
D  function_rc = rexx_Initialize()
D  if (function_rc = 0) Then Do
D    function_rc = rexx_Processing()
D  End
D  function_rc = rexx_Cleanup()
D  Say ""
D  Say "Done."
D  Say ""
D  Return return_code
D
Drexx_Initialize:
D  Parse VERSION,
D    version_rexx_name,
D    version_rexx_version,
D    version_rexx_date
D  Parse SOURCE,
D    source_host_env,
D    source_call_type,
D    source_uc_exec_name,
D    source_hostdd,
D    source_hostdsn,
D    source_nf_exec_name,
D    source_initial_cmd_env,
D    source_asid_name,
D    source_char8_user_token,
D    source_hostother
D/*
D
DREXX-Interpreted:
D---------------------------------------------------
DVERSION:
DName:REXX370 Version:3.48 Date:01 May 1992
D
DSOURCE:
DHost env:TSO Call type:COMMAND EXEC NAME:ANYREXX
DHostDD:SYSEXEC HostDSN:? nf name:?
DCmd env:TSO ASID:ISPF User token:? Other:
D
DREXX-Compiled:
D---------------------------------------------------
DName:REXXC370 Version:3.48 Date:23 Dec 1999
D
DSOURCE:
DHost env:TSO Call type:COMMAND EXEC NAME:ANYREXX
DHostDD:SYS00206 HostDSN:KTOMIAK.CBT.CEXEC nf name:?
DCmd env:TSO ASID:ISPF User token:? Other:
D
D*/
D  Address_Environment = Address()
D  return_code = 0
D  Return return_code
D
Drexx_Processing:
D  Say "VERSION:"
D  Say ,
D    "Name:"version_rexx_name,
D    "Version:"version_rexx_version,
D    "Date:"version_rexx_date
D
D  Say ""
D  Say "SOURCE:"
D  Say ,
D    "Host env:"source_host_env,
D    "Call type:"source_call_type,
D    "EXEC NAME:"source_uc_exec_name
D  Say ,
D    "HostDD:"source_hostdd,
D    "HostDSN:"source_hostdsn,
D    "nf name:"source_nf_exec_name
D  Say ,
D    "Cmd env:"source_initial_cmd_env,
D    "ASID:"source_asid_name,
D    "User token:"source_char8_user_token,
D    "Other:"source_hostother
D
D  Say ""
D  Say "Environment:"
D  Say Address_Environment
D
D  _opsys = determine_rexxenv()
D  Say ""
D  Say "Operating System:"
D  Say REXX_ENVIR
D
D  Say ""
D  Say "Program name:" source_pgm_name
D
D  Return return_code
D
Drexx_Cleanup:
D  lastline = Sourceline()
D  Say "This code has:" lastline "line(s)."
D  Return return_code
D
Ddetermine_rexxenv:
D  Select
D    When (Left(version_rexx_name,11) = "REXX-ooRexx") Then Do
D      Parse Var version_rexx_name ,
D        . "_" ,
D        version_rexx_v "." ,
D        version_rexx_r "." ,
D        version_rexx_m "(" ,
D        =1 . "_" version_rexx_vrm "(" .
D      REXX_ENVIR = "PC/ooREXX"
D    End
D    When ((version_rexx_name = "REXXSAA") & ,
D          (source_initial_cmd_env = "DOS")) Then Do
D      REXX_ENVIR = "PC/IBM_PC_DOS"
D    End
D    When ((version_rexx_name = "REXXSAA") & ,
D          (source_initial_cmd_env = "OS2")) Then Do
D      REXX_ENVIR = "PC/IBM_OS/2"
D    End
D    When ((version_rexx_name = "REXX370") & ,
D          (source_initial_cmd_env = "CMS")) Then Do
D      REXX_ENVIR = "VM/CMS"
D    End
D    When ((source_asid_name = "MVS") & ,
D          (source_initial_cmd_env = "MVS")) Then Do
D      REXX_ENVIR = "MVS/Batch"
D    End
D    When ((version_rexx_name = "REXX370") & ,
D          (source_initial_cmd_env = "TSO")) Then Do
D      REXX_ENVIR = "MVS/TSO"
D    End
D    When ((version_rexx_name = "REXX370") & ,
D          (source_initial_cmd_env = "ISPF")) Then Do
D      REXX_ENVIR = "MVS/TSO/ISPF"
D    End
D    When ((version_rexx_name = "REXXC370") & ,
D          (source_initial_cmd_env = "TSO")) Then Do
D      REXX_ENVIR = "MVS/TSO"
D    End
D    When ((version_rexx_name = "REXXC370") & ,
D          (source_initial_cmd_env = "ISPF")) Then Do
D      REXX_ENVIR = "MVS/TSO/ISPF"
D    End
D    When ((version_rexx_name = "REXX/2") & ,
D          (To_uppercase(Left(source_host_env,7)) = "WINDOWS")) Then Do
D      REXX_ENVIR = "PC/SPF-PC"
D    End
D    When (Address_Environment = "COMMAND") Then Do
D      REXX_ENVIR = "PC/DOS7.0"
D    End
D    When (Address_Environment = "SYSTEM") Then Do
D      REXX_ENVIR = "PC/REGINA"
D    End
D    Otherwise Do
D      REXX_ENVIR = "UNKNOWN"
D    End
D  End
D  Select
D    When (Left(REXX_ENVIR,3) = "MVS") Then Do
D      source_pgm_name = source_uc_exec_name
D    End
D    When (Left(REXX_ENVIR,2) = "VM") Then Do
D      source_pgm_name = source_uc_exec_name
D    End
D    When (To_uppercase(Left(source_host_env,7)) = "WINDOWS") Then Do
D      last_slash = LastPos("\",source_uc_exec_name)
D      If (last_slash > 0) Then Do
D        filename_ext = Substr(source_uc_exec_name,(last_slash + 1))
D      End
D      Else Do
D        filename_ext = source_uc_exec_name
D      End
D      Parse Var filename_ext source_pgm_name "." source_pgm_ext
D    End
D    Otherwise Do
D      Say "Otherwise:" REXX_ENVIR To_uppercase(Left(source_host_env,7))
D    End
D  End
D  Return 0
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
DConvert string to lowercase.
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DTo_Lowercase:
D  Parse arg myarg
D  If (lowercase_letters = "LOWERCASE_LETTERS") Then Do
D    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
D  End
D  If (uppercase_letters = "UPPERCASE_LETTERS") Then Do
D    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
D  End
D  Return Translate(myarg,lowercase_letters,uppercase_letters)
D
D/* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
DConvert string to uppercase.
D>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */
DTo_Uppercase:
D  Parse arg myarg
D  If (lowercase_letters = "LOWERCASE_LETTERS") Then Do
D    lowercase_letters = "abcdefghijklmnopqrstuvwxyz"
D  End
D  If (uppercase_letters = "UPPERCASE_LETTERS") Then Do
D    uppercase_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
D  End
D  Return Translate(myarg,uppercase_letters,lowercase_letters)
D
