SREXR0501
Tz/OS TSO/E REXX Reference
T-Chapter 5. Parsing
T-Simple templates for parsing into words
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171223-141755
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 5. Parsing
N------------------
NSimple templates for parsing into words
N---------------------------------------
NAll variables in a template receive new values. If there are more
Nvariables in the template than words in the source string, the leftover
Nvariables receive null (empty) values.
N
NIf there are more words in the source string than variables in the
Ntemplate, the last variable in the template receives all leftover data.
N
NParsing into words removes leading and trailing blanks from each word
Nbefore it is assigned to a variable. The exception to this is the word
Nor group of words assigned to the last variable.
N
N
NThe period as a placeholder
N---------------------------
NA period in a template is a placeholder. It is used instead of a
Nvariable name, but it receives no data. It is useful:
N
N-> As a "dummy variable" in a list of variables
N
N-> Or to collect unwanted information at the end of a string.
N
N
NTemplates containing string patterns
N------------------------------------
NA string pattern matches characters in the source string to indicate
Nwhere to split it.
N
NA string pattern can be a:
NLiteral string pattern One or more characters within quotation marks.
N
NVariable string pattern A variable within parentheses with no plus (+)
Nor minus (-) or equal sign (=) before the left parenthesis.
N
N
NTemplates containing positional (numeric) patterns
N--------------------------------------------------
NA positional pattern is a number that identifies the character position
Nat which to split data in the source string. The number must be a whole
Nnumber.
N
NAn absolute positional pattern is
N-> A number with no plus (+) or minus (-) sign preceding it or with an
N   equal sign (=) preceding it
N-> A variable in parentheses with an equal sign before the left
N   parenthesis.
N
NThe number specifies the absolute character position at which to split
Nthe source string.
N
N
NPARSE VALUE ... WITH Example
N----------------------------
NHere is a parsing instruction:
N
I  parse value 'time and tide' with var1 var2 var3
N
NThe template in this instruction is: var1 var2 var3. The data to parse
Nis between the keywords PARSE VALUE and the keyword WITH, the source
Nstring time and tide. Parsing divides the source string into
Nblank-delimited words and assigns them to the variables named in the
Ntemplate as follows:
N
N  var1='time'
N  var2='and'
N  var3='tide'
N
MThat is a poor example of VALUE ... WITH as no value needed to be
Mresolved and you already knew how to assign var1, var2, and var3.
N
N
NThe PARSE VAR instruction is similar to PARSE VALUE except that the
Nsource string to parse is always a variable. In PARSE VAR, the name of
Nthe variable containing the source string follows the keywords
NPARSE VAR. In the next example, the variable stars contains the source
Nstring. The template is star1 star2 star3.
N
NPARSE VAR Example
N-----------------
I  stars='Sirius Polaris Rigil'
I  parse var stars star1 star2 star3
N
N  star1='Sirius'
N  star2='Polaris'
N  star3='Rigil'
N
NPeriod as a placeholder Example
N-------------------------------
Nstars='Arcturus Betelgeuse Sirius Rigil'
Nparse var stars . . brightest .
N
Nbrightest='Sirius'
N
NTemplate with literal string pattern Example
N--------------------------------------------
I  name='Smith, John'
I  parse var name ln ', ' fn
N
N  ln='Smith'
N  fn='John'
N
NParsing with absolute positional patterns in template Example
N-------------------------------------------------------------
I  record.1='Clemens Samuel Mark Twain '
I  record.2='Evans Mary Ann George Eliot '
I  record.3='Munro H.H. Saki '
I  do n=1 to 3
I    parse var record.n lastname 11 firstname 21 pseudonym
I    If lastname='Evans' & firstname='Mary Ann' then say 'By George!'
I  end
N Says 'By George!' after record 2
N
NParsing with relative positional patterns in template Example
N-------------------------------------------------------------
I  record.1='Clemens Samuel Mark Twain '
I  record.2='Evans Mary Ann George Eliot '
I  record.3='Munro H.H. Saki '
I  do n=1 to 3
I    parse var record.n lastname +10 firstname + 10 pseudonym
I    If lastname='Evans' & firstname='Mary Ann' then say 'By George!'
I  end
* End of wish.
