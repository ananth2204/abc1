SJCLR1610
Tz/OS JCL Reference
T-EXEC Statement -ACCT Parameter
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20170525-090555
*
@IBM Corporation
*
NSA22-7597-16 z/OS JCL Reference
NEXEC Statement
N==============
NACCT Parameter
N--------------
NUse the ACCT parameter to specify one or more subparameters of
Naccounting information that apply to this step. The system passes
Nthe accounting information to the installation's accounting routines.
N
D//             ACCTÝ.procstepname¨=(accounting-information)
I                 accounting-information: The manual states this can
I                                         be up to 143 characters.
M                   However, there is a 127 contiguous character
M                   limit. At that point a comma will have to get
M                   used and commas count as part of the 143 maximum.
N
NExample 1: Two fields.
N----------------------
NThis EXEC statement executes program JP5 and specifies accounting
Ninformation for this job step.
N
D//ST01#01 EXEC PGM=JP5,ACCT=(LOCATION8,'CHGE+3')
N
NExample 2: Special character (slash /) PROC symbol.
N---------------------------------------------------
NThis EXEC statement calls cataloged or in-stream procedure LOOKUP. The
Naccounting information applies to this job step, ST03#04, and to all
Nthe steps in procedure LOOKUP.
N
D//ST03#04 EXEC PROC=LOOKUP,ACCT=('/83468')
N
NExample 3: Override multiple PROC steps without symbols.
N--------------------------------------------------------
NThis EXEC statement calls cataloged or in-stream procedure BILLING.
NThe statement specifies different accounting information for each of
Nthe procedure steps: PAID, LATE, and BILL.
N
D//ST01#04 EXEC PROC=BILLING,ACCT.PAID=56370,ACCT.LATE=56470,
D//             ACCT.BILL='121+366'
N
MKenneth Tomiak remark:
MI read the 143 character limit and thought any installation hitting
Mthe limit would be rare indeed. But, I wanted to validate ways of
Mcoding such a long string. I had previously done some work on the
M100 character PARM field. 'Programming Using The Kenneth Tomiak
MMethod' (PUTKTM) recommends the use of //SYSIN type parameters if
Myou have a need for passing more than a short parameter.
M
MWhat follows below are some failing and some working ways of using
M143 characters in the ACCT Parameter.
M
NExample A: Single 128 character string.
N---------------------------------------
NThe first step, ST01#04, is exactly 127 characters and okay to use.
N
NThe second step, ST02#04, has 128 and causes the EXEC Statement
Nlength failure.
N
NThe third step, ST03#04, shows how 144 characters causes the ACCT field
Nfailure. Inside the parentheses are two sub-fields, the first is 127
Nchacters and the second is 16, adding up to 143. But the comma counts
Nand pushes it to fail.
N
NThe fourth step, ST04#04, reduces the second sub-field to 16 characters
Nand is error free.
N
N//ST01#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+
N//             89012345678901234567890123456789012345678901234567890123+
N//             4567890123456789012345678901234567')
N//*
N//ST02#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+
N//             89012345678901234567890123456789012345678901234567890123+
N//             45678901234567890123456789012345678')
NIEFC642I EXCESSIVE PARAMETER LENGTH ON THE EXEC STATEMENT
N
N//ST03#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+
N//             89012345678901234567890123456789012345678901234567890123+
N//             4567890123456789012345678901234567','9012345678901234')
NIEF637I EXCESSIVE ACCOUNT FIELD LENGTH IN THE ACCT FIELD
N
N//ST04#04 EXEC PGM=IEFBR14,ACCT=('1234567890123456789012345678901234567+
N//             89012345678901234567890123456789012345678901234567890123+
N//             4567890123456789012345678901234567','901234567890123')
N
NExample C: Using SET to avoid continuation.
N-------------------------------------------
NPUTKTM does not promote using a complex ACCT Paramter, however if some
Nknucklehead used their authority to force this upon you, consider
Nbreaking up the values into groups.
N
N//A020 SET A020='12345678901234567890'
N//A040 SET A040='12345678901234567890'
N//A060 SET A060='12345678901234567890'
N//A080 SET A080='12345678901234567890'
N//A100 SET A100='12345678901234567890'
N//A120 SET A120='12345678901234567890'
N//A127 SET A127='1234567'
N//*
N//ST01#01 EXEC PGM=IEFBR14,
N//             ACCT='&A020.&A040.&A060.&A080.&A100.&A120.&A127'
N
NExample D: 16 x 8 = 128 + 15 commas = 143
N-----------------------------------------
NThis shows two ways of using 8 character accounting codes with
Nparentheses, apostrophes('), and commas.
N
N//ST01#02 EXEC PGM=IEFBR14,ACCT=('12345678','01234567','90123456','8901+
N//             2345','78901234','67890123','56789012','45678901','34567+
N//             890','23456789','12345678','01234567','90123456'
N//             '89012345','78901234','67890123')
N//*
N//ST02#02 EXEC PGM=IEFBR14,
N//             ACCT=('12345678','01234567','90123456',
N//             '89012345','78901234','67890123','56789012',
N//             '45678901','34567890','23456789','12345678','01234567',
N//             '90123456','89012345','78901234','67890123')
* End of wish.
