SJCLR1701
KCOND
Tz/OS JCL Reference
T-IF...THEN/ELSE/ENDIF Statement Construct
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20170525-163655
*
@IBM Corporation
*
NSA22-7597-16 z/OS JCL Reference
NIF...THEN/ELSE/ENDIF Statement Construct
N========================================
MThis topic describes the IF/THEN, ELSE, and ENDIF statements,
Ncollectively called the IF/THEN/ELSE/ENDIF statement construct.
N
IA set of statements that make it easier to write when you want a step
Ito run. The COND=() parameter on the EXEC card uses inverse logic,
Iyou actually code when not to run the step. With IF...THEN you
Icode when to run the step.
N
D//label     IF ({step}.condition -op code) THEN
D//...
D//label   ELSE
D//...
D//label  ENDIF
N
NThe system evaluates relational-expressions that are enclosed
Nwithin parentheses prior to expressions found outside of parentheses.
NTherefore, you can control the way in which complex
Nrelational-expressions are evaluated.
N
N                                   Order of
NOperator Operation                 Evaluation
N-------- ------------------------- ----------
NNOT operator:
NNOT or ¬ NOT                       first
N
NComparison operators:
NGT or >  Greater than              second
NLT or <  Less than                 second
NNG or ¬> Not greater than          second
NNL or ¬< Not less than             second
NEQ or =  Equal to                  second
NNE or ¬= Not equal to              second
NGE or >= Greater than or equal to  second
NLE or <= Less than or equal to     second
N
NLogical operators:
NAND or & AND                       third
NOR or |  OR                        third
N
NRelational-Expression Keywords
NThe following keywords are the only keywords supported by IBM and
Nrecommended for use in relational-expressions. Any other keywords, even
Nif accepted by the system, are not intended or supported keywords.
N
NKeyword Use
NRC      indicates a return code
NABEND   indicates an abend condition occurred
N        =TRUE
N        =FALSE
N¬ABEND  indicates no abend condition occurred
NABENDCC indicates a system or user completion code
N        =SB37
N        =U0100
NRUN     indicates that the specified step started execution
N        =TRUE
N        =FALSE
N¬RUN    indicates that the specified step did not start execution
N
NExample A:
N
D//*
D//PROCS JCLLIB ORDER=(&SYSUID..JES.PROCLIB)
D//*
D//PROC001 PROC
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* ###################################################################
D//* This proc executes two steps.
D//* ###################################################################
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//PS01#02 EXEC PGM=IEFBR14
D//PS02#02 EXEC PGM=IEBGENER
D//SYSPRINT DD  SYSOUT=*
D//SYSIN    DD  DUMMY
D//SYSUT1   DD  DISP=SHR,DSN=KTOMIAK.JCL.CNTL(JCLR1701)
D//SYSUT2   DD  SYSOUT=*
D//PROC001 PEND
D//*
D//PROC002 PROC
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* ###################################################################
D//* This proc executes PROC001.
D//* ###################################################################
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//PIF1      IF (RC < 1) THEN                         <==== IF
D//PS01#01 EXEC PROC=PROC001
D//PIF1   ENDIF                                       <==== ENDIF
D//PROC002 PEND
D//*
D//PROC003 PROC
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* ###################################################################
D//* This proc executes PROC002.
D//* ###################################################################
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//LIF1      IF (RC = 0) THEN                         <==== IF
D//PS01#01 EXEC PROC=PROC002
D//LIF1   ENDIF                                       <==== ENDIF
D//PROC003 PEND
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* -------------------------------------------------------------------
D//* The steps below execute programs and prcedures based on IF results.
D//* -------------------------------------------------------------------
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//INC1 INCLUDE MEMBER=ST01#08
D//*
D//TIF1      IF (ST01#08.RC = 0) THEN             <==== IF
D//ST02#08 EXEC PGM=IEFBR14
D//ST03#08 EXEC PROC=PROC002
D//ST04#08 EXEC PROC=PROC003
D//TIF1    ELSE                                   <==== ELSE
D//ST05#08 EXEC PGM=IEFBR14
D//ST06#08 EXEC PROC=PROC003
D//*
D//TIF2      IF (ST02#08.RUN = TRUE) THEN           <==== IF
D//ST07#08 EXEC PROC=PROC003
D//ST08#08 EXEC PROC=PROC002
D//TIF2    ELSE                                     <==== ELSE
D//ST07#08 EXEC PROC=PROC001
D//TIF2   ENDIF                                     <==== ENDIF
D//TIF1   ENDIF                                   <==== ENDIF
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* ===================================================================
D//* End of Job JCLR1701.
D//* ===================================================================
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//*
D//* Execution results:
D//* ==================
D//* STEPNAME PROCSTEP    RC
D//* ST01#08              00
D//* ST02#08              00
D//* PS01#01  PS01#02     00
D//* PS01#01  PS02#02     00
D//* PS01#01  PS01#02     00
D//* PS01#01  PS02#02     00
D//* ST05#08           FLUSH
D//* PS01#01  PS01#02  FLUSH
D//* PS01#01  PS02#02  FLUSH
D//* PS01#01  PS01#02  FLUSH
D//* PS01#01  PS02#02  FLUSH
D//* PS01#01  PS01#02  FLUSH
D//* PS01#01  PS02#02  FLUSH
D//* ST07#08  PS01#02  FLUSH
D//* ST07#08  PS02#02  FLUSH
D//*
D//
* End of wish.
