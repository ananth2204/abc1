SAMSC1101
TDFSMS AMS
T-Chapter 11.
T-Syntax for DCOLLECT Parameters
EKenneth E. Tomiak <KenTomiak@KTomiak.org>
Z20180306-083300
*
@IBM Corporation
*
Bdgt2i2a1.pdf: SC26-7394-13: z/OS
BDFSMS Access Method Services for Catalogs
BVersion 1 Release 13
*
NAccess Method Services for Catalogs
N-----------------------------------
NChapter 11. DCOLLECT
N--------------------
NSyntax for DCOLLECT Parameters
N------------------------------
D  DCOLLECT /* Abbreviation: DCOL */ -
N
NRequired parameters
N-------------------
D    OUTFILE(ddname) | /* Abbreviation: OFILE */ -
D    OUTDATASET(entryname) /* Abbreviation: ODS */ -
I      OUTFILE(ddname): enter the name of a DD statement that identifies
I        the target data set.
N
I      OUTDATASET(entryname): identifies the target data set. You must
I        use a physical sequential data set with a record format of
I        V or VB. Use an LRECL that is at least the size of the longest
I        DCOLLECT record to be collected. Changes to the JCL are not
I        necessary if you use an LRECL larger than the longest record to
I        be collected. The LRECL should be at least as large as the
I        longest record DCOLLECT generates but not larger than 32756.
I        A mid-range value is appropriate.
N
I        If you use OUTDATASET, the entryname is dynamically allocated
I        with a status of either OLD or MOD, as required by the REPLACE
I        parameter.
N
NOptional parameters
N-------------------
D    BACKUPDATA /* Abbreviation: BACD */ -
I      requests that information on backed up data sets is collected
I      from the given backup control data set (BCDS).
N
I      The desired BCDS must be allocated to the ddname BCDS.
N
D    CAPPLANDATA /* Abbreviation: CAPD */ -
I      requests that capacity planning information in the output data
I      set. Allocate the MCDS to the ddname MCDS and the BCDS to the
I      ddname BCDS.
N
D    DDCMEDIA( -
D     DDCMENUL | DDCMEDA1 | DDCMEDA2 | -
D     DDCMEDA3 | DDCMEDA4 | DDCMEDA5 | DDCMEDA6 | -
D     DDCMEDA7 | DDCMEDA8 | DDCMEDA9 | DDCMEDA10 -
D    ) -
I      shows the type and format of the cartridges used for mountable
I      tape data sets used with this data class. It is mapped by one of
I      the following attributes:
N
I      DDCMENUL Media type is not specified (NULL). The constant value
I        is 0.
N
I      DDCMEDA1 Media type is MEDIA1 (cartridge system tape media). The
I        constant value is 1.
N
I      DDCMEDA2 Media type is MEDIA2 (enhanced capacity cartridge tape
I        media). The constant value is 2.
N
I      DDCMEDA3 Media type is MEDIA3 (high-performance cartridge tape
I        media). The constant value is 3.
N
I      DDCMEDA4 Media type is MEDIA4 (extended high-performance
I        cartridge tape media). The constant value is 4.
N
I      DDCMEDA5 Media type is MEDIA5 (IBM TotalStorage Enterprise Tape
I        Cartridge media). The constant value is 5.
N
I      DDCMEDA6 Media type is MEDIA6 (Enterprise WORM Tape Cartridge
I        media). The constant value is 6.
N
I      DDCMEDA7 Media type is MEDIA7 (Enterprise Economy Tape Cartridge
I        media). The constant value is 7.
N
I      DDCMEDA8 Media type is MEDIA8 (Enterprise Economy WORM Tape
I        Cartridge media). The constant value is 8.
N
I      DDCMEDA9 Media type is MEDIA9 (Enterprise Economy Tape Cartridge
I        media). The constant value is 9.
N
I      DDCMEDA10 Media type is MEDIA10 (Enterprise Economy WORM Tape
I        Cartridge media). The constant value is 10.
N
D    DDCRECTE( -
D     DDCRTNUL | DDC18TRK | DDC36TRK | -
D     DDC128TK | DDC256TK | DDC384TK | -
D     DDCEFMT1 | DDCEFMT2 | DDCEFMT3 | DDCEEFM3 -
D    ) -
I      indicates the number of recording tracks on the cartridge used
I      for the mountable tape data sets associated with this data class.
N
I      DDCRTNUL The recording technology is not specified (NULL). The
I        constant value is 0.
N
I      DDC18TRK The recording technology is 18TRACK. The constant value
I        is 1.
N
I      DDC36TRK The recording technology is 36TRACK. The constant value
I        is 2.
N
I      DDC128TK The recording technology is 128TRACK. The constant value
I        is 3.
N
I      DDC256TK The recording technology is 256TRACK. The constant value
I        is 4.
N
I      DDC384TK The recording technology is 384TRACK. The constant value
I        is 5.
N
I      DDCEFMT1 The recording technology is EFMT1. The constant value
I        is 6.
N
I      DDCEFMT2 The recording technology is EFMT2. The constant value
I        is 6.
N
I      DDCEFMT3 The recording technology is EFMT3. The constant value
I        is 6.
N
I      DDCEEFM3 The recording technology is EEFMT3. The constant value
I        is 6.
N
D    ERRORLIMIT(value) /* Abbreviation: ELIMIT */ -
I      Specifies the maximum number of errors for which detailed
I      DCOLLECT error messages can print during program run.
I      ERRORLIMIT prevents runaway message output.
N
I      The default for ERRORLIMIT is 2,147,483,647 errors, but any
I      number between 1 and 2,147,483,647 can be given. Processing
I      continues even though the error limit has been reached.
N
D    EXCLUDEVOLUMES(volser volser...) /* Abbreviation: EXV */ -
I      allows you to exclude information on a selected volume or group
I      of volumes. One or more volumes selected by using the
I      STORAGEGROUP and VOLUMES keywords can be excluded with this
I      keyword. Options for EXCLUDEVOLUMES are:
N
I      -> a fully specified volume serial number, containing 1-to-6
I         characters
N
I      -> a partially specified volume serial number using a single
I         trailing asterisk as a placeholder for all remaining
I         characters, or
N
I      -> any combination of the above.
N
D    EXITNAME(entrypoint) /* Abbreviation: EXIT */ -
I      Specifies the 1-to-8 character entrypoint name for an external
I      DCOLLECT user exit module. Load it to an APF-authorized library
I      for access at the time of DCOLLECT invocation. If you do not use
I      it, the default DCOLLECT user exit, IDCDCX1, is used.
N
D    MIGRATEDATA /* Abbreviation: MIGD */ -
I      Requests collection of information on migrated data sets from
I      the specified MCDS (Migration Control Data Set). The desired
I      MCDS must be allocated to the ddname MCDS.
N
D    MIGRSNAPALL | MIGRSNAPERR -
I      MIGRSNAPALL /* Abbreviation: MSALL */: asks ARCUTIL to do SNAP
I        processing, and is used for diagnostic reasons only. See
I        z/OS DFSMShsm Implementation and Customization Guide for more
I        information on SNAP ALL processing. Do not use it with
I        MIGRSNAPERR. It is ignored if you do not use MIGRATEDATA,
I        BACKUPDATA, or CAPPLANDATA.
N
I      MIGRSNAPERR /* Abbreviation: MSERR */: requires ARCUTIL to run
I        SNAP processing when an error occurs during ARCUTIL processing.
I        Use it for diagnostic purposes only. See z/OS DFSMShsm
I        Implementation and Customization Guide for more information
I        on SNAP ALL processing. Do not use it with MIGRSNAPALL. It is
I        ignored if you do not use MIGRATEDATA, BACKUPDATA, or
I        CAPPLANDATA.
N
D    NODATAINFO /* Abbreviation: NOD */ -
I      Requests that no data set information records are generated or
I      written to the output data set. Use this parameter if you want
I      only volume information generated for the given volumes or
I      storage groups.
N
D    NOVOLUMEINFO /* Abbreviation: NOV */ -
I      Requests that no volume information records are generated or
I      written to the output data set. Use this parameter if you want
I      only data set information generated for the given volumes or
I      storage groups.
N
D    REPLACE | APPEND -
I      Specifies whether the output data is to replace existing data
I      or whether the output data is to be added to the end of the
I      existing data set. The REPLACE/APPEND applies when OUTDATASET is
I      used. If you use OUTFILE, data set processing is controlled by
I      the JCL DISP parameter: OLD replaces the current contents of the
I      data set, and MOD appends new records to the end of the data set.
N
I      REPLACE /* Abbreviation: REPL */: asks that the contents of the
I        output data set are overwritten with new data. All existing
I        data in the output data set is lost when this parameter is
I        selected.
N
I      APPEND /* Abbreviation: APP */: writes new records starting at
I        the end of the existing data, if any exists. All existing
I        data is preserved when this parameter is selected.
N
D    SMSDATA( /* Abbreviation: SMS */ -
D      SCDSNAME(entryname) | -
D      ACTIVE -
D    ) -
I      Requests that SMS configuration data be included in the DCOLLECT
I      output data set. This parameter can include either an SCDS name
I      or the keyword ACTIVE.
N
I      SCDSNAME(entryname) /* Abbreviation: SCDS */: is the source of
I        the SMS control data that is to be collected.
N
I        entryname: is used to specify the name of an existing cataloged
I          SCDS. An enqueue with a major name of IGDCDS is issued to
I          serialize access to the control data set. The enqueue is
I          held for the duration of SMSDATA processing.
N
I      ACTIVE: takes the SMS information from the configuration that is
I        currently active on the system.
N
I      One or more of the following record types is created when you use
I      SMSDATA:
N
I        Type Description
I        ---- ---------------------------------------------------
I        DC   Data Class construct information
I        SC   Storage Class construct information
I        MC   Management Class construct information
I        BC   Base Configuration information
I        SG   Storage Group construct information
I        VL   Storage Group volume information
I        AG   Aggregate Group information
I        DR   OAM Drive Record information
I        LB   OAM Library Record information
I        CN   Cache Names from the Base Configuration Information
I        AI   Accounting Information for the ACS routines
N
D    STORAGEGROUP(sgname sgname...) /* Abbreviation: STOG */ -
I      lists the storage groups from which information is to be
I      collected. For each storage group listed, a list of online
I      volume serials is generated. Information is collected for all
I      data sets residing on those volumes unless you use NODATAINFO.
I      Volume information is collected unless you use NOVOLUMEINFO.
I      A maximum of 255 storage groups can be selected.
N
I      Although several storage groups can be specified, and the
I      volume list might have duplicates, each volume's information is
I      only processed once.
N
D    VOLUMES(option option...) /* Abbreviation: VOL */
I      lists the volumes from which information is to be collected. For
I      each online volume serial listed (or resolved from generic
I      specifications), information is collected for all data sets
I      residing on those volumes unless you use NODATAINFO. Volume
I      information is collected unless you use NOVOLUMEINFO. You can
I      use a maximum of 255 volume serials.
N
I      option: a fully qualified volser or a volser pattern.
N
I        -> A fully specified volume serial number, containing 1-to-6
I           characters.
N
I        -> A partially specified volume serial number using a single
I           asterisk as a place holder for all remaining characters.
N
I        -> Six asterisks to indicate the system residence volume
I           (SYSRES).
N
I        -> Any combination of the above.
N
I      For example, you might use one of these for the volume serial
I      number:
N
I        -> SYS001: This collects data from volume SYS001 only.
N
I        -> SYS*: This collects data from all online volumes beginning
I           with SYS.
N
I        -> ******: This collects data from the system residence volume
I           (SYSRES).
N
I        -> **: This collects data from all online volumes
N
I      Although the same volumes can be specified several times, each
I      volume's information is only processed once.
* End of wish.
