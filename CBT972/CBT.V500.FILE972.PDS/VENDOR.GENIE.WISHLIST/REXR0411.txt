SREXR0411
Tz/OS TSO/E REXX Reference
T-Chapter 4. Functions
T-Built-in functions
T-CONDITION
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171215-081055
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NCONDITION
N-------
NCONDITION returns the condition information associated with the
Ncurrent trapped condition.
N
N
NSyntax:
D  CONDITION(option)
I    option: One of:
I            Condition name: returns the name of the current trapped
I                            condition.
N
I            Description: returns any descriptive string associated with
I                         the current trapped condition. If no
I                         description is available, returns a null
I                         string.
N
I            Instruction: returns either CALL or SIGNAL, the keyword for
I                         the instruction processed when the current
I                         condition was trapped.
I
I                         This is the default if you omit option.
N
I            Status: returns the status of the current trapped
I                    condition.
I
I                    This can change during processing, and is one of:
I                    ON - the condition is enabled
I                    OFF - the condition is disabled
I                    DELAY - any new occurrence of the condition is
I                            delayed or ignored.
N
N
NExample
N-------
I  Say ""
I  Say "Condition()   -"CONDITION()"-> 'CALL' /* perhaps */    "
I  Say "Condition('C')-"CONDITION('C')"-> 'FAILURE'               "
I  Say "Condition('I')-"CONDITION('I')"-> 'CALL'                  "
I  Say "Condition('D')-"CONDITION('D')"-> 'FailureTest'           "
I  Say "Condition('S')-"CONDITION('S')"-> 'OFF' /* perhaps */     "
I  Say ""
I  Signal ON ERROR   NAME error_rtn
I  Signal ON Failure NAME failure_rtn
I  Signal ON Halt    NAME halt_rtn
I  Signal ON NoValue NAME novalue_rtn
I  Signal ON SYNTAX  NAME syntax_rtn
I  Call syntax
I  Say ""
I  Signal ON ERROR
I  Signal ON Failure
I  Signal ON Halt
I  Signal ON NoValue
I  Signal ON SYNTAX
I  x = novalue_var + 3 + A
I  return 0
I
Ierror_rtn:
I  say "Error_rtn:"
Ifailure_rtn:
I  say "Failure_rtn:"
Ihalt_rtn:
I  say "Halt_rtn:"
Inovalue_rtn:
I  say "NoValue_rtn:"
Isyntax_rtn:
I  say "Syntax_rtn:"
IERROR:
I  say "ERROR:"
IFAILURE:
I  say "FAILURE:"
IHALT:
I  say "HALT:"
INOVALUE:
I  say "NOVALUE:"
ISYNTAX:
I  say "SYNTAX:"
I  condition_null = CONDITION()
I  Say "Condition()   -"CONDITION_null
I  Say "Condition()   -"CONDITION()"-> 'CALL' /* perhaps */    "
I  Say "Condition('Condition Name')-"CONDITION('C')"-> 'FAILURE' "
I  Say "Condition('Instruction')-"CONDITION('I')"-> 'CALL'       "
I  Say "Condition('Description')-"CONDITION('D')"-> 'FailureTest'"
I  Say "Condition('Status')-"CONDITION('S')"-> 'OFF' /* perhaps */"
I  return 0
* End of wish.
