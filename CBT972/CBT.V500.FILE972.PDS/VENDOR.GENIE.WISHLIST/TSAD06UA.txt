STSAD06UA
Tz/OS MVS Diagnosis -Tools and Service Aids
T-Chapter 6: SNAP dump
T-User provided sample
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20170901-075555
*
@IBM Corporation
*
Biea2v1c2.pdf
BGA22-7589-19 z/OS MVS Diagnosis
B-Tools and Service Aids
BVersion 1 Release 13
*
NTools and Service Aids
N======================
NChapter 6: SNAP Dump
N--------------------
NUser provided sample
N--------------------
NKenneth E. Tomiak put together this sample that can be used to learn
Nhow to use the SNAP macro.
N
D//jobname JOB ('CBT','TSAD'),'TSAD06UA: SNAP DUMP',
D//             NOTIFY=&SYSUID,
D//             CLASS=B,REGION=6M,
D//             MSGCLASS=X,COND=(1,LT)
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* ===================================================================
D//*
D//* Dataset: KTOMIAK.DEMO.CNTL(TSAD06UA)
D//* Contact: "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
D//* Purpose: This job demonstrates how to use the SNAP macro in your
D//*          HLASM code.
D//*
D//* -------------------------------------------------------------------
D//*
D//* History of Modifications
D//* ========================
D//* vv.mm When     Who / What you did ... (Newest change at the top.)
D//* ----- -------- ----------------------------------------------------
D//* 01.00 20170902 "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
D//*                1) Original base code.
D//* ----- -------- ----------------------------------------------------
D//*
D//* -------------------------------------------------------------------
D//* ===================================================================
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//*
D//OUTDS OUTPUT CLASS=X,
D//             DEFAULT=Y,
D//             OUTDISP=WRITE
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* Assemble the source into an OBJECT deck.
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//ST01#05 EXEC PGM=ASMA90,
D//             PARM=(OBJECT,NODECK,NOESD,NORLD)
D//SYSIN     DD *
DTSAD06UA TITLE 'DEMONSTRATE USING SNAP TO DEBUG ERRORS'
D*
D*
D* Thanks go to http://planetmvs.com/hex/ for
D* a decent working example of SNAP.
D*
D*
D* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D* ===================================================================
D*
D* Dataset: KTOMIAK.DEMO.HLASM(TSAD06UA)
D* Purpose: This job demonstrates how to use the SNAP macro in your
D*          HLASM code.
D*
D* -------------------------------------------------------------------
D*
D* History of Modifications
D* ========================
D* vv.mm When     Who / What you did ... (Newest change at the top.)
D* ----- -------- ----------------------------------------------------
D* 01.00 20170902 "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
D*                1) Original base code.
D* ----- -------- ----------------------------------------------------
D*
D* -------------------------------------------------------------------
D* ===================================================================
D* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D*
DTSAD06UA AMODE 31
DTSAD06UA RMODE 24
DTSAD06UA CSECT
D         SAVE  (14,12),,'TSAD06UA V1.0.0 &SYSDATE &SYSTIME'
D         LR    R12,R15
D         USING TSAD06UA,R12
D         LR    R15,R13             old save area
D         LA    R13,SAVEAREA        new save area
D         ST    R13,8(,R15)         new pointer
D         ST    R15,4(,R13)         old pointer
D*
D         TITLE 'MAIN PROCESSING'
D*
D         OPEN  (SNAPDCB,(OUTPUT))         Open SNAP DCB
D         OPEN  (SYSPRINT,OUTPUT)          Open SYSPRINT
D         MVC   OUTLINE,PRINT1
D         PUT   SYSPRINT,OUTLINE
D*
D         MVC   OUTLINE,PRINT2
D         PUT   SYSPRINT,OUTLINE
D*
D         LA    R2,DATAB                   Beginning of Area
D         LA    R3,DATAE                   Get to the end
D         SNAP  DCB=SNAPDCB,ID=1,          SNAP the storage             +
D               STORAGE=((2),(3))
D*        SNAP  DCB=(8),ID=3,SDATA=CB
D*
D         MVC   OUTLINE,PRINT9
D         PUT   SYSPRINT,OUTLINE
D         MVC   NINES,THREES
D         MVC   OUTLINE,PRINT3
D         PUT   SYSPRINT,OUTLINE
D*
D         SNAP  DCB=SNAPDCB,ID=2,          SNAP the storage             +
D               STORAGE=((2),(3))
D*
D         MVC   OUTLINE,PRINT4
D         PUT   SYSPRINT,OUTLINE
D         MVC   OUTLINE,BLANK1
D         PUT   SYSPRINT,OUTLINE
D         MVC   OUTLINE,THANK1
D         PUT   SYSPRINT,OUTLINE
D         MVC   OUTLINE,THANK2
D         PUT   SYSPRINT,OUTLINE
D         CLOSE SYSPRINT
D*
D         TITLE 'NORMAL END OF PROCESSING'
D*
D_EXIT    EQU *
D         CLOSE SNAPDCB                    Close the SNAP DCB
D         L     R13,4(,R13)         back a save area
D         SAVE  (1)                 save program entry point
D         RETURN (14,12),T,RC=(15)
D*
D         EJECT
D*
D         TITLE 'Constants, variables, DSECTs, and EQUATEs'
DDATAB    EQU   *
D*
D*      -------------------------------------------------------
D*      | Constants                                           |
D*      -------------------------------------------------------
DCOPYRGHT DC    C'Copyright: Kenneth E. Tomiak'
D*
D         DC    Cl12'PRINT--LINES'
DPRINT1   DC    CL133'0TSAD06UA PROGRAM STARTED'
DPRINT2   DC    CL133'1TSAD06UA First snap'
DPRINT9   DC    CL133'1TSAD06UA MVC   NINES,THREES follows'
DPRINT3   DC    CL133'1TSAD06UA Second snap'
DPRINT4   DC    CL133'1TSAD06UA Close SYSPRINT'
DBLANK1   DC    CL133' '
DTHANK1   DC    CL133'2Thanks go to http://planetmvs.com/hex/ for'
DTHANK2   DC    CL133'1a decent working example of SNAP.'
D         DC    Cl12'PRINT--LINES'
D*
D*      -------------------------------------------------------
D*      | Variables                                           |
D*      -------------------------------------------------------
D*
D         DC    Cl9'VARIABLES'
D         DS    0D
D         DC    CL8'SAVEAREA'
DSAVEAREA DC    18F'0'              save area
D*
D         DC    C'(PL8) 333 follows:'
DTHREES   DC    PL8'333'
D         DC    C'(PL8) 999 follows:'
DNINES    DC    PL8'999'
D*
D         DC    C'SILLY BUFFER USE WHEN PUT COULD USE DIRECTLY THE PRINT+
D                LINES DEFINED ABOVE'
DOUTLINE  DS    0CL133' '
DOUTANSI  DS    CL1
DOUTBUFF  DS    CL132
D*
D*      -------------------------------------------------------
D*      | Literal pool                                        |
D*      -------------------------------------------------------
D*
D         DC    CL8'LTORG   '
D         LTORG ,
D*
D*      -------------------------------------------------------
D*      | Dsects                                              |
D*      -------------------------------------------------------
D*
D         DC    CL8'DSECTS  '
DSYSPRINT DCB   DDNAME=SYSPRINT,                                        M
D               MACRF=PM,                                               O
D               DSORG=PS,                                               R
D               RECFM=FBA,                                              E
D               BLKSIZE=0,                                              +
D               LRECL=133
D*
DSNAPDCB  DCB   DDNAME=SNAPSHOT,                                        M
D               MACRF=(W),                                              O
D               DSORG=PS,                                               R
D               RECFM=VBA,                                              E
D               BLKSIZE=1632,                                           +
D               LRECL=125
D*
D*      -------------------------------------------------------
D*      | Equates                                             |
D*      -------------------------------------------------------
D*
D         DC    CL8'EQUATES '
D         YREGS ,                   register equates
D*
DDATAE    EQU   *-1
D*
D         END   ,
D//SYSPRINT  DD SYSOUT=*                                  )
D//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB
D//SYSUT1    DD UNIT=VIO,SPACE=(CYL,2)
D//SYSLIN    DD DISP=(NEW,PASS),DSN=&&ASMOUT,
D//             UNIT=SYSALLDA,SPACE=(TRK,(15,15,0)),
D//             DCB=(DSORG=PS,RECFM=FB,BLKSIZE=0,LRECL=80)
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* Bind the OBJECT deck into a load module.
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//ST02#05 EXEC PGM=IEWBLINK,
D//             PARM='NCAL,MAP,LET,LIST,COMPAT=LKED'
D//SYSLIN    DD DISP=(OLD,DELETE),DSN=&&ASMOUT
D//          DD *
D         IDENTIFY TSAD0690('IDR: LINKED FOR DEMO')
D         ENTRY   TSAD06UA
D         NAME    TSAD06UA(R)
D/*
D//SYSPRINT  DD DISP=SHR,DSN=&SYSUID..DEMO.IEWBLINK(TSAD06UA)
D//SYSUT1    DD UNIT=SYSDA,SPACE=(2048,(200,20))
D//SYSLMOD   DD DISP=OLD,DSN=&SYSUID..DEMO.LOADLIB
D//*            DCB=(DSORG=PO,RECFM=U,BLKSIZE=32760,LRECL=0)
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* Delete SNAPSHOT for rerun.
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//ST03#05 EXEC PGM=IEFBR14
D//SNAPSHOT  DD DISP=(MOD,DELETE),DSN=&SYSUID..DEMO.SNAPSHOT,
D//             UNIT=SYSALLDA,SPACE=(TRK,(1))
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* Execute the load module.
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//ST04#05 EXEC PGM=TSAD06UA
D//STEPLIB   DD DISP=SHR,DSN=&SYSUID..DEMO.LOADLIB
D//SYSPRINT  DD SYSOUT=*,
D//             DCB=BLKSIZE=0
D//SNAPSHOT  DD DISP=(NEW,CATLG),DSN=&SYSUID..DEMO.SNAPSHOT,
D//             UNIT=SYSALLDA,SPACE=(TRK,(200,200))
D//*            DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=1632,LRECL=125)
D//SYSABEND  DD SYSOUT=*
D//*
D//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
D//* Print the SNAP dump contents.
D//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
D//ST05#05 EXEC PGM=IDCAMS
D//SYSIN     DD *
D  REPRO INFILE(SYSUT1) OUTFILE(SNAPOUT)
D/*
D//SYSPRINT  DD SYSOUT=*
D//SYSUT1    DD DISP=OLD,DSN=&SYSUID..DEMO.SNAPSHOT
D//SNAPOUT   DD SYSOUT=*
D//*
D//* End of Job TSAD06UA
D//
* End of wish.
