SISPG0210
TISPF Services Guide
T-Chapter 2.
T-EDIT-Edit a data set
E"Kenneth Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180513-163009
*
@IBM Corporation
*
Bf54sg00_v2r3.pdf: SC19-3626-30: ISPF
B-Services Guide
B-z/OS Version 2 Release 3
*
NInteractive System Productivity Facility (ISPF) Services Guide
N==============================================================
NChapter 2. Description of the ISPF services
N-------------------------------------------
NEDIT-Edit a data set
N--------------------
NThe EDIT service provides an interface to the ISPF editor and bypasses
Nthe display of the Edit Entry Panel. The EDIT interface allows you to
Nuse a customized panel for displaying data (use panel ISREFR01 as a
Nmodel when creating your panel), and lets you specify the initial macro
Nand the edit profile to be used. You can use EDIT to look at any ISPF
Nlibrary, concatenation of ISPF libraries, or data set that can be
Nallocated by using the LMINIT service. You can use the EDIT service
Nrecursively, either through nested dialogs or by entering an EDIT
Ncommand while editing. z/OS ISPF Edit and Edit Macros contains a
Ncomplete description of the editor.
N
NWhen EDIT is operating in recovery mode, an audit trail of your
Ninteractions is automatically recorded in an ISPF-controlled data set.
NFollowing a system failure, you can use the audit trail to recover the
Ndata you were editing.
N
NNote:
N  1. Dialogs that invoke the EDIT service may invoke the EDREC service
N     first to start edit recovery, because the EDIT service does not
N     do edit recovery.
N
N  2. The EDIT service might alter the DISPLAY environment. Do not
N     expect the DISPLAY environment that existed before invoking the
N     EDIT service to remain unchanged.
N
N  3. The EDIT service cannot be issued by a PL/I main program that also
N     uses subtasking.
N
N  4. When designing applications that will use the EDIT service, be
N     aware that you cannot run EDIT in a pop-up window.
N
NA dialog using EDIT can place data into the ZEDUSER dialog variable in
Nthe shared pool. The data in ZEDUSER is saved in the edit recovery
Ntable as an extension variable when the recovery data set is
Ninitialized. This is done if RECOVERY is ON when first entering Edit
Nor after using the SAVE command. This data is then made available in
Ndialog variable ZEDUSER at the time edit recovery is processed.
N
NYou can use EDIT to edit workstation files on the host and host data
Nsets on the workstation. This function is called distributed editing.
N
MSee the manual for more information on distributed editing.
N
NCommand invocation format
N-------------------------
D  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
D  done = 0
D  DO WHILE done = 0
D    ADDRESS ISPEXEC "EDREC QUERY"
D    IF (RC = 4) THEN DO
D      ADDRESS ISPEXEC "EDREC DEFER"
D    END
D    ELSE DO
D      done = 1
D    END
D  END
D
D  ADDRESS ISPEXEC "EDIT" ,
D    "DATASET(dsname)" ,
I      The data set name, in TSO syntax, of the data set to be edited.
I      This is equivalent to the "other" data set name on the Edit Entry
I      Panel. You can specify a fully qualified data set name enclosed
I      in apostrophes ('dsname'). If the apostrophes are omitted, the
I      TSO data set prefix from the user's TSO profile is automatically
I      prefixed to the data set name. The maximum length of this
I      parameter is 56 characters.
N
I      For ISPF libraries and MVS partitioned data sets, you can specify
I      a member name or a pattern enclosed in parentheses. If you do not
I      specify a member name or if you specify a member pattern as part
I      of the dsname specification when the DATASET keyword is used, a
I      member selection list for the ISPF library, concatenation of
I      libraries, or MVS partitioned data set is displayed. See
I      SC19-3627-30 (f54ug00_v2r3.pdf) z/OS ISPF User's Guide Vol I for
I      more information about patterns and pattern matching.
N
I      Note: You can also specify a VSAM data set name. If a VSAM data
I      set is specified, ISPF checks the ISPF configuration table to see
I      if VSAM support is enabled. If it is, the specified tool is
I      invoked. If VSAM support is not enabled, an error message is
I      displayed.
N
D    "VOLUME(serial)" ,
I      The serial number of the volume on which the data set resides.
I      If you omit this parameter or code it as blank, the system
I      catalog is searched for the data set name. The maximum length of
I      this parameter is 6 characters.
N
M      The system catalog is your friend.
N
I    "PASSWORD(pswd-value)" ,
N      /* Obsolete if you have CA-ACF2, RACF, CA-Top-Secret. */ ,
I      The password if the data set has MVS password protection. Do not
I      specify a password for data sets that are protected by Resource
I      Access Control Facility (RACF), CA-ACF2, OR CA-Top-Secret.
N
D    "PANEL(panel-name)" ,
I      The name of a customized edit panel, created by you, to be used
I      when displaying the data. See GC19-3623-30 (f54PC00_v2r3.pdf)
I      z/OS ISPF Planning and Customizing for information about
I      developing a customized panel.
N
M      SC19-3619-30 (f54dg00_v2r3.pdf) ISPF Dialog Developer's Guide
M      and Reference Chapter 6 and Chapter 7 have the details you want
M      for defining a panel. for information about developing a
I      customized panel.
N
D    "MACRO(macro-name)" ,
I      The name of the first edit macro to be executed after the data
I      is read, but before it is displayed. See SC19-3621-30
I      (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros for more
I      information on macros.
N
D    "PROFILE(profile-name)" ,
I      The name of the edit profile to be used. If you do not specify a
I      profile name, the profile name defaults to the ISPF library type
I      or last qualifier of the "other" TSO data set name. See
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros
I      for more information.
N
D    "FORMAT(format-name)" ,
I      The name of the format to be used to reformat the data. The
I      format-name parameter is provided to support the IBM 5550
I      terminal using the Double-Byte Character Set (DBCS).
N
D    "MIXED( YES | NO )" ,
I      For the MIXED parameter, if YES is specified, the EDIT service
I      treats the data as mixed-mode DBCS data. If NO is specified, the
I      data is treated as EBCDIC (single-byte) data. This parameter is
I      provided to support the IBM 5550 terminal using the Double-Byte
I      Character Set (DBCS).
N
I      NO is the default.
N
I    "LOCK( YES | NO )" ,
N      /* Obsolete. */
I      The LOCK parameter is no longer used since the removal of LMF
I      from the ISPF product, but is left in for compatibility purposes.
N
I      If YES is specified the edit service will fail with return code
I      12. If you want to be able to specify YES and have the editor
I      ignore the value, change the FAIL_ON_LMF_LOCK keyword value in
I      the ISPF Configuration Table to NO.
N
I      YES is the default.
N
D    "CONFIRM( YES | NO )" ,
I      For the CONFIRM parameter, if you specify YES and then attempt to
I      CANCEL, MOVE, or REPLACE data while in EDIT mode, ISPF displays a
I      pop-up panel that requires you to confirm the action. Because
I      members or data sets that are moved, canceled, or replaced are
I      deleted, CONFIRM acts as a safeguard against accidental data
I      loss. If you want to terminate the edit session without saving
I      the data, press ENTER. If you made a mistake and want to return
I      to the edit session, enter the END command. If you specify NO as
I      the CONFIRM value, you will not be required to confirm a CANCEL,
I      MOVE, or REPLACE.
N
D    "WS( YES | NO )" ,
I      For the WS keyword, if you specify YES, the EDIT service edits
I      the host data set or workstation file on the workstation, using
I      the workstation editor configured in the ISPF Workstation Tool
I      Integration Program. For more information see SC19-3628-30
I      (f54u200_v2r3.pdf) z/OS ISPF User's Guide Vol II. If you specify
I      NO, the EDIT service edits the host data set or workstation file
I      on the host using the ISPF editor.
N
D    "WRAP" ,
I      Indicates how the editor should process host data that has been
I      edited on the workstation and now contains records longer than
I      the logical record length of the host data set. Specifying WRAP
I      causes the editor to upload the data to the host data set,
I      wrapping any lines that are longer than the logical record
I      length. Leaving off the WRAP parameter or passing a blank value
I      will cause the editor to display a prompt panel to the user with
I      these options:
N
I      -> upload the data, wrapping any long lines
N
I      -> have the editor create a temporary data set with a logical
I         record length large enough to handle the data, then upload
I         the data to that temporary data set.
N
I      This parameter is only valid when WS(YES) is specified.
N
D    "PRESERVE" ,
I      When specified, the editor stores the original length of each
I      record in variable-length data sets and when a record is saved,
I      the original record length is used as the minimum length for the
I      record. The editor always includes a blank at the end of a line
I      if the length of the record is zero or eight. Records can be
I      extended by adding nonblank data to the record or by using the
I      SAVE_LENGTH edit macro command. For more information, refer to
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros.
N
D    "PARM(parm-var)" ,
I      The name of an ISPF variable that contains parameters which are
I      to be passed to the initial macro specified by macro-name. The
I      variable value must not exceed 200 bytes in length. If no macro
I      name is specified, parm-var must be blank or not specified.
N
D    "ASCII" | "UTF8" ,
I      This parameter can be specified when invoking EDIT to edit data
I      encoded in ASCII (or UTF-8) and the file is not tagged with a
I      CCSID of 819 (or 1208).
N
I      When ASCII is specified or the file is tagged with CCSID 819,
I      the editor renders the ASCII data readable by converting it to
I      the CCSID of the terminal. Also, if set for a z/OS UNIX file,
I      the editor breaks up the data into records using the ASCII
I      linefeed character (X'0A') and the ASCII carriage return
I      character (X'0D') as the record delimiter. For z/OS UNIX files,
I      the linefeed and carriage return characters are removed from the
I      data loaded into the editor but written back to the file when the
I      data is saved. This option should not be used when editing
I      workstation files which are converted to EBCDIC when they are
I      loaded from the workstation.
N
I      When UTF8 is specified, or the file is tagged with CCSID 1208,
I      the equivalent actions happen, except for UTF-8 instead of ASCII.
N
D    "LINECMDS(tabname)" ,
I      A fullword fixed binary integer containing the length of the
I      buffer parameter.
N
D    "GEN(generation)"
I      A fullword fixed integer containing the relative or absolute
I      generation of the member to be edited. If the value is negative,
I      it is a relative generation. If the value is positive, it is an
I      absolute generation that the caller has determined to be valid.
I      The value 0 (zero) indicates the current generation and is
I      equivalent to not specifying the parameter. This parameter is
I      valid only when the specified member is in a PDSE version 2 data
I      set that is configured for member generations.
N
N  or
N
D  ADDRESS ISPEXEC "EDIT" ,
D    "DATAID(data-id))" ,
I      The data ID that was returned from the LMINIT service. The
I      maximum length of this parameter is 8 characters.
N
I      You can use the LMINIT service in either of two ways before
I      invoking the EDIT service:
N
I      -> You can use LMINIT to allocate existing data sets by
I         specifying a data set name or ISPF library qualifiers. LMINIT
I         returns a data ID as output. This data ID, rather than a data
I         set name, is then passed as input to the EDIT service.
N
I      -> The dialog can allocate its own data sets by using the TSO
I         ALLOCATE command or MVS dynamic allocation, and then passing
I         the ddname to LMINIT. Again, a data ID is returned as output
I         from LMINIT and subsequently passed to the EDIT service. This
I         procedure is called the ddname interface to EDIT. It is
I         particularly useful for editing VIO data sets, which cannot
I         be accessed by data set name because they are not cataloged.
N
D    "MEMBER(member-name)" ,
I      A member of an ISPF library or MVS partitioned data set, or a
I      pattern. If you do not specify a member name when the MEMBER
I      keyword or call invocation is used, or if a pattern is specified,
I      a member selection list for the ISPF library, concatenation of
I      libraries, or MVS partitioned data set is displayed. See
I      XXXX-XXXX-XX (f54ug00_v2r3.pdf) the z/OS ISPF User's Guide Vol I
I      for more information about patterns and pattern matching.
N
D    "PANEL(panel-name)" ,
I      The name of a customized edit panel, created by you, to be used
I      when displaying the data. See GC19-3623-30 (f54PC00_v2r3.pdf)
I      z/OS ISPF Planning and Customizing for information about
I      developing a customized panel.
N
M      SC19-3619-30 (f54dg00_v2r3.pdf) ISPF Dialog Developer's Guide
M      and Reference Chapter 6 and Chapter 7 have the details you want
M      for defining a panel. for information about developing a
I      customized panel.
N
D    "MACRO(macro-name)" ,
I      The name of the first edit macro to be executed after the data
I      is read, but before it is displayed. See SC19-3621-30
I      (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros for more
I      information on macros.
N
D    "PROFILE(profile-name)" ,
I      The name of the edit profile to be used. If you do not specify a
I      profile name, the profile name defaults to the ISPF library type
I      or last qualifier of the "other" TSO data set name. See
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros
I      for more information.
N
D    "FORMAT(format-name)" ,
I      The name of the format to be used to reformat the data. The
I      format-name parameter is provided to support the IBM 5550
I      terminal using the Double-Byte Character Set (DBCS).
N
D    "MIXED( YES | NO )" ,
I      For the MIXED parameter, if YES is specified, the EDIT service
I      treats the data as mixed-mode DBCS data. If NO is specified, the
I      data is treated as EBCDIC (single-byte) data. This parameter is
I      provided to support the IBM 5550 terminal using the Double-Byte
I      Character Set (DBCS).
N
I      NO is the default.
N
I    "LOCK( YES | NO )" ,
N      /* Obsolete. */
I      The LOCK parameter is no longer used since the removal of LMF
I      from the ISPF product, but is left in for compatibility purposes.
N
I      If YES is specified the edit service will fail with return code
I      12. If you want to be able to specify YES and have the editor
I      ignore the value, change the FAIL_ON_LMF_LOCK keyword value in
I      the ISPF Configuration Table to NO.
N
I      YES is the default.
N
D    "CONFIRM( YES | NO )" ,
I      For the CONFIRM parameter, if you specify YES and then attempt to
I      CANCEL, MOVE, or REPLACE data while in EDIT mode, ISPF displays a
I      pop-up panel that requires you to confirm the action. Because
I      members or data sets that are moved, canceled, or replaced are
I      deleted, CONFIRM acts as a safeguard against accidental data
I      loss. If you want to terminate the edit session without saving
I      the data, press ENTER. If you made a mistake and want to return
I      to the edit session, enter the END command. If you specify NO as
I      the CONFIRM value, you will not be required to confirm a CANCEL,
I      MOVE, or REPLACE.
N
D    "WS( YES | NO )" ,
I      For the WS keyword, if you specify YES, the EDIT service edits
I      the host data set or workstation file on the workstation, using
I      the workstation editor configured in the ISPF Workstation Tool
I      Integration Program. For more information see SC19-3628-30
I      (f54u200_v2r3.pdf) z/OS ISPF User's Guide Vol II. If you specify
I      NO, the EDIT service edits the host data set or workstation file
I      on the host using the ISPF editor.
N
D    "WRAP" ,
I      Indicates how the editor should process host data that has been
I      edited on the workstation and now contains records longer than
I      the logical record length of the host data set. Specifying WRAP
I      causes the editor to upload the data to the host data set,
I      wrapping any lines that are longer than the logical record
I      length. Leaving off the WRAP parameter or passing a blank value
I      will cause the editor to display a prompt panel to the user with
I      these options:
N
I      -> upload the data, wrapping any long lines
N
I      -> have the editor create a temporary data set with a logical
I         record length large enough to handle the data, then upload
I         the data to that temporary data set.
N
I      This parameter is only valid when WS(YES) is specified.
N
D    "PRESERVE" ,
I      When specified, the editor stores the original length of each
I      record in variable-length data sets and when a record is saved,
I      the original record length is used as the minimum length for the
I      record. The editor always includes a blank at the end of a line
I      if the length of the record is zero or eight. Records can be
I      extended by adding nonblank data to the record or by using the
I      SAVE_LENGTH edit macro command. For more information, refer to
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros.
N
D    "PARM(parm-var)" ,
I      The name of an ISPF variable that contains parameters which are
I      to be passed to the initial macro specified by macro-name. The
I      variable value must not exceed 200 bytes in length. If no macro
I      name is specified, parm-var must be blank or not specified.
N
D    "ASCII" | "UTF8" ,
I      This parameter can be specified when invoking EDIT to edit data
I      encoded in ASCII (or UTF-8) and the file is not tagged with a
I      CCSID of 819 (or 1208).
N
I      When ASCII is specified or the file is tagged with CCSID 819,
I      the editor renders the ASCII data readable by converting it to
I      the CCSID of the terminal. Also, if set for a z/OS UNIX file,
I      the editor breaks up the data into records using the ASCII
I      linefeed character (X'0A') and the ASCII carriage return
I      character (X'0D') as the record delimiter. For z/OS UNIX files,
I      the linefeed and carriage return characters are removed from the
I      data loaded into the editor but written back to the file when the
I      data is saved. This option should not be used when editing
I      workstation files which are converted to EBCDIC when they are
I      loaded from the workstation.
N
I      When UTF8 is specified, or the file is tagged with CCSID 1208,
I      the equivalent actions happen, except for UTF-8 instead of ASCII.
N
D    "LINECMDS(tabname)" ,
I      A fullword fixed binary integer containing the length of the
I      buffer parameter.
N
D    "GEN(generation)"
I      A fullword fixed integer containing the relative or absolute
I      generation of the member to be edited. If the value is negative,
I      it is a relative generation. If the value is positive, it is an
I      absolute generation that the caller has determined to be valid.
I      The value 0 (zero) indicates the current generation and is
I      equivalent to not specifying the parameter. This parameter is
I      valid only when the specified member is in a PDSE version 2 data
I      set that is configured for member generations.
N
N  or
N
D  ADDRESS ISPEXEC "EDIT" ,
D    "FILE(file-var)" ,
I      The name of an ISPF variable containing the path name for a
I      z/OS UNIX regular file or directory. An absolute path name or a
I      path name relative to the current working directory can be
I      specified. Absolute path names begin with '/'. Relative path
I      names begin with '.'. If the path name is for a directory, a
I      directory selection list is displayed.
N
D    "PANEL(panel-name)" ,
I      The name of a customized edit panel, created by you, to be used
I      when displaying the data. See GC19-3623-30 (f54PC00_v2r3.pdf)
I      z/OS ISPF Planning and Customizing for information about
I      developing a customized panel.
N
M      SC19-3619-30 (f54dg00_v2r3.pdf) ISPF Dialog Developer's Guide
M      and Reference Chapter 6 and Chapter 7 have the details you want
M      for defining a panel. for information about developing a
I      customized panel.
N
D    "MACRO(macro-name)" ,
I      The name of the first edit macro to be executed after the data
I      is read, but before it is displayed. See SC19-3621-30
I      (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros for more
I      information on macros.
N
D    "PROFILE(profile-name)" ,
I      The name of the edit profile to be used. If you do not specify a
I      profile name, the profile name defaults to the ISPF library type
I      or last qualifier of the "other" TSO data set name. See
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros
I      for more information.
N
D    "FORMAT(format-name)" ,
I      The name of the format to be used to reformat the data. The
I      format-name parameter is provided to support the IBM 5550
I      terminal using the Double-Byte Character Set (DBCS).
N
D    "MIXED( YES | NO )" ,
I      For the MIXED parameter, if YES is specified, the EDIT service
I      treats the data as mixed-mode DBCS data. If NO is specified, the
I      data is treated as EBCDIC (single-byte) data. This parameter is
I      provided to support the IBM 5550 terminal using the Double-Byte
I      Character Set (DBCS).
N
I      NO is the default.
N
I    "LOCK( YES | NO )" ,
N      /* Obsolete. */
I      The LOCK parameter is no longer used since the removal of LMF
I      from the ISPF product, but is left in for compatibility purposes.
N
I      If YES is specified the edit service will fail with return code
I      12. If you want to be able to specify YES and have the editor
I      ignore the value, change the FAIL_ON_LMF_LOCK keyword value in
I      the ISPF Configuration Table to NO.
N
I      YES is the default.
N
D    "CONFIRM( YES | NO )" ,
I      For the CONFIRM parameter, if you specify YES and then attempt to
I      CANCEL, MOVE, or REPLACE data while in EDIT mode, ISPF displays a
I      pop-up panel that requires you to confirm the action. Because
I      members or data sets that are moved, canceled, or replaced are
I      deleted, CONFIRM acts as a safeguard against accidental data
I      loss. If you want to terminate the edit session without saving
I      the data, press ENTER. If you made a mistake and want to return
I      to the edit session, enter the END command. If you specify NO as
I      the CONFIRM value, you will not be required to confirm a CANCEL,
I      MOVE, or REPLACE.
N
D    "WS( YES | NO )" ,
I      For the WS keyword, if you specify YES, the EDIT service edits
I      the host data set or workstation file on the workstation, using
I      the workstation editor configured in the ISPF Workstation Tool
I      Integration Program. For more information see SC19-3628-30
I      (f54u200_v2r3.pdf) z/OS ISPF User's Guide Vol II. If you specify
I      NO, the EDIT service edits the host data set or workstation file
I      on the host using the ISPF editor.
N
D    "WRAP" ,
I      Indicates how the editor should process host data that has been
I      edited on the workstation and now contains records longer than
I      the logical record length of the host data set. Specifying WRAP
I      causes the editor to upload the data to the host data set,
I      wrapping any lines that are longer than the logical record
I      length. Leaving off the WRAP parameter or passing a blank value
I      will cause the editor to display a prompt panel to the user with
I      these options:
N
I      -> upload the data, wrapping any long lines
N
I      -> have the editor create a temporary data set with a logical
I         record length large enough to handle the data, then upload
I         the data to that temporary data set.
N
I      This parameter is only valid when WS(YES) is specified.
N
D    "PRESERVE" ,
I      When specified, the editor stores the original length of each
I      record in variable-length data sets and when a record is saved,
I      the original record length is used as the minimum length for the
I      record. The editor always includes a blank at the end of a line
I      if the length of the record is zero or eight. Records can be
I      extended by adding nonblank data to the record or by using the
I      SAVE_LENGTH edit macro command. For more information, refer to
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros.
N
D    "PARM(parm-var)" ,
I      The name of an ISPF variable that contains parameters which are
I      to be passed to the initial macro specified by macro-name. The
I      variable value must not exceed 200 bytes in length. If no macro
I      name is specified, parm-var must be blank or not specified.
N
D    "RECLEN(rec-len)" ,
I      A numeric value specifying the record length to be used when
I      editing a z/OS UNIX file. This parameter causes the records to
I      be loaded into the editor as fixed length and saved back in the
I      file as fixed length.
N
D    "ASCII" | "UTF8" ,
I      This parameter can be specified when invoking EDIT to edit data
I      encoded in ASCII (or UTF-8) and the file is not tagged with a
I      CCSID of 819 (or 1208).
N
I      When ASCII is specified or the file is tagged with CCSID 819,
I      the editor renders the ASCII data readable by converting it to
I      the CCSID of the terminal. Also, if set for a z/OS UNIX file,
I      the editor breaks up the data into records using the ASCII
I      linefeed character (X'0A') and the ASCII carriage return
I      character (X'0D') as the record delimiter. For z/OS UNIX files,
I      the linefeed and carriage return characters are removed from the
I      data loaded into the editor but written back to the file when the
I      data is saved. This option should not be used when editing
I      workstation files which are converted to EBCDIC when they are
I      loaded from the workstation.
N
I      When UTF8 is specified, or the file is tagged with CCSID 1208,
I      the equivalent actions happen, except for UTF-8 instead of ASCII.
N
D    "LINECMDS(tabname)" ,
I      A fullword fixed binary integer containing the length of the
I      buffer parameter.
N
N  or
N
D  ADDRESS ISPEXEC "EDIT" ,
D    "WSFN(ws-filename)" ,
I      Specifies the name of a variable containing the path and the file
I      name in the workstation's file system syntax of the workstation
I      file to be edited. The maximum length of the path and the
I      workstation file name within this variable is 256. If the path is
I      omitted, the working directory configured in the ISPF tool
I      integrator will be inserted in front of the workstation file name
I      to resolve the relative path. For more information see
I      SC19-3628-30 (f54u200_v2r3.pdf) z/OS ISPF User's Guide Vol II.
N
D    "PANEL(panel-name)" ,
I      The name of a customized edit panel, created by you, to be used
I      when displaying the data. See GC19-3623-30 (f54PC00_v2r3.pdf)
I      z/OS ISPF Planning and Customizing for information about
I      developing a customized panel.
N
M      SC19-3619-30 (f54dg00_v2r3.pdf) ISPF Dialog Developer's Guide
M      and Reference Chapter 6 and Chapter 7 have the details you want
M      for defining a panel. for information about developing a
I      customized panel.
N
D    "MACRO(macro-name)" ,
I      The name of the first edit macro to be executed after the data
I      is read, but before it is displayed. See SC19-3621-30
I      (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros for more
I      information on macros.
N
D    "PROFILE(profile-name)" ,
I      The name of the edit profile to be used. If you do not specify a
I      profile name, the profile name defaults to the ISPF library type
I      or last qualifier of the "other" TSO data set name. See
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros
I      for more information.
N
D    "FORMAT(format-name)" ,
I      The name of the format to be used to reformat the data. The
I      format-name parameter is provided to support the IBM 5550
I      terminal using the Double-Byte Character Set (DBCS).
N
D    "MIXED( YES | NO )" ,
I      For the MIXED parameter, if YES is specified, the EDIT service
I      treats the data as mixed-mode DBCS data. If NO is specified, the
I      data is treated as EBCDIC (single-byte) data. This parameter is
I      provided to support the IBM 5550 terminal using the Double-Byte
I      Character Set (DBCS).
N
I      NO is the default.
N
I    "LOCK( YES | NO )" ,
N      /* Obsolete. */
I      The LOCK parameter is no longer used since the removal of LMF
I      from the ISPF product, but is left in for compatibility purposes.
N
I      If YES is specified the edit service will fail with return code
I      12. If you want to be able to specify YES and have the editor
I      ignore the value, change the FAIL_ON_LMF_LOCK keyword value in
I      the ISPF Configuration Table to NO.
N
I      YES is the default.
N
D    "CONFIRM( YES | NO )" ,
I      For the CONFIRM parameter, if you specify YES and then attempt to
I      CANCEL, MOVE, or REPLACE data while in EDIT mode, ISPF displays a
I      pop-up panel that requires you to confirm the action. Because
I      members or data sets that are moved, canceled, or replaced are
I      deleted, CONFIRM acts as a safeguard against accidental data
I      loss. If you want to terminate the edit session without saving
I      the data, press ENTER. If you made a mistake and want to return
I      to the edit session, enter the END command. If you specify NO as
I      the CONFIRM value, you will not be required to confirm a CANCEL,
I      MOVE, or REPLACE.
N
D    "WS( YES | NO )" ,
I      For the WS keyword, if you specify YES, the EDIT service edits
I      the host data set or workstation file on the workstation, using
I      the workstation editor configured in the ISPF Workstation Tool
I      Integration Program. For more information see SC19-3628-30
I      (f54u200_v2r3.pdf) z/OS ISPF User's Guide Vol II. If you specify
I      NO, the EDIT service edits the host data set or workstation file
I      on the host using the ISPF editor.
N
D    "WRAP" ,
I      Indicates how the editor should process host data that has been
I      edited on the workstation and now contains records longer than
I      the logical record length of the host data set. Specifying WRAP
I      causes the editor to upload the data to the host data set,
I      wrapping any lines that are longer than the logical record
I      length. Leaving off the WRAP parameter or passing a blank value
I      will cause the editor to display a prompt panel to the user with
I      these options:
N
I      -> upload the data, wrapping any long lines
N
I      -> have the editor create a temporary data set with a logical
I         record length large enough to handle the data, then upload
I         the data to that temporary data set.
N
I      This parameter is only valid when WS(YES) is specified.
N
D    "PRESERVE" ,
I      When specified, the editor stores the original length of each
I      record in variable-length data sets and when a record is saved,
I      the original record length is used as the minimum length for the
I      record. The editor always includes a blank at the end of a line
I      if the length of the record is zero or eight. Records can be
I      extended by adding nonblank data to the record or by using the
I      SAVE_LENGTH edit macro command. For more information, refer to
I      SC19-3621-30 (f54em00_v2r3.pdf) z/OS ISPF Edit and Edit Macros.
N
D    "PARM(parm-var)" ,
I      The name of an ISPF variable that contains parameters which are
I      to be passed to the initial macro specified by macro-name. The
I      variable value must not exceed 200 bytes in length. If no macro
I      name is specified, parm-var must be blank or not specified.
N
NReturn codes
N------------
NThese return codes are possible:
N
D  edit_rc = RC
D  SELECT
D    WHEN (edit_rc = 0) THEN DO
D      /* Normal completion; data was saved. */
D      NOP
D    END
D    WHEN (edit_rc = 4) THEN DO
D      /* Normal completion; data was not saved for one of these
D         reasons:
D
D         -> No data changes were made during the EDIT session.
D
D         -> The CANCEL command was used to exit EDIT.
D
D         -> Browse was substituted for EDIT because insufficient
D            storage was available to read in the requested data. */
D      NOP
D    END
D    WHEN (edit_rc = 10) THEN DO
D      /* Member or generation (if specified) not found. */
D      SAY "Ask your programmer to handle this condition using SETMSG."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (edit_rc = 12) THEN DO
D      /* YES was specified for the LOCK parameter. */
D      SAY "Ask your programmer to use" ,
D        "QUERYENQ to see who owns the lock."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (edit_rc = 14) THEN DO
D      /* Member, sequential data set, or z/OS UNIX file in use. */
D      SAY "Ask your programmer to use" ,
D        "QUERYENQ to see who has the blocking ENQUEUE."
D      SAY "Then handle this condition using SETMSG."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (edit_rc = 16) THEN DO
D      /* Either:
D
D         -> No members matched the specified pattern.
D
D         -> No members in the partitioned data set. */
D      SAY "Ask your programmer to redrive the prompt for a member."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (edit_rc = 18) THEN DO
D      /* A VSAM data set was specified but the ISPF Configuration
D         Table does not allow VSAM processing. */
D      SAY "Ask your programmer to handle this condition using SETMSG."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    WHEN (edit_rc = 20) THEN DO
D      /* Severe error; unable to continue. */
D      SAY "Ask your programmer to fix error."
D      SAY ZERRSM
D      SAY ZERRLM
D    END
D    OTHERWISE DO
D      SAY "Something very unexpected happened, RC("edit_rc")."
D    END
D  END
N
NExample 1: Edit a PDS member.
N-----------------------------
I  ADDRESS ISPEXEC "EDIT DATASET(DEMO.REXX(ISPG0210))"
N
N or
N
I  ADDRESS ISPEXEC "LMINIT DATAID(EDTID) DATASET(DEMO.REXX)"
I  ADDRESS ISPEXEC "EDIT DATAID(&EDTID) MEMBER(ISPG0210)"
I  ADDRESS ISPEXEC "LMFREE DATAID(&EDTID)"
N
NExample 2: Edit a workstation file.
N-----------------------------------
I  WSFNNAME = 'c:\config.sys'
I  ADDRESS ISPEXEC "EDIT WSFN(WSFNNAME) WS(NO)"
N
NExample 3: Edit a z/OS UNIX file.
N---------------------------------
I  syscalls_rc = SYSCALLS("ON")
I  ADDRESS SYSCALL "getcwd cwd"
I  syscalls_rc = RC
I  getcwd_retval = RETVAL
I  getcwd_errno = ERRNO
I  IF ((syscalls_rc >= 0) & (getcwd_retval = -1)) THEN DO
I    getcwd_errnojr = ERRNOJR
I  END
I  ELSE DO
I    getcwd_errnojr = ""
I  END
I  filevar = cwd || "/.sh_history"
I  ADDRESS ISPEXEC "EDIT FILE(filevar)" /* Must be a variable name. */
* End of WISH.
