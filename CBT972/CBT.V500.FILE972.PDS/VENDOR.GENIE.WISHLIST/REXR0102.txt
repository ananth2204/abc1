SREXR0102
Tz/OS TSO/E REXX Reference
T-Chapter 1. Introduction
T-Benefits of using a compiler
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20170923-080755
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 1. Introduction
N-----------------------
N  Benefits of using a compiler
N  ----------------------------
NThe IBM Compiler for REXX/370 and the IBM Library for REXX/370 provide significa
N
N-> Improved performance
N
N-> Reduced system load
N
N-> Protection for source code and programs
N
N-> Improved productivity and quality
N
N-> Portability of compiled programs
N
N-> SAA compliance checking
N
NImproved performance
N--------------------
NThe performance improvements that you can expect when you run compiled
NREXX programs depend on the type of program. A program that performs
Nlarge numbers of arithmetic operations of default precision shows the
Ngreatest improvement. A program that mainly issues commands to the
Nhost shows minimal improvement because REXX cannot decrease the time
Ntaken by the host to process the commands.
I
ITake note of how a truly useful program will have minimal improvement.
N
NReduced system load
N-------------------
NCompiled REXX programs run faster than interpreted programs. Because a
Nprogram has to be compiled only one time, system load is reduced and
Nresponse time is improved when the program is run frequently.
I
IRun frequently without being modified since modifications require
Ire-compiling, an increase on system load. And yes, additional Disk
Iresources to hold both the source and the load module.
M
MThe REXX Compiler also comes with some limitations.
N
NProtection for source code and programs
N---------------------------------------
NYour REXX programs and algorithms are assets that you want to protect.
NThe Compiler produces object code, which helps you protect these
Nassets by discouraging other users from making unauthorized changes
Nto your programs.
N
NImproved productivity and quality
N---------------------------------
NThe Compiler can produce source listings, cross-reference listings,
Nand messages, which help you more easily develop and maintain your
NREXX programs. The Compiler identifies syntax errors in a program
Nbefore you start testing it. You can then focus on correcting errors
Nin logic during testing with the REXX interpreter.
M
MYou will consume more of the system while viewing those listings and
Mmessages, thus a rarely used program will have a trade-off from
Nreduced work load to increased development work load.
N
NPortability of compiled programs
N--------------------------------
NA REXX program compiled under MVS/ESA can run under CMS. Similarly, a
NREXX program compiled under CMS can run under MVS/ESA.
M
MThat program needs bulky code to handle the disparate ways of doing
MI/O (reading and writing different file environments).
N
NSAA compliance checking
N-----------------------
NThe Systems Application Architecture (SAA) definitions of software
Ninterfaces, conventions, and protocols provide a framework for
Ndesigning and developing applications that are consistent within
Nand across several operating systems. SAA REXX is a subset of the
NREXX language supported by the interpreter under TSO/E and can be
Nused in this operating environment.
N
NYou can distribute your REXX programs in object code only.
M
MYou need the right options if you use SOURCELINE(n).
* End of wish.
