SREXR0472
Tz/OS TSO/E REXX Reference
T-Chapter 4. Functions
T-Built-in functions
T-LISTDSI
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171223-063855
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 4. Functions
N--------------------
NBuilt-in functions
N------------------
NLISTDSI
N-------
NLISTDSI LISTDSI returns one of the following function codes that
Nreplace the function call, and retrieves information about a data
Nset's allocation, protection, and directory and stores it in specific
Nvariables.
N
N
NSyntax:
D  LISTDSI( data-set-name location | filename file ,
D    directory recall smsinfo)
N
N
NExample
N-------
I  dsi_name = "'VENDOR.GENIE.WISHLIST'"
I  dsi_loc = ""                            /* Default, Catalog search */
I  dsi_options = "NODIRECTORY"                             /* Default */
I  Call check_listdsi_rc
I
I  dsi_options = "DIRECTORY"
I  Call check_listdsi_rc
I
I  dsi_options = "DIRECTORY NORECALL"
I  Call check_listdsi_rc
I
I  dsi_options = "DIRECTORY RECALL"      /* Default is from DASD-Only */
I  Call check_listdsi_rc
I
I  dsi_options = "DIRECTORY SMSINFO"
I  Call check_listdsi_rc
I
I  dsi_loc = "Volume("sysvolume")"                 /* Specific VOLSER */
I  dsi_options = "DIRECTORY"
I  Call check_listdsi_rc
I
I  Address TSO "Allocate File(LISTDSI) SHR REUSE",
I    "Dataset("dsi_name")"
I  dsi_loc = "PreAlloc"                             /* Catalog search */
I  Call check_listdsi_rc
I
I  dsi_loc = "FILE"                                  /* DDNAME search */
I  dsi_name = "LISTDSI"
I  Call check_listdsi_rc
I  Address TSO "Free File(LISTDSI)"
I
I  Say "Wrong volume:"
I  dsi_loc = "Volume(CSI002)"                      /* Specific VOLSER */
I  dsi_options = "DIRECTORY"
I  Call check_listdsi_rc
I
I  Say "Wrong dsname:"
I  dsi_name = "'VENDOR.GENIE.SAMPLES'"
I  dsi_loc = ""
I  dsi_options = "DIRECTORY"
I  Call check_listdsi_rc
I
I  Return 0
I
Icheck_listdsi_rc:
I  Say "ListDSI("dsi_name dsi_loc dsi_options") testing results:"
I  your_msg = Msg("OFF")          /* hide TSO/E messages from LISTDSI */
I  listdsi_rc = ListDSI(dsi_name dsi_loc dsi_options)
I  my_msg = Msg(your_msg)
I  Select
I    When (listdsi_rc = 0) Then DO                /* Complete success */
I      Call show_listdsi
I    End
I    When (listdsi_rc = 4) Then DO                 /* Partial success */
I      Call show_partial_listdsi
I    End
I    When (listdsi_rc = 16) Then DO                     /* No success */
I      Say "ListDSI failed, RC("listdsi_rc")"
I      Say "  SYSREASON ("sysreason")"
I      Call show_sysreason
I      Say "  SYSMSGLVL1("sysmsglvl1")"
I      Say "  SYSMSGLVL2("sysmsglvl2")"
I    End
I    Otherwise DO
I      Say "Unexpected RC("listdsi_rc")"
I    END
I  End
I  Return 0
I
Ishow_listdsi:
I  Say dsi_name "listed okay."
I  Say "  SYSDSNAME    ("sysdsname")"
I  Say "  SYSVOLUME    ("sysvolume")"
I  Say "  SYSUNIT      ("sysunit")"
I  Say "  SYSDSORG     ("sysdsorg")"
I  Select
I    When (sysdsorg = "PS")  Then Say "    Physical Sequential"
I    When (sysdsorg = "PSU") Then Say "    Physical Sequential unmovable"
I    When (sysdsorg = "DA")  Then Say "    Direct organization"
I    When (sysdsorg = "DAU") Then Say "    Direct organization unmovable"
I    When (sysdsorg = "IS")  Then Say "    Indexed Sequential"
I    When (sysdsorg = "ISU") Then Say "    Indexed Sequential unmovable"
I    When (sysdsorg = "PO")  Then Say "    Partitioned organization"
I    When (sysdsorg = "POU") Then,
I      Say "    Partitioned organization unmovable"
I    When (sysdsorg = "VS")  Then Say "    VSAM"
I    When (sysdsorg = "???") Then Say "    Unknown"
I    Otherwise,
I      Say "    Unexpected DSORG("sysdsorg")"
I  End
I  Say "  SYSRECFM     ("sysrecfm")"
I  Select
I    When (Pos("U",sysrecfm) > 0)  Then,
I      Say "    Undefined record length"
I    When (Pos("F",sysrecfm) > 0)  Then,
I      Say "    Fixed record length"
I    When (Pos("V",sysrecfm) > 0)  Then,
I      Say "    Variable record length"
I    When (Pos("T",sysrecfm) > 0)  Then,
I      Say "    Track overflow feature"
I    When (Pos("B",sysrecfm) > 0)  Then,
I      Say "    Blocked"
I    When (Pos("S",sysrecfm) > 0)  Then,
I      Say "    Standard or spanned records"
I    When (Pos("A",sysrecfm) > 0)  Then,
I      Say "    ASCII control characters"
I    When (Pos("M",sysrecfm) > 0)  Then,
I      Say "    Machine code control characters"
I    When (Pos("??????",sysrecfm) > 0)  Then,
I      Say "    Unknown"
I    Otherwise,
I      Say "    Unexpected RECFM("sysrecfm")"
I  End
I  Say "  SYSLRECL     ("syslrecl")"
I  Say "  SYSBLKSIZE   ("sysblksize")"
I  Say "  SYSKEYLEN    ("syskeylen")"
I  Say "  SYSALLOC     ("sysalloc")"
I  Say "  SYSUSED      ("sysused")"
I  Say "  SYSUSEDPAGES ("sysusedpages")"
I  Say "  SYSPRIMARY   ("sysprimary")"
I  Say "  SYSSECONDS   ("sysseconds")"
I  Say "  SYSUNITS     ("sysunits")"
I  Select
I    When (sysunits = "CYLINDER") Then,
I      Say "    CYL"
I    When (sysunits = "TRACK") Then,
I      Say "    TRK"
I    When (sysunits = "BLOCK") Then,
I      Say "    BLK"
I    When (sysunits = "??????") Then,
I      Say "    UNK"
I    Otherwise,
I      Say "    Unexpected UNITS("sysunits")"
I  End
I  Say "  SYSEXTENTS   ("sysextents")"
I  Say "  SYSCREATE    ("syscreate")"
I  Say "  SYSREFDATE   ("sysrefdate")"
I  Say "  SYSEXDATE    ("sysexdate")"
I  Say "  SYSPASSWORD  ("syspassword")"
I  Select
I    When (syspassword = "NONE") Then,
I      Say "    No password protection, and that is a good thing."
I    When (syspassword = "READ") Then,
I      Say "    A password is reguired to read the dataset, bad."
I    When (syspassword = "WRITE") Then,
I      Say "    A password is reguired to write the dataset, worse."
I    Otherwise,
I      Say "    Unexpected PASSWORD("syspassword")"
I  End
I  Say "  SYSRACFA     ("sysracfa")"
I  Select
I    When (sysracfa = "NONE") Then,
I      Say "    No RACF protection, and that is a bad thing."
I    When (sysracfa = "GENERIC") Then,
I      Say "    A generic profile covers this dataset, good."
I    When (sysracfa = "DISCRETE") Then,
I      Say "    A discrete profile covers this dataset, try generics."
I    Otherwise,
I      Say "    Unexpected RACF("sysracfa")"
I  End
I  Say "  SYSUPDATED   ("sysupdated")"
I  Select
I    When (sysupdated = "YES") Then,
I      Say "    Dataset has been updated since the last backup."
I    When (sysupdated = "NO") Then,
I      Say "    Dataset is still the same since the last backup."
I    Otherwise,
I      Say "    Unexpected UPDATE("sysupdated")"
I  End
I  Say "  SYSTRKSCYL   ("systrkscyl")"
I  Say "  SYSBLKSTRK   ("sysblkstrk")"
I  If (Pos("PO",sysdsorg) > 0) Then,
I    Do
I      Say " SYSADIRBLK   ("sysadirblk")"
I      Say " SYSUDIRBLK   ("sysudirblk")"
I      Say " SYSMEMBERS   ("sysmembers")"
I    End
I  Say "  SYSREASON    ("sysreason")"
I  Call show_sysreason
I  Say "  SYSMSGLVL1   ("sysmsglvl1")"
I  Say "  SYSMSGLVL2   ("sysmsglvl2")"
I  Say "  SYSDSSMS     ("sysdssms")"
I  Select
I    When (sysdssms = "SEQ") Then,
I      Say "    DSNTYPE not retrieved, Sequential dataset."
I    When (sysdssms = "PDS") Then,
I      Say "    DSNTYPE not retrieved, Partitioned dataset."
I    When (sysdssms = "PDSE") Then,
I      Say "    DSNTYPE not retrieved, Partitioned dataset extended."
I    When (sysdssms = "LIBRARY") Then,
I      Say "    Empty PDSE."
I    When (sysdssms = "PROGRAM_LIBRARY") Then,
I      Say "    Program PDSE."
I    When (sysdssms = "DATA_LIBRARY") Then,
I      Say "    Data PDSE."
I    Otherwise,
I      Say "    Unexpected DSSMS("sysdssms")"
I  End
I  If (Pos("SMSINFO",dsi_options) > 0) Then,
I    Do
I      Say "  SYSDATACLASS ("sysdataclass")"
I      Say "  SYSSTORCLASS ("sysstorclass")"
I      Say "  SYSMGMTCLASS ("sysmgmtclass")"
I    End
I  If (Pos("S",sysdsorg) > 0)  Then,
I    Do
I      Say "  SYSSEQDSNTYPE("sysseqdsntype")"
I      Select
I        When (sysseqdsntype = "BASIC") Then,
I          Say "    Regular Sequential dataset."
I        When (sysseqdsntype = "LARGE") Then,
I          Say "    Large Sequential dataset."
I        When (sysseqdsntype = "EXTENDED") Then,
I          Say "    Extended Sequential dataset."
I        Otherwise,
I          Say "    Unexpected SEQDSNTYPE("sysseqdsntype")"
I      End
I    End
I  Return 0
I
Ishow_partial_listdsi:
I  Say dsi_name "partially listed."
I  SYSDATACLASS = "NON-SMS"
I  SYSSTORCLASS = "NON-SMS"
I  SYSMGMTCLASS = "NON-SMS"
I  Call show_listdsi
I  Return 0
I
Ishow_sysreason:
I  my_sysreason = Right(sysreason,2)
I  If (listdsi_rc = 4) Then my_sysreason = 30
I  Say "SYSMSGLVL2 = IKJ584"my_sysreason"I:"
I  Select
I    When (sysreason = 00) Then,
I      Say "    Normal completion"
I    When (sysreason = 01) Then,
I      Say "    Error parsing the function."
I    When (sysreason = 02) Then,
I      Say "    Dynamic allocation processing error."
I    When (sysreason = 03) Then,
I      Say "    The data set is a type that can not be processed."
I    When (sysreason = 04) Then,
I      Say "    Error determining UNIT name."
I    When (sysreason = 05) Then,
I      Say "    Data set is not catalogued."
I    When (sysreason = 06) Then,
I      Say "    Error obtaining the dataset name."
I    When (sysreason = 07) Then,
I      Say "    Error finding the device type."
I    When (sysreason = 08) Then,
I      Say "    The dataset is not on a DASD volume."
I    When (sysreason = 09) Then,
I      Say "    NORECALL prevented retrieval of information."
I    When (sysreason = 11) Then,
I      Say "    DIRECTORY specified, but you lack read access."
I    When (sysreason = 12) Then,
I      Say "    VSAM datasets not supported."
I    When (sysreason = 13) Then,
I      Say "    The dataset could not be opened."
I    When (sysreason = 14) Then,
I      Say "    Device type not found in UCB tables."
I    When (sysreason = 17) Then,
I      Say "    System or User abend occurred."
I    When (sysreason = 18) Then,
I      Say "    Partial dataset information returned."
I    When (sysreason = 19) Then,
I      Say "    Multi-volume dataset."
I    When (sysreason = 20) Then,
I      Say "    Device type not found in EDT table."
I    When (sysreason = 21) Then,
I      Say "    Catalog locate error."
I    When (sysreason = 22) Then,
I      Say "    Volume not mounted."
I    When (sysreason = 23) Then,
I      Say "    Permanent I/O error on volume."
I    When (sysreason = 24) Then,
I      Say "    Data set not found."
I    When (sysreason = 25) Then,
I      Say "    Migrated to non-DASD volume."
I    When (sysreason = 26) Then,
I      Say "    MSS device."
I    When (sysreason = 27) Then,
I      Say "    No VOLSER assigned."
I    When (sysreason = 28) Then,
I      Say "    DDname not one to eight valid characters."
I    When (sysreason = 29) Then,
I      Say "    You need to sepcify either a dataset name or ddname."
I    When (sysreason = 30) Then,
I      Say "    Not SMS managed."
I    When (sysreason = 31) Then,
I      Say "    ISITMGD macro had a problem, see sysmsglvl2."
I    When (sysreason = 32) Then,
I      Say "    DFSMS/MVS level incompatability."
I    When (sysreason = 33) Then,
I      Say "    DFSMS/MVS is not active."
I    When (sysreason = 34) Then,
I      Say "    OPEN error."
I    When (sysreason = 35) Then,
I      Say "    Unexpected error from DFSMS/MVS IGWFAMS routine."
I    When (sysreason = 36) Then,
I      Say "    Unexpected error from SMS service module."
I    When (sysreason = 37) Then,
I      Say "    Unexpected error from DFSMS service IGGCSI00."
I    Otherwise,
I      Say "    Unexpected sysreason("sysreason")"
I  End
I  Return 0
* End of wish.
