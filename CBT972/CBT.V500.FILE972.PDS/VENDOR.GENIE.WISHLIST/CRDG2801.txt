SCRDG2801
TCICS
T-RDG
T-Chapter 28. TCPIPSERVICE resources -Syntax
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180220-121455
*
@IBM Corporation
*
Bdfha4h00.pdf
BSC34-7425-00 CICS Transaction Server for z/OS
B-Resource Definition Guide
B-Version 5 Release 3
*
NChapter 28. TCPIPSERVICE resources
N==================================
NTCPIPSERVICE attributes
N-----------------------
NDescribes the syntax and attributes of the TCPIPSERVICE resource.
N
NSyntax:
N-------
D  DEFINE
D    TCPIPSERVICE(name)
I      Specifies the 8-character name of this service.
N
D    GROUP(groupname)
I      Every resource definition must have a GROUP name.
I      The resource definition becomes a member of the group and is
I      installed in the CICS system when the group is installed.
N
I      The GROUP name can be up to 8 characters in length. Lowercase
I      characters are treated as uppercase characters.
N
D    DESCRIPTION(text)
I      You can provide a description of the resource that
I      you are defining in this field. The description text can be up to
I      58 characters in length. No restrictions apply to the characters
I      that you can use. However, if you use parentheses, ensure that for
I      each left parenthesis there is a matching right parenthesis. If you
I      use the CREATE command, for each single apostrophe in the text,
I      code two apostrophes.
N
D    BACKLOG(0 | backlog)
I      Specifies, in the range 1 - 32767, the maximum
I      number of inbound TCP/IP connection open requests that can be
I      queued in TCP/IP waiting for CICS processing. When the maximum is
I      reached, TCP/IP rejects additional requests. If the value of
I      BACKLOG is zero, the value of TCP/IP attribute SOMAXCONN is used.
I      If the value of BACKLOG is greater than SOMAXCONN, the value of
I      SOMAXCONN is used. For IPIC connections set this value to the
I      maximum number of concurrent connection requests that can be
I      established by using this TCPIPSERVICE.
N
I      If performance tuning for HTTP connections is enabled, when CICS
I      is at maximum capacity, all inbound HTTP connection open requests
I      will queue outside of CICS in the TCPIPSERVICE's listening
I      connection's backlog queue in TCP/IP. Ensure the BACKLOG value is
I      large enough, because when this queue is full, connection requests
I      will be refused. NETSTAT ALL shows the backlog values in use for
I      a listening connection. For more information, see Netstat in the
I      z/OS Communication Server IP System Administrator's Commands.
N
I      When connection balancing is in use, the backlog queue's depth is
I      included in the processing that determines the most suitable
I      listener, so consider the BACKLOG attribute across all
I      TCPIPSERVICEs on CICS regions that share a port.
N
I    DNSGROUP(dnsgroup): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS.
N
I    GRPCRITICAL({NO|YES}): This attribute is obsolete, but is supported
I      to provide compatibility with earlier releases of CICS.
N
D    HOST(ANY | DEFAULT | hostname)
I      Specifies the 116-character IPv4 or
I      IPv6 address or host name on which CICS listens for incoming
I      connections. Use HOST instead of IPADDRESS when you define new
I      resources. Do not specify both HOST and IPADDRESS, because HOST
I      always takes precedence over IPADDRESS. IPADDRESS is supported for
I      existing programs that specify IPv4 function.
N
I      Possible values are as follows:
N
I      ANY: The ANY option has the same function as the ANY and INADDR_ANY
I        options of IPADDRESS. The ANY option specifies that CICS listens
I        on any of the addresses known to TCP/IP for the host system. You
I        can have multiple IP addresses defined for a host. By specifying
I        ANY, you also allow for the TCPIPSERVICE definition to be shared
I        among CICS servers. If you specify ANY, CICS attempts to bind to
I        the port on every stack where it is defined. If, in addition, you
I        want more than one CICS region to bind to the port, you must
I        specify the SHAREPORT option in every stack where the port is
I        defined. If you do not do so, only one CICS region can bind to
I        the port number in those stacks that do not have the SHAREPORT
I        option. Subsequent attempts by other regions to bind to every
I        stack fail, and CICS issues a message indicating that the port
I        is in use.
N
I        If you specify the ANY option in a dual-mode (IPv4 and IPv6)
I        environment, CICS attempts to reuse the most recent IPv4 or IPv6
I        address. If this is the first connection, and CICS cannot
I        retrieve an address, 0.0.0.0 is returned, and no affinity is
I        assigned.
N
I      DEFAULT: The DEFAULT option assigns affinity to the TCP/IP stack
I      that is defined as the default in a multistack CINET environment.
N
I        If the DEFAULT option is used in a dual-mode (IPv4 and IPv6)
I        environment, affinity is assigned to the IPv4 environment because
I        the DEFAULT option is applied to the IPv4 environment.
N
I        If DEFAULT is used in a non-CINET environment or no default
I        TCP/IP stack exists, an exception trace is written, 0.0.0.0
I        is returned, and no affinity is assigned.
N
I        If you are operating in a dual-mode (IPv4 and IPv6) environment,
I        specifying HOST(DEFAULT) forces all traffic to pass across the
I        IPv4 network connection.
N
I      hostname: hostname can be a character host name, an IPv4 address,
I        or an IPv6 address.
N
I        You can specify an address as a character name that can be looked
I        up on the domain name server. The host name can be entered in
I        uppercase, lowercase, or mixed case, but if a host name is
I        specified instead of an IP address, the host name is converted
I        to lowercase in the TCPIPSERVICE definition.
N
I        Do not use a character host name if you have a list of addresses
I        at the domain name server, because hostname resolves against the
I        first IP address only in the list (that is, the server does not
I        listen on any of the IP addresses in the list for this host
I        name). If you require a particular IP address in a list at the
I        domain name server, define the IP address explicitly in hostname.
N
I        If you specify an IPv6 address (or a host name that resolves to
I        an IPv6 address), ensure that you are operating in a dual-mode
I        (IPv4 and IPv6) environment and that the client or server that
I        you are communicating with is also operating in a dual-mode
I        (IPv4 and IPv6) environment.
N
I        For more information about IPv6, see Understanding IPv6 and CICS
I        in Product overview.
N
I        You can specify IPv4 and IPv6 addresses in a number of acceptable
I        formats. See IP addresses in Product overview for more
I        information about address formats.
N
D    IPADDRESS(ANY | DEFAULT | INADDR_ANY | ipaddress)
I      Specifies the dotted
I      decimal IPv4 address on which this TCPIPSERVICE listens for
I      incoming connections. It must be of the form nnn.nnn.nnn.nnn where
I      nnn is 0 through 255. You can use the HOST attribute to specify
I      the same information as IPADDRESS, but HOST also supports an IPv6
I      format address and character host name. If you are using IPv6
I      connections, you must use the HOST attribute for your definitions
I      instead of IPADDRESS. HOST always takes precedence over IPADDRESS.
I      The IPADDRESS attribute interacts with HOST in a number of ways:
N
I        -> If you specify HOST, IPADDRESS is always overwritten with a
I           value that depends on the contents of HOST:
N
I           -> If you specify an IPv4 address, ANY, or DEFAULT in HOST,
I              IPADDRESS is overwritten with the contents of HOST.
N
I           -> If you specify an IPv6 address or a character host name
I              in HOST, IPADDRESS is overwritten with blanks.
N
I        -> If you specify both HOST and IPADDRESS, the HOST value is
I           always used:
N
I           -> If HOST contains an IPv4 address, ANY, or DEFAULT,
I              IPADDRESS is populated with the contents of HOST.
N
I           -> If HOST contains an IPv6 address, IPADDRESS is overwritten
I              with blanks.
N
I      If you specify IPADDRESS (but not HOST), HOST is populated with
I      the contents of IPADDRESS.
N
I      If you specify an IP address of 0.0.0.0 and the HOST option is
I      blank, a warning is issued and the value ANY is assumed.IPADDRESS
I      is supported for existing IPv4 function only. Use the HOST option
I      for new resources.
N
I      Possible values are:
N
I      ANY or INADDR_ANY: The TCPIPSERVICE listens on any of the addresses
I        known to TCP/IP for the host system. It is possible to have
I        multiple IP addresses defined for a host. Specifying ANY or
I        INADDR_ANY also allows for the TCPIPSERVICE definition to be
I        shared among CICS servers.
N
I        If you specify ANY or INADDR_ANY, CICS attempts to bind to the
I        port on every stack where it is defined. If, in addition, you
I        want more than one CICS region to bind to the port you must
I        specify the SHAREPORT option in every stack where the port is
I        defined. If you do not do so, only one CICS region is able to
I        bind to the port number in those stacks that do not have the
I        SHAREPORT option. Subsequent attempts by other regions to bind
I        to every stack fails: CICS issues a message indicating that the
I        port is in use. For information about the SHAREPORT option, see
I        z/OS Communications Server: IP Configuration Reference.
N
I      DEFAULT: Assigns affinity to the TCP/IP stack that is defined as
I        the default in a multi stack CINET environment. If DEFAULT is
I        used in a non-CINET environment or there is no default TCP/IP
I        stack, then an exception trace is written and no affinity is
I        assigned.
N
I      ipaddress: The TCPIPSERVICE accepts connections on this particular
I        address. If the address specified is not known to TCP/IP on the
I        host system, the TCPIPSERVICE does not open. If you enter a
I        specific address here, this definition might not be valid for
I        CICS servers running on other regions, and you might not be able
I        to share the definition with those servers.
N
D    PORTNUMBER(port)
I      Specifies, in the range 1 through 65535, the
I      decimal number of the port on which CICS is to listen for incoming
I      client requests.
N
I      The well-known ports are those from 1 through 1023. It is advisable
I      to use well-known port numbers only for those services to which
I      they are normally assigned. The well-known ports for services
I      supported by CICS are:
N
I        80 HTTP (non-SSL)
N
I        443 HTTP with SSL
N
I        1435 ECI (Registered port number)
N
I      You should take care to resolve conflicts with any other servers
I      on the same MVS image that might use the well-known ports. Port
I      sharing must be enabled for any port that you want to share across
I      CICS systems within an MVS image. For more information, see
I      z/OS Communications Server: IP Configuration Reference.
N
I    PRIVACY: This attribute is obsolete, but is supported to provide
I      compatibility with earlier releases of CICS. For more information,
I      see Obsolete attributes in Reference System definition.
N
D    PROTOCOL(HTTP | ECI | IPIC | USER)
I      Specifies the application level
I      protocol used on the TCP/IP port.
N
I      HTTP: HTTP protocol is used. HTTP protocol is handled by CICS Web
I        support. CICS performs basic acceptance checks for messages sent
I        and received using this protocol. This protocol is required for
I        the well-known ports 80 (used for HTTP without SSL) and 443
I        (used for HTTP with SSL). HTTP requests might qualify for being
I        processed by directly attached user transactions, and bypassing
I        the web attach task, defined in the TRANSACTION attribute of
I        TCPIPSERVICE. For more information, see HTTP requests are
I        processed by directly attached user transactions in Improving
I        performance.
N
I      IIOP: The IIOP attribute in TCPIPSERVICE definitions is obsolete
I        but is retained for compatibility reasons.
N
I      ECI: The CICS ECI protocol is used.
N
I      IPIC: IPIC protocol is used. Specify IPIC for TCPIPSERVICE
I        resources that are to be used for IP interconnectivity (IPIC)
I        connections. USER The user-defined protocol is used. Messages
I        are processed as non-HTTP messages. They are flagged as non-HTTP
I        and passed unchanged to the analyzer program for the TCPIPSERVICE
I        resource.
N
I      CICS: Web support facilities are used for handling the request, but
I        no acceptance checks are carried out for messages sent and
I        received by using this protocol. Processing for all non-HTTP
I        requests must be carried out under the USER protocol, so that
I        they are protected from the basic acceptance checks that CICS
I        carries out for requests by using the HTTP protocol. If an HTTP
I        message is handled by the USER protocol, you are responsible
I        for checking its validity.
N
D    STATUS(OPEN | CLOSED)
I      Indicates the initial status of the service
I      after installation. Set it to OPEN if CICS is to begin listening
I      for this service after installation. Set to CLOSE if CICS is not
I      to listen on behalf of this service after installation.
N
I      This attribute is ignored for TCPIPSERVICE resources that are
I      dynamically generated by a CICS bundle. The initial status of a
I      TCPIPSERVICE resource is derived from the initial status of the
I      bundle that defines the resource.
N
NAttributes used with PROTOCOL(ECI):
N-----------------------------------
D    ATTACHSEC(VERIFY | LOCAL)
I      Specifies the level of attach-time user
I      security required for this connection.
N
I      This option is valid only for PROTOCOL(ECI).
N
I      LOCAL: Specifies that CICS does not require a user ID or password
I        (or password phrase) from clients.
N
I      VERIFY: Specifies that incoming attach requests must specify a
I        user ID, and a user password or password phrase. Specify VERIFY
I        when connecting systems are unidentified and cannot be trusted.
N
D    SOCKETCLOSE(NO)
I      Specifies whether, and for how long, CICS
I      waits before it closes the socket. The SOCKETCLOSE attribute does
I      not apply to the first receive request that is issued after a
I      connection is made. On the first receive request for the ECI and
I      USER protocols, CICS waits for data for 30 seconds before it closes
I      the socket.
N
I      On the first receive request for the HTTP protocol, CICS waits for
I      the DTIMEOUT value associated with the transaction specified on
I      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for
I      30 seconds.
N
I      The interval is measured from the time of the initial receive
I      request for incoming data on that socket.
N
I      NO: The socket remains open until it is closed by the client, or
I        by a user application program in CICS.
N
I      hhmmss: The interval (in HHMMSS format) from the time of the
I        initial receive request for incoming data, after which CICS is
I        to timeout the socket.
N
I        Choose a value that is appropriate to the responsiveness of the
I        client, and the reliability of your network. Specifying
I        000000 closes the socket immediately if no data is available
I        for any receive requests other than the first one.
N
I        If you are using this TCPIPSERVICE resource for CICS web support
I        with the HTTP protocol, a zero setting for SOCKETCLOSE means that
I        CICS closes the connection immediately after receiving data from
I        the web client, unless further data is waiting. This setting
I        means that persistent connections cannot be maintained, and it
I        is not compliant with the HTTP/1.1 specification. Use a zero
I        setting for SOCKETCLOSE with the HTTP protocol only if you have
I        a special requirement for it in a CICS region that is not
I        currently handling external requests, for example, in a test
I        environment.
N
I        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify
I        SOCKETCLOSE(NO).
N
I        If you specify PROTOCOL(USER), persistent sessions are not
I        supported, and you should specify SOCKETCLOSE(000000).
N
I        After the TCPIPSERVICE resource is installed, you cannot change
I        this value using CEMT; you must set the TCPIPSERVICE resource
I        out of service, then re-install the TCPIPSERVICE resource with
I        the modified definition.
N
D    TRANSACTION(CIEP | transaction)
I      Specifies the 4-character ID of the CICS
I      transaction attached to process new requests received for this
I      service.
N
I      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP
I         (or another transaction that executes program DFHIEP).
N
I      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another
I         transaction that executes program DFHWBXN). HTTP requests might
I         qualify for being processed by directly attached user
I         transactions, and bypassing the web attach task. For more
I         information, see HTTP requests are processed by directly
I         attached user transactions in Improving performance.
N
I      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another
I         transaction that executes program DFHISCOP).
N
I      -> For a USER TCPIPSERVICE resource, specify CWXU (or another
I         transaction that executes program DFHWBXN).
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
NAttributes used with PROTOCOL(HTTP):
N------------------------------------
D    AUTHENTICATE(NO | AUTOMATIC | AUTOREGISTER | BASIC | CERTIFICATE)
I      Specifies the authentication and identification scheme to be used
I      for inbound TCP/IP connections for the HTTP and USER protocols.
N
I      For the IPIC protocol, this attribute is not applicable.
N
I      For the ECI protocol, this attribute is invalid.
N
I      For more information about authentication, see Identification and
I      authentication in Securing.
N
I      ASSERTED: The ASSERTED attribute in TCPIPSERVICE definitions is
I        obsolete but is retained for compatibility reasons.
N
I      When PROTOCOL(HTTP) or PROTOCOL(USER) is specified:
N
I      NO: The client is not required to send authentication or
I        identification information. However, if the client sends a
I        valid certificate that is already registered to the security
I        manager, and associated with a user ID, then that user ID
I        identifies the client.
N
I      AUTOMATIC: This combines the AUTOREGISTER and BASIC functions.
N
I        -> If the client sends a certificate that is already registered
I           to the security manager, and associated with a user ID, then
I           that user ID identifies the client.
N
I        -> If the client sends a certificate that is not registered to
I           the security manager, then HTTP Basic authentication is used
I           to obtain a user ID, and password or password phrase from the
I           client. If the password or password phrase is valid, CICS
I           registers the certificate with the security manager, and
I           associates it with the user ID. The user ID identifies the
I           client.
N
I        -> If the client does not send a certificate, then HTTP Basic
I           authentication is used to obtain a user ID, and password or
I           password phrase from the user. When the user has been
I           successfully authenticated, the user ID supplied identifies
I           the client.
N
I      AUTOREGISTER: SSL client certificate authentication is used to
I        authenticate the client.
N
I        -> If the client sends a valid certificate that is already
I           registered to the security manager, and associated with a
I           user ID, then that user ID identifies the client.
N
I        -> If the client sends a valid certificate that is not registered
I           to the security manager, then HTTP Basic authentication is
I           used to obtain a user ID, and password or password phrase from
I           the client. If the password or password phrase is valid, CICS
I           registers the certificate with the security manager, and
I           associates it with the user ID. The user ID identifies the
I           client.
N
I        -> For a certificate to be registered, the client needs the
I           appropriate access definition in RACF. The access required
I           is READ access to the IRR.DIGTCERT.ADD profile in the
I           FACILITY class.
N
I        Note: If you specify AUTHENTICATE(AUTOREGISTER), you must also
I        specify SSL(CLIENTAUTH | ATTLSAWARE).
N
I      BASIC: HTTP Basic authentication is used to obtain a user ID, and
I        password or password phrase from the client.
N
I        If the client has sent an Authorization header, its contents are
I        decoded as a user ID, and password or password phrase. If these
I        are not valid, an HTTP 401 response is returned, together with
I        a WWW-Authenticate header, which causes the client program to
I        prompt the user for a new user ID, and password or password
I        phrase. This process continues until the client either supplies
I        a valid user ID, and password or password phrase, or cancels the
I        connection.
N
I        When the user has been successfully authenticated, the user ID
I        supplied identifies the client.
N
I      CERTIFICATE: SSL client certificate authentication is used to
I        authenticate and identify the client. The client must send a
I        valid certificate that is already registered to the security
I        manager, and associated with a user ID. If a valid certificate
I        is not received, or the certificate is not associated with a
I        user ID, the connection is rejected.
N
I        When the user has been successfully authenticated, the user ID
I        associated with the certificate identifies the client.
N
I        Note: If you specify AUTHENTICATE(CERTIFICATE), you must also
I        specify SSL(CLIENTAUTH | ATTLSAWARE).
N
I        Note: For the HTTP or USER protocol, the analyzer program
I        (named by the user replaceable module (URM) attribute) can change
I        the user ID supplied by the authentication process. If the
I        authentication process does not supply a user ID, the analyzer
I        program or URIMAP definition can supply one. Otherwise, the CICS
I        default user ID is used.
N
D    CERTIFICATE(label)
I      Specifies the label of an X.509 certificate that
I      is used as a server certificate during the SSL handshake when the
I      connection is acquired. If this attribute is omitted, the default
I      certificate defined in the key ring for the CICS region user ID is
I      used.
N
I      Certificate labels can be up to 32 bytes long.
N
I      The certificate must be stored in a key ring in the database of
I      the external security manager. For more information, see Building
I      a key ring manually in Securing.
N
I      This attribute cannot be specified unless SSL(YES) or
I      SSL(CLIENTAUTH) is also specified.
N
D    CIPHERS(value | value)
I      The CIPHERS attribute can be specified in either
I      of two ways:
N
I      -> A string of up to 56 hexadecimal digits that is interpreted as
I         a list of up to 28 2-digit cipher suite codes.
N
I      -> The name of the SSL cipher suite specification file, which is
I         a z/OS UNIX file in the security/ciphers subdirectory of the
I         directory that is specified by the USSCONFIG system
I         initialization parameter. For example if USSCONFIG is set to
I         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,
I         the fully qualified file name is
I         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For
I         more information, see SSL cipher suite specification file.
N
I      When you use the CEDA transaction to define the resource, CICS
I      automatically initializes the attribute with a default list of
I      acceptable codes. For CICS to initialize the attribute, the
I      KEYRING system initialization parameter must be specified in the
I      CICS region where you are running CEDA. If KEYRING is not set,
I      CICS does not initialize the attribute. The default list of codes
I      is 35363738392F303132330A1613100D15120F0C unless the system
I      initialization parameter NISTSP800131A=CHECK is set, in which
I      case it is 35363738392F303132330A1613100D.
N
I      You can reorder the cipher codes or remove them from the initial
I      list. However, you cannot add cipher codes that are not in the
I      default list for the specified encryption level. To reset the
I      value to the default list of codes, delete all of the cipher suite
I      codes. The field is automatically repopulated with the default
I      list.
N
I      For more information, see Cipher suites in Securing.
N
D    MAXDATALEN(32 | number)
I      Specifies, in kilobytes, the maximum length
I      of data that can be received by CICS as an HTTP server, on the
I      HTTP protocol or the USER protocol. The default value is 32 KB.
I      The minimum is 3 KB, and the maximum is 524,288 KB.
N
I      Use MAXDATALEN to guard against denial of service attacks
I      involving the transmission of large amounts of data.
N
D    MAXPERSIST(NO | number)
I      Specifies the maximum number of persistent
I      connections from web clients that the CICS region allows for this
I      port at any one time. This setting applies only for the HTTP
I      protocol.
N
I      -> The default value NO means that there is no limit on the number
I         of persistent connections.
N
I      -> In a CICS region that is at risk of being overloaded with
I         persistent connections, you can specify a suitable value (up
I         to a theoretical maximum of 65535) based on the number of
I         persistent connections that the CICS region can handle
I         simultaneously. When this limit is reached and further web
I         clients connect on the port, CICS requires the new clients to
I         close the connection after they receive each response. When
I         the new clients reconnect, if they connect to another CICS
I         region that shares the port and has not reached its limit,
I         they can maintain a persistent connection there instead. An
I         HTTP/1.1 server should normally allow persistent connections,
U         so only set this option in a CICS region that has experienced
I         performance problems due to persistent connections from
I         long-lived web clients.
N
I      -> If you specify a value of zero for this option, the CICS region
I         does not allow persistent connections and requires every web
I         client to close the connection after they receive each response.
I         A zero setting for MAXPERSIST is not compliant with the
I         HTTP/1.1 specification, so only use that setting if you have a
I         special requirement for it in a CICS region that is not
I         currently handling external requests, for example, in a test
I         environment.
N
D    REALM(string)
I      Specifies the realm that is used for HTTP basic
I      authentication. You can only specify this attribute for the HTTP
I      protocol.
N
I      The realm is provided by CICS in the WWW-Authenticate header, and
I      is seen by the user during the process of basic authentication.
I      It identifies the set of resources to which the authentication
I      information requested (that is, the user ID, and password or
I      password phrase) applies.
N
I      If you do not specify a realm, the default used by CICS is CICS
I      application aaaaaaaa, where aaaaaaaa is the APPLID of the CICS
I      region.
N
I      The realm can be up to 56 characters, and can include embedded
I      blanks. It is specified in mixed case, and the case is preserved.
I      Do not specify opening and closing double quotation marks, as CICS
I      provides these when assembling the WWW-Authenticate header.
N
D    SOCKETCLOSE(NO | hhmmss)
I      Specifies whether, and for how long, CICS
I      waits before it closes the socket. The SOCKETCLOSE attribute does
I      not apply to the first receive request that is issued after a
I      connection is made. On the first receive request for the ECI and
I      USER protocols, CICS waits for data for 30 seconds before it closes
I      the socket.
N
I      On the first receive request for the HTTP protocol, CICS waits for
I      the DTIMEOUT value associated with the transaction specified on
I      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for
I      30 seconds.
N
I      The interval is measured from the time of the initial receive
I      request for incoming data on that socket.
N
I      NO: The socket remains open until it is closed by the client, or
I        by a user application program in CICS.
N
I      hhmmss: The interval (in HHMMSS format) from the time of the
I        initial receive request for incoming data, after which CICS is
I        to timeout the socket.
N
I        Choose a value that is appropriate to the responsiveness of the
I        client, and the reliability of your network. Specifying
I        000000 closes the socket immediately if no data is available
I        for any receive requests other than the first one.
N
I        If you are using this TCPIPSERVICE resource for CICS web support
I        with the HTTP protocol, a zero setting for SOCKETCLOSE means that
I        CICS closes the connection immediately after receiving data from
I        the web client, unless further data is waiting. This setting
I        means that persistent connections cannot be maintained, and it
I        is not compliant with the HTTP/1.1 specification. Use a zero
I        setting for SOCKETCLOSE with the HTTP protocol only if you have
I        a special requirement for it in a CICS region that is not
I        currently handling external requests, for example, in a test
I        environment.
N
I        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify
I        SOCKETCLOSE(NO).
N
I        If you specify PROTOCOL(USER), persistent sessions are not
I        supported, and you should specify SOCKETCLOSE(000000).
N
I        After the TCPIPSERVICE resource is installed, you cannot change
I        this value using CEMT; you must set the TCPIPSERVICE resource
I        out of service, then re-install the TCPIPSERVICE resource with
I        the modified definition.
N
D    SSL(NO | yes | ATTLSAWARE | CLIENTAUTH)
I      Specifies whether the TCP/IP
I      service is to use the secure sockets layer (SSL) for encryption
I      and authentication. You can specify this attribute for the HTTP,
I      USER, and IPIC protocols, but not for the ECI protocol.
I      Note: When they use SSL, MAXSSLTCBs should be set to a value that
I      is at least twice the number of IPIC connections that use SSL by
I      the CICS region.
N
I      NO: SSL is not to be used. No security checks are applied when
I        the connection is being acquired. No encryption is applied to
I        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests
I        might qualify for being processed by directly attached user
I        transactions, and bypassing the web attach task. For more
I        information, see HTTP requests are processed by directly
I        attached user transactions in Improving performance.
N
I      YES: An SSL session is to be used; CICS sends a server certificate
I        to the client. SSL decryption processing is applied to all
I        messages arriving at this port. The level of encryption that is
I        applied to inbound messages is found from the value of the
I        CIPHERS attribute.
N
I      CLIENTAUTH: An SSL session is to be used; CICS sends a server
I        certificate to the client. CICS expects to receive a client
I        certificate from the partner system during the SSL handshake,
I        when the connection is being acquired.
N
I      ATTLSAWARE: CICS queries the client connection to determine
I        whether AT-TLS is active. CICS retrieves a client certificate
I        from TCP/IP if one was provided by the partner. ATTLSAWARE
I        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)
I        and PROTOCOL(HTTP) HTTP requests might qualify for being
I        processed by directly attached user transactions, and bypassing
I        the web attach task. For more information, see HTTP requests are
I        processed by directly attached user transactions in Improving
I        performance.
N
D    TRANSACTION(CWXN | transaction)
I      Specifies the 4-character ID of the CICS
I      transaction attached to process new requests received for this
I      service.
N
I      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP
I         (or another transaction that executes program DFHIEP).
N
I      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another
I         transaction that executes program DFHWBXN). HTTP requests might
I         qualify for being processed by directly attached user
I         transactions, and bypassing the web attach task. For more
I         information, see HTTP requests are processed by directly
I         attached user transactions in Improving performance.
N
I      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another
I         transaction that executes program DFHISCOP).
N
I      -> For a USER TCPIPSERVICE resource, specify CWXU (or another
I         transaction that executes program DFHWBXN).
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
D    URM(DFHWBAAX | program_name)
I      Specifies the name of a user-replaceable
I      program to be started by this service.
N
I      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.
I        This is only applicable for PROTOCOL(IPIC).
N
I      program_name: For those protocols for which URM is a required
I        attribute, the default program name depends upon the value of
I        the PROTOCOL attribute:
N
I      -> For the HTTP protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE resource. The
I         CICS-supplied analyzer program DFHWBAAX is the default.
I         DFHWBAAX provides basic error handling when all requests on
I         the port should be handled by URIMAP definitions (for example,
I         web service requests). If you must provide support for requests
I         that are not handled by URIMAP definitions, the analyzer
I         program specified for your TCPIPSERVICE resource should be the
I         CICS-supplied sample analyzer program DFHWBADX or your own
I         customized analyzer program. See Analyzer programs in Reference
I         Connectivity and standards for more information about analyzer
I         programs.
N
I      -> For the IPIC protocol, specify the name of the autoinstall
I         user program for IPIC connections, if required. For
I         PROTOCOL(IPIC), if you do not specify this attribute CICS uses
I         the CICS-supplied default autoinstall user program, DFHISAIP.
N
I      -> For the USER protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE definition. The analyzer
I         program must be present, and it handles all requests on this
I         protocol. The CICS-supplied sample analyzer program, DFHWBADX,
I         is suitable. See the Analyzer programs in Reference Connectivity
I         and standards for more information about analyzer programs.
N
NAttributes used with PROTOCOL(IPIC):
N------------------------------------
D    CERTIFICATE(label)
I      Specifies the label of an X.509 certificate that
I      is used as a server certificate during the SSL handshake when the
I      connection is acquired. If this attribute is omitted, the default
I      certificate defined in the key ring for the CICS region user ID is
I      used.
N
I      Certificate labels can be up to 32 bytes long.
N
I      The certificate must be stored in a key ring in the database of
I      the external security manager. For more information, see Building
I      a key ring manually in Securing.
N
I      This attribute cannot be specified unless SSL(YES) or
I      SSL(CLIENTAUTH) is also specified.
N
D    CIPHERS(value)
I      The CIPHERS attribute can be specified in either
I      of two ways:
N
I      -> A string of up to 56 hexadecimal digits that is interpreted as
I         a list of up to 28 2-digit cipher suite codes.
N
I      -> The name of the SSL cipher suite specification file, which is
I         a z/OS UNIX file in the security/ciphers subdirectory of the
I         directory that is specified by the USSCONFIG system
I         initialization parameter. For example if USSCONFIG is set to
I         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,
I         the fully qualified file name is
I         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For
I         more information, see SSL cipher suite specification file.
N
I      When you use the CEDA transaction to define the resource, CICS
I      automatically initializes the attribute with a default list of
I      acceptable codes. For CICS to initialize the attribute, the
I      KEYRING system initialization parameter must be specified in the
I      CICS region where you are running CEDA. If KEYRING is not set,
I      CICS does not initialize the attribute. The default list of codes
I      is 35363738392F303132330A1613100D15120F0C unless the system
I      initialization parameter NISTSP800131A=CHECK is set, in which
I      case it is 35363738392F303132330A1613100D.
N
I      You can reorder the cipher codes or remove them from the initial
I      list. However, you cannot add cipher codes that are not in the
I      default list for the specified encryption level. To reset the
I      value to the default list of codes, delete all of the cipher suite
I      codes. The field is automatically repopulated with the default
I      list.
N
I      For more information, see Cipher suites in Securing.
N
D    SOCKETCLOSE(NO)
I      Specifies whether, and for how long, CICS
I      waits before it closes the socket. The SOCKETCLOSE attribute does
I      not apply to the first receive request that is issued after a
I      connection is made. On the first receive request for the ECI and
I      USER protocols, CICS waits for data for 30 seconds before it closes
I      the socket.
N
I      On the first receive request for the HTTP protocol, CICS waits for
I      the DTIMEOUT value associated with the transaction specified on
I      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for
I      30 seconds.
N
I      The interval is measured from the time of the initial receive
I      request for incoming data on that socket.
N
I      NO: The socket remains open until it is closed by the client, or
I        by a user application program in CICS.
N
I      hhmmss: The interval (in HHMMSS format) from the time of the
I        initial receive request for incoming data, after which CICS is
I        to timeout the socket.
N
I        Choose a value that is appropriate to the responsiveness of the
I        client, and the reliability of your network. Specifying
I        000000 closes the socket immediately if no data is available
I        for any receive requests other than the first one.
N
I        If you are using this TCPIPSERVICE resource for CICS web support
I        with the HTTP protocol, a zero setting for SOCKETCLOSE means that
I        CICS closes the connection immediately after receiving data from
I        the web client, unless further data is waiting. This setting
I        means that persistent connections cannot be maintained, and it
I        is not compliant with the HTTP/1.1 specification. Use a zero
I        setting for SOCKETCLOSE with the HTTP protocol only if you have
I        a special requirement for it in a CICS region that is not
I        currently handling external requests, for example, in a test
I        environment.
N
I        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify
I        SOCKETCLOSE(NO).
N
I        If you specify PROTOCOL(USER), persistent sessions are not
I        supported, and you should specify SOCKETCLOSE(000000).
N
I        After the TCPIPSERVICE resource is installed, you cannot change
I        this value using CEMT; you must set the TCPIPSERVICE resource
I        out of service, then re-install the TCPIPSERVICE resource with
I        the modified definition.
N
D    SPECIFTCPS(value)
I      This parameter specifies the 8-character name of the
I      specific TCPIPSERVICE when defining a generic TCPIPSERVICE as part
I      of a high-availability cluster.
N
I      This parameter is only valid when the protocol is IPIC and the IP
I      end point defined by the PORT and HOSTNAME or IPADDRESS attributes
I      is the generic end point of an HA cluster of CICS regions.
N
D    SSL(NO | YES | CLIENTAUTH)
I      Specifies whether the TCP/IP
I      service is to use the secure sockets layer (SSL) for encryption
I      and authentication. You can specify this attribute for the HTTP,
I      USER, and IPIC protocols, but not for the ECI protocol.
I      Note: When they use SSL, MAXSSLTCBs should be set to a value that
I      is at least twice the number of IPIC connections that use SSL by
I      the CICS region.
N
I      NO: SSL is not to be used. No security checks are applied when
I        the connection is being acquired. No encryption is applied to
I        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests
I        might qualify for being processed by directly attached user
I        transactions, and bypassing the web attach task. For more
I        information, see HTTP requests are processed by directly
I        attached user transactions in Improving performance.
N
I      YES: An SSL session is to be used; CICS sends a server certificate
I        to the client. SSL decryption processing is applied to all
I        messages arriving at this port. The level of encryption that is
I        applied to inbound messages is found from the value of the
I        CIPHERS attribute.
N
I      CLIENTAUTH: An SSL session is to be used; CICS sends a server
I        certificate to the client. CICS expects to receive a client
I        certificate from the partner system during the SSL handshake,
I        when the connection is being acquired.
N
I      ATTLSAWARE: CICS queries the client connection to determine
I        whether AT-TLS is active. CICS retrieves a client certificate
I        from TCP/IP if one was provided by the partner. ATTLSAWARE
I        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)
I        and PROTOCOL(HTTP) HTTP requests might qualify for being
I        processed by directly attached user transactions, and bypassing
I        the web attach task. For more information, see HTTP requests are
I        processed by directly attached user transactions in Improving
I        performance.
N
D    TRANSACTION(CISS | transaction)
I      Specifies the 4-character ID of the CICS
I      transaction attached to process new requests received for this
I      service.
N
I      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP
I         (or another transaction that executes program DFHIEP).
N
I      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another
I         transaction that executes program DFHWBXN). HTTP requests might
I         qualify for being processed by directly attached user
I         transactions, and bypassing the web attach task. For more
I         information, see HTTP requests are processed by directly
I         attached user transactions in Improving performance.
N
I      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another
I         transaction that executes program DFHISCOP).
N
I      -> For a USER TCPIPSERVICE resource, specify CWXU (or another
I         transaction that executes program DFHWBXN).
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
D    URM(DFHISAIP | NO | program_name)
I      Specifies the name of a user-replaceable
I      program to be started by this service.
N
I      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.
I        This is only applicable for PROTOCOL(IPIC).
N
I      program_name: For those protocols for which URM is a required
I        attribute, the default program name depends upon the value of
I        the PROTOCOL attribute:
N
I      -> For the HTTP protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE resource. The
I         CICS-supplied analyzer program DFHWBAAX is the default.
I         DFHWBAAX provides basic error handling when all requests on
I         the port should be handled by URIMAP definitions (for example,
I         web service requests). If you must provide support for requests
I         that are not handled by URIMAP definitions, the analyzer
I         program specified for your TCPIPSERVICE resource should be the
I         CICS-supplied sample analyzer program DFHWBADX or your own
I         customized analyzer program. See Analyzer programs in Reference
I         Connectivity and standards for more information about analyzer
I         programs.
N
I      -> For the IPIC protocol, specify the name of the autoinstall
I         user program for IPIC connections, if required. For
I         PROTOCOL(IPIC), if you do not specify this attribute CICS uses
I         the CICS-supplied default autoinstall user program, DFHISAIP.
N
I      -> For the USER protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE definition. The analyzer
I         program must be present, and it handles all requests on this
I         protocol. The CICS-supplied sample analyzer program, DFHWBADX,
I         is suitable. See the Analyzer programs in Reference Connectivity
I         and standards for more information about analyzer programs.
N
NAttributes used with PROTOCOL(USER):
N------------------------------------
D    AUTHENTICATE(NO | AUTOMATIC | BASIC | AUTOREGISTER | CERTIFICATE)
I      Specifies the authentication and identification scheme to be used
I      for inbound TCP/IP connections for the HTTP and USER protocols.
N
I      For the IPIC protocol, this attribute is not applicable.
N
I      For the ECI protocol, this attribute is invalid.
N
I      For more information about authentication, see Identification and
I      authentication in Securing.
N
I      ASSERTED: The ASSERTED attribute in TCPIPSERVICE definitions is
I        obsolete but is retained for compatibility reasons.
N
I      When PROTOCOL(HTTP) or PROTOCOL(USER) is specified:
N
I      NO: The client is not required to send authentication or
I        identification information. However, if the client sends a
I        valid certificate that is already registered to the security
I        manager, and associated with a user ID, then that user ID
I        identifies the client.
N
I      AUTOMATIC: This combines the AUTOREGISTER and BASIC functions.
N
I        -> If the client sends a certificate that is already registered
I           to the security manager, and associated with a user ID, then
I           that user ID identifies the client.
N
I        -> If the client sends a certificate that is not registered to
I           the security manager, then HTTP Basic authentication is used
I           to obtain a user ID, and password or password phrase from the
I           client. If the password or password phrase is valid, CICS
I           registers the certificate with the security manager, and
I           associates it with the user ID. The user ID identifies the
I           client.
N
I        -> If the client does not send a certificate, then HTTP Basic
I           authentication is used to obtain a user ID, and password or
I           password phrase from the user. When the user has been
I           successfully authenticated, the user ID supplied identifies
I           the client.
N
I      AUTOREGISTER: SSL client certificate authentication is used to
I        authenticate the client.
N
I        -> If the client sends a valid certificate that is already
I           registered to the security manager, and associated with a
I           user ID, then that user ID identifies the client.
N
I        -> If the client sends a valid certificate that is not registered
I           to the security manager, then HTTP Basic authentication is
I           used to obtain a user ID, and password or password phrase from
I           the client. If the password or password phrase is valid, CICS
I           registers the certificate with the security manager, and
I           associates it with the user ID. The user ID identifies the
I           client.
N
I        -> For a certificate to be registered, the client needs the
I           appropriate access definition in RACF. The access required
I           is READ access to the IRR.DIGTCERT.ADD profile in the
I           FACILITY class.
N
I        Note: If you specify AUTHENTICATE(AUTOREGISTER), you must also
I        specify SSL(CLIENTAUTH | ATTLSAWARE).
N
I      BASIC: HTTP Basic authentication is used to obtain a user ID, and
I        password or password phrase from the client.
N
I        If the client has sent an Authorization header, its contents are
I        decoded as a user ID, and password or password phrase. If these
I        are not valid, an HTTP 401 response is returned, together with
I        a WWW-Authenticate header, which causes the client program to
I        prompt the user for a new user ID, and password or password
I        phrase. This process continues until the client either supplies
I        a valid user ID, and password or password phrase, or cancels the
I        connection.
N
I        When the user has been successfully authenticated, the user ID
I        supplied identifies the client.
N
I      CERTIFICATE: SSL client certificate authentication is used to
I        authenticate and identify the client. The client must send a
I        valid certificate that is already registered to the security
I        manager, and associated with a user ID. If a valid certificate
I        is not received, or the certificate is not associated with a
I        user ID, the connection is rejected.
N
I        When the user has been successfully authenticated, the user ID
I        associated with the certificate identifies the client.
N
I        Note: If you specify AUTHENTICATE(CERTIFICATE), you must also
I        specify SSL(CLIENTAUTH | ATTLSAWARE).
N
I        Note: For the HTTP or USER protocol, the analyzer program
I        (named by the user replaceable module (URM) attribute) can change
I        the user ID supplied by the authentication process. If the
I        authentication process does not supply a user ID, the analyzer
I        program or URIMAP definition can supply one. Otherwise, the CICS
I        default user ID is used.
N
D    CERTIFICATE(label)
I      Specifies the label of an X.509 certificate that
I      is used as a server certificate during the SSL handshake when the
I      connection is acquired. If this attribute is omitted, the default
I      certificate defined in the key ring for the CICS region user ID is
I      used.
N
I      Certificate labels can be up to 32 bytes long.
N
I      The certificate must be stored in a key ring in the database of
I      the external security manager. For more information, see Building
I      a key ring manually in Securing.
N
I      This attribute cannot be specified unless SSL(YES) or
I      SSL(CLIENTAUTH) is also specified.
N
D    CIPHERS(value)
I      The CIPHERS attribute can be specified in either
I      of two ways:
N
I      -> A string of up to 56 hexadecimal digits that is interpreted as
I         a list of up to 28 2-digit cipher suite codes.
N
I      -> The name of the SSL cipher suite specification file, which is
I         a z/OS UNIX file in the security/ciphers subdirectory of the
I         directory that is specified by the USSCONFIG system
I         initialization parameter. For example if USSCONFIG is set to
I         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,
I         the fully qualified file name is
I         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For
I         more information, see SSL cipher suite specification file.
N
I      When you use the CEDA transaction to define the resource, CICS
I      automatically initializes the attribute with a default list of
I      acceptable codes. For CICS to initialize the attribute, the
I      KEYRING system initialization parameter must be specified in the
I      CICS region where you are running CEDA. If KEYRING is not set,
I      CICS does not initialize the attribute. The default list of codes
I      is 35363738392F303132330A1613100D15120F0C unless the system
I      initialization parameter NISTSP800131A=CHECK is set, in which
I      case it is 35363738392F303132330A1613100D.
N
I      You can reorder the cipher codes or remove them from the initial
I      list. However, you cannot add cipher codes that are not in the
I      default list for the specified encryption level. To reset the
I      value to the default list of codes, delete all of the cipher suite
I      codes. The field is automatically repopulated with the default
I      list.
N
I      For more information, see Cipher suites in Securing.
N
D    MAXDATALEN(32 | number)
I      Specifies, in kilobytes, the maximum length
I      of data that can be received by CICS as an HTTP server, on the
I      HTTP protocol or the USER protocol. The default value is 32 KB.
I      The minimum is 3 KB, and the maximum is 524,288 KB.
N
I      Use MAXDATALEN to guard against denial of service attacks
I      involving the transmission of large amounts of data.
N
D    SOCKETCLOSE(NO | hhmmss)
I      Specifies whether, and for how long, CICS
I      waits before it closes the socket. The SOCKETCLOSE attribute does
I      not apply to the first receive request that is issued after a
I      connection is made. On the first receive request for the ECI and
I      USER protocols, CICS waits for data for 30 seconds before it closes
I      the socket.
N
I      On the first receive request for the HTTP protocol, CICS waits for
I      the DTIMEOUT value associated with the transaction specified on
I      the TCPIPSERVICE. If this DTIMEOUT value is zero CICS waits for
I      30 seconds.
N
I      The interval is measured from the time of the initial receive
I      request for incoming data on that socket.
N
I      NO: The socket remains open until it is closed by the client, or
I        by a user application program in CICS.
N
I      hhmmss: The interval (in HHMMSS format) from the time of the
I        initial receive request for incoming data, after which CICS is
I        to timeout the socket.
N
I        Choose a value that is appropriate to the responsiveness of the
I        client, and the reliability of your network. Specifying
I        000000 closes the socket immediately if no data is available
I        for any receive requests other than the first one.
N
I        If you are using this TCPIPSERVICE resource for CICS web support
I        with the HTTP protocol, a zero setting for SOCKETCLOSE means that
I        CICS closes the connection immediately after receiving data from
I        the web client, unless further data is waiting. This setting
I        means that persistent connections cannot be maintained, and it
I        is not compliant with the HTTP/1.1 specification. Use a zero
I        setting for SOCKETCLOSE with the HTTP protocol only if you have
I        a special requirement for it in a CICS region that is not
I        currently handling external requests, for example, in a test
I        environment.
N
I        If you specify PROTOCOL(ECI) or PROTOCOL(IPIC) you must specify
I        SOCKETCLOSE(NO).
N
I        If you specify PROTOCOL(USER), persistent sessions are not
I        supported, and you should specify SOCKETCLOSE(000000).
N
I        After the TCPIPSERVICE resource is installed, you cannot change
I        this value using CEMT; you must set the TCPIPSERVICE resource
I        out of service, then re-install the TCPIPSERVICE resource with
I        the modified definition.
N
D    SSL(NO | YES | CLIENTAUTH)
I      Specifies whether the TCP/IP
I      service is to use the secure sockets layer (SSL) for encryption
I      and authentication. You can specify this attribute for the HTTP,
I      USER, and IPIC protocols, but not for the ECI protocol.
I      Note: When they use SSL, MAXSSLTCBs should be set to a value that
I      is at least twice the number of IPIC connections that use SSL by
I      the CICS region.
N
I      NO: SSL is not to be used. No security checks are applied when
I        the connection is being acquired. No encryption is applied to
I        outbound messages. SSL(NO) and PROTOCOL(HTTP) HTTP requests
I        might qualify for being processed by directly attached user
I        transactions, and bypassing the web attach task. For more
I        information, see HTTP requests are processed by directly
I        attached user transactions in Improving performance.
N
I      YES: An SSL session is to be used; CICS sends a server certificate
I        to the client. SSL decryption processing is applied to all
I        messages arriving at this port. The level of encryption that is
I        applied to inbound messages is found from the value of the
I        CIPHERS attribute.
N
I      CLIENTAUTH: An SSL session is to be used; CICS sends a server
I        certificate to the client. CICS expects to receive a client
I        certificate from the partner system during the SSL handshake,
I        when the connection is being acquired.
N
I      ATTLSAWARE: CICS queries the client connection to determine
I        whether AT-TLS is active. CICS retrieves a client certificate
I        from TCP/IP if one was provided by the partner. ATTLSAWARE
I        should be used with PROTOCOL(HTTP) TCPIPSERVICES. SSL(ATTLSAWARE)
I        and PROTOCOL(HTTP) HTTP requests might qualify for being
I        processed by directly attached user transactions, and bypassing
I        the web attach task. For more information, see HTTP requests are
I        processed by directly attached user transactions in Improving
I        performance.
N
D    TRANSACTION(CWXU | transaction)
I      Specifies the 4-character ID of the CICS
I      transaction attached to process new requests received for this
I      service.
N
I      -> For an ECI over TCP/IP TCPIPSERVICE resource, specify CIEP
I         (or another transaction that executes program DFHIEP).
N
I      -> For an HTTP TCPIPSERVICE resource, specify CWXN (or another
I         transaction that executes program DFHWBXN). HTTP requests might
I         qualify for being processed by directly attached user
I         transactions, and bypassing the web attach task. For more
I         information, see HTTP requests are processed by directly
I         attached user transactions in Improving performance.
N
I      -> For an IPIC TCPIPSERVICE resource, specify CISS (or another
I         transaction that executes program DFHISCOP).
N
I      -> For a USER TCPIPSERVICE resource, specify CWXU (or another
I         transaction that executes program DFHWBXN).
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
I    TSQPREFIX(prefix): This attribute is obsolete, but is supported to
I      provide compatibility with earlier releases of CICS. For more
I      information, see Obsolete attributes in Reference System
I      definition.
N
D    URM(program)
I      Specifies the name of a user-replaceable
I      program to be started by this service.
N
I      NO: Autoinstall is not permitted with this TCPIPSERVICE resource.
I        This is only applicable for PROTOCOL(IPIC).
N
I      program_name: For those protocols for which URM is a required
I        attribute, the default program name depends upon the value of
I        the PROTOCOL attribute:
N
I      -> For the HTTP protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE resource. The
I         CICS-supplied analyzer program DFHWBAAX is the default.
I         DFHWBAAX provides basic error handling when all requests on
I         the port should be handled by URIMAP definitions (for example,
I         web service requests). If you must provide support for requests
I         that are not handled by URIMAP definitions, the analyzer
I         program specified for your TCPIPSERVICE resource should be the
I         CICS-supplied sample analyzer program DFHWBADX or your own
I         customized analyzer program. See Analyzer programs in Reference
I         Connectivity and standards for more information about analyzer
I         programs.
N
I      -> For the IPIC protocol, specify the name of the autoinstall
I         user program for IPIC connections, if required. For
I         PROTOCOL(IPIC), if you do not specify this attribute CICS uses
I         the CICS-supplied default autoinstall user program, DFHISAIP.
N
I      -> For the USER protocol, specify the name of an analyzer program
I         to be associated with this TCPIPSERVICE definition. The analyzer
I         program must be present, and it handles all requests on this
I         protocol. The CICS-supplied sample analyzer program, DFHWBADX,
I         is suitable. See the Analyzer programs in Reference Connectivity
I         and standards for more information about analyzer programs.
* End of wish.
