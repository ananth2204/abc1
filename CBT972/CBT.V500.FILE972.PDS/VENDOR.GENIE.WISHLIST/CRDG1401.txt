SCRDG1401
TCICS
T-RDG
T-Chapter 14. IPCONN resources -Syntax
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20180219-133555
*
@IBM Corporation
*
Bdfha4h00.pdf
BSC34-7425-00 CICS Transaction Server for z/OS
B-Resource Definition Guide
B-Version 5 Release 3
*
NChapter 14. IPCONN resources
N============================
NIPCONN attributes
N-----------------
NDescribes the syntax and attributes of the IPCONN resource.
N
NSyntax:
N-------
D  DEFINE
D    IPCONN(name)
I      Specifies the name of this IPCONN definition.
I      The name can be up to 8 characters in length.
N
I      If this IPCONN is to be used for distributed program link (DPL)
I      between CICS TS 3.2 or later regions, or transaction routing
I      between CICS TS 4.1 or later regions, or function shipping file
I      control, transient data, or temporary storage requests between
I      CICS TS 4.2 or later regions, that use IPIC connectivity, its name
I      must match the 4-character local name (SYSID) by which CICS knows
I      the remote system, padded with four trailing blanks.
N
I      Note: You can specify the name (SYSID) of the remote, target
I      region, of a DPL request in these ways:
N
I      -> The REMOTESYSTEM option of the installed PROGRAM definition
N
I      -> The SYSID option of the EXEC CICS LINK PROGRAM command
N
I      -> The dynamic routing program
N
I      The IPCONN name can be the same as the name of an installed MRO
I      or APPC CONNECTION definition.
N
D    GROUP(groupname)
I      Every resource definition must have a GROUP name.
I      The resource definition becomes a member of the group and is
I      installed in the CICS system when the group is installed.
N
I      The GROUP name can be up to 8 characters in length. Lowercase
I      characters are treated as uppercase characters.
N
D    DESCRIPTION(text)
I      You can provide a description of the resource that
I      you are defining in this field. The description text can be up to
I      58 characters in length. No restrictions apply to the characters
I      that you can use. However, if you use parentheses, ensure that each
I      left parenthesis has a matching right one. If you use the CREATE
I      command, code 2 apostrophes for each single apostrophe in the text.
N
D    APPLID(IPCONNname | applid)
I      Specifies the application identifier
I      (APPLID) of the remote system. If the remote system is a CICS
I      region, its APPLID is defined on the APPLID parameter. The value
I      for applid can be up to 8 characters in length and must start with
I      an alphabetic character.
N
I      For connections to an extended recovery facility (XRF) CICS region,
I      specify the generic APPLID of the remote region.
N
I      If you do not supply an APPLID, CICS uses the IPCONN name.
N
I      When the IPCONN is used to connect to an HA cluster, this field
I      must contain the 1 to 8 character value that identifies the
I      cluster. This value distinguishes this IPCONN from all other
I      installed IPCONNs in the region. The name of an APPLID that points
I      at a specific CICS region cannot have the same name as an HA
I      cluster.
N
I      Duplicate APPLIDs follow these rules:
N
I        -> You cannot install two or more IPCONN definitions that specify
I           the same APPLID and the same NETWORKID. The combination of
I           APPLID and NETWORKID can be used to ensure unique naming of
I           systems across the network. See the description of the
I           NETWORKID option.
N
I        -> You can install an IPCONN definition that specifies the same
I           APPLID as the NETNAME of an installed MRO, APPC, or LUTYPE6.1
I           CONNECTION definition.
N
I        -> If an installed IPCONN definition has the same name as an
I           installed CONNECTION definition, the APPLID of the IPCONN
I           definition must match the NETNAME of the CONNECTION
I           definition. If they do not, the resulting message depends on
I           the situation:
N
I             DFHIS3009 if the error is detected during IPCONN autoinstall
N
I             DFHAM4913 if the error is detected during IPCONN
I             installation
N
I             DFHZC6312 if the error is detected during CONNECTION
I             installation or autoinstall
N
I        The IPCONN definition takes precedence over the CONNECTION
I        definition; that is, if an IPCONN and a CONNECTION have the
I        same name, CICS uses the IPCONN.
N
I        -> A CONNECTION definition and an IPCONN definition with the
I           same NETNAME and APPLID do not require the same name to allow
I           the possibility of using a distinct sysid for communication
I           over TCP/IP rather than relying on the CICS default of routing
I           all supported function with the IPCONN, if it exists.
N
I        These rules are validated at installation time.
N
D    AUTOCONNECT(NO | YES)
I      Specifies whether sessions are to be
I      established when the IPCONN definition is installed (which can
I      happen during CICS initialization, when you issue a subsequent
I      CEDA INSTALL command, or when you use the CEMT or
I      EXEC CICS SET TCPIP OPEN command to start communication with
I      TCP/IP). If the connection cannot be made at these times because
I      the remote system is unavailable, you can later acquire the link
I      by using the CEMT or EXEC CICS SET IPCONN(name) INSERVICE ACQUIRED
I      command, unless the remote system becomes available in the meantime
I      and initiates communications.
N
I      NO: CICS does not try to establish sessions when the IPCONN is
I        installed.
N
I      YES: CICS tries to establish sessions when the IPCONN is installed.
N
I        For connectivity to be achieved when you install the IPCONN
I        definition, note these conditions:
N
I        1. The TCPIPSERVICE definition named on the TCPIPSERVICE option
I           of this IPCONN definition must also be installed in this
I           region and must specify PROTOCOL(IPIC).
N
I        2. Corresponding IPCONN and TCPIPSERVICE definitions must be
I           installed in the remote region:
N
I           a. The HOST option of the IPCONN definition on the remote
I              region must specify this region.
N
I           b. The PORT option of the IPCONN definition on the remote
I              region must specify the same port number as that specified
I              on the PORTNUMBER option of the local TCPIPSERVICE
I              definition named by this IPCONN.
N
I           c. The TCPIPSERVICE definition on the remote region (named
I              by the IPCONN definition on the remote region) must specify
I              PROTOCOL(IPIC) and, on its PORTNUMBER option, the same
I              port number as that specified by the PORT option of this
I              IPCONN.
N
I        You cannot specify AUTOCONNECT(YES) when PORT(NO) is specified.
N
D    CERTIFICATE(label)
I      Specifies the label of an X.509 certificate to
I      be used as a client certificate during the SSL handshake when the
I      IPIC connection is acquired, if the TCPIPSERVICE resource
I      identified by the HOST and PORT definitions is defined with
I      SSL(CLIENTAUTH). If this attribute is omitted, the default
I      certificate defined in the key ring for the CICS region user ID
I      is used.
N
I      Certificate labels can be up to 32 bytes long.
N
I      The certificate must be stored in a key ring in the external
I      security manager database. For more information, see the
I      CICS RACF Security Guide.
N
I      If you specify this attribute, you must also specify SSL(YES).
N
D    CIPHERS(value)
I      The CIPHERS attribute can be specified in either of
I      two ways:
N
I      -> A string of up to 56 hexadecimal digits that is interpreted as
I         a list of up to 28 2-digit cipher suite codes.
N
I      -> The name of the SSL cipher suite specification file, which is a
I         z/OS UNIX file in the security/ciphers subdirectory of the
I         directory that is specified by the USSCONFIG system
I         initialization parameter. For example if USSCONFIG is set to
I         /var/cicsts/dfhconfig and CIPHERS is set to strongciphers.xml,
I         the fully qualified file name is
I         /var/cicsts/dfhconfig/security/ciphers/strongciphers.xml. For
I         more information, see SSL cipher suite specification file.
N
I       When you use the CEDA transaction to define the resource, CICS
I       automatically initializes the attribute with a default list of
I       acceptable codes. For CICS to initialize the attribute, the
I       KEYRING system initialization parameter must be specified in the
I       CICS region where you are running CEDA. If KEYRING is not set,
I       CICS does not initialize the attribute. The default list of codes
I       is 35363738392F303132330A1613100D15120F0C unless the system
I       initialization parameter NISTSP800131A=CHECK is set, in which
I       case it is 35363738392F303132330A1613100D.
N
I       You can reorder the cipher codes or remove them from the initial
I       list. However, you cannot add cipher codes that are not in the
I       default list for the specified encryption level. To reset the
I       value to the default list of codes, delete all of the cipher
I       suite codes. The field is automatically repopulated with the
I       default list.
N
D    HA(NO | YES)
I      Specifies whether the IPCONN can be used to connect to
I      a high-availability cluster.
N
I      NO: This is the default value. The IPCONN cannot be used to connect
I        to a high-availability cluster.
N
I      YES: The IPCONN must connect to a region that is part of a
I        high-availability cluster.
N
D    HOST(hostname)
I      Specifies the host name of the remote system or its
I      IPv4 or IPv6 address. The name can be up to 116 characters long.
I      You can specify IPv4 and IPv6 addresses in a number of acceptable
I      formats. See the CICS Internet Guide for more information about
I      address formats.
N
I      If you specify an IPv6 address (or a host name that resolves to an
I      IPv6 address), ensure that you are operating in a dual-mode (IPv4
I      and IPv6) environment and that the client or server that you are
I      communicating with is also operating in a dual-mode (IPv4 and IPv6)
I      environment. For more information about IPv6, see the
I      CICS Internet Guide.
N
I      The HOST attribute must contain only alphanumeric characters,
I      hyphens (-), colons (:), or periods (.), although you cannot use
I      colons when specifying a character host name instead of an IP
I      address. CICS validates the host name at define time. The host name
I      can be entered in uppercase, lowercase, or mixed case characters,
I      but if a character host name is specified instead of an IP address,
I      the host name is converted to lowercase in the IPCONN definition.
N
I      HOST is ignored when the SENDCOUNT attribute is zero. HOST is a
I      required attribute when SENDCOUNT is greater than zero.
N
D    IDPROP(NOTALLOWED | REQUIRED | OPTIONAL)
I      Specifies whether the
I      distributed identity is transmitted to the connected system by
I      the sender. The IDPROP attribute is meaningful only if a connection
I      extends outside a sysplex and is used primarily to prevent
I      distributed identities being transmitted between enterprises. If
I      the connection is between systems in the same sysplex, the
I      connection operates as if IDPROP(OPTIONAL) is specified and ignores
I      any other setting.
N
I      Distributed identities flow only if the connected systems meet all
I      the following criteria:
N
I      -> Both systems are participating in identity propagation. See
I         Identity propagation requirements.
N
I      -> The systems are in the same sysplex or are connected by using
I         SSL.
N
I      -> The receiving system has USERAUTH(IDENTIFY) specified in the
I         IPCONN resource definition.
N
I      NOTALLOWED: A user ID associated with the sending transaction is
I        sent for requests that use this connection. NOTALLOWED is the
I        default value.
N
I      REQUIRED: A distributed identity is required for requests that use
I        this connection.
N
I        If REQUIRED is specified, the receiving system must support
I        distributed identities. The user ID associated with the sending
I        transaction is not sent.
N
I      OPTIONAL: A distributed identity is sent, if available. The user
I        ID associated with the sending transaction is also sent.
N
D    INSERVICE(YES | NO)
I      Specifies the status of the IPCONN resource
I      when it is installed.
N
I      NO: The connection cannot receive messages or transmit output.
N
I      YES: The connection is available for use.
N
D    LINKAUTH(SECUSER | CERTUSER)
I      Specifies how the user ID for link
I      security is established in a CICS system with security initialized
I     (SEC=YES).
N
I      CERTUSER: TCP/IP communication with the partner system must be
I        configured for SSL and a certificate must be received from the
I        partner system during SSL handshake.
N
I        The IPCONN resource must refer to a TCPIPSERVICE resource that
I        is defined with SSL(CLIENTAUTH).
N
I        The received certificate must be defined to the external security
I        manager so that it is associated with a user ID, which is used to
I        establish link security.
N
I      SECUSER: Specifies that the user ID specified in the SECURITYNAME
I        attribute is used to establish link security.
N
I        The default value is LINKAUTH(SECUSER)
N
D    MAXQTIME(NO | seconds)
I      Specifies the maximum time that queued
I      allocate requests, waiting for free sessions on this connection,
I      can wait before the queue is purged.
N
I      Note:
I      -> The maximum queuing time is used only if a limit to the length
I         of the queue is specified on the QUEUELIMIT option.
N
I      -> The time limit is applied only when the queue length has reached
I         the QUEUELIMIT value.
N
I      NO: CICS maintains the queue of allocate requests that are waiting
I        for a free session. No limit is set on the length of time that
I        requests can remain queued, although the DTIMOUT mechanisms can
I        apply to individual requests.
N
I      seconds: The approximate maximum time, in seconds, that allocate
I        requests waiting for a free session can be queued, when this
I        connection appears to be unresponsive; seconds must be in the
I        range 0 - 9999.
N
I        When the queue of allocate requests reaches its maximum length
I        (specified by the QUEUELIMIT attribute), and a new allocate
I        request is received for the connection, if the rate of processing
I        for the queue indicates that, on average, the new allocate takes
I        more than the maximum queue time, the queue is purged, and
I        message DFHIS500 is issued. When the queue is purged, queued
I        allocate requests return SYSIDERR.
N
I        No further queuing takes place until the connection has
I        successfully freed a session. At this point, CICS issues a
I        DFHIS5001 message and resumes normal queuing.
N
D    MIRRORLIFE(REQUEST | TASK | UOW)
I      Specifies the minimum lifetime of the
I      mirror task for function-shipped file control, transient data, and
I      temporary storage requests received by this region. Normally,
I      mirror tasks are terminated as soon as possible to keep the number
I      of active tasks to a minimum and to avoid holding on to a session
I      for long periods. However, for some applications it is more
I      efficient to retain both the mirror task and the session until the
I      next sync point, although this retention is not required for data
I      integrity. For example, a transaction that issues many READ FILE
I      requests to a remote system might be better served by a single
I      mirror task instead of a separate mirror task for each request.
I      In this way, you can reduce the overhead of allocating sessions
I      on the sending side and attaching mirror tasks on the receiving
I      side. The specified MIRRORLIFE value is not reflected in the
I      lifetime of the mirror task until a file control, transient data,
I      or temporary storage request is function shipped.
N
I      REQUEST: The mirror task terminates as soon as possible. For
I        unrecoverable work that does not require a mirror to hold on to
I        a session in the resource-owning region (for example, a
I        non-update READ FILE request) this is after the request has been
I        processed. For unrecoverable work that requires the mirror to
I        hold on to a session (for example, file browse requests), this
I        is as soon as the need for the hold state has been completed
I        (for example, the ENDBR is issued). For recoverable work, the
I        mirror remains until the next sync point.
N
I        This is the default value.
N
I      TASK: The mirror task remains available to the application that
I        issues the remote request until the task of the application ends.
I        This value saves the overhead of reallocating a session and
I        reattaching the mirror task for a subsequent request following
I        a user sync point. Do not specify this value when long-running
I        tasks might be used to function ship file control, transient
I        data, or temporary storage requests because once the session is
I        allocated to a task it is not freed until the task ends, even it
I        is not being used. The session is not available for use by other
I        tasks until it is freed.
N
I      UOW: The mirror transaction remains available to the application
I        that issues the remote request until the next sync point is
I        issued. This value saves the overhead of reestablishing
I        communication with the mirror transaction if the application
I        has more function-shipping file control, transient data, or
I        temporary storage requests in this unit of work. This parameter
I        is valid when it is specified on the IPCONN of the
I        resource-owning region. Specify the TASK or UOW values with this
I        parameter with caution, especially if DPL requests with
I        SYNCONRETURN or TRANSID are used.
N
D    NETWORKID(networkID)
I      Specifies the network ID of the remote system.
I      The remote system network ID is either its z/OS Communications
I      Server NETID or, for VTAM=NO systems, the value of its UOWNETQL
I      system initialization parameter.
N
I      If NETWORKID is not specified, CICS assumes that the remote system
I      is in the same network as the local system. In this instance, CICS
I      uses the z/OS Communications Server NETID, or the value of the
I      UOWNETQL system initialization parameter, of this CICS (that is,
I      the CICS on which this definition is installed).
N
I      Specify NETWORKID if you want to connect to a remote system that
I      is in a different network and therefore has a different
I      z/OS Communications Server NETID or UOWNETQL value. In this
I      instance, it might be possible for two or more remote systems to
I      have the same APPLID. Although CICS APPLIDs must be unique within
I      a sysplex, you might, for example, want to connect to a system
I      outside the sysplex or in a different sysplex. The combination of
I      APPLID and NETWORKID attributes ensures that the remote system is
I      referred to by a unique name.
N
I      The NETWORKID value must match the remote system network ID.
N
I      When it is not specified, the NETWORKID value is derived when the
I      IPCONN resource is first installed and is not changed between warm
I      starts, even if the local NETID value changes.
N
I      The name can be up to 8 characters in length and follows assembler
I      language rules. It must start with an alphabetic character.
N
D    PORT(NO | number)
I      Specifies the decimal number of the port on which
I      the remote region listens.
N
I      NO: This IPCONN resource is not used for outbound requests (that
I      is, it has no send sessions) when connecting from the CICS
I      Transaction Gateway.
N
I        NO is not valid for CICS to CICS IPCONN resources.
N
I        NO forces the value of AUTOCONNECT to NO.
N
I      number: A value in the range 1 - 65535. The port number is combined
I        with the HOST value to determine the destination for outbound
I        requests on this IPCONN resource.
N
D    QUEUELIMIT(NO | number)
I      Specifies the maximum number of allocate
I      requests that CICS is to queue while waiting for free sessions:
N
I      NO: No limit applies to the number of allocate requests that CICS
I        can queue while waiting for a free session.
N
I      number: The maximum number of allocate requests, in the range
I        0 - 9999, that CICS can queue on the connection while waiting
I        for a free session.
N
I        When the number of queued allocate requests reaches this limit,
I        subsequent allocate requests fail, returning SYSIDERR, until the
I        queue drops below the limit.
N
D    RECEIVECOUNT(1 | number)
I      Specifies, in the range 1 - 999, the number
I      of receive sessions; that is, sessions that receive incoming
I      requests. The number of receive sessions that are used depends
I      also on the number of send sessions defined in the remote system.
N
I      When the connection is established, these values are exchanged and
I      the lower value is used.
N
D    SECURITYNAME(name)
I      Specifies the security name of the remote system,
I      to be used for link security. In a CICS system with security
I      initialized (SEC=YES), and with LINKAUTH(SECUSER) in use, the
I      security name is used to establish the authority of the remote
I      system.
N
I      The security name must be a valid RACF user ID on this region.
I      Access to protected resources on this region is based on the RACF
I      user profile and its group membership. If the security name is not
I      a valid RACF user ID when the IPCONN is installed, CICS uses the
I      default user ID for the security name.
N
I      The default value is LINKAUTH(SECUSER).
N
D    SENDCOUNT(0 | number)
I      Specifies, in the range 0 - 999, the number
I      of send sessions; that is, sessions that send outgoing requests.
I      The number of send sessions that are used depends also on the
I      number of receive sessions defined in the remote system. When the
I      connection is established, these values are exchanged and the
I      lower value is used. If 0 is specified, this IPCONN can process
I      only incoming work.
N
I      It cannot send requests to the connected system.
N
I      SENDCOUNT(0) is not valid for CICS to CICS IPCONN resources.
N
I      SENDCOUNT(0) forces PORT(NO). A SENDCOUNT value greater than zero
I      requires PORT to have a numeric value.
N
I      An attempt to acquire an IPCONN resource that has SENDCOUNT(0)
I      fails because no port is defined.
N
D    SSL(NO | YES)
I      Specifies whether Secure Sockets Layer (SSL) is used
I      for encrypting the transmitted data. Note that, when using SSL,
I      MAXSSLTCBs should be set to a value that is at least twice the
I      number of IPIC connections that use SSL by the CICS region.
N
I      NO: The Secure Sockets Layer (SSL) is not used. No security checks
I        are applied when the connection is being acquired. No encryption
I        is applied to outbound messages.
N
I      YES: If the SEC system initialization parameter is set to YES, the
I        Secure Sockets Layer (SSL) is used. If the TCPIPSERVICE resource
I        identified by the HOST and PORT attributes is defined with
I        SSL(CLIENTAUTH), CICS extracts the client certificate named in
I        the CERTIFICATE attribute, and uses it when acquiring the IPIC
I        connection to the partner system. SSL encryption processing is
I        applied to all messages sent from this IPCONN resource. The
I        level of encryption depends on the value of the CIPHERS option.
N
D    TCPIPSERVICE( name )
I      Specifies the name of a TCPIPSERVICE definition,
I      with PROTOCOL(IPIC), that defines the attributes of the inbound
I      processing for this IPCONN resource.
N
D    USERAUTH(LOCAL | IDENTIFY | VERIFY | DEFAULTUSER)
I      Specifies how the
I      user ID for attach-time user security is established in a CICS
I      system with security initialized (SEC=YES).
N
I      LOCAL: CICS does not accept a user ID or password from clients.
I        All requests run under the link user ID or the default user ID
I        if there is no link user ID.
N
I      IDENTIFY: Incoming attach requests must specify a user ID. Enter
I        IDENTIFY when the connecting system is trusted to
I        pre-authenticate users, for example, if it is another CICS or
I        CICS TG system.
N
I        SSL client authentication must be in use or the connecting
I        system must be in the same sysplex.
N
I      VERIFY: Incoming attach requests must specify a user ID and
I        password. Specify VERIFY when connecting systems are unidentified
I        and cannot be trusted.
N
I      DEFAULTUSER: CICS does not accept a user ID and password from the
I        partner system. All requests run under the default user ID.
N
D    XLNACTION(KEEP | FORCE)
I      Specifies the action to be taken when a new
I      logname is received from the partner system. Receipt of a new
I      logname indicates that the partner has deleted its recovery
I      information.
N
I      KEEP: Recovery information is kept, and no predefined actions are
I        taken for indoubt units of work.
N
I        The connection cannot perform new work that requires sync
I        level 2 protocols until all outstanding recoverable work with
I        the partner (that is, indoubt UOWs, or information relevant to
I        UOWs that were indoubt on the partner system under the old
I        logname) is completed, using the CEMT or SPI interface.
I        Therefore, because the connection is being used for CICS-to-CICS
I        communication, which always uses the sync level 2 protocols, the
I        connection cannot be acquired until all outstanding recoverable
I        work with the partner has completed.
N
I      FORCE: Before any new work with the new logname is started, the
I        predefined decisions for indoubt units of work (UOWs), as defined
I        by the indoubt attributes of the TRANSACTION definition, are
I        implemented. CICS also deletes any information retained for
I        possible resolution of UOWs that were indoubt on the partner
I        system.
N
I        Attention: Data integrity might be compromised if you use this
I        option.
N
I      The XLNACTION parameter is ignored for IPCONN definitions used by
I      the CICS Transaction Gateway.
* End of wish.
