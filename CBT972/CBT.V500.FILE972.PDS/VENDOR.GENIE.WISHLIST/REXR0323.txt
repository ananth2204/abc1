SREXR0323
Tz/OS TSO/E REXX Reference
T-Chapter 3. Keyword instructions
T-Instructions
T-TRACE
E"Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
Z20171204-045655
*
@IBM Corporation
*
Bikj4a3a0.pdf
BSA22-7790-10 z/OS TSO/E REXX Reference
BVersion 1 Release 13
*
Nz/OS TSO/E REXX Reference
N=========================
NChapter 3. Keyword instructions
N-------------------------------
NInstructions
N------------
NTRACE: TRACE controls the tracing action (that is, how much is
Ndisplayed to the user) during processing of a REXX program. (Tracing
Ndescribes some or all of the clauses in a program, producing
Ndescriptions of clauses as they are processed.) TRACE is mainly used
Nfor debugging. Its syntax is more concise than that of other REXX
Ninstructions because TRACE is usually entered manually during
Ninteractive debugging. (This is a form of tracing in which the user
Ncan interact with the language processor while the program is running.)
NFor this use, economy of key strokes is especially convenient.
N
N
NSyntax:
D  TRACE number
D  TRACE ? | ! | Off ,
D    Normal | All | Commands | Error | Failure | Intermediates | ,
D    Labels | Results | Scan
N
I    number: If specified, the number must be a whole number. The number
I            of times pressing enter is simulated to bypass the pause
I            caused by using "?".
N
I    ?: Controls interactive debug. You must press enter to continue.
N
I    !: Supress execution of a host command. or example, TRACE !C
I       causes commands to be traced but not processed.
N
I    N | Normal: Traces any command resulting in a negative return code
I        after execution, together with the return code from the
I        command. This is the default setting and the same as specifying
I        Failure.
N
I    A | All: Traces all clauses before execution.
N
I    E | Error: Traces any command resulting in an error or failure
I               after execution, together with the return code from
I               the command.
N
I    F | Failure: Traces any command resulting in a failure after
I                 execution, together with the return code from the
I                 command. This is the same as the Normal option.
N
I    I | Intermediates: Traces all clauses before execution. Also
i                       traces intermediate results during evaluation
i                       of expressions and substituted names.
n
I    L | Labels: Traces only labels passed during execution. This is
I                especially useful with debug mode, when the language
I                processor pauses after each label. It also helps the
I                user to note all internal subroutine calls and
I                transfers of control because of the SIGNAL instruction.
N
I    R | Results: Traces all clauses before execution. Displays final
I                 results (contrast with Intermediates, preceding) of
I                 evaluating an expression. Also displays values
I                 assigned during PULL, ARG, and PARSE instructions.
M                 This setting is suggested for general debugging.
N
I    S | Scan: Traces all remaining clauses in the data without them
I              being processed. Basic checking (for missing ENDs and
I              so forth) is carried out, and the trace is formatted as
I              usual.
N
N
NExample:
I  SAY ""
I  SAY "REXR0323: TRACE"
I  SAY "==============="
I
I  TRACE 3 /* Press enter 3 times to bypass the pause ? causes. */
I  TRACE ?IRS
I  balance = 2107.00
I  check = 50.00
I  balance = balance - check - .05
I  balance = balance - check - .05
I  balance = balance - check - .05
I  SAY "Type TRACE Off and press enter."
I  SAY "TRACE OFF stops debugging mode."
I  balance = 4325.98
I  TRACE ?R
I  SAY "Type TRACE ?R and press enter."
I  balance = balance - check - .05
I  SAY "Type TRACE A and press enter."
I  balance = balance - check - .05
I  balance = balance - check - .05
* End of wish.
