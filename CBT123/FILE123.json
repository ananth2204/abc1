{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011257000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE123.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE123.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x05'", "DS1TRBAL": "b'\\xb1\\n'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xc8\\x00\\r\\x00\\xc9\\x00\\x02\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x004\\x01\\x10\\x13?\\x01\\x10\\x13?\\x17T\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-05-13T00:00:00", "modifydate": "2010-05-13T17:54:34", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-479"}, "text": "REGULAR CBT TAPE - VERSION 479    FILE:  123\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT479.FILE123\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 9 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,180 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/13/10    17:54:34    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTES": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x10\\x01\\x00%\\x0f\\x01\\x10\\x13?\\x17T\\x00{\\x001\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2010-05-13T17:54:10", "lines": 123, "newlines": 49, "modlines": 0, "user": "SBGOLOB"}, "text": "*------------------------------------------------------------------*\n*  THE ECHOADF PROGRAM IS ALMOST AS SIMPLE AS IEFBR14.\n*   (But it is not practical to use.  Use ECHOPGM rather.)\n*\n*  It is better to use the ECHOPGM program instead of any others\n*  that are in this file.\n*\n*  THIS SYSTEM WAS INVENTED IN 1986 BY JEFFREY R. BROIDO.\n*\n* ---------------------------------------------------------------- *\n*  Description of the Setup (using the ECHOPGM program).\n*\n*  The problem for which this system was invented is as follows:\n*\n*   Users were given a TSO application which ran under the APL\n*   programming language and which issued TSO commands under the\n*   covers.  You could not see the TSO commands being executed, on\n*   screen.  The administrators of this system wanted to log which\n*   TSO commands were issued by the APL application, and they also\n*   wanted to restrict the users to invoking only those TSO commands\n*   that were necessary for the session to run, and no others.\n*\n*   The application was a PMF (Print Management Facility) application\n*   to create fonts, and other Print Management Facility objects,\n*   which are used by \"extended function printing\".\n*\n*   The application was created by IBM, which sort of explains why\n*   they used APL as the programming language.  Nobody else (in\n*   their right mind) would do that.  IBM was trying (in the mid\n*   80's) to push APL applications, and they had programmers who\n*   were trained to use APL.\n*\n*      What did we do, to use this ECHOPGM program to help?\n*\n*   Our program, which echoes its name and all the parameters\n*   that were entered afterward, can be aliased, in a STEPLIB,\n*   to ALL TSO commands that will be forbidden to the users.\n*   That will also have the effect of showing us which TSO commands\n*   have actually been executed by the APL application under the\n*   covers.  It works as follows:\n*\n*   When one of these aliases is invoked, it issues the ECHOPGM\n*   command under its alias name, and the alias name with all\n*   the parameters, are reflected right back to the terminal.\n*   This terminal response can be logged, and we can find out\n*   what is going on, under the covers, in the application.\n*\n*      How do you set this system up?\n*\n*   You can deploy this system by copying ECHOPGM to a load\n*   library and aliasing it to every TSO command that you have in\n*   house.  You STEPLIB that library in a special TSO logon proc\n*   that the users will use, and you try to LOGON with that proc,\n*   keeping a different (more powerful) userid open in another\n*   TSO session.  As you LOGON, you'll see which TSO commands are\n*   reflected back to the terminal.  You delete those aliases of\n*   ECHOPGM using the regular TSO id, and then you proceed further\n*   into the new TSO session.  When you can fully run the new TSO\n*   session adequately, you stop deleting aliases.\n*\n*   You can use the PDS86 TSO command from CBT File 182 (load module\n*   on File 035) to create as many aliases to a program as you want,\n*   unrestricted by linkage editor restrictions.  You can even make\n*   many thousands of aliases to ECHOPGM in the same library.  You\n*   just need enough directory space.  The PDS86 program allows you\n*   to expand pds directory space (on the fly) as needed, using its\n*   FIXPDS EXPANDDIR(nnn) subcommand.  So you can put ECHOPGM, with\n*   many thousands of alias names, into one load library.  You don't\n*   need much data space, only directory block space.\n* ---------------------------------------------------------------- *\n*\n*  Program ECHOADF sets RC=12 into register 15, and returns\n*  to the caller, which seems useless, but it isn't.\n*\n*  It just so happens that if a TSO command does this, the TSO\n*  terminal monitor program reflects the contents of the command\n*  buffer to the terminal.  So if you execute this program as a\n*  TSO command, you get its name and its parameters reflected\n*  back to the terminal.  This effect only happens if you are in\n*  TSO session manager mode (EXEC PGM=ADFMDF03 instead of IKJTSO01).\n*\n*  IF YOU ARE NOT IN SESSION MANAGER, USE MY OTHER PROGRAMS,\n*  ECHOTPUT (USES TPUT TO REFLECT THE COMMAND TO THE TERMINAL), OR\n*  ECHOPGM  (USES PUTLINE TO REFLECT THE CONTENTS OF THE COMMAND\n*            BUFFER)\n*\n*    ECHOPGM is better, because its output can be captured more\n*    easily, for logging.\n*\n*  THEREFORE, IF YOU WANT TO NULLIFY A TSO COMMAND, JUST ALIAS ITS\n*  NAME TO THIS PROGRAM, AND PUT BOTH NAMES IN A LOAD LIBRARY THAT\n*  IS CONCATENATED AHEAD OF SYS1.CMDLIB , FOR INSTANCE YOU CAN PUT\n*  THIS PROGRAM INTO A STEPLIB IN THE LOGON PROC, WITH ALL ITS\n*  ALIASES.  THEREFORE, IF YOU EXECUTE THE NAME OF THE ALIAS, YOU\n*  GET ITS NAME REFLECTED BACK TO THE TSO TERMINAL, AND NO OTHER\n*  ACTION OCCURS.\n*\n*  YOU CAN CREATE A FEW, OR VERY MANY ALIASES TO THIS PROGRAM.\n*  JUST USE THE PDS COMMAND PROCESSOR (FROM CBT TAPE FILE 182)\n*  MANY TIMES (IN A BATCH PROGRAM IF YOU'D LIKE).  THE COMMANDS ARE:\n*\n*      PDS 'YOUR.LOAD.LIBRARY'\n*      ALIAS ECHOPGM NAME1\n*      ALIAS ECHOPGM NAME2\n*      ALIAS ECHOPGM NAME3\n*      ALIAS ECHOPGM NAME4\n*      ALIAS ECHOPGM NAME5\n*      END\n*\n*  WITH THE PDS COMMAND PROCESSOR, YOU CAN CREATE HUNDREDS OR\n*  THOUSANDS OF ALIASES TO THIS PROGRAM.  YOU ARE NOT LIMITED BY\n*  LINKAGE EDITOR RESTRICTIONS.  YOU CAN EVEN ALIAS THIS PROGRAM\n*  TO EVERY NAME IN SYS1.CMDLIB AND IN OTHER LIBRARIES, EXCEPT FOR\n*  THOSE NAMES THAT THE (LIMITED) TSO SESSION NEEDS.  TO ALLOW THE\n*  USE OF A PROGRAM BY THE TSO SESSION, JUST DELETE THE ALIAS.\n*  TO FORBID A COMMAND, JUST MAKE AN ALIAS WITH THE PDS COMMAND\n*  AS ABOVE, TO THAT NAME.  CHEAP TSO COMMAND SECURITY.\n*\n*  I'D BET YOU'D NEVER REALIZED THAT TSO COMMAND SECURITY COULD\n*  BE SO SIMPLE TO IMPLEMENT.  SINCE THE COMMANDS ENTERED REFLECT\n*  BACK TO THE TERMINAL, YOU CAN EVEN LOG THE RESPONSES, USING\n*  THE TSO SESSION MANAGER, AND THE SMCOPY COMMAND.\n*------------------------------------------------------------------*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE123": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00$\\x01\\x10\\x13?\\x01\\x10\\x13?\\x17T\\x00V\\x00V\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-05-13T00:00:00", "modifydate": "2010-05-13T17:54:24", "lines": 86, "newlines": 86, "modlines": 0, "user": "CBT-479"}, "text": "//***FILE 123 is from Sam Golob and contains a primitive system     *   FILE 123\n//*           to limit the use of TSO commands in a TSO session.    *   FILE 123\n//*           Sometimes, you can't give a group of users the full   *   FILE 123\n//*           spectrum of TSO commands beyond the ones they really  *   FILE 123\n//*           need.  See member $$NOTES for more details.           *   FILE 123\n//*                                                                 *   FILE 123\n//*           This file contains several programs which reflect     *   FILE 123\n//*           the TSO command entered, back to the terminal,        *   FILE 123\n//*           without doing any other action.  If you want to       *   FILE 123\n//*           block a user from using a particular TSO command,     *   FILE 123\n//*           create a load library to concatenate (in a STEPLIB)   *   FILE 123\n//*           ahead of all the other libraries that their TSO       *   FILE 123\n//*           session has access to, then put one of these three    *   FILE 123\n//*           programs into that library.  I greatly prefer to use  *   FILE 123\n//*           the ECHOPGM command for this.  Then create an ALIAS   *   FILE 123\n//*           member to the ECHOPGM program (using the PDS program  *   FILE 123\n//*           from File 182 of the CBT Tape).  When you enter       *   FILE 123\n//*           a command with that alias name, the ECHOPGM program   *   FILE 123\n//*           is executed, and it reflects that command's name      *   FILE 123\n//*           back to the terminal, with all its parameters.        *   FILE 123\n//*                                                                 *   FILE 123\n//*           If the user enters a \"forbidden\" program, his/her     *   FILE 123\n//*           command is merely reflected back to the terminal,     *   FILE 123\n//*           with all the parameters, and it doesn't do anything.  *   FILE 123\n//*           Therefore the system is \"protected\" from that user,   *   FILE 123\n//*           and the commands entered also can be logged.          *   FILE 123\n//*                                                                 *   FILE 123\n//*           Using the PDS command processor on File 182, you      *   FILE 123\n//*           can create hundreds or thousands of aliases to one    *   FILE 123\n//*           program.  It's usually easiest to do this with        *   FILE 123\n//*           PDS running under TSO-in-batch.  If you really want   *   FILE 123\n//*           to get fancy, just copy ECHOPGM to a new library,     *   FILE 123\n//*           and then you can ALIAS all the program names in       *   FILE 123\n//*           SYS1.CMDLIB and the other TSO command libraries.      *   FILE 123\n//*           Then you delete the aliases for the commands the      *   FILE 123\n//*           users are permitted to use.  Make sure there are      *   FILE 123\n//*           enough directory blocks in the STEPLIB library,       *   FILE 123\n//*           to contain all the alias names.  On a 3390 pack,      *   FILE 123\n//*           45 directory blocks are on a track.  44 are on the    *   FILE 123\n//*           first directory track, and 45 on all the others.      *   FILE 123\n//*                                                                 *   FILE 123\n//*           Here's some sample TSO-in-batch JCL to create         *   FILE 123\n//*           aliases to a TSO command program.                     *   FILE 123\n//*                                                                 *   FILE 123\n//*       //SAGOLOBT  JOB (ACCT#),S-GOLOB,                          *   FILE 123\n//*       // NOTIFY=&SYSUID,                                        *   FILE 123\n//*       // CLASS=S,MSGCLASS=X                                     *   FILE 123\n//*       //*                                                       *   FILE 123\n//*       //TSOBATCH EXEC PGM=IKJEFT01                              *   FILE 123\n//*       //STEPLIB  DD DISP=SHR,DSN=library.where.PDS.is           *   FILE 123\n//*       //SYSTSPRT DD SYSOUT=*                                    *   FILE 123\n//*       //SYSTSIN  DD *                                           *   FILE 123\n//*        PDS 'your.new.steplib'                                   *   FILE 123\n//*        ALIAS ECHOPGM command1                                   *   FILE 123\n//*        ALIAS ECHOPGM command2                                   *   FILE 123\n//*        ALIAS ECHOPGM command3                                   *   FILE 123\n//*        ALIAS ECHOPGM command4                                   *   FILE 123\n//*        END                                                      *   FILE 123\n//*       /*                                                        *   FILE 123\n//*              Do this to as many commands as you want.           *   FILE 123\n//*                                                                 *   FILE 123\n//*           The three ECHO*** programs included here are:         *   FILE 123\n//*                                                                 *   FILE 123\n//*        ECHOADF  - Only works under the TSO Session Manager,     *   FILE 123\n//*                   EXEC PGM=ADFMDF03 in the logon proc.          *   FILE 123\n//*                   (Don't use this program--we have better.)     *   FILE 123\n//*                                                                 *   FILE 123\n//*        ECHOTPUT - Reflects the entire contents of the command   *   FILE 123\n//*                   buffer back to the terminal, using TPUT.      *   FILE 123\n//*                   (Don't use this program--we have better.)     *   FILE 123\n//*                                                                 *   FILE 123\n//*        ECHOPGM  - Reflects the entire contents of the command   *   FILE 123\n//*                   buffer back to the terminal, using PUTLINE.   *   FILE 123\n//*                   (This program can echo up to 250 characters.  *   FILE 123\n//*                    See the MAXMSG label in the EPUTL csect.)    *   FILE 123\n//*                   (Use this program. It's the best we have.)    *   FILE 123\n//*                                                                 *   FILE 123\n//*    ---->   ECHOPGM is the preferred program to use.     <----   *   FILE 123\n//*            ------- -- --- --------- ------- -- ---              *   FILE 123\n//*    ---->    The other programs are included only as     <----   *   FILE 123\n//*    ---->    coding examples and for experimentation.    <----   *   FILE 123\n//*                                                                 *   FILE 123\n//*          Sam Golob                                              *   FILE 123\n//*                                                                 *   FILE 123\n//*      email:  sbgolob@cbttape.org  or  sbgolob@attglobal.net     *   FILE 123\n//*                                                                 *   FILE 123\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ECHOADF": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x01\\x00%\\x0f\\x01\\x00%\\x1f\\x14V\\x00C\\x00\\r\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2000-09-07T14:56:00", "lines": 67, "newlines": 13, "modlines": 0, "user": "WSBG"}, "text": "//ECHOADF   EXEC REASMLNK,OUTPUT='??REASM.OUTPUT',    <==YOUR LOAD LIB\n//  PARM.LKED='NCAL,MAP,LIST,LET,TEST'\n//ASM.SYSIN   DD *\nECHOADF CSECT                                                            000000\n*------------------------------------------------------------------*\n*  THIS PROGRAM IS ALMOST AS SIMPLE AS IEFBR14.\n*\n*  THIS SYSTEM WAS INVENTED IN 1986 BY JEFFREY R. BROIDO.\n*\n*  ALL THIS PROGRAM DOES, IS TO SET RC=12 INTO REGISTER 15, AND\n*  RETURN TO THE CALLER, WHICH SEEMS USELESS, BUT IT ISN'T.\n*\n*  IT JUST SO HAPPENS THAT IF A TSO COMMAND DOES THIS, THE TSO\n*  TERMINAL MONITOR PROGRAM REFLECTS THE CONTENTS OF THE COMMAND\n*  BUFFER TO THE TERMINAL.  SO IF YOU EXECUTE THIS PROGRAM AS A\n*  TSO COMMAND, YOU GET ITS NAME AND ITS PARAMETERS REFLECTED\n*  BACK TO THE TERMINAL.  THIS EFFECT ONLY HAPPENS IF YOU ARE IN\n*  TSO SESSION MANAGER MODE (EXEC PGM=ADFMDF03 INSTEAD OF IKJEFT01).\n*\n*  IF YOU ARE NOT IN SESSION MANAGER, USE MY OTHER PROGRAMS,\n*  ECHOTPUT (USES TPUT TO REFLECT THE COMMAND TO THE TERMINAL), OR\n*  ECHOPGM  (USES PUTLINE TO REFLECT THE CONTENTS OF THE COMMAND\n*            BUFFER)\n*\n*  THEREFORE, IF YOU WANT TO NULLIFY A TSO COMMAND, JUST ALIAS ITS\n*  NAME TO THIS PROGRAM, AND PUT BOTH NAMES IN A LOAD LIBRARY THAT\n*  IS CONCATENATED AHEAD OF SYS1.CMDLIB , FOR INSTANCE YOU CAN PUT\n*  THIS PROGRAM INTO A STEPLIB IN THE LOGON PROC, WITH ALL ITS\n*  ALIASES.  THEREFORE, IF YOU EXECUTE THE NAME OF THE ALIAS, YOU\n*  GET ITS NAME REFLECTED BACK TO THE TSO TERMINAL, AND NO OTHER\n*  ACTION OCCURS.\n*\n*  YOU CAN CREATE A FEW, OR VERY MANY ALIASES TO THIS PROGRAM.\n*  JUST USE THE PDS COMMAND PROCESSOR (FROM CBT TAPE FILE 182)\n*  MANY TIMES (IN A BATCH PROGRAM IF YOU'D LIKE).  THE COMMANDS ARE:\n*\n*      PDS 'YOUR.LOAD.LIBRARY'\n*      ALIAS ECHOADF NAME1\n*      ALIAS ECHOADF NAME2\n*      ALIAS ECHOADF NAME3\n*      ALIAS ECHOADF NAME4\n*      ALIAS ECHOADF NAME5\n*      END\n*\n*  WITH THE PDS COMMAND PROCESSOR, YOU CAN CREATE HUNDREDS OR\n*  THOUSANDS OF ALIASES TO THIS PROGRAM.  YOU ARE NOT LIMITED BY\n*  LINKAGE EDITOR RESTRICTIONS.  YOU CAN EVEN ALIAS THIS PROGRAM\n*  TO EVERY NAME IN SYS1.CMDLIB AND IN OTHER LIBRARIES, EXCEPT FOR\n*  THOSE NAMES THAT THE (LIMITED) TSO SESSION NEEDS.  TO ALLOW THE\n*  USE OF A PROGRAM BY THE TSO SESSION, JUST DELETE THE ALIAS.\n*  TO FORBID A COMMAND, JUST MAKE AN ALIAS WITH THE PDS COMMAND\n*  AS ABOVE, TO THAT NAME.  CHEAP TSO COMMAND SECURITY.\n*\n*  I'D BET YOU'D NEVER REALIZED THAT TSO COMMAND SECURITY COULD\n*  BE SO SIMPLE TO IMPLEMENT.  SINCE THE COMMANDS ENTERED REFLECT\n*  BACK TO THE TERMINAL, YOU CAN EVEN LOG THE RESPONSES, USING\n*  THE TSO SESSION MANAGER, AND THE SMCOPY COMMAND.\n*------------------------------------------------------------------*\n         LA    R15,12              SET RETURN CODE 12                    000000\n         BR    R14                 GO BACK TO CALLER                     000004\n         YREGS\n         END\n//LKED.SYSLIN  DD *\n INCLUDE SYSLIBX\n ORDER   ECHOADF\n ENTRY   ECHOADF\n NAME    ECHOADF(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ECHOPGM": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x015\\x00G\\x00\\x95\\x11\\x7f\\x01\\x10\\x13?\\x168\\x01\\xbe\\x00\\xb1\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.53", "flags": 0, "createdate": "1995-04-27T00:00:00", "modifydate": "2010-05-13T16:38:47", "lines": 446, "newlines": 177, "modlines": 0, "user": "SBGOLOB"}, "text": "ECHOPUTL TITLE 'ECHOPUTL - REFLECT A TSO COMMAND BACK TO THE TERMINAL'\n* ------------------------------------------------------------------- *\n         SPACE 1\n         MACRO\n&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &\n               &LEN,                    @LENGTH OF MESSAGE             &\n               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &\n               &EPA=                    EPUTL EPA\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*  --> E@PUT\n.*\n.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.\n.*\n.*\n.*  ARGUMENTS: -----------------------------------------------------\n.*\n.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL\n.*\n.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)\n.*\n.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT\n.*            COMPATIBILITY.\n.*\n.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE\n.*\n.*\n.*   EXAMPLES: -----------------------------------------------------\n.*\n.*      1) APUT  'LITERAL'\n.*\n.*      2) APUT  (R3),80\n.*\n.*      3) APUT  LABEL\n.*\n.*      4) APUT  LABEL,40\n.*\n.*\n.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n.*\n.*\n.*  LOCAL SET SYMBOLS\n.*\n         LCLC  &SMA                     MESSAGE ADDRESS (REG)\n         LCLC  &SML                     MESSAGE LENGTH (REG)\n         LCLC  &SEP                     EPA (REGISTER)\n.*\n         LCLC  &L1,&L2,&L3              LOCAL LABELS\n.*\n&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS\n&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS\n&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS\n.*\n.*\n.*  MESSAGE ADDRESS\n.*\n         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*\n.*                                                          *HMD 11/86*\n&LABEL   DS    0H                                           *HMD 11/86*\n.*                                                          *HMD 11/86*\n.A0500   ANOP                                               *HMD 11/86*\n         AIF   ('&MSG' NE '').A2000\n         MNOTE 8,'''&MSG='' MISSING / REQUIRED'\n         MEXIT\n.*\n.A2000   ANOP\n         AIF   ('&MSG'(1,1) NE '(').A2400\n&SMA     SETC  '&MSG'(2,K'&MSG-2)\n         LR    R1,&SMA                  @MESSAGE TEXT\n         AGO   .A2600\n.*\n.A2400   ANOP\n         AIF   ('&MSG'(1,1) NE '''').A2500\n         B     &L3                      BRANCH AROUND MESSAGE\n&L2      DC    C&MSG\n&L3      DS    0H\n         LA    R1,&L2                   @MESSAGE\n         AGO   .A2600\n.*\n.A2500   ANOP\n         LA    R1,&MSG                  @MESSAGE TEXT\n.A2600   ANOP\n.*\n.*  MESSAGE LENGTH\n.*\n         AIF   ('&LEN' NE '').A3000\n         AIF   ('&MSG'(1,1) NE '''').A2800\n         LA    R0,L'&L2                 MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2800   ANOP\n         AIF   ('&MSG'(1,1) EQ '(').A2900\n         LA    R0,L'&MSG                MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A2900   ANOP\n         MNOTE 8,'''LEN'' MISSING / REQUIRED'\n         MEXIT\n.*\n.A3000   ANOP\n         AIF   ('&LEN'(1,1) NE '(').A3400\n&SML     SETC  '&LEN'(2,K'&LEN-2)\n         LR    R0,&SML                  MESSAGE LENGTH\n         AGO   .A3600\n.*\n.A3400   ANOP\n         LA    R0,&LEN                  MESSAGE LENGTH\n.A3600   ANOP\n.*\n.*  RSA\n.*\n         AIF   ('&RSA' EQ '').A4900\n         ST    R14,&RSA                 SAVE REGS 14\n.A4900   ANOP\n.*\n.*  ENTRY POINT\n.*\n         AIF   ('&EPA' NE '').A5000\n         L     R15,=V(EPUTL)            EPA\n         AGO   .A5600\n.*\n.A5000   AIF   ('&EPA'(1,1) NE '(').A5400\n&SEP     SETC  '&EPA'(2,K'&EPA-2)\n         LR    R15,&SEP                 EPA\n         AGO   .A5600\n.*\n.A5400   ANOP\n         L     R15,&EPA                 EPA\n.*\n.A5600   ANOP\n.*\n.*  CALL LINKAGE\n.*\n.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE\n.*\n         AIF   ('&RSA' EQ '').A6900\n         L     R14,&RSA                 RESTORE R14\n.A6900   ANOP\n.*\n.AMEND   MEND\n* ------------------------------------------------------------------- *\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\nECHOPUTL CSECT\n         USING ECHOPUTL,R12\n         B     BEGINN-*(,R15)\n         DC    AL1(16),CL16'ECHOPUTL VER 1.0'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DS    0H\nBEGINN   STM   R14,R12,12(R13)\n         LR    R12,R15\n         LR    R11,R1              PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         SPACE 1\n         L     R4,16               POINT TO CVT.\n         L     R4,0(,R4)           POINT TO TCB/ASCB WORDS\n         L     R10,12(,R4)         POINT TO ASCB.\n         L     R9,4(,R4)           POINT TO TCB.\n         L     R4,X'B4'(,R9)       POINT TO JSCB.\n         L     R2,X'108'(,R4)      POINT TO PSCB.\n         LA    R2,0(,R2)           CLEAR HIGH BYTE.\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         USING PSCB,R2\nCHEKAUTH DS    0H             BYPASS AUTHORIZATION           PARS 06/99\nCONT0    LTR   R11,R11             ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R4,0(,R11)          PT TO CMD BUFFER.\n         LTR   R4,R4               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R4)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R6,R3               LENGTH OF COMMAND + 4\n         ICM   R6,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R4)           LOAD OFFSET.\n*        SR    R6,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R6,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,EOJ0              ZERO. MESSAGE\n         BC    5,EOJ8              LESS THAN ZERO OR OVERFLOW, OUT.\n*        AR    R4,R3               POINT ...\n         LA    R4,4(,R4)           ... TO CHAR.\n         BCTR  R6,0                DECREMENT REG FOR EXECUTE\n         B     AROUNDEX\nMOVEID   MVC   MSGBUF(*-*),0(R4)   EXECUTED\nAROUNDEX DS    0H\n         MVC   MSGBUF,MSGBUF-1     CLEAR FIELD\n         EX    R6,MOVEID           MOVE COMMAND INTO MESSAGE\n         LA    R6,1(,R6)           UP R6 TO ITS FORMER VALUE\n         APUT  MSGBUF,(R6)\n         B     EOJ0                NORMAL END\nEOJ4     LA    R15,4               SET CC = 4.\nEOJ      DS    0H                  BYE.\n         LR    R1,R13\n         L     R13,4(,R13)\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     SR    R15,R15             SET CC = 0.\n         B     EOJ                 CONT.\nEOJ8     LA    R15,8               SET CC = 8.\n         B     EOJ                 CONT\n         EJECT\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 3\n         LTORG\n         SPACE 3\nDATAAREA DSECT\nSAVE     DS    9D\nSAVE2    DS    9D\n         DC    C' '\nMSGBUF   DC    CL255' '            MESSAGE BUFFER\n         DS    CL72                PADDING\n         DS    0F                  ALIGN ON FULLWORD\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJUPT\n         IKJPSCB\n         END\nEPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&\n               OR'\nEPUTL    CSECT                                              *HMD 10/85*\n         LCLB  &XA                                          *HMD 10/85*\n&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*  MODULE NAME  . . . . EPUTL\n*\n*  ALIASES  . . . . . . NONE\n*\n*  DATE WRITTEN . . . . 06/85\n*  UPDATED      . . . . 04/88                                  HD APR88\n*\n*  AUTHOR . . . . . . . JIM ELSWORTH\n*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88\n*\n*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR\n*\n*  PURPOSE:\n*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE\n*\n*\n*  DESCRIPTION:\n*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.\n*    ISSUES SINGLE LINE PUTLINE.\n*\n*\n*  ATTRIBUTES:\n*    REENTRANT\n*\n*  FEATURES:\n*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.\n*\n*  CALLED MODULES:\n*    PUTLINE\n*\n*  ASSUMPTIONS:\n*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE\n*\n*  ABENDS:\n*    POSSIBLE 0CX IF BAD ARGUEMNTS\n*\n*  CAVEATS:\n*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB\n*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.\n*\n*\n*  INPUT ARGUMENTS:\n*    1)  R1 : ADDRESS OF MESSAGE TEXT\n*    2)  R0 : LENGTH OF MESSAGE TEXT\n*    3) R13 : STANDARD OS SAVE AREA\n*    4) R14 : RETURN ADDRESS\n*    5) R15 : ENTRY ADDRESS\n*\n*               ( CONTINUED ... )\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*\n*\n*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR\n*\nRCBA     EQU   100                 BAD MESSAGE ADDRESS\nRCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG\n*\nMAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH\n*\n*\n*  REGISTERS USED:\n*\nR0       EQU   0                   MESSAGE LENGTH AT ENTRY\nR1       EQU   1                   MESSAGE ADDRESS AT ENTRY\nR2       EQU   2                   WORK\nRMA      EQU   4                   @MESSAGE TEXT\nRML      EQU   5                   MESSAGE LENGTH\nRUPT     EQU   6                   @UPT (USER PROFILE TABLE)\nRECT     EQU   7                   @ECT\nR12      EQU   12                  CSECT BASE\nR13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n*\n* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         EJECT\n         IKJCPPL\n         EJECT\n         IKJTCB   LIST=YES                                  *HMD 10/85*\n         EJECT                                              *HMD 10/85*\n         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*\n         EJECT\n         IHAPSA   LIST=YES                                     HD APR88\n         EJECT                                                 HD APR88\nPUTLDS   DSECT\n         DS    18F                      OS SAVE AREA\nPUTAAA   EQU   *\nPUTECB   DS    F                        ECB\nPUTIOPL  DS    4F                       IOPLADS\nPUTBLOK  PUTLINE MF=L\nPUTLEN   DS    H                        LENGTH\nPUTZZZ   DS    H                        RESERVED\nPUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA\nPUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS\n         EJECT\n***********************************************************************\n*  SET UP LINKAGE\n***********************************************************************\n         SPACE 1\nEPUTL    CSECT\n         AIF  (NOT &XA).X001                                *HMD 10/85*\nEPUTL    AMODE 31\n.X001    ANOP                                               *HMD 10/85*\n         STM   14,12,12(13)       SAVE CALLERS REGS\n         LR    R12,R15            COPY EPA\n         USING EPUTL,R12          ADDRESSABILITY\n         AIF   (NOT &XA).X002                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &\n               LOC=RES            RELATIVE TO 16MB LINE\n         AGO   .X003                                        *HMD 10/85*\n.X002    ANOP                                               *HMD 10/85*\n         GETMAIN RU,              LV=LENGTH                            &\n               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA\n.X003    ANOP                                               *HMD 10/85*\n         ST    1,8(13)            OUR SAVE AREA POINTER\n         ST    13,4(1)            POINTER TO CALLERS SAVE AREA\n         LR    13,1               @OUR SAVE AREA\n         USING PUTLDS,R13         MAP SA AND WORK AREA\n         L     R14,4(R13)         POINT TO CALLERS RSA\n         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN\n         SPACE 2\n***********************************************************************\n*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE\n***********************************************************************\n         SPACE 1\n         LA    R15,RCBA                 ASSUME BAD ADDRESS\n         LTR   RMA,R1                   MESSAGE ADDRESS\n         BNP   RETURN                   GOOD ASSUMPTION\n         LA    R15,RCBL                 ASSUME BAD LENGTH\n         LTR   RML,R0                   POSITIVE?\n         BNP   RETURN                   -NO\n         C     RML,=A(MAXMSG)           MORE THAN MAX?\n         BH    RETURN                   -YES\n         SPACE 2\n***********************************************************************\n*  BUILD PARAMETER LIST\n***********************************************************************\n         SPACE 1\n         LA    R15,4(RML)               MESSAGE LENGTH\n         STH   R15,PUTLEN                 PLUS HEADER\n         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW\n         BCTR  RML,0                    REDUCE FOR MOVE\n         EX    RML,PUTMOVE\n         EJECT\n***********************************************************************\n*  DIG UP ADDRESS OF UPT AND ECT\n***********************************************************************\n         SPACE 1\n         L     R2,PSATOLD-PSA           @TCB                   HD APR88\n         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA\n         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP\n         USING CPPL,R2                  MAP CPPL\n         L     RUPT,CPPLUPT             @UPT\n         L     RECT,CPPLECT             @ECT\n         SPACE 2\n***********************************************************************\n*  ISSUE PUTLINE CALL\n***********************************************************************\n         SPACE 1\n         XC    PUTECB,PUTECB            CLEAR ECB\n         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88\n         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &\n               UPT=(RUPT),              @UPT                           &\n               ECT=(RECT),              @ECT                           &\n               ECB=PUTECB,              @ECB                           &\n               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &\n               MF=(E,PUTIOPL)\n         EJECT\n***********************************************************************\n*  RETURN TO CALLER\n***********************************************************************\n         SPACE 1\nRETURN   EQU   *\n         LR    2,R13                    @OUR SAVE AREA\n         LR    3,R15                    SAVE RETURN CODE\n         L     R13,4(R13)               @CALLERS SAVE AREA\n         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0\n         LR    R15,3                    RESTORE RC\n         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS\n         SPACE 5\n***********************************************************************\n*  CONSTANTS AND NON-REENTRANT WORK AREAS\n***********************************************************************\n         SPACE 1\nPUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER\n         SPACE 2\n         LTORG\n         SPACE 2\n         END   EPUTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ECHOPGM$": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00@\\x01\\x00%\\x0f\\x01\\x10\\x13?\\x16\\x05\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2010-05-13T16:05:40", "lines": 30, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//*        DD DISP=SHR,DSN=SBGOLOB.CBT479.FILE123\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT479.FILE123(ECHOPGM)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   ECHOPUTL\n SETSSI  CB479123\n SETCODE AC(0)\n NAME    ECHOPGM(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ECHOPGMO": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'\\x00\\x00\\x00\\x95\\x15\\x0f\\x01\\x00%\\x0f\\x19\\x02\\x01%\\x02-\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.39", "flags": 0, "createdate": "1995-05-30T00:00:00", "modifydate": "2000-09-06T19:02:00", "lines": 293, "newlines": 557, "modlines": 0, "user": "WSBG"}, "text": "ECHOPGM  TITLE 'ECHOPGM - ECHO A TSO COMMAND USING PUTLINE.'\n         SPACE 1\n         MACRO\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    STM   15,1,HEXSAVE\n         LA    1,&FROM\n         LA    0,&LEN\n         LA    15,&TO\n         BAL   4,HEX\n         LM    15,1,HEXSAVE\n         MEND\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\nECHOPGM  CSECT\n         USING ECHOPGM,R12\n         B     BEGINN-*(,R15)\n         DC    AL1(16),CL16'ECHOPGM VER 1.0'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DS    0H\nBEGINN   STM   R14,R12,12(R13)\n         LR    R12,R15\n         LR    R11,R1              PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA\n         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)\n         SPACE 1\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL\n         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE\nCHEKAUTH DS    0H             BYPASS AUTHORIZATION\nCONT0    LTR   R11,R11             ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R11)          PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n*        SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,EOJ0              ZERO, STILL HAVE TO ECHO\n         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.\n*                                  OF THE KEYWORD (AND ITS LENGTH)\n*                                  AND ALSO SAVE THE CURRENT ID&LENGTH\n*        AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         BCTR  R5,0                DECREMENT REG FOR EXECUTE\n         B     AROUNDEX\nMOVEID   MVC   MSGBUF(*-*),0(R1)   EXECUTED\nAROUNDEX DS    0H\n         MVC   MSGBUF,MSGBUF-1     CLEAR FIELD\n         EX    R5,MOVEID           MOVE COMMAND INTO MESSAGE\n         LA    R5,1(,R5)           UP R5 TO ITS FORMER VALUE\n         LR    R0,R5               MOVE IT INTO PLACE FOR PUTLINE\n         BAL   R4,MSG              PUT THE MESSAGE OUT\nEOJ4     LA    R15,4               SET CC = 4.\nEOJ      DS    0H                  BYE.\n         LR    R1,R13\n         L     R13,4(,R13)\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     SR    R15,R15             SET CC = 0.\n         B     EOJ                 CONT.\nEOJ8     LA    R15,8               SET CC = 8.\n         B     EOJ                 CONT\n         EJECT\n*-----------------------------------------------------------------*\n*---*                S U B R O U T I N E S                    *---*\n*-----------------------------------------------------------------*\n         SPACE 2\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nMSG      LA    R1,MSGBUF           WRITE A LINE USING PUTLINE FACILITY\n*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.\n         BAL   R14,PUTLINE\n         MVC   MSGBUF,MSGBUF-1\n         BR    R4\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)      MOVE BYTE\n         UNPK  0(3,R15),1(2,R15)   UNPACK\n         TR    0(2,R15),HEXTAB-240\n         LA    R15,2(,R15)         INCREMENT OUTPUT PTR\n         LA    R1,1(,R1)           INCREMENT INPUT PTR\n         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP\n         MVI   0(R15),C' '         BLANK THE TRAILING BYTE\n         BR    R4                  RETURN TO CALLER\nHEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *\n*\nINITCON  MVI   MSGBUF-1,C' '       INITIALIZE BLANK\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nGETPSCB  L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R1,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R1)       POINT TO JSCB.\n         L     R1,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2\n         BR    R9\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         USING CPPL,R11\nCPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:\n         ST    R6,SAVEUPT             THE UPT\n         L     R6,CPPLPSCB\n         ST    R6,SAVEPSCB            THE PSCB\n         L     R6,CPPLECT\n         ST    R6,SAVEECT             THE ECT\n         L     R6,CPPLCBUF\n         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS\n         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF\n         LA    R6,0\n         BR    R9\n         DROP  R11\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        SET UP IOPL FOR PUTLINE                           *\n************************************************************\n         SPACE\n         USING CPPL,R11\nSETIOPL  LA    R15,MYIOPL\n         USING IOPL,R15\n         MVC   IOPLUPT(4),CPPLUPT\n         MVC   IOPLECT(4),CPPLECT\n         DROP  R11\n         LA    R0,MYECB\n         ST    R0,IOPLECB\n         XC    MYECB,MYECB\n         LA    R0,MYPTPB\n         ST    R0,IOPLIOPB\n         DROP  R15\n         SPACE\n         L     R15,CVTPTR          POINT TO CVT                  JDM1\n         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1\n         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1\n         BNO   PUTLOAD             NO - BRANCH TO LOAD\n         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1\n         DROP  R15                                               JDM1\n         B     PUTLOADX            BRANCH AROUND LOAD\nPUTLOAD  LA    R0,=CL8'IKJPUTL '\n         LOAD  EPLOC=(0)\n         LR    R15,R0              GET ENTRY ADDRESS\n         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE\nPUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS\n         BR    R9\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTMSG ROUTINE                                    *\n************************************************************\n         SPACE\nPUTMSG   STM   R14,R1,PUTSAVE\n         XC    MYOLD(8),MYOLD\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPM\n         LA    R14,1               NO. OF MESSAGE SEGMENTS\n         ST    R14,MYOLD\n         LA    R14,MYSEG1          POINT TO 1ST SEGMENT\n         ST    R14,MYOLD+4\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         LA    R15,MYSEG1+4\n         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?\n         BE    *+16                YES - BRANCH\n         LA    R14,1(,R14)         ADD 1 TO LENGTH\n         MVI   0(R15),C' '         INSERT LEADING BLANK\n         LA    R15,1(,R15)         BUMP POINTER\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n************************************************************\n*        PUTLINE ROUTINE                                   *\n************************************************************\n         SPACE\nPUTLINE  STM   R14,R1,PUTSAVE\n         XC    MYSEG1(4),MYSEG1\n         MVC   MYPTPB(12),MODLPTPB\n         LR    R14,R0              LENGTH IN R0\n         LA    R14,4(,R14)         ADD 4\n         STH   R14,MYSEG1\n         LR    R14,R0\n         BCTR  R14,0\n         B     *+10\n         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN\n         EX    R14,*-6\n         LA    R1,MYIOPL\n         L     R15,MYPUTLEP\n         SPACE\n         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))\n         SPACE\n         LM    R14,R1,PUTSAVE\n         BR    R14\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n         EJECT\n*-----------------------------------------------------------------*\n*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*\n*-----------------------------------------------------------------*\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n         DC    C' '\nMSGBUF   DC    CL255' '            MESSAGE BUFFER\n         DS    CL72                PADDING\n         DS    0F                  ALIGN ON FULLWORD\n         SPACE 1\n         LTORG\n         SPACE\nMODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         SPACE\nMODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L\n         DS    0F\n         SPACE 3\n*-----------------------------------------------------------------*\n*----         GETMAINED DATA AREA FIELDS                      ----*\n*-----------------------------------------------------------------*\nDATAAREA DSECT\nSAVE     DS    9D\n         DS    0F                  ALIGN ON FULLWORD\nSAVECPPL DS    F                   SAVE THE CPPL\nSAVEUPT  DS    F                   SAVE FOR IKJIFRIF\nSAVEPSCB DS    F                   SAVE FOR IKJIFRIF\nSAVEECT  DS    F                   SAVE FOR IKJIFRIF\nHEXSAVE  DS    3F                  SAVE FOR HEX MACRO\nMYPPL    DS    7F\nMYANS    DS    F\nMYECB    DS    F                   USED BY PUTLINE ROUTINE\nMYIOPL   DS    4F                  USED BY PUTLINE ROUTINE\nMYPTPB   DS    3F                  USED BY PUTLINE ROUTINE\nMYPUTLEP DS    F                   USED BY PUTLINE ROUTINE\nMYOLD    DS    2F                  USED BY PUTLINE ROUTINE\nMYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE\nPUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE\nCMBUFAD  DS    F                   COMMAND BUFFER ADDRESS\n         DS    CL500               PADDING\n         DS    0F\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJCPPL\n         IKJUPT\n         IKJPSCB\n         IKJECT\n         IKJIOPL\n         CVT  DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ECHOTPUT": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'\\x00\\x00\\x00\\x95\\x11\\x7f\\x01\\x00%\\x0f\\x19\\x12\\x00i\\x00\\xb1\\x00H\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.39", "flags": 0, "createdate": "1995-04-27T00:00:00", "modifydate": "2000-09-06T19:12:00", "lines": 105, "newlines": 177, "modlines": 72, "user": "WSBG"}, "text": "ECHOTPUT TITLE 'ECHOTPUT - DRAIN BROADCAST MESSAGES FOR A USERID.'\n         SPACE 1\n*        REGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nSP000    EQU   0\n         SPACE 1\nECHOTPUT CSECT\n         USING ECHOTPUT,R12\n         B     BEGINN-*(,R15)\n         DC    AL1(16),CL16'ECHOTPUT VER 1.0'\n         DC    CL16' &SYSDATE &SYSTIME '\n         DS    0H\nBEGINN   STM   R14,R12,12(R13)\n         LR    R12,R15\n         LR    R11,R1              PRESERVE CPPL POINTER.\n         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING DATAAREA,R13\n         SPACE 1\n         L     R1,16               POINT TO CVT.\n         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS\n         L     R10,12(,R1)         POINT TO ASCB.\n         L     R9,4(,R1)           POINT TO TCB.\n         L     R1,X'B4'(,R9)       POINT TO JSCB.\n         L     R2,X'108'(,R1)      POINT TO PSCB.\n         LA    R2,0(,R2)           CLEAR HIGH BYTE.\n         LTR   R2,R2               ANY PSCB?\n         BZ    EOJ8                GET OUT.  NOT TSO.\n         USING PSCB,R2\nCHEKAUTH DS    0H             BYPASS AUTHORIZATION           PARS 06/99\nCONT0    LTR   R11,R11             ANY CPPL?\n         BZ    EOJ8                NO.  GET OUT\n         L     R1,0(,R11)          PT TO CMD BUFFER.\n         LTR   R1,R1               ANY CMD BUFFER?\n         BZ    EOJ4                GET OUT IF NONE\n         LH    R3,0(,R1)           LOAD LENGTH.\n         CH    R3,=H'4'            ANYTHING?\n         BNH   EOJ4                NO.  GET OUT.\n         LR    R5,R3               LENGTH OF COMMAND + 4\n         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES\n         LH    R3,2(,R1)           LOAD OFFSET.\n*        SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4\n         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER\n         BC    8,EOJ0              ZERO. MESSAGE\n         BC    5,EOJ8              LESS THAN ZERO OR OVERFLOW, OUT.\n*        AR    R1,R3               POINT ...\n         LA    R1,4(,R1)           ... TO CHAR.\n         BCTR  R5,0                DECREMENT REG FOR EXECUTE\n         B     AROUNDEX\nMOVEID   MVC   MSGBUF(*-*),0(R1)   EXECUTED\nAROUNDEX DS    0H\n         MVC   MSGBUF,MSGBUF-1     CLEAR FIELD\n         EX    R5,MOVEID           MOVE COMMAND INTO MESSAGE\n         LA    R5,1(,R5)           UP R5 TO ITS FORMER VALUE\n         TPUT  MSGBUF,(R5)\n         B     EOJ0                NORMAL END\nEOJ4     LA    R15,4               SET CC = 4.\nEOJ      DS    0H                  BYE.\n         LR    R1,R13\n         L     R13,4(,R13)\n         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA\n         L     R14,12(,R13)\n         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000\n         LM    R0,R12,20(R13)\n         BR    R14\nEOJ0     SR    R15,R15             SET CC = 0.\n         B     EOJ                 CONT.\nEOJ8     LA    R15,8               SET CC = 8.\n         B     EOJ                 CONT\n         EJECT\nFULLZERO DC    F'0'\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n* - - - - - - - - - - - - - - - - - - - - - - - - *\n         SPACE 3\n         LTORG\n         SPACE 3\nDATAAREA DSECT\nSAVE     DS    9D\n         DC    C' '\nMSGBUF   DC    CL255' '            MESSAGE BUFFER\n         DS    CL72                PADDING\n         DS    0F                  ALIGN ON FULLWORD\n         SPACE 1\nDATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA\n         IKJUPT\n         IKJPSCB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REASMLNK": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x89\"_\\x00\\x930\\x1f\\x157\\x00\\x12\\x00E\\x00\\x04\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1989-08-13T00:00:00", "modifydate": "1993-10-28T15:37:00", "lines": 18, "newlines": 69, "modlines": 4, "user": "WSBG"}, "text": "//REASMLNK PROC\n//ASM    EXEC  PGM=ASMA90,REGION=2048K,\n//             PARM=(DECK,NOOBJECT,NORLD,RENT,TERM,'XREF(SHORT)')\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))\n//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(MOD,PASS),DSN=&&X,\n//             DCB=BLKSIZE=3120\n//SYSPRINT DD  SYSOUT=*\n//SYSTERM  DD  SYSOUT=*\n//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR,DCB=BLKSIZE=23440\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//LKED   EXEC  PGM=IEWL,PARM='MAP,RENT,REUS,REFR,LET,NCAL',COND=(0,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSLIBX  DD  DSN=&&X,DISP=(OLD,DELETE)\n//SYSLMOD  DD  DISP=SHR,DSN=&OUTPUT\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))\n//       PEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT123/FILE123.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT123", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}