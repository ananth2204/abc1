{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012008000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE425.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE425.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0c'", "DS1TRBAL": "b'KN'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x10\\x00\\n\\x03\\x10\\x00\\x0c\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@FILE425": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x08?\\x01\\x00\\x19/\\x15)\\x00\\x0c\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "2000-07-10T15:29:00", "lines": 12, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 425 from Mike Loos and contains an IEFUSI SMF exit        *   FILE 425\n//*           (used for controlling virtual storage allocations     *   FILE 425\n//*           for jobs).  Mike wrote this exit for a SHARE          *   FILE 425\n//*           presentation.                                         *   FILE 425\n//*                                                                 *   FILE 425\n//*           Mike Loos                                             *   FILE 425\n//*           VP of Ops and Tech Support                            *   FILE 425\n//*           Fair, Isaac and Company, Inc.                         *   FILE 425\n//*           4295 Lexington Avenue North                           *   FILE 425\n//*           St. Paul, MN  55126                                   *   FILE 425\n//*           mikeloos@fairisaac.com                                *   FILE 425\n//*                                                                 *   FILE 425\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IEFUSI": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00\\x19/\\x01\\x00\\x19/\\x134\\x01c\\x01c\\x00\\x00\\xd4`\\xd3\\xd6\\xd6\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-07-10T00:00:00", "modifydate": "2000-07-10T13:34:00", "lines": 355, "newlines": 355, "modlines": 0, "user": "M-LOOS"}, "text": "         TITLE 'IEFUSI - SMF Step Initiation Exit'\n***********************************************************************\n*                                                                     *\n*             Module Name = IEFUSI                                    *\n*                                                                     *\n*             Descriptive Name = SMF Step Initiation Exit             *\n*                                                                     *\n*             Function =                                              *\n*                Exit allows installation to control job step         *\n*                region size.  A minimum of 4096K will be set if      *\n*                anything less has been specified.  Region sizes in   *\n*                in excess of 256M will be subject to a RACF check.   *\n*                All region requests will have a default increment    *\n*                added below the line to set the region limit.        *\n*                                                                     *\n*                The value of the increment used in this exit is the  *\n*                difference between the region limit and the region   *\n*                size (below the line) and is set to 128K, i.e. the   *\n*                region limit = the region size + 128K                *\n*                                                                     *\n*                Operation =                                          *\n*                   Save registers and establish addressability       *\n*                   If subsystem is OMVS, get out without changing    *\n*                   anything.                                         *\n*                   If region request is <= 4096K, set region         *\n*                       size to 4096K below and 32M above             *\n*                       Restore registers                             *\n*                       Exit                                          *\n*                   Get some storage to work in                       *\n*                   If region request is = 0 then set the region to   *\n*                       the maximum available below and to 32M above  *\n*                   If region request is > 4096K and <= the maximum   *\n*                       size available below the line, set region     *\n*                       size to that requested below and 32M above    *\n*                   If region request is > maximum available below    *\n*                       the line and <= 32M, set the region to the    *\n*                       maximum available below and to 32M above      *\n*                   If region request is > 32M and <= 256M, then      *\n*                       set the region to the maximum available below *\n*                       and to the size requested above               *\n*                   If region request is > 256M, issue a RACROUTE for *\n*                       read access to RESOURCE=LARGEREG in           *\n*                       CLASS DYN$APPL                                *\n*                       If user has access then set the region to the *\n*                           maximum available below and to the size   *\n*                           requested above                           *\n*                       otherwise cancel the job                      *\n*                   Free the storage                                  *\n*                   Restore registers                                 *\n*                   Exit                                              *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*              Notes =                                                *\n*                                                                     *\n*                 Register conventions = standard conventions.        *\n*                    Register  0       = not used                     *\n*                    Register  1       = Parameter list pointer       *\n*                    Register  2       = Work Reg / addr of CVT, GDA  *\n*                    Register  3       = Work Reg                     *\n*                    Register  4       = Work Reg / VSPL addressabilty*\n*                    Register  5       = Work Reg                     *\n*                    Registers 6       = not used                     *\n*                    Registers 7       = Work Reg                     *\n*                    Register  8       = Work Reg / SIPL addressabilty*\n*                    Registers 9 - 11  = not used                     *\n*                    Register  12      = Base Register                *\n*                    Register  13      = Save area pointer            *\n*                    Register  14      = Return                       *\n*                    Register  15      = Entry point address and      *\n*                                        Return code Register         *\n*                                                                     *\n*             Macros =                                                *\n*                SAVE, RETURN, EQUATE, RACROUTE, WTO, STORAGE         *\n*                                                                     *\n*             Mapping macros used =                                   *\n*                CVT, IHAGDA                                          *\n*                                                                     *\n*             Assembler options = LIST,RENT                           *\n*                                                                     *\n*             Binder options = LET,LIST,XREF,RENT,REUS,REFR,AC=1      *\n*                                                                     *\n*                                                                     *\n*             Change activity =                                       *\n*                06/27/2000  Written.                           MJL.  *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*        Initialization\n***********************************************************************\nIEFUSI   CSECT ,                       SMF Step Initiation Exit\nIEFUSI   AMODE 31\nIEFUSI   RMODE ANY\n         SAVE  (14,12),,IEFUSI*FAIR*ISAAC*&SYSDATE*&SYSTIME\n*                                      Save Registers\n         LR    R12,R15                 R12 - Base Register\n         USING IEFUSI,R12              Establish addressability\n         LR    R8,R1                   Preserve ptr to parms\n         USING SIPLBEGN,R8             Establish addressability to SIPL\n         SR    R15,R15                 Set default return code = 0\n*\n*        See what we can do before we get any storage\n*\n         L     R4,SIPLSSN              Address of the subsytem name\n         CLC   0(R4),OMVS              Is it OMVS?\n         BE    RETURNQ                 Yes, quick return\n         L     R4,SIPLVSM              Address of the VSM parm list\n         USING VSPLBEGN,R4\n         L     R5,VSPLREGR             Region requested\n         LTR   R5,R5                   Zero?\n         BZ    GETSTOR                 No, go check further\n         C     R5,DFTREGSZ             Compare to installation default\n         BH    GETSTOR                 High?  Go check further\n*\n*        We now know that we are dealing with a region request of\n*        less than or equal to the JES default setting of 4096K, so\n*        we will set the region to 4096K below and 32M above.\n*\n         L     R5,DFTREGSZ             Give them the default\n         ST    R5,VSPLREGB             Region size...\n         A     R5,DFTINCR              Add the LSQA safety factor and\n         ST    R5,VSPLGETB             Store it as the region limit\n         MVC   VSPLREGA,DFTABOVE       Store default region above 16M\n         MVC   VSPLGETA,DFTABOVE       Store default limit above 16M\n         OI    VSPLFLAG,X'C0'          Indicate that USI has set values\n*                                      and that the system should not\n*                                      check for the availability of\n*                                      the requested region size.\n         B     RETURNQ                 Get out quick.\n         DROP  R4\nGETSTOR  EQU   *\n         LA    R4,WORKLEN\n         STORAGE OBTAIN,LENGTH=(R4),LOC=ANY\n*                                      GETMAIN dynamic storage\n         ST    R13,4(R1)               Store address of prev savearea\n*                                      in current savearea\n         ST    R1,8(R13)               Store address of current\n*                                      savearea in prev savearea\n         LR    R13,R1                  R13 = Address of GETMAINed area\n         USING WORKAREA,R13            Establish addressability to\n*                                      workarea\n*\n*        This code obtains the value for the maximum region available\n*        below the line\n*\n         L     R2,16                   Address of CVT\n         USING CVT,R2\n         L     R2,CVTGDA               Address of Global Data Area\n         DROP  R2\n         USING GDA,R2\n         L     R2,GDAPVTSZ             Max storage size below 16M\n         DROP  R2\n         ST    R2,MAXBELOW             Save it for region limit\n         S     R2,DFTINCR              Save room for LSQA\n         ST    R2,MAXREGSZ             Save it for region size\n*\n***********************************************************************\n*        Requested region size checking\n***********************************************************************\nCHKREGN  DS    0H\n         L     R4,SIPLVSM              R4 = address if VSM parm list\n         USING VSPLBEGN,R4             Establish addressability to\n*                                      VSM parameter list DSECT\n         OI    VSPLFLAG,X'C0'          Turn on bit 0 TO indicate that\n*                                      IEFUSI has set region values\n*                                      and bit 1 to indicate that the\n*                                      system should not check for the\n*                                      availability of the requested\n*                                      region size.\n*\n*        We are checking for REGION=0\n*        If found, the region will be set to the maximum available\n*        below and to 32M above.\n*\n         L     R5,VSPLREGR             Geg the requested region size\n         LTR   R5,R5                   Check for REGION=0\n         BZ    LOADMAX1                Go load default maximums\n*\n*        We are checking for region requests > the max allowed (256M)\n*        If found, a RACROUTE will be issued and either the job will\n*        be cancelled or the region will be set to the max available\n*        below and to the size requested above the line\n*\n         C     R5,MAXREQST             Check for > max allowed\n         BH    CHEKRACF                Check if RACF will allow\n*\n*        We are checking for requests <= the maximum available below\n*        If found, the region will be set to what was requested below\n*        and to 32M above\n*\n         C     R5,MAXREGSZ             Check to see if req is below\n         BNH   LOADREQ1                Go load what was requested\n*\n*        We are checking for requests <= the default above (32M)\n*        If found, the region will be set to the maximum available\n*        below and to 32M above\n*\n         C     R5,DFTABOVE             Check to see if req <= 32M\n         BNH   LOADMAX1                Give them max defaults\n*\n*        The last possiblity is that the request is for an amount\n*        > the default above (32M) and <= the installation defined\n*        maximum above (256M).  The region will be set to the maximum\n*        available below, and to what was requested above\n*\n         B     LOADREQ2                Must be between 32M and 256M\nLOADREQ1 EQU   *\n         ST    R5,VSPLREGB             Load requested region below\n         A     R5,DFTINCR              Add for LSQA\n         ST    R5,VSPLGETB             Load adjusted limit below\n         MVC   VSPLGETA,DFTABOVE       Load default limit above\n         MVC   VSPLREGA,DFTABOVE       Load default region avove\n         B     FINISH\nLOADMAX1 EQU   *\n         MVC   VSPLGETB,MAXBELOW       Load max limit below\n         MVC   VSPLREGB,MAXREGSZ       Load max region below\n         MVC   VSPLGETA,DFTABOVE       Load default limit above\n         MVC   VSPLREGA,DFTABOVE       Load default region above\n         B     FINISH\nCHEKRACF EQU   *\n         MVC   RACDYN(RACLEN),RACSTAT  Initialize the macro list form\n         LA    R7,2                    Set check for read access\n         LA    R3,RESOURCE             Point to resource name\n         LA    R4,DYNAPPL              Point to class\n         RACROUTE ENTITYX=((R3)),CLASS=(R4),LOG=ASIS,REQUEST=AUTH,     +\n               WORKA=RACWK,ATTR=(R7),RELEASE=2608,MF=(E,RACDYN)\n         LTR   R15,R15                 Check return code.  If not zero\n         BNZ   CANJOB                  Cancel job and issue message\nLOADREQ2 EQU   *\n         L     R4,SIPLVSM              R4 = address of VSM parm list\n         MVC   VSPLGETB,MAXBELOW       Load max limit below\n         MVC   VSPLREGB,MAXREGSZ       Load max region below\n         MVC   VSPLGETA,VSPLREGR       Load requested limit above\n         MVC   VSPLREGA,VSPLREGR       Load requested region above\n         B     FINISH\n***********************************************************************\n*        Wrap things up and return\n***********************************************************************\nCANJOB   EQU   *\n         WTO   'JOB CANCELED BY SMF EXIT - IEFUSI.  USER NOT AUTHORIZED+\n                BY RACF TO USE LARGE REGION SIZES.',                   +\n               ROUTCDE=(11)\n         LA    R15,4                   Set return code to 4 to cancel\nFINISH   DS    0H\n         LR    R4,R15                  R4 - Save the return code\n         LR    R7,R13                  R7 - Save address of WORKAREA\n         L     R13,4(R13)              Restore Register 13\n         LA    R8,WORKLEN              R8 - Length of WORKAREA\n         STORAGE RELEASE,ADDR=(R7),LENGTH=(R8)\n*                                      Free the dynamic storage\n         LR    R15,R4                  R15 - Restore the return code\nRETURNQ  EQU   *                       Quick return\n         RETURN (14,12),,RC=(15)       Return\n***********************************************************************\n*        CONSTANTS\n***********************************************************************\nDFTINCR  DC    A(128*1024)             Default cushion for LSQA, etc.\nDFTREGSZ DC    A(4096*1024)            Default region size below 16M\nDFTABOVE DC    A(32*1024*1024)         Default region size above 16M\nMAXREQST DC    A(256*1024*1024)        Max request size without RACF\nOMVS     DC    CL4'OMVS'               OMVS Subsystem name\n***********************************************************************\n*        Initialization data for portion of GETMAINed area\n***********************************************************************\nRACSTAT  RACROUTE REQUEST=AUTH,MF=L    Static version of RACROUTE list\nRACLEN   EQU   *-RACSTAT               Length of static version\nRESOURCE DS    0F\n         DC    AL2(0)                  Resource name for ENTITYX format\n         DC    AL2(8)                  checking\n         DC    CL8'LARGEREG'\nDYNAPPL  DS    0F                      Class name\n         DC    AL1(8)\n         DC    CL8'DYN$APPL'\n***********************************************************************\n*        REGISTER EQUATES\n***********************************************************************\n         LTORG\n         EQUATE\n***********************************************************************\n*        IEFUSI input parameter list\n***********************************************************************\nSIPLBEGN DSECT\nSIPLCEPL DS    F                       Addr - Common SMF exit parm addr\nSIPLSTEP DS    F                       Addr - 8 byte job step name\nSIPLPGM  DS    F                       Addr - 8 byte program name\nSIPLACCT DS    F                       Addr - job step accting info\nSIPLVSM  DS    F                       Addr - VSM parameter list\nSIPLSRM  DS    F                       Addr - performance group number\n*                                             and V=R flag\nSIPLDSP  DS    F                       Addr - Dataspace, Hiperspace,\n*                                             And data sharing defaults\nSIPLSSN  DS    F                       Addr - Subsystem name\n***********************************************************************\n*        VSM parameter list\n***********************************************************************\nVSPLBEGN DSECT\nVSPLFLAG DS    F                       VSM flag word contains:\n*\n*              BIT 0  ---------------  On - IEFUSI set region values\n*                                      Off - region values not set\n*              BIT 1  ---------------  On - VSM not to check for avail-\n*                                           ability of requested free\n*                                           space below 16 Meg line\n*                                      Off - VSM is to check for avail-\n*                                           ability of requested free\n*                                           space below 16 Meg line\n*              BIT 2  ---------------  On - VSM not to check for avail-\n*                                           ability of requested free\n*                                           space above 16 Meg line\n*                                      Off - VSM is to check for avail-\n*                                           ability of requested free\n*                                           space above 16 Meg line\n*              BITS 3-31  -----------  Reserved\n*\nVSPLREGR DS    F                       Region size requested\n*\n*                                      On entry to IEFUSI the following\n*                                      4 words are set to X'FFFFFFFF'\n*\nVSPLGETB DS    F                       Getmain linit value below 16 Meg\nVSPLREGB DS    F                       Region size below 16 Meg\nVSPLGETA DS    F                       Getmain limit value above 16 Meg\nVSPLREGA DS    F                       Region size above 16 Meg\n*\nDSPBEGN  DSECT                         Default values for:\nDSPDFTSZ DS    F                       Data and Hiper space size in\n*                                      Blocks of 4K.  IBM Dft = 956K\n*                                      X'000000EF' * 4K\nDSPMAXSZ DS    F                       Maximum combined size for all\n*                                      user key Data and Hiper spaces.\n*                                      IBM default is (2**24)-1 MB.\nDSPMAXNO DS    F                       Maximum number of user key Data\n*                                      and Hiper spaces.  IBM default\n*                                      is (2**31)-1.\nDSPMAXSH DS    F                       Maximum number of source and\n*                                      target shafed pages usable at\n*                                      one time by problem state users\n*                                      IBM default is 32.\n*\nIEFUSI   CSECT\n***********************************************************************\n*        Dynamic storage area\n***********************************************************************\nWORKAREA DSECT\nSAVEAREA DS    18F                     IEFUSI save area\nRACWK    DS    CL512                   RACF work area\nRACDYN   DS    CL(RACLEN)              Dynamic ver RACHECK list form\nMAXBELOW DS    F                       Maximum storage available < 16M\nMAXREGSZ DS    F                       Maximum region available < 16M\nWORKLEN  EQU   *-WORKAREA\n         PRINT NOGEN\n         CVT   DSECT=YES\n         IHAGDA\n         END   IEFUSI\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT425/FILE425.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT425", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}