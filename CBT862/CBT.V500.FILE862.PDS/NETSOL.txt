./ ADD NAME=$ASMMVS  8002-04355-06336-0048-00006-00012-00000-GERHARD
//NETSOL70 JOB (Z904,0012),GERHARD,CLASS=S,MSGCLASS=E
//       EXEC  PURGEME
//       EXEC  ASMCL,MEMBER=NETSOL70,
//             LIB='GERHARD.TEST.LOADLIB',
//             MAC='GERHARD.MVS.NETSOL',
//             SRC='GERHARD.MVS.NETSOL'
./ ADD NAME=$ATTR,SSI=00084141
         MACRO ,
         $ATTR &LIST                  EMERGENCY VERSION ADDED ON 84141
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLA  &I,&J
         LCLB  &B(8)
         LCLC  &C
&RC      SETA  1             SET PROVISIONAL RETURN
&J       SETA  N'&SYSLIST(1)
.LOOP    AIF   (&I GE &J).EXIT
&I       SETA  &I+1
&C       SETC  '&SYSLIST(1,&I)'
         AIF   ('&C' EQ '').LOOP
&B(3)    SETB  (&B(3) OR '&C' EQ 'PROT' OR '&C' EQ 'SKIP')
&B(4)    SETB  (&B(4) OR '&C' EQ 'NUM' OR '&C' EQ 'SKIP')
&B(5)    SETB  (&B(5) OR '&C' EQ 'HI' OR '&C' EQ 'NONDISP')
&B(6)    SETB  (&B(6) OR '&C' EQ 'LPEN' OR '&C' EQ 'NONDISP')
&B(8)    SETB  (&B(8) OR '&C' EQ 'MDT')
&B(3)    SETB  (&B(3) AND '&C' NE 'UNPROT')
&B(4)    SETB  (&B(4) AND '&C' NE 'ALPHA')
&B(8)    SETB  (&B(8) AND '&C' NE 'NOMDT')
         AGO   .LOOP
.EXIT    ANOP  ,
&I       SETA  32*&B(3)+16*&B(4)+8*&B(5)+4*&B(6)+2*&B(7)+&B(8)
&I       SETA  &I+1
         AIF   (&I EQ 0).MEND
&RC      SETA  0             SET GOOD RETURN
&ATTRIB  SETC  '&TAB3270(&I)'
.MEND    MEND  ,
./ ADD NAME=$COL,SSI=00084141
         MACRO ,
         $COL  &COL                   EMERGENCY VERSION ADDED ON 84141
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLA  &I
&RC      SETA  1             SET PROVISIONAL RETURN
         AIF   (T'&COL EQ 'O').EXIT    SKIP OMITTED PARM
&I       SETA  50            SET FOR EVENTUAL 'F1'
         AIF   ('&COL' EQ 'BLUE').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'RED').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'PINK').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'GREEN').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'TURQUOISE').EXIT
         AIF   ('&COL' EQ 'TURQ').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'YELLOW').EXIT
&I       SETA  &I+1
         AIF   ('&COL' EQ 'WHITE').EXIT
         MNOTE 4,'COLOR &COL NOT RECOGNIZED; WHITE USED'
.EXIT    ANOP  ,
         AIF   (&I EQ 0).MEND
&RC      SETA  0             SET GOOD RETURN
&ATTRIB  SETC  '&TAB3270(&I)'
.MEND    MEND  ,
./ ADD NAME=$DOC
MEMBER      DESCRIPTION
********    **********************************************************

$DOC        DOCUMENTATION OF TAPE CONTENTS. (THIS MEMBER).

@NETINIT    VTAM APPLICATION DEFINITION FOR 'NETINIT'.

@NETOP      VTAM APPLICATION DEFINITION FOR 'NETOP'.

@NETSOL     VTAM APPLICATION DEFINITION FOR 'NETSOL'.

LOGTAB      VTAM INTERPRET TABLE USED BY 'NETSOL'.

LOGTABA     JCL TO ASSEMBLE 'LOGTAB'. NOTE THAT ACF/VTAM 2 ALLOWS THE
            INTERPRET TABLE TO GO IN 'SYS1.VTAMLIB'.

MACROS      MACROS USED BY NETSOL.

NETINIT     VTAM APPLICATION TO HANDLE STARTUP OF VTAM APPLICATIONS.

NETINIT$    INSTALLATION INSTRUCTIONS FOR 'NETINIT'.

NETINITA    JCL TO ASSEMBLE 'NETINIT'.

NETINITI    SAMPLE INPUT TO 'NETINIT'.

NETINITP    SAMPLE JCL TO RUN 'NETINIT'.

NETOP       VTAM NETWORK OPERATOR PROGRAM 'NETOP'.

NETOP$      INSTALLATION INSTRUCTIONS FOR 'NETOP'.

NETOPA      JCL TO ASSEMLBE 'NETOP'.

NETOPMAC    MACROS REQUIRED TO ASSEMBLE 'NETOP'.

NETOPP      SAMPLE JCL TO RUN 'NETOP'.

NETSOL      VTAM RECORD-MODE NETWORK SOLICITOR 'NETSOL'.

NETSOL$     INSTALLATION INSTRUCTIONS FOR 'NETSOL'.

NETSOLA     JCL TO ASSEMBLE 'NETSOL'.

NETSOLP     SAMPLE JCL TO RUN 'NETSOL'.
./ ADD NAME=$EUA,SSI=00088200
         MACRO
&LABEL   $EUA  &ADDR                                    ADDED ON 88173
.*
.*  FUNCTION : GENERATE 3270 ERASE UNPROTECTED TO ADDRESS ORDER.
.*             THE (ROW,COLUMN) FORMAT ADDRESS IS CONVERTED TO THE HEX
.*             CHARACTERS REQUIRED FOR THE ORDER.
.*
.*  REFERENCE: BUFFER ADDRESS CONVERSION ALGORITHM IN
.*             GC27-6999 INTRO TO PROGRAMMING THE 3270 IDS
.*
.*  INPUT    : BUFFER ADDRESS IN (ROW,COLUMN FORMAT)
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE EUA ORDER AND THE BUFFER ADDR
.*
.*  AUTHOR   : GERHARD POSTPISCHIL, EXPERT SYSTEM PROGRAMMING, INC.
.*
.*  DATE     : JUNE 21/88
.*
         GBLC  &TAB3270(64)
         GBLA  &RC,&MDL70                                        88200
         LCLA  &ROW,&COLUMN,&BUFFLOC,&I1,&I2,&WIDTH
         LCLC  &COMMENT
&ROW     SETA  &ADDR(1)
&COLUMN  SETA  &ADDR(2)
&WIDTH   SETA  80+(&MDL70/5)*52                                  88200
.*  CALC OFFSET IN 3270 BUFFER
&BUFFLOC SETA  ((&ROW-1)*&WIDTH)+(&COLUMN-1)                     88200
.*  CONVERT 12 BIT ADDR TO TWO 6 BIT ADDRS
&I1      SETA  &BUFFLOC/64
&I2      SETA  &BUFFLOC-(&I1*64)
.*  CHANGE INDICES INTO 3270 CONVERSION TABLE FROM 0-BASED TO 1-BASED
&I1      SETA  &I1+1
&I2      SETA  &I2+1
&COMMENT SETC  '          EUA &ADDR'
&LABEL   DC    XL3'12&TAB3270(&I1)&TAB3270(&I2)'&COMMENT
         MEND
./ ADD NAME=$IC,SSI=00084116
         MACRO
&LABEL   $IC
.*
.*  FUNCTION : GENERATE 3270 INSERT CURSOR ORDER.
.*
.*  INPUT    : NONE
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE IC ORDER
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
&LABEL   DC    X'13'               IC
         MEND
./ ADD NAME=$IO,SSI=00088200
         MACRO
&LABEL   $IO   &CMD
.*
.*  FUNCTION : GENERATE VALID IO COMMAND FOR 3270 DATA STREAM.
.*
.*  INPUT    : &CMD     = WRITE
.*                        WSF         - WRITE STRUCTURED FIELD
.*                        ERASE/WRITE - USE &MDL70 TO SELECT IO CMD
.*             &MDL70   - SPECIFIES MODEL NUMBER OF 3270 TERMINAL.
.*
.*  OUTPUT   : ASSEMBLER DC STATEMENT FOR IO COMMAND.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         LCLC  &OPCODE,&COMMENT
.*   PROCESS WRITE COMMAND
         AIF ('&CMD' NE 'WRITE').WSF
&OPCODE  SETC  'F1'
         AGO    .DC
.*   PROCESS WRITE STRUCTURED FIELD COMMAND
.WSF     AIF ('&CMD' NE 'WSF').ERWRIT
&OPCODE  SETC  'F3'
         AGO    .DC
.*   PROCESS ERASE/WRITE COMMAND
.ERWRIT  AIF ('&CMD' NE 'ERASE/WRITE').ERALT                     88200
&OPCODE  SETC  'F5'
         AGO   .DC                                               88200
.ERALT   AIF ('&CMD' NE 'ERASE/ALT').ERROR                       88200
&OPCODE  SETC  '7E'
         AGO    .DC
.*   PROCESS INVALID COMMANDS
.ERROR   MNOTE 8,'&CMD IS AN INVALID 3270 COMMAND'
         MEXIT
.DC      ANOP
&COMMENT SETC '                &CMD FOR 3270 MODEL &MDL70'
&LABEL   DC    X'&OPCODE'&COMMENT
         MEND
./ ADD NAME=$MODEL,SSI=00088200
         MACRO
         $MODEL &NUM
.*
.*  FUNCTION : SET MODEL NUMBER FOR SUBSEQUENT 3270 MACRO INSTRUCTIONS.
.*
.*  INPUT    : 3270 MODEL NUMBER (1,2,3,4 OR 5)
.*
.*  OUTPUT   : &MDL70 SETA SYMBOL IS SET.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC,&MDL70
         AIF   ((&NUM GE 2) AND (&NUM LE 5)).OK                  88200
         MNOTE 8,'3270 MODEL &MDL70 IS NOT SUPPORTED BY THESE MACROS.'
         MEXIT
.OK      ANOP
&MDL70   SETA  &NUM
         MEND
./ ADD NAME=$RA,SSI=00088200
         MACRO
&LABEL   $RA   &OPTIONS
.*
.*  FUNCTION : GENERATE 3270 REPEAT TO ADDRESS ORDER. THE (ROW,COLUMN)
.*             FORMAT ADDRESS IS CONVERTED TO THE HEX CHARACTERS
.*             REQUIRED FOR THE ORDER AND THE REPEAT CHARACTER IS
.*             APPENDED TO THE END OF THE RA ORDER.
.*
.*  REFERENCE: BUFFER ADDRESS CONVERSION ALGORITHM IN
.*             GC27-6999 INTRO TO PROGRAMMING THE 3270 IDS
.*
.*  INPUT    : BUFFER ADDRESS AND CHARACTER IN (ROW,COLUMN,CHAR) FORMAT
.*             CHAR MUST BE IN THE FORMAT C'A' OR X'C1'
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE RA ORDER
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC,&MDL70                                        88200
         LCLA  &ROW,&COLUMN,&BUFFLOC,&I1,&I2,&WIDTH              88200
         LCLC  &COMMENT,&CHAR
&ROW     SETA  &OPTIONS(1)
&COLUMN  SETA  &OPTIONS(2)
&WIDTH   SETA  80+(&MDL70/5)*52                                  88200
&CHAR    SETC  '&OPTIONS(3)'
.*  CALC OFFSET IN 3270 BUFFER
&BUFFLOC SETA  ((&ROW-1)*&WIDTH)+(&COLUMN-1)                     88200
.*  CONVERT 12 BIT ADDR TO TWO 6 BIT ADDRS
&I1      SETA  &BUFFLOC/64
&I2      SETA  &BUFFLOC-(&I1*64)
.*  CHANGE INDICES INTO 3270 CONVERSION TABLE FROM 0-BASED TO 1-BASED
&I1      SETA  &I1+1
&I2      SETA  &I2+1
&COMMENT SETC  '    RA &OPTIONS'
&LABEL   DC    XL3'3C&TAB3270(&I1)&TAB3270(&I2)',&CHAR&COMMENT
         MEND
./ ADD NAME=$SBA,SSI=00088200
         MACRO
&LABEL   $SBA  &ADDR
.*
.*  FUNCTION : GENERATE 3270 SET BUFFER ADDRESS ORDER. THE (ROW,COLUMN)
.*             FORMAT ADDRESS IS CONVERTED TO THE HEX CHARACTERS
.*             REQUIRED FOR THE ORDER.
.*
.*  REFERENCE: BUFFER ADDRESS CONVERSION ALGORITHM IN
.*             GC27-6999 INTRO TO PROGRAMMING THE 3270 IDS
.*
.*  INPUT    : BUFFER ADDRESS IN (ROW,COLUMN FORMAT)
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE SBA ORDER AND THE BUFFER ADDR
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC,&MDL70                                        88200
         LCLA  &ROW,&COLUMN,&BUFFLOC,&I1,&I2,&WIDTH
         LCLC  &COMMENT
&ROW     SETA  &ADDR(1)
&COLUMN  SETA  &ADDR(2)
&WIDTH   SETA  80+(&MDL70/5)*52                                  88200
.*  CALC OFFSET IN 3270 BUFFER
&BUFFLOC SETA  ((&ROW-1)*&WIDTH)+(&COLUMN-1)                     88200
.*  CONVERT 12 BIT ADDR TO TWO 6 BIT ADDRS
&I1      SETA  &BUFFLOC/64
&I2      SETA  &BUFFLOC-(&I1*64)
.*  CHANGE INDICES INTO 3270 CONVERSION TABLE FROM 0-BASED TO 1-BASED
&I1      SETA  &I1+1
&I2      SETA  &I2+1
&COMMENT SETC  '          SBA &ADDR'
&LABEL   DC    XL3'11&TAB3270(&I1)&TAB3270(&I2)'&COMMENT
         MEND
./ ADD NAME=$SF,SSI=00084116
         MACRO
&LABEL   $SF    &ATTR
.*
.*  FUNCTION : GENERATE START FIELD ORDER WITH SPECIFIED
.*             OPTIONS.
.*
.*  INPUT    : &ATTR   - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                       (PROT,NUM,MDT,HI,NONDISP,SKIP)
.*                       (UNPROT,ALPHA,NOMDT)
.*
.*  OUTPUT   : SFE ORDER PLUS OPTION BYTES.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLC  &COMMENT
.*   PROCESS ATTRIBUTE OPTIONS
         AIF (N'&ATTR  EQ 0).NOATTR
         $ATTR &ATTR
         AIF (&RC EQ 0).DC
.* USE DEFAULT ATTRIBUTE BYTE
.NOATTR  ANOP
&ATTRIB  SETC  '40'
.DC      ANOP
&COMMENT SETC  '              SF &ATTR'
&LABEL   DC    X'1D&ATTRIB'&COMMENT
         MEND
./ ADD NAME=$SFE,SSI=00088214
         MACRO
&LABEL   $SFE   &ATTR=,&XHL=,&COL=,&PSS=
         GBLC   &@DEV@
.*       WHEN &@DEV@ IS OTHER THAN NULL OR 327E, ONLY THE ATTR PORTION
.*       OF THE REQUEST IS EXPANDED - THIS PERMITS EASIER GENERATION OF
.*       SCREEN DEFINITIONS.                                     88214
         AIF    ('&@DEV@' EQ '' OR '&@DEV@' EQ '327E').PROCEED   88214
&LABEL   $SF    &ATTR ,
         MEXIT ,                                                 88214
.PROCEED ANOP  ,                                                 88214
.*
.*  FUNCTION : GENERATE START FIELD EXTENDED ORDER WITH SPECIFIED
.*             OPTIONS.
.*
.*  INPUT    : &ATTRIB - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                       (PROT,NUM,MDT,HI,NONDISP,SKIP)
.*                       (UNPROT,ALPHA,NOMDT)
.*           : &XHL    - EXTENDED HIGHLIGHTING OPTIONS. MUST BE ONE OF
.*                       (BLINKING,REVERSE,UNDERSCORE)
.*           : &COL    - COLOUR OPTION. IT MUST BE ONE OF
.*                       (BLUE,RED,PINK,GREEN,TURQUOISE,YELLOW,WHITE)
.*                       ONLY 1ST 3 CHARS ARE CHECKED
.*           : &PSS    - PROGRAMMED SYMBOL SET. THE VALUE MUST BE
.*                       BETWEEN X'40' AND X'EF'.
.*
.*  OUTPUT   : SFE ORDER PLUS OPTION BYTES.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLA  &CNT
         LCLC  &OPTIONS,&COMMENT
.*   PROCESS ATTRIBUTE OPTIONS
         AIF ('&ATTR' EQ '').XHL
         $ATTR &ATTR
         AIF (&RC NE 0).XHL
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'C0'.'&ATTRIB'
.*   PROCESS EXTENDED HIGHLIGHT OPTIONS
.XHL     AIF ('&XHL' EQ '').COL
         $XHL  &XHL
         AIF (&RC NE 0).COL
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'41'.'&ATTRIB'
.*   PROCESS COLOUR OPTION.
.COL     AIF ('&COL' EQ '').PSS
         $COL  &COL
         AIF (&RC NE 0).PSS
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'42'.'&ATTRIB'
.*   PROCESS PROGRAMMED SYMBOL SET OPTION
.PSS     AIF ('&PSS' EQ '').CHKCNT
         $PSS  &PSS
         AIF (&RC NE 0).CHKCNT
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'43'.'&ATTRIB'
.*   VERIFY ATLEAST ONE VALID OPTION.
.CHKCNT  AIF (&CNT GT 0).DC
         MNOTE 8,'NO VALID ATTRIBUTES SPECIFIED IN $SFE MACRO'
&RC      SETA  4
         MEXIT
.*   GENERATE SFE ORDER AND OPTIONS
.DC      ANOP
&COMMENT SETC  '      SFE &ATTR,&XHL,&COL,&PSS'
&LABEL   DC    X'290&CNT&OPTIONS'&COMMENT
         MEND
./ ADD NAME=$WCC,SSI=00084116
         MACRO
&LABEL   $WCC   &OPTIONS
.*
.*  FUNCTION : GENERATE VALID WRITE CONTROL CHARACTER FOR 3270 DATA
.*             STREAM.
.*
.*  METHOD   : USE BIT ARRAY TO FLAG SELECTED OPTIONS THEN GENERATE
.*             APPROPRIATE HEX CODE.
.*
.*  INPUT    : &OPTIONS - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                        (ALARM,RESETKBD,MDT)
.*
.*  OUTPUT   : ASSEMBLER DC STATEMENT FOR WCC CODE.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         LCLA  &I1,&BIT(8)
         LCLC  &COMMENT
         AIF   (N'&OPTIONS EQ 0).DEFAULT
&I1      SETA  1
.LOOP    AIF   ('&OPTIONS(&I1)' EQ '').NXTONE                    88200
.*   PROCESS ALARM ATTRIBUTE
         AIF ('&OPTIONS(&I1)' NE 'ALARM').RESETKB
&BIT(6)  SETA  1
         AGO    .NXTONE
.*   PROCESS RESETKBD ATTRIBUTE
.RESETKB AIF ('&OPTIONS(&I1)' NE 'RESETKBD').MDT
&BIT(7)  SETA  1
         AGO    .NXTONE
.*   PROCESS MDT ATTRIBUTE
.MDT     AIF ('&OPTIONS(&I1)' NE 'MDT').ERROR
&BIT(8)  SETA  1
         AGO    .NXTONE
.*   PROCESS INVALID ATTRIBUTES
.ERROR   MNOTE 8,'&OPTIONS(&I1) IS INVALID FOR WCC'
.NXTONE  ANOP
&I1      SETA  &I1+1
         AIF (&I1 LE N'&OPTIONS).LOOP
.*   CALCULATE VALUE OF OPTION BYTE PLUS ONE
.DEFAULT ANOP
&I1      SETA &BIT(8)+&BIT(7)*2+&BIT(6)*4+1
         AIF (&I1 LE 64).GETCHAR
         MNOTE 8,'&I1 IS GREATE THAN 64'
         MEXIT
.*   LOOK UP CHAR FOR CALCULATED OPTION BYTE.
.GETCHAR ANOP
&COMMENT SETC '                WCC &OPTIONS'
&LABEL   DC    X'&TAB3270(&I1)'&COMMENT
         MEND
./ ADD NAME=$XHL,SSI=00084141
         MACRO ,
         $XHL  &XHL                   EMERGENCY VERSION ADDED ON 84141
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLA  &I
&RC      SETA  1             SET PROVISIONAL RETURN
         AIF   (T'&XHL EQ 'O').EXIT    SKIP OMITTED PARM
&I       SETA  50            SET FOR EVENTUAL 'F1'
         AIF   ('&XHL' EQ 'BLINK').EXIT
&I       SETA  &I+1
         AIF   ('&XHL' EQ 'REV').EXIT
         AIF   ('&XHL' EQ 'REVERSE').EXIT
&I       SETA  &I+2
         AIF   ('&XHL' EQ 'UNDER').EXIT
         AIF   ('&XHL' EQ 'UNDERLINE').EXIT
         AIF   ('&XHL' EQ 'UNDERSCORE').EXIT
         MNOTE 4,'OPTION &XHL NOT RECOGNIZED'
&I       SETA  0             RESET AGAIN
.EXIT    ANOP  ,
         AIF   (&I EQ 0).MEND
&RC      SETA  0             SET GOOD RETURN
&ATTRIB  SETC  '&TAB3270(&I)'
.MEND    MEND  ,
./ ADD NAME=$3270INT,SSI=00084116
***************************************************************
*  FUNCTION : INITIALIZE MACRO SYMBOLS REQUIRED BY 3270 MACROS.
*
*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
*
*  DATE     : SEPT 19/80
*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         PRINT OFF
&MDL70      SETA  2
&TAB3270(1) SETC  '40'
&TAB3270(2) SETC  'C1'
&TAB3270(3) SETC  'C2'
&TAB3270(4) SETC  'C3'
&TAB3270(5) SETC  'C4'
&TAB3270(6) SETC  'C5'
&TAB3270(7) SETC  'C6'
&TAB3270(8) SETC  'C7'
&TAB3270(9) SETC  'C8'
&TAB3270(10) SETC 'C9'
&TAB3270(11) SETC '4A'
&TAB3270(12) SETC '4B'
&TAB3270(13) SETC '4C'
&TAB3270(14) SETC '4D'
&TAB3270(15) SETC '4E'
&TAB3270(16) SETC '4F'
&TAB3270(17) SETC '50'
&TAB3270(18) SETC 'D1'
&TAB3270(19) SETC 'D2'
&TAB3270(20) SETC 'D3'
&TAB3270(21) SETC 'D4'
&TAB3270(22) SETC 'D5'
&TAB3270(23) SETC 'D6'
&TAB3270(24) SETC 'D7'
&TAB3270(25) SETC 'D8'
&TAB3270(26) SETC 'D9'
&TAB3270(27) SETC '5A'
&TAB3270(28) SETC '5B'
&TAB3270(29) SETC '5C'
&TAB3270(30) SETC '5D'
&TAB3270(31) SETC '5E'
&TAB3270(32) SETC '5F'
&TAB3270(33) SETC '60'
&TAB3270(34) SETC '61'
&TAB3270(35) SETC 'E2'
&TAB3270(36) SETC 'E3'
&TAB3270(37) SETC 'E4'
&TAB3270(38) SETC 'E5'
&TAB3270(39) SETC 'E6'
&TAB3270(40) SETC 'E7'
&TAB3270(41) SETC 'E8'
&TAB3270(42) SETC 'E9'
&TAB3270(43) SETC '6A'
&TAB3270(44) SETC '6B'
&TAB3270(45) SETC '6C'
&TAB3270(46) SETC '6D'
&TAB3270(47) SETC '6E'
&TAB3270(48) SETC '6F'
&TAB3270(49) SETC 'F0'
&TAB3270(50) SETC 'F1'
&TAB3270(51) SETC 'F2'
&TAB3270(52) SETC 'F3'
&TAB3270(53) SETC 'F4'
&TAB3270(54) SETC 'F5'
&TAB3270(55) SETC 'F6'
&TAB3270(56) SETC 'F7'
&TAB3270(57) SETC 'F8'
&TAB3270(58) SETC 'F9'
&TAB3270(59) SETC '7A'
&TAB3270(60) SETC '7B'
&TAB3270(61) SETC '7C'
&TAB3270(62) SETC '7D'
&TAB3270(63) SETC '7E'
&TAB3270(64) SETC '7F'
         PRINT ON
./ ADD NAME=@NETINIT
        VBUILD TYPE=APPL
NETINIT  APPL  EAS=1,PRTCT=NETINIT
./ ADD NAME=@NETOP
        VBUILD TYPE=APPL
NETOP   APPL  AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP,EAS=20
NETPPO  APPL  AUTH=(ACQ,PASS,PPO,NVPACE),PRTCT=VTAMCMD,EAS=1
NETSPO  APPL  AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD,EAS=1
NETOPT  APPL  AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP,EAS=1
NETSPOT APPL  AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD,EAS=1
./ ADD NAME=@NETSOL
        VBUILD TYPE=APPL
NETSOL   APPL  AUTH=(ACQ,PASS,SPO,NVPACE),EAS=600
./ ADD NAME=CNMROUTE,SSI=00089104
CNMROUTE TITLE 'C N M R O U T E  ***  CNM ROUTING (CRDMS PRINTERS)'
         MACRO ,
&NM      APPL  &NAME
&NM      DC    X'00010381',CL8'&NAME ',X'00410384',CL8'&NAME '
         MEND  ,
         SPACE 2
*        THIS MODULE IS LINKED AS ISTMGC00
*
*        IT PROVIDES THE NAMES OF APPLICATIONS PERMITTED
*        UNSOLICITED CROSS-DOMAIN LU ACQUISITION
*
CNMROUTE START 0                                        ADDED ON 89104
         DC    Y((APPLAST-APPLONE)/12,12)  NUMBER / LENGTH
         DC    8X'00'        RESERVED
         SPACE 1
APPLONE  APPL  JES2
         APPL  JESB
         APPL  JRP
         APPL  JRPA
         APPL  CJRP
         APPL  CJRPA
         SPACE 1
APPLAST  DS    0X
         END   ,
./ ADD NAME=LOGTAB
         TITLE 'v t a m   l o g o n   i n t e p r e t   t a b l e'
***********************************************************************
*
*        purpose: define interpret table used by netsol.
*                 (refer to acf/vtam system programmers guide)
*
*        note:    1) valid logon sequences are defined in upper
*                    and lower case.
*                 2) the logon sequences are compared with the
*                    passed string for a length equal to the
*                    logon sequence. therefore, any logon sequence
*                    containing another logon sequence as a
*                    substring (as 'imstest' contains 'ims') must
*                    appear in the interpret table before the
*                    sequence contained as a substring does.
*
*        date:    october 19/79.
*
*        changes: jan 11/81 - add support for vspc.
*                             add msnf support for tso,netsol,nccf.
*
*        contact: ed pitkin,ssg.
*
***********************************************************************
VLOGTAB2 INTAB
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='TSO'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='tso'
         LOGCHAR APPLID=(APPLICID,TSOA),SEQNCE='LOGONA'
         LOGCHAR APPLID=(APPLICID,TSOA),SEQNCE='logona'
         LOGCHAR APPLID=(APPLICID,TSOB),SEQNCE='LOGONB'
         LOGCHAR APPLID=(APPLICID,TSOB),SEQNCE='logonb'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='LOGON'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='logon'
         LOGCHAR APPLID=(APPLICID,IMSTEST),SEQNCE='IMSTEST'                 0011
         LOGCHAR APPLID=(APPLICID,IMSTEST),SEQNCE='imstest'                 0011
         LOGCHAR APPLID=(APPLICID,IMSTEST),SEQNCE='4'
         LOGCHAR APPLID=(APPLICID,IMS),SEQNCE='IMS'                         0011
         LOGCHAR APPLID=(APPLICID,IMS),SEQNCE='ims'                         0011
         LOGCHAR APPLID=(APPLICID,IMS),SEQNCE='2'
         LOGCHAR APPLID=(APPLICID,WYL),SEQNCE='WYLBUR'                      0011
         LOGCHAR APPLID=(APPLICID,WYL),SEQNCE='wylbur'                      0011
         LOGCHAR APPLID=(APPLICID,WYL),SEQNCE='3'
         LOGCHAR APPLID=(APPLICID,VSPC),SEQNCE='VSPC'                       0011
         LOGCHAR APPLID=(APPLICID,VSPC),SEQNCE='vspc'                       0011
         LOGCHAR APPLID=(APPLICID,VSPC),SEQNCE='5'
         LOGCHAR APPLID=(APPLICID,NETAPPL1),SEQNCE='NETAPPL1'
         LOGCHAR APPLID=(APPLICID,NETAPPL1),SEQNCE='netappl1'
         LOGCHAR APPLID=(APPLICID,NETAPPL2),SEQNCE='NETAPPL2'
         LOGCHAR APPLID=(APPLICID,NETAPPL2),SEQNCE='netappl2'
         LOGCHAR APPLID=(APPLICID,NETEST),SEQNCE='NETEST'
         LOGCHAR APPLID=(APPLICID,NETEST),SEQNCE='netest'
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='NETOP'
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='netop'
         LOGCHAR APPLID=(APPLICID,NETSOLA),SEQNCE='NETSOLA'
         LOGCHAR APPLID=(APPLICID,NETSOLA),SEQNCE='netsola'
         LOGCHAR APPLID=(APPLICID,NETSOLB),SEQNCE='NETSOLB'
         LOGCHAR APPLID=(APPLICID,NETSOLB),SEQNCE='netsolb'
         LOGCHAR APPLID=(APPLICID,NETSOL),SEQNCE='NETSOL'
         LOGCHAR APPLID=(APPLICID,NETSOL),SEQNCE='netsol'
         LOGCHAR APPLID=(APPLICID,TESTWYL),SEQNCE='TESTWYL'
         LOGCHAR APPLID=(APPLICID,TESTWYL),SEQNCE='testwyl'
         LOGCHAR APPLID=(APPLICID,HCF),SEQNCE='HCF'
         LOGCHAR APPLID=(APPLICID,HCF),SEQNCE='hcf'
         LOGCHAR APPLID=(APPLICID,LCV),SEQNCE='LCV'
         LOGCHAR APPLID=(APPLICID,LCV),SEQNCE='lcv'
         LOGCHAR APPLID=(APPLICID,NCCFA),SEQNCE='NCCFA'
         LOGCHAR APPLID=(APPLICID,NCCFA),SEQNCE='nccfa'
         LOGCHAR APPLID=(APPLICID,NCCFB),SEQNCE='NCCFB'
         LOGCHAR APPLID=(APPLICID,NCCFB),SEQNCE='nccfb'
         LOGCHAR APPLID=(APPLICID,NCCF),SEQNCE='NCCF'
         LOGCHAR APPLID=(APPLICID,NCCF),SEQNCE='nccf'
         LOGCHAR APPLID=(APPLICID,NPA),SEQNCE='NPA'
         LOGCHAR APPLID=(APPLICID,NPA),SEQNCE='npa'
         ENDINTAB
         END
./ ADD NAME=LOGTABA
//EP91853A JOB (91853,819593,D,PSTT),'DAVIDSON 3RD FLOOR',CLASS=I,
// MSGCLASS=A,TIME=1,NOTIFY=EP91853,USER=*,PASSWORD=*
/*JOBPARM C=0,L=2
//*********************************************************************
//*********************************************************************
//*                                                                 ***
//*                                                                 ***
//*    PURPOSE:            VTAM LOGON INTERPRET TABLES              ***
//*                                                                 ***
//*               *NOTE*   ANY CHANGES TO THIS JCL SHOULD ALSO      ***
//*                        BE INCLUDED IN 'SYS1.MVSGEN' MEMBER      ***
//*                        'GEN04100' TO ENSURE A 'SYS1.VTAMLIB'    ***
//*                        CREATED AT SYSGEN TIME WILL BE CURRENT.  ***
//*                                                                 ***
//*                                                                 ***
//*    OWNER:              SYSTEMS SUPPORT                          ***
//*                                                                 ***
//*    CONTACT:            ED PITKIN                                ***
//*                                                                 ***
//*                                                                 ***
//*********************************************************************
//*********************************************************************
//*
//TABLE2      EXEC  ASMFCL,CLASS=$,
//  PARM.ASM='LINECOUNT(56),NODECK,OBJ,XREF',
//  PARM.LKED='LIST,XREF,RENT'
//ASM.SYSLIB  DD  DSN=SYS1.MACLIB,DISP=SHR,UNIT=SYSDA,VOL=SER=FOOBAR
//ASM.SYSPRINT DD  SYSOUT=*
//SYSIN       DD  DSN=SYS9.VTAM.CNTL(VLOGTAB2),DISP=SHR
//LKED.SYSLMOD  DD  DSN=SYS1.VTAMLIB(VLOGTAB2),DISP=SHR,UNIT=SYSDA,
//             VOL=SER=FOOBAR
//LKED.SYSPRINT  DD  SYSOUT=*
//SYSIN  DD  *
  SETCODE AC(1)
  NAME VLOGTAB2(R)
/*
./ ADD NAME=MACROS
         MACRO
&LABEL   $IC
.*
.*  FUNCTION : GENERATE 3270 INSERT CURSOR ORDER.
.*
.*  INPUT    : NONE
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE IC ORDER
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
&LABEL   DC    X'13'               IC
         MEND
         MACRO
&LABEL   $IO   &CMD
.*
.*  FUNCTION : GENERATE VALID IO COMMAND FOR 3270 DATA STREAM.
.*
.*  INPUT    : &CMD     = WRITE
.*                        WSF         - WRITE STRUCTURED FIELD
.*                        ERASE/WRITE - USE &MDL70 TO SELECT IO CMD
.*             &MDL70   - SPECIFIES MODEL NUMBER OF 3270 TERMINAL.
.*
.*  OUTPUT   : ASSEMBLER DC STATEMENT FOR IO COMMAND.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         LCLC  &OPCODE,&COMMENT
.*   PROCESS WRITE COMMAND
         AIF ('&CMD' NE 'WRITE').WSF
&OPCODE  SETC  'F1'
         AGO    .DC
.*   PROCESS WRITE STRUCTURED FIELD COMMAND
.WSF     AIF ('&CMD' NE 'WSF').ERWRIT
&OPCODE  SETC  'F3'
         AGO    .DC
.*   PROCESS ERASE/WRITE COMMAND
.ERWRIT  AIF ('&CMD' NE 'ERASE/WRITE').ERROR
&OPCODE  SETC  'F5'
         AIF (&MDL70 LE 2).DC
&OPCODE  SETC  '7E'
         AGO    .DC
.*   PROCESS INVALID COMMANDS
.ERROR   MNOTE 8,'&CMD IS AN INVALID 3270 COMMAND'
         MEXIT
.DC      ANOP
&COMMENT SETC '                &CMD FOR 3270 MODEL &MDL70'
&LABEL   DC    X'&OPCODE'&COMMENT
         MEND
         MACRO
         $MODEL &NUM
.*
.*  FUNCTION : SET MODEL NUMBER FOR SUBSEQUENT 3270 MACRO INSTRUCTIONS.
.*
.*  INPUT    : 3270 MODEL NUMBER (1,2,3,4 OR 5)
.*
.*  OUTPUT   : &MDL70 SETA SYMBOL IS SET.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC,&MDL70
         AIF   ((&NUM GE 2) AND (&NUM LE 4)).OK
         MNOTE 8,'3270 MODEL &MDL70 IS NOT SUPPORTED BY THESE MACROS.'
         MEXIT
.OK      ANOP
&MDL70   SETA  &NUM
         MEND
         MACRO
&LABEL   $RA   &OPTIONS
.*
.*  FUNCTION : GENERATE 3270 REPEAT TO ADDRESS ORDER. THE (ROW,COLUMN)
.*             FORMAT ADDRESS IS CONVERTED TO THE HEX CHARACTERS
.*             REQUIRED FOR THE ORDER AND THE REPEAT CHARACTER IS
.*             APPENDED TO THE END OF THE RA ORDER.
.*
.*  REFERENCE: BUFFER ADDRESS CONVERSION ALGORITHM IN
.*             GC27-6999 INTRO TO PROGRAMMING THE 3270 IDS
.*
.*  INPUT    : BUFFER ADDRESS AND CHARACTER IN (ROW,COLUMN,CHAR) FORMAT
.*             CHAR MUST BE IN THE FORMAT C'A' OR X'C1'
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE RA ORDER
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC
         LCLA  &ROW,&COLUMN,&BUFFLOC,&I1,&I2
         LCLC  &COMMENT,&CHAR
&ROW     SETA  &OPTIONS(1)
&COLUMN  SETA  &OPTIONS(2)
&CHAR    SETC  '&OPTIONS(3)'
.*  CALC OFFSET IN 3270 BUFFER
&BUFFLOC SETA  ((&ROW-1)*80)+(&COLUMN-1)
.*  CONVERT 12 BIT ADDR TO TWO 6 BIT ADDRS
&I1      SETA  &BUFFLOC/64
&I2      SETA  &BUFFLOC-(&I1*64)
.*  CHANGE INDICES INTO 3270 CONVERSION TABLE FROM 0-BASED TO 1-BASED
&I1      SETA  &I1+1
&I2      SETA  &I2+1
&COMMENT SETC  '    RA &OPTIONS'
&LABEL   DC    XL3'3C&TAB3270(&I1)&TAB3270(&I2)',&CHAR&COMMENT
         MEND
         MACRO
&LABEL   $SBA  &ADDR
.*
.*  FUNCTION : GENERATE 3270 SET BUFFER ADDRESS ORDER. THE (ROW,COLUMN)
.*             FORMAT ADDRESS IS CONVERTED TO THE HEX CHARACTERS
.*             REQUIRED FOR THE ORDER.
.*
.*  REFERENCE: BUFFER ADDRESS CONVERSION ALGORITHM IN
.*             GC27-6999 INTRO TO PROGRAMMING THE 3270 IDS
.*
.*  INPUT    : BUFFER ADDRESS IN (ROW,COLUMN FORMAT)
.*
.*  OUTPUT   : CODE IS GENERATED FOR THE SBA ORDER AND THE BUFFER ADDR
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64)
         GBLA  &RC
         LCLA  &ROW,&COLUMN,&BUFFLOC,&I1,&I2
         LCLC  &COMMENT
&ROW     SETA  &ADDR(1)
&COLUMN  SETA  &ADDR(2)
.*  CALC OFFSET IN 3270 BUFFER
&BUFFLOC SETA  ((&ROW-1)*80)+(&COLUMN-1)
.*  CONVERT 12 BIT ADDR TO TWO 6 BIT ADDRS
&I1      SETA  &BUFFLOC/64
&I2      SETA  &BUFFLOC-(&I1*64)
.*  CHANGE INDICES INTO 3270 CONVERSION TABLE FROM 0-BASED TO 1-BASED
&I1      SETA  &I1+1
&I2      SETA  &I2+1
&COMMENT SETC  '          SBA &ADDR'
&LABEL   DC    XL3'11&TAB3270(&I1)&TAB3270(&I2)'&COMMENT
         MEND
         MACRO
&LABEL   $SF    &ATTR
.*
.*  FUNCTION : GENERATE START FIELD ORDER WITH SPECIFIED
.*             OPTIONS.
.*
.*  INPUT    : &ATTR   - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                       (PROT,NUM,MDT,HI,NONDISP,SKIP)
.*                       (UNPROT,ALPHA,NOMDT)
.*
.*  OUTPUT   : SFE ORDER PLUS OPTION BYTES.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLC  &COMMENT
.*   PROCESS ATTRIBUTE OPTIONS
         AIF (N'&ATTR  EQ 0).NOATTR
         $ATTR &ATTR
         AIF (&RC EQ 0).DC
.* USE DEFAULT ATTRIBUTE BYTE
.NOATTR  ANOP
&ATTRIB  SETC  '40'
.DC      ANOP
&COMMENT SETC  '              SF &ATTR'
&LABEL   DC    X'1D&ATTRIB'&COMMENT
         MEND
         MACRO
&LABEL   $SFE   &ATTR=,&XHL=,&COL=,&PSS=
.*
.*  FUNCTION : GENERATE START FIELD EXTENDED ORDER WITH SPECIFIED
.*             OPTIONS.
.*
.*  INPUT    : &ATTRIB - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                       (PROT,NUM,MDT,HI,NONDISP,SKIP)
.*                       (UNPROT,ALPHA,NOMDT)
.*           : &XHL    - EXTENDED HIGHLIGHTING OPTIONS. MUST BE ONE OF
.*                       (BLINKING,REVERSE,UNDERSCORE)
.*           : &COL    - COLOUR OPTION. IT MUST BE ONE OF
.*                       (BLUE,RED,PINK,GREEN,TURQUOISE,YELLOW,WHITE)
.*                       ONLY 1ST 3 CHARS ARE CHECKED
.*           : &PSS    - PROGRAMMED SYMBOL SET. THE VALUE MUST BE
.*                       BETWEEN X'40' AND X'EF'.
.*
.*  OUTPUT   : SFE ORDER PLUS OPTION BYTES.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC
         LCLA  &CNT
         LCLC  &OPTIONS,&COMMENT
.*   PROCESS ATTRIBUTE OPTIONS
         AIF ('&ATTR' EQ '').XHL
         $ATTR &ATTR
         AIF (&RC NE 0).XHL
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'C0'.'&ATTRIB'
.*   PROCESS EXTENDED HIGHLIGHT OPTIONS
.XHL     AIF ('&XHL' EQ '').COL
         $XHL  &XHL
         AIF (&RC NE 0).COL
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'41'.'&ATTRIB'
.*   PROCESS COLOUR OPTION.
.COL     AIF ('&COL' EQ '').PSS
         $COL  &COL
         AIF (&RC NE 0).PSS
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'42'.'&ATTRIB'
.*   PROCESS PROGRAMMED SYMBOL SET OPTION
.PSS     AIF ('&PSS' EQ '').CHKCNT
         $PSS  &PSS
         AIF (&RC NE 0).CHKCNT
&CNT     SETA  &CNT+1
&OPTIONS SETC  '&OPTIONS'.'43'.'&ATTRIB'
.*   VERIFY ATLEAST ONE VALID OPTION.
.CHKCNT  AIF (&CNT GT 0).DC
         MNOTE 8,'NO VALID ATTRIBUTES SPECIFIED IN $SFE MACRO'
&RC      SETA  4
         MEXIT
.*   GENERATE SFE ORDER AND OPTIONS
.DC      ANOP
&COMMENT SETC  '      SFE &ATTR,&XHL,&COL,&PSS'
&LABEL   DC    X'290&CNT&OPTIONS'&COMMENT
         MEND
         MACRO
&LABEL   $WCC   &OPTIONS
.*
.*  FUNCTION : GENERATE VALID WRITE CONTROL CHARACTER FOR 3270 DATA
.*             STREAM.
.*
.*  METHOD   : USE BIT ARRAY TO FLAG SELECTED OPTIONS THEN GENERATE
.*             APPROPRIATE HEX CODE.
.*
.*  INPUT    : &OPTIONS - ATTRIBUTE OPTIONS. IT MUST BE ONE OF
.*                        (ALARM,RESETKBD,MDT)
.*
.*  OUTPUT   : ASSEMBLER DC STATEMENT FOR WCC CODE.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : SEPT 19/80
.*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         LCLA  &I1,&BIT(8)
         LCLC  &COMMENT
         AIF   (N'&OPTIONS EQ 0).DEFAULT
&I1      SETA  1
.LOOP    ANOP
.*   PROCESS ALARM ATTRIBUTE
         AIF ('&OPTIONS(&I1)' NE 'ALARM').RESETKB
&BIT(6)  SETA  1
         AGO    .NXTONE
.*   PROCESS RESETKBD ATTRIBUTE
.RESETKB AIF ('&OPTIONS(&I1)' NE 'RESETKBD').MDT
&BIT(7)  SETA  1
         AGO    .NXTONE
.*   PROCESS MDT ATTRIBUTE
.MDT     AIF ('&OPTIONS(&I1)' NE 'MDT').ERROR
&BIT(8)  SETA  1
         AGO    .NXTONE
.*   PROCESS INVALID ATTRIBUTES
.ERROR   MNOTE 8,'&OPTIONS(&I1) IS INVALID FOR WCC'
.NXTONE  ANOP
&I1      SETA  &I1+1
         AIF (&I1 LE N'&OPTIONS).LOOP
.*   CALCULATE VALUE OF OPTION BYTE PLUS ONE
.DEFAULT ANOP
&I1      SETA &BIT(8)+&BIT(7)*2+&BIT(6)*4+1
         AIF (&I1 LE 64).GETCHAR
         MNOTE 8,'&I1 IS GREATE THAN 64'
         MEXIT
.*   LOOK UP CHAR FOR CALCULATED OPTION BYTE.
.GETCHAR ANOP
&COMMENT SETC '                WCC &OPTIONS'
&LABEL   DC    X'&TAB3270(&I1)'&COMMENT
         MEND
***************************************************************
*  FUNCTION : INITIALIZE MACRO SYMBOLS REQUIRED BY 3270 MACROS.
*
*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
*
*  DATE     : SEPT 19/80
*
         GBLC  &TAB3270(64),&ATTRIB
         GBLA  &RC,&MDL70
         PRINT OFF
&MDL70      SETA  2
&TAB3270(1) SETC  '40'
&TAB3270(2) SETC  'C1'
&TAB3270(3) SETC  'C2'
&TAB3270(4) SETC  'C3'
&TAB3270(5) SETC  'C4'
&TAB3270(6) SETC  'C5'
&TAB3270(7) SETC  'C6'
&TAB3270(8) SETC  'C7'
&TAB3270(9) SETC  'C8'
&TAB3270(10) SETC 'C9'
&TAB3270(11) SETC '4A'
&TAB3270(12) SETC '4B'
&TAB3270(13) SETC '4C'
&TAB3270(14) SETC '4D'
&TAB3270(15) SETC '4E'
&TAB3270(16) SETC '4F'
&TAB3270(17) SETC '50'
&TAB3270(18) SETC 'D1'
&TAB3270(19) SETC 'D2'
&TAB3270(20) SETC 'D3'
&TAB3270(21) SETC 'D4'
&TAB3270(22) SETC 'D5'
&TAB3270(23) SETC 'D6'
&TAB3270(24) SETC 'D7'
&TAB3270(25) SETC 'D8'
&TAB3270(26) SETC 'D9'
&TAB3270(27) SETC '5A'
&TAB3270(28) SETC '5B'
&TAB3270(29) SETC '5C'
&TAB3270(30) SETC '5D'
&TAB3270(31) SETC '5E'
&TAB3270(32) SETC '5F'
&TAB3270(33) SETC '60'
&TAB3270(34) SETC '61'
&TAB3270(35) SETC 'E2'
&TAB3270(36) SETC 'E3'
&TAB3270(37) SETC 'E4'
&TAB3270(38) SETC 'E5'
&TAB3270(39) SETC 'E6'
&TAB3270(40) SETC 'E7'
&TAB3270(41) SETC 'E8'
&TAB3270(42) SETC 'E9'
&TAB3270(43) SETC '6A'
&TAB3270(44) SETC '6B'
&TAB3270(45) SETC '6C'
&TAB3270(46) SETC '6D'
&TAB3270(47) SETC '6E'
&TAB3270(48) SETC '6F'
&TAB3270(49) SETC 'F0'
&TAB3270(50) SETC 'F1'
&TAB3270(51) SETC 'F2'
&TAB3270(52) SETC 'F3'
&TAB3270(53) SETC 'F4'
&TAB3270(54) SETC 'F5'
&TAB3270(55) SETC 'F6'
&TAB3270(56) SETC 'F7'
&TAB3270(57) SETC 'F8'
&TAB3270(58) SETC 'F9'
&TAB3270(59) SETC '7A'
&TAB3270(60) SETC '7B'
&TAB3270(61) SETC '7C'
&TAB3270(62) SETC '7D'
&TAB3270(63) SETC '7E'
&TAB3270(64) SETC '7F'
         PRINT ON
./ ADD NAME=MODETAB,SSI=00093260
MODETAB  TITLE 'M O D E T A B  ***  SAS/GRAPH AND WYLBUR MODE TABLE'
         MACRO ,
&NM      CRT   &FM=,&TS=,&PRI=,&SEC=,&COM=,&LU=,&EDS=,&DEF=,&ALT=,     *
               &SW=,&RU=
         GBLC  &GFM,&GTS,&GPRI,&GSEC,&GCOM,&GLU,&GEDS,&GDEF,&GALT,&GSW
         GBLC  &GRU
         GBLB  &GONCE
         AIF   (&GONCE).GONCE
&GFM     SETC  '02'
&GTS     SETC  '02'
&GPRI    SETC  '71'
&GSEC    SETC  '40'
&GCOM    SETC  '2000'
&GLU     SETC  '00'
&GEDS    SETC  '00'
&GDEF    SETC  '1850'
&GALT    SETC  '1850'
&GSW     SETC  '7F'
&GRU     SETC  '0000'
&GONCE   SETB  1             SET FIRST TIME DONE
.GONCE   AIF   ('&FM' EQ '').NOGFM
&GFM     SETC  '&FM'
.NOGFM   AIF   ('&TS' EQ '').NOGTS
&GTS     SETC  '&TS'
.NOGTS   AIF   ('&PRI' EQ '').NOGPRI
&GPRI    SETC  '&PRI'
.NOGPRI  AIF   ('&SEC' EQ '').NOGSEC
&GSEC    SETC  '&SEC'
.NOGSEC  AIF   ('&COM' EQ '').NOGCOM
&GCOM    SETC  '&COM'
.NOGCOM  AIF   ('&LU' EQ '').NOGLU
&GLU     SETC  '&LU'
.NOGLU   AIF   ('&EDS' EQ '').NOGEDS
&GEDS    SETC  '&EDS'
.NOGEDS  AIF   ('&DEF' EQ '').NOGDEF
&GDEF    SETC  '&DEF'
.NOGDEF  AIF   ('&ALT' EQ '').NOGALT
&GALT    SETC  '&ALT'
.NOGALT  AIF   ('&SW' EQ '').NOGSW
&GSW     SETC  '&SW'
.NOGSW   AIF   ('&RU' EQ '').NOGRU
&GRU     SETC  '&RU'
.NOGRU   AIF   (T'&SYSLIST(0) NE 'O').OK
         MNOTE 4,'LOGMODE (NAME FIELD) EXPECTED'
.OK      ANOP  ,
&NM      MODEENT LOGMODE=&NM,FMPROF=X'&GFM',TSPROF=X'&GTS',RUSIZES=X'&G*
               RU',PRIPROT=X'&GPRI',SECPROT=X'&GSEC',COMPROT=X'&GCOM', *
               PSERVIC=X'&GLU&GEDS.00000000&GDEF&GALT&GSW.00'
         MEND  ,
         EJECT ,
         PRINT GEN                                               86128
MODETAB  MODETAB ,
         SPACE 2
*        LOCAL AND BISYNCH REMOTE CRTS                           85354
*
L3277M2  CRT   DEF=0000,ALT=0000,SW=02   3277-2                  85354
         SPACE 1                                                 85354
*    LOCAL VARIABLE SIZE DEVICES (3290, 3180)                    92290
*                                                                92290
L3180MX  CRT   DEF=0000,ALT=0000,SW=03,EDS=80 QUERY; USE LARGEST 92290
L3278GX  CRT   DEF=0000,ALT=0000,SW=03,EDS=80 QUERY; USE LARGEST 92290
L3278MX  CRT   DEF=0000,ALT=0000,SW=03,EDS=00 QUERY; USE LARGEST 92290
L3279GX  CRT   DEF=0000,ALT=0000,SW=03,EDS=80 QUERY; USE LARGEST 92290
L3279MX  CRT   DEF=0000,ALT=0000,SW=03,EDS=00 QUERY; USE LARGEST 92290
L3290    CRT   DEF=0000,ALT=0000,SW=03,EDS=80 QUERY; USE LARGEST 92290
         SPACE 1                                                 85354
L3278M2  CRT   DEF=1850,ALT=0000,SW=7E,EDS=00 LOCAL PLAIN 24*80  92290
L3278G2  CRT   EDS=80        EXTENDED FIELDS SUPPORT
L3278M3  CRT   ALT=2050,SW=7F,EDS=00  PLAIN 32*80                85360
L3278G3  CRT   EDS=80        EXTENDED FIELD
L3278M4  CRT   ALT=2B50,EDS=00  PLAIN 43*80
L3278G4  CRT   EDS=80        EXTENDED FIELD
L3278M5  CRT   ALT=1B84,EDS=00        PLAIN 27*132
L3278G5  CRT   EDS=80        EXTENDED FIELD
         SPACE 1
L3279M2  CRT   ALT=1850,EDS=00   BASIC 24*80 COLOR
L3279G2  CRT   EDS=80        EXTENDED 24*80
L3279M3  CRT   ALT=2050,EDS=00   BASIC 32*80 COLOR
L3279G3  CRT   EDS=80        EXTENDED 24*80
         SPACE 1                                                 85354
*********************************************************************
*                                                                   *
*        PANACEA - IBM'S ANSWER TO EVERYTHING                       *
*        3272/3274/3276 ATTACHED 327X, 328X IN MODEL 2 MODE         *
*                                                                   *
*********************************************************************
DSILGMOD MODEENT LOGMODE=DSILGMOD,FMPROF=X'02',TSPROF=X'02',           *
               PRIPROT=X'71',SECPROT=X'40',COMPROT=X'2000',            *
               RUSIZES=X'0000',PSERVIC=X'000000000000000000000200'
         SPACE 1                                                 88209
*        (VANILLA) IBM 3180 CRTS IN LOCAL NON-SNA MODE           88209
L3180M2  CRT   DEF=1850,ALT=0000,SW=7E,EDS=80 LOCAL PLAIN 24*80  88209
L3180M3  CRT   ALT=2050,SW=7F  PLAIN 32*80                       88209
L3180M4  CRT   ALT=2B50      PLAIN 43*80                         88209
L3180M5  CRT   ALT=1B84      PLAIN 27*132                        88209
         SPACE 1                                                 88209
L3286    CRT   DEF=0000,ALT=0000,EDS=00,SW=02 3286-2             85354
L3287    CRT   DEF=,ALT=,SW=                  3287-2             85354
L3287G   CRT   EDS=80             EXTENDED DS 3287-2             85354
         SPACE 1                                                 89038
*        ENTRY FOR ZAPPING                                       89038
L6262    CRT   DEF=1850,ALT=0000,EDS=80,SW=FE  LOCAL NON-SNA 6262
         SPACE 1                                                 89038
*        NEXT ENTRY FOR FUN AND GAMES - 3278 WHEN ATTACHED TO    89038
*        4341 CONSOLE PORT, OR A 3278 IN/ON A 3082.              89038
*        SCREEN SIZE IS 20*80                                    89038
LCONS    CRT   DEF=1450,ALT=0000,EDS=80,SW=FE  3278 AS CONSOLE   89038
         SPACE 2
*        SNA CRTS - LOCAL
*
S3278M2  CRT   FM=03,TS=03,PRI=B1,SEC=90,COM=3080,RU=87C7,LU=02,       *
               EDS=00,DEF=1850,ALT=0000,SW=7E  NO SWITCHING      86128
S3278G2  CRT   EDS=80        EXTENDED FIELDS SUPPORT
S3278M3  CRT   ALT=2050,EDS=00,SW=7F  PLAIN 32*80                86128
S3278G3  CRT   EDS=80        EXTENDED FIELD
S3278M4  CRT   ALT=2B50,EDS=00  PLAIN 43*80
S3278G4  CRT   EDS=80        EXTENDED FIELD
S3278M5  CRT   ALT=1B84,EDS=00  PLAIN 27*132                     86128
S3278G5  CRT   EDS=80        EXTENDED FIELD
         SPACE 1                                                 87103
*        ITT LARGE CRT 43*80 IN DEFAULT MODE AND 27*132 IN ALTERNATE
*                                                                87103
S3278M45 CRT EDS=80,DEF=2B50,ALT=1B84,SW=7F  43*80 AND 27*132    87103
S3278M35 CRT EDS=80,DEF=2050,ALT=1B84,SW=7F  32*80 AND 27*132    88209
         SPACE 1
S3279M2  CRT   DEF=1850,ALT=0000,EDS=00,SW=7E  BASIC 24*80 COLOR 86167
S3279G2  CRT   EDS=80        EXTENDED 24*80
S3279M3  CRT   ALT=2050,EDS=00,SW=7F   BASIC 32*80 COLOR         86128
S3279G3  CRT   EDS=80        EXTENDED 24*80
         SPACE 1                                                 85354
S3287    CRT   FM=03,TS=03,PRI=B1,SEC=90,COM=3080,RU=8787,LU=03,       *
               EDS=00,DEF=1850,ALT=2B50,SW=7F   SNA 3287 LU 3    86128
S3287G   CRT   FM=03,TS=03,PRI=B1,SEC=90,COM=3080,RU=8787,LU=03,       *
               EDS=80,DEF=1850,ALT=2B50,SW=7F   3287 LU 3 EDS    86128
S3287LU1 MODEENT LOGMODE=S3287LU1,FMPROF=X'03',TSPROF=X'03',           *
               PRIPROT=X'B1',SECPROT=X'90',COMPROT=X'7080',            *
               RUSIZES=X'8787',PSERVIC=X'01800001E100000000000000',    *
               PSNDPAC=X'01',SRCVPAC=X'01'                       85354
         SPACE 1                                                 91014
*   THE 3268 IS DEFINED SEPARATELY TO AVOID ERRORS IN HASP328X   91014
*        NOTE THAT PRI SIZE= SEC.SIZE IS SIGNAL TO 328X CODE.    91014
S3268    CRT   FM=03,TS=03,PRI=B1,SEC=90,COM=3080,RU=8787,LU=03,       *
               EDS=00,DEF=1850,ALT=1850,SW=7F   SNA 3268 LU 3    91014
         SPACE 2                                                 86167
*        SNA CRTS - REMOTE   (DEFINED FROM WYLBUR INST. MANUAL)  86167
*                                                                86167
T3278M2  CRT   FM=03,TS=03,PRI=B1,SEC=90,COM=3080,RU=87F8,LU=02,       *
               EDS=00,DEF=1850,ALT=1850,SW=7F                    86167
T3278G2  CRT   EDS=80        EXTENDED FIELDS SUPPORT             86167
T3278M3  CRT   ALT=2050,EDS=00        PLAIN 32*80                86167
T3278G3  CRT   EDS=80        EXTENDED FIELD                      86167
T3278M4  CRT   ALT=2B50,EDS=00  PLAIN 43*80                      86167
T3278G4  CRT   EDS=80        EXTENDED FIELD                      86167
T3278M5  CRT   ALT=1B84,EDS=00  PLAIN 27*132                     86167
T3278G5  CRT   EDS=80        EXTENDED FIELD                      86167
         SPACE 1                                                 86167
T3279M2  CRT   DEF=1850,ALT=1850,EDS=00  BASIC 24*80 COLOR       86167
T3279G2  CRT   EDS=80        EXTENDED 24*80                      86167
T3279M3  CRT   ALT=2050,EDS=00    BASIC 32*80 COLOR              86167
T3279G3  CRT   EDS=80        EXTENDED 24*80                      86167
         SPACE 1                                                 92290
T3278MX  CRT   EDS=00,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
T3278GX  CRT   EDS=80,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
T3279MX  CRT   EDS=00,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
T3279GX  CRT   EDS=80,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
T3180MX  CRT   EDS=80,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
T3290    CRT   EDS=80,DEF=0000,ALT=0000,SW=03 QUERY; USE LARGEST 92290
         SPACE 1                                                 85354
T3277M2  CRT   DEF=0000,ALT=0000,SW=02,SEC=90  3277-2 SNA !      86167
T3277M1  CRT   SW=01                  3277-1 SNA !!              86167
         SPACE 2
*        NTO2 SUPPORTED TTYS
*
TTY      MODEENT LOGMODE=TTY,FMPROF=X'03',TSPROF=X'03',PRIPROT=X'B1',  *
               SECPROT=X'90',COMPROT=X'3040',                    86128 *
               PSERVIC=X'010000000000000000000000'               92071
         SPACE 1                                                 92071
*        NTO ENTRY FOR SSI (SUPER)WYLBUR                         92071
SWYLNTO1 MODEENT LOGMODE=SWYLTTY,FMPROF=X'03',TSPROF=X'03',            *
               PRIPROT=X'B1',SECPROT=X'B1',COMPROT=X'3080',            *
               PSERVIC=X'010000000000000000000000',RUSIZES=X'8585'
         SPACE 1                                                 88248
*        NTO ENTRY FOR RELAY/3270 (RELAY GOLD)                   88248
B3767LU1 MODEENT LOGMODE=RLY3767,FMPROF=X'03',TSPROF=X'03',            *
               PRIPROT=X'B1',SECPROT=X'A0',COMPROT=X'3040',            *
               PSERVIC=X'010000000000000000000000'               88248
         SPACE 1                                                 90147
*        CRT ENTRY FOR LANDMARK'S THE MONITOR FOR CICS (TMON)    90147
T3279M21 MODEENT LOGMODE=T3279M21,FMPROF=X'03',TSPROF=X'03',           *
               PRIPROT=X'B1',SECPROT=X'90',COMPROT=X'3080',            *
               RUSIZES=X'87C7',PSERVIC=X'028000000000185018507F00'
         SPACE 2                                                 90123
*        JES2 "BATCH" TERMINALS (ALSO BARR/SNA)                  90123
*                                                                90123
BATCH    MODEENT LOGMODE=BATCH,FMPROF=X'03',TSPROF=X'03',              *
               PRIPROT=X'A3',SECPROT=X'A3',COMPROT=X'7080'       90123
         SPACE 1                                                 93260
*        LU 6.2 AND APPC SESSION DEFINITION                           *
*                                                                     *
SNASVCMG MODEENT LOGMODE=SNASVCMG,FMPROF=X'13',TSPROF=X'07',           *
               PRIPROT=X'B0',SECPROT=X'B0',COMPROT=X'D0B1',            *
               RUSIZES=X'8585',ENCR=B'0000',                           *
               PSERVIC=X'060000000000000000000300'               93260
         SPACE 2
         MODEEND ,
         END   ,
./ ADD NAME=NETINIT,SSI=00090344
VINI     TITLE 'NETINIT  ...  VTAM APPLICATION AUTO-START'       87298
***********************************************************************
*                                                                     *
*  FUNCTION : NETINIT IS A VTAM APPLICATION PROGRAM USED TO CONTROL   *
*             THE STARTUP OF OTHER VTAM APPLICATION PROGRAMS. IT IS   *
*             STARTED AT IPL TIME AND ENSURES THAT CERTAIN VTAM       *
*             APPLICATION PROGRAMS ARE STARTED AND STARTED IN         *
*             A PARTICULAR ORDER.                                     *
*                                                                     *
*             SEVERAL VTAM APPLICATIONS SUCH AS TCAS, NCCF AND HCF    *
*             CURRENTLY REQUIRE OPERATOR INTERVENTION TO START THEM.  *
*             THEY ARE UNABLE TO HANDLE THE SITUATION WHEN THEY       *
*             ARE STARTED BEFORE VTAM IS COMPLETELY INITIALIZED.      *
*             EITHER THEY ABEND OR THEY REQUIRE A REPLY FROM THE      *
*             OPERATOR TO RETRY THEIR STARTUP.                        *
*                                                                     *
*             CURRENTLY, BOTH NCCF AND NETOP CAN BE A PRIMARY         *
*             PROGRAM OPERATOR. NETOP WILL START CORRECTLY IF THE     *
*             POI IS IN USE BY ANOTHER PROGRAM BUT NCCF WILL NOT.     *
*             SINCE BOTH WILL CONTINUE TO BE IN USE, NETOP CAN        *
*             BE STARTED ONLY AFTER NCCF IS RUNNING.                  *
*                                                                     *
*             NETINIT WILL ADDRESS THE ABOVE PROBLEMS.                *
*                                                                     *
*             FIRST, NETINIT READS IN A SET OF COMMAND RECORDS. EACH  *
*             COMMAND RECORD DEFINES A PARTICULAR OS COMMAND          *
*             THAT IS TO BE ISSUED USING SVC 34. THE LEVEL            *
*             NUMBERS ARE USED TO DEFINE A HIERARCHY FOR EXECUTION    *
*             OF THE COMMANDS. HIGHER LEVELS ARE SUBORDINATE TO THE   *
*             LOWER LEVELS THEY FOLLOW IN THE INPUT STREAM. ALL       *
*             COMMANDS WITH IDENTICAL LEVEL NUMBERS AND WHICH ARE     *
*             SUBORDINATE TO ONE LOWER LEVEL COMMAND, CAN BE          *
*             ISSUED IN PARALLEL. A HIGHER LEVEL COMMAND CAN ONLY BE  *
*             EXECUTED ONCE ANY LOWER LEVEL COMMANDS PRIOR TO IT      *
*             IN THE INPUT STREAM HAVE BEEN EXECUTED.                 *
*                                                                     *
*             EG. THIS INPUT COMMAND FILE:                            *
*                                                                     *
*             LEVEL #   COMMAND                                       *
*             *******   *******                                       *
*                1      S NCCF                                        *
*                2      S NETOP                                       *
*                1      S TCAS                                        *
*                1      $SLGN1                                        *
*                2      $SLNE90                                       *
*                1      S HCF                                         *
*                                                                     *
*                 WOULD RESULT IN THE FOLLOWING SEQUENCE OF COMMANDS: *
*                                                                     *
*             S NCCF      S TCAS     $SLGN1      S HCF                *
*             S NETOP                $SLNE90                          *
*                                                                     *
*                 WHERE EXECUTION OF EACH COLUMN OF COMMANDS WOULD    *
*                 PROCEED IN PARALLEL BUT EACH ROW IN A PARTICULAR    *
*                 COLUMN MUST WAIT FOR THE PREVIOUS ROW COMMAND       *
*                 TO COMPLETE.                                        *
*                                                                     *
*             THESE COMMANDS ARE READ INTO THE VTAM STARTUP TABLE     *
*             AND EDITTED FOR OBVIOUS FORMAT ERRORS.                  *
*                                                                     *
*                                                                     *
*             SECOND, NETINIT WAITS UNTIL IT CAN SUCCESSFULLY OPEN    *
*             ITS VTAM ACB.                                           *
*                                                                     *
*                                                                     *
*             THIRD, NETINIT PROCESS THE COMMANDS IT READ INTO        *
*             THE VTAM STARTUP TABLE.                                 *
*                                                                     *
*             NETINIT CAN PROCESS TWO TYPES OF COMMAND RECORDS.       *
*             THE VTAM COMMAND RECORDS DEFINE START COMMANDS FOR      *
*             VTAM APPLICATIONS. NETINIT WILL ISSUE THE GIVEN         *
*             COMMAND AND THEN USE THE INQUIRE MACRO TO WAIT UNTIL    *
*             THE ASSOCIATED VTAM APPLICATION BECOMES ACTIVE. FOR THE *
*             COMMAND COMMAND RECORDS, NETINIT ISSUES THE GIVEN       *
*             COMMAND BUT DOESN'T MONITOR FOR ITS COMPLETION.         *
*                                                                     *
*                                                                     *
*             FOURTH, NETINIT WRITES MESSAGES TO THE OPERATOR         *
*             WHEN ERROR CONDITIONS ARE ENCOUNTERED. FOR EXAMPLE,     *
*             NETINIT SETS TIMEOUT VALUES FOR THE LENGTH OF TIME      *
*             IT WILL ATTEMPT TO OPEN THE ACB BEFORE QUITTING AND     *
*             FOR THE LENGTH OF TIME IT WILL WAIT FOR AN APPLICATION  *
*             TO BECOME ACTIVE.                                       *
*                                                                     *
*             FIFTH, NETINIT CAN BE RERUN AT ANY TIME. BEFORE         *
*             STARTING ANY VTAM APPLICATION, THE STATUS OF THAT       *
*             APPLICATION IS CHECKED WITH INQUIRE MACRO. START        *
*             COMMANDS ARE IGNORED FOR ANY ACTIVE APPLICATIONS. ALL   *
*             'COMMAND' COMMANDS ARE ISSUED REGARDLESS OF ANY         *
*             ASSOCIATED STATUS. THE USER MUST ENSURE THAT ANY        *
*             SUCH COMMANDS WILL NOT INTERFER WITH A CURRENTLY        *
*             ACTIVE VTAM APPLICATION PROGRAM.                        *
*                                                                     *
*  WRITTEN BY: ED PITKIN, DISTRIBUTED SERVICES, BCSC                  *
*                                                                     *
*  DATE      : JULY 18/80.                                            *
*                                                                     *
         SPACE 1                                                      *
*  INPUT:     BELOW IS THE FORMAT FOR AN INPUT COMMAND RECORD.        *
*                                                                     *
*             COLUMN    DATA DESCRIPTION                              *
*             ======    ================                              *
*               1       LEVEL NUMBER ASSOCIATED WITH THIS COMMAND     *
*                      'V' TO DEFINE THE NAME OF THE NETWORK PROCEDURE.
*                            TO BE STARTED IF NOT ALREADY ACTIVE.
*                            DEFAULT NAME IS 'VTAM    '          85358
*                       '*' OR 10 BLANKS - COMMENTS CARD         85358
*                       '=' CHECK THAT TP FRONT-END SPECIFIED BY DD
*                            NAME IN 5-12 IS UP. IF IT IS, VARY UCBS
*                            SPECIFIED IN 14-20 (CUU-CUU) ON-LINE;
*                            IF NOT UP, WRITES NASTY MESSAGES.   87298
*               2       BLANK                                         *
*               3       'V' IF STATUS OF COMMAND WILL BE MONITORED    *
*                           WITH THE INQUIRE MACRO.                   *
*                       'C' IF COMMAND WILL NOT BE MONITORED          *
*                       'S' IF THE COMMAND IS A START COMMAND, TO BE
*                       'R' IF THE START TASK IS ALREADY RUNNING,
*                            COMMAND IS ISSUED, ELSE SKIPPED     86271
*                       'U' ISSUE COMMAND IF VTAM APPLICATION IS UP
*                            SUPPRESSED IF THE TASK IS ALREADY ACTIVE.
*               4       BLANK                                         *
*               5-12    VTAM APPLICATION ID ASSOCIATED WITH THIS      *
*                       COMMAND.                                      *
*               13      BLANK                                         *
*               14-53   COMMAND THAT WILL BE PASSED TO SVC 34.        *
*                                                                     *
*  REGISTER USAGE:   R0-R4  - WORK REGS                               *
*                    R5     - A(ACB)                                  *
*                    R6     - A(NIB)                                  *
*                    R7     - BAL REG FOR SHOULD NOT OCCURS           *
*                    R8     - A(RPL)                                  *
*                    R9     - A(VSE)                REGS              *
*                    R10    - LENGTH OF VSE          FOR              *
*                    R11    - LAST VSE IN VST         BXLE            *
*                    R12    - BASE REG FOR NETINIT                    *
*                    R13    - A(SAVEAREA)                             *
*                    R14    - LINKAGE REG                             *
*                    R15    - WORK REG                                *
*                                                                     *
*  ATTRIBUTES: AC(1)                                                  *
*                                                                     *
*  VTAM MACROS USED: INQUIRE                                          *
*                                                                     *
*  SYSTEM MACROS USED: OPEN, CLOSE, PUT, GET, WTO, GETMAIN, FREEMAIN  *
*                                                                     *
***********************************************************************
         EJECT ,                                                 85358
         PRINT NOGEN                                             85358
NETINIT   CSECT
          B     STM-NETINIT(0,R15) BR AROUND MODULE HEADER
APPLNAME  DC    AL1(8),CL8'NETINIT' VTAM APPLID
          DC    CL10'&SYSDATE'
          DC    CL8' /&SYSTIME/'
STM       STM   R14,R12,12(R13)    SAVE SYSTEMS REGS
          LR    R12,R15            SET ADDRESSABILITY
          USING NETINIT,R12          TO NETINIT
          ST    R13,SAVEAREA+4     STORE SAVEAREA BACKWARD PTR
          LR    R15,R13            TEMPORARILY SAVE OLD SAVEAREA PTR
          LA    R13,SAVEAREA       LOAD A(NEW SAVEAREA)
          ST    R13,8(,R15)        STORE SAVEAREA FORWARD PTR
          USING VSEDSECT,R9        SET ADDRESSABILITY TO VSE
          USING IFGRPL,R8          SET ADDRESSABILITY
          LA    R8,RPL               TO VTAM RPL
          USING ISTDNIB,R6         SET ADDRESSABILITY
          LA    R6,NIB               TO VTAM NIB
          USING IFGACB,R5          SET ADDRESSABILITY
          LA    R5,ACB               TO VTAM ACB
          SPACE 1
*         BUILD  VTAM STARTUP TABLE
          SPACE 1
          BAL   R14,BUILDVST       READ AND EDIT INPUT COMMANDS
          SPACE 1
*         WAIT UNTIL VTAM IS INITIALIZED
          SPACE 1
          BAL   R14,OPENACB        GO OPEN VTAM ACB
         SPACE 2
*         PROCESS VTAM STARTUP TABLE (VST) TO START VTAM APPLICATIONS
          SPACE 1
PROLOOP1  LM    R9,R11,VSTSTART    LOAD BXLE REGS
          NI    GLOFLAG,X'FF'-GLOFND1 RESET VSE FOUND FLAG
          SPACE 1
PROLOOP2  TM    VSEFLAG,VSEDONE    HAS THIS VSE BEEN COMPLETED
          BO    PRONEXT            YES => GET NEXT VSE
          OI    GLOFLAG,GLOFND1    SAY ATLEAST ONE INCOMPLETE VSE
          TM    VSEFLAG,VSEHELD    HELD FOR LOWER LEVEL COMPLETION
          BO    PRONEXT            YES => GET NEXT VSE
          TM    VSEFLAG,VSEWAIT    WAITING FOR APPLICATION TO START
          BNO   PROVSE             NO  => GO ISSUE COMMAND IN VSE
          BAL   R14,STATNQIR       YES => INQUIRE IF APPL ACTIVE
          B     PRONEXT                   GET NEXT VSE
          SPACE 1
PROVSE    BAL   R14,ACTVSE         ISSUE COMMAND IN VSE
          SPACE 1
PRONEXT   BXLE  R9,R10,PROLOOP2    GET NEXT VSE
          TM    GLOFLAG,GLOFND1    ANY INCOMPLETE VSE'S?
          BO    PROSTIME           YES => GO WAIT BEFORE RESCANNING VST
          SPACE 1
          TM    GLOFLAG,GLOERR     ANY ERRORS PROCESSING VSE'S
          BO    WRITMSG7           YES => BR TO CONDITIONAL COMPLETION
         L     R1,=A(MSG08)  POINT TO MESSAGE                    90344
         WTO   MF=(E,(1))         NO  => WTO COMPLETION          90344
          B     RETURN                    GO TO EXIT
WRITMSG7  WTO   MF=(E,MSG07)       WTO CONDITIONAL COMPLETION MSG
          B     RETURN
          SPACE 1
PROSTIME  STIMER WAIT,BINTVL=WAIT1SEC WAIT 1 SECOND
          B     PROLOOP1                BEFORE RESCANNING VST
         SPACE 2
*         NORMAL EXIT FROM NETINIT
          SPACE 1
RETURN    DS    0H
          TM    GLOFLAG,GLOACBO    IF VTAM ACB
          BZ    SKIPCACB             IS OPEN
          CLOSE ACB                    THEN CLOSE IT
SKIPCACB  FREEMAIN R,SP=2          FREE SUBPOOL CONTAINING VST
          L     R13,4(,R13)        RESTORE OLD SAVEAREA
          LM    R14,R12,12(R13)    RESTORE OLD REGS
         SLR   R15,R15            SET RETURN CODE = 0            85358
          BR    R14
          SPACE 2
*         EXIT FOR ERRORS REQUIRING A DUMP
          SPACE 1
OPENFAIL  DS    0H                 VTAM ACB HAS FAILED TO OPEN
          STM   R0,R15,DUMPREGS    SAVE REGS FOR ANALYSIS
          MVI   DUMPFLAG,OPENCODE  INDICATE OPEN ACB FAILURE
          B     DUMP               GO TAKE A DUMP
          SPACE 1
SNOCCUR   DS    0H                 FOR CONDITIONS THAT SHOULD NOT OCCUR
          STM   R0,R15,DUMPREGS    SAVE REGS FOR ANALYSIS
          MVI   DUMPFLAG,SNOCUR    INDICATE SHOULD NOT OCCUR
          B     DUMP
          SPACE 1
DUMP      DS    0H                 USE SVC 13 TO TAKE A DUMP
         SLR    R1,R1              CLEAR R1 FOR DUMP CODE
          IC    R1,DUMPFLAG        MOVE DUMP CODE TO REG1
          ABEND (1),DUMP           TAKE A DUMP
          TITLE 'NETINIT - BUILDVST ... BUILD VTAM STARTUP TABLE'
***********************************************************************
*                                                                     *
*  FUNCTION : 1) GETMAIN STORAGE FOR THE VTAM STARTUP TABLE.          *
*             2) READ COMMAND INPUT FROM SYSIN FILE INTO A VSE.       *
*             3) VALIDATE LEVEL AND TYPE FIELDS IN VSE.               *
*             4) WRITE INPUT FILE PLUS EDIT ERRORS TO SYSOUT FILE.    *
*             5) INITIALIZE BXLE REGS FOR LATER VST PROCESSING.       *
*                                                                     *
*  REGS USED: R0,R1,R14,R15                                           *
*                                                                     *
***********************************************************************
BUILDVST  DS    0H
          ST    R14,RETSAVE        SAVE RETURN ADDRESS
          SPACE 1
*         GETMAIN STORAGE FOR VST
          SPACE 1
          L     R0,VSTLEN          LOAD TABLE SIZE IN BYTES
          ICM   R0,8,=X'02'        SET SUBPOOL # = 2             87330
          GETMAIN R,LV=(0)         REQUEST STORAGE
          ST    R1,VSTSTART        SAVE A(VST)
          A     R1,VSTLEN          CALC START OF
          S     R1,=AL4(L'VSENTRY)   LAST VSE
          ST    R1,VSTEND              AND SAVE FOR BXLE
          SPACE 1
*         OPEN  SYSIN AND SYSOUT FILES
          SPACE 1
          OPEN  (SYSINDCB,(INPUT),SYSOUDCB,(OUTPUT))
          TM    SYSINDCB+DCBOFLGS-IHADCB,X'10'  DID SYSIN OPEN OK?
          BZ    DCBOFAIL                        NO => WTO ERROR MSG
          TM    SYSOUDCB+DCBOFLGS-IHADCB,X'10'  DID SYSOUT OPEN OK?
          BO    DCBOPEN                         YES => BR TO READ SYSIN
DCBOFAIL  WTO   MF=(E,MSG01)       WTO OPEN FAILURE MSG
          B     RETURN             BR TO END EXECUTION
          SPACE 1
*         READ  SYSIN RECORDS INTO  VST AND EDIT THEM
         SPACE 2
DCBOPEN   LM    R9,R11,VSTSTART    LOAD BXLE REGS TO PROCESS VST
READLOOP  GET   SYSINDCB,(R9)      READ COMMAND RECORD INTO A VSE
READNEX2  PUT   SYSOUDCB,(R9)      ECHO COMMAND RECORD TO SYSOUT
         SPACE 1                                                 90344
***********************************************************************
*                                                                     *
*        CONTROL CARDS MAY BE SELECTED BY CPU ID (SMCA ID) :          *
*                                                                     *
*        PLACE CPU= IN COLUMN 2                                       *
*              CPU= RESETS SELECTION AND ACCEPTS ALL CARDS            *
*              CPU=SYS1SYS2SYS3  SKIPS CARDS EXCEPT ON SYSTEMS 1-3    *
*              CPU=SYS5   SKIPS SUCCESSIVE CARDS EXCEPT ON SYSTEM 5   *
*                                                                     *
***********************************************************************
         SPACE 1                                                 90344
         CLC   =C'CPU=',VSELEVEL+1  CHECK FOR CPU SPECIFIC CARDS 90344
         BNE   READNCPU      NO; CONTINUE NORMALLY               90344
         CLI   VSELEVEL+5,C'A'   CPU= NON-ALPHAMERIC ?           90344
         BL    READNCPU      YES; TREAT AS GENERAL MATCH         90344
         L     R14,CVTPTR    GET THE CVT                         90344
         LA    R15,VSELEVEL+5  POINT TO FIRST CPU ID             90344
         LA    R0,8          SET FOR MAXIMUM SUPPORTED           90344
         L     R14,CVTSMCA-CVT(,R14)  POINT TO SMCA WORK AREA    90344
READTCPU CLC   0(4,R15),16(R14)   COMPARE CPU= TO SMCASID        90344
         BE    READNCPU      MATCH; PROCESS THIS AND FOLLOWING   90344
         LA    R15,4(,R15)   TRY NEXT ENTRY                      90344
         CLI   0(R15),C','   COMMA SEPARATOR ?                   90344
         BNE   *+8           NO                                  90344
         LA    R15,1(,R15)   SKIP IT, TOO                        90344
         BCT   R0,READTCPU                                       90344
READGCPU GET   SYSINDCB,(R9)     ELSE GET ANOTHER CARD           90344
         CLC   =C'CPU=',VSELEVEL+1 ANOTHER SELECTION CARD ?      90344
         BE    READNEX2      YES; EXAMINE IT                     90344
         MVI   0(R9),C'¬'    SHOW CARD REJECTED                  90344
         PUT   SYSOUDCB,(R9)  ECHO THE CARD                      90344
         B     READGCPU      AND SKIP TO NEXT                    90344
         SPACE 1                                                 90344
READNCPU DS    0H            MATCHING CPU FOUND, OR NO CPU CARDS 90344
         CLI   VSELEVEL,C'V'  NET PROCEDURE NAME CARD ?          85358
         BNE   NOTNETNM      NO                                  85358
         MVC   NETNAME,VSEAPPL  SET 'APPLICATION' NAME           85358
         B     READLOOP      GO AGAIN                            85358
         SPACE 1                                                 87298
NOTNETNM CLI   VSELEVEL,C'=' TP FRONT-END CHECK ?                87298
         BNE   NOTCOMNM      NO                                  87298
         DEVTYPE VSEAPPL,DB  LOOK FOR DD CARD                    87298
         BXH   R15,R15,COMDDMIS  MISSING/BAD COMM DD             87298
         CLI   DB+2,X'40'    TP DEVICE ?                         87298
         BE    CALCOMCK      YES; CHECK IT                       87298
COMDDMIS MVC   COMDDWTO+17(8),VSEAPPL                            87298
COMDDWTO WTO   'BSCI305E XXXXXXXX DD MISSING/BAD'                87298
         B     SKIPERR                                           87298
CALCOMCK XC    DB,DB         CLEAR ECB                           87298
         LA    R2,VSEAPPL-2  POINT TO DD/TP BOX NAME             87298
         LA    R0,8          SET LENGTH OF PARM                  87298
         STCM  R0,3,0(R2)    MAKE PARM                           87298
         ATTACH EP=COMCHECK,PARAM=((R2)),ECB=DB  CHECK DD        87298
         ST    R1,DB+4       SAVE TCB ADDRESS                    87298
         WAIT  ECB=DB        WAIT FOR COMPLETION                 87298
         DETACH DB+4         GET RID OF IT                       87298
         L     R15,DB        LOAD THE ECB                        87298
         LA    R15,0(,R15)   KILL THE FLAG BITS                  87298
         BXLE  R15,R15,COMMISUP  BOX IS UP                       87298
         SRA   R15,12+1      GET SYSTEM CODE ONLY                87298
         BNZ   COMABEND      TOO BAD                             87298
         SLR   R0,R0         CLEAR CHAIN FOR MLWTO               87298
         MVC   COMMDOWN+17(8),VSEAPPL                            87298
COMMDOWN WTO   ('BSCI300E XXXXXXXX FRONT-END DOWN',C),                 *
               ('1) MAKE SURE IT IS POWERED UP AND RUNNING',D),        *
               ('2) RELOAD THE BOX (USE CROSS-CHANNEL LOAD)',D),       *
               ('3) RE-IPL ALL AFFECTED SYSTEMS,',DE),                 *
               ROUTCDE=1,DESC=1                                  87298
         XC    DB+8(4),DB+8  CLEAR ECB                           87298
         WTOR  'BSCI300D PLEASE ACKNOWLEDGE',                          *
               DB,8,DB+8,ROUTCDE=1,DESC=1                        87298
         WAIT  ECB=DB+8                                          87298
         OI    DB,C' '       UPPER CASE FIRST LETTER             87298
         CLI   DB,C'P'       'P' FOR PROCEED ?                   87298
         BE    READLOOP      YES; JUST CONTINUE                  87298
SKIPERR  OI    GLOFLAG,GLOEDIT                                   87298
         B     READLOOP                                          87298
COMABEND WTO   'BSCI313W COMCHECK FAILED - STATUS NOT ASCERTAINED'
         B     READLOOP                                          87298
COMMISUP CLC   VSECMD(7),VSECMD-1  ANY COMMAND ?                 87298
         BE    READLOOP      NO; JUST CONTINUE                   87298
         MVC   DB(7),VSECMD  COPY PRESUMED UCB-UCB ADDRESS       87298
         NC    DB(7),HEXCONTB+8  MASK TO X'1F'                   87298
         TR    DB(7),HEXCONTB  CONVERT TO UNPACKED HEX           87298
         PACK  DB+8(3),DB(4)  PACK LOW UCB                       87298
         PACK  DB+12(3),DB+4(4)  DO END UCB                      87298
         LM    R2,R3,DB+8    LOAD UCB ADDRESSES                  87298
         SRL   R2,16         RIGHT-JUSTIFY                       87298
         SRL   R3,16         RIGHT-JUSTIFY                       87298
         CR    R2,R3         VALID RANGE ?                       87298
         BH    NOTCOMNM      FAIL WITH ERROR MESSAGE             87298
         L     R14,ULKPARM   GET WORKAREA ADDRESS                87298
         XC    0(L'ULKWORK,R14),0(R14) CLEAR LOOKUP WORK AREA    87298
ULKLOOP  L     R4,CVTPTR                                         87298
         L     R15,CVTUCBSC-CVTMAP(,R4)                          87298
         LA    R1,ULKPARM                                        87298
         BALR  R14,R15       FIND A UCB                          87298
         BXH   R15,R15,READLOOP  DONE                            87298
         L     R4,ULKPARM+8  LOAD THE UCB ADDRESS ADDRESS        87298
         L     R4,0(,R4)     LOAD THE UCB ADDRESS                87298
         MVC   DB(3),UCBNAME-UCBOB(R4)                           87298
         NC    DB(3),HEXCONTB+8  STRIP ZONES                     87298
         TR    DB(3),HEXCONTB  MAKE HEX                          87298
         PACK  DB+4(3),DB(4) PACK ADDRESS                        87298
         SLR   R0,R0                                             87298
         ICM   R0,3,DB+4     LOAD IT                             87298
         CR    R0,R2         NOT LOWER THAN LOW ?                87298
         BL    ULKLOOP       LOW; GET ANOTHER                    87298
         CR    R0,R3         IN RANGE ?                          87298
         BH    ULKLOOP       NO; GO AGAIN                        87298
         TM    UCBSTAT-UCBOB(R4),UCBONLI  DEVICE ON-LINE ?       87298
         BNZ   ULKLOOP       YES; JUST GET ANOTHER               87298
         MODESET KEY=ZERO    ENABLE STORAGE CLOBBERING           87298
         OI    UCBSTAT-UCBOB(R4),UCBONLI  MAKE IT ON-LINE        87298
         MODESET KEY=NZERO   INHIBIT CLOBBERING OTHER'S STORAGE  87298
         B     ULKLOOP       DO ANOTHER                          87298
         SPACE 1                                                 85358
NOTCOMNM MVC   VSELPCNT,=F'120'   SET TIMEOUT FOR CMD TO 120 SECS
          MVI   VSEFLAG,X'00'      RESET VSE STATUS FLAG
          SPACE 1
          LA    R15,EDITERR1       ASSUME ERROR IN LEVEL PARAMETER
          CLI   VSELEVEL,C'0'      LEVEL
          BL    EDITERR              PARAMETER
          CLI   VSELEVEL,C'9'          MUST BE
          BH    EDITERR                  NUMERIC
          SPACE 1
          LA    R15,EDITERR2       ASSUME ERROR IN TYPE PARAMETER
          CLI   VSETYPE,C'V'       TYPE
          BE    READNEXT             PARAMETER
          CLI   VSETYPE,C'C'           MUST BE
          BE    READNEXT                 'V' OR 'C'
         CLI   VSETYPE,C'S'    OR NEW-FANGLED START COMMAND      85358
         BE    READNEXT                                          85358
         CLI   VSETYPE,C'R'  RUNNING TASK ?                      86271
         BE    READNEXT      YES; ACCEPT                         86271
         CLI   VSETYPE,C'U'  APPLID UP ?                         86271
         BE    READNEXT      YES                                 86271
          SPACE 1
EDITERR  CLI   VSELEVEL,C'*' ASM-STYLE COMMENTS CARD ?           85245
         BE    READLOOP      YES; JUST GET ANOTHER CARD          85245
         CLI   VSELEVEL,C' '   POSSIBLE BLANK CARD ?             85245
         BNE   EDITERRT      NO; FAIL                            85245
         CLC   VSELEVEL+1(5),VSELEVEL  BLANKS ?                  85245
         BE    READLOOP      YES; ANOTHER COMMENTS CARD          85245
EDITERRT  PUT   SYSOUDCB,(R15)     WRITE ERROR MSG TO SYSOUT FILE
          OI    GLOFLAG,GLOEDIT    END EXECUTION AFTER ALL INPUT READ
          SPACE 1
READNEXT  BXLE  R9,R10,READLOOP    READ NEXT COMMAND RECORD
          WTO   MF=(E,MSG02)       IF WE FALL THRU BXLE, THEN THE
*                                  INPUT FILE EXCEEDS THE SIZE OF
*                                  THE VST. WRITE AN ERROR MSG AND
          B     RETURN             END EXECUTION
         SPACE 2
*         END OF DATA REACHED ON SYSIN
          SPACE 1
EODSYSIN  C     R9,VSTSTART        NULL SYSIN FILE?
          BH    CALCEND            NO  => BR TO CALC LAST VSE
          WTO   MF=(E,MSG03)       YES => WTO ERROR MSG
          B     RETURN                    AND END EXECUTION
CALCEND   S     R9,=AL4(L'VSENTRY) BACKUP TO LAST ACTIVE VSE
          ST    R9,VSTEND          SAVE FOR BXLE
          SPACE 1
          CLOSE (SYSINDCB,,SYSOUDCB)
          SPACE 1
          TM    GLOFLAG,GLOEDIT    ANY EDIT ERRORS?
          BZ    BUILDRET           NO  => BR TO EXIT
          WTO   MF=(E,MSG04)       YES => WTO ERROR MESSAGE
          B     RETURN                    AND END EXECUTION
          SPACE 1
BUILDRET  L     R14,RETSAVE        RESTORE RETURN REGISTER
          BR    R14                RETURN TO CALLER
          TITLE 'NETINIT - OPENACB  ... OPEN VTAM ACB'
***********************************************************************
*                                                                     *
*  FUNCTION : 1) LOOP ATTEMPTING TO SUCCESSFULLY OPEN NETINIT'S       *
*                VTAM ACB.                                            *
*             2) END EXECUTION IF ACB CANNOT BE OPENED AFTER          *
*                TRYING FOR 5 MINUTES.                                *
*                                                                     *
*  REGS USED: R0,R1,R2,R14,R15                                        *
*                                                                     *
***********************************************************************
         SPACE 1
OPENACB  ST    R14,RETSAVE   SAVE RETURN ADDRESS                 85358
         LA    R1,NETNAME    GET VTAM PROCEDURE NAME             85358
         BAL   R7,FINDCSCB   HAS IT STARTED ?                    85358
         BM    OPENSTAR      NO; LET'S START IT OURSELVES        85358
         SPACE 1                                                 85358
OPENAGIN LA    R2,300        SET 300 SECOND TIME-OUT             85358
          SPACE 1
*         ATTEMPT TO OPEN THE ACB
          SPACE 1
OPENRTRY  OPEN  ACB                ATTEMPT TO OPEN ACB
          LTR   R15,R15            DID ACB OPEN SUCCESSFULLY?
          BZ    OPENRET            YES => BR TO EXIT
          SPACE 1
*         CHECK  OPEN RETURN CODE  FOR RETRYABLE ERROR
          SPACE 1
          CLI   ACBERFLG,X'52'     IF VTAM HALT IS IN PROGRESS
          BNE   OPENCX58             THEN
          WTO   MF=(E,MSG05)           WTO ERROR MSG
          B     RETURN                   AND END EXECUTION
OPENCX58  CLI   ACBERFLG,X'58'     IF APPLID IS ALREADY IN USE
          BNE   OPENCX5A             THEN
         LA    R1,=A(MSG12)                                      87298
         WTO   MF=(E,(1))    WTO ERROR MSG                       87298
          B     RETURN                   AND END EXECUTION
OPENCX5A  CLI   ACBERFLG,X'5A'     IF VTAM APPLID NOT DEFINED YET
         BE    OPENLOOP      WAIT A LITTLE WHILE LONGER          85358
OPENCX5C  CLI   ACBERFLG,X'5C'     IF VTAM IS INACTIVE
          BE    OPENLOOP             THEN RETRY OPEN ACB
          BAL   R7,OPENFAIL        OTHER RETURN CODE => TAKE A DUMP
         SPACE 1                                                 85358
OPENLOOP TM    GLOFLAG,GLOSTNET  HAVE WE ISSUED A START COMMAND ?
         BNZ   OPENLOOT      YES; JUST KEEP WAITING              85358
         OI    GLOFLAG,GLOSTNET  SET START COMMAND ISSUED        85358
         LA    R1,NETNAME    GET VTAM PROCEDURE NAME             85358
         BAL   R7,FINDCSCB   HAS IT STARTED ?                    85358
         BNM   OPENAGIN      YES; WAIT FOR IT TO COME UP         85358
OPENSTAR OI    GLOFLAG,GLOSTNET  SET START COMMAND ISSUED        85358
         MODESET KEY=ZERO                                        85358
         SLR   R0,R0                                             85358
         LA    R1,NETSTART   GET VTAM START COMMAND              85358
         SVC   34                                                85358
         MODESET KEY=NZERO                                       85358
         STIMER WAIT,,BINTVL==A(30*100)  VTAM INITIALIZATION ?   85359
         B     OPENAGIN      RESET TIMING AND WAIT SOME MORE     85358
          SPACE 1
*         RETRY  OPEN ACB EVERY 1  SECONDS TO A MAX OF 5 MINUTES
          SPACE 1
OPENLOOT  BCT   R2,OPENSTIM        DECREMENT TIMEOUT COUNTER
          WTO   MF=(E,MSG06)       WTO TIMEOUT LIMIT EXCEEDED
          B     RETURN             AND END EXECUTION
OPENSTIM  STIMER WAIT,BINTVL=WAIT1SEC WAIT FOR 1 SECOND
          B     OPENRTRY                AND THEN RETRY OPEN ACB
          SPACE 1
OPENRET   OI    GLOFLAG,GLOACBO    FLAG ACB OPENED
          L     R14,RETSAVE        RESTORE RETURN ADDRESS
          BR    R14
          TITLE 'NETINIT - ACTVSE   ... ISSUE COMMAND'
***********************************************************************
*                                                                     *
*  FUNCTION : 1) FOR VSETYPE='V', VERIFY THAT THE APPLID IS DEFINED   *
*                TO VTAM.                                             *
*             2) FOR VSETYPE='V', FLAG COMMAND COMPLETE IF APPLICATION*
*                IS ALREADY ACTIVE .                                  *
*             3) ISSUE THE COMMAND IN THE VSE USING SVC 34.           *
*             4) FOR VSETYPE='V', WAIT THE CURRENT VSE ENTRY AND HOLD *
*                SUBORDINATE VSE'S.                                   *
*             5) FOR VSETYPE='C', FLAG THE VSE COMPLETE.              *
*             6) FOR VSETYPE='S', FIND THE CSCB FOR APPLID.      85358
*                IF NOT FOUND, ISSUE COMMAND.  IF FOUND, FLUSH THIS
*                AND SUB-ORDINATE VSES.                          85358
*                                                                     *
*  REGS USED: R0,R1,R14,R15                                           *
*                                                                     *
***********************************************************************
ACTVSE    DS    0H
          ST    R14,RETSAVE        SAVE RETURN ADDRESS
          SPACE 1
*         INQUIRE ABOUT APPLID FOR VSETYPE='V'
          SPACE 1
          CLI   VSETYPE,C'C'       IF VSE IS COMMAND TYPE
          BE    AVSSVC34             THEN SKIP INQUIRE
         CLI   VSETYPE,C'S'  START COMMAND ?                     85358
         BE    AVSSTART      YES; GO LOOK FOR CSCB               85358
         CLI   VSETYPE,C'R'  RUNNING TASK ?                      86271
         BE    AVSNSTAR      YES; DO IT                          86271
          MVC   NIBSYM,VSEAPPL     MOVE APPLID TO NIB
AVSLOOP   INQUIRE RPL=RPL,         ISSUE VTAM INQUIRE                  X
               NIB=NIB,                                                X
               OPTCD=APPSTAT
         SPACE 1
          CH    R15,=H'12'         INQUIRE RET CODE > 12?
          BNH   *+8                NO  => GO TO BRANCH TABLE
          BAL   R14,SNOCCUR        YES => SHOULD NOT OCCUR
          B     ERRTAB1(R15)       BR BASED ON ACTION CODE
ERRTAB1   B     AVSFDBK3            0 => SUCCESSFUL COMPLETION
          BAL   R14,SNOCCUR         4 => SHOULD NOT OCCUR
          B     AVSAPBAD            8 => APPLID WRONG OR NOT DEFINED
          B     AVSLOOP             C => RETRYABLE ERROR
          SPACE 1
*         QUERY APPL STATUS FROM RPLFDBK3
          SPACE 1
AVSFDBK3 SLR    R15,R15            CLEAR R15 FOR FDBK3
          IC    R15,RPLFDB3        LOAD FDBK3
         CLI   VSETYPE,C'V'  VTAM APPLICATION ?                  86271
         BNE   AVTATS(R15)   NO; TAKE REVERSE BRANCH             86271
          B     AVSTAT(R15)        BR BASED ON APPL STATUS
AVSTAT    B     AVSACTIV            0 => APPLICATION ACTIVE
          B     AVSSVC34            4 => APPLICATION INACTIVE
          BAL   R7,SNOCCUR          8 => APPL'N NEVER ACCEPTS LOGON
          B     AVSACTIV            C => APPL'N TEMP NOT ACCEPTNG LOGON
          B     AVSACTIV           10 => APPLICATION CLOSING DOWN
AVTATS    B    AVSSVC34             0 => APPLICATION ACTIVE      86271
          B    AVSACTIV             4 => APPLICATION INACTIVE    86271
          BAL   R7,SNOCCUR          8 => APPL'N NEVER ACCEPTS LOGON
          B     AVSACTIV            C => APPL'N TEMP NOT ACCEPTNG LOGON
          B     AVSACTIV           10 => APPLICATION CLOSING DOWN
          SPACE 1
AVSACTIV  OI    VSEFLAG,VSEDONE+VSEPREV FLAG COMMAND COMPLETE
          B     AVSRET
         SPACE 1
AVSAPBAD TM    VSEFLAG,VSEINVA  BEEN HERE BEFORE ?               86281
         BNZ   AVSAPBAT      YES; FAIL                           86281
         STIMER WAIT,BINTVL==A(30*100)  WAIT 30 SECS FOR VTAM    86281
         OI    VSEFLAG,VSEINVA  SET FLAG                         86281
         B     AVSLOOP       RETRY                               86281
AVSAPBAT L     R2,=A(MSG09)                                      87298
         MVC   20(L'VSEAPPL,R2),VSEAPPL  BAD APPLID TO MSG       87298
         MVC   MSG09C-MSG09+13(L'VSENTRY,R2),VSENTRY MOVE VSE    87298
         WTO   MF=(E,(R2))   INFORM OPERATOR                     87298
         WTO   MF=(E,MSG09C-MSG09(R2)) ABOUT THE BAD APPLID      87298
          OI    VSEFLAG,VSEDONE+VSERROR+VSEINVA FLAG ENTRY COMPLETE
          OI    GLOFLAG,GLOERR     FLAG PROCESSING ERROR
          LA    R1,AVSEX           PT @ INSTR TO BE EXECUTED
          B     *+8                BR AROUND INSTR TO BE EXECUTED
AVSEX     OI    VSEFLAG,VSEDONE+VSERROR+VSEHELD FLAG SUBORDINATE  VSE'S
          BAL   R14,VSESUBOR       GO FLAG SUBORDINATE VSE'S
          B     AVSRET             BR TO EXIT
         SPACE 1                                                 85358
*        PROCESS CONDITIONAL START COMMAND                       85358
AVSSTART LA    R1,VSEAPPL    GET START JOB'S NAME                85358
         BAL   R7,FINKCSCB   FIND CSCB FOR START OR BATCH JOB    85358
         BM    AVSSVC34      NOT FOUND; ISSUE THE COMMAND        85358
         OI    VSEFLAG,VSEDONE+VSERROR  SET COMPLETE             85358
         BAL   R1,*+8        SET OI POINTER                      85358
         OI    VSEFLAG,VSEDONE+VSEHELD  SET TO KILL LOWER VSES   85358
         BAL   R14,VSESUBOR  KILL ALL LOWER ONES                 85358
         B     AVSRET        RETURN TO CALLER                    85358
         SPACE 1                                                 86271
*        PROCESS CONDITIONAL NON-START COMMAND                   86271
AVSNSTAR LA    R1,VSEAPPL    GET START JOB'S NAME                86271
         BAL   R7,FINKCSCB   FIND CSCB FOR START OR BATCH JOB    86271
         BNM   AVSSVC34      FOUND; ISSUE THE COMMAND            86271
         OI    VSEFLAG,VSEDONE+VSERROR  SET COMPLETE             86271
         BAL   R1,*+8        SET OI POINTER                      86271
         OI    VSEFLAG,VSEDONE+VSEHELD  SET TO KILL LOWER VSES   86271
         BAL   R14,VSESUBOR  KILL ALL LOWER ONES                 86271
         B     AVSRET        RETURN TO CALLER                    86271
         SPACE 1
*         USE SVC 34 TO ISSUE COMMAND IN VSE
         SPACE 1
AVSSVC34 CLC   VSECMD,VSECMD-1  ALL BLANK ?                      85358
         BE    AVSSVC3D      YES; DON'T ISSUE WTO OR MGCR        85358
         L     R1,=A(MSG10)                                      87298
         MVC   20(L'VSEAPPL,R1),VSEAPPL MOVE APPLID              87298
         MVC   33(35,R1),VSECMD  AND COMMAND TO WTO              87298
         WTO   MF=(E,(1))    TELL OPR                            87298
          SPACE 1
          MVC   SVC34CMD,VSECMD    MOVE CMD TO SVC 34 BUFFER
          MODESET KEY=ZERO         MUST BE IN KEY 0 FOR SVC 34
         SLR    R0,R0              SET R0 = 0
          LA    R1,SVC34BUF            R1 = A(CMD)
          SVC   34                 PASS COMMAND TO SYSTEM
          MODESET KEY=NZERO        RETURN TO USER PROTECT KEY
          SPACE 1
AVSSVC3D CLI   VSETYPE,C'V'  VTAM APPLN START CMD?               85358
          BE    AVSWAIT            YES => BR TO SET WAIT FLAG
          OI    VSEFLAG,VSEDONE    NO  => MARK VSE COMPLETE
          B     AVSRET                    AND EXIT
          SPACE 1
*         WAIT FOR VTAM APPLID TO BECOME ACTIVE BEFORE FLAGGING
*         THIS  VSE COMPLETE AND P ROCESSING SUBORDINATE VSE'S
          SPACE 1
AVSWAIT   OI    VSEFLAG,VSEWAIT    TURN WAIT FLAG ON
          LA    R1,AVSWTEX         PT @ INSTR TO BE EXECUTED
          B     *+8                BR AROUND OI
AVSWTEX   OI    VSEFLAG,VSEHELD    SET HELD FLAG IN SUB VSE'S
          BAL   R14,VSESUBOR       GO FLAG SUBORDINATE VSE'S
          B     AVSRET             BR TO EXIT
          SPACE 1
AVSRET    L     R14,RETSAVE        RESTORE RETURN REGISTER
          BR    R14                RETURN TO CALLER
         EJECT ,                                                 85358
***********************************************************************
*                                                                     *
*        LOCATE A START JOB BY NAME; ENTRY FINKCSCB ALSO ALLOWS       *
*        BATCH JOBS.  CALL WITH BAL R7,FINDCSCB/FINKCSCB; DESIRED     *
*        NAME POINTED TO BY R1.   ON RETURN CC SET PLUS/ZERO IF       *
*        TASK FOUND, ELSE MINUS.                                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                 85358
FINDCSCB LA    R7,0(,R7)     SET RETURN REGISTER POSITIVE        85358
FINKCSCB L     R3,CVTPTR                                         85358
         USING CVTMAP,R3                                         85358
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           85358
         USING ASVT,R15                                          85358
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID              85358
         SLL   R0,2          *4 FOR FAST CHECK                   85358
         SLR   R2,R2         SET INDEX FOR NEXT ASID             85358
FINDASID LA    R2,4(,R2)     GET NEXT ASID INDEX                 85358
         CR    R2,R0         VALID ?                             85358
         BH    FINDNONE      NO; QUIT                            85358
         LA    R3,ASVTFRST(R2)  POINT TO ASCB POINTER            85358
         ICM   R3,15,0(R3)   LOAD AND TEST                       85358
         BNP   FINDASID      SKIP UNUSED/FREE SLOT               85358
         USING ASCB,R3                                           85358
         LA    R14,8         SET DIFFERENTIAL OFFSET - FAKE CSCB 85358
         ICM   R4,15,ASCBJBNI  JOB CSCB ?                        85358
         BNZ   FINDAJOB      YES; TEST FIND VS. FINK ENTRY       85358
         SLR   R14,14        RESET CSCB ORIGIN OFFSET            85358
         ICM   R4,15,ASCBCSCB  GET THE CSCB                      85358
         BZ    FINDASID                                          85358
         USING CHAIN,R4      DECLARE THE CSCB                    85358
         CLI   CHVCD,X'04'   START TASK/INIT ?                   85358
         BNE   FINDASID      NO                                  85358
         B     FINDACOM      GO TO COMMON                        85358
FINDAJOB LTR   R7,R7         STANDARD BAL CALL AND ENTRY ?       85358
         BP    FINDASID      NO; STC REQUEST ONLY - SKIP JOB     85358
FINDACOM SLR   R4,R14        MAKE FAKE CSCB ORIGIN               85358
         CLC   0(8,R1),CHCLS  MATCHING NAME ?                    85358
         BNE   FINDASID      NO                                  85358
FINDASTP CLC   CHASID,ASCBASID  JUST IN CASE                     85358
         BNE   FINDASID                                          85358
         LA    R15,0(,R3)    RETURN ASCB ADDRESS                 85358
         B     FINDEXIT      GO TO COMMON RETURN                 85358
FINDNONE LNR   R15,R0        SET NEGATIVE RETURN                 85358
FINDEXIT LTR   R15,R15       SET CONDITION CODE                  85358
         BR    R7            RETURN TO CALLER                    85358
         DROP  R3,R4,R15                                         85358
          TITLE 'NETINIT - STATNQIR ... INQUIRE APPLID STATUS'
***********************************************************************
*                                                                     *
*  FUNCTION : 1) STATNQIR IS ENTERED FOR VSE'S THAT HAVE THE WAIT     *
*                FLAG SET.                                            *
*             2) STATNQIR ISSUES THE VTAM INQUIRE MACRO TO SEE IF     *
*                THE SPECIFIED VTAM APPLID HAS STARTED YET.           *
*             3) IF THE APPLID IS NOW ACTIVE, THE VSE IS FLAGGED      *
*                COMPLETE AND THE HELD FLAG IS RESET IN ALL           *
*                SUBORDINATE VSE'S.                                   *
*             4) IF THE TIMEOUT VALUE IS EXCEEDED FOR THE APPLID,     *
*                THEN THE ENTRY IS FLAGGED COMPLETE UE TO ERROR,      *
*                AND ALL SUBORDINATE VSE'S ARE FLAGGED COMPLETE.      *
*                                                                     *
*  REGS USED: R0,R1,R14,R15                                           *
*                                                                     *
***********************************************************************
STATNQIR  DS    0H
          ST    R14,RETSAVE        SAVE RETURN ADDRESS
          SPACE 1
*         DECREMENT TIMEOUT COUNTE R FOR THIS APPLID.
          SPACE 1
          L     R1,VSELPCNT        LOAD TIMEOUT COUNTER
          BCT   R1,*+8             DECREMENT TIMEOUT COUNTER
          B     STATIMEO           R1 < 0 => TIMEOUT VALUE EXCEEDED
          ST    R1,VSELPCNT        SAVE TIMEOUT COUNTER
          SPACE 1
*         ISSUE  INQUIRE MACRO FOR  APPLICATION STATUS
          SPACE 1
          MVC   NIBSYM,VSEAPPL     MOVE APPLID INTO NIB
STATLOOP  INQUIRE RPL=RPL,         ISSUE INQUIRE MACRO                 X
               NIB=NIB,                                                X
               OPTCD=APPSTAT
          CH    R15,=H'12'         INQUIRE RET CODE > 12?
          BNH   *+8                NO  => GO TO BRANCH TABLE
          BAL   R14,SNOCCUR        YES => SHOULD NOT OCCUR
          B     ERRTAB2(R15)       BR BASED ON ACTION CODE
ERRTAB2   B     STATFDB3            0 => SUCCESSFUL COMPLETION
          BAL   R14,SNOCCUR         4 => SHOULD NOT OCCUR
          BAL   R14,SNOCCUR         8 => APPLID WRONG OR NOT DEFINED
          B     STATLOOP            C => RETRYABLE ERROR
          SPACE 1
*         QUERY APPL STATUS FROM RPLFDBK3
          SPACE 1
STATFDB3 SLR    R15,R15            CLEAR R15 FOR FDBK3
          IC    R15,RPLFDB3        LOAD FDBK3
          B     STATAB(R15)        BR BASED ON APPL STATUS
STATAB    B     STATACT             0 => APPLICATION ACTIVE
          B     STATRET             4 => APPLICATION INACTIVE
          BAL   R7,SNOCCUR          8 => APPL'N NEVER ACCEPTS LOGON
          B     STATRET             C => APPL'N TEMP NOT ACCEPTNG LOGON
          B     STATACT            10 => APPLICATION CLOSING DOWN
          SPACE 1
*         APPLI D IS NOW ACTIVE
          SPACE 1
STATACT   OI    VSEFLAG,VSEDONE    FLAG VSE COMPLETE
          LA    R1,STATEX1         PT @ INSTR TO BE EXECUTED
          B     *+8                BR AROUND NI
STATEX1   NI    VSEFLAG,X'FF'-VSEHELD RESET HELD FLAG IN SUB VSE'S
          BAL   R14,VSESUBOR       GO RELEASE SUBORDINATE VSE'S
          B     STATRET            BR TO EXIT
          SPACE 1
*         WE HAVE EXCEEDED THE TIME LIMIT FOR THE VTAM APPLID
*         TO START. ASSUME SOMETHING IS WRONG AND TERMINATE
*         PROCESSING FOR THIS ENTRY AND ALL SUBORDINATE VSE'S.
          SPACE 1
STATIMEO L     R1,=A(MSG11)  POINT TO 'WAITED' MESSAGE           87298
          MVC  20(L'VSEAPPL,R1),VSEAPPL MOVE APPLID TO WTO MSG   87298
          WTO   MF=(E,(1))   AND TELL OPR                        87298
          OI    VSEFLAG,VSEDONE+VSERROR FLAG VSE COMPLETE
          LA    R1,STATEX2
          B     *+8                BR AROUND INSTR TO BE EXECUTED
STATEX2   OI    VSEFLAG,VSEDONE+VSERROR FLAG SUB VSE'S DONE
          BAL   R14,VSESUBOR       GO FLAG SUBORDINATE VSE'S DONE
          B     STATRET            BR TO EXIT
          SPACE 1
STATRET   L     R14,RETSAVE        RESTORE RETURN ADDR
          BR    R14                RETURN
          TITLE 'NETINIT - VSESUBOR ... PROCESS SUBORDINATE VSE''S'
***********************************************************************
*                                                                     *
*  FUNCTION : 1) FOR EACH VSE THAT IS SUBORDINATE TO THE CURRENT      *
*                VSE, EXECUTE THE INSTRUCTION POINTED AT BY R1.       *
*                                                                     *
*  INPUT    : R1 - ADDRESS OF INSTRUCTION TO BE EXECUTED              *
*                                                                     *
*  REGS USED: R2                                                      *
*                                                                     *
***********************************************************************
VSESUBOR  DS    0H
          LR    R2,R9              SAVE CURRENT VSE
          B     VSENEXT            GO GET FIRST SUBORDINATE VSE
          SPACE 1
VSELOOP   CLC   VSELEVEL,VSELEVEL-VSEDSECT(R2) SUBORDINATE VSE?
          BNH   VSERET             NO  => SCAN COMPLETE
         EX    0,0(,R1)            YES => EXECUTE PASSED INSTRUCTION
VSENEXT   BXLE  R9,R10,VSELOOP            AND GET NEXT VSE
          SPACE 1
VSERET    LR    R9,R2              RESTORE CURRENT VSE
          BR    R14                RETURN TO CALLER
          TITLE 'NETINIT - ERREXIT  ... PROCESS RPL ERRORS'
***********************************************************************
*                                                                     *
*  FUNCTION : ERREXIT RECEIVES CONTROL WHENEVER AN RPL-BASED MACRO    *
*             ENDS WITH A NON-ZERO RETURN CODE.                       *
*                                                                     *
*             1) SINCE ONLY THE INQUIRE MACRO IS USED, THERE ARE      *
*                VERY FEW ERRORS THAT SHOULD OCCUR.                   *
*             2) THE RTNCD AND FDBK2 CODES ARE ANALYZED AND AN ACTION *
*                CODE IS LOADED INTO R15 TO BE PASSED BACK TO THE     *
*                CODE IMMEDIATELY FOLLOWING THE MACRO CALL. THIS      *
*                ACTION CODE IS DEFINED AS FOLLOWS:                   *
*                                                                     *
*                  4 => THIS CONDITION SHOULD NOT OCCUR               *
*                  8 => INPUT TO INQUIRE IS INCORRECT                 *
*                  C => REISSUE THE MACRO                             *
*                                                                     *
*             3) THE POSSIBLE ERROR CONDITIONS OF INTEREST TO US      *
*                ARE AS FOLLOWS:                                      *
*                                                                     *
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      0C  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  08  00           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  08  00           *
*                                                                     *
*                                                                     *
*                                                                     *
*  INPUT    : R1     - ADDRESS OF RPL IN ERROR                        *
*             R2-R12 - VALUES AT TIME MACRO WAS ISSUED                *
*             R13    - VTAM SAVEAREA                                  *
*             R14    - RETURN ADDRESS TO VTAM                         *
*             R15    - ENTRY POINT OF EXIT                            *
*                                                                     *
***********************************************************************
ERREXIT   DS    0H
          DROP  R8
          USING IFGRPL,R1          SET ADDRESSABILITY TO RPL
         SLR    R0,R0              SET ACTION SUBCODE = 0
          SPACE 1
*         SCAN  FOR EXPECTED ERROR S
          SPACE 1
          CLC   RPLRTNCD(2),=XL2'0800' TEMP STORAGE ALLOCATION FAILURE
          BNE   ERR100A                  NO  => CHECK NEXT ERROR
          LA    R15,12                   YES => SET ACTION CODE=RETRY
          B     ERRRET                          AND EXIT
          SPACE 1
ERR100A   CLC   RPLRTNCD(2),=XL2'100A' VTAM INTERNAL ERROR
          BNE   ERR100E                  NO  => CHECK NEXT ERROR
          LA    R15,4                    YES => SET ACTION CODE=SNOCUR
          B     ERRRET                          AND EXIT
          SPACE 1
ERR100E   CLC   RPLRTNCD(2),=XL2'100E' VTAM ABENDING
          BNE   ERR144C                  NO  => CHECK NEXT ERROR
          LA    R15,4                    YES => SET ACTION CODE=SNOCUR
          B     ERRRET                          AND EXIT
          SPACE 1
ERR144C   CLC   RPLRTNCD(2),=XL2'144C' NO APPL NAME SPECIFIED?
          BNE   ERR1453                  NO  => CHECK NEXT ERROR
          LA    R15,8                    YES => SET ACTION CODE=BADAPPL
          B     ERRRET                          AND EXIT
          SPACE 1
ERR1453   CLC   RPLRTNCD(2),=XL2'1453' INVALID APPL NAME?
          BNE   ERSNOCUR                 NO  => BR TO SET SNOCUR
          LA    R15,8                    YES => SET ACTION CODE=BADAPPL
          B     ERRRET                          AND EXIT
          SPACE 1
ERSNOCUR LA     R15,4              ALL OTHER ERRORS ARE UNEXPECTED
          B     ERRRET             BR TO EXIT
          SPACE 1
ERRRET    BR    R14                EXIT TO VTAM
         SPACE 2                                                 87298
         LTORG ,                                                 87298
          TITLE 'NETINIT - DCB''S  AND VTAM CONTROL BLOCKS'
          PRINT NOGEN
SYSINDCB  DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EODSYSIN,MACRF=(GM),       X
               LRECL=80
          SPACE 2
SYSOUDCB  DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=(PM),LRECL=80,RECFM=F
          SPACE 2
ACB       ACB   AM=VTAM,APPLID=APPLNAME,EXLST=EXLST,PASSWD=APPLPSWD
          SPACE 2
EXLST     EXLST AM=VTAM,SYNAD=ERREXIT,LERAD=ERREXIT
          SPACE 2
NIB       NIB   MODE=RECORD,PROC=TRUNC,LISTEND=YES,                    X
               LOGMODE=C' ',BNDAREA=0
          SPACE 2
RPL       RPL   AM=VTAM,ACB=ACB,OPTCD=SYN
         SPACE 2
VSEDSECT  DSECT
*
*         THIS  DSECT DESCRIBES AN  ENTRY IN THE VTAM STARTUP TABLE.
*         EACH  VSE IS READ FROM T HE SYSIN FILE.
*
VSENTRY   DS    0CL80              DEFINES ENTIRE VSE ENTRY
VSELEVEL  DC    CL1' '             THE LEVEL NUMBER FOR THIS VSE
*                                  LEVEL #'S RANGE FROM 0-9
*                                  ALL VSE'S BETWEEN THE CURRENT VSE
*                                  AND THE FIRST VSE WITH A LOWER
*                                  OR EQUAL LEVEL NUMBER ARE
*                                  SUBORDINATE TO THE CURRENT VSE.
VSEFLAG   DC    XL1'00'            VSE STATUS FLAG (FILLER)
VSEDONE   EQU   X'80'              PROCESSING COMPLETE FOR VSE
VSEWAIT   EQU   X'40'              WAITING FOR APPLID TO START
VSEPREV   EQU   X'20'              APPLID PREVIOUSLY ACTIVE
VSEHELD   EQU   X'10'              HELD TILL SUPERIOR VSE COMPLETES
VSERROR   EQU   X'08'              ERROR OCCURRED PROCESSING VSE
VSEINVA   EQU   X'04'              INVALID VSEAPPL FOUND ON INQUIRE
VSETIMEO  EQU   X'02'              TIMED OUT WAITING FOR APPL TO START
          SPACE 1
VSETYPE   DC    CL1' '             V => VTAM => ONCE COMMAND IS ISSUED
*                                               INQUIRE MACRO WILL BE
*                                               USED TO WAIT FOR
*                                               COMPLETION.
*                                  C => CMD  => VSE MARKED DONE ONCE
*                                               COMMAND IS ISSUED
          DC    CL1' '             FILLER
VSEAPPL   DC    CL8' '             VTAM APPLID ASSOCIATED WITH VSECMD
          DC    CL1' '             FILLER
VSECMD    DC    CL40' '            COMMAND ISSUED WITH SVC 34
VSELPCNT  DC    F'0'               TIMEOUT COUNTER (FILLER)
          ORG   VSEDSECT+80
NETINIT   CSECT
         SPACE 2
NUMVSE    EQU   50                 MAXIMUM NUMBER OF VSE'S
VSTLEN    DC    AL4(80*NUMVSE)     STORAGE SIZE FOR VST
VSTSTART  DC    AL4(0)             START OF VST            USED
VSTINCR   DC    AL4(L'VSENTRY)     SIZE OF VSE               FOR
VSTEND    DC    AL4(0)             LAST ACTIVE ENTRY IN VST    BXLE
          SPACE 1
SAVEAREA  DC    18F'0'             NETINIT SAVEAREA
DB       DC    2D'0'         WORK AREA                           87298
RETSAVE   DC    F'0'               SAVEAREA FOR RETURN ADDRESS
          SPACE 1
WAIT1SEC  DC    F'100'             STIMER VALUE FOR 1 SECOND WAIT
GLOFLAG   DC    XL1'00'            FLAG BYTE
GLOEDIT   EQU   X'80'              ERROR EDITTING VSE INPUT
GLOFND1   EQU   X'40'              ATLEAST 1 INCOMPLETE VSE FOUND
GLOERR    EQU   X'20'              ERROR IN PROCESSING A VSE
GLOACBO   EQU   X'10'              ACB IS OPEN
GLOSTNET EQU   X'01'           NET START COMMAND ISSUED          85358
          SPACE 1
SVC34BUF  DS    0CL(4+L'VSECMD)    CMD BUFFER FOR SVC 34
          DC    AL2(L'SVC34BUF)    LENGTH PASSED TO SVC 34
          DC    AL2(0)             MUST BE ZERO
SVC34CMD  DC    CL(L'VSECMD)' '    COMMAND PASSED TO SVC 34
          SPACE 1
APPLPSWD  DC    AL1(8)             LENGTH OF PASSWORD ENTRY
          DC    CL8'NETINIT'       PASSWORD FOR NETINIT APPLID
NETSTART DC    0A(0),Y(4+4+8+1,0),CL4'S   '  F-ALIGN NETNAME     85358
NETNAME  DC    CL8'VTAM    ',C' '  DEFAULT NET PROCEDURE NAME    85358
          SPACE 1
DUMPFLAG  DC    XL1'00'            USED TO HOLD ABEND CODE
OPENCODE  EQU   X'80'              FAILURE OPENING ACB
SNOCUR    EQU   X'40'              SHOULD NOT OCCUR ERROR
         DS    0F                                                85358
DUMPEYE   DC    C'ABEND REGISTERS STORED HERE ' HELP FIND REGS IN DUMP
DUMPREGS  DC    16F'0'             REGISTERS PRIOR TO DUMP
HEXCONTB DC    X'000A0B0C0D0E0F001F1F1F1F1F1F1F1F'  1/2          87298
         DC    X'00010203040506070809000000000000'  2/2          87298
ULKPARM  DC    A(ULKWORK,ULKDEVMK),X'80',AL3(ULKUCBAD)           87298
          SPACE 1
          TITLE 'NETINIT - WTO AND SYSOUT MESSAGES'
EDITERR1  DC    CL80'LEVEL IN ABOVE ENTRY MUST BE NUMERIC'
EDITERR2  DC   CL80'ENTRY TYPE IN ABOVE RECORD MUST BE ''C'' OR ''V''.'
          SPACE 1
          PRINT NOGEN
MSG01     WTO   'BCSI201I SYSIN OR SYSOUT FILE FAILED TO OPEN. EXECUTIOX
               N TERMINATED.',ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG02     WTO   'BCSI202I MAXIMUM NUMBER OF INPUT COMMAND RECORDS EXCEEX
               DED. EXECUTION TERMINATED.',ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG03     WTO   'BCSI203I SYSIN FILE IS EMPTY. EXECUTION TERMINATED.', X
               ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG04     WTO   'BCSI204I ERRORS IN SYSIN FILE. EXECUTION TERMINATED.',X
               ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG05     WTO   'BCSI205I VTAM SHUTTING DOWN. EXECUTION TERMINATED.',  X
               ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG06     WTO   'BCSI206I UNABLE TO OPEN ACB AFTER TRYING FOR 5 MINUTESX
               . EITHER VTAM IS DOWN OR THE NETINIT APPL IS INACTIVE.',X
               ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG07     WTO   'BCSI207I NETINIT COMPLETE EXCEPT FOR NOTED ERRORS. CORX
               RECT AND RESTART NETINIT.',ROUTCDE=(8),DESC=(7),        X
               MF=L
          SPACE 1
MSG08     WTO   'BCSI208I NETINIT COMPLETED SUCCESSFULLY.',            X
               ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG09     WTO   'BCSI209I APPLID=XXXXXXXX IS INACTIVE OR INCORRECTLY ONX
                RECORD:',ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG09C    WTO   'BCSI209I XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXC
               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',ROUTCDE=(8),DESC=(7),X
               MF=L
          SPACE 1
MSG10     WTO   'BCSI210I APPLID=12345678 CMD=1234567891123456789212345C
               6789312345',ROUTCDE=(8),DESC=(7),MF=L
          SPACE 1
MSG11     WTO   'BCSI211I APPLID=XXXXXXXX HAS NOT STARTED. FIX PROBLEM X
               AND RESTART NETINIT.',ROUTCDE=(1,8),DESC=(1),MF=L 85358
          SPACE 1
MSG12     WTO   'BCSI212I NETINIT IS ALREADY ACTIVE. EXECUTION TERMINATX
               ED.',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 1                                                 87298
ULKUCBAD DC    A(0)          RETURNED UCB ADDRESS                87298
ULKWORK  DC    XL100'0'      WORK AREA FOR UCB LOOKUP            87298
ULKDEVMK DC    X'40'         LIMIT TO TP                         87298
         SPACE 2
          DCBD DSORG=PS,DEVD=DA
         SPACE 1                                                 85358
         REGEQU ,
         SPACE 1
          IFGACB
         SPACE 1
          ISTDNIB
         SPACE 1
          IFGRPL
         SPACE 1                                                 85358
CVTDSECT DSECT ,                                                 85358
         CVT   DSECT=YES                                         90344
         SPACE 1                                                 90344
         IEESMCA ,                                               90344
         SPACE 1                                                 85358
         IHAASVT ,                                               85358
         SPACE 1                                                 85358
         IHAASCB ,                                               85358
         SPACE 1                                                 85358
         IEECHAIN ,                                              85358
         SPACE 1                                                 87298
         IEFUCBOB ,                                              87298
         SPACE 1                                                 85358
         END   ,
./ ADD NAME=NETINIT$
INSTRUCTIONS FOR INSTALLING 'NETINIT'
*************************************

1) ASSEMBLE NETINIT USING THE SAMPLE JCL IN NETINITA.

2) ADD VTAM DEFINITION FOR 'NETINIT' TO SYS1.VTAMLST.

3) ADD STARTUP PROC (NETINITP) TO SYS1.PROCLIB.

./ ADD NAME=NETINITA
//EP91853A JOB (91853,576595,D,PSTT),'PITKIN@DAVIDSON',CLASS=B,
//  NOTIFY=EP91853,MSGCLASS=A,USER=*,PASSWORD=*,GROUP=SYS1
/*JOBPARM R=3D,L=99
//S0 EXEC COMPRESS,LIB='SYS9.LOADLIB'
// EXEC ASMFCL,PARMC='TEST,LINECOUNT(57)',PARML=TEST,CLASS=$
//ASM.SYSIN DD DSN=SYS9.TP.ASM(NETINIT),DISP=SHR
//LKED.SYSLMOD DD DSN=SYS9.LOADLIB,DISP=SHR
//LKED.SYSIN DD *
 SETCODE AC(1)
 NAME NETINIT(R)
./ ADD NAME=NETINITI
1 V NCCFA    S NCCF
2 V NETSOL   S NETSOL
3 C LCL4A0   V NET,ACT,ID=LCL4A0
4 V NETOP    S NETOP
3 C LCL4C0   V NET,ACT,ID=LCL4C0
3 C LCL480   V NET,ACT,ID=LCL480
3 C BLCL4E0  V NET,ACT,ID=BLCL4E0
3 C NCPB     V NET,ACT,ID=NCPB0
3 C NCPR     V NET,ACT,ID=NCPR0
3 V DSPRINT  S DSPRINT
1 V HCF      S HCF
1 V TSO      S TCAS
1 V JES2     $SLGN1
2 C JES2     $SLNE127-134
1 C MSG      SE 'NETINIT(A) RUN',LOGON,USER=(SC64858)
./ ADD NAME=NETINITP
//NETINIT  PROC MEMBER=NETINIT,LOADLIB='SYS9.LOADLIB'
//*********************************************************************
//*********************************************************************
//*                                                                 ***
//*                                                                 ***
//*    PURPOSE:            START ALL VTAM APPLICATIONS THAT         ***
//*                        ARE TO BE AVAILABLE IMMEDIATELY AFTER    ***
//*                        VTAM IS STARTED.                         ***
//*                                                                 ***
//*    OWNER:              DISTRIBUTED SERVICES                     ***
//*                                                                 ***
//*    CONTACT:            ED PITKIN                                ***
//*                                                                 ***
//*                                                                 ***
//*********************************************************************
//*********************************************************************
//*
//NETINIT  EXEC PGM=NETINIT
//STEPLIB  DD   DSN=&LOADLIB,DISP=SHR
//SYSIN    DD   DSN=SYS1.PARMLIB(&MEMBER),DISP=SHR
//SYSOUT   DD   SYSOUT=Z
//SYSUDUMP DD   SYSOUT=A
./ ADD NAME=NETINTAB,SSI=00087187
NETINTAB TITLE 'V T A M   l o g o n   i n t e p r e t   t a b l e'
***********************************************************************
*                                                                     *
*        purpose: define interpret table used by netsol70.            *
*                 (refer to acf/vtam system programmers guide)        *
*                                                                     *
*        note:    1) valid logon sequences are defined in upper       *
*                    and lower case.                                  *
*                 2) the logon sequences are compared with the        *
*                    passed string for a length equal to the          *
*                    logon sequence. therefore, any logon sequence    *
*                    containing another logon sequence as a           *
*                    substring (as 'imstest' contains 'ims') must     *
*                    appear in the interpret table before the         *
*                    sequence contained as a substring does.          *
*                                                                     *
*        date:    August 21, 1985          Updated by G.P.            *
*                                                                     *
*                                                                     *
***********************************************************************
         PRINT NOGEN                                             85328
NETINTAB INTAB ,
         LOGCHAR APPLID=(APPLICID,TSOA),SEQNCE='TSOA' cdrsc names
         LOGCHAR APPLID=(APPLICID,TSOA),SEQNCE='tsoa' cdrsc names
         LOGCHAR APPLID=(APPLICID,TSOB),SEQNCE='TSOB' cdrsc names
         LOGCHAR APPLID=(APPLICID,TSOB),SEQNCE='tsob' cdrsc names
         LOGCHAR APPLID=(APPLICID,EXHA),SEQNCE='EXHA' cdrsc names
         LOGCHAR APPLID=(APPLICID,EXHA),SEQNCE='exha' cdrsc names
         LOGCHAR APPLID=(APPLICID,EXHB),SEQNCE='EXHB' cdrsc names
         LOGCHAR APPLID=(APPLICID,EXHB),SEQNCE='exhb' cdrsc names
         LOGCHAR APPLID=(APPLICID,WYLA),SEQNCE='WYLA' cdrsc names
         LOGCHAR APPLID=(APPLICID,WYLA),SEQNCE='wyla' cdrsc names
         LOGCHAR APPLID=(APPLICID,WYLB),SEQNCE='WYLB' cdrsc names
         LOGCHAR APPLID=(APPLICID,WYLB),SEQNCE='wylb' cdrsc names
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='TSO'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='tso'
*SCAN*   LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='LOGON'
         LOGCHAR APPLID=(ROUTINE,STDLOGON),SEQNCE='LOGON'
         LOGCHAR APPLID=(ROUTINE,STDLOGON),SEQNCE='logon'
*SCAN*   LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='logon'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='sas'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='SAS'
         LOGCHAR APPLID=(APPLICID,TSO),SEQNCE='1'
         SPACE 3
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='CICS'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='cics'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='TESSERAC'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='tesserac'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='TESS'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='tess'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='CUBE'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='cube'
         LOGCHAR APPLID=(APPLICID,CICS),SEQNCE='2'
         SPACE 3
         LOGCHAR APPLID=(APPLICID,CICSTEST),SEQNCE='CICSTEST'
         LOGCHAR APPLID=(APPLICID,CICSTEST),SEQNCE='cicstest'
         LOGCHAR APPLID=(APPLICID,CICSTEST),SEQNCE='3'
         SPACE 3
         LOGCHAR APPLID=(APPLICID,WYLBUR),SEQNCE='WYLBUR'
         LOGCHAR APPLID=(APPLICID,WYLBUR),SEQNCE='wylbur'
         LOGCHAR APPLID=(APPLICID,WYLBUR),SEQNCE='WYL'
         LOGCHAR APPLID=(APPLICID,WYLBUR),SEQNCE='wyl'
         LOGCHAR APPLID=(APPLICID,WYLBUR),SEQNCE='4'
         SPACE 3
         LOGCHAR APPLID=(APPLICID,EXHI),SEQNCE='EXHIBIT'
         LOGCHAR APPLID=(APPLICID,EXHI),SEQNCE='exh'
         LOGCHAR APPLID=(APPLICID,EXHI),SEQNCE='EXH'
         LOGCHAR APPLID=(APPLICID,EXHI),SEQNCE='5'
         SPACE 1
         LOGCHAR APPLID=(APPLICID,EXORCIST),SEQNCE='EXORCIST'
         LOGCHAR APPLID=(APPLICID,EXORCIST),SEQNCE='exorcist'
         LOGCHAR APPLID=(APPLICID,EXORCIST),SEQNCE='6'
         SPACE 1                                                 85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='CJRPA'          85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='cjrpa'          85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='CJRP'           85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='cjrp'           85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='JRP'            85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='jrp'            85328
         LOGCHAR APPLID=(APPLICID,CJRPA),SEQNCE='10'             85328
         SPACE 1                                                 85245
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='NETOP'          85245
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='netop'          85245
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='OPERATOR'       85245
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='operator'       85245
         LOGCHAR APPLID=(APPLICID,NETOP),SEQNCE='11'             85245
         LOGCHAR APPLID=(APPLICID,NETSOL),SEQNCE='NETSOL'
         LOGCHAR APPLID=(APPLICID,NETSOL),SEQNCE='netsol'
         SPACE 1                                                 85328
*        THE FOLLOWING DEFINITIONS ARE PROVIDED FOR MEANINGFUL (I.E.
*        READABLE) ERROR MESSAGES IN NETSOL WHEN AN UNDEFINED KEY IS
*        USED.                                                   85328
*                                                                85328
         LOGCHAR APPLID=(APPLICID,PFK1),SEQNCE='1'               85328
         LOGCHAR APPLID=(APPLICID,PFK2),SEQNCE='2'               85328
         LOGCHAR APPLID=(APPLICID,PFK3),SEQNCE='3'               85328
         LOGCHAR APPLID=(APPLICID,PFK4),SEQNCE='4'               85328
         LOGCHAR APPLID=(APPLICID,PFK5),SEQNCE='5'               85328
         LOGCHAR APPLID=(APPLICID,PFK6),SEQNCE='6'               85328
         LOGCHAR APPLID=(APPLICID,PFK7),SEQNCE='7'               85328
         LOGCHAR APPLID=(APPLICID,PFK8),SEQNCE='8'               85328
         LOGCHAR APPLID=(APPLICID,PFK9),SEQNCE='9'               85328
         LOGCHAR APPLID=(APPLICID,PFK10),SEQNCE='10'             85328
         LOGCHAR APPLID=(APPLICID,PFK11),SEQNCE='11'             85328
         LOGCHAR APPLID=(APPLICID,PFK12),SEQNCE='12'             85328
         LOGCHAR APPLID=(APPLICID,PFK13),SEQNCE='13'             85328
         LOGCHAR APPLID=(APPLICID,PFK14),SEQNCE='14'             85328
         LOGCHAR APPLID=(APPLICID,PFK15),SEQNCE='15'             85328
         LOGCHAR APPLID=(APPLICID,PFK16),SEQNCE='16'             85328
         LOGCHAR APPLID=(APPLICID,PFK17),SEQNCE='17'             85328
         LOGCHAR APPLID=(APPLICID,PFK18),SEQNCE='18'             85328
         LOGCHAR APPLID=(APPLICID,PFK19),SEQNCE='19'             85328
         LOGCHAR APPLID=(APPLICID,PFK20),SEQNCE='20'             85328
         LOGCHAR APPLID=(APPLICID,PFK21),SEQNCE='21'             85328
         LOGCHAR APPLID=(APPLICID,PFK22),SEQNCE='22'             85328
         LOGCHAR APPLID=(APPLICID,PFK23),SEQNCE='23'             85328
         LOGCHAR APPLID=(APPLICID,PFK24),SEQNCE='24'             85328
         ENDINTAB
         TITLE 'MVS/SP SYSTEM IPO SUPPLIED INTERPRET TABLE'      87187
*/* LIB: IPO1.COM.SAMPLIB(INTTAB)                                87187
*/* GDE: SYSTEM IPO COMMUNICATIONS GUIDE                         87187
*/* DOC: THIS IS THE MVS/SP SYSTEM IPO SAMPLE INTERPRET TABLE    87187
*/*      FOR VTAM LOGONS.  IT HAS THE UPPER AND LOWER            87187
*/*      CASE ENTRIES FOR 'LOGON' (ROUTINE OF STDLOGON)          87187
*/*                                                              87187
         SPACE 2                                                 87187
***************************************************************  87187
*                                                                87187
*    SCAN INPUT FOR STANDARD LOGON SEQUENCE                      87187
*                                                                87187
*    STANDARD LOGON SEQUENCE IS AS FOLLOWS:                      87187
*      ANY NUMBER OF BLANKS                                      87187
*      'LOGON ' OR 'LOGON,'                                      87187
*      OPTIONAL OTHER DATA ENDING IN ' ' OR ','                  87187
*      'APPLID('             OR 'APPL('                          87187
*      ONE TO EIGHT ALPHANUMERIC CHARACTERS SIGNIFYING           87187
*       THE APPLICATION NAME                                     87187
*      ')'                                                       87187
*      AN OPTIONAL ' ' OR ',' FOLLOWED BY OTHER DATA             87187
*                                                                87187
*    NOTE:                                                       87187
*      'LOGON' OR 'LOGON ' OR 'LOGON,'                           87187
*      IS SUFFICIENT TO LOGON TO TSO.                            87187
*                                                                87187
*    NOTE:                                                       87187
*      IF 'APPLID(NAME)' IS NOT FOUND,                           87187
*      THEN TSO IS ASSUMED.                                      87187
*                                                                87187
***************************************************************  87187
STDLOGON CSECT ,                                                 87187
         STM   R14,R12,12(R13)                                   87187
         BALR  R12,0                                             87187
         USING *,R12                                             87187
*                                                                87187
         LR    R2,R0                   LENGTH OF LOGON MESSAGE   87187
         BCTR  R2,0                    DECREMENT TO              87187
         EX    R2,TRANS                 EXECUTE TRANSLATE        87187
         LR    R2,R0                   LENGTH OF LOGON MESSAGE   87187
         LR    R3,R1                   POINT TO LOGON MESSAGE    87187
         LR    R4,R3                   POINT BEYOND END OF       87187
         AR    R4,R2                    LOGON MESSAGE            87187
         BCTR  R3,0                    BACKSPACE 1 FOR LOOP      87187
*                                       ACTION                   87187
*                                       BELOW                    87187
         SPACE 2                                                 87187
NEXTCHAR DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHARACTER            87187
         CLI   0(R3),C' '              IGNORE LEADING BLANKS     87187
         BNE   FOUNDLOG                NON BLANK CONTINUE        87187
         BCT   R2,NEXTCHAR             ALL BLANKS?               87187
         B     VS2NTSO                 YES. MUST BE TSO          87187
         SPACE 2                                                 87187
FOUNDLOG DS    0H                                                87187
         LA    R5,L'CLOGON+L'CAPPL+3(,R3) MINIMUM END            87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
*       'LOGON' HAS BEEN FOUND.SEARCH FOR APPLID(NAME)           87187
         SPACE 2                                                 87187
         LA    R3,L'CLOGON(,R3)        NEXT CHAR BEYOND LOGON    87187
         CLI   0(R3),C' '              NEXT CHAR MUST BE         87187
         BE    APPLSCAN                  EITHER BLANK OR A       87187
         CLI   0(R3),C','                COMMA                   87187
         BNE   VS2NTSO                 NO. MUST BE TSO           87187
APPLSCAN LA    R7,L'CAPPLID  MAXIMUM LENGTH                      87187
         LA    R8,L'CAPPL    MINIMUM LENGTH                      87187
         SPACE 2                                                 87187
APPLSCAM DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHAR                 87187
         LA    R5,2(R8,R3)   LENGTH FOR STD. SEQUENCE            87187
         CR    R5,R4         WILL IT FIT ?                       87187
         BH    VS2NTSO       NO; ASSUME TSO                      87187
         CLC   CAPPL,0(R3)  'APPL(' ?                            87187
         BE    COMAPPL       MATCH                               87187
         LA    R5,L'CAPPLID+2(,R3)     MINIMUM END               87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
         CLC   CAPPLID,0(R3)           IS THIS APPLID(?          87187
         BNE   APPLSCAM                                          87187
         LR    R8,R7         SET SEQUENCE LENGTH                 87187
         SPACE 2                                                 87187
*       APPLID( FOUND--ENSURE THAT BLANK OR COMMA PRECEDES IT    87187
*       AND THAT ITS WITHIN BOUNDS OF MESSAGE                    87187
         SPACE 2                                                 87187
COMAPPL  BCTR  R3,0                    BACKSPACE ONE             87187
         CLI   0(R3),C' '              IS IT A BLANK?            87187
         BE STARTSOK                   CONTINUE IF SO            87187
         SPACE 2                                                 87187
         CLI 0(R3),C','                IS IT A COMMA?            87187
         BE    STARTSOK                CONTINUE IF SO            87187
         SPACE 2                                                 87187
         LA    R3,1(R8,R3)         NEXT CHAR PAST APPLID(        87187
         B     APPLSCAN                CONTINUE SCAN FOR APPLID( 87187
         SPACE 2                                                 87187
STARTSOK DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(R8,R3)   GO PAST APPLID(                     87187
NEXT     CLI   0(R3),C' '              IS IT A BLANK?            87187
         BNE   RIGHT                   NO.CHECK FOR RIGHT PAREN  87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL   VS2NTSO                 YES. MUST BE TSO          87187
         B     NEXT                    NO. GO TO NEXT CHAR       87187
RIGHT    CLI   0(R3),C')'              NULL APPL NAME?           87187
         BE    APPLSCAN                YES. LOOK FOR VALID       87187
*                                       APPLID(                  87187
         SPACE 2                                                 87187
*       FIND RIGHT PARENTHESIS                                   87187
         SPACE 2                                                 87187
         LR    R6,R3                   ADDRESS POTENTIAL APPLID NAME
         SPACE 2                                                 87187
FNDPAREN DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL VS2NTSO                   YES. MUST BE TSO          87187
         SPACE 2                                                 87187
         CLI   0(R3),C')'              IS THIS RIGHT PAREN.?     87187
         BNE   FNDPAREN                NO,CONTINUE SCAN          87187
         LA    R5,1(,R3)               MINIMUM END               87187
         CR    R5,R4                   END OF DATA               87187
         BE    NAMELENG                YES. CAN CHECK FOR        87187
*                                       APPL NAME                87187
         SPACE 2                                                 87187
         CLI   1(R3),C' '              NO. NEXT CHARACTER MUST   87187
         BE    NAMELENG                 BE BLANK OR COMMA,       87187
         CLI   1(R3),C','               ELSE CONTINUE SCAN FOR   87187
         BNE   APPLSCAN                 VALID APPLID             87187
         SPACE 2                                                 87187
NAMELENG DS    0H                                                87187
         SPACE 2                                                 87187
*       IF THIS POINT REACHED APPLID WITH LEFT AND RT. PAREN FOUND
*        AND IT IS FOLLOWED BY A BLANK OR A COMMA OR NO MORE DATA
         SPACE 2                                                 87187
         SR    R3,R6                   LENGTH OF APPL NAME IN R3 87187
         CH    R3,LAPPLID              IS NAME TOO BIG?          87187
         BNH   EXTRAPPL                NO. EXTRACT APPL NAME     87187
         LR    R3,R6                   YES. CONTINUE SCAN FOR    87187
         B     APPLSCAN                 VALID APPLID(            87187
EXTRAPPL DS    0H                                                87187
         SPACE 2                                                 87187
         BCTR  R3,0                    DECREMENT FOR EXECUTE     87187
         MVC   20(8,R13),BLANK8        CLEAR OUT TO MOVE NAME    87187
         EX    R3,MVCNAME              EXEC MVC WITH CORRECT LENGTH
         B     VS2ISOK                 GO SET GOOD CODE          87187
         SPACE 2                                                 87187
*  LOGON IS FOR TSO                                              87187
VS2NTSO  MVC   20(8,R13),CTSO          MOVE TSO NAME INTO SAVE AREA
         SPACE 2                                                 87187
*  VS2 LOGON SEQUENCE O.K.                                       87187
VS2ISOK  SR    R15,R15                 INDICATE THAT LOGON SEQ   87187
         LM    R0,R12,20(R13)           WAS INTERPRETED OK       87187
         BR    R14                     RETURN TO CALLER          87187
         SPACE 3                                                 87187
BLANK8   DC    CL8' '                  BLANKS FOR NAME           87187
CLOGON   DC    C'LOGON'                                          87187
CTSO     DC    CL8'TSO'                                          87187
CAPPLID  DC    C'APPLID('                                        87187
CAPPL    DC    C'APPL('      SHORT(ER) FORM                      87187
LAPPLID  DC    H'8'                    LENGTH OF APPLID NAME     87187
MVCNAME  MVC   20(0,R13),0(R6)                                   87187
TRANS    TR    0(0,R1),TRTAB2                                    87187
         SPACE 3                                                 87187
TRTAB2   EQU   *                                                 87187
         DC    74C' '         00-49    BLANK OUT CONTROL CHARS   87187
         DC    X'4A'                   CENT OR LEFT ARROW        87187
         DC    C'.<(+|'                                          87187
         DC    X'50'                   AMPERSAND                 87187
         DC    X'515253545556575859'                             87187
         DC    X'5A'                   EXCLAMATION POINT         87187
         DC    C'$*);¬-/'                                        87187
         DC    X'6263646566676869'                               87187
         DC    X'6A'                   VERTICAL LINE (NOT |)     87187
         DC    C',%_>?'                                          87187
         DC    X'707172737475767778'                             87187
         DC    X'79'                   GRAVE ACCENT              87187
         DC    C':#@'                                            87187
         DC    X'7D'                   SINGLE QUOTE              87187
         DC    C'="'                                             87187
         DC    X'80'                                             87187
         DC    C'ABCDEFGHI'            SMALL LETTERS             87187
         DC    X'8A8B8C8D8E8F90'                                 87187
         DC    C'JKLMNOPQR'            SMALL LETTERS             87187
         DC    X'9A9B9C9D9E9FA0'                                 87187
         DC    X'A1'                   TILDE                     87187
         DC    C'STUVWXYZ'             SMALL LETTERS             87187
         DC    X'AAABACADAEAF'                                   87187
         DC    X'B0B1B2B3B4B5B6B7B8B9'                           87187
         DC    X'BABBBCBDBEBF'                                   87187
         DC    X'C0'                   LEFT BRACE                87187
         DC    C'ABCDEFGHI'            CAPITAL LETTERS           87187
         DC    X'CACB'                                           87187
         DC    X'CC'                   HOOK                      87187
         DC    X'CD'                                             87187
         DC    X'CE'                   FORK                      87187
         DC    X'CF'                                             87187
         DC    X'D0'                   RIGHT BRACE               87187
         DC    C'JKLMNOPQR'            CAPITAL LETTERS           87187
         DC    X'DADBDCDDDEDF'                                   87187
         DC    X'E0'                   REVERSE SLANT             87187
         DC    X'E1'                                             87187
         DC    C'STUVWXYZ'             CAPITAL LETTERS           87187
         DC    X'EAEB'                                           87187
         DC    X'EC'                   CHAIR                     87187
         DC    X'EDEEEF'                                         87187
         DC    C'0123456789'                                     87187
         DC    X'FA'                   LONG VERTICAL LINE (NOT   87187
*                                       | OR VERTICAL LINE)      87187
         DC    X'FBFCFDFEFF'                                     87187
         REGEQU ,                                                87187
         END    ,                                                87187
./ ADD NAME=NETOP
VTAM   TITLE 'N E T O P - VTAM PROGRAM OPERATOR'
***********************************************************************
*                                                                     *
*     MODULE NAME: NETOP                                              *
*                                                                     *
*     DESCRIPTIVE NAME: PROGRAM OPERATOR APPLICATION                  *
*                                                                     *
*     FUNCTION: ALLOWS NETWORK OPERATOR CONTROL FROM TERMINALS IN     *
*               THE VTAM NETWORK                                      *
*                                                                     *
*     AUTHOR: MIKE HOLDEN, GOVERNMENT OF ALBERTA, 1977-1979           *
*                                                                     *
*     NOTES:                                                          *
*                                                                     *
*                  (1) A LIST OF TERMINAL NAMES ELIGIBLE TO BE MASTER *
*        TERMINALS CAN BE FOUND AT LABEL 'MATABLE'                    *
*                                                                     *
*                  (2) NETOP LOGS ALL UNSOLICITED MESSAGES AND NON-   *
*        DISPLAY INTERACTIONS TO A SEQUENTIAL DATASET AND SYSOUT 'A'. *
*        EVERY OTHER DAY THE DATASET IS CLEARED, WHILE THE SYSOUT IS  *
*        SPUN OFF EVERY DAY.                                          *
*                                                                     *
*                  (3) NETOP PROC IN PROCLIB IS AS FOLLOWS:           *
*                                                                     *
* //NETOP PROC MA=T260,NAME=NETOP,PRFX=                             ***
* //*******************************************************************
* //*                                                               ***
* //*   PURPOSE:   VTAM NETWORK PROGRAM OPERATOR                    ***
* //*                                                               ***
* //*   PARM FIELD: MASTER VTAM TERMINAL NAME                       ***
* //*            IF PREFIXED BY '$' STARTUP CMDS ARE ISSUED (SYSIN) ***
* //*   (THIS IS THE CASE AT VTAM INITIALIZATION WHEN A MODIFIED    ***
* //*    NETSOL, ATTACHED BY VTAM, ISSUES 'S NETOP,MA=$T26B' )      ***
* //*                                                               ***
* //VTAMON EXEC PGM=&NAME,PARM=&PRFX&MA,DPRTY=(15,11)               ***
* //STEPLIB DD DSN=DPOS.LOADLIB,DISP=SHR <-- AUTH LIB               ***
* //*                                                               ***
* //*******************************************************************
*                                                                     *
*                                                                     *
*                  (4) NETOP APPL DEFINITIONS ARE AS FOLLOWS:         *
*                                                                     *
*  NETOP   APPL  BUFFACT=1,AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP        *
*  NETPPO  APPL  BUFFACT=1,AUTH=(ACQ,PASS,PPO,NVPACE),PRTCT=VTAMCMD   *
*  NETSPO  APPL  BUFFACT=1,AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD   *
*                      THESE ARE FOR TESTING WHEN NETOP IS RUNNING:   *
*  NETOPT  APPL  BUFFACT=1,AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP        *
*  NETSPOT APPL  BUFFACT=1,AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD   *
*                                                                     *
*           ALL CMDS ARE SENT TO VTAM VIA THE SPO ACB WHICH IS ALWAYS *
*        OPEN.  UNSOLICITED MESSAGES ONLY ARE RECEIVED VIA THE PPO    *
*        ACB WHICH IS OPEN WHENEVER THERE IS A MASTER LOGGED ON.  IF  *
*        NOT THESE MESSAGES GO TO THE CONSOLE.                        *
*                                                                     *
*                  (5) HIT PF1 TO DISPLAY THE GENERAL HELP SCREEN,    *
*        THEN AGAIN TO DISPLAY THE PF2 HELP SCREEN.                   *
*                                                                     *
*                  (6) INSTEAD OF 'R 00,YES' FORMAT REPLIES, THE JES2 *
*        ABBREVIATION WORKS - '00YES'                                 *
*                                                                     *
*                  (7) TO OBTAIN MASTER CANDIDATE STATUS ON A NON-    *
*        MASTER TERMINAL ENTER THE 2-DIGIT HOUR OF DAY WITH PF2;      *
*        REPEAT TO TURN OFF MASTER STATUS.  NOTE THAT THIS WILL NOT   *
*        CAUSE THE PPO ACB TO BE OPENED IF IT WAS CLOSED DUE TO NO    *
*        MASTER BEING LOGGED ON, THEREFORE, IN SUCH A SITUATION, ALL  *
*        UNSOLICITED MESSAGES WILL STILL BE ROUTED TO THE CONSOLE.    *
*                                                                     *
*                  (8) NON-VTAM COMMANDS:                             *
*                                                                     *
*            'W' CAUSES WRITE EOF TO VTAMLOG SO THAT SPF BROWSE GETS  *
*        ACCESS TO THE LOG UP TO THE CURRENT TIME.  TO ALLOW FAST     *
*        BROWSING, THIS DATASET IS BLOCKED, SO TO KEEP IT FAIRLY      *
*        CURRENT IT IS CLOSED AND RE-OPENED EVERY 4 LOG PAGES, UNLESS *
*        THE 'W' COMMAND IS USED TO FORCE THIS ACTION.                *
*                                                                     *
*            'K' IS ACCEPTED IN LIEU OF A PA KEY FOR OPERATOR TYPES.  *
*                                                                     *
*            'END' IS ACCEPTED IN LIEU OF PF3.                        *
*                                                                     *
*            'ALL' WITH PF3 CAUSES NETOP TO TERMINATE.                *
*                                                                     *
*            'ROLL'/'NROLL', 'AUTO/NAUTO', 'ECHO/NECHO', 'SOLO/NSOLO',*
*        'LOGD/NLOGD'  ARE PF2 MODE CONTROL KEYWORDS AND ARE          *
*        EXPLAINED IN THE PF2 HELP SCREEN.  THEY CAN BE ABBREVIATED   *
*        TO ANY LENGTH WHILE REMAINING UNAMBIGUOUS.                   *
*                                                                     *
*                  (9) VTAM MESSAGE SUPPRESSION:                      *
*                                                                     *
*        THE INSERTION OF COMMANDS IN REPLY TEXT AND SETTING OF       *
*        DISPLAY CONTROL SWITCHES IS DEPENDANT UPON THE VTAM PARAMETER*
*        'SUPP=NOSUP'  BEING IN FORCE.  ANY SUPPRESSION WILL HAVE A   *
*        DELETERIOUS EFFECT ON NETOP OPERATION.                       *
*                                                                     *
*                 (10) NODE NAMING CONVENTIONS:                       *
*                                                                     *
*        THIS SCHEME HAS BEEN VERY SUCCESSFUL IN OUR NETWORK AND IS   *
*        INCLUDED HERE PURELY AS AN EXAMPLE, SINCE NETOP WILL FUNCTION*
*        WHATEVER THE CONVENTION.  NCP AND APPL NODES ARE NOT APPLIC- *
*        ABLE.  THERE ARE FIVE FIELDS IN A NAME:                      *
*                                                                     *
*              K  lib c tt                                            *
*        WHERE                                                        *
*              K IS THE 3705 id.                                      *
*                                                                     *
*              lib is the 3705 lib.                                   *
*                                                                     *
*              C IS THE RELATIVE HEX CLUSTER NUMBER (0-F)             *
*                                                                     *
*              TT IS THE RELATIVE HEX TERMINAL NUMBER (00-32)         *
*                                                                     *
*        THUS THE 3RD TERMINAL ON THE 2ND CLUSTER ON LINE 0A5 OF      *
*        3705-r        WILL HAVE A NODENAME OF r0a5b03, ATTACHED TO   *
*        CLUSTER r0a5b ON LINE r0a5.  ALL LOCAL TERMINALS ARE NAMED:  *
*                                                                     *
*              Tcuu  WHERE cuu IS THE SUBCHANNEL ADDRESS.             *
*                                                                     *
*                                                                     *
*                 (11) NETOP GENERATED COMMANDS:                      *
*                                                                     *
*        SUBROUTINE RCVVTAM FILTERS ALL OUTPUT FROM VTAM AND IN SOME  *
*        CASES CAUSES VTAM COMMANDS TO BE ISSUED IN RESPONSE, WHILE   *
*        OTHERS CAUSE OUTPUT FORMATS TO BE MODIFIED OR OS COMMANDS    *
*        TO BE ISSUED:                                                *
*                                                                     *
*        MESSAGE                               RESPONSE/ACTION        *
*                                                                     *
*        IST852I (CLUSTER UNAVAIL.)            V NET,INACT,I          *
*        IST209I (INT. REQD. ON CONTACT)       V NET,INACT,I          *
*        IST285,286,413 (DUMPING MESSAGES)     SE  TO SYS. PGMRS.     *
*        IST082I (DISPLAY LINE WITH ALLOC= )   'TSONNNN' CONVERTED TO *
*                                              USERID (ASID).         *
*                                                                     *
*                                                                     *
*                 (12) PF10 CLUSTER ONLY DISPLAY:                     *
*                                                                     *
*        THIS FEATURE IS TRIGGERED BY THE 1ST CHARACTER OF ALL CLUSTER*
*        NODENAMES BEING THE SAME.  THE DEFAULT IS 'C' BUT USE &CLUST *
*        TO SELECT YOUR OWN IF NECESSARY.  WHEN A DISPLAY COMMAND SUCH*
*        AS  'C7A0-5,I' IS ENTERED VIA PF10, ALL TERMINAL INFORMATION *
*        IS OMITTED AND CLUSTER INFORMATION HI-LIGHTED TO DRAW        *
*        ATTENTION TO, IN THIS CASE, DEAD CLUSTERS ON LINES BETWEEN   *
*        L7A0 AND L7A5.                                               *
*                                                                     *
*                                                                     *
*        RESTRICTIONS:                                                *
*                                                                     *
*                   SYSTEMS.     MVS                                  *
*                                                                     *
*                   TERMINALS:   3277-2, 3278-2/3/4                   *
*                                MAX=8 (NUMBER OF ASSEMBLED TICBS)    *
*                                                                     *
*        REGISTER CONVENTIONS:                                        *
*                                                                     *
*        R0,R1      PARAMETER PASSING                                 *
*        R2         @ RPL                                             *
*        R3         @ TICB                                            *
*        R4         @ DA (ISTDPOHD)                                   *
*        R5-R9      WORK REGISTERS (VARIOUS CONTENTS)                 *
*        R10        CODE BASE                                         *
*        R11        DATA BASE 1                                       *
*        R12        DATA BASE 2                                       *
*        R13        SAVE AREA ADDRESS                                 *
*        R14        RETURN ADDRESS, OCCASIONAL WORKREG                *
*        R15        SUBROUTINE ADDRESSES, RETURN CODE, ACTION CODE    *
*                                                                     *
*        DEFINITIONS:                                                 *
*                                                                     *
*        COMMAND -  DATA UNIT ORIGINATING AT A TERMINAL AND DESTINED  *
*                   FOR VTAM. CONTAINS A VTAM OPERATOR COMMAND (VARY, *
*                   MODIFY, DISPLAY, OR REPLY).                       *
*                                                                     *
*        MESSAGE -  A DATA UNIT ORIGINATING IN VTAM DESTINED FOR A    *
*                   REMOTE OPERATOR TERMINAL LOGGED ONTO THE PO.      *
*                                                                     *
*        UNSOLICITED MESSAGE - MESSAGE NOT RELATED TO ANY COMMAND     *
*                   PREVIOUSLY SENT TO VTAM FROM A REMOTE OPERATOR.   *
*                   AN UNSOLICITED MESSAGE IS RECOGNIZED BY THE       *
*                   INDICATOR IN THE MESSAGE HEADER  (SEE POHGEN IN   *
*                   ISTDPOHD DSECT).                                  *
*                                                                     *
*        MASTER TERMINAL - TERMINAL DESIGNATED BY PO TO RECEIVE       *
*                   UNSOLICITED MESSAGES (THESE ARE ALSO SENT TO ALL  *
*                   MASTER CANDIDATES).                               *
*                                                                     *
*                                                                     *
*        PROCESSOR: ASSEMBLER                                         *
*                                                                     *
*        ATTRIBUTES:  NON-REUSABLE                                    *
*                     AC(1)                                           *
*                                                                     *
*       ENTRY: NETOP                                                  *
*                                                                     *
*       LINKAGE: CALL                                                 *
*                                                                     *
*       INPUT: R13: SAVE AREA ADDRESS                                 *
*              R14: RETURN POINT ADDRESS                              *
*              R15: ENTRY POINT ADDRESS                               *
*                                                                     *
*       OUTPUT: ALL REGISTERS RESTORED                                *
*                                                                     *
*       EXIT-NORMAL: BR 14                                            *
*                                                                     *
*       EXIT-ERROR:  ABEND                                            *
*                                                                     *
*                    ABEND CODES:                                     *
*                                                                     *
*                                  1 OPEN FAILURE                     *
*                                  2 CLOSE FAILURE                    *
*                                 10 SETLOGON FAILED                  *
*                                 16 ENVIRONMENT ERROR (FROM LERAD)   *
*                                 20 LOGIC ERROR (FROM LERAD)         *
*                                 23 RECEIVE FAILURE (INBOUND)        *
*                                                                     *
*       EXTERNAL-REFERENCES:  NONE                                    *
*                                                                     *
*       CONTROL BLOCKS: TICB - TERMINAL INFORMATION CONTROL BLOCK     *
*                       ISTDPOHD - MESSAGE BUFFER                     *
*                                                                     *
*       TABLES:  MATABLE - LIST OF TERMINALS AUTHORIZED TO BE MASTER  *
*                TICBPOOL - POOL OF TICBS                             *
*                                                                     *
*       SYSTEM MACROS:                                                *
*                ABEND,WAIT,PUT,WRITE,READ,POST,OPEN,CLOSE,DCB,WTO    *
*                                                                     *
*       VTAM MACROS:                                                  *
*                ACB,RPL,NIB,MODCB,CHECK,EXLST,SETLOGON,OPEN,CLOSE    *
*                OPNDST,CLSDST,SEND,RECEIVE,SENDCMD,RCVCMD            *
*                                                                     *
*                                                                     *
*       RELATIONSHIPS BETWEEN MAINLINE, EXITS AND SUBROUTINES:        *
*                                                                     *
*       CODE SEGMENT   CALLS                                          *
*                                                                     *
*        MAINLINE       SHOWCDS,PRLOG,PUTLOG,IDFIND,                  *
*                       SND3270                                       *
*        ABEXIT         CVHX                                          *
*                                                                     *
*        INBOUND        RCV3270,ATOX                                  *
*        OUTBOUND       IDFIND,RCVVTAM,PUTLOG,SND3270,INBOUND(INLENOK)*
*        LOGON          INT3270,PUTLOG,CLSDST                         *
*        LOSTERM        PUTLOG,MAFIND,CLSDST                          *
*        RELREQ         PUTLOG,MAFIND,CLSDST                          *
*        TPEND          CVHX,PUTLOG                                   *
*        ERROR          PUTLOG                                        *
*                                                                     *
*        SHOWCDS        CVHX                                          *
*        CVHX                                                         *
*        RCVVTAM        TSOUID                                        *
*        RCV3270        INT3270,ATOX,PUTLOG,PRLOG,MAFIND,CLSDST,      *
*                       TSOUID                                        *
*        CLSDST         PUTLOG                                        *
*        ATOX                                                         *
*        MAFIND         IDFIND,PUTLOG                                 *
*        IDFIND                                                       *
*        PUTLOG         PRLOG                                         *
*        PRLOG                                                        *
*        SND3270        INT3270                                       *
*        INT3270                                                      *
*        TSOUID                                                       *
*                                                                     *
***********************************************************************
*
*
         MACRO
&NAME    $XINIT &XBASE=BASE1@,&TBASE=SUBR@,&SA=EXITSA,&RET=RET@,       *
               &DBASE1=DBASE1@,&DBASE2=DBASE2@,&DORG=@DBASE2
         GBLC  &GNAME
&GNAME   SETC  '&NAME'
         DS    0F                 ALIGN
         USING &NAME,&TBASE
&NAME    B     *+16               JUMP PAST CONSTANTS
         DC    CL8'&NAME'         EXIT ID
         DC    A(&DORG-&NAME)     DATA BASE ORIGIN
         AIF   ('&NAME' NE 'ABEXIT').NOSAVE
         SAVE  (14,12)
.NOSAVE  AIF   ('&GNAME' EQ 'ERROR').LBASE  ALREADY SET UP
         L     &DBASE1,&NAME+12   PICK UP DBASE OFFSET
         ALR   &DBASE1,&TBASE     ADD TEMP BASE TO GET ADDRESS
         L     &DBASE2,&DORG      LOAD 2ND DBASE ADDRESS
.LBASE   ANOP
         LR    &XBASE,&TBASE      LOAD EXIT BASE ADDRESS
         DROP  &TBASE
         USING &NAME,&XBASE
.*       ASSUME USINGS FOR DBASES ALREADY DONE IN MAINLINE
         AIF   ('&SA' EQ 'EXITSA' OR '&GNAME' EQ 'TPEND').NSAVE
         LR    &TBASE,SA@         SAVE HIGH SA PTR
.NSAVE   ANOP
         LA    SA@,&SA            LOAD NEW SA PTR
         AIF   ('&SA' EQ 'EXITSA' OR '&GNAME' EQ 'TPEND').SAVRET
         ST    SA@,8(,&TBASE)     CHAIN FORWARD
         ST    &TBASE,BWDPTR      CHAIN BACK
         AIF   ('&GNAME' EQ 'ERROR').SAVRET
         MEXIT
.SAVRET  ANOP
         TM    PL1WD,INUSE        SAVE AREA IN USE?
         BZ    *+24               NO
         $AB   13                 YES - GET A DUMP - THIS WE MUST SEE
         ST    &RET,PL1WD         SAVE RETURN PTR IN PL1 WORD
         OI    PL1WD,INUSE        FLAG SAVE AREA IN USE
         OI    &NAME+12,INUSE     FLAG EXIT IN USE
         MEND
*
         MACRO
&NAME    $XRET &RET=RET@
         GBLC  &GNAME
&NAME    NI    PL1WD,255-INUSE    FLAG SAVE AREA FREE
         NI    &GNAME+12,255-INUSE    FLAG EXIT FREE
         L     &RET,PL1WD         PICK UP RET PTR
         AIF   ('&GNAME' NE 'ERROR').RET
         L     SA@,BWDPTR         RELOAD CALLER'S SA PTR
         XC    FWDPTR,FWDPTR      ZERO CALLER'S LOW SA PTR
.RET     ANOP
         BR    &RET               RETURN
         MEND
*
         MACRO
&NAME    $XCTL &LABEL,&SUBNAME,&XBASE=BASE1@
         GBLC  &GNAME
&NAME    NI    &GNAME+12,255-INUSE   FLAG OLD EXIT FREE
         L     &XBASE,=A(&SUBNAME)   LOAD NEW EXIT BASE ADDRESS
         USING &SUBNAME,&XBASE       ESTABLISH NEW EXIT ADDRESSING
         OI    &SUBNAME+12,INUSE     FLAG NEW EXIT IN USE
         B     &LABEL                GO TO NEW EXIT
         USING &GNAME,&XBASE         RE-ESTABLISH OLD EXIT ADDRESSING
         MEND
*
         MACRO
&NAME    $CALL &SUBR,&PARM,&LEN,&LPARM
         LCLC  &NAM,&SUBNAM,&REG
         AIF   (K'&PARM GT 0 AND '&PARM' EQ '&LEN' OR                  *
               '&LEN' EQ 'R1' OR '&LEN' EQ '1' OR                      *
               '&LEN' EQ '(PARM@)').MERR
&NAM     SETC  '&NAME'
         AIF   (K'&PARM EQ 0).NOPARM
         AIF   ('&PARM'(1,1) NE '(').NOTREG
         AIF   ('&PARM' EQ '(PARM@)').NOLPARM
&REG     SETC  '&PARM'(2,K'&PARM-2)
&NAM     LR    PARM@,&REG     PICK UP PARM
         AGO   .NAMRST
.MERR    MNOTE 4,'PARM=&PARM WITH LEN=&LEN WILL CAUSE EXECUTION ERRORS'
         MEXIT
.NOTREG  ANOP
         AIF   ('&PARM' EQ '0').ZPARM
&NAM     LA    PARM@,&PARM    PICK UP PARM
         AGO   .NAMRST
.ZPARM   ANOP
&NAM     SR    PARM@,PARM@    SET PARM
         AGO   .NAMRST
.NOPARM  AIF   (K'&LPARM EQ 0).NOLPARM
&NAM     L     PARM@,&LPARM   PICK UP LOAD PARM
.NAMRST  ANOP
&NAM     SETC  ''
.NOLPARM ANOP
         AIF   (K'&LEN EQ 0).NOLEN
         AIF   ('&LEN'(1,1) NE '(').NOTLREG
&REG     SETC  '&LEN'(2,K'&LEN-2)
         AIF   ('&REG'(1,2) EQ 'WK').LENOK
         AIF   ('&REG' EQ 'SUBR@').LENCHG
&NAM     LR    SUBR@,&REG     COPY LENGTH
         AGO   .LENCHG
.NOTLREG ANOP
&REG     SETC  '&LEN'
         AIF   ('&LEN'(1,1) NE '*').NOTAST
&REG     SETC  'L''&PARM'.'&LEN'(2,K'&LEN-1)
.NOTAST  ANOP
         LA    SUBR@,&REG     LOAD LENGTH
.LENCHG  ANOP
&NAM     SETC  ''
&REG     SETC  'SUBR@'
.LENOK   ANOP
&NAM     SLL   &REG,24        SHIFT TO HI END
         OR    PARM@,&REG     OR LENGTH INTO PARM
&NAM     SETC  ''
.NOLEN   ANOP
&SUBNAM  SETC  '=A(&SUBR)'
&NAM     L     SUBR@,&SUBNAM PICK UP SUBR EP
         BALR  RET@,SUBR@     GO TO SUBROUTINE
         MEND
*
         MACRO
&NAME    $SINIT &SARET=
.*
.*          SARET=(LABEL1,LABEL2) IS USED AS FOLLOWS:
.*
.*       LABEL1 IS USED AS THE TARGET FOR SAVING RETURN AND BASE REGS,
.*       SPACE BEING RESERVED FOR THESE AT A SUSEQUENT ENTRY POINT.
.*       IF LABEL2 IS CODED IT IS USED AT THE NEXT ENTRY POINT TO
.*       BYPASS CODE AFTER THE BASE REG HAS BEEN UPDATED DURING FALL
.*       THROUGH, THE NORMAL MULTI-EP ACTION.
.*
         GBLC  &SUBNAME(32),&JUMP
         GBLB  &MULTEP
         GBLA  &SUB#
         LCLC  &SUBNAM
         LCLA  &SKIP
&SKIP    SETA  20
         AIF   (&MULTEP).MULTGO
         AIF   (K'&SARET EQ 0).NOMULT
&SKIP    SETA  12
&MULTEP  SETB  1
         AIF   (K'&SARET(2) EQ 0).NOMULT
&JUMP    SETC  '&SARET(2)'     JUMP LABEL FOR FALL THRU AT NEXT $SINIT
         AGO   .NOMULT
.MULTGO  AIF   (K'&SARET GT 0).MULTON
&MULTEP  SETB  0
         AGO   .MULTOK
.MULTON  ANOP
&SKIP    SETA  12
.MULTOK  ANOP
         AIF   (K'&JUMP GT 0).NOCNOP
         CNOP  0,4                  FULLWORD ALIGN
.NOCNOP  ANOP
         LA    BASE1@,&NAME
         USING &NAME,BASE1@         BASE USAGE
         AIF   (K'&JUMP GT 0).JUMP
&JUMP    SETC  '*+18+&SKIP'
.JUMP    ANOP
         B     &JUMP
&JUMP    SETC  ''
.NOMULT  ANOP
         DS    0F                   ALIGN
         USING &NAME,SUBR@          TEMP BASE
&SUB#    SETA  &SUB#+1
&SUBNAME(&SUB#) SETC '&NAME'
&SUBNAM  SETC '&SARET(1)'
&NAME    B     *+&SKIP              JUMP CONSTANTS
         DC    CL8'&NAME'           SUBR ID
         AIF   (K'&SARET GT 0).NOSA
         DS    2F                   RET PTR/BASE REG SAVE AREA
&SUBNAM  SETC  '&SUBNAME(&SUB#)'
.NOSA    ANOP
         ST    RET@,&SUBNAM+12      SAVE RET PTR
         ST    BASE1@,&SUBNAM+16    SAVE CALLERS BASE
         OI    &SUBNAM+16,INUSE     FLAG SUBR IN USER
         LR    BASE1@,SUBR@         LOAD LOCAL SUBR BASE
         DROP  SUBR@                RESET ASSEMBLER
         USING &NAME,BASE1@         BASE USAGE
         MEND
*
         MACRO
&NAME    $SRET
         GBLC  &SUBNAME(32)
         GBLA  &SUB#
         LCLC  &SUBNAM
&SUBNAM  SETC  '&SUBNAME(&SUB#)'
&NAME    L     RET@,&SUBNAM+12      PICK UP RET PTR
         NI    &SUBNAM+16,255-INUSE RESET INUSE FLAG
         L     BASE1@,&SUBNAM+16    RESTORE CALLERS BASE
         BR    RET@                 RETURN
         MEND
*
         MACRO
&NAME    $AB   &ABCD,&NODUMP
         LCLC  &REG,&DUMP
&REG     SETC  '(1)'
&NAME    STM   R0,R1,ABREGS   SAVE REGS CLOBBERED BY ABEND MACRO
         AIF   ('&ABCD'(1,1) EQ '(').REGFMT
         LA    R1,&ABCD       LOAD USER ABEND CODE
         AGO   .CHKDMP
.REGFMT  ANOP
&REG     SETC  '&ABCD'
.CHKDMP  AIF   ('&NODUMP' EQ 'NODUMP').NODUMP
         ABEND &REG,DUMP
         MEXIT
.NODUMP  ANOP
         ABEND &REG
         MEND
*
         MACRO
&NAME    $MATAB
         LCLA  &MALEN,&I
&I       SETA  1
&NAME    DS    0F             MASTER CANDIDATE TABLE
.MATLOOP ANOP
&MALEN   SETA  K'&SYSLIST(&I)
         DC    AL1(&MALEN),C'&SYSLIST(&I)'
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).MATLOOP
         MEND
*
         MACRO
         $HELPF2
         LCLC  &N,&P
         LCLA  &I
*
*        SET PF2 KEYWORD INTENSITIES TO REFLECT MODES IN FORCE
*
.HLOOP   ANOP
&I       SETA  &I+1
&P       SETC  '&SYSLIST(&I)'(1,1)
&N       SETC  '&P.Z'
         MVI   HELP&N,X'60'              INITIALIZE
         MVI   HELP&P,X'60'               AS LO
         TM    TIFLAGS2,TIF2&SYSLIST(&I) IF MODE NOT SET,
         BO    *+12
         MVI   HELP&N,X'E8'               THEN SET NEGATIVE TO HI
         B     *+8
         MVI   HELP&P,X'E8'               ELSE SET POSITIVE TO HI
         SPACE
         AIF   (&I LT N'&SYSLIST).HLOOP
         MEND
*
         MACRO
         $3270
*
*        3270 ORDERS, PF/PA KEYS, AND ATTRIBUTE CODES
*
         GBLC  &L(24)
&L(1)    SETC  '4040'
&L(2)    SETC  'C150'
&L(3)    SETC  'C260'
&L(4)    SETC  'C3F0'
&L(5)    SETC  'C540'
&L(6)    SETC  'C650'
&L(7)    SETC  'C760'
&L(8)    SETC  'C8F0'
&L(9)    SETC  '4A40'
&L(10)   SETC  '4B50'
&L(11)   SETC  '4C60'
&L(12)   SETC  '4DF0'
&L(13)   SETC  '4F40'
&L(14)   SETC  '5050'
&L(15)   SETC  'D160'
&L(16)   SETC  'D2F0'
&L(17)   SETC  'D440'
&L(18)   SETC  'D550'
&L(19)   SETC  'D660'
&L(20)   SETC  'D7F0'
&L(21)   SETC  'D940'
&L(22)   SETC  '5A50'
&L(23)   SETC  '5B60'
&L(24)   SETC  '5CF0'
SF       EQU   X'1D'          START FIELD
SBA      EQU   X'11'          SET BUFFER ADDRESS
IC       EQU   X'13'          INSERT CURSOR
PT       EQU   X'05'          PROGRAM TAB
RA       EQU   X'3C'          REPEAT TO ADDRESS
EUA      EQU   X'12'          ERASE UNPROTECTED TO ADDRESS
ENTER    EQU   X'7D'
XENTER   EQU   X'0D'
PF1      EQU   X'F1'
XPF1     EQU   X'01'
PF2      EQU   X'F2'
XPF2     EQU   X'02'
PF3      EQU   X'F3'
XPF3     EQU   X'03'
PF4      EQU   X'F4'
PF5      EQU   X'F5'
PF6      EQU   X'F6'
PF7      EQU   X'F7'
PF8      EQU   X'F8'
PF9      EQU   X'F9'
PF10     EQU   X'7A'
PF11     EQU   X'7B'
PF12     EQU   X'7C'
PA1      EQU   X'6C'
PA2      EQU   X'6E'
PA3      EQU   X'6B'
CLEAR    EQU   X'6D'
TESTREQ  EQU   X'F0'
         MEND
*
         GBLC  &L(24)         3270 BUFFER LINE ADDRESSES (COL 1)
         LCLC  &SENDLST       LIST OF TSO VTAM SYSTEM PGMRS. FOR SENDS
         LCLC  &CLUST         STARTING CHARACTER OF ALL CLUSTERS
         LCLC  &REL           RELEASE AND LEVEL (R.L)
         LCLB  &MAROLL        ROLL/NROLL MODE FOR INITIAL MASTER
&SENDLST SETC  'EP91853,AL88221'
&CLUST   SETC  'C'
&REL     SETC  '2.1'
&MAROLL  SETB  1              ROLL
*
         TITLE  'N E T O P - MISC. DSECTS'
* TERMINAL INFORMATION CONTROL BLOCK (TICB)
*
TICB     DSECT
TINDICS  DS    0CL4               INDICATORS
TISTATUS DS    XL1                STATUS BYTE
TISALLOC EQU   B'10000000'  80    ALLOCATION BIT
TISACT   EQU   B'01000000'  40    TERMINAL ACTIVE
TISMCAND EQU   B'00100000'  20    MASTER CANDIDATE
TISMA    EQU   B'00010000'  10    MASTER TERMINAL
TISUID   EQU   B'00001000'  08    USERID QUERY
TISTACK  EQU   B'00000100'  04    MESSAGES ARE STACKED AWAITING ROLL
TISREPLY EQU   B'00000010'  02    REPLY COMMAND ISSUED
TISNOMOR EQU   B'00000001'  01    NO MORE TICBS
*
TIFLAGS  DS    XL1
TIFDSP   EQU   B'10000000'  80    DISPLAY CMD ENTERED
TIFVLOG  EQU   B'01000000'  40    PF7 (VARY ,LOGON)
TIFCLUST EQU   B'00100000'  20    PF10 (DISPLAY, CLUSTER ONLY STATUS)
TIFDSP11 EQU   B'00010000'  10    PF11 (DISPLAY, AND LOG)
TIFHELP  EQU   B'00001000'  08    PF1 (HELP) ENTERED
TIFUNSOL EQU   B'00000100'  04    LAST MSG DISPLAYED IS UNSOL
TIFWTROL EQU   B'00000010'  02    WAIT FOR ROLL CONDITION (SCREEN FULL)
TIFNAUT  EQU   B'00000001'  01    NO-AUTO RE-ENTRY OF EXPANDED CMD
*
TIFLAGS2 DS    XL1                PF2 CONTROL FLAGS
TIF2ROLL EQU   B'10000000'  80    ROLL FLAG - ON=ROLL SCREEN
TIF2AUTO EQU   B'01000000'  40    AUTO FLAG - ON=NO AUTO CMDS
TIF2ECHO EQU   B'00100000'  20    ECHO FLAG - ON=NO ECHOING TO TERMINAL
TIF2SOLO EQU   B'00010000'  10    SOLO FLAG - ON=SOLICITED MSGS ONLY
TIF2LOGD EQU   B'00001000'  08    LOGD FLAG - ON=LOG DISPLAY CMDS
*
TIFLAGS3 DS    XL1            UNUSED SO FAR
*
TINAMLEN DS    H                  LENGTH TERMINAL NAME
TINAME   DS    CL8                TERMINAL NAME
TIMSGID  DS    0XL2               MESSAGE ID
TID      DS    XL1                 TERMINAL ID
TIMSGSEQ DS    XL1                 MESSAGE SEQUENCE NUMBER
TICMDLEN DS    H                  LENGTH LAST COMMAND ENTERED
TICMD    DS    CL40               LAST COMMAND ENTERED
TICOPYL  EQU   *-TICB             FOR COPY TO DUMTICB DURING ECHO
TILNCT   DS    H                  SCREEN LINE COUNT
TIDSPCT  DS    H                  OUTSTANDING DISPLAY COUNT
TIUNADDR DS    XL2                3270 BUFADD OF LAST UNSOL MSG
TIABRLEN DS    H                  LENGTH LAST ABBREV. COMMAND ENTERED
TIABR    DS    CL30               LAST ABBREV. COMMAND ENTERED
TICID    DS    F                  TERMINAL CID
TIHEAD@  DS    F                  STACK HEAD POINTER
TITAIL@  DS    F                  STACK TAIL POINTER
TISTKCT  DS    PL2                STACK ELEMENT COUNT
         DS    0F                 GUARANTEE L'TICB = N FULLWORDS
TICBLEN  EQU   ((*-TICB)+31)/32*32 L'TICB MULTIPLE OF 32 BYTES
         SPACE 5
*
* DATA AREA
*
         ISTDPOHD
         ORG   POHID
POHTID   DS    XL1                TERMINAL ID
POHMSQ   DS    XL1                MESSAGE SEQUENCE NUMBER
POHLEN   EQU   *-ISTDPOHD         LENGTH OF PO HEADER
DATX     DS    CL124              MESSAGE TEXT
DALEN    EQU   *-ISTDPOHD         LENGTH OF DATA AREA
DATXLEN  EQU   DALEN-POHLEN       LENGTH OF TEXT AREA
*
*        VTAM MESSAGE FIELDS
*
         ORG   DATX+3         VTAM MESSAGE NUMBER
DAMSG#   DS    CL3
         ORG   DATX+9         VTAM NODE NAME
DAMSGNOD DS    CL8
         ORG   DATX+17        RESPONSE VERB (ACCEPTED)
DAMSGFAI DS    CL6
         ORG   DATX+18        RESPONSE VERB (FAILED, IGNORED)
DAMSGRSP DS    CL6
DAM80TXL EQU   16             IST080I 'NODENAME STATUS'  FIELD LENGTH
DAM80NXL EQU   22             OFFSET OF ONE  'NODENAME STATUS'  TO NEXT
         ORG   DATX+18        IST082I DEVICE TYPE
DAM82DEV DS    CL5
         ORG   DATX+35        IST082I ALLOC APPLID
DAM82ALC DS    CL8
         ORG   DATX+63        IST082I SIMLOGON APPLID
DAM82SIM DS    CL8
DA342RC  EQU   DATX+93,2      IST342I RETURN CODE
DA400APL EQU   DATX+44,8      IST400I APPLID
DA804APL EQU   DATX+35,8      IST804I APPLID
DA805APL EQU   DATX+33,8      IST805I APPLID
*
*        VTAM ERROR MESSAGE FIELDS
*
         ORG   DATX+17        IST285I/6I 370X NODE NAME
DA285NOD DS    CL8
         ORG   DATX+26        IST852I CLUSTER NODE NAME
DA852NOD DS    CL8
         ORG   DATX+37        NCP BTU COMMAND
DABTUCMD DS    CL4
         ORG   DATX+57        EG: INTERVENTION REQD - BSC STATUS
DABSCST1 DS    CL2,CL3            40 -
DABSCST2 DS    CL2                     50
         ORG   DATX+61        EG: PERM. I/O ERROR - NCP RESPONSE
DANCPRS1 DS    CL2,CL3            AB -
DANCPRS2 DS    CL2                     80   (TIMEOUT)
*
STKEL    DSECT                STACK ELEMENT
STKNXEL  DS    F              NEXT STACK ELEMENT POINTER
STKELEN  DS    H              STACK ELEMENT LENGTH
STKDATA  DS    CL(DALEN)      STACK ELEMENT DATA (MAX LENGTH)
*
* PARAMETER LIST FOR TPEND EXIT
*
TPENDPRM DSECT
TPACB@   DS    F                  @ ACBTERMS
TPREASON DS    F                  REASON CODE
*
* PARAMETER LIST FOR LOGON AND RELREQ EXITS
*
LOGONPRM DSECT
LGNACB@  DS    F                  @ ACBTERMS
TNAME@   DS    F                  @ TERMINAL NAME
         DS    F                  RESERVED
LGNMSGLN DS    F                  LENGTH OF LOGON MESSAGE
*
* PARAMETER LIST FOR LOSTERM EXIT
*
LOSTPARM DSECT                    FOR LOSTERM AND RESP EXITS
LOSTACB  DS    F                  @ ACBTERMS
LOSTCID  DS    F                  CID OF TERMINAL
LOSTUSER DS    F                  USER FIELD INFO - @ TICB
LOSTCODE DS    F                  REASON CODE (UNUSED FOR RESP EXIT)
RESPRPL  DS    F                  RESPONSE EXIT READ-ONLY RPL
*
SA       DSECT                    SAVE AREA DSECT
PL1WD    DS    F                  RESERVED
INUSE    EQU   X'80'              IN USE FLAG
BWDPTR   DS    F                  @ CALLER'S SAVE AREA
FWDPTR   DS    F                  @ CALLEE'S SAVE AREA
RETURN   DS    F                  CALLER'S RETURN ADDRESS
ENTRY    DS    F                  CALLEE'S ENTRY ADDRESS
         PRINT ON
         IFGACB AM=VTAM
         ISTUSFBC
         IFGRPL AM=VTAM
         ISTDNIB
         IHASDWA
         IEFZB4D2             DYNALLOC EQUATES
         IKJTSB   EXT=YES,LIST=YES
         IKTTCAST
         IHAASCB
         CVT
         PRINT ON
         TITLE 'N E T O P - MISC. EQUATES'
* REGISTER EQUATES
*
         $REGS
         $3270
*
*        NOTE:   SYMBOL @ IS USED TO DENOTE 'ADDRESS OF' OR 'POINTER'.
*              IT IS USED AS A SUFFIX IN REGISTER EQUATES AND AS A
*              PREFIX IN ADCON SYMBOLS.
*
ACTCD    EQU   R0                 ACTION CODE FROM VTAM
PARM@    EQU   R1                 POINTER TO PARAMETER LIST
RPL@     EQU   R2                 RPL ADDRESS REGISTER
TICB@    EQU   R3                 TICB ADDRESS REGISTER
DA@      EQU   R4                 DATA AREA @ (INBOUND,OUTBOUND)
NIB@     EQU   R4                 NIB @ (MAINLINE,LOGON,RELREQ)
CID      EQU   R4                 TERMINAL CID (LOSTERM)
MSGLEN   EQU   R5                 MESSAGE LENGTH (OUTBOUND)
WKA      EQU   R6                 WORK REGISTER
WKB      EQU   R7                 WORK REGISTER
ACB@     EQU   R8                 ACB @
OUTX     EQU   R8                 SNDLOOP INDEX (SND3270)
WKC      EQU   R8                 OCCASIONAL WORK REGISTER
STKEL@   EQU   R9                 STACK ELEMENT ADDRESS
LOG@     EQU   R9                 RECORD PTR IN LOG BUFFER
BASE1@   EQU   R10                1ST CODE BASE REG
DBASE1@  EQU   R11                1ST DATA BASE REG
DBASE2@  EQU   R12                2ND DATA BASE REG
SA@      EQU   R13                SA PTR
RET@     EQU   R14                RETURN ADDRESS
WKD      EQU   R14                OCCASIONAL WORK REGISTER
SUBR@    EQU   R15                SUBROUTINE ENTRY ADDRESS
RTNCD    EQU   R15                RETURN CODE
*
* RCV3270 RETURN CODES (FOR INBOUND)
*
RCVCMDOK EQU   0                  COMMAND OK
RCVCMDRS EQU   4                  COMMAND OK AND RESPONSE MSG
RCVRMSG  EQU   8                  RESPONSE MSG
RCVNRMSG EQU   12                 NO RESPONSE MSG
RCVCLDST EQU   12                 CLSDST ISSUED FOR TERMINAL
RCVCLOSD EQU   16                 CLOSEDOWN ISSUED FOR NETOP
*
         TITLE 'N E T O P - MAINLINE'
*
***********************************************************************
*                                                                     *
* INITIAL HOUSEKEEPING - ENTRY CODE FOR OS/VS.                        *
* SAVE REGISTERS, ESTABLISH ADDRESSABILITY, SET UP SAVE AREA.         *
*                                                                     *
***********************************************************************
*
         $START BASENO=1,CSECT=NETOP,ADCONS=@DBASE2,                   *
               SA=MAINSA,SAUSING=NO
         USING SA,SA@             SAVE AREA DSECT ADDRESSING
         L     DBASE1@,A@DBASE2   SET DATA BASE 1
         USING @DBASE2,DBASE1@    DATA ADDRESSING (1)
         L     DBASE2@,@DBASE2    SET DATA BASE 2
         USING @DBASE2+4096,DBASE2@  DATA ADDRESSING (2)
         USING TICB,TICB@         TICB DSECT ADDRESSING
         USING IFGRPL,RPL@        RPL DSECT ADDRESSING
         LA    ACB@,ACBTERMS      SET BASE FOR ACB
         USING IFGACB,ACB@        ACB DSECT ADDRESSING
         L     PARM@,0(,PARM@)    PARM PTR
         SR    WKA,WKA
         ICM   WKA,3,0(PARM@)     PICK UP PARM LENGTH
         BZ    SETSTAE            IF ZERO, FORGET IT
         CLI   2(PARM@),C'A'      SPECIAL CHAR?
         BNL   NOSPEC             NO
         LA    PARM@,1(,PARM@)    YES - JUMP OVER
         BCTR  WKA,0               AND DECR LEN
         CLI   1(PARM@),C'$'      STARTUP COMMANDS?
         BNE   NOSPEC             NO
         OI    POFLAGS,POFOSCMD   YES - FLAG IT
NOSPEC   LA    NIB@,SIMNIB        SET POINTER TO NIB
         LA    WKB,8              IF > 8,
         CR    WKA,WKB             USE 8
         BNH   *+6
         LR    WKA,WKB
         BCTR  WKA,0              DECR FOR EX
         EX    WKA,MVPARM         MOVE PARM TO NIB
*
***********************************************************************
*        SET UP ESTAE ENVIRONMENT                                     *
***********************************************************************
*
SETSTAE  ESTAE ABEXIT,ASYNCH=YES,TERM=YES
*
***********************************************************************
*                                                                     *
* OPEN THE ACB FOR TERMINALS. OPENING THIS ACB FIRST WILL ALLOW THE   *
* PO TO SIMLOGON A MASTER BEFORE ACTIVATING THE PRIMARY PO INTERFACE. *
* NON MASTERS MAY LOGON  AND USE THE SECONDARY INTERFACE AT ANY TIME. *
*                                                                     *
***********************************************************************
*
OPENTCNT LA    R3,(2*60)/15       2 MIN TIME LIMIT FOR OPEN LOOP
         MVC   NTP06TYP,=C'TERMINALS'
OPENT    OPEN  ((ACB@))           OPEN THE ACB FOR TERMINALS
         LTR   R2,RTNCD           CHECK AND SAVE RETURN CODE
         BZ    LOGINIT            GO OPEN LOG IF SUCCESSFUL
*
* OPEN DID NOT SUCCEED: CHECK ERROR TYPE
*
         CLI   ACBERFLG,ACBONVRT  STORAGE SHORTAGE?
         BE    OPENT              YES - RETRY
         CLI   ACBERFLG,ACBOAPAA  OPENED ALREADY?
         BNE   LOGINIT            NO
        WTO    MF=(E,NTP04MSG)
         B     MAINRET            YES - WTO AND TERMINATE
*
***********************************************************************
*        INITIALIZE LOG                                               *
***********************************************************************
*
LOGINIT  TIME
         STM   R0,R1,STTIME      STORE TIME AND DATE, THEN
         $CALL PRLOG              ALLOCATE AND INITIALIZE LOG
*
OPENTCHK LTR   WKA,R2             CHECK OPEN TERMINAL ACB RETURN CODE
         BZ    RCVI               BRANCH IF SUCCESSFUL
         $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP06MSG    INFORM OPERATOR OF OPEN FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         CLI   ACBERFLG,ACBOAPNM  APPLID NOT YET ACTIVATED?
         BE    RETRYMSG           YES => WRITE RETRY MSG
         CLI   ACBERFLG,ACBOVINA  VTAM NOT YET ACTIVE?
         BNE   MAINRET            NO  => TERMINATE NETOP
RETRYMSG $CALL PUTLOG,NTP09MSG     WRITE RETRYING MSG,
         STIMER WAIT,BINTVL=OPNDLAY WAIT 15 SECS
         BCT   R3,OPENT              THEN RETRY FOR 2 MINUTES
         WTOR  MF=(E,NTP05MSG)    WRITE RETRY PROMPT
         WAIT  1,ECB=ECBMAIN      WAIT FOR REPLY
         OI    TBUF,C' '          FOLD
         CLI   TBUF,C'U'          CONTINUE?
         BNE   MAINRET            NO
         LA    R3,1               YES - SET LOOP COUNT
         ST    R3,OPNDLAY          AND NULLIFY STIMER DELAY
         B     OPENT              GO RETRY OPEN
         SPACE 3
*
***********************************************************************
* ISSUE RECEIVE MACRO TO START INPUT FROM TERMINALS. SPECIFY INBOUND  *
* AS THE EXIT TO BE SCHEDULED ON COMPLETION.                          *
***********************************************************************
*
RCVI     RECEIVE RPL=RCVRPL       GET 1ST INPUT MESSAGE
         LTR   RTNCD,RTNCD        OK?
         BZ    OPENSPO            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVI                THEN RETRY
         $AB   23                 ELSE ABEND - CANT GO ON IF CANT RCV..
*
***********************************************************************
*        OPEN THE SPO ACB                                             *
***********************************************************************
*
OPENSPO  L     ACB@,@ACBSPO       PICK UP SPO ACB PTR
         OPEN  ((ACB@))           OPEN THE SPO ACB
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    RCVCMDI            BRANCH IF SUCCESSFUL
*
* OPEN FAILED - INFORM OPERATOR AND ABEND.
*
         MVC   NTP06TYP(3),=C'SPO'
OPENFAIL $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP06MSG    INFORM OPERATOR OF OPEN FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         SR    RTNCD,RTNCD
         IC    RTNCD,ACBERFLG     SET ACB ERROR IN REASON CODE
         $AB   1                  TERMINATE NETOP
*
***********************************************************************
*   START INPUT FROM VTAM. ISSUE RCVCMD SPECIFYING THE EXIT ROUTINE   *
* OUTBOUND FOR ALL ACBSPO SENDCMDS.                                   *
***********************************************************************
*
RCVCMDI  RCVCMD RPL=SENDRPL       GET 1ST OUTGOING MESSAGE
         LTR   RTNCD,RTNCD        OK?
         BZ    CMANDO             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDI             THEN RETRY
*
***********************************************************************
*        ISSUE ANY STARTUP COMMANDS, IF REQUIRED / CHECK TSO TEST JOB *
***********************************************************************
*
CMANDO   TM    POFLAGS,POFOSCMD PRFX=# IN START CMD?
         BZ    TESTCHK        NO
         NI    POFLAGS,255-POFOSCMD YES - RESET FLAG AND
         LINK  EP=CMANDO,PARAM=NULL  ISSUE ANY STARTUP CMDS
*
TESTCHK  L     WKA,X'21C'     LOAD TCB PTR
         TM    20(WKA),X'04'  RUNNING UNDER TSO TEST?
         BZ    STARTLGN       NO
         OI    POSTATUS,POSTEST YES - FLAG TO AVOID 047 ABENDS
*
***********************************************************************
* START LOGONS SO THAT PO CAN OBTAIN TERMINALS, IN PARTICULAR, THE    *
* MASTER TERMINAL IT NEEDS TO BECOME A PPO. WAIT FOR THE MASTER       *
* TERMINAL TO BE LOGGED ON. WHEN IT IS, TELL OPERATOR WHAT TERMINAL   *
* IT IS.  IF PARM FLD PRESENT ASSUME IT IS MASTER TERMINAL NAME AND   *
* ISSUE A SIMLOGON TO DRIVE THE LOGON EXIT FOR THAT TERMINAL.         *
***********************************************************************
*
STARTLGN LA    RPL@,PRIMARPL
         SETLOGON OPTCD=START,    START LOGONS                         *
               ACB=ACBTERMS,                                           *
               RPL=(RPL@)
         LTR   RTNCD,RTNCD        OK?
         BZ    SETLGNOK           YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    STARTLGN            THEN RETRY
         $AB   10                  ELSE ABEND
*
*              TELL OPERATOR WE ARE WAITING FOR A MASTER TERMINAL.
*
SETLGNOK $CALL PUTLOG,NTP00MSG
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         CLI   NIBSYM,C' '        VALID TERMINAL NAME?
         BE    NOPARM             NO
*
*              AQUIRE MASTER SPECIFIED IN PARM VIA A LOGON EXIT.
*
SIMLOG   SIMLOGON RPL=(RPL@),     SIMULATE MASTER LOGON                *
               NIB=(NIB@),                                             *
               OPTCD=(SYN,CONALL,Q,RELRQ)
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITMAIN           YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SIMLOG              THEN RETRY
*             ELSE TELL OPERATOR PARM DRIVEN MASTER LOGON UNSUCCESSFUL
NOPARM   MVC   NTP11NOD,NIBSYM    MOVE NAME INTO MESSAGE
         $CALL PUTLOG,NTP11MSG
*             WAIT FOR MASTER TERMINAL TO BE LOGGED ON
WAITMAIN XC    ECBMAIN,ECBMAIN  CLEAR ECB
         WAIT  1,ECB=ECBMAIN
         CLI   ECBMAIN+3,0    CLOSE DOWN?
         BE    CLOSNTP
         CLI   ECBMAIN+3,1    OPEN PPO ACB?
         BE    OPENPPO
         CLI   ECBMAIN+3,2    CLOSE PPO ACB?
         BE    CLOSPPO
         $AB   0              IF YOU DROP TO HERE YOU HAVE PROBLEMS...
         DROP  NIB@
*
***********************************************************************
*                                                                     *
* OPEN ACB FOR COMMUNICATION WITH VTAM NETWORK OPERATOR FACILITIES    *
*                                                                     *
***********************************************************************
*
OPENPPO  L     ACB@,@ACBPPO       SET BASE FOR ACB
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         OPEN  ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE, AND SAVE IT
         BZ    OPENPPOK           BRANCH IF SUCCESSFUL
*
* OPEN NOT SUCCESSFUL - CHECK FOR CONDITIONS
*
         CLI   ACBERFLG,ACBONVRT  STORAGE SHORTAGE?
         BE    OPENPPO            YES - RETRY
         CLI   ACBERFLG,ACBRNOOF  PPO OPENED ALREADY?
         BE    SPONLY             YES
         CLI   ACBERFLG,ACBOAPAA  THIS APPLID OPENED ALREADY?
         BNE   OPENPPFL           NO
SPONLY  WTO    MF=(E,NTP03MSG)    YES - ONLY SPO SERVICES AVAILABLE
         B     WAITMAIN           WAIT FOR NEXT POST
*
* OPEN FAILED - INFORM OPERATOR AND TERMINATE ABNORMALLY.
*
OPENPPFL MVC   NTP06TYP(3),=C'PPO'
         B     OPENFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
*              TELL OPERATOR NAME OF MASTER TERMINAL
*
OPENPPOK $CALL PUTLOG,NTP01MSG    OUTPUT NAME OF MASTER
*
***********************************************************************
*   ISSUE RCVCMD SPECIFYING THE EXIT ROUTINE OUTBOUND FOR ALL PPO MSGS*
***********************************************************************
*
         LA    RPL@,PRIMARPL     RPL PTR
         MVI   RPLACTIV,0        RESET IN CASE NOT 1ST TIME THRU HERE
*                                VTAM DOESNT CLEAR OUTSTANDING RPL WHEN
*                                ACBPPO IS CLOSED!!
RCVCMDP  RCVCMD RPL=(RPL@),                                            *
               ACB=(ACB@),                                             *
               AREA=PRIMADA,                                           *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITMAIN           YES - WAIT FOR NEXT POST
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDP             THEN RETRY
         B     WAITMAIN           WAIT FOR NEXT POST
*
* INDICATE PO IS CLOSING DOWN
*
CLOSNTP  OI    POSTATUS,POSCLSDN  SET CLOSEDOWN FLAG
CLSIDLKP $CALL IDFIND,1       BUILD LIST ALL ACTIVE TICBS
         LTR   RTNCD,RTNCD    FIND ANY?
         BNZ   CLOSPPO        NO - FORGET CLOSEDOWN MSG TO TERMINALS
         LA    DA@,CLOSM      SET UP PHONEY ISTDPOHD BASE
         LA    MSGLEN,CLOSML  SET LENGTH
         LA    RPL@,DISCRPL   SET RPL PTR
         $CALL SND3270        SEND CLOSEDOWN MSG TO ALL TERMINALS
*
***********************************************************************
*                                                                     *
*       CLOSE SECONDARY PO ACB                                        *
* CLOSE PRIMARY PO ACB                                                *
*                                                                     *
***********************************************************************
*
CLOSPPO  L     ACB@,@ACBPPO       SET UP BASE FOR ACB
         TM    ACBOFLGS,ACBOPEN   IS IT OPEN?
         BZ    CLOSPPND           IF NOT FORGET CLOSE
         CLOSE ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    CLOSPPOK           BRANCH IF SUCCESSFUL
*
* CLOSE NOT SUCCESSFUL - CHECK FOR RETRIABLE ERROR.
*
         TM    POFLAGS,POFCFAIL   FIRST TIME?
         BO    CLOSPPFL           NO
         OI    POFLAGS,POFCFAIL   YES - INDICATE FIRST CLOSE FAILURE
         CLI   ACBERFLG,ACBRNOCF  MESSAGES LEFT?
         BE    CLOSPPO            YES - RETRY
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    CLOSPPOK           YES - IGNORE
*
* CLOSE FAILED - INFORM OPERATOR AND ABEND
*
CLOSPPFL MVC   NTP07TYP(3),=C'PPO'
CLOSFAIL $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP07MSG    INFORM OPERATOR OF CLOSE FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         SR    RTNCD,RTNCD
         IC    RTNCD,ACBERFLG     SET ACB ERROR IN REASON CODE
         $AB   2                  TERMINATE NETOP
         SPACE 3
CLOSPPOK NI    POFLAGS,255-POFCFAIL RESET FIRST CLOSE FAILURE FLAG
*
* TELL OPERATOR THAT FULL CONTROL OF VTAM IS AT THE SYSTEM CONSOLE.
*
         $CALL PUTLOG,NTP02MSG    SEND PPO INACTIVE MESSAGE
CLOSPPND CLI   ECBMAIN+3,0    CLOSE DOWN?
         BNE   WAITMAIN       NO - GO WAIT FOR NEXT POST
*
***********************************************************************
*                                                                     *
*       CLOSE SECONDARY PO ACB                                        *
*                                                                     *
***********************************************************************
*
CLOSSPO  L     ACB@,@ACBSPO       SET UP BASE FOR ACB
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         CLOSE ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    CLOSSPOK           BRANCH IF SUCCESSFUL
*
* CLOSE NOT SUCCESSFUL - CHECK FOR RETRIABLE ERROR.
*
         TM    POFLAGS,POFCFAIL   IF THIS IS FIRST TIME
         BO    CLOSSPFL           THEN
         OI    POFLAGS,POFCFAIL   INDICATE FIRST CLOSE FAILURE
         CLI   ACBERFLG,ACBRNOCF  MESSAGES LEFT?
         BE    CLOSSPO            YES - RETRY
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    CLOSSPOK           YES - IGNORE
*
* CLOSE FAILED - INFORM OPERATOR AND ABEND
*
CLOSSPFL MVC   NTP07TYP(3),=C'SPO'
*        B     CLOSFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
***********************************************************************
*                                                                     *
* CLOSE ACB FOR TERMINALS TO SEVER THE CONNECTION WITH VTAM.          *
*                                                                     *
***********************************************************************
*
CLOSSPOK DS    0H
         LA    ACB@,ACBTERMS      SET ACB ADDRESS
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         CLOSE ((ACB@))           CLOSE ACB FOR TERMINALS
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    MAINRET            BRANCH IF SUCCESSFUL
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    MAINRET            YES - IGNORE
* CLOSE FAILED - INFORM OPERATOR AND TERMINATE PO.
         MVC   NTP07TYP,=C'TERMINALS'
         B     CLOSFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
***********************************************************************
* EXIT CODE                                                           *
***********************************************************************
*
MAINRET  L     SA@,BWDPTR         GET @ SYSTEM SAVE AREA
         RETURN (14,12)           RETURN TO CALLER
*
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
MVPARM   OC    NIBSYM(*-*),2(PARM@) FOLD TERM NAME FROM PARM INTO NIB
         DROP  NIB@
*
*        ESTAE EXIT
*
ABEXIT   $XINIT SA=ENDSA      SAVE, THEN CHAIN NEW SAVE AREA
         LR    DA@,PARM@      SAVE SDWA PTR
         USING SDWA,DA@       TELL ASMBLR
         OI    POSTATUS,POSABEND FLAG ESTAE ENTERED
         SR    R3,R3          DEFAULT NO RETRY
         L     WKA,SDWACMPF   PICK UP CMP CODE
         LA    WKA,0(,WKA)    CLEAR HI-ORDER BYTE
         SRDL  WKA,12         SPLIT SYS FROM USER
         SRL   WKB,20
         LTR   WKA,WKA        SYS CMP CODE?
         BNZ   SYSCMP         YES
         LR    WKA,WKB        NO - MUST BE USER CMP
         MVI   TBUF,C'U'      CMP ID
         B     LOGABM         NO
SYSCMP   MVI   TBUF,C'S'      CMP ID
         CH    WKA,=AL2(X'D37') VTAMLOGO DATASET FULL?
         BNE   ISZCAN         NO
         NI    SDWACMPF,255-SDWAREQ  YES - SET NO DUMP
         CLOSE (VTAMLOGO)      CLOSE, THEN RE-INITIALIZE -
         OPEN  (VTAMLOGI,OUTPUT) RE-OPEN VTAMLOG DISP=OLD
         CLOSE (VTAMLOGI)      CLOSE TO WRITE EOF
         B     LOGABM         ALLOW ABEND TO CONTINUE
ISZCAN   CH    WKA,=AL2(X'0A7') Z NET,CANCEL?
         BNE   ISCANCEL       NO
         NI    SDWACMPF,255-SDWAREQ  SET NO DUMP
         B     LOGABM         ALLOW ABEND TO CONTINUE
ISCANCEL CH    WKA,=AL2(X'222') OPER CANCEL?
         BNE   LOGABM         NO
         TM    SDWACMPF,SDWAREQ  DUMP REQUESTED?
         BO    LOGABM          YES - PROBABLY LEGIT
         WTO   MF=(E,NTP12MSG) NO - SEND REPROOF TO OPERATOR
LOGABM   $CALL CVHX           CONVERT BYTE 2
         MVC   ABMSGAC+2,HEX     AND MOVE IN
         SRL   WKA,8          SHIFT BYTE 1 OVER
         $CALL CVHX           CONVERT BYTE 1
         MVC   HEX(1),TBUF       SET CMP ID
         MVC   ABMSGAC,HEX       AND MOVE IN
         L     WKA,SDWAGR15   PICK UP REASON CODE (R15)
         $CALL CVHX           CONVERT,
         MVC   ABMSGRC,HEX     AND MOVE IN
         LA    TICB@,NETPTICB      SET ORIGIN AS NETOP
         TM    SYSPRINT+48,X'10' SYSPRINT OPEN?
         BZ    ABRET             NO
         PUT   SYSPRINT,ABMSG     OUTPUT TO SYSPRINT (DONT USE PUTLOG)
         CLOSE (SYSPRINT)         CLOSE TO SPINOFF
ABRET    MVI   SDWARCDE,0         SET RETURN CODE
         L     SA@,BWDPTR         RELOAD CALLERS SA
*
         RETURN (14,12)           ALLOW ABEND TO CONTINUE
*
*
*              SYNAD RTN FOR LOG DATASET
*
LOGSYNAD $SINIT
         SYNADAF ACSMETH=QSAM
         MVC   44(4,PARM@),=X'00548000'    WTO PREFIX AND
         MVC   128(4,PARM@),=X'00004000'   SUFFIX FOR ROUTCDE=2
         LA    PARM@,44(,PARM@)            JUMP OVER GARBAGE AND BLANKS
        WTO    MF=(E,(1))     WTO/TPUT
         SYNADRLS
         NOP   LOGSYNAB       ABEND AFTER 2ND SYNAD ENTRY
         MVI   *-3,X'F0'       BY CHANGING NOP TO B
         $SRET                RETURN TO NSI 1ST TIME ONLY
LOGSYNAB $AB   68
         TITLE 'N E T O P - INBOUND EXIT'
         SPACE
         USING ISTDPOHD,DA@       ISTDPOHD DSECT ADDRESSING
         SPACE
***********************************************************************
*                                                                     *
* NAME: INBOUND EXIT                                                  *
*                                                                     *
* FUNCTION: MOVE OPERATOR COMMANDS FROM THE REMOTE TERMINALS TO VTAM. *
*        IT IS THE RPL EXIT SPECIFIED IN THE RECEIVE MACRO ISSUED     *
*        BY THE MAINLINE, AND REISSUED HERE.                          *
*                                                                     *
* DESCRIPTION: CHECKS RCVRPL. DETERMINES HOW RECEIVE COMPLETED.       *
*        EXTRACTS INFORMATION ABOUT INCOMING MESSAGE FROM RPL. CALLS  *
*        RCV3270 TO PROCESS INPUT DATA. IF THE MESSAGE IS A COMMAND   *
*        FOR VTAM, ISSUES SENDCMD. REISSUES RECEIVE MACRO TO GET THE  *
*        NEXT MESSAGE.                                                *
*                                                                     *
* ENTRY POINT: INBOUND                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ RCVRPL                                               *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   @ INBOUND EXIT                                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ RCVRPL                             RPL@              *
*              @ TICB FOR THE TERMINAL BEING READ.  TICB@             *
*              @ DATA AREA WITH THE INPUT DATA      DA@               *
*              LENGTH OF MESSAGE                    MSGLEN            *
*              WORK REGISTERS                       WKA,WKB           *
*              SUBROUTINE RETURN ADDRESS            RET@              *
*              BASES                           BASE1@,DBASE1@,DBASE2@ *
*              VTAM CALLS                           SUBR@,RTNCD,RET@  *
*                                                                     *
* EXIT, NORMAL: BR 14                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS:RCV3270 TO PROCESS INPUT FROM 3277/3278.                      *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        VTAM RPL EXIT                                                *
*                                                                     *
***********************************************************************
*
INBOUND  $XINIT
         LR    RPL@,PARM@         PUT RPL ADDRESS IN RPL REGISTER
*
* ISSUE CHECK TO DETERMINE HOW RECEIVE COMPLETED
*
* ACTION CODES EXPECTED - 0 SUCCESSFUL COMPLETION
*                         8       RETRY
*                         12      TERMINAL NOT AVAILABLE
*
         CHECK RPL=(RPL@)
         LTR   RTNCD,RTNCD        CHECK COMPLETION
         BNZ   INRERCV            IF NOT SUCCESSFUL, REISSUE RCV
*
* RECEIVE COMPLETED SUCCESSFULLY. OBTAIN THE INFORMATION NECESSARY
* TO CONTINUE PROCESSING FROM THE RPL.
*
         L     TICB@,RPLUSFLD     GET @ TICB FROM USER FIELD
         L     DA@,RPLAREA        GET @ MSG TEXT FIELD
         SH    DA@,KPOHLEN        BACK UP FOR ISTDPOHD PREFIX FIELD
         L     MSGLEN,RPLRLEN     DETERMINE LENGTH OF MESSAGE:
         L     WKA,RPLBUFL        COMPARE LENGTH OF INPUT,
         CR    MSGLEN,WKA         AND LENGTH OF DATA AREA.
         BNH   INLENOK
         LR    MSGLEN,WKA         USE THE SMALLER OF THE TWO
*
* CALL DEVICE DEPENDENT ROUTINE TO PROCESS INPUT.
*
INLENOK  $CALL RCV3270            CALL 3270 ROUTINE
         LR    WKC,RTNCD          SAVE RTNCD
         B     *+4(RTNCD)         GO TO BRANCH TABLE
         B     CMDOK              RTNCD=0   GOOD CMD
         B     ABNORSND           RTNCD=4   GOOD CMD - WKA,WKB PRESET
*                                  AS MSG PTR AND MSG LENGTH FOR SEND
         B     ABNORSND           RTNCD=8   ABNORMAL - WKA,WKB PRESET
*                                  AS MSG PTR AND MSG LENGTH FOR SEND
         B     INRERCV            RTNCD=12  CLSDST ISSUED AFTER PF3 OR
*                                  SUPPRESS FURTHER I/O
         B     INBRET             RTNCD=16  CLOSDOWN POSTED
*
ABNORSND SEND  RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               AREA=(WKA),                                             *
               RECLEN=(WKB),                                           *
               OPTCD=SYN,POST=SCHED,RESPOND=(EX,FME,NRRN)
         LTR   RTNCD,RTNCD        OK?
         BZ    ABNOROK            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    ABNORSND            THEN RETRY
ABNOROK  LA    WKA,RCVCMDRS       GOOD CMD?
         CR    WKC,WKA
         BNE   INRERCV            NO - GO RE-ISSUE RCV FOR NEXT CMD
*
* PREPARE PO HEADER.
*
CMDOK    MVI   POHRSVD,0          ZERO HI BYTE
         MVI   POHSTAT,POHRREQ+POHGEN     INDICATE REPLY REQUESTED,
*                                 AND ID GENERATED BY PO.
         SR    WKA,WKA            CLEAR A WORK REGISTER
         IC    WKA,TIMSGSEQ       OBTAIN MESSAGE SEQUENCE NUMBER
         LA    WKA,1(,WKA)        INCREMENT BY ONE
         STC   WKA,TIMSGSEQ       UPDATE TICB
         MVC   POHID,TIMSGID      COPY ENTIRE ID FIELD TO PO HDR
*
* ISSUE SENDCMD(S) TO TRANSFER COMMAND(S) TO VTAM.
*
         AH    MSGLEN,KPOHLEN     ADD LENGTH OF PO HEADER TO
         LA    WKA,DALEN          ENSURE
         CR    MSGLEN,WKA          VALID
         BNH   RANGCHK              LENGTH
         LR    MSGLEN,WKA            FOR SENDCMD
*
RANGCHK  TM    POFLAGS,POFRANG    RANGE FORMAT CMD?
         BZ    SENDCACB           NO
*        AT THIS TIME RANGCHAR CONTAINS THE ADDR OF THE CHAR, HENCE
*        THE CALL TO ATOX SPECIFYING A LOAD INSTEAD OF A LOAD ADDRESS
         $CALL ATOX,,,RANGCHAR    CONVERT RANG CHAR TO HEX IN R15
         LTR   RTNCD,RTNCD        IS IT GOOD?
         BNM   RANGCHOK           YES
         LA    WKA,INVALK         NO - SET UP FOR
         LA    WKB,INVALKL         INVALID MSG
         B     ABNORSND            AND SEND IT
RANGCHOK STH   R15,RANGHEX        STORE FOR INCREMENTING LATER
SENDCACB TM    TISTATUS,TISREPLY  IS THIS REPLY COMMAND?
         BZ    SENDCSPO           NO
         NI    TISTATUS,255-TISREPLY  YES - RESET FLAG
         L     ACB@,@ACBPPO       PICK UP PPO ACB PTR
         B     SENDCMD            GO SENDCMD USING ORIGINATING ACB
SENDCSPO L     ACB@,@ACBSPO       PICK UP SPO ACB PTR
SENDCMD  SENDCMD RPL=(RPL@),  SEND COMMAND TO VTAM                     *
               ACB=(ACB@),                                             *
               AREA=(DA@),        TOP OF ISTDPOHD                      *
               RECLEN=(MSGLEN),                                        *
               OPTCD=SYN,POST=RESP
         LTR   RTNCD,RTNCD        OK?
         BZ    SENDCMOK          YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SENDCMD            THEN RETRY
*
SENDCMOK TM    POFLAGS,POFDSP    DISPLAY CMD?
         BZ    OUTRNGCK          NO
         LH    WKA,TIDSPCT       YES - SENDCMD COMPLETE SO
         AH    WKA,K1             INCREMENT OUTSTANDING
         STH   WKA,TIDSPCT         DISPLAY COUNT
OUTRNGCK TM    POFLAGS,POFRANG    RANGE FORMAT CMD?
         BZ    INRERCV            NO
         LH    R15,RANGHEX        YES - PICK UP RANGE CHAR IN HEX
         CH    R15,RANGEND        END OF RANGE?
         BNE   RANGOK             NO
         NI    POFLAGS,255-POFRANG YES - RESET RANGE FORMAT
         B     INRERCV             AND QUIT SENDCMD LOOP
RANGOK   LA    R15,1(,R15)         AND INCREMENT,
         N     R15,=A(15)          WRAPPING FROM X'0F' TO X'00'
         STH   R15,RANGHEX        SAVE INCREMENTED CHAR FOR NEXT PASS
         L     WKD,RANGCHAR       YES - PICK UP PTR TO RANGE CHAR
         STC   R15,0(,WKD)         AND STORE IT IN COMMAND
         TR    0(1,WKD),TRTAB     TRANSLATE TO ALPHA
         B     SENDCMD
*
* ISSUE RECEIVE MACRO TO GET THE NEXT MESSAGE.
*
INRERCV  TM    POFLAGS,POFINTCM   INTERNALLY GENERATED CMD?
         BZ    RCVGO              NO
         NI    POFLAGS,255-POFINTCM  YES - RESET FLAG
         B     INBRET                  AND RETURN
RCVGO    LA    DA@,RCVDA
         NI    POFLAGS,255-POFDSP  RESET PO DISPLAY FLAG
RCVR     RECEIVE RPL=(RPL@),                                           *
               ACB=ACBTERMS,                                           *
               AREA=(DA@),                                             *
               AREALEN=DATXLEN,                                        *
               EXIT=INBOUND,                                           *
               OPTCD=(ANY,ASY,TRUNC),                                  *
               RTYPE=DFSYN
         LTR   RTNCD,RTNCD        OK?
         BZ    INBRET             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVR                THEN RETRY
         $AB   23                 ELSE ABEND - CANT GO ON IF CANT RCV..
*
INBRET   $XRET                    RETURN
         TITLE 'N E T O P - OUTBOUND EXIT'
***********************************************************************
*                                                                     *
* NAME: OUTBOUND EXIT                                                 *
*                                                                     *
* FUNCTION: MOVE MESSAGE FROM VTAM TO THE APPROPRIATE                 *
*        TERMINALS. IT IS THE RPL EXIT SPECIFIED FOR THE RCVCMD       *
*        MACROS.                                                      *
*                                                                     *
* DESCRIPTION: CHECKS RPL. DETERMINES HOW RCVCMD COMPLETED.           *
*        EXTRACTS INFORMATION ABOUT THE MESSAGE FROM THE RPL. CALLS   *
*        IDFIND TO DETERMINE FROM THE PO HEADER, WHAT TERMINAL        *
*        THE MESSAGE IS FOR. IF THE TERMINAL IS AVAILABLE, CALLS      *
*        SND3270 TO PROCESS MESSAGE. ISSUES SEND TO TRANSMIT THE      *
*        MESSAGE. REISSUES RCVCMD TO OBTAIN THE NEXT MESSAGE FROM     *
*        VTAM.                                                        *
*                                                                     *
* ENTRY POINT: OUTBOUND                                               *
*                                                                     *
* REGISTER AT ENTRY:                                                  *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ SENDRPL                                              *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   @ OUTBOUND EXIT                                        *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ SENDRPL          RPL@                                *
*              @ TICB             TICB@                               *
*              @ ISTDPOHD         DA@                                 *
*              LENGTH OF MESSAGE  MSGLEN                              *
*              WORK REGISTERS     WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: IDFIND                                                       *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        VTAM RPL EXIT                                                *
*                                                                     *
***********************************************************************
*
OUTBOUND $XINIT
         LR    RPL@,PARM@         SET UP POINTER TO RPL
         MVC   @SAVACB,RPLDACB    SAVE ACB @ FOR RE-ISSUE OF RCVCMD
*
* ISSUE CHECK TO DETERMINE HOW RCVCMD COMPLETED.
*
* ACTION CODES EXPECTED - 0 SUCCESSFUL COMPLETION
*                         >0 REISSUE RCVCMD
*
         CHECK RPL=(RPL@)         IF RTNCD = SUCCESS
         LTR   RTNCD,RTNCD        CHECK COMPLETION
         BNZ   RCVCMDO            THEN
*
* RCVCMD COMPLETED SUCCESSFULLY. OBTAIN THE INFORMATION NECESSARY
* TO CONTINUE PROCESSING FROM THE RPL.
*
         L     DA@,RPLAREA        GET @ ISTDPOHD
         L     MSGLEN,RPLRLEN     DETERMINE LENGTH OF MESSAGE:
         L     WKA,RPLBUFL        COMPARE LENGTH OF INPUT,
         CR    MSGLEN,WKA         AND LENGTH OF DATA AREA.
         BNH   OUTLENOK           USE THE SMALLER OF THE TWO.
         LR    MSGLEN,WKA
OUTLENOK SH    MSGLEN,KPOHLEN     SUBTRACT LENGTH OF PO HEADER
*
* CALL IDFIND TO IDENTIFY THE DESTINATION TERMINAL FROM PO HEADER.
*
OUTID    $CALL IDFIND,0
         LTR   RTNCD,RTNCD        IF RETURN CODE = 0
         BNZ   RCVCMDO            THEN...
*
* SEE IF THERE IS DATA TO SEND TO TERMINALS.
*
         TM    POHSTAT,POHDATA+POHLBL+POHCNTRL      DATA?
         BNZ   RCVDATA            YES
         TM    POHSTAT,POHEND     END?
         BZ    RCVDATA            NO
         LH    WKA,TIDSPCT        YES - DISPLAY IS COMPLETE
         SH    WKA,K1             DECREMENT OUTSTANDING DISPLAY COUNT
         BM    RCVRSTDC      IF -VE SOMETHING WENT WRONG - DONT UPDATE
         STH   WKA,TIDSPCT          ELSE STORE IT
         BP    RCVCMDO            IF ZERO,
RCVRSTDC NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
         B     RCVCMDO            RETURN AFTER RCVCMD RE-ISSUED
*
RCVDATA  BCTR  MSGLEN,0           REDUCE FOR EX
         MVC   SENDTIME,BLANX     BLANK OUT TIME FIELD
*
* CALL RCVVTAM TO SCAN FOR MESSAGES REQUIRING NETOP ACTION
*
         $CALL RCVVTAM
         LTR   RTNCD,RTNCD        OUTPUT ACCEPABLE?
         BNZ   RCVCMDO            NO - SUPPRESS IT
         TM    POHSTAT,POHGEN     SOLICITED REPLY?
         BZ    LOGIT              NO - GO LOG IT
*
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BE    LOGIT              YES - LOG IT
         TM    TIFLAGS,TIFDSP     REPLY TO DISPLAY CMD?
         BZ    LOGIT              NO - LOG IT
         TM    TIFLAGS,TIFDSP11   PF11 OVER-RIDE?
         BO    LOGIT              YES - LOG IT
         TM    TIFLAGS2,TIF2LOGD  PF2/LOGD OVER-RIDE?
         BZ    CALSEND            NO - DONT LOG IT
*
* PREPARE AND WRITE HARD COPY LOG RECORD.
*
LOGIT    $CALL PUTLOG,DATX,(MSGLEN) OUTPUT REC
*
* CALL SND3270 TO SEND MSG TO TERMINAL(S).
*
CALSEND  $CALL SND3270            CALL SND3270
*
*
* ISSUE RCVCMD TO GET THE NEXT MESSAGE FROM VTAM.
*
RCVCMDO  L     ACB@,@SAVACB       PICK UP ACB PTR
RCVCMDOR RCVCMD RPL=(RPL@),       GET NEXT OUTGOING MESSAGE            *
               ACB=(ACB@),                                             *
               AREA=(DA@),                                             *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
         LTR   RTNCD,RTNCD        OK?
         BZ    OUTICHK            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDOR            THEN RETRY
*
* RETURN.
*
OUTICHK  TM    POFLAGS,POFINTCM   DID RCVVTAM GENERATE A CMD?
         BZ    OUTRET             NO
         LA    DA@,RCVDA          YES - USE OTHER DATA AREA
         LH    MSGLEN,INTBUFL     LOAD LENGTH
         LR    WKA,MSGLEN         COPY IT
         BCTR  WKA,0               LESS 1 FOR EX
         EX    WKA,OUTINTMV       MOVE INTCMD INTO DATA AREA
         LA    TICB@,NETPTICB     USE NETOP'S TICB
         L     WKA,RPLARG         PICK UP CID
         LA    RPL@,DISCRPL       USE SPARE RPL (RCVRPL RE-USED)
         ST    WKA,RPLARG          WITH CURRENT CID
         $XCTL INLENOK,INBOUND    XCTL TO INBOUND EXIT TO PROCESS CMD
OUTRET   $XRET                    RETURN
*
OUTINTMV MVC   DATX(*-*),INTBUF   MOVE INTCMD INTO ISTDPOHD
         TITLE 'N E T O P - LOGON EXIT'
***********************************************************************
*                                                                     *
* NAME: LOGON EXIT                                                    *
*                                                                     *
* FUNCTION: TO ESTABLISH CONNECTIONS WITH TERMINALS, INCLUDING THE    *
*        MASTER TERMINAL.                                             *
*                                                                     *
* DESCRIPTION: DETERMINES IF THE PO IS IN A POSITION TO ACCEPT LOGONS *
*        IF NOT, REJECTS THE TERMINAL. OTHERWISE, ALLOCATES A TICB TO *
*        THE TERMINAL, FILLS IN THE NIB, AND ACCEPTS THE TERMINAL. IF *
*        THE NEWLY ACOUIRED TERMINAL IS IN THE MASTER CANDIDATE LIST, *
*        IT IS MADE THE MASTER IF NONE EXISTED. WHEN NO MASTER IS     *
*        LOGGED ON ONLY THE SPO ACB IS OPEN.  THE MAINLINE IS POSTED  *
*        TO OPEN THE PPO ACB WHICH IS USED SOLELY TO RECEIVE UNSOL-   *
*        ICITED MESSAGES. ALL OTHER VTAM-PO MSGS FLOW VIA ACBSPO.     *
*              IF OPNDST FAILS IN ATTEMPTING TO ACCEPT THE TERMINAL,  *
*        THE TICB OBTAINED FOR IT IS DEALLOCATED.                     *
*                                                                     *
* ENTRY POINT: LOGON                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) @ TERMINAL NAME                                    *
*              (3) RESERVED                                           *
*              (4) LENGTH OF LOGON MESSAGE                            *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF LOGON EXIT                                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGS          WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: INT3270 TO TRANSMIT 3270 ORDERS THAT SET UP INITIAL SCREEN   *
*        AND START THE BRACKET.                                       *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
LOGON    $XINIT
         USING LOGONPRM,PARM@     LOGON PARM DSECT ADDRESSING
         LA    NIB@,LOGONNIB      SET POINTER TO NIB
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         LA    ACB@,ACBTERMS      SET POINTER TO ACB
         LA    RPL@,LOGONRPL      SET POINTER TO RPL
         L     WKA,TNAME@         SET POINTER TO TERMINAL NAME
         MVC   NIBSYM,0(WKA)      MOVE TERMINAL NAME INTO NIB
         TM    POSTATUS,POSCLSDN  IF PO NOT CLOSING DOWN,
         BZ    LGNTCHK             GO ALLOCATE TICB
*
LGNCLSDN CLSDST RPL=(RPL@),       REJECT THE TERMINAL                  *
               ACB=(ACB@),                                             *
               NIB=(NIB@)
         LTR   RTNCD,RTNCD        OK?
         BZ    LGNRET             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    LGNCLSDN            THEN RETRY
         B     LGNRET             RETURN
*
* ALLOCATE A TICB TO THE NEW TERMINAL.
*
LGNTCHK  CLI   TICBFCT+1,0        ANY FREE TICB'S ?
         BNE   LGNALOC            YES - GO ALLOCATE ONE
         LA    TICB@,VTAMTICB     ADDRESS VTAMTICB
         B     LGNOTICB           GO SET UP FOR REJECT
LGNALOC  LA    WKA,TICBCT         FIND FREE TICB
         LA    TICB@,TICBS+TICBLEN  START AT 1ST AFTER NETPTICB
LGNLOOP  TM    TISTATUS,TISALLOC  IS IT FREE?
         BZ    LGNFOUND           IF YES, GO ALLOCATE IT
         LA    TICB@,TICBLEN(,TICB@)   OTHERWISE, NEXT TICB...
         BCT   WKA,LGNLOOP        ANY MORE TICB'S TO EXAMINE?
LGNOTICB LA    WKA,NOTICBM        NO - TICBFCT ERRONEOUS,
         LA    WKB,NOTICBML        SET UP FOR NO MORE TICB MSG
         OI    TISTATUS,TISNOMOR  FLAG REJECT REASON IN DUMMY TICB
         ST    TICB@,NIBUSER      PUT @ TICB IN NIB USER FIELD
         B     LGNACCEP           GO ACCEPT AND THEN REJECT TERMINAL
LGNFOUND OI    TISTATUS,TISALLOC  ALLOCATE THE TICB
         LH    WKA,TICBFCT        DECREMENT
         BCTR  WKA,0                FREE
         STH   WKA,TICBFCT            COUNT
         ST    TICB@,NIBUSER      PUT @ TICB IN NIB USER FIELD
         C     TICB@,TICBLACT     HIGHEST TICB @?
         BNH   LGNACCEP           NO
         ST    TICB@,TICBLACT     YES - SAVE HI-WATER MARK
*
* ISSUE OPNDST TO ACCEPT THE TERMINAL.
*
LGNACCEP OPNDST RPL=(RPL@),       ACCEPT THE TERMINAL                  *
               ACB=(ACB@),                                             *
               NIB=(NIB@),                                             *
               OPTCD=NQ
         LTR   RTNCD,RTNCD        IF RTNCD = UNSUCCESSFUL
         BNZ   LGNRET              THEN FORGET IT
         TM    TISTATUS,TISNOMOR  REJECT REASON FLAGGED?
         BO    REJSEND            YES - GO REJECT
*
*        IF TERMINAL ACCEPTED, SET UP ITS TICB.
*
         MVC   TINAME,NIBSYM      PUT TERMINAL NAME INTO TICB
         LA    WKA,TINAME+1        SEARCH FOR BLANK
         LA    WKC,7
LGNBLOOP CLI   0(WKA),C' '
         BE    LGNBLANK
         LA    WKA,1(,WKA)
         BCT   WKC,LGNBLOOP
LGNBLANK LA    WKB,8              SUBTRACT FROM
         SR    WKB,WKC            8 TO GET NAME LEN
         STH   WKB,TINAMLEN       AND STORE IT
         MVC   TICID,NIBCID       PUT TERMINAL CID INTO TICB
         SR    WKA,WKA            ASSIGN NEXT ID TO THIS TERMINAL
         IC    WKA,POID           INCREMENT LAST ID ASSIGNED
         LA    WKA,1(,WKA)
         STC   WKA,POID
         STC   WKA,TID            MOVE INTO TICB
         ZAP   TISTKCT,KP0        ZERO STACK ELEMENT COUNT
         MVI   TIMSGSEQ,0         ZERO MESSAGE NUMBER
         MVI   TIFLAGS2,TIF2LOGD  SET 'D NET' LOGGING AS DEFAULT
*
* PERFORM DEVICE DEPENDENT INITIALIZATION, THEN MARK TERMINAL ACTIVE.
*
         OI    RPLRH3,RPLBB       SET RPL FOR BB SEND
         $CALL INT3270,0          INITIALISE SCREEN
         LTR   RTNCD,RTNCD        RETURN CODE OK?
         BNZ   LGNCLS             NO - DUMP IT
         OI    TISTATUS,TISACT    YES - MARK ACTIVE
*
* MARK TERMINAL A MASTER CANDIDATE IF IT IS LISTED IN MATABLE
*
         L     WKA,@MATABLE
         SH    WKA,K2             DECR. BEFORE LOOP ENTRY
         SR    WKB,WKB            INITIAL INCREMENT ZERO
MALOOP   LA    WKA,2(WKB,WKA)     GET NEXT ENTRY
         ICM   WKB,1,0(WKA)       GET ENTRY LENGTH
         BZ    LGNLOG             END OF TABLE IF ZERO
         BCTR  WKB,0              - 1 FOR EX
         EX    WKB,MACLC          SAME TERMINAL NAME?
         BNE   MALOOP             NO - GO TO NEXT ENTRY
*
         OI    TISTATUS,TISMCAND  YES - SET CANDIDATE BIT
         LH    WKA,TICBMCCT       INCREMENT
         AH    WKA,K1               MASTER CANDIDATE
         STH   WKA,TICBMCCT           COUNT
         TM    POSTATUS,POSHVMA   MASTER LOGGED ON YET?
         BO    LGNLOG             YES
         OI    TISTATUS,TISMA     NO - SET MASTER BIT
         AIF   (NOT &MAROLL).NMAROLL
MAROLL   OI    TIFLAGS2,TIF2ROLL  SET ROLL FLAG FOR INITIAL MASTER
.NMAROLL ANOP
         ST    TICB@,@MATICB      SAVE MASTER TICB @
         OI    POSTATUS,POSHVMA   INDICATE MASTER HAS LOGGED ON
         MVC   NTP1NODE,TINAME    MOVE NAME INTO MESSAGE.
         POST  ECBMAIN,1          POST MAINLINE TO OPEN PPO ACB
LGNLOG   $CALL PUTLOG,NOTICBLG,*-1  OUTPUT REC
         B     LGNRET
*
REJSEND  SEND  RPL=(RPL@),        SEND REJECT MSG AND CLSDST           *
               AREA=(WKA),                                             *
               RECLEN=(WKB)
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITREJ            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    REJSEND             THEN RETRY
WAITREJ  STIMER WAIT,BINTVL=CLSDLAY  ALLOW 1/2 SEC TO READ REJECT MSG
LGNCLS   LA    WKA,L'OFFMSG-1     EX LENGTH FOR MOVE
         LA    PARM@,OFFMSG       MSG PTR
         TM    TISTATUS,TISNOMOR  NO MORE TICBS?
         BZ    LGNCLPT            NO
         LA    WKA,L'NOTICBRJ-1   EX LENGTH FOR MOVE
         LA    PARM@,NOTICBRJ     MSG PTR
LGNCLPT  $CALL PUTLOG,(PARM@),(WKA) OUTPUT REC
         $CALL CLSDST         CLSDST TERMINAL AND FREE TICB
*
LGNRET   $XRET                    RETURN
*
MACLC    CLC   1(*-*,WKA),TINAME  COMPARE TERMINAL NAMES
         DROP  NIB@,PARM@
         TITLE 'N E T O P - LOSTERM EXIT'
***********************************************************************
*                                                                     *
* NAME: LOSTERM EXIT                                                  *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN CONTACT HAS BEEN LOST     *
*        WITH A TERMINAL.                                             *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN THE     *
*        PARAMETER LIST BUT FOR THE MOMENT IT CHECKS FOR MASTER LOST, *
*        REASSIGNS MASTER IF SO, AND ISSUES CLSDST UNLESS CLOSEDOWN   *
*        IS IN PROGRESS.                                              *
*                                                                     *
* ENTRY POINT: LOSTERM                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) CID                                                *
*              (3) NIB USERFLD                                        *
*              (4) CODE INDICATING WHY ENTERED                        *
*                       CODES ARE:                                    *
*                         0 - DIAL-LINE DISCONNECTED ON DIAL-IN TERM  *
*                         4 - DIAL-LINE DISCONNECTED ON DIAL-OUT TERM *
*                         8 - RESERVED                                *
*                        12 - MANY REASONS SEE MANUAL - SHUTDOWN      *
*                        16 - SUCCESSFULLY RECONTACTED                *
*                        20 - UNCONDITIONAL TERMINATE SELF            *
*                        24 - POSSIBLE TO RECOVER                     *
*                        28 - INCOMPLETE OR INVALID SEGEMENTED REQUEST*
*                        32 - CONDITIONAL TERMINATE SELF              *
*                        36 - BUFFER LIMIT EXECEEDED                  *
*                        40 - TEST REQ KEY OR TOLTEP IS TAKING OVER   *
*                                                                     *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF LOSTERM EXIT                                *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              WORK REGS          WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT                                         *
*                                                                     *
***********************************************************************
*
LOSTERM  $XINIT
         USING LOSTPARM,PARM@     LOSTERM PARM DSECT ADDRESSING
         TM    POSTATUS,POSCLSDN  IF PO IS CLOSING DOWN, FORGET IT
         BO    LOSTRET
         LA    RPL@,DISCRPL       SET POINTER TO RPL
         L     CID,LOSTCID        PICK UP CID
         ST    CID,RPLARG         DROP IN RPL
         L     TICB@,LOSTUSER     SET TICB PTR
         L     ACB@,LOSTACB       PICK UP ACB PTR
         L     WKA,LOSTCODE      PICK UP LOST REASON CODE
         CVD   WKA,WORK          CONVERT DEC
         OI    WORK+7,X'0F'    FIX SIGN UP
         UNPK  LOSMSGRC(3),WORK+6(2)  UNPACK
         MVI   LOSMSGRC,C' '   BLANK LEADING ZERO
         $CALL PUTLOG,LOSMSG,LOSMSGL-1 OUTPUT REC
         TM    TISTATUS,TISMA     MASTER?
         BZ    LOSTCLS            NO - JUST CLSDST RELEASE
         $CALL MAFIND             YES - FIND ALT MASTER
*
LOSTCLS  ST    ACB@,RPLDACB       SET UP ACB @
         $CALL CLSDST             GO ISSUE CLSDST AND FREE UP TICB
*
LOSTRET  $XRET                    RETURN
         TITLE 'N E T O P - RELREQ EXIT'
***********************************************************************
*                                                                     *
* NAME: RELREQ EXIT                                                   *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN TERMINAL REQUESTED.       *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN THE     *
*        PARAMETER LIST SET UP BY VTAM AND TAKE APPROPRIATE RECOVERY  *
*        ACTION.                                                      *
*                                                                     *
* ENTRY POINT: RELREQ                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) @ TERMINAL NAME                                    *
*                                                                     *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF RELREQ EXIT                                 *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGISTER      WKA,WKB                             *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*              SAVE AREA ADDRESS  SA@                                 *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT                                         *
*                                                                     *
***********************************************************************
*
RELREQ   $XINIT
         USING LOGONPRM,PARM@     RELREQ PARM DSECT ADDRESSING
         LA    NIB@,LOGONNIB      SET POINTER TO NIB
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         LA    RPL@,DISCRPL       SET POINTER TO RPL
         L     ACB@,LGNACB@       PICK UP ACB PTR
         L     WKA,TNAME@         SET POINTER TO TERMINAL NAME
         MVC   NIBSYM,0(WKA)      MOVE TERMINAL NAME INTO NIB
         LA    WKA,RPLARG         CID PTR
RLRQINQR INQUIRE RPL=(RPL@),                                           *
               ACB=(ACB@),                                             *
               NIB=(NIB@),                                             *
               AREA=(WKA),AREALEN=4,                                   *
               OPTCD=CIDXLATE
         LTR   RTNCD,RTNCD        OK?
         BZ    RLRQSEND          YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RLRQINQR            THEN RETRY
         B     RLRQINV             ELSE FORGET IT
RLRQSEND NI    RPLEXTDS,255-RPLNIB TURN OFF NIB FLAG (NOW A CID)
         SEND  RPL=(RPL@),        SEND REJECT MSG AND CLSDST           *
               AREA=RLRQM,                                             *
               RECLEN=RLRQML,                                          *
               OPTCD=SYN,POST=RESP,RESPOND=(EX,FME,NRRN)
         LTR   RTNCD,RTNCD        OK?
         BZ    RLRQUS             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RLRQSEND            THEN RETRY
         B     RLRQINV             ELSE FORGET RELEASE
RLRQUS   L     TICB@,RPLUSFLD     GET TICB PTR
*
         TM    TISTATUS,TISMA     MASTER?
         BO    RLRQINV            YES - INVALID RELEASE
RLRQCLS  STIMER WAIT,BINTVL=CLSDLAY  ALLOW 1/2 SEC TO READ RELEASE MSG
         $CALL CLSDST             GO ISSUE CLSDST AND FREE UP TICB
*
         LA    WKA,6              EX LENGTH FOR SHORT MOVE
         B     RLRQPUT
*
RLRQINV  LA    WKA,L'RELMSG       EX LENGTH FOR LONG MOVE
*        B     RLRQPUT
*
RLRQPUT  $CALL PUTLOG,RELMSG,(WKA)  OUTPUT REC
RLRQRET  $XRET                    RETURN
         TITLE 'N E T O P - TPEND EXIT'
***********************************************************************
*                                                                     *
* NAME: TPEND EXIT                                                    *
*                                                                     *
* FUNCTION: TO NOTIFY PO OF VTAM SHUTDOWN.                            *
*                                                                     *
* DESCRIPTION: SAVES REASON CODE AND POSTS CLOSEDOWN ECB.             *
*                                                                     *
* ENTRY POINT: TPEND                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R1    @ PARAMETER LIST CONTAINING:                           *
*              (1) @ ACBTERMS                                         *
*              (2) REASON CODE                                        *
*        R14   RETURN ADDRESS                                         *
*        R15   TPEND ENTRY POINT ADDRESS                              *
*                                                                     *
* EXIT, NORMAL: BR 14                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
TPEND    $XINIT SA=ENDSA
         USING TPENDPRM,PARM@     TPEND PARM DSECT ADDRESSING
         L     WKA,TPREASON       PICK UP SAVE REASON CODE
         $CALL CVHX               CONVERT AND
         MVC   TPEMSGRC,HEX        MOVE INTO LOG TEXT
         LA    TICB@,VTAMTICB     ADDRESS VTAMTICB
         $CALL PUTLOG,TPEMSG,TPEMSGL-1 OUTPUT REC
         POST  ECBMAIN            INDICATE PO MUST CLOSE DOWN
         $XRET                    RETURN TO VTAM
         DROP  PARM@
         TITLE 'N E T O P - ERROR EXIT'
***********************************************************************
*                                                                     *
* NAME: SYNAD/LERAD                                                   *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN A LOGICAL OR PHYSICAL     *
*        ERROR IS ENCOUNTERED  WITH A TERMINAL. THIS IS BOTH A        *
*        SYNAD AND LERAD EXIT.                                        *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN         *
*        REGISTER 0 AS SET UP BY VTAM AND TAKE APPROPRIATE RECOVERY   *
*        ACTION.                                                      *
*                                                                     *
* ENTRY POINT: ERROR                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    RECOVERY ACTION RETURN CODE                            *
*        R1    @RPL                                                   *
*                                                                     *
*        R2-12 UNDETERMINED                                           *
*        R13   UNMODIFIED SINCE MACRO ISSUED - CALLERS SA, SAVED      *
*        R14   RETURN ADDRESS IN VTAM, SAVED                          *
*        R15   ADDRESS OF ERROR EXIT                                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE (IF ANY ARE MADE TO VTAM ANOTHER SA MUST BE CHAINED)    *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT (BOTH SYNAD AND LERAD)                  *
*                                                                     *
* NOTE:       ERRSAVE%+C% POINTS TO MACRO IN ERROR                    *
*                                                                     *
***********************************************************************
*
ERROR    $XINIT SA=ERRORSA    CHAIN SAVE AREAS
         LR    RPL@,PARM@     SET RPL PTR
         CLI   RPLRTNCD,USFLOGIC  LOGICAL ERROR?
         BE    LERERR         YES
         CLI   RPLRTNCD,USFENVER  ENVIRONMENT ERROR?
         BE    ENVERR         YES
         B     ERRLOG         LOG AND RETURN TO NSI
*
*        ENVIRONMENT ERRORS
*
ENVERR   CLI   RPLFDB2,USFVOFOC  REQUEST CANCELLED BY VARY?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
         CLI   RPLFDB2,USFTANAV  TERMINAL NOT AVAILABLE?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
         CLI   RPLFDB2,X'0D'     ACB BEEN CLOSED?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
ENVABEND TM    POSTATUS,POSCLSDN+POSABEND  CLOSEDOWN OR ABEND?
         BNZ   ERRLOG         YES - JUST LOG IT AN GO NSI
         SR    RTNCD,RTNCD    YES - SET REASON CODE
         IC    RTNCD,RPLFDB2   TO FEEDBACK2 VAL
         $AB   (ACTCD)          AND ABEND
*
*        LOGICAL ERRORS
*
LERERR   CLI   RPLFDB2,USFRNOCE  CMD SYNTAX ERROR?
         BE    ERRET             YES - RETURN TO NSI
         CLI   RPLFDB2,USFRNOSE  REPLY CMD SYNTAX ERROR?
         BE    ERRET             YES - RETURN TO NSI
         CLI   RPLFDB2,USFSDNP   SEND STILL PENDING?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
*
LERABEND TM    POSTATUS,POSCLSDN+POSABEND  CLOSEDOWN OR ABEND?
         BNZ   ERRLOG         YES - JUST LOG IT AN GO NSI
         SR    RTNCD,RTNCD    SET REASON CODE
         IC    RTNCD,RPLFDB2   TO FEEDBACK2 VAL
         $AB   (ACTCD)
*
ERRLOG   IC    WKA,RPLREQ     GET REQ CODE
         $CALL CVHX            CONVERT
         MVC   ERREQ(2),HEX     AND MOVE IN
         IC    WKA,ACTCD      GET ACTION CODE
         $CALL CVHX            CONVERT
         MVC   ERRTNCD(2),HEX   AND MOVE IN
         IC    WKA,RPLFDB2    PICK UP FEEDBACK CODE
         $CALL CVHX            CONVERT
         MVC   ERFDBK2(2),HEX   AND MOVE IN
         IC    WKA,RPLSSEI    PICK UP SSENSEI CODE
         $CALL CVHX            CONVERT
         MVC   ERSENEI(2),HEX   AND MOVE IN
         IC    WKA,RPLSSMI    PICK UP SSENSMI CODE
         $CALL CVHX            CONVERT
         MVC   ERSENMI(2),HEX   AND MOVE IN
         IC    WKA,RPLESR1    PICK UP 1ST BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   ERSENU1(2),HEX   AND MOVE IN
         IC    WKA,RPLESR2    PICK UP 2ND BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   ERSENU2(2),HEX   AND MOVE IN
         OI    POSTATUS,POSSEND TELL TSO USERS ABOUT ABNORMAL CONDITION
         L     TICB@,RPLUSFLD -> CURRENT TICB
         LA    WKA,DUMTICB    VALIDATE
         CR    WKA,TICB@       TICB PTR
         BNH   ERRTCHK          IF INVALID
         LA    TICB@,BLANX       SUBSTITUTE BLANX FOR TINAME
         B     ERRPLOG            IN LOG MSG
ERRTCHK  LA    WKA,TICBS
         CR    WKA,TICB@
         BNL   ERRPLOG
         LA    TICB@,BLANX
ERRPLOG  $CALL PUTLOG,ERMSG,ERMSGL-1 OUTPUT RECORD
         CLI   RPLSSEI,RPLSTATI   STATE ERROR?
         BNE   ERRET               NO
         L     R1,=A(LERRRPL+8)    YES => SAVE
         MVC   0(112,R1),IFGRPL            READ ONLY RPL
         ABEND 405,DUMP                              & DUMP
ERRET    $XRET                    RETURN TO NSI VIA VTAM
         TITLE 'N E T O P - RESPONSE EXIT'
***********************************************************************
**                                                                   **
**       NAME:  RESP EXIT                                            **
**                                                                   **
**       DESCRIPTION:  A RESPONSE IS RECEIVED FROM A LOGICAL         **
**             UNIT FOR WHICH NO RECEIVE IS OUTSTANDING THAT         **
**             SPECIFIES  RTYPE=RESP.                                **
**                                                                   **
**       ENTRY POINT:  RESP                                          **
**                                                                   **
**       REGISTERS:                                                  **
**                                                                   **
**                                                                   **
**       AT ENTRY:                                                   **
**                                                                   **
**       R1   CONTAINS THE ADDRESS OF A 5 WORD PARAMETER LIST.       **
**                                                                   **
**            WORD 1 CONTAINS THE ADDRESS OF THE ACB FOR THE         **
**            APPLICATION PROGRAM TO WHICH THE LOGICAL UNIT WAS      **
**            CONNECTED.                                             **
**                                                                   **
**            WORD 2 CONTAINS THE CID OF THE LOGICAL UNIT.           **
**                                                                   **
**            WORD 3 CONTAINS THE VALUE THAT WAS PLACED IN THE       **
**            USERFLD OF THE NIB ASSOCIATED WITH THE LOGICAL         **
**            UNIT (THE NIB SPECIFIED WHEN THE LOGICAL UNIT WAS      **
**            CONNECTED).                                            **
**                                                                   **
**            WORD 4 IS NOT USED.                                    **
**                                                                   **
**            WORD 5 CONTAINS THE ADDRESS OF A VTAM-SUPPLIED         **
**            RPL IN READ-ONLY STORAGE. THE RPL CAN BE COPIED        **
**            OR DISPLAYED BY USING THE SHOWCB AND TESTCB MACROS     **
**            BUT CANNOT BE USED IN RECEIVE OR SEND MACROS.          **
**                                                                   **
**                                                                   **
**       R14  CONTAINS THE ADDRESS IN VTAM TO WHICH THE RESP         **
**            EXIT MUST BRANCH WHEN IT IS FINISHED PROCESSING.       **
**                                                                   **
**       R15  CONTAINS THE ADDRESS OF THE RESP EXIT ROUTINE.         **
**                                                                   **
**                                                                   **
**       THE EXIT DOES NOT HAVE TO ISSUE A RECEIVE TO GET THE        **
**       RESPONSE; THE COMMAND RECEIVED IS DETERMINED BY             **
**       EXAMINING THE READ-ONLY RPL.                                **
**                                                                   **
**                                                                   **
**       EXIT NORMAL:  BR 14                                         **
**                                                                   **
**       EXIT ERROR:  NONE                                           **
**                                                                   **
**       CALLS:   CVHX, PUTLOG                                       **
**                                                                   **
**       CALLED BY:  VTAM                                            **
**                                                                   **
**       ATTRIBUTES:                                                 **
*             SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
RESP     $XINIT
         USING LOSTPARM,PARM@     LOSTERM PARM DSECT ADDRESSING
         STM   R0,R1,ABREGS
         L     RPL@,RESPRPL       LOAD READ-ONLY RPL PTR
         L     TICB@,LOSTUSER     LOAD TICB PTR
         IC    WKA,RPLREQ     GET REQ CODE
         $CALL CVHX            CONVERT
         MVC   REREQ(2),HEX     AND MOVE IN
         IC    WKA,RPLRTNCD   GET ACTION CODE
         $CALL CVHX            CONVERT
         MVC   RERTNCD(2),HEX   AND MOVE IN
         IC    WKA,RPLFDB2    PICK UP FEEDBACK CODE
         $CALL CVHX            CONVERT
         MVC   REFDBK2(2),HEX   AND MOVE IN
         IC    WKA,RPLSSEI    PICK UP SSENSEI CODE
         $CALL CVHX            CONVERT
         MVC   RESENEI(2),HEX   AND MOVE IN
         IC    WKA,RPLSSMI    PICK UP SSENSMI CODE
         $CALL CVHX            CONVERT
         MVC   RESENMI(2),HEX   AND MOVE IN
         IC    WKA,RPLESR1    PICK UP 1ST BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   RESENU1(2),HEX   AND MOVE IN
         IC    WKA,RPLESR2    PICK UP 2ND BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   RESENU2(2),HEX   AND MOVE IN
         OI    POSTATUS,POSSEND TELL TSO USERS ABOUT ABNORMAL CONDITION
         $CALL PUTLOG,REMSG,REMSGL-1 OUTPUT RECORD
         CLI   RPLRTNCD,X'04' IF RTNCD = 04
         BNE   RESPRET
         CLI   RPLFDB2,X'04'    AND FDB2 = 04
         BNE   RESPRET
         ABEND 404,DUMP           THEN GIVE US A DUMP
RESPRET  $XRET                    RETURN TO NSI VIA VTAM
*
         DROP  PARM@
         EJECT
         SPACE 20
*                        SUBROUTINES
*
*
*        EACH IS INDEPENDENTLY BASED, EXIT BEING VIA $SRET MACRO.
*        WHERE MULTIPLE ENTRY POINTS OCCUR, BASE AND RETURN SAVE WORDS
*        OF THE LAST EP ONLY ARE GENERATED;  PREVIOUS $SINIT MACROS
*        REFER TO IT VIA THE  SARET=  OPERAND.
*
*
         USING ISTDPOHD,DA@       SET UP ISTDPOHD DSECT ADDRESSING
         TITLE 'N E T O P - SHOWCDS SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: SHOWCDS                                                       *
*                                                                     *
* FUNCTION: MOVE ACB ERROR FEEDBACK INFORMATION INTO MESSAGE NTP10.   *
*        THIS MESSAGE WILL SHOW IN DETAIL HOW OPEN OR CLOSE           *
*        FAILED.                                                      *
*                                                                     *
* DESCRIPTION: CONVERTS RETURN CODE AND ERROR CODE (ACBERFLG) TO      *
*        HEX DIGITS AND MOVES THEM INTO MESSAGE NTP10.                *
*                                                                     *
* REGISTERS:                                                          *
*                                                                     *
*              RC FROM OPEN/CLOSE WKA                                 *
*              @ ACB              ACB@                                *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
*        CHANGED:  R6                                        WKA      *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLED BY: MAINLINE                                                 *
*                                                                     *
* CALLS: CVHX TO CONVERT CODES TO HEX DIGITS                          *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              SUBROUTINE INTERNAL TO MAINLINE                        *
*                                                                     *
***********************************************************************
*
SHOWCDS  $SINIT
         $CALL CVHX               CONVERT RETURN CODE TO HEX
         MVC   NTP10RC,HEX        MOVE INTO MESSAGE
         SR    WKA,WKA            CLEAR REGISTER
         IC    WKA,ACBERFLG       OBTAIN ERROR CODE
         $CALL CVHX               CONVERT TO HEX
         MVC   NTP10EC,HEX        MOVE INTO MESSAGE
         $SRET                    RETURN
         TITLE 'N E T O P - CVHX SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: CVHX                                                          *
*                                                                     *
* FUNCTION: CONVERT A BYTE TO HEXADECIMAL CHARACTER REPRESENTATION    *
*           AND RETURN TO CHARACTERS TP CALLER.                       *
*                                                                     *
* DESCRIPTION: CONVERTS ONE BYTE CODE IN REGISTER 8 AND STORE TWO     *
*              HEX DIGITS CHARACTERS IN AREA LABELLED HEX.            *
*                                                                     *
* REGISTERS:                                                          *
*                                                                     *
*              LOW ORDER BYTE CONVERTED  WKA                          *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
*        CHANGED:  NONE *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLED BY: SHOWCDS                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              SUBROUTINE INTERNAL TO SHOWCDS                         *
*                                                                     *
***********************************************************************
*
CVHX     $SINIT
         STC   WKA,HEXTOBE       STORE FOR UNPK
         UNPK  HEX(3),HEXTOBE    UNPACK TWO BYTES
         TR    HEX(2),TRTAB-240  MAKE IT PRINTABLE
         $SRET                    RETURN
         TITLE 'N E T O P - RCVVTAM SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: RCVVTAM                                                       *
*                                                                     *
* FUNCTION: TO FILTER UNSOLICITED VTAM MESSAGES FOR CONDITIONS        *
*        REQUIRING NETOP ACTION, AND FOR REPEATING MESSAGES.          *
*                                                                     *
* DESCRIPTION: CURRENTLY THE MSG ID IS CLI'D FOR A FEW MATCHES;       *
*        EVENTUALLY A CONTROL BLOCK SEARCH LOOP WILL BE IMPLEMENTED.  *
*        ONCE A MATCH IS FOUND, A COMMAND IS BUILT IN INTBUF IN PFKEY *
*        FORMAT AND THE POFINTCM FLAG IS TURNED ON. FURTHER ENHANCE-  *
*        MENTS WILL ALLOW COMMAND CHAINS TO BE GENERATED BY A SINGLE  *
*        UNSOLICITED MESSAGE.                                         *
*           REPEATING MESSAGES ARE SUPPRESSED, THE MSG# FIELD BEING   *
*        UPDATED WITH A REPEAT COUNT TO REGISTER RECEIPT.             *
*                                                                     *
* ENTRY POINT: RCVVTAM                                                *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*        R4    ADDRESS OF ISTDPOHD DA@                                *
*        R9    SUBROUTINE RETURN  RET@                                *
*        OTHERS IGNORED                                               *
*                                                                     *
* OUTPUT: INTBUF CONTAINS APPROPRIATE CMD                             *
*         POFLAGS POFINTCM SET TO REFLECT SEARCH RESULT               *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        NONE
*                                                                     *
* CALLED BY: OUTBOUND                                                 *
*                                                                     *
* CALLS:     TSOUID                                                   *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        SUBROUTINE INTERNAL TO OUTBOUND EXIT                         *
*                                                                     *
***********************************************************************
*
RCVVTAM $SINIT
         TM    POHSTAT,POHGEN     SOLICITED REPLY?
         BO    RCVVSOLC           YES
         EX    MSGLEN,RCVUNCLC    NO - REPEATING MSG?
         BNE   RCVUN               NO - NOT THE SAME
         AP    UNSOL#,KP1          YES - INCREMENT UNSOL MSG #
         CP    UNSOL#,MAXUNSOL    REACHED MAX?
         BE    RCVVNODE           YES - INACT NODE
         B     RCVV852
RCVUN    ZAP   UNSOL#,KP1         RESET UNSOL MSG #
         EX    MSGLEN,RCVUNMOV    SAVE UNSOL MSG FOR COMPARISON
*
RCVV852  CLC   DAMSG#,=C'852'     CLUSTER UNAVAILABLE MSG?
         BNE   RCVV342            NO
         MVC   INTNODE,DA852NOD   SET NODENAME
         B     RCVVINAC           YES - INACT,I
         SPACE 1
RCVV342  CLC   DAMSG#,=C'342'     UNABLE TO ESTABLISH SESSION?
         BNE   RCVV400            NO => NEXT MSG CHECK
         CLC   DA342RC(2),=CL2'12' APPLICATION INACTIVE??
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV400  CLC   DAMSG#,=C'400'     TERMINATION IN PROGRESS MSG?
         BNE   RCVV804            NO => NEXT MSG CHECK
         CLC   DA400APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV804  CLC   DAMSG#,=C'804'     CLOSE IN PROCESS MSG?
         BNE   RCVV805            NO => NEXT MSG CHECK
         CLC   DA804APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV805  CLC   DAMSG#,=C'805'     CLOSE COMPLETE MSG?
         BNE   RCVV285            NO => NEXT MSG CHECK
         CLC   DA805APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV285  CLC   DAMSG#,=C'285'     DUMP COMPLETE MSG?
         BE    RCVV2856           YES
         CLC   DAMSG#,=C'286'     DUMP PARTIALLY COMPLETE MSG?
         BNE   RCVV413            NO
RCVV2856 MVC   INTDNODE,DA285NOD  SET NODENAME
         MVC   INTFDUMP,FDUMP     SET MODIFY CMD
         LA    WKA,L'FDUMP        SET CMD LENGTH
         OI    POSTATUS,POSSEND   FLAG SEND TO TSO USERS
         B     RCVVOSCM           OS COMMAND
*
RCVV413  CLC   DAMSG#,=C'413'     VTAM DUMPING MSG?
         BNE   RCVV209            YES
         OI    POSTATUS,POSSEND   FLAG SEND TO TSO USERS
         B     RCVVRET0
*
RCVV209  CLC   DAMSG#,=C'209'     INTERVENTION REQD MSG?
         BNE   RCVVRET0           NO
         CLC   DABTUCMD,=C'020A'  YES - WRITE CONTACT?
         BNE   RCVVRET0           NO
RCVVNODE MVC   INTNODE,DAMSGNOD   SET NODENAME
         B     RCVVINAC           YES - INACT,I
*
*
*        INACT REQUIRED
*
RCVVINAC MVI   INTAID,PF6         SET 'INACT,I' PFKEY
         LA    WKA,L'INTAID+L'INTNODE  SET INTERNAL CMD BUF LENGTH
         B     RCVVRETI
*
*        OS CMD REQUIRED
*
RCVVOSCM MVI   INTAID,PF5         SET OS CMD PFKEY
         LA    WKA,L'INTAID+L'INTNODE(,WKA)  INCREMENT CMD BUF LENGTH
*        B     RCVVRETI
*
*        INTERNAL CMD COMMON CODE
*
RCVVRETI OI    POFLAGS,POFINTCM   FLAG CMD GENERATED
         STH   WKA,INTBUFL
         B     RCVVRET0
*
*
*        SOLICITED MESSAGE COMPARES
*
RCVVSOLC TM    TIFLAGS,TIFCLUST   CLUSTER ONLY FLAG SET?
         BZ    RCVV082            NO
RCVV080  CLC   DAMSG#,=C'080'     CLUST/TERM LINE OF DISPLAY RESPONSE?
         BNE   RCVV089            NO
         LA    WKA,DAMSGNOD       YES - SCAN FOR
         LA    WKB,3               AND BLANK OUT
         SR    WKC,WKC              ANY NON-CLUSTER
RCVVCLOO CLI   0(WKA),C'&CLUST'      STATUS FIELD
         BNE   RCVVNCLU
         LA    WKC,1(,WKC)
         B     RCVVCLND
RCVVNCLU MVC   0(DAM80TXL,WKA),BLANX
RCVVCLND LA    WKA,DAM80NXL(,WKA)
         BCT   WKB,RCVVCLOO
         LTR   WKC,WKC            IF NO CLUSTER STATUS FIELDS
         BZ    RCVVRET4            ARE DETECTED, SUPPRESS OUTPUT
         OI    POFLAGS,POFHINT    FLAG FOR HI INTENSITY TO MAKE IT
         B     RCVVRET0            EASIER TO SEE
*
RCVV089  CLC   DAMSG#,=C'089'     SNA CLUST/TERM DISPLAY RESPONSE?
         BNE   RCVV082            NO
         CLI   DAMSGNOD,C'&CLUST' CLUSTER?
         BNE   RCVVRET4           NO - SUPPRESS OUTPUT
         OI    POFLAGS,POFHINT    FLAG FOR HI INTENSITY TO MAKE IT
         B     RCVVRET0            EASIER TO SEE
*
RCVV082  CLC   DAMSG#,=C'082'     3RD LINE OF DISPLAY RESPONSE?
         BNE   RCVVRET0           NO
         TM    TISTATUS,TISUID    USERID FOUND FLAG ON (? TYPE CMD)
         BZ    RCVTSOCK           NO
         NI    TISTATUS,255-TISUID  YES - RESET FLAG
         MVC   NEWUID,TIABR       MOVE IN USERID
         LH    WKC,TIABR+8        POINT TO HEX ASID
         B     RCVVASID           GO FILL REST OF NEW IST082 LINE
RCVTSOCK CLC   DAM82ALC(3),=C'TSO'    ALLOC= TSONNNN ?
         BNE   RCVVRET0            NO
         TM    POSTATUS,POSTEST    YES - RUNNING UNDER TEST?
         BO    RCVVRET0             YES - DONT CONVERT
         MVC   WORK(4),=C'0000'    VERIFY
         MVN   WORK(4),DAM82ALC+3   FOR VALID
         CLC   WORK(4),DAM82ALC+3    NUMERICS
         BNE   RCVVRET0            IF NOT, DONT CONVERT TSOXXXX
         PACK  WORK,DAM82ALC+3(4)   NO - PACK TCAS ID
         CVB   PARM@,WORK           LOAD TCAS APPL INDEX
         $CALL TSOUID,(PARM@)     GO CONVERT TSONNNN TO USERID
         USING ASCB,RTNCD              ESTABLISH ADDRESSABILITY TO ASCB
         LTR   RTNCD,RTNCD             ASCB PTR RETURNED?
         BZ    RCVVRET0                NO
         L     WKA,ASCBJBNS            YES - PICK UP USERID PTR
         MVC   NEWUID,0(WKA)             MOVE
         LH    WKC,ASCBASID               IN
RCVVASID CVD   WKC,WORK                    NEW
         MVC   WORK(4),=X'40202120'         VALUES
         ED    WORK(4),WORK+6
         CLI   WORK+1,C' '
         BNE   RCVVUNBL
         MVI   WORK+1,C'('
         B     RCVVMVID
RCVVUNBL MVI   WORK,C'('
RCVVMVID MVC   NEWASID,WORK
         MVC   NEWDEV,DAM82DEV          MOVE IN
         MVC   NEWALC,DAM82ALC           EXISTING
         MVC   NEWSIM,DAM82SIM            VALUES
         MVC   DAMSGNOD(NEW082L),NEW082  MOVE IN NEWLY FORMATTED MSG
         LA    MSGLEN,NEW082L+(DAMSGNOD-DATX)  SET NEW LENGTH
         B     RCVVRET0
         DROP  RTNCD
*
RCVVRET4 LA    RTNCD,4            SUPPRESS OUTPUT OF THIS MSG
         B     RCVVRET
*
RCVVRET0 SR    RTNCD,RTNCD        OUTPUT THIS MSG
RCVVRET  $SRET                    RETURN
*
RCVUNMOV MVC   UNSOL(*-*),DATX         MOVE INTO UNSOL AREA
RCVUNCLC CLC   UNSOL(*-*),DATX         COMPARE TO UNSOL AREA
         TITLE 'N E T O P - RCV3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: RCV3270                                                       *
*                                                                     *
* FUNCTION: ANALYZE THE INPUT OBTAINED FROM THE OPERATOR AND DETERMINE*
*           IF THERE IS ANYTHING TO SEND TO VTAM.                     *
*                                                                     *
* DESCRIPTION:                                                        *
*                                                                     *
* ENTRY POINT: RCV3270                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        DA@       ISTDPOHD ADDRESS                                   *
*        MSGLEN    MESSAGE LENGTH                                     *
*        RET@      RETURN ADDRESS                                     *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ TICB FOR THE TERMINAL BEING READ.  TICB@             *
*              @ DATA AREA WITH THE INPUT DATA      DA@               *
*              LENGTH OF MESSAGE                    MSGLEN            *
*              WORK REGISTERS                       WKA,WKB           *
*              SUBROUTINE RETURN ADDRESS            RET@              *
*              BASES                           BASE1@,DBASE1@,DBASE2@ *
*              VTAM CALLS                           SUBR@,RTNCD,RET@  *
*              RETURN CODE                          RTNCD             *
*               RCVCMDOK EQU 0            COMMAND OK                  *
*               RCVCMDRS EQU 4            COMMAND OK AND RESPONSE MSG *
*               RCVRMSG  EQU 8            RESPONSE MSG                *
*               RCVNRMSG EQU 12           NO RESPONSE MSG             *
*               RCVCLDST EQU 12           CLSDST ISSUED FOR TERMINAL  *
*               RCVCLOSD EQU 16           CLOSEDOWN ISSUED FOR NETOP  *
*                                                                     *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: UNSTACK TO UNSTACK MESSAGES AFTER PA KEY HIT WHEN IN         *
*                WAIT-FOR-ROLL CONDITION.                             *
*                                                                     *
* CALLED BY: INBOUND EXIT                                             *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
*                                                                     *
***********************************************************************
*
RCV3270  $SINIT
         ST    R2,RCVSAVE2        SAVE RPL @ (TRT USED)
         MVC   AID,DATX           SAVE AID
         NI    AID,X'0F'          ZERO ZONE
         BZ    INVINP             NO ACTION AID => TREAT AS INVALID
*                                     TILL I CAN FIGURE OUT WHY
*                                     WE GET IT.
         CLI   AID,X'0F'          INVALID IF > 14 NUMERIC
         BL    AIDFND             OK
AIDBAD   ABEND 256,DUMP           NO - LET'S GET A DUMP OF THIS...
*
AIDFND   CLI   AID,XPF3            END?
         BE    TERMEND             YES - GO RELEASE TERMINAL
         CLI   AID,XPF1            HELP?
         BE    HELPOUT             YES - GO DISPLAY HELP SCREEN
         CH    MSGLEN,K3           LENGTH > 3?
         BH    MOREDATA            YES
*              NO - RESET ROLL WAIT, NO-AUTO REENTRY, HELP, LAST UNSOL
AIDSHORT NI    TIFLAGS,255-(TIFWTROL+TIFNAUT)
         TM    TISTATUS,TISTACK    ANY MESSAGES STACKED?
         BO    ATTNCHK             YES
         NI    TIFLAGS,255-(TIFHELP+TIFUNSOL) NO - RESET FLAGS
         B     NOSTACK
ATTNCHK  CLI   DATX,PA1            ATTN? (DELETE OUTSTANDING MESSAGES)
         BE    DELSTACK            YES
         CLI   DATX,CLEAR          CLEAR?
         BE    CLRSTACK            YES
         TM    TIFLAGS,TIFHELP     HELP SCREEN CURRENT?
         BZ    NOHELP              NO - DONT RE-INIT SCREEN
CLRSTACK SR    PARM@,PARM@         YES - INIT PARM,
         IC    PARM@,TIABRLEN+1     PICKUP LAST CMD LEN,
         $CALL INT3270,(PARM@)      RE-INIT SCREEN BEFORE UNSTACKING
         NI    TIFLAGS,255-TIFHELP RESET HELP FLAG
NOHELP   ST    TICB@,TICBLIST      SET UP
         OI    TICBLIST,LASTPARM    TICBLIST FOR SENDS
         $CALL UNSTACK             RETRIEVE AND SEND STACKED MSGS
         B     RCV32RET GO SEND WARNING OR NOT (RC FROM UNSTACK=4 OR 8)
DELSTACK OI    POFLAGS,POFSTDEL    FLAG STACK DELETE
         $CALL UNSTACK             RETRIEVE AND DELETE STACKED MSGS
         MVI   DATX,PA2            ASK FOR RESHOW
         NI    TIFLAGS,255-(TIFHELP+TIFUNSOL) RESET FLAGS
         B     CLEARSET            GO INIT SCREEN
NOSTACK  NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DISPLAY
         XC    TIDSPCT,TIDSPCT                 FLAGS AND COUNT
         CLI   DATX,PA1            ATTN (NO-OP)?
         BE    RCVNULL             YES
CLEARSET SR    PARM@,PARM@         INIT PARM
         CLI   DATX,PA2            RESHOW?
         BNE   CLEARCAL            NO
RESHOW   IC    PARM@,TIABRLEN+1    YES - PICKUP LAST CMD LEN
CLEARCAL $CALL INT3270,(PARM@)     SHORT READ - RE-INIT SCREEN
         B     RCV32CLD            RET 8 TO SUPPRESS FURTHER OUTPUT
*
MOREDATA CH    MSGLEN,K6           LENGTH > 6?
         BNH   RCVNULL             NO - NULL MSG - RETURN 4
         AH    DA@,K3              INCR DSECT BASE OVER AID-CUR-CUR
         CLI   DATX,SBA            ?
         BNE   TRYNUM              NO
         AH    DA@,K3              INCR DSECT BASE OVER SBA-ADR-ADR
         CLI   DATX,X'40'          BLANK INPUT?
         BNE   TRYNUM              NO - CHECK IT
RCVNULL  LA    WKA,NULLM           SET UP FOR NULL MSG
         LA    WKB,L'NULLM         FULL LENGTH (WITH IC)
RCV32RMG LA    RTNCD,RCVRMSG       YES - SET RESP MSG RETURN CODE
         B     RCV32RET            RETURN
*
TRYNUM   MVI   WORK,C'0'
         MVN   WORK(1),DATX        1ST DATA BYTE
         CLC   WORK(1),DATX         NUMERIC?
         BNE   SUBSIX              NO
         CH    MSGLEN,K7           YES - ONLY 1 DATA BYTE?
         BE    PSEUDO1               YES - PSEUDO PF ONLY
         CLI   DATX+1,C' '           NO - FOLLOWING BLANK?
         BE    PSEUDO1                 YES - TREAT AS PSEUDO PF CMD
         MVI   WORK,C'0'
         MVN   WORK(1),DATX+1      1ST DATA BYTE
         CLC   WORK(1),DATX+1       NUMERIC?
         BNE   IMPLR1              NO - TREAT AS IMPLICIT REPLY CMD
         CH    MSGLEN,K8           YES - ONLY 2 DATA BYTES?
         BE    MACANREQ              YES - COULD BE MA-CAND REQUEST
         CLI   DATX+2,C' '           NO - FOLLOWING BLANK?
         BE    PSEUDO2                 YES - TREAT AS PSEUDO PF CMD
*
         MVC   TBUF+2(2),DATX      IMPLICIT REPLY, 2 NUMERICS
         SH    MSGLEN,K2           DECREMENT LENGTH
         LA    WKB,DATX+2          SET UP TEXT PTR
         B     IMPLREX
IMPLR1   MVC   TBUF+3(1),DATX      IMPLICIT REPLY, 1 NUMERIC
         MVI   TBUF+2,C'0'
         SH    MSGLEN,K1           DECREMENT LENGTH
         LA    WKB,DATX+1          SET UP TEXT PTR
IMPLREX  EX    MSGLEN,IMPLRMV1     MOVE REPLY TEXT INTO TBUF
         MVC   TBUF(2),=C'R '      SET UP REPLY CMD
         MVI   TBUF+4,C','                REPLY
         SH    MSGLEN,K2           DECREMENT LENGTH FOR MOVE EX
         ST    MSGLEN,RCVSAVE       AND SAVE IT FOR LOG EX MOVE
         EX    MSGLEN,IMPLRMV2     MOVE REPLY CMD INTO ISTDPOHD
         LA    MSGLEN,1(,MSGLEN)   INCREMENT LENGTH FOR SENDCMD
         B     RCVREPLY
*
*        PSEUDO PF COMMANDS CONSIST OF 1 OR 2 NUMERICS REPRESENTING A
*        PF KEY NUMBER, FOLLOWED BY A BLANK AND SOME DATA - THIS FORM
*        IS NECESSARY FOR CLISTS AND FOR TERMINALS WITHOUT PF KEYS
*
PSEUDO1  MVN   AID,DATX            MOVE IN PSEUDO AID
         CH    MSGLEN,K8           MORE THAN 2 DATA BYTES?
         BH    PSEUDOK             YES - MEANINGFUL DATA
         LH    MSGLEN,K3           NO - PF ONLY
         B     AIDFND               TREAT AS SHORT MSG
PSEUDOK  LA    DA@,2(,DA@)         INCREMENT DATX PTR OVER PSEUDO,
         SH    MSGLEN,K2            DECREMENT LENGTH FOR PSEUDO CHARS
         B     TRYNUM               AND GO RESCAN INPUT
PSEUDO2  CH    MSGLEN,K9           ONLY 3 DATA BYTES?
         BE    INVINP              YES - MEANINGLESS AS PSEUDO PF CMD
         NI    DATX+1,X'0F'        NO -
         SR    WKB,WKB              CONVERT
         IC    WKB,DATX+1            CHARACTER
         AH    WKB,K10                AID INTO
         CH    WKB,K12                 CORRECT
         BH    INVINP                   HEX
         STC   WKB,AID                   NUMERIC
         LA    DA@,3(,DA@)         INCREMENT DATX PTR OVER PSEUDO,
         SH    MSGLEN,K3            DECREMENT LENGTH FOR PSEUDO CHARS
         B     TRYNUM               AND GO RESCAN INPUT
*
MACANREQ CLI   AID,XPF2            MASTER CANDIDATE REQUEST
         BNE   INVINP              NO
         CLC   DATX(2),SENDTIME    YES - CORRECT HOUR?
         BNE   INVINP                NO
         TM    TISTATUS,TISMA        YES - MASTER?
         BO    INVCMD                  YES - DENY
         XI    TISTATUS,TISMCAND       NO - SWITCH CANDIDATE BIT
         LA    WKA,1               LOAD INCREMENT
         TM    TISTATUS,TISMCAND   BIT ON NOW?
         BO    MCCTUP              YES
         LNR   WKA,WKA             NO - CHANGE TO DECREMENT
MCCTUP   AH    WKA,TICBMCCT        ADD OR SUBTRACT 1
         STH   WKA,TICBMCCT         TO MCANDT COUNT
         SR    PARM@,PARM@         INIT PARM
         B     RESHOW              TREAT LIKE RESHOW KEY HIT
*
SUBSIX   SH    MSGLEN,K6           DECR. LEN
         TM    TIFLAGS,TIFNAUT     NO-AUTO RE-ENTRY OF EXPANDED CMD?
         BZ    NOTNAUT             NO
         MVI   AID,XENTER          YES - OVER-RIDE AID AS IF ENTER HIT
         B     UPMOVE               AND DONT UPDATE ABBREV FIELDS
NOTNAUT  CLI   AID,XPF2            PF2? (CONTROL KEYWORD)
         BE    UPMOVE              YES - DONT UPDATE ABBREV FIELDS
         LR    WKB,MSGLEN          CHECK
         LA    WKC,L'TIABR          LENGTH
         CR    WKB,WKC             > MAX?
         BNH   ABRLOK              NO
         LR    WKB,WKC             YES - SET TO MAX
ABRLOK   STH   WKB,TIABRLEN        SAVE ABBREV LENGTH
         BCTR  WKB,0               DECR FOR EX
         EX    WKB,MVABR           SAVE ABBREV CMD
UPMOVE   MVC   UPPER,BLANX         BLANK TARGET FIELD
         LA    WKB,6               IF LENGTH
         LR    WKC,MSGLEN           < 7 THEN
         BCTR  WKC,0                 USE IT,
         CR    WKC,WKB                ELSE USE 6
         BNH   UPFOLD                  FOR EX OF OR INSTR.
         LR    WKC,WKB                  TO FOLD INPUT DATA
UPFOLD   EX    WKC,ORUP                  INTO COMPARE FIELD
         CLC   UPPER(3),=C'END'    ?
         BE    TERMEND             YES - GO RELEASE TERMINAL
         SR    WKB,WKB            CALC OFFSET
         IC    WKB,AID             INTO AID OFFSET
         BCTR  WKB,0                BRANCH TABLE
AIDOK    SLL   WKB,1              * 2 SINCE OFFSETS ARE HALFWORDS
         LH    WKB,AIDTAB(WKB)    LOAD CODE OFFSET
         B     AIDTAB(WKB)        GO TO INPUT HANDLER FOR THIS AID
*
AIDTAB   DS    0H                 TABLE OF OFFSETS TO INPUT HANDLERS
*                                   THIS LOGIC MEANS THAT ON 3278'S
*                                 PF13-PF24 CORRESPOND TO PF1-PF12
         DC    AL2(AIDPF1-AIDTAB)
         DC    AL2(AIDPF2-AIDTAB)
         DC    AL2(AIDPF3-AIDTAB)
         DC    AL2(AIDPF4-AIDTAB)
         DC    AL2(AIDPF5-AIDTAB)
         DC    AL2(AIDPF6-AIDTAB)
         DC    AL2(AIDPF7-AIDTAB)
         DC    AL2(AIDPF8-AIDTAB)
         DC    AL2(AIDPF9-AIDTAB)
         DC    AL2(AIDPF10-AIDTAB)
         DC    AL2(AIDPF11-AIDTAB)
         DC    AL2(AIDPF12-AIDTAB)
         DC    AL2(AIDENTER-AIDTAB)
         DC    AL2(AIDSEL-AIDTAB)
*
AIDPF2   LR    WKD,MSGLEN         SET UP
         BCTR  WKD,0               EX LENGTH FOR COMPARE/MOVE
         LA    WKB,PF2KWDS        INDEX REG TO KEYWORDS
PF2LOOP  EX    WKD,PF2CLC         COMPARE FOR NEGATIVE FORM
         BE    PF2MASK            GO APPLY MASK
         LA    WKB,1(,WKB)        INCREMENT OVER 'N'
         EX    WKD,PF2CLC         COMPARE FOR POSITIVE FORM
         BE    PF2MASK            GO APPLY MASK
         LA    WKB,6(,WKB)        INCREMENT TO NEXT KEYWORD
         CLI   0(WKB),X'FF'       END OF TABLE?
         BNE   PF2LOOP            NO
*                                 YES - ASSUME USERID INTENDED
         TM    POSTATUS,POSTEST   RUNNING UNDER TEST?
         BO    INVINP             YES - DONT SEARCH
         MVC   TIABR(7),UPPER     NO -  MOVE IT INTO TIABR; ALSO MOVE
         STH   MSGLEN,TIABRLEN     LENGTH IN CASE UID ¬ FND, THEN PA2
         $CALL TSOUID,0           GO SEARCH TSB CHAIN FOR USERID
         LA    WKA,RCVRMSG        DCON RC
         CR    RTNCD,WKA          ACTIVE OR DCON?
         BH    INVINP             NO - MUST BE NOT FOUND
         LA    MSGLEN,8           SET NEW MSG LENGTH
         BL    IMPLD              ACTIVE - GO TREAT AS DISPLAY
         NI    TISTATUS,255-TISUID  DISCONNECTED - RESET FLAG
         MVC   DCONMNAM,DATX      MOVE OLD TERMNAME INTO ERROR PART
         MVC   DCONMABR,DATX      MOVE OLD TERMNAME INTO ENTRY PART
         LA    WKB,DCONML         SET UP FOR DCON
         LA    WKA,DCONM           MESSAGE
         B     RCV32RET           RETURN
*
PF2MASK  CLI   5(WKB),X'7F'       IS IT OVER 7F?
         BL    PF2OR              NO - MUST BE 'OR' MASK
         CLI   5(WKB),X'80'       YES - IS IT 80? (HIGHEST 'OR' MASK)
         BE    PF2OR              YES
         NC    TIFLAGS2,5(WKB)    NO - 'AND' FLAG BYTE TO TURN OFF
         B     RCVNULL             TREAT LIKE NULL MSG
PF2OR    TM    5(WKB),TIF2SOLO     SOLO ON?
         BZ    PF2ORFLG            NO
         TM    TISTATUS,TISMA      YES - IS THIS THE MASTER?
         BO    INVCMD               YES - DENY
PF2ORFLG OC    TIFLAGS2,5(WKB)    'OR' FLAG BYTE TO TURN ON FLAG
         B     RCVNULL             TREAT LIKE NULL MSG
*
AIDPF4   LA    WKC,L'MODIFY-1      IMPLICIT MODIFY...
         CLC   NETSOL,UPPER        BUT
         BE    NOIDMOD              CHECK FOR
TRYTEST  CLC   TEST,UPPER            MODIFY'S THAT
         BE    NOIDMOD                HAVE NO
TRYSUPP  CLC   SUPP,UPPER              'ID='
         BNE   ALMOD
NOIDMOD  LA    WKC,L'MODIFY-4      REDUCE LENGTH OF INSERT
ALMOD    LA    WKA,MODIFY                 FOR CMD INSERTION
         B     INSERT
*
AIDPF5   TM    TISTATUS,TISMCAND   IMPLICIT OS CMD - MASTER CANDIDATE?
         BZ    INVCMD              NO - DENY
         TM    POSTATUS,POSTEST    RUNNING UNDER TEST?
         BO    AIDENTER            YES - TREAT AS ENTER KEY
         LA    WKA,4(,MSGLEN)      YES - SET UP
         SLL   WKA,16                OS CMD PREFIX
         ST    WKA,ISTDPOHD           AND STORE IT
         $CALL MGCR,ISTDPOHD       ISSUE SVC 34
         $CALL PUTLOG,DATX,(MSGLEN)  LOG CMD
         LA    WKA,NULLM           SET UP FOR NULL MSG
         LA    WKB,2                WITHOUT SBA,IC
         B     RCV32RMG            RETURN NULL
*
AIDPF6   LA    WKC,L'VARYII-1      IMPLICIT VARY ,INACT,I
         LA    WKA,VARYII          SET UP FOR CMD INSERTION
         B     INSERT
*
AIDPF7   OI    TIFLAGS,TIFVLOG     IMPLICIT VARY ,LOGON
         B     AIDENTER            USE DISPLAY FORMAT, BUT FLAG
*
AIDPF8   LA    WKC,L'VARYI-1       IMPLICIT VARY ,INACT
         LA    WKA,VARYI           SET UP FOR CMD INSERTION
         B     INSERT
*
AIDPF10  OI    TIFLAGS,TIFCLUST    DISPLAY WITH CLUSTER STATUS ONLY
         B     AIDENTER            USE DISPLAY FORMAT, BUT FLAG
*
AIDPF11  OI    TIFLAGS,TIFDSP11    DISPLAY WITH LOGGING - FLAG IT
         B     AIDENTER
*
AIDPF12  LA    WKC,L'VARYA-1       IMPLICIT VARY ,ACT
         LA    WKA,VARYA           SET UP FOR CMD INSERTION
         B     INSERT
*
AIDSEL   EQU   *                   ALSO SELECTOR PEN ENTER
AIDENTER CLI   UPPER+1,C' '        VALID CMD FORMAT FOR ENTER KEY?
         BE    VALENT              YES
*
*  FOLLOWING CODE EDITS 'NODENAME,ETC..' AFTER ENTER, PF10 OR PF11
*  MSG LENGTH IS REDUCED TO ELIMINATE THE  'ETC..'
*
IMPLD    LA    WKB,DATX            SET UP
         LA    WKC,DATX-1(MSGLEN)  LAST CHAR PTR
         LA    WKD,8                SCAN START PTR
         LR    WKA,MSGLEN            AND COMMA
         BCTR  WKA,0
         CR    WKD,WKA               AND COMMA
         BNH   DSPLENOK               SCAN
         LR    WKD,WKA                 LENGTH
DSPLENOK SR    R2,R2              CLEAR FOR TRT FUNCTION CODE
         L     WKA,@TRTTAB        LOAD TRT TABLE @
         EX    WKD,TRTRANG        RANGE OR DELIMITER?
         BNZ   DELIMFND           NO
         TM    TIFLAGS,TIFVLOG    YES - VARY ,LOGON?
         BO    INVINP              YES - INVALID WITHOUT COMMA
         B     INSERTD             NO - GO INSERT 'D NET,ID='
DELIMFND LA    WKD,2              PRELOAD FINAL MSGLEN INCR
         LR    R15,R1             CALC
         LA    R0,DATX+1           NODENAME
         SR    R15,R0               LENGTH
         CH    R2,K1              RANGE NOTATION?
         BNE   DSPCOMMA           NO - MUST BE DELIM
         LA    R1,2(,R1)          YES - JUMP TO WHERE COMMA SHOULD BE
         LA    R15,2(,R15)         AND UPDATE NODENAME LENGTH
         CR    WKC,R1             PAST LAST CHAR?
         BNL   DSPCOMMA           NO
         LA    WKD,1              PRELOAD REVISED FINAL MSGLEN INCR
         B     DSPBLANK
DSPCOMMA CLI   0(R1),C','         COMMA?
         BNE   DSPBLANK           NO - BLANK OR OTHER DELIM
         LA    R1,1(,R1)          YES - JUMP COMMA
         TM    TIFLAGS,TIFVLOG    VARY ,LOGON?
         BZ    DSPLCHAR           NO
         CR    WKC,R1             YES - IS THIS LAST CHAR?
         BL    INVINP             YES
         B     INSERTD               AND GO DO VLOG INSERTION
DSPLCHAR CR    WKC,R1             IS THIS LAST CHAR?
         BNH   DSPFOLD            YES
         CLI   1(R1),C' '         NO - IS NEXT CHAR A BLANK?
         BNE   DSPBLANK           YES
DSPFOLD  MVI   HEX,C' '           NO - FOLD
         OC    HEX(1),0(R1)        NEXT CHAR
*              ONLY ABBREVIATION IS SUPPORTED HERE -
*                 FULL KEYWORD WOULD BE EDITED OUT
         CLI   HEX,C'E'           E FOR EVERY?
         BE    INSERTD            YES
         CLI   HEX,C'I'           I FOR INACT?
         BE    INSERTD            YES
         CLI   HEX,C'A'           A FOR ACT?
         BE    INSERTD            YES
         CLI   HEX,C'N'           N FOR NONE?
         BE    INSERTD            YES
*              DELIMITER BUT NO COMMA OR DELIMITER BUT END OF INPUT
DSPBLANK TM    TIFLAGS,TIFVLOG    VARY ,LOGON?
         BO    INVINP             YES - INVALID WITHOUT 2ND OPERAND
         LA    MSGLEN,0(WKD,R15)  NO - SET CORRECT LENGTH
*
INSERTD  LA    WKC,L'DISPLAY-1    IMPLICIT DISPLAY
         LA    WKA,DISPLAY         SET UP FOR CMD INSERTION
         B     INSERT
*
*
VALENT   CH    MSGLEN,K1           SINGLE CHARACTER INPUT?
         BNE   TRYREP              NO
         CLI   UPPER,C'K'          YES - IS IT KLEAR?
         BNE   TRYW                NO
         MVI   DATX,CLEAR          YES - FAKE CLEAR AID
         B     AIDSHORT             AND GO PROCESS IT
*
TRYW     CLI   UPPER,C'W'          IS IT W? (WRITE EOF TO LOG)
         BNE   INVINP              NO - TREAT AS INVALID
         TM    TISTATUS,TISMCAND   YES - MASTER CANDIDATE?
         BZ    INVCMD                NO - DENY
         CLOSE (VTAMLOGO)            YES - CLOSE,
         OPEN  (VTAMLOGO,OUTPUT)      AND RE-OPEN MOD
         SR    PARM@,PARM@         INIT PARM
         B     CLEARCAL            RE-INIT SCREEN
*
TRYREP   CLI   UPPER,C'R'          IS IT REPLY?
         BNE   NETCHK              NO
RCVREPLY TM    TISTATUS,TISMCAND   MASTER OR CANDIDATE?
         BZ    INVCMD              NO - DENY
         OI    TISTATUS,TISREPLY   YES - FLAG IT SINCE PPO ACB MUST BE
         B     VALCMD               USED FOR SENDCMD
*
NETCHK   CLC   NET,DATX+1          IS IT ' NET,'?
         BE    LONGFORM            YES - NO INSERTION NECESSARY
         MVC   TBUF(40),DATX+2         NO,
         MVC   DATX+9(33),TBUF          INSERT
         MVC   DATX+2(7),NETID           'NET,ID='
         LA    MSGLEN,L'NETID(,MSGLEN) INCREMENT LENGTH
         B     NAUTOCHK            GO CHECK FOR AUTO MODE
*
INSERT   LA    WKB,DATX+1(WKC) TARGET PTR FOR OPERAND MOVE
         MVC   TBUF(42),DATX MOVE CMD
         MVC   0(36,WKB),TBUF        OPERAND OVER
         EX    WKC,MVINSRT         INSERT CMD
         TM    TIFLAGS,TIFVLOG     VARY ,LOGON?
         BZ    INCRLEN             NO
*
         NI    TIFLAGS,255-TIFVLOG RESET FLAG
         MVI   DATX,X'A5'          CHANGE 'D' TO 'V' FOR VARY
         LR    WKD,MSGLEN          CALC
         SR    WKD,R15              LENGTH-1 OF
         SH    WKD,K2                REMAINDER FOR MOVE (IN WKD)
         BM    INVINP                 UNLESS NEGATIVE (NO REMAINDER)
         LA    WKB,2(R15,WKB)      CALC TARGET PTR FOR LOGON INSERT
         MVC   0(6,WKB),KLOGON     MOVE IN 'LOGON='
         LA    WKB,6(,WKB)         CALC TARGET PTR,
         LA    WKA,TBUF+1(R15)       LOAD SOURCE PTR AND
         EX    WKD,MVLOGINS          MOVE IN APPLID AND ANY OTHER DATA
         LA    MSGLEN,6(,MSGLEN)   INCREMENT LENGTH FOR LOGON=
*
INCRLEN  LA    MSGLEN,1(MSGLEN,WKC)      INCR LENGTH FOR NET INSERT
*
NAUTOCHK TM    TIFLAGS2,TIF2AUTO  NO-AUTO MODE?
         BZ    LONGFORM       NO
         LR    WKA,DA@        YES - JUST DISPLAY
         SH    WKA,K2          LONG FORM OF
         LA    WKB,6(,MSGLEN)   CMD IN INPUT AREA
         MVC   0(6,WKA),NULLM    FOR PERUSAL BEFORE ENTRY
         OI    TIFLAGS,TIFNAUT FLAG NO-AUTO RE-ENTRY OF EXPANDED CMD
         B     RCV32RMG
LONGFORM LR    WKA,MSGLEN         USE A WORK REG
         LA    WKC,L'TICMD        LOAD MAX LENGTH
         CR    WKA,WKC            TOO LONG?
         BNH   CLENOK             NO
         LR    WKA,WKC            YES - USE MAX
CLENOK   STH   WKA,TICMDLEN       SAVE CMD LENGTH IN TICB
         BCTR  WKA,0              DECREMENT LENGTH FOR MVC
         ST    WKA,RCVSAVE          AND SAVE IT
         EX    WKA,MVCMD          SAVE CMD IN TICB
         LA    WKC,DATX-1(WKA)    POINT TO CHAR BEFORE LAST
         LA    WKB,DATX+8         SET INPUT @ FOR RANGE CHECK
         LA    WKD,35             LOOP INDEX
RCVELOOP CLI   0(WKB),C'='        POSSIBLE NODENAME OPERAND?
         BNE   RCVNEQU            NO
         SH    WKB,K2             YES - IS IT
         CLC   0(2,WKB),=X'8984'   LOWERCASE 'ID='
         BE    RCVIDEQU           YES
         CLC   0(2,WKB),=C'ID'    UPPERCASE 'ID='
         BE    RCVIDEQU           YES
RCVNID   LA    WKB,2(,WKB)        INCR BACK TO '='
RCVNEQU  LA    WKB,1(,WKB)        INCR INDEX
         BCT   WKD,RCVELOOP       CHECK NEXT CHAR
         B     DCHK               NOT FOUND => ASSUME NO ID= FIELD
RCVIDEQU LA    WKB,3(,WKB)        JUMP 'ID='
*                                  (WKB POINTS TO NODENAME OPERAND)
RCVRCHK  LA    R1,1(,WKB)         POINT TO 2ND CHAR OF OPERAND
         SR    WKC,WKB            CALC. LENGTH REMAINING
         SR    R2,R2              CLEAR FOR TRT FUNCTION CODE
         L     WKA,@TRTTAB        LOAD TRT TABLE @
         EX    WKC,TRTRANG        RANGE OR DELIMITER?
         BZ    DCHK               NO
         CH    R2,K1              RANGE NOTATION?
         BNE   DCHK               NO - MUST BE DELIM
         LR    WKB,R1             YES - POINT WKB TO RANGE CHAR
         MVI   RANGEND,C' '        FOUND -
         OC    RANGEND(1),1(WKB)    SHIFT AND
         $CALL ATOX,RANGEND          CONVERT TO HEX IN R15
         LTR   RTNCD,RTNCD        IS IT GOOD?
         BM    INVINP             NO
         STH   R15,RANGEND        STORE AS BIN HALFWORD
         BCTR  WKB,0              BACK UP TO 1ST RANGE CHAR
         ST    WKB,RANGCHAR        AND STORE PTR
         LA    WKA,DATX           CALC
         AR    WKA,MSGLEN          REMAINING
         LA    WKD,4(,WKD)          CHARS AFTER
         SR    WKA,WKD               RANGE NOTATION
         BM    NOMVRANG           IF ANY,
         EX    WKA,MVRANG           SHIFT LEFT OVER '-N' CHARS
NOMVRANG SH    MSGLEN,K2          DECREMENT LENGTH ACCORDINGLY
         OI    POFLAGS,POFRANG    FLAG RANGE FORMAT IN EFFECT
DCHK     CLI   DATX,X'84' IS IT LOWERCASE 'D'?
         BE    FLAGD          YES
         CLI   DATX,C'D'      IS IT 'D'?
         BE    FLAGD          YES
         TM    TISTATUS,TISMCAND   MASTER OR CANDIDATE?
         BO    VALCMD              YES
*
INVCMD   LA    WKA,INVALM         SET UP FOR
         LA    WKB,INVALML         'INVALID FROM ........' MSG
         MVC   INVALTRM,TINAME    MOVE IN TNAME
         B     RCV32RMG           RETURN INVALID
INVINP   LA    WKA,INVALK         SET UP FOR
         LA    WKB,INVALKL         'INVALID INPUT' MSG
         B     RCV32RMG           RETURN INVALID
*
AIDPF1   EQU   INVINP             PREVIOUSLY CHECKED FOR
AIDPF3   EQU   INVINP             PREVIOUSLY CHECKED FOR
AIDPF9   EQU   INVINP             NO CODE YET
*
FLAGD    OI    TIFLAGS,TIFDSP FLAG FOR LOG SUPPRESSION (IN CASE NOT ON)
         OI    POFLAGS,POFDSP  AND SIGNAL DISPLAY TO SENDCMD LOOP
         TM    TIFLAGS,TIFDSP11  FLAGGED FOR LOGGING VIA PF11?
         BO    VALCMD            YES - LOG IT
         TM    TIFLAGS2,TIF2LOGD NO, FLAGGED FOR LOGGING VIA PF2/LOGD?
         BO    VALCMD            YES - LOG IT
         B     NAUTCHK           NO - DONT LOG IT
*
* PREPARE AND WRITE HARD COPY LOG RECORD.
*
VALCMD   L     WKA,RCVSAVE        EX LENGTH FOR MOVE
         LA    PARM@,DATX         SOURCE PTR FOR MOVE
         TM    POFLAGS,POFRANG    RANGE FORMAT?
         BZ    CMDLOG             NO
         LA    PARM@,TICMD        YES - USE ORIGINAL CMD FORMAT ON LOG
CMDLOG   $CALL PUTLOG,(PARM@),(WKA)  OUTPUT RECORD
NAUTCHK  TM    TIFLAGS,TIFNAUT    SUCCESSFUL NO-AUTO RE-ENTRY?
         BZ    RCV32OK            NO
         NI    TIFLAGS,255-TIFNAUT YES - RESET NO-AUTO RE-ENTRY FLAG,
         LH    WKB,TIABRLEN        THEN
         BCTR  WKB,0                SET UP
         EX    WKB,MVNAUTAB          NO-AUTO
         LA    WKB,L'NAUTM+1(,WKB)    RE-DISPLAY
         LA    WKA,NAUTM               OF ABBREV CMD
         LA    RTNCD,RCVCMDRS     SET CMD OK AND RESP MSG RETURN CODE
         B     RCV32RET
RCV32OK  LA    RTNCD,RCVCMDOK     SET CMD OK RETURN CODE
RCV32RET L     RPL@,RCVSAVE2      (RESTORE RPL @)
         $SRET
*
TERMEND  OC    DATX+6(3),BLANX FOLD DATA
         CLC   DATX+6(3),=C'ALL' TERMINATE NETOP?
         BNE   RCVNOCLS           NO
TERMALL  TM    TISTATUS,TISMCAND  MASTER OR CANDIDATE TERMINATION?
         BZ    INVCMD             NO - INVALID
         $CALL PUTLOG,CLOSMSG,*-1 OUTPUT REC
         POST  ECBMAIN,0          YES - CLOSE DOWN
         LA    RTNCD,RCVCLOSD     SET CLOSEDOWN CODE
         B     RCV32RET           RETURN
*
RCVNOCLS TM    TISTATUS,TISMA     MASTER TERMINATION?
         BZ    TERMOK             NO
         $CALL MAFIND             YES - FIND ALT MASTER
TERMOK   $CALL CLSDST             CLSDST TERMINAL AND FREE TICB
         $CALL PUTLOG,OFFMSG,*-1  OUTPUT REC
RCV32CLD LA    RTNCD,RCVCLDST     RETURN WITH CLSDST CODE
         B     RCV32RET           RETURN
*
HELPOUT  XC    TILNCT,TILNCT      ZERO LINE COUNT
         NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
         OI    TIFLAGS,TIFWTROL   FLAG WAITING FOR ROLL
         TM    TIFLAGS,TIFHELP    PF2 HELP?
         BZ    HELPFLAG           NO
         L     WKA,@HELPM2        SET UP FOR
         LA    WKB,HELPML2         PF2 HELP MSG
         USING HELPM2,WKA
         $HELPF2 ROLL,AUTO,ECHO,SOLO,LOGD
         DROP  WKA
         B     RCV32RMG           RETURN RESPONSE MSG
HELPFLAG OI    TIFLAGS,TIFHELP    FLAG FOR SCREEN CLEAR AFTER HELP
         L     WKA,@HELPM         SET UP FOR
         LA    WKB,HELPML           HELP MSG
         B     RCV32RMG           RETURN RESPONSE MSG
*
MVCMD    MVC   TICMD(*-*),DATX       MOVE CMD INTO TICB
MVINSRT  MVC   DATX(*-*),0(WKA)      INSERT TEXT TO GIVE FULL CMD FMT
MVABR    MVC   TIABR(*-*),DATX       SAVE ABBR CMD
ORUP     OC    UPPER(*-*),DATX       FOLD UP TO 7 BYTES FOR CLC'S
MVNAUTAB MVC   NAUTABR(*-*),TIABR    MOVE ABBR INTO NAUTMSG
MVRANG   MVC   1(*-*,WKB),3(WKB)     SHIFT OVER RANGE NOTATION
IMPLRMV1 MVC   TBUF+5(*-*),0(WKB)    MOVE REPLY TEXT INTO TBUF
IMPLRMV2 MVC   DATX(*-*),TBUF        MOVE REPLY CMD BACK INTO DATX
PF2CLC   CLC   0(*-*,WKB),UPPER      COMPARE PF2 INPUT TO KEYWORDS
MVLOGINS MVC   0(*-*,WKB),1(WKA)     MOVE REMAINDER AFTER LOGON=
TRTRANG  TRT   0(*-*,WKB),0(WKA)     SEARCH FOR RANGE NOTATION OR DELIM
RCVSAVE  DS    F
RCVSAVE2 DS    F
         TITLE 'N E T O P - MGCR SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: MGCR                                                          *
*                                                                     *
* FUNCTION: TO ISSUE SVC 34 TO SEND AN OS COMMAND                     *
*                                                                     *
* ENTRY POINT: MGCR                                                   *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*              OS CMD BUFFER      PARM@                               *
*              SUBROUTINE RETURN  RET@                                *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        WKA,R0,RTNCD                                                 *
*                                                                     *
* CALLED BY: RCV3270, PUTLOG                                          *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
MGCR     $SINIT
         TM    POSTATUS,POSTEST    RUNNING UNDER TEST?
         BO    MGCRET              YES - IGNORE REQUEST
         LR    WKA,PARM@           SAVE CMD PTR
         MODESET KEY=ZERO          KEY ZERO FOR SVC 34
         SR    R0,R0               SET ORIGIN
         LR    PARM@,WKA            AND PARM @
         SVC   34                  ISSUE OS CMD
         MODESET KEY=NZERO         RESET KEY
MGCRET   $SRET                     RETURN
         TITLE 'N E T O P - TSOUID SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: TSOUID                                                        *
*                                                                     *
* FUNCTION: TO CONVERT A TSO USER APPLID INTO THE USERID OR TO        *
*           CONVERT A VTAM TSO USERID INTO A TERMINAL NAME            *
*                                                                     *
* DESCRIPTION:                                                        *
*        PARM=0 (CALL FROM RCV3270)                                   *
*              THE VTAM TSB CHAIN IS SEARCHED FOR ASCB->USERID,       *
*        COMPARING WITH THE INPUT COMMAND IN TIABR.  IF A MATCH IS    *
*        FOUND THE INPUT COMMAND IS REPLACED BY THE TERMINAL NAME     *
*        FROM THE TSB.  SUBSEQUENTLY, THE USERID IS INSERTED IN       *
*        THE REPLY MESSAGE BY SUBROUTINE RCVVTAM.                     *
*                                                                     *
*        PARM=APPL INDEX (CALL FROM RCVVTAM)                          *
*              THE VTAM TSB CHAIN IS SEARCHED FOR TSO APPLID.         *
*        IF A MATCH IS FOUND THE ASCB PTR IS RETURNED TO ALLOW MSG    *
*        IST082I TO BE REFORMATTED TO INCLUDE USERID AND ASID.        *
*                                                                     *
* ENTRY POINT: TSOUID                                                 *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*              PARM               PARM@                               *
*              TICB PTR           TICB@                               *
*              ISTDPOHD PTR       DA@                                 *
*              SUBROUTINE RETURN  RET@                                *
*                                                                     *
* OUTPUT:                                                             *
*         WHEN PARM@=0 -                                              *
*              RTNCD RETURNED AS 0=OK, 4=AWAITING RECON, 12=NOT FOUND *
*         WHEN PARM@>0 -                                              *
*              RTNCD RETURNED AS ZERO OR ASCB PTR                     *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        WKA,WKB,WKC,WKD,RTNCD                                        *
*                                                                     *
* CALLED BY: RCVVTAM, RCV3270                                         *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
TSOUID   $SINIT
         SR    R9,R9                   ZERO RETURN REG
         LTR   WKA,PARM@               PARM = 0?
         BNZ   TSOGETZ                 NO
         LA    R9,RCVNRMSG         YES - SET DEFAULT UID NOT FOUND RC
TSOGETZ  MODESET KEY=ZERO              NECESSARY TO LOOK IN TSB
         LR    PARM@,WKA               RELOAD PARM
         L     WKA,CVTPTR              LOAD POINTER TO CVT
         USING CVTMAP,WKA              ESTABLISH ADDRESSABILITY TO CVT
         L     WKA,CVTTCASP            LOAD POINTER TO TCAS TABLE
         USING TCAST,WKA               ESTABLISH ADDRESSABILITY 2 TCAST
         L     WKA,TCASTSB             LOAD POINTER TO VTAM TSB TABLE
 ST WKA,TSOSAVEI
 XC TSOSAVEA(8),TSOSAVEA
*
         USING TSB,WKA                 ESTABLISH ADDRESSABILITY TO TSB
TSOLOOP  ICM   WKB,15,TSBEXTNT         GET ADDRESS OF TSB EXTENSION
         BZ    TSORET                  IF 0, RETURN (SHOULDNT BUT DOES)
 ST WKB,TSOSAVEB
         USING TSBX,WKB                ESTABLISH ADDRESSABILITY TO TSBX
         LTR   PARM@,PARM@             PARM > 0?
         BNZ   TSBTNAME                YES - TNAME COMPARE
         L     WKC,TSBASCBA             ELSE USERID COMPARE
         USING ASCB,WKC                ESTABLISH ADDRESSABILITY TO ASCB
         L     WKD,ASCBJBNS             AND PICK UP USERID PTR
         CLC   TIABR(7),0(WKD)         USERID MATCH?
         BNE   TSONXTSB                NO - GO ON TO NEXT TSB
         OI    TISTATUS,TISUID         YES - FLAG USERID FOUND
         LA    R9,RCVCMDOK             SET OK RC
         TM    TSBXFLG1,TSBXWREC       IS TERMINAL AWAITING RECON?
         BZ    TSOTRMID                NO
         LA    R9,RCVRMSG              YES - SET RESPONSE MSG RC
TSOTRMID MVC   DATX(8),TSBTRMID        COPY TERMINAL NAME
         MVC   TIABR+8(2),ASCBASID      AND ASID
         B     TSORET                  RETURN
*
TSBTNAME TM    TSBXFLG1,TSBXWREC       IS USER AWAITING RECON?
         BO    TSONXTSB                NO - GO ON TO NEXT TSB
         CH    PARM@,TSBXAIND          TCAS TERMINAL ID EQUAL?
         BNE   TSONXTSB                NO - GO ON TO NEXT TSB
         L     R9,TSBASCBA             NO - GET ASCB PTR
         B     TSORET                  YES
TSONXTSB ICM   WKA,15,TSBXFWD          NO - GET NEXT TSB PTR
 ST WKA,TSOSAVEA
         BNZ   TSOLOOP                 IF NON-ZERO, GO ANALYSE TSB
TSORET   MODESET KEY=NZERO             RESET KEY
         LR    RTNCD,R9                SET RETURN CODE
         $SRET                         RETURN
TSOSAVEI DS F
TSOSAVEA DS F
TSOSAVEB DS F
         DROP  WKA,WKB,WKC
         TITLE 'N E T O P - CLSDST A TERMINAL'
***********************************************************************
*                                                                     *
* NAME: CLSDST                                                        *
*                                                                     *
* FUNCTION: TO ISSUE A CLSDST AND FREE THE ASSOCIATED TICB.           *
*                                                                     *
* ENTRY POINT: CLSDST                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              RPL ADDRESS               RPL@                         *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,RTNCD                           *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: UNSTACK TO UNSTACK AND DELETE MESSAGES WHEN TERMINAL IN      *
*                WAIT-FOR-ROLL CONDITION.                             *
*                                                                     *
* CALLED BY: RCV3270,LOGON,LOSTERM,RELREQ                             *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
CLSDST   $SINIT
CLSCLS   CLSDST RPL=(RPL@),AREA=0,OPTCD=(RELEASE,SYN)
         LTR   RTNCD,RTNCD        OK?
         BZ    CLSFREE            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    CLSCLS              THEN RETRY
*
* FREE TICB ALLOCATED TO TERMINAL.
*
CLSFREE  TM    TISTATUS,TISNOMOR  REJECTED DUE TO NO MORE TICBS?
         BO    CLSRET             YES - NOTHING TO FREE
         TM    TISTATUS,TISTACK   NO - STACK OPEN?
         BZ    CLSINCRF             NO
         OI    POFLAGS,POFSTDEL     YES - FLAG FOR DELETE
         $CALL UNSTACK               AND GO DO IT
CLSINCRF LH    WKA,TICBFCT        INCREMENT
         LA    WKA,1(,WKA)          FREE
         STH   WKA,TICBFCT            COUNT
         TM    TISTATUS,TISMCAND  MASTER OR CANDIDATE TERMINATION?
         BZ    CLSCLEAR           NO
         LH    WKA,TICBMCCT       YES - DECREMENT
         SH    WKA,K1               MASTER CANDIDATE
         STH   WKA,TICBMCCT           COUNT
CLSCLEAR XC    TINDICS,TINDICS    CLEAR INDICATORS
         C     TICB@,TICBLACT     HIGHEST TICB @?
         BNH   CLSRET             NO
         LA    WKA,TICBLEN        YES -
         LA    WKB,NETPTICB        BACK UP
CLSBACK  SR    TICB@,WKA            TO PREVIOUS ACTIVE TICB @
         CR    TICB@,WKB          NETOP TICB @ ?
         BE    CLSRET
         TM    TISTATUS,TISACT    ACTIVE TICB @ ?
         BZ    CLSBACK            NO - GO BACK FURTHER
         ST    TICB@,TICBLACT     YES - SAVE NEW HI-WATER MARK
CLSRET   $SRET                RETURN
         TITLE 'N E T O P - ALPHA HEX TO BINARY HEX CONVERSION'
***********************************************************************
*                                                                     *
* NAME: ATOX                                                          *
*                                                                     *
* FUNCTION: TO CONVERT A CHARACTER CODE HEX BYTE TO 4 BITS.           *
*           (COULD HAVE USED TR INST. BUT SHORT OF TABLE SPACE)       *
*                                                                     *
* ENTRY POINT: ATOX                                                   *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              POINTER TO CHARACTER      PARM@                        *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTERS AT EXIT:                                                  *
*                                                                     *
*              BINARY HEX VALUE          RTNCD (R15)                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     RTNCD,R0                            *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: INBOUND,OUTBOUND                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
ATOX     $SINIT
         SR    RTNCD,RTNCD    PICK UP
         IC    RTNCD,0(,PARM@) CHARACTER HEX
         TM    0(PARM@),X'F0' NUMERIC?
         BO    ATOXNUM        YES
         MVI   ATOXWK,C' '    NO - FOLD
         OC    ATOXWK,0(PARM@) POSSIBLE ALPHA CHAR
         CLI   ATOXWK,C'A'    LESS THAN 'A'?
         BL    ATOXINV        YES - INVALID
         CLI   ATOXWK,C'F'    GREATER THAN 'F'?
         BNH   ATOXCHAR       NO - GOOD HEX CHAR
ATOXINV  LH    RTNCD,ATOX+4   NEITHER - RETURN NEGATIVE VAL
         B     ATOXRET
ATOXCHAR LA    RTNCD,X'39'(,RTNCD)  NO - INCREMENT TO X'FA' - X'FF'
ATOXNUM  LA    R0,X'0F'       AND OFF
         NR    RTNCD,R0        HI-ORDER 4 BITS
ATOXRET  $SRET                RETURN HEX VAL IN R15
ATOXWK   DS    X              WORK AREA
         TITLE 'N E T O P - ALTERNATE MASTER TICB SEARCH'
***********************************************************************
*                                                                     *
* NAME: MAFIND                                                        *
*                                                                     *
* FUNCTION: TO SEARCH TICBS FOR ACTIVE MASTER CANDIDATE TO REPLACE AN *
*        ENDED, LOST OR REQUESTED MASTER TERMINAL.                    *
*                                                                     *
* DESCRIPTION: IF AN ACTIVE CANDIDATE IS FOUND IT IS MARKED MASTER,   *
*        OTHERWISE THE MAINLINE IS POSTED TO CLOSE THE PPO ACB TILL   *
*        ANOTHER MASTER CANDIDATE LOGS ON.                            *
*                                                                     *
* ENTRY POINT: MAFIND                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              POINTER TO TICB           TICB@                        *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    TICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGISTERS     WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: RELREQ, LOSTERM AND INBOUND(WITH PF3) EXITS              *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
MAFIND   $SINIT
         L     WKB,@ACBPPO        SET UP BASE FOR ACB
         TM    ACBOFLGS-IFGACB(WKB),ACBOPEN  IS IT OPEN?
         BZ    MARET              IF NOT FORGET SEARCH
         LA    DA@,TBUF          TEMP ISTDPOHD FOR STAT TEST
         NI    POHSTAT,255-POHGEN     TURN OFF SOLICITED FLAG
*        DROP  DA@
         ST    TICB@,MASAVE   SAVE CURRENT TICB PTR
         $CALL IDFIND,0       BUILD TICB LIST OF MASTER CANDIDATES
         LTR   RTNCD,RTNCD    FIND ANY?
         BNZ   NONEWMA        NO - CLOSE PPO AND USE SPO
         LA    WKB,TICBLIST   LOAD INDEX REG
MAFLOOP  CLC   @MATICB+1(3),1(WKB) IS THIS MASTER TICB @?
         BNE   NEWMAFND       NO - MAKE IT NEW MASTER
         TM    0(WKB),LASTPARM LAST TICB IN LIST?
         BO    NONEWMA        YES - NO ALTERNATE MASTER FOUND
         LA    WKB,4(,WKB)    NO - INCREMENT INDEX
         B     MAFLOOP         AND TRY NEXT TICB
*
NEWMAFND L     TICB@,0(WKB)    CHANGE NEW
         ST    TICB@,@MATICB    MASTER TICB @
         OI    TISTATUS,TISMA     SET MASTER BIT IN TICB
         MVC   NTP1NODE,TINAME INFORM OPERATOR
         $CALL PUTLOG,NTP01MSG OF CHANGE IN MASTER
         B     MATICBR         RETURN
*
NONEWMA  NI    POSTATUS,255-POSHVMA RESET 'HAVE MASTER' FLAG
         POST  ECBMAIN,2      POST CLOSE OF PPO ACB
MATICBR  L     TICB@,MASAVE   RESTORE CURRENT TICB PTR
MARET    $SRET
*
MASAVE   DS    F
         TITLE 'N E T O P - IDFIND SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: IDFIND                                                        *
*                                                                     *
* FUNCTION: TO DETERMINE, FROM THE PO HEADER, WHAT TERMINAL A         *
*        MESSAGE IS TO GO TO.                                         *
*                                                                     *
* DESCRIPTION: IF MESSAGE GENERATED BY VTAM, RETURNS LIST OF          *
*        MASTER TERMINAL TICB'S. IF MESSAGE GENERATED BY PO, SEARCHES *
*        TICBPOOL FOR AN ACTIVE TERMINAL WITH THE ID IN THE PO        *
*        HEADER. IF FOUND, RETURNS THE ADDRESS OF THAT TICB. IN ANY   *
*        CASE, INDICATES IN THE RETURN CODE WHETHER DESTINATION WAS   *
*        DETERMINED OR NOT.                                           *
*                                                                     *
* ENTRY POINT: IDFIND                                                 *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*            PARM                 PARM@   0=SELECT  1=ALL TICBS       *
*            ADDRESS OF ISTDPOHD  DA@                                 *
*            SUBROUTINE RETURN    RET@                                *
*        OTHERS IGNORED                                               *
*                                                                     *
* OUTPUT: TICBLIST CONTAINS APPROPRIATE TICB PTRS                     *
*        RETURN CODE IN REGISTER 15:  0 = FOUND                       *
*                                     4 = NOT FOUND                   *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*              ADDRESS OF TICB    TICB@                               *
*              WKA,WKB            USED AS WORK REGISTERS              *
*              RTNCD              CONTAINS RETURN CODE                *
*                                                                     *
* CALLED BY: OUTBOUND                                                 *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        SUBROUTINE INTERNAL TO OUTBOUND EXIT                         *
*                                                                     *
***********************************************************************
*
IDFIND $SINIT
*
* SEARCH TICB POOL FOR ACTIVE TICB WITH THIS ID.
*
         SR    RTNCD,RTNCD        ZERO ORIGIN TICB INDICATOR
         LA    WKD,TICBLIST-4     SET TICBLIST INDEX
         LR    R0,WKD             SAVE FOR COMPARISON
IDSTART  LA    TICB@,TICBS+TICBLEN  LOOP INDEX (IGNORE NETOP TICB)
         LA    WKA,TICBLEN        INCREMENT
         L     WKB,TICBLACT       COMPARAND - LAST ACTIVE TICB
IDLOOP   TM    TISTATUS,TISACT    IS TERMINAL ACTIVE?
         BZ    IDTEST             NO - FORGET THIS ONE
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BE    IDMCHK             YES
         TM    POSTATUS,POSECHO   NO - SHOULD THIS MSG BE ECHOED?
         BZ    IDSOLCHK             NO
         TM    TIFLAGS2,TIF2ECHO  SUPPRESS ECHOING TO THIS TERMINAL?
         BO    IDTEST             YES - BYPASS THIS TICB
         CR    TICB@,RTNCD        IS THIS THE ORIGIN TICB?
         BE    IDTEST               YES - BYPASS (ALREADY IN TICBLIST)
         B     IDMCHK
IDSOLCHK TM    POHSTAT,POHGEN       NO - SOLICITED MESSAGE?
         BO    IDSOLC                 YES
         LTR   PARM@,PARM@        PARM > 0 (BROADCAST)
         BNZ   IDUSE              YES - SEND TO ALL TERMINALS
         TM    TIFLAGS2,TIF2SOLO  ONLY SOLICITED MSGS TO TERMINAL?
         BO    IDTEST             YES - BYPASS THIS TICB
IDMCHK   EQU   *                  ECHO UNSOLICITED MSGS TO ALL TERMS
*DMCHK   TM    TISTATUS,TISMCAND  IS TERMINAL MASTER CANDIDATE?
*        BZ    IDTEST             NO
IDUSE    LA    WKD,4(,WKD)        YES - UPDATE TICBLIST INDEX
         ST    TICB@,0(WKD)       SAVE PTR IN TICBLIST
         B     IDTEST
IDSOLC   CLC   POHTID,TID         ID = TICB ID?
         BNE   IDTEST             NO - TRY NEXT TICB
*
*        IF MCANDT NON-DISPLAY RESPONSE, ECHO TO ALL MCANDTS
*
         TM    TIFLAGS,TIFDSP     RESP. TO DISPLAY CMD?
         BO    IDFOUND            YES
         CLC   TICBMCCT,K1        ONLY 1 MASTER LOGGED ON?
         BNH   IDFOUND            YES - NOBODY TO ECHO TO
         OI    POSTATUS,POSECHO   NO - FLAG THIS MSG TO BE ECHOED,
         MVC   DUMTICB(TICOPYL),TICB  COPY PARTIAL TICB
         LR    RTNCD,TICB@         SAVE ORIGIN @
         ST    TICB@,@ECHTICB       IN
         ST    TICB@,TICBLIST        3 PLACES
         LA    TICB@,DUMTICB       POINT TO COPY
         LA    R1,IDSTART         SET CONTINUE ADDRESS
IDINSCHG LH    WKA,TICMDLEN        GET CMD LEN
         LH    WKD,TINAMLEN         INCR BY NODENAME LEN,
         LA    WKB,4(WKD,WKA)       AND ' => '
         CH    WKB,=H'40'          LENGTH > TICMD AREA?
         BNH   IDSTCMDL            NO
         LH    WKB,=H'40'          YES - USE MAX LENGTH
IDSTCMDL STH   WKB,TICMDLEN        STORE IN TICB
         LA    WKB,TICMD(WKD)      POINT AFTER NODENAME INSERT AREA
         SH    WKA,K1              DECR CMD LEN
         BNM   IDMV1               IF < 0,
         SR    WKA,WKA              RESET TO 0
IDMV1    EX    WKA,IDMVCMD1        MOVE OUT CMD
         SH    WKD,K1              DECR NODENAME LEN
         BNM   IDMV2               IF < 0,
         SR    WKD,WKD              RESET TO 0
IDMV2    EX    WKD,IDMVNAM         MOVE IN NODENAME, FOLLOWED BY
         MVC   0(4,WKB),=C' => '     ARROW, THEN
         EX    WKA,IDMVCMD2        MOVE BACK CMD PAST INSERT
         LA    WKD,TICBLIST        POINT AFTER ORIGIN TICB FOR RESCAN
         BR    R1                 THEN GO REGENERATE TICB LIST IF ECHO
*                                  OR RETURN IF INTCMD RESPONSE
IDTEST   BXLE  TICB@,WKA,IDLOOP   LOOP BACK TILL ALL ACT TICBS CHECKED
         CR    R0,WKD             ANY TICBS FOUND?
         BE    IDNFOUND           NO
         OI    0(WKD),LASTPARM    YES - FLAG LAST TICB @
         TM    POHSTAT,POHGEN     SOLICITED MESSAGE?
         BO    IDSOLOK            YES
         LA    TICB@,VTAMTICB     NO - USE VTAM TICB SO LOG LOOKS GOOD
         B     IDRET
IDSOLOK  L     TICB@,0(WKD)       YES - PUT LAST TICB FOUND IN TICB@
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BNE   IDORGCHK           NO
         LA    WKA,NETPTICB       YES -
         MVC   TIFLAGS-TICB(1,WKA),TIFLAGS  COPY FLAGS
         LR    TICB@,WKA          PUT NETOP TICB @ IN TICB@
         LA    R1,IDRET0          SET CONTINUE ADDRESS
         CLC   TINAME(5),TICMD    'NETOP => ' ALREADY INSERTED?
         BNE   IDINSCHG           NO - GO INSERT ORIGIN IN TICMD
         B     IDRET0             YES - RETURN
IDORGCHK LTR   RTNCD,RTNCD        ORIGIN TICB @ SAVED?
         BZ    IDRET0             NO
         LR    TICB@,RTNCD        YES - PUT ORIGIN TICB @ IN TICB@
         B     IDRET0
IDNFOUND TM    POHSTAT,POHRREQ    IS REPLY REQUESTED
         BZ    IDRET4             NO
         TM    POSTATUS,POSHVMA   IS THERE A MASTER?
         BO    IDEFAULT           YES - USE IT
IDRET4   LA    RTNCD,4            NO - RETURN NOT FOUND
         B     IDRET              RETURN
IDEFAULT L     TICB@,@MATICB      DEFAULT IS MASTER
IDFOUND  ST    TICB@,TICBLIST
         OI    TICBLIST,LASTPARM   FLAG LAST TICB PTR
IDRET0   SR    RTNCD,RTNCD        INDICATE FOUND
IDRET    $SRET                    RETURN
*
IDMVCMD1 MVC   TBUF(*-*),TICMD MOVE CMD OUT
IDMVCMD2 MVC   4(*-*,WKB),TBUF MOVE CMD BACK IN
IDMVNAM  MVC   TICMD(*-*),TINAME  INSERT SOURCE NODENAME
         TITLE 'N E T O P - MESSAGE LOG SUBROUTINE'
***********************************************************************
*                                                                     *
* ENTRY: PUTLOG                                                       *
*                                                                     *
* FUNCTION: TO TIME STAMP AND ISSUE LOG MESSAGES                      *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              EX LENGTH,  MESSAGE PTR             PARM@              *
*                 LENGTH IS BYTE 0  (IF ZERO, WTO ASSUMED)            *
*                 MSG PTR IS BYTES 1-3                                *
*              RETURN ADDRESS IN EXIT              RET@               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,WKB,WKD (WKC AVOIDED - ACB@)    *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: EVERYONE, MOSTLY                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
PUTLOG   $SINIT
         LR    WKA,PARM@      SAVE PARM
*
*        I/O TO VTAMLOGO HAS BEEN DISABLED SINCE WE ARE GETTING A 001
*        ABEND THAT I DON'T HAVE TIME TO FIX. ALL MESSAGES ARE
*        WRITTEN TO SYSLOG AND ARE AVAILABLE USING QUEUE.
*
*        PUT   VTAMLOGO       GET BUFFER PTR (DISABLED)
         LA    R1,LOGBUF      SET UP R1 WITH BUFFER ADDR (EQU PUT)
         LR    LOG@,R1        SAVE IT
         USING LOGREC,LOG@
         LR    PARM@,WKA      RESTORE PARM
PUTCLR   MVI   LOGASA,C' '    SINGLE SPACING
         MVC   LOGWTLHD,BLANX CLEAR WTL PAD (FOR SYSLOG READABILITY)
         MVC   LOGBL1,BLANX   CLEAR
         MVC   LOGBL2,BLANX    PREFIX
         STCM  PARM@,8,HEX    STORE LENGTH BYTE
         SR    WKA,WKA        INSERT
         ICM   WKA,1,HEX       LENGTH
         BZ    PUTWTO         IF ZERO, ASSUME WTO BUFFER
         C     WKA,=AL4(133-(LOGPRFL+1)) MAX RECORD LENGTH?
         BNH   *+12           NO => USE SPECIFIED LENGTH
         L     WKA,=AL4(133-(LOGPRFL+2)) YES=>SET MAX LENGTH - 1
         MVI   LOGCONT,C'+'         AND SET TRUNCATE CHAR IN RECORD
         MVC   LOGNODE,TINAME INSERT TERMINAL NAME
         EX    WKA,PUTLOGMV   MOVE MSG TO LOG OUTPUT AREA
         LA    WKA,LOGPRFL+1(WKA)  CALC RDW LL VALUE
         B     PUTRDW         GO STORE IN LOGREC
*
PUTWTO   LH    WKA,0(PARM@)   PICK UP LENGTH
         LR    WKB,WKA        COPY IT
         SH    WKB,K5         REDUCE BY WTO PREFIX LENGTH +1 FOR EX
         EX    WKB,PUTWTOMV   MOVE MSG TO LOG OUTPUT AREA
         WTO   MF=(E,(1))     DO WTO (OR TPUT)
         OI    POFLAGS,POFWTO FLAG WTO DONE FOR WTL CHECK
         LA    WKA,LOGTIML(WKA)  CALC RDW LL VALUE
*
PUTRDW   SLL   WKA,16         SHIFT TO HI END
         ST    WKA,LOGRDW     STORE IN RDW
         TIME
         SRL   R0,4           NO CENTISECS
         STM   R0,R1,WORK     STORE TIME AND DATE
         OI    WORK+3,X'0F'   OVERLAY DECISECS WITH VALID SIGN
         MVC   TBUF(10),=X'402120204B21204B2120'
         ED    TBUF(10),WORK  EDIT TIME FIELD
         MVC   LOGTIME,TBUF+2 MOVE TIME TO LOG MSG
         MVC   SENDTIME,TBUF+2 MOVE TIME TO MSG
PUTLNCT  LH    WKA,LOGLN#     INCREMENT
         LA    WKA,1(,WKA)     LINE COUNT
         CH    WKA,PAGESIZE   END OF PAGE?
         BL    PUTNPAGE       NO
         MVI   LOGASA,C'1'    YES - SET ASA FOR SKIP,
         L     WKD,LOGHDR     GET FULL LENGTH RDW
         LR    WKA,WKD        COPY IT
         SRL   WKA,16         SHIFT TO LO HALF
         SH    WKA,LOGRDW     CALC REMAINING LENGTH
         SH    WKA,K12        SUBTRACT 10 FOR DATE TEXT AND 2 FOR EX
         BM    PUTLNCT1       <0 => WILL OVERLAY MSG DATA => SKIP DATE
         LR    WKB,LOG@       CALCULATE START OF
         AH    WKB,LOGRDW      UNCLEARED AREA
         ST    WKD,LOGRDW     STORE NEW RDW IN BUFFER
         MVI   0(WKB),C' '    CLEAR
         EX    WKA,PUTCLRMV    REMAINDER OF RECORD
         MVC   LOGDLIT,=C'DATE '  ADD DATE
         UNPK  LOGDATE,DATE+1(3)   FIELD TO RECORD
PUTLNCT1 LH    WKA,LOGPG#     INCREMENT
         LA    WKA,1(,WKA)     PAGE COUNT
         CH    WKA,EOFPGCNT   TIME TO WRITE EOF?
         BL    PUTPGCNT       NO
         CLOSE (VTAMLOGO)     YES - CLOSE,
         OPEN  (VTAMLOGO,OUTPUT)  AND RE-OPEN MOD
         SR    WKA,WKA        ZERO PAGE COUNT
PUTPGCNT STH   WKA,LOGPG#     SAVE NEW PAGE COUNT
         SR    WKA,WKA        ZERO LINE COUNT
PUTNPAGE STH   WKA,LOGLN#     SAVE NEW LINE COUNT
         PUT   SYSPRINT,(LOG@)  PRINT RECORD FROM VTAMLOGO BUFFER
         TM    POSTATUS,POSSEND SEND TO TSO USERS?
         BZ    PUTDTCHK       NO
         NI    POSTATUS,255-POSSEND YES - RESET FLAG,
         MVC   SENDUTXT,LOGTXT       MOVE TEXT TO CMD BUFFER
         $CALL MGCR,SENDUBUF          AND SEND IT
PUTDTCHK CLC   DATE+3(1),WORK+7  HAS DATE CHANGED?
         BE    PUTWTL            NO - CONTINUE
         MVC   DATE+1(3),WORK+5  YES - SAVE NEW DATE
         CLI   STTIME,X'22'   ARE THERE MORE THAN 2 HOURS OF LOG?
         BNL   PUTWTL         NO - DONT BOTHER TO SPINOFF
         $CALL PRLOG          YES - RE-INITIALIZE LOG, SPINOFF SYSPRINT
*
*         FOLLOWING CODE SUPPORTS WTL FUNCTION
*
PUTWTL    TM    POFLAGS,POFWTO WTO ALREADY DONE?
          BO    PUTWTLSK       YES - SKIP WTL
          WTL   MF=(E,LOGREC) WRITE TO LOG
PUTWTLSK  NI    POFLAGS,255-POFWTO  RESET FLAG
PUTRET   $SRET                   RETURN
*                                                                     *
PUTLOGMV MVC   LOGMSG(*-*),0(PARM@)
PUTWTOMV MVC   LOGNODE(*-*),4(PARM@)
PUTCLRMV MVC   1(*-*,WKB),0(WKB)
         TITLE 'N E T O P - SYSPRINT ALLOC,OPEN,CLOSE'
***********************************************************************
*                                                                     *
* ENTRY: PRLOG                                                        *
*                                                                     *
* FUNCTION: TO INITIALIZE OR RE-INITIALIZE SYSPRINT                   *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              RETURN ADDRESS IN EXIT              RET@               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: MAINLINE, PUTLOG                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
PRLOG    $SINIT
         TM    SYSPRINT+48,X'10' SYSPRINT OPEN?
         BZ    PRLOGOAL        NO
         CLOSE (SYSPRINT)      YES - CLOSE TO SPINOFF AND REALLOC
         CLOSE (VTAMLOGO)      CLOSE, THEN RE-INITIALIZE -
         XC    WORK,WORK       CLEAR AND
         MVC   WORK+6(2),DATE+2 MOVE IN DAY #
         CVB   WKA,WORK        CONVERT
         D     WKA,K2          DIVIDE BY 2
         LTR   WKA,WKA         IF REMAINDER ZERO,
         BZ    PRLOPENV         GO RE-OPEN DISP=MOD
         OPEN  (VTAMLOGI,OUTPUT) ELSE RE-OPEN VTAMLOG DISP=OLD
         CLOSE (VTAMLOGI)      CLOSE TO WRITE EOF
         B     PRLOPENV        GO RE-OPEN DISP=MOD
*                              MUST BE INITIALIZATION
PRLOGOAL $DYNAL LGOTUPF,VERB=2 FREE F(VTAMLOGO)
         $DYNAL LGOTUP,VERB=1 ALLOC F(VTAMLOGO) DA('SYS1.VTAMLOG') MOD
         BZ    PRLOGIAL       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOGIAL            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOGIAL $DYNAL LGITUP,VERB=1 ALLOC F(VTAMLOGI) DA('SYS1.VTAMLOG')
         BZ    PRLOPENV       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOPENV            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOPENV OPEN  (VTAMLOGO,OUTPUT) OPEN VTAMLOG DISP=MOD
         TM    VTAMLOGO+48,X'10' LOG OPEN?
         BZ    PRLNOPEN        NO
         $DYNAL PRTUP,VERB=1  ALLOC F(SYSPRINT) SYSOUT(A) (FREE=CLOSE)
         BZ    PRLOPENS       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOPENS            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOPENS OPEN  (SYSPRINT,OUTPUT)
         TM    SYSPRINT+48,X'10' OK?
         BO    PRLHDR          YES
         MVC   NTP08DDN,SYSPRINT+40  MODIFY DDNAME IN MSG
PRLNOPEN WTO   MF=(E,NTP08MSG)   INFORM OPERATOR
         $AB   19,NODUMP         AND ABEND U19
PRLHDR   UNPK  LOGHDRDT,DATE+1(3) MOVE DATE TO HEADER
         PUT   SYSPRINT,LOGHDR   PRINT HEADER
         PUT   SYSPRINT,LOGSKP    AND SKIP 2 LINES
         MVC   LOGLN#,K3      SET LINE COUNT
*
*        VTAMLOGO HAS BEEN DISABLED
*
*        PUT   VTAMLOGO       GET BUFFER PTR
*        MVC   0(125,R1),LOGHDR  INSERT HEADER
PRLRET   $SRET
         TITLE 'N E T O P - SND3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: SND3270 SUBROUTINE                                            *
*                                                                     *
* FUNCTION: INSERT 3270 ORDERS INTO A MESSAGE FROM VTAM. UPDATE       *
*        THE SCREEN LINE POINTER, SEND MESSAGE TO MULTIPLE TERMINALS. *
*                                                                     *
* DESCRIPTION: THIS ROUTINE MOVES THE MESSAGE TEXT TO SENDTXT AND     *
*            AND INSERTS THE 3270 ORDERS INTO SENDORDR.               *
*            THIS ROUTINE USES A TABLE OF SCREEN ADDRESSES AT         *
*            LABEL LINE1 TO MAINTAIN A ROLLING OUTPUT AREA OF LINEMAX *
*            LINES AND UPDATES THE CURRENT OUTPUT LINE POINTER        *
*            TILNCT IN THE TICB.  IF IN NOROLL MODE, STACK IS CALLED  *
*            TO STACK THE LINE.  WHEN A PA KEY IS EVENTUALLY HIT,     *
*            RCV3270 CALLS UNSTACK WHICH IN TURN CALLS SND3270 FOR    *
*            EACH LINE UNTIL A FULL SCREEN CONDITION ARISES OR ALL    *
*            STACKED LINES ARE DISPLAYED.                             *
*                                                                     *
* ENTRY POINT: SND3270                                                *
*                                                                     *
*       AT ENTRY:                                                     *
*                                                                     *
*              TICBLIST CONTAINS TICB PTRS TO TARGET TERMINALS        *
*              ISTDPOHD OR STKEL CONTAINS MSG                         *
*              MSGLEN CONTAINS LENGTH-1                               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              BASE FOR TICB      TICB@                               *
*              ADDRESS OF ISTDPOHD  DA@                               *
*              MSG LENGTH-1       MSGLEN                              *
*              WORK REGS          WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 4                                                   *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: STACK TO STACK MESSAGES WHEN TERMINAL IN WAIT-FOR-ROLL COND. *
*                                                                     *
* CALLED BY: OUTBOUND EXIT, UNSTACK                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
SND3270 $SINIT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING (SET IN UNSTACK)
*        PRINT NOGEN
         MODCB AM=VTAM,       SET UP RPL FOR SEND(S)                   *
               RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               POST=SCHED,                                             *
               OPTCD=SYN,                                              *
               RESPOND=(EX,FME,NRRN)
         PRINT GEN
         ST    MSGLEN,SNDSAVE     SAVE LENGTH
         SR    TICB@,TICB@        ZERO HI BYTE
         LA    OUTX,TICBLIST-4    SET UP INDEX
SNDLOOP  LA    OUTX,4(,OUTX)      INCREMENT TICBLIST INDEX
         ICM   TICB@,7,1(OUTX)    GET 1ST TICB PTR
         BZ    SNDEND             RETURN IF NO TICB PTRS
         L     MSGLEN,SNDSAVE     RESTORE CURRENT MSG LEN
         TM    POSTATUS,POSMLTSN  MULTIPLE SEND?
         BZ    SNDNMLT            NO
         TM    POSTATUS,POSINSRT  ACCEPTED/FAILED MSG?
         BZ    SNDSETA            NO - DONT INSERT
         TM    POSTATUS,POSECHO   ECHOED RESPONSE?
         BO    SNDECHO            YES - GO DO INSERTION
         B     SNDSETA            NO - BYPASS MSG EDIT AND MOVE
SNDNMLT  MVC   SENDAT2(4),UNSENDAT  RE-INIT ATTRS
         MVI   SENDAT1,LO         INIT LO-INTENS ATTR
         MVI   SENDTXT,C' '       CLEAR SEND RECORD TO BLANKS
         MVC   SENDTXT+1(L'SENDTXT-1),SENDTXT
         TM    POFLAGS,POFUNSTK   UNSTACKING?
         BZ    SNDLCHK            NO
         LA    WKD,UNSENDSL-1     YES - (UNSTACK RETURNS L-1)
         CR    WKD,MSGLEN             UNSEND TYPE MSG?
         BNE   SNDSTOK                NO
         MVC   UNSENDTM(UNSENDSL),STKDATA  YES - MOVE IN STACKED MSG
         MVC   UNSENDAD,SENDADDR   AND LAST USED ADDR
         MVC   TIUNADDR,SENDADDR  SAVE FOR 1ST NONSTACK UNSOL REPEATER
         LA    WKA,UNSEND         LOAD MSG PTR
         LA    WKB,UNSENDL        LOAD MSG LENGTH
         B     SNDSEND             AND SEND TO SAME LINE ON SCREEN
SNDSTOK  EX    MSGLEN,SNDMV2      MOVE MSG FROM STACK AREA
         B     SNDSETA
*
SNDLCHK  LA    WKA,L'SENDTXT      COMPARE WITH
         CR    MSGLEN,WKA          TEXT AREA LENGTH
         BL    SNDMVMG            IF LOW, OK
         BE    SNDMVDSH           IF HI,
         LA    MSGLEN,1(,WKA)      USE MAX LENGTH
SNDMVDSH MVC   SENDAT2+1,=C' --'  BLANK ATR2, DASH SF,ATR3
SNDMVMG  EX    MSGLEN,SNDMV1      COPY MESSAGE INTO SND3270 BUFFER
         TM    POHSTAT,POHGEN     SOLICITED?
         BO    SNDHICK            YES
         MVI   SENDAT1,HI         SET HI-INTENS ATTR
         B     SNDSETA
SNDHICK  TM    POFLAGS,POFHINT    MAKE THIS ONE HI INTENSITY?
         BZ    SNDCLIN            NO
         MVI   SENDAT1,HI         YES - SET HI-INTENS ATTR
         NI    POFLAGS,255-POFHINT  AND RESET FLAG
SNDCLIN  CLC   DAMSGRSP,=C'ACCEPT' IST097 ....  ACCEPTED MSG?
         BE    SNDINS1            YES
         TM    TIFLAGS,TIFDSP     DISPLAY IN PROGRESS?
         BZ    SNDSETA            NO
         CLC   DAMSGFAI,=C'IGNORE' IST0XX ....  IGNORED MSG?
         BE    SNDNDSP            YES
         CLC   DAMSGRSP,=C'FAILED' IST0XX ....  FAILED MSG?
         BE    SNDNDSP            YES
         CLC   DAMSGFAI,=C'FAILED' IST0XX ....  FAILED MSG?
         BNE   SNDSETA            NO
*                                 YES - RESET FLAGS AND COUNT, SINCE
*                                  THERE WILL BE NO NULL MSG TO TRIGGER
*                                  THE RESET IN OUTBOUND
SNDNDSP  LH    WKA,TIDSPCT        DISPLAY IS COMPLETE
         SH    WKA,K1             DECREMENT OUTSTANDING DISPLAY COUNT
         BM    SNDRSTDC      IF -VE SOMETHING WENT WRONG - DONT UPDATE
         STH   WKA,TIDSPCT          ELSE STORE IT
         BP    SNDINS1            IF ZERO,
SNDRSTDC NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
*
SNDINS1  OI    POSTATUS,POSINSRT  SET INSERT FLAG (SCOPE = SND3270)
SNDECHK  TM    POSTATUS,POSECHO   ECHOED RESPONSE?
         BO    SNDECHO            YES
         CLI   POHTID,0           NETOP TICB ID?
         BNE   SNDNINT            NO - NOT POFINTCM RESPONSE
         LA    TICB@,NETPTICB     YES - USE NETOP TICB FOR CMD INSERT
         B     SNDNINT
SNDECHO  C     TICB@,@ECHTICB     IS THIS THE SOURCE TICB?
         BE    SNDNINT            YES
         LA    TICB@,DUMTICB      NO - USE DUMMY TICB FOR CMD INSERT
         NI    POSTATUS,255-POSINSRT TURN OFF TO PREVENT RE-INSERTION
SNDNINT  LH    WKA,TICMDLEN       PICK UP LAST CMD LEN
         LA    WKB,L'SENDTXT      INSERT
         SR    WKB,WKA             CMD INTO
         CR    WKB,MSGLEN           SEND AREA,
         BH    SNDROOM               RIGHT JUSTIFIED
         LR    WKD,MSGLEN
         LR    R15,WKD
         SR    WKD,WKB                 TRUNCATED
         SR    WKA,WKD                  IF NECESSARY,
         BNP   SNDRLTB                   (UNLESS NO ROOM)
         LR    WKB,R15                    TO AVOID
SNDROOM  BCTR  WKA,0                       OVERLAYING
         LA    WKB,SENDTXT(WKB)             REPLY
         EX    WKA,SNDMVCMD                  TEXT
         MVI   0(WKB),SF          HI-INTENSITY
         MVI   1(WKB),HI           INSERTION
         LA    MSGLEN,L'SENDTXT+1 SET UP FULL TEXT LENGTH IN CASE STACK
SNDRLTB  L     TICB@,0(,OUTX)     RESTORE TICB @ IN CASE MODIFIED
SNDSETA  LH    WKA,TILNCT         LOAD CURRENT LINE NUMBER
         LR    WKB,WKA            DUP CURRENT LINE NUMBER
         SLA   WKB,1              MULT BY TWO
         LA    WKB,LINE1(WKB)     CURRENT BUFFER ADDRESS PTR
         MVC   SENDADDR,0(WKB)    SET UP BUFFER ADDRESS
         TM    POFLAGS,POFUNSTK   UNSTACKING?
         BO    SNDINCR            YES
*
SNDSCHK  TM    POHSTAT,POHGEN     SOLICITED?
         BZ    SNDUNCK            NO - GO CHECK FOR REPEATER
         NI    TIFLAGS,255-TIFUNSOL YES - RESET LAST DISPLAYED MSG FLAG
SNDRCHK  TM    TIFLAGS,TIFWTROL   WAITING FOR ROLL?
         BZ    SNDINCR            NO
         LA    MSGLEN,11(,MSGLEN) YES - INCREMENT FOR TIME FIELD
         $CALL STACK,SENDTIME,(MSGLEN)  YES - STACK MESSAGE
         B     SNDSEND             THEN OUTPUT NEW STACK COUNT
*
SNDUNCK  CP    UNSOL#,KP1         REPEAT COUNT ZERO?
         BH    SNDTUCK            NO - REPEATER
SNDFLUN  OI    TIFLAGS,TIFUNSOL   YES - FLAG LAST DISPLAYED MSG,
         MVC   TIUNADDR,SENDADDR   SAVE 3270 BUFAD,
         B     SNDRCHK             AND GO CHECK FOR ROLL
SNDTUCK  TM    TIFLAGS,TIFUNSOL   IS LAST DISPLAYED MSG UNSOL?
         BZ    SNDFLUN            NO - GO FLAG IT NOW
         TM    TIFLAGS,TIFHELP    HELP SCREEN DISPLAYED?
         BO    SNDRCHK            YES - SUPPRESS SHORT UNSOL MSGS
         MVC   UNSENDTM,SENDTIME   MOVE TIME FIELD TO GIVE LATEST TIME
         UNPK  UNSEND#,UNSOL#     UNPACK UNSOL COUNT
         OI    UNSEND#+1,X'F0'    FIX UP SIGN
         MVC   UNSENDAD,TIUNADDR  YES - SET UP SHORT UNSOL. MSG
         LA    WKA,UNSEND         LOAD MSG PTR
         LA    WKB,UNSENDL        LOAD MSG LENGTH
         TM    TIFLAGS,TIFWTROL   WAITING FOR ROLL?
         BZ    SNDSEND            NO - SEND TO SAME LINE ON SCREEN
         $CALL STACK,UNSENDTM,UNSENDSL YES - STACK MESSAGE,
         B     SNDSEND               THEN OUTPUT NEW STACK COUNT
*
SNDINCR  LA    MSGLEN,SENDL       LOAD FULL LENGTH
         CLI   SENDAT3,C'-'       3RD ATTR DASHED?
         BNE   SNDLOK             NO
         SH    MSGLEN,K2          YES - DECR BY LENGTH OF MISSING SFS
SNDLOK   LA    WKA,1(,WKA)        INCR CURRENT LINE NUMBER
         CH    WKA,LINEMAX        ARE WE PAST END?
         BH    SNDLAST            YES
         LA    MSGLEN,SENDSEPL(,MSGLEN)  ADD LENGTH OF SEPARATOR
         B     SNDSETL
SNDLAST  SR    WKA,WKA            RESET TO LINE ONE
         TM    TIFLAGS2,TIF2ROLL  ROLL MODE?
         BO    SNDSETL            YES
         OI    TIFLAGS,TIFWTROL   NO - SET WAITING FOR ROLL FLAG
SNDSETL  STH   WKA,TILNCT         UPDATE CURRENT LINE #
*
* ISSUE SEND TO TRANSMIT THE MESSAGE.
*
         LA    WKA,SENDORDR       LOAD DEFAULT AREA PTR
         LR    WKB,MSGLEN         LOAD DEFAULT MSG LENGTH
SNDSEND  L     R15,TICID          LOAD CID FOR ADDRESSED TERMINAL
         SEND  RPL=(RPL@),        USE PRESET RPL                       *
               AREA=(WKA),        SET AREA IN CASE INT3270 CALLED      *
               ARG=(R15),         SET CID FOR TERMINAL                 *
               RECLEN=(WKB)       LENGTH CAN VARY
         LTR   RTNCD,RTNCD        OK?
         BZ    SNDOK              YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SNDSEND             THEN RETRY
         CH    ACTCD,DAMAGE       IF TERMINAL IS NOT AVAILABLE
         BNE   SNDDAMG            AND
         TM    POHSTAT,POHRREQ    REPLY WAS REQUESTED
         BZ    SNDDAMG            AND
         L     TICB@,@MATICB      MESSAGE NOT FOR MASTER
         CLC   RPLARG,TICID       THEN
         BE    SNDDAMG            ROUTE MESSAGE TO MASTER:
         B     SNDSEND            AND RETRY
SNDDAMG  CH    RTNCD,RETRY
         BE    SNDSEND            RETRY
SNDOK    TM    0(OUTX),LASTPARM   IF NOT LAST TICB PTR
         BO    SNDEND              ...
         OI    POSTATUS,POSMLTSN   FLAG MULTIPLE SEND, THEN
         B     SNDLOOP             SEND OUTPUT TO NEXT TERMINAL
SNDEND   NI    POSTATUS,255-(POSMLTSN+POSINSRT+POSECHO) RESET FLAGS
         $SRET                    RETURN
*
SNDMVCMD MVC   2(*-*,WKB),TICMD        MOVE CMD INTO SEND AREA
SNDMV1   MVC   SENDTXT(*-*),DATX        MOVE INTO SEND AREA
SNDMV2   MVC   SENDTIME(*-*),STKDATA   MOVE INTO SEND AREA
SNDSAVE  DS    F              SAVE WORD
         TITLE 'N E T O P - MESSAGE STACK SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: STACK                                                         *
*                                                                     *
* FUNCTION: TO STACK MESSAGES FOR TERMINALS IN NO-ROLL MODE WHEN AN   *
*        AWAITING ROLL CONDITION (FULL SCREEN) IS DETECTED.           *
*                                                                     *
* ENTRY POINTS: STACK                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              MSG & LENGTH-1     PARM@                               *
*              TICB REG           TICB@                               *
*              RETURN ADDRESS     RET@                                *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: SEND3270 SUBR                                            *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
STACK    $SINIT
         LR    WKD,PARM@      SAVE MSG PTR
         LR    WKB,PARM@      ISOLATE
         SRL   WKB,24          LENGTH-1
         LA    WKB,6(,WKB)    INCREMENT LENGTH FOR ELEMENT PREFIX
         GETMAIN RC,LV=(WKB)   AND GETMAIN STACK ELEMENT
         LTR   RTNCD,RTNCD    OK?
         BZ    STKCHECK
         LA    WKA,STKUNM     SET UP STACK STORAGE
         LA    WKB,STKUNML     UNAVAILABLE WARNING MSG
         MVC   STKUNMCT,=X'40202120'  EDIT
         ED    STKUNMCT,TISTKCT    INTO MSG
         B     STKRET         RETURN
STKCHECK TM    TISTATUS,TISTACK STACK ALREADY EXISTS?
         BZ    STKNOT         NO
         L     STKEL@,TITAIL@ YES - PICK UP LAST STACK ELEMENT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING
         ST    PARM@,STKNXEL  CHAIN NEW ELEMENT
         ST    PARM@,TITAIL@  SET NEW TAIL POINTER
         B     STKZNX         JUMP STACK SET UP
         DROP  STKEL@
         USING STKEL,PARM@    STACK ELEMENT ADDRESSING
STKNOT   ST    PARM@,TIHEAD@  NO STACK - SET UP HEAD
         ST    PARM@,TITAIL@   AND TAIL POINTERS
STKZNX   XC    STKNXEL,STKNXEL ZERO NEXT STACK ELEMENT PTR
         STH   WKB,STKELEN    SET ELEMENT LENGTH
         SH    WKB,K7         DECR. ELEMENT LENGTH FOR DATA MOVE
         EX    WKB,STKMV      MOVE DATA TO ELEMENT
         LA    WKA,STKM       SET UP STACK
         LA    WKB,STKML       COUNT WARNING MSG
         MVI   STKM+1,X'C2'   SET DEFAULT WCC
         AP    TISTKCT,KP1    INCREMENT ELEMENT COUNT
         MVC   STKMCT,=X'40202120'  EDIT
         ED    STKMCT,TISTKCT    INTO MSG
         TM    TISTATUS,TISTACK STACK ALREADY EXISTS?
         BO    STKSOLCK         YES
         OI    TISTATUS,TISTACK NO - FLAG STACK OPEN
         B     STKALARM          AND RING ALARM
STKSOLCK TM    POHSTAT,POHGEN SOLICITED MSG?
         BO    STKRET         YES
         LA    WKB,STKMSL     NO - SET UP SHORT MSG LENGTH AND
STKALARM MVI   STKM+1,X'C6'    RING ALARM
STKRET   $SRET                RETURN
*
STKMV    MVC   STKDATA(*-*),0(WKD) MOVE DATA TO STACK ELEMENT
         DROP  PARM@
         TITLE 'N E T O P - MESSAGE UNSTACK SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: UNSTACK                                                       *
*                                                                     *
* FUNCTION: TO UNSTACK MESSAGES FOR TERMINALS IN NO-ROLL MODE WHEN AN *
*        AWAITING ROLL CONDITION (FULL SCREEN) IS ALLEVIATED BY PA KEY*
*                                                                     *
* ENTRY POINTS: UNSTACK                                               *
*                                                                     *
* INPUT:                                                              *
*                                                                     *
*       POFSTDEL ¬ ON = UNSTACK AND SEND TILL FULLSCREEN/EMPTY STACK  *
*       POFSTDEL ON   = DELETE COMPLETE STACK WITHOUT SENDING         *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              TICB REG           TICB@                               *
*              RETURN ADDRESS     RET@                                *
*                                                                     *
* REGISTERS AT SND3270 CALL:                                          *
*                                                                     *
*              DATA LENGTH - 1    MSGLEN                              *
*              STACK ELEMENT PTR  STKEL@                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: SND3270                                                      *
*                                                                     *
* CALLED BY: RCV3270, CLSDST                                          *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
UNSTACK  $SINIT
         OI    POFLAGS,POFUNSTK  FLAG UNSTACKING MSGS (FOR SND3270)
         L     STKEL@,TIHEAD@ PICK UP TOP STACK ELEMENT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING
UNSLOOP  LH    R0,STKELEN     LOAD ELEMENT LENGTH
         TM    POFLAGS,POFSTDEL  DELETE STACK?
         BO    UNSFREE        YES - BYPASS DATA MOVE
         LR    MSGLEN,R0      COPY IT
         SH    MSGLEN,K7      DECR. ELEMENT LENGTH FOR DATA MOVE
         SP    TISTKCT,KP1    DECR. STACK ELEMENT COUNT
         $CALL SND3270        SEND UNSTACKED MESSAGE
UNSFREE  L     WKA,STKNXEL    SAVE CHAIN POINTER TO NEXT ELEMENT
         FREEMAIN RC,LV=(0),A=(STKEL@)  AND FREEMAIN CURRENT ELEMENT
         LTR   STKEL@,WKA     RELOAD CHAIN POINTER TO NEXT ELEMENT
         BNZ   UNSRCHK        ZERO? (EMPTY STACK?)
         NI    TISTATUS,255-TISTACK  YES - RESET FLAG
         ZAP   TISTKCT,KP0    DECR. STACK ELEMENT COUNT
         LA    RTNCD,RCVNRMSG      SET NO RESP MSG RC FOR INBOUND
         B     UNSRET          AND RETURN
UNSRCHK  TM    TIFLAGS,TIFWTROL  WAITING FOR ROLL?
         BZ    UNSLOOP           NO - GO UNSTACK NEXT MSG
         ST    STKEL@,TIHEAD@ STORE NEW HEAD POINTER
         LA    WKA,STKM       SET UP STACK
         LA    WKB,STKML       COUNT WARNING MSG
         MVI   STKM+1,X'C6'    AND RING ALARM AS WELL
         MVC   STKMCT,=X'40202120'  EDIT
         ED    STKMCT,TISTKCT    INTO MSG
         LA    RTNCD,RCVRMSG    SET RESPONSE MSG RC FOR INBOUND
UNSRET   NI    POFLAGS,255-(POFUNSTK+POFSTDEL)  RESET FLAGS
         $SRET                RETURN
*
         DROP  STKEL@
         TITLE 'N E T O P - INT3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: INT3270 SUBROUTINE                                            *
*                                                                     *
* FUNCTION: TO TRANSMIT 3270 ORDERS THAT SET UP THE INITIAL SCREEN    *
*        FORMAT. THE BEGIN BRACKET BIT IS SET IN THE RPL BY THE       *
*        LOGON EXIT FOR A FIRST TIME INITIALIZATION.                  *
*                                                                     *
* ENTRY POINTS: INT3270                                               *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              CMD ABR LENGTH     PARM@                               *
*              INT MSG LENGTH     MSGLEN                              *
*              RETURN ADDRESS IN CALLER  RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              RPL REG            RPL@                                *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: LOGON EXIT AND RCV3270 SUBR FROM INBOUND EXIT            *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
INT3270  $SINIT
         LA    WKA,INTLEN     SET UP LENGTH
         LTR   PARM@,PARM@    CMD TO BE INSERTED?
         BZ    INTSEND        NO
         CH    PARM@,=X'0410' ARBITRARILY TOO LARGE?
         BH    INTSEND        YES - IGNORE PARM
         LA    WKA,3(WKA,PARM@) YES - INSERT
         BCTR  PARM@,0                     LAST CMD IN
         EX    PARM@,INTCMD                     INT MSG
INTSEND  XC    TILNCT,TILNCT      SET TO LINE 1
         SEND  RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               AREA=INTTEXT,                                           *
               RECLEN=(WKA),                                           *
               POST=RESP,                                              *
               OPTCD=SYN,                                              *
               RESPOND=(NEX,FME,NRRN)  BB SEND MUST REQUEST +VE RESP
         LTR   RTNCD,RTNCD        OK?
         BZ    INTRET0            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    INTSEND             THEN RETRY
         LA    RTNCD,4             ELSE RETURN NO GO
         B     INTRET
INTRET0  SR    RTNCD,RTNCD         SAY ALL IS WELL (RTNCD=0)
INTRET   $SRET
*
INTCMD   MVC   INTCSUF(*-*),TIABR     MOVE ABBREV. CMD INTO INT MSG
         TITLE 'N E T O P - DATA AREAS'
*
***********************************************************************
*                                                                     *
*                                 DATA AREAS                          *
*                                                                     *
*        ADDRESSIBILITY VIA  DBASE1@ AND DBASE2@                      *
*        ACBTERMS IS LAST SYMBOL REQUIRING A BASE REGISTER - DONT ADD *
*        ANY BASED SYMBOLS AFTER IT.                                  *
*                                                                     *
***********************************************************************
*
         ORG   NETOP+((*-NETOP)/4096+1)*4096   ALIGN TO PAGE BOUNDARY
*              (LINKEDIT WITH ' PAGE NETOP' - MAKES DEBUGGING EASIER)
*
@DBASE2  DC    A(*+4096)          BASE 2 FOR DATA
MAINSA   DC    18F'0'             MAINLINE SAVE AREA
EXITSA   DC    18F'0'             EXIT SAVE AREA
ERRORSA  DC    18F'0'             ERROR EXIT SAVE AREA
ENDSA    DC    18F'0'             TPEND OR ABEND EXIT SAVE AREA
*
@HELPM   DC    A(HELPM)           1ST LEVEL HELP MESSAGE PTR
@HELPM2  DC    A(HELPM2)          PF2 HELP MESSAGE PTR
@TRTTAB  DC    A(TRTTAB)          TRT TABLE PTR
@MATABLE DC    A(MATABLE)         MATABLE PTR
@MATICB  DC    F'0'               ADDRESS OF MASTER'S TICB
@SAVACB  DC    F'0'               LAST ACB TO SATISFY RCVCMD
@ECHTICB DS    F'0'           TICB @ FOR USE WHEN ECHOING RESPONSES
@TCAST   DS    A                  TCAS TSB TABLE
@ACBPPO  DC    A(ACBPPO)
@ACBSPO  DC    A(ACBSPO)
ABREGS   DS    2F                 ABEND REGS SAVE AREA
ECBMAIN  DC    F'0'               MASTER LOGON AND CLOSEDOWN ECB
NULL     DC    F'0'               FULLWORD OF ZEROS
CLSDLAY  DC    F'50'              1/2 SEC DELAY
OPNDLAY  DC    F'1500'            15 SEC DELAY
RANGCHAR DS    F                  RANGE FORMAT CHAR/PTR
RANGHEX  DS    H                  RANGE FORMAT CHAR IN HEX
RANGEND  DS    H                  RANGE FORMAT LIMIT IN HEX
HEX      DC    CL2'  '            HEX CHARACTERS FROM CVHX SUBROUTINE
         DC    CL2'  '            HEX OVERFLOW - DO NOT MOVE
HEXTOBE  DC    XL2'0000'          BINARY TO BE HEX'D
POID     DC    XL1'00'            LAST ID ASSIGNED TO A TERMINAL
POSTATUS DC    XL1'00'            PO STATUS BYTE
POSCLSDN EQU   B'10000000'  80    CLOSEDOWN FLAG
POSHVMA  EQU   B'01000000'  40    MASTER HAS BEEN LOGGED ON
POSMLTSN EQU   B'00100000'  20    MULTIPLE SEND IN PROGRESS
POSINSRT EQU   B'00010000'  10    MOMENTARY INSERT SIGNAL FOR SND3270
POSTEST  EQU   B'00001000'  08    TSO TEST JOB AFTER INITIALIZATION
POSSEND  EQU   B'00000100'  04    SEND TO VTAM SYSTEM PGMRS ON TSO
POSABEND EQU   B'00000010'  02    ESTAE EXIT ENTERED
POSECHO  EQU   B'00000001'  01    ECHO THIS MSG TO OTHER MCANDTS
*
POFLAGS  DC    XL1'00'            PO FLAGS BYTE
POFOSCMD EQU   B'10000000'  80    ISSUE OS CMDS DURING INITIALIZATION
POFINTCM EQU   B'01000000'  40    INTERNAL CMD (RCVVTAM->OUT/INBOUND)
POFDSP   EQU   B'00100000'  20    MOMENTARY DISPLAY SIGNAL (INBOUND)
POFCFAIL EQU   B'00010000'  10    CLOSE FAILURE FIRST TIME FLAG
POFHINT  EQU   B'00010000'  10    HI INTENSE SIGNAL (RCVVTAM->SND3270)
POFRANG  EQU   B'00001000'  08    MOMENTARY RANGE SIGNAL (INBOUND)
POFSTDEL EQU   B'00000100'  04    DEL SIGNAL (RCV3270,CLSDST->UNSTACK)
POFUNSTK EQU   B'00000010'  02    UNSTACK SIGNAL (UNSTACK->SND3270)
POFWTO   EQU   B'00000001'  01    WTO DONE - NO NEED FOR WTL(RESERVED)
*                                 PF2 CONTROL KEYWORDS AND MASKS
PF2KWDS  DC    CL5'NROLL'         NROLL OR ROLL
         DC    AL1(255-TIF2ROLL,TIF2ROLL)  -VE AND +VE MASKS
         DC    CL5'NAUTO'
         DC    AL1(TIF2AUTO,255-TIF2AUTO)
         DC    CL5'NECHO'
         DC    AL1(TIF2ECHO,255-TIF2ECHO)
         DC    CL5'NSOLO'
         DC    AL1(255-TIF2SOLO,TIF2SOLO)
         DC    CL5'NLOGD'
         DC    AL1(255-TIF2LOGD,TIF2LOGD)
         DC    AL1(255)
*
INTBUFL  DS    H                  INTERNAL CMD BUFFER LENGTH
INTBUF   DS    CL28               INTERNAL CMD BUFFER
         ORG   INTBUF
INTAID   DC    X'404040114040'    AID _ _ SBA _ _
INTNODE  DS    CL8                NODENAME
         ORG   INTNODE
INTFDUMP DS    C'F DUMPMON,NCP='  F DUMPMON CMD AREA
INTDNODE DS    CL8                370X NODENAME
         ORG
FDUMP    DC    C'F DUMPMON,NCP='  F DUMPMON CMD TEXT
*
K1       DC    H'1'               CONSTANT
K2       DC    H'2'               CONSTANT
K3       DC    H'3'               CONSTANT
K4       DC    H'4'               CONSTANT
K5       DC    H'5'               CONSTANT
K6       DC    H'6'               CONSTANT
K7       DC    H'7'               CONSTANT
K8       DC    H'8'               CONSTANT
K9       DC    H'9'               CONSTANT
K10      DC    H'10'              CONSTANT
K12      DC    H'12'              CONSTANT
K13      DC    H'13'              CONSTANT
K36      DC    H'36'              CONSTANT
KPOHLEN  DC    AL2(POHLEN)        CONSTANT - PO HEADER LENGTH
RETRY    DC    AL2(USFRESSU)      ACTION CODE FOR RETRIABLE ERROR
DAMAGE   DC    AL2(USFDAMGE)      ACTION CODE FOR DAMAGE ERROR
KP0      DC    P'0'               CONSTANT
KP1      DC    P'1'               CONSTANT
KP7      DC    P'7'               CONSTANT
*
UNSOL    DC    CL140' '       UNSOLICITED MSG SAVE AREA(ASSUME MAX 140)
UNSOL#   DC    PL2'1'         UNSOLICITED MSG REPEAT #
MAXUNSOL DC    PL2'50'        MAX UNSOLICITED REPEATS BEFORE INACT
*
AID      DS    X              AID FROM INPUT AREA
UPPER    DS    CL7            1ST 7 CHARS IN UPPERCASE
BLANX    DC    CL20' '        GENERAL PURPOSE BLANK FIELD
*
*        CAREFUL -- LOWERCASE TEXT (NET TO KLOGON)
*
NET      DC    C' net,'       LONG FORM TRIGGER
NETSOL   DC    C'NETSOL'      F NETSOL TRIGGER
TEST     DC    C'TEST'        F TEST TRIGGER
SUPP     DC    C'SUPP'        F SUPP TRIGGER
DLONG    DC    C'display '     VARIATIONS
NETID    DC    C'net,id='     INSERT TEXT FOR ABBREV. CMDS
DISPLAY  DC    C'd net,id='   INSERT TEXT FOR IMPLICIT DISPLAY CMD
VARYA    DC    C'v net,act,id='   INSERT TEXT FOR PF12 CMD
VARYII   DC    C'v net,inact,i,id='   INSERT TEXT FOR PF6 CMD
VARYI    DC    C'v net,inact,id='     INSERT TEXT FOR PF8 CMD
MODIFY   DC    C'f net,id='      INSERT TEXT FOR PF4 CMD
KLOGON   DC    C'logon='      INSERT TEXT FOR PF10 CMD
*
SENDUBUF DC    AL2(SENDUL,0)  OS SEND CMD BUFFER
         DC    C'SE '''
SENDUTXT DS    CL72
         DC    C''',LOGON,USER=(&SENDLST)'
SENDUL   EQU   *-SENDUBUF
SENDPTCH DC    CL20' '        ZAP IN NEW USERIDS HERE AND UPDATE LENGTH
*
NEW082   DC    C'DEV='
NEWDEV   DS    CL5
         DC    C',ALLOC= '
NEWALC   DS    CL8
         DC    C',UID= '
NEWUID   DS    CL7
         DC    C' '
NEWASID  DS    CL4
         DC    C') ,SIMLOG='
NEWSIM   DS    CL8
NEW082L  EQU   *-NEW082
*
*     WORK AREA WHERE SND3270 PREPARES OUTPUT LINE
*
SENDORDR DC    X'F1C21140F83CC14F0011'
SENDADDR DC    XL2'4040'      SCREEN BUFFER ADDRESS SET BY SND3270
SENDTIME DC    CL8' '         TIMESTAMP FIELD
         DC    X'1D'          SF
SENDAT1  DC    X'60'          ATTRIBUTE BYTE FOR OUTPUT LINE
LO       EQU   X'60'          LO-INTENS
HI       EQU   X'E8'          HI-INTENS
SENDTXT  DC    CL69' '        MESSAGE TEXT
SENDAT2  DC    X'1D60'        FILL ATTR - SAVE SPACE FOR CMD INSERTION
SENDAT3  DC    X'1D60'        RESET ATTR TO ENSURE NEXT TIME FIELD LO
SENDL    EQU   *-SENDORDR     LENGTH OF MESSAGE
SENDSEPA DC    80C'-'         SEPARATOR LINE
SENDSEPL EQU   *-SENDSEPA     LENGTH OF SEPARATOR LINE
*
UNSEND   DC    X'F1C211'      SHORT UNSOL MSG TO UPDATE
UNSENDAD DC    XL2'4040'       UNSOL COUNT, OVERWRITING
UNSENDTM DC    CL8' '           'IST' TEXT OF UNSOL MSG
         DC    X'1DE8'        HI ATTR FOR UNSOL MSG
UNSEND#  DC    CL2' '         REPEAT COUNT
UNSENDSL EQU   *-UNSENDTM     SHORT LENGTH FOR STACKING
UNSENDAT DC    X'1D60'        LO ATTR FOR REST OF LINE AND FOR SENDAT2
UNSENDL  EQU   *-UNSEND       LENGTH FOR SENDING               REFRESH
         DC    X'1D60'        LO ATTR FOR SENDAT3 REFRESH
*
NULLM    DC    X'F1C211C1E3131140F83CC14F00'
*
NAUTM    DC    X'F1C01140F83CC14F0011C1E33CC25F0011C1E3'
NAUTABR  DS    CL20
*
INVALM   DC    X'F1C61140F83CC14F001140F8'
         DC    C'invalid from '
INVALTRM DS    CL8
INVALML  EQU   *-INVALM
*
INVALK   DC    X'F1C61140F83CC14F001140F8'
         DC    C'invalid input'
INVALKL  EQU   *-INVALK
*
DCONM    DC    X'F1C61140F8'
         DC    C'disconnect from '
DCONMNAM DS    CL8
         DC    X'11C1E313'
DCONMABR DS    CL8
DCONML   EQU   *-DCONM
*
STKM     DC    X'F1C21140F81DE8'
STKMCT   DS    CL4
STKMSL   EQU   *-STKM         SHORT LENGTH
         DC    C' messages stacked  '
STKML    EQU   *-STKM         FULL LENGTH
*
STKUNM   DC    X'F1C61140F81DE8'
         DC    C'no storage -'
STKUNMCT DS    CL4
         DC    C' stacked'
STKUNML  EQU   *-STKUNM
*
NOTICBM  DC    X'F1C7114EC11DE8'
NOTICBLG DC    C'LOGON',C' '
NOTICBRJ DC    C'REJECTED',C' -- MAXIMUM TERMINALS EXCEEDED'
NOTICBML EQU   *-NOTICBM
*
RLRQM    DC    X'F1C7114E401DE8'
         DC    C'THIS TERMINAL REQUESTED BY ANOTHER APPLICATION'
         DC    X'114FD7'
         DC    C'IF NOT MASTER IT WILL BE RELEASED'
RLRQML   EQU   *-RLRQM
*
CLOSM    DC    X'00000100'    TERM ID NON-ZERO - FAILS NETPTICB CHECK
         DC    15C'*',CL11' '
CLOSMSG  DC    C'NETOP CLOSING DOWN'
         DC    CL11' ',15C'*'
CLOSML   EQU   *-CLOSM-4-1
*
OFFMSG   DC    C'LOGOFF'
*
ABMSG    DC    AL2(ABMSGL,0)  RDW
         DC    C'-',C'ABEND ' ASA SKIP, TEXT
ABMSGAC  DC    3CL2' '        ABEND CODE
ABMSGRC  DC    CL2' '         REASON CODE
ABMSGL   EQU   *-ABMSG
*
LOSMSG   DC    C'LOST'
LOSMSGRC DC    C'   '
LOSMSGL  EQU   *-LOSMSG
*
RELMSG   DC    C'RELEASE REQUEST IGNORED DUE TO ERROR'
*
TPEMSG   DC    C'POSTED TPEND '
TPEMSGRC DC    C'  '
TPEMSGL  EQU   *-TPEMSG
*
ERMSG    DC    C'ERROR EXIT - REQ='
ERREQ    DC    C'  ,RTNCD='
ERRTNCD  DC    C'  ,FDBK2='
ERFDBK2  DC    C'  ,SSENSEI='
ERSENEI  DC    C'  ,SSENSMI='
ERSENMI  DC    C'  ,SENSE='
ERSENU1  DC    C'  '
ERSENU2  DC    C'  '
ERMSGL   EQU   *-ERMSG
*
REMSG    DC    C'RESPONSE EXIT - REQ='
REREQ    DC    C'  ,RTNCD='
RERTNCD  DC    C'  ,FDBK2='
REFDBK2  DC    C'  ,SSENSEI='
RESENEI  DC    C'  ,SSENSMI='
RESENMI  DC    C'  ,SENSE='
RESENU1  DC    C'  '
RESENU2  DC    C'  '
REMSGL   EQU   *-REMSG
LOGBUF   DC    CL133' '         USED BECAUSE I DISABLED VTAMLOGO
         USING LOGREC,LOG@
*
*    SCREEN INITIALIZATION TEXT USED BY INT3270
*
INTTEXT  DC     X'F5C21140D41DE8' WRITE ERASE + SF PROTECT OUR TITLE
         DC    C'N E T',X'1D60',C'W O R K  ',X'1DE8'
         DC    C'O P',X'1D60',C'E R A T O R',X'11C1C8',C'REL &REL'
         DC    X'1DE811C150'  PROT, SBA ROW 2 COL 1
         DC    C'COMMAND INPUT ===>'
         DC    X'1DC113'      SF,IC
         DC    X'11C25F'      SBA ROW 14,COL 80
         DC    X'1D60'        SF FOR DATA OUTPUT
INTLEN   EQU   *-INTTEXT      LENGTH OF INITIALIZATION TEXT
         DC    X'11C1E3'      SBA TO CMD INPUT AREA
INTCSUF  DS     CL40          INT CMD SUFFIX INSERTION AREA
*
*   DATA TO MAINTAIN OUTPUT ROLLING BUFFER
*
LINEMAX  DC   H'20'           MAX OUTPUT LINE POINTER
LINE1    DC   XL2'&L(4)'      3270 BUFFER ADDRESS LINE 1 - ROW4/COL1
         DC   XL2'&L(5)'      LINE 2  - ROW 5
         DC   XL2'&L(6)'      LINE 3  - ROW 6
         DC   XL2'&L(7)'      LINE 4  - ROW 7
         DC   XL2'&L(8)'      LINE 5  - ROW 8
         DC   XL2'&L(9)'      LINE 6  - ROW 9
         DC   XL2'&L(10)'     LINE 7  - ROW 10
         DC   XL2'&L(11)'     LINE 8  - ROW 11
         DC   XL2'&L(12)'     LINE 9  - ROW 12
         DC   XL2'&L(13)'     LINE 10 - ROW 13
         DC   XL2'&L(14)'     LINE 11 - ROW 14
         DC   XL2'&L(15)'     LINE 12 - ROW 15
         DC   XL2'&L(16)'     LINE 13 - ROW 16
         DC   XL2'&L(17)'     LINE 14 - ROW 17
         DC   XL2'&L(18)'     LINE 15 - ROW 18
         DC   XL2'&L(19)'     LINE 16 - ROW 19
         DC   XL2'&L(20)'     LINE 17 - ROW 20
         DC   XL2'&L(21)'     LINE 18 - ROW 21
         DC   XL2'&L(22)'     LINE 19 - ROW 22
         DC   XL2'&L(23)'     LINE 20 - ROW 23
         DC   XL2'&L(24)'     LINE 21 - ROW 24
         DC    XL(POHLEN)'00'     PREFIX AREA FOR OUTBOUND COMMANDS
RCVDA    DC    XL(DALEN)'00'      DATA AREA FOR INBOUND COMMANDS
SENDDA   DC    XL(DALEN)'00'      DATA AREA FOR OUTBOUND SPO MESSAGES
PRIMADA  DC    XL(DALEN)'00'      DATA AREA FOR OUTBOUND PPO MESSAGES
*
WORK     DS    D                  DOUBLE WORD WORK AREA
STTIME   DS    F                  START TIME
DATE     DS    F                  CURRENT DATE
TBUF     DS    XL60               WORK AREA FOR REARRANGING TEXT
*        TICB POOL
*
TICBLACT DC    A(0)               LAST ACTIVE TICB
TICBPOOL EQU   *
TICBCT   EQU   8                  # TICBS IN LIST
TICBFCT  DC    AL2(TICBCT)        # FREE TICBS IN LIST
TICBMCCT DC    AL2(0)             # TICBS USED BY MASTER CANDIDATES
         DS    0D
TICBS    DC    (TICBCT)XL(TICBLEN)'00'
         ORG   TICBS
NETPTICB DC    AL1(TISMCAND+TISALLOC)
         ORG   NETPTICB+(TINAMLEN-TICB)
         DC    AL2(5)
         DC    CL8'NETOP'
         ORG
VTAMTICB DC    XL(TICBLEN)'00'
         ORG   VTAMTICB+(TINAMLEN-TICB)
         DC    AL2(4)
         DC    CL8'VTAM'
         ORG
DUMTICB  DC    XL(TICBLEN)'00'
TICBLIST DC    (TICBCT)F'0'   LIST OF TICBS FOR SEND TARGET TERMINALS
LASTPARM EQU   X'80'          LAST-TICB-IN-LIST FLAG
         LTORG
*        PO MESSAGES.
*
*        PRINT NOGEN
NTP00MSG WTO   'NTP00  NETOP WAITING FOR MASTER TO LOGON',             *
               ROUTCDE=2,MF=L
*
NTP01MSG WTO   'NTP01  NODENAME NOW MASTER',                           *
               ROUTCDE=2,MF=L
*
NTP02MSG WTO 'NTP02  LAST MASTER LOGGED OFF - SYSCON NOW VTAM PRIMARY',*
               ROUTCDE=2,MF=L
*
NTP03MSG WTO   'NTP03  NETOP PPO ALREADY OPEN - SPO ONLY AVAILABLE',   *
               ROUTCDE=2,MF=L
*
NTP04MSG WTO   'NTP04  NETOP ALREADY RUNNING',                         *
               ROUTCDE=2,MF=L
*
NTP05MSG WTOR  'NTP05 - REPLY ''U'' TO RETRY OR OTHER TO TERMINATE',   *
               TBUF,1,ECBMAIN,ROUTCDE=1,MF=L
*
NTP06MSG WTO   'NTP06  UNABLE TO OPEN ACB FOR           ',             *
               ROUTCDE=2,MF=L
*
NTP07MSG WTO   'NTP07  UNABLE TO CLOSE ACB FOR          ',             *
               ROUTCDE=2,MF=L
*
NTP08MSG WTO 'NTP08  NETOP UNABLE TO OPEN VTAMLOG ',                   *
               ROUTCDE=2,MF=L
*
NTP09MSG WTO   'NTP00 - RETRYING EVERY 15 SECONDS FOR 2 MINUTES',      *
               ROUTCDE=2,MF=L
*
NTP10MSG WTO 'NTP10  RETURN CODE=CD, ERROR CODE=CD',                   *
               ROUTCDE=2,MF=L
*
NTP11MSG WTO 'NTP11  UNABLE TO LOGON MASTER TERMINAL          - USE PF1*
               1 ON ANY MASTER CANDIDATE',ROUTCDE=1,DESC=2,MF=L
*
NTP12MSG WTO 'NTP12  NETOP CANCELLED - DID YOU TRY ''PF3 ALL'' FIRST?',*
               ROUTCDE=2,MF=L
*
*        OVERLAYS FOR MESSAGES
*
         ORG   NTP01MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP01  '
NTP1NODE DS    CL8
*
         ORG   NTP06MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP06  UNABLE TO OPEN ACB FOR '
NTP06TYP DS    CL9
*
         ORG   NTP07MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP07  UNABLE TO CLOSE ACB FOR '
NTP07TYP DS    CL9
*
         ORG   NTP08MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP08  NETOP UNABLE TO OPEN '
NTP08DDN DS    CL8
*
         ORG   NTP10MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP10  RETURN CODE='
NTP10RC  DS    CL2
         DS    C' ,ERROR CODE='
NTP10EC  DS    CL2
*
         ORG   NTP01MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP11  UNABLE TO LOGON MASTER TERMINAL '
NTP11NOD DS    CL8
         ORG
SIMNIB   NIB   PROC=TRUNC,MODE=RECORD
         PRINT GEN
         ORG
TRTAB    DC    C'0123456789ABCDEF'  TR TABLE FOR BIN TO HEX
*
LOGLN#   DS    H                  LOG LINE COUNT
PAGESIZE DC    H'60'              # LINES PER PAGE
LOGPG#   DS    H                  LOG PAGE COUNT
EOFPGCNT DC    H'3'               # PAGES BETWEEN WRITE-EOFS
LOGHDR   DC    AL2(133,0)         LOG HEADER LINE
         DC    CL30'1'
         DC    C'NETOP LOG'
         DC    CL72' '
         DC    C'DATE '
LOGHDRDT DS    CL5
*
LOGSKP   DC    AL2(5,0)           LOG SKIP AFTER HEADER LINE
         DC    C'-'
*
         $DYNABLK FLAGS2=20000000  (DON'T RESERVE DATASETS)
LGTU     $TU   DDNAM,C'VTAMLOGO',NAME=LOGDDO,PREFIX=DAL
         $TU   DDNAM,C'VTAMLOGI',NAME=LOGDDI
         $TU   DSNAM,C'SYS1.VTAMLOG',NAME=LOGDS
         $TU   STATS,X'01',NAME=OLD
         $TU   STATS,X'02',NAME=MOD
PRTU     $TU   DDNAM,C'SYSPRINT'
         $TU   SYSOU,C'A'
         $TU   CLOSE          (FREE=CLOSE)
         $TU   FCBIM,C'LIN8'
         $TU   UCS,C'GF12'
LGITUP   $TUP  TXT=(LOGDDI,LOGDS,OLD)
LGOTUP   $TUP  TXT=(LOGDDO,LOGDS,MOD)
LGOTUPF  $TUP  TXT=LOGDS
PRTUP    $TUP  NAME=PRTU
*
NTPATCH  DC    20F'0'             PATCH AREA
*
*        PRINT NOGEN
*
***********************************************************************
*                                                                     *
*        DATA CONTROL BLOCKS FOR LOGGING                              *
*                                                                     *
***********************************************************************
*
SYSPRINT DCB   DDNAME=SYSPRINT,                                        *
               BLKSIZE=141,LRECL=137,                                  *
               DSORG=PS,RECFM=VA,MACRF=(PM)
VTAMLOGI DCB   DDNAME=VTAMLOGI,                                        *
               BLKSIZE=3155,LRECL=137,SYNAD=LOGSYNAD,BUFNO=0,          *
               DSORG=PS,RECFM=VBA,MACRF=(PL,GL)
VTAMLOGO DCB   DDNAME=VTAMLOGO,                                        *
               BLKSIZE=3155,LRECL=137,SYNAD=LOGSYNAD,BUFNO=2,          *
               DSORG=PS,RECFM=VBA,MACRF=(PL)
         PRINT GEN
*
* PO VTAM CONTROL BLOCKS.
*
RCVRPL   RPL   AM=VTAM,                                                *
               ACB=ACBTERMS,                                           *
               AREA=RCVDA,                                             *
               AREALEN=DALEN,                                          *
               EXIT=INBOUND,                                           *
               OPTCD=(ANY,ASY,TRUNC),                                  *
               RTYPE=DFSYN
*        PRINT NOGEN
SENDRPL  RPL   AM=VTAM,                                                *
               ACB=ACBSPO,                                             *
               AREA=SENDDA,                                            *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
PRIMARPL RPL   AM=VTAM
LOGONRPL RPL   AM=VTAM,BRACKET=BB   FOR INITIAL MESSAGE
DISCRPL  RPL   AM=VTAM
*
         PRINT GEN
LOGONNIB NIB   PROC=TRUNC,                                             *
               EXLST=NXLST,                                            *
               MODE=RECORD
*
ACBTERMS ACB   AM=VTAM,                                                *
               APPLID=MODULEID,                                        *
               PASSWD=TERMSPW,                                         *
               EXLST=TXLST,                                            *
               MACRF=LOGON
TERMSPW  DC    X'06',CL8'VTAMOP'       PASSWORD FOR TERMINAL ACB
*
PPOID    DC    X'06',CL8'NETPPO'       ID FOR PPO ACB
SPOID    DC    X'06',CL8'NETSPO'       ID FOR SPO ACB
POPW     DC    X'07',CL8'VTAMCMD'      PASSWORD FOR PO-VTAM ACBS
*
*        PRINT NOGEN
ACBPPO   ACB   AM=VTAM,                                                *
               APPLID=PPOID,                                           *
               PASSWD=POPW,                                            *
               EXLST=PXLST,                                            *
               MACRF=NLOGON
ACBSPO   ACB   AM=VTAM,                                                *
               APPLID=SPOID,                                           *
               PASSWD=POPW,                                            *
               EXLST=PXLST,                                            *
               MACRF=NLOGON
*
TXLST    EXLST AM=VTAM,                                                *
               LERAD=ERROR,                                            *
               SYNAD=ERROR,                                            *
               TPEND=TPEND,                                            *
               LOGON=LOGON,                                            *
               RELREQ=RELREQ,                                          *
               LOSTERM=LOSTERM
*
NXLST    EXLST AM=VTAM,                                                *
               RESP=RESP
*
PXLST    EXLST AM=VTAM,                                                *
               LERAD=ERROR,                                            *
               SYNAD=ERROR
*
*
* TERMINALS ELIGIBLE TO BE MASTER TERMINAL.
*
MATABLE  $MATAB T4A3,         ED     (ON 3274)                         *
               T4D7,          ANDRE                                    *
               T4CA,          CHARLIE                                  *
               T4D4,          RON                                      *
               T4E0,          TP AREA                                  *
               T4A9,          TP AREA (MOVE)                           *
               T4A0           MASTER CONSOLE (PORT 0 ON 3274)
MAPATCH  DC    XL32'00'       SPARE - LAST ENTRY IS DUMMY, LENGTH 0
*
*        CAREFUL -- LOWERCASE TEXT IN HELP SCREEN
*
HELPM    DC   X'F5C2'               ADDRESSED VIA ADCON @HELPM
         DC   X'115D7F1DE8'
         DC   C'KEY      VALID INPUT                      NETOP ACTION'
         DC   X'11C25F1D40'
         DC   X'11&L(3)',C'ENTER    full vtam cmd                      *
                   passed asis'
         DC   X'11&L(4)',C'         abbr vtam cmd  ( NET,ID=  omitted) *
                   NET,ID=               inserted'
         DC   X'11&L(5)',C'         vtam nodename                      *
                   D NET,ID=             inserted'
         DC   X'11&L(6)',C'         1 or 2 digit numeric+blank+cmd     *
                   pf key n/nn assumed for rescan'
         DC   X'11&L(7)',C'PF1      n/a                                *
                   help screen'
         DC  X'11&L(08)',C'PF2      control keyword (next help screen) *
                   set/reset control function'
         DC  X'11&L(09)',C'PF3      ALL (only from a master for shutdow*
               n)  END NETOP'
         DC  X'11&L(10)',C'                                            *
                   END  (syscon primary if no ma)'
         DC  X'11&L(11)',C'PF4      vtam nodename                      *
                   F NET,ID=             inserted'
         DC  X'11&L(12)',C'PF5      os command                         *
                   passed to command scheduler'
         DC  X'11&L(13)',C'PF6      vtam nodename                      *
                   V NET,INACT,I,ID=     inserted'
         DC  X'11&L(14)',C'PF7      vtam nodename,applid               *
                   V NET,ID=,LOGON=      inserted'
         DC  X'11&L(15)',C'PF8      vtam nodename                      *
                   V NET,INACT,ID=       inserted'
         DC  X'11&L(16)',C'PF10     vtam nodename (cluster only status)*
                   D NET,ID=             inserted'
         DC  X'11&L(17)',C'PF11     vtam nodename (logging required)   *
                   D NET,ID=             inserted'
         DC  X'11&L(18)',C'PF12     vtam nodename                      *
                   V NET,ACT,ID=         inserted'
         DC  X'11&L(19)',C'PA1/PA2       n/a      auto - null/init+cmd;*
                    no-auto - delete/roll'
         DC  X'11&L(20)',C'CLEAR/PA3     n/a      auto - screen init;  *
                    no-auto - screen roll'
         DC  X'11&L(21)',C'TESTREQ       n/a (not remotes)             *
                   END (syscon primary if no ma)'
HELPML   EQU   *-HELPM
*
*
HELPM2   DC   X'F5C2115D7F1DE8'     ADDRESSED VIA ADCON @HELPM2
         DC   C'PF2 INPUT                                 NETOP ACTION'
         DC   X'11C25F1D60'
*
         DC   X'11&L(04)',C' userid     '
         DC   C'Display command generated if user logged on'
*
         DC   X'11&L(06)1D'
HELPR    DC   X'60',C' ROLL     ',X'1D60'
         DC   C'Output rolls continuously from top to bottom of screen'
         DC   X'11&L(07)1D'
HELPRZ   DC   X'60',C'NROLL     ',X'1D60'
         DC   C'Output halts at bottom of screen awaiting pa/clear key'
*
         DC   X'11&L(09)1D'
HELPAZ   DC   X'60',C' AUTO     ',X'1D60'
         DC   C'Abbreviated input is expanded and passed to vtam'
         DC   X'11&L(10)1D'
HELPA    DC   X'60',C'NAUTO     ',X'1D60'
         DC   C'Abbreviated input is expanded and redisplayed'
*
         DC   X'11&L(12)1D'
HELPEZ   DC   X'60',C' ECHO     ',X'1D60'
         DC   C'All logged responses are echoed if master terminal'
         DC   X'11&L(13)1D'
HELPE    DC   X'60',C'NECHO     ',X'1D60'
         DC   C'No logged responses are echoed if master terminal'
*
         DC   X'11&L(15)1D'
HELPS    DC   X'60',C' SOLO     ',X'1D60'
         DC   C'Only solicited messages to be displayed'
         DC   X'11&L(16)1D'
HELPSZ   DC   X'60',C'NSOLO     ',X'1D60'
         DC   C'Solicited and unsolicited messages to be displayed'
*
         DC   X'11&L(18)1D'
HELPL    DC   X'60',C' LOGD     ',X'1D60'
         DC   C'Display cmd responses to be logged if master terminal'
         DC   X'11&L(19)1D'
HELPLZ   DC   X'60',C'NLOGD     ',X'1D60'
         DC   C'Display cmd responses not to be logged (except PF11)'
*
         DC   X'11&L(24)',C'            '
         DC   C'NOTE:  ',X'1DE8'
         DC   C'INTENSIFIED',X'1D60',C'OPTIONS ARE IN FORCE'
HELPML2  EQU   *-HELPM2
*
*                             TRT TABLE FOR RANGE NOTATION CHECK
TRTTAB   DC    64X'00'        ADDRESSED VIA ADCON @TRTTAB
         DC    X'02'               C' '   DELIM
         DC    10X'00'
         DC    X'01'               C'.'   RANGE
         DC    18X'00'
         DC    X'01'               C';'   RANGE
         DC    X'00'
         DC    X'01'               C'-'   RANGE
         SPACE
         DC    X'01'               C'/'   RANGE
         DC    9X'00'
         DC    X'02'               C','   DELIM
         DC    14X'00'
         DC    X'01'               C':'   RANGE
         DC    133X'00'
LERRRPL  DC    CL120'STATERPL   '  COPY OF READ ONLY RPL
*
*
***********************************************************************
*        DATA AREAS FOR HARD COPY LOG                                 *
***********************************************************************
*
LOGREC   DSECT                    LOG BUILD AREA
LOGRDW   DS    2H                 DESCRIPTOR WORD
LOGASA   DS    C                  ASA CNTL CHAR
LOGTXT   DS    CL132              TEXT BUFFER
         ORG   LOGTXT
LOGWTLHD DS    CL4                PAD TO ALIGN NETOP LINES IN SYSLOG
LOGTIME  DS    CL8                TERMINAL NAME
LOGBL1   DS    CL1
LOGTIML  EQU   *-LOGASA           LOG TIME PREFIX LENGTH
LOGNODE  DS    CL8                TERMINAL NAME
LOGBL2   DS    CL2
LOGPRFL  EQU   *-LOGRDW           LOG TOTAL PREFIX LENGTH
LOGMSG   DS    CL97               COMMAND/MESSAGE TEXT
         ORG   LOGMSG+20
LOGLIT   DS    CL9                'NETOP LOG' IN HDR
         ORG   LOGMSG+87
LOGDLIT  DS    CL5                'DATE ' IN HDR
LOGDATE  DS    CL5                YYYDD IN HDR
         ORG
LOGCONT  EQU   LOGTXT+131,1       RECORD TRUNCATED=>'+' INSERTED HERE
         END
./ ADD NAME=NETOP$
INSTRUCTIONS FOR INSTALLING 'NETOP'
*************************************

1) UPDATE TERMINAL LIST AT LABEL MATABLE WITH CANDIDATES FOR MASTER
   TERMINAL STATUS.

2) ASSEMBLE NETOP USING THE SAMPLE JCL IN NETOPA.

3) ADD VTAM DEFINITION FOR 'NETOP' TO SYS1.VTAMLST.

4) ADD STARTUP PROC (NETOPP) TO SYS1.PROCLIB.

./ ADD NAME=NETOPA
//EP91853A JOB (91853,576595,D,PSTT),'PITKIN:NANAIMO FLR 2',CLASS=S,        0010
//  MSGCLASS=A,NOTIFY=*,TIME=1,USER=*,PASSWORD=*
/*JOBPARM L=20
/*ROUTE PRINT RMT5
//COMPRESS EXEC COMPRESS,LIB='EP91853.LOADLIB'
//ASM EXEC ASMFCL,CLASS=$,PARMC=TEST,PARML=TEST                             0020
//SYSLIB  DD DSN=SYS1.MACLIB,DISP=SHR                                       0022
//        DD DSN=SYS1.AMODGEN,DISP=SHR                                      0022
//ASM.SYSIN DD DSN=SYS9.TP.SHARE(NETOPMAC),DISP=SHR                         0030
//          DD DSN=SYS9.TP.SHARE(NETOP),DISP=SHR                            0030
//LKED.SYSLMOD DD DSN=EP91853.LOADLIB,DISP=SHR                              0040
//LKED.SYSIN DD *
 SETCODE AC(1)
 NAME NETOP(R)
./ ADD NAME=NETOPMAC
         MACRO
&NAME    $REGS &START=0,&END=15,&USAGE=
.*
.*       THIS MACRO WILL DEFINE SYMBOLIC REGISTERS
.*       IN THE FORMAT RN  EQU  N FOR N BETWEEN
.*       THE START AND END VALUES SPECIFIED
.*
.*
         LCLA  &S,&E,&ST
         LCLC  &BL,&USE
&S       SETA  &START
&E       SETA  &END
         AIF   (&S LE 15 AND &E LE 15).SETST
         MNOTE *,'START OR END TOO LARGE - DEFAULT 0-15 TAKEN'
&S       SETA  0
&E       SETA  15
.SETST   ANOP
&ST      SETA  &S
         AIF   (&ST GT 0).RLOOP
&ST      SETA  1
.RLOOP   AIF   (&S LT 16).CHKE
&S       SETA  0
.CHKE    ANOP
&BL      SETC  ''
         AIF   (K'&S EQ 2).EQUATE
&BL      SETC  ' '
.EQUATE  ANOP
&USE     SETC  '&S&BL             &USAGE(&S+&ST)'
R&S      EQU   &USE
         AIF   (&S EQ &E).REND
&S       SETA  &S+1
         AGO   .RLOOP
.REND    MEND
         SPACE 5
         MACRO
&NAME    $START &CSECT=,&BASE=,&BASENO=,&ID=,&SA=,&ADCONS=,            *
               &SAUSING=YES,&SAVETO=12
         LCLA  &SVT,&IDL,&I
         LCLA  &B,&OFF
         LCLC  &BA,&NAM,&CSCT,&ADC
&SVT     SETA  &SAVETO
&BA      SETC  '12'
&NAM     SETC  '&NAME'
&CSCT    SETC  '&SYSECT'
         AIF   (K'&CSECT EQ 0).NOCSECT
&CSCT    SETC  '&CSECT'
&CSCT    CSECT
.NOCSECT ANOP
         USING *,15           TEMP BASE
&NAM     B     $START         JUMP ID
         DROP  15             DROP TEMP BASE
&NAM     SETC  '$START'
         AIF   (K'&ID EQ 0).SHORT
&CSCT    SETC  '&CSCT &ID'
.SHORT   ANOP
&IDL     SETA  K'&CSCT
MODULEID DC    AL1(&IDL),C'&CSCT'   ID
         AIF   (N'&ADCONS EQ 0).NADC
.ADCLOOP ANOP
&I       SETA  &I+1
&ADC     SETC  '&ADCONS(&I)'
A&ADC    DC    A(&ADC)
         AIF   (&I LT N'&ADCONS).ADCLOOP
.NADC    AIF   (K'&SA EQ 0).NOSA1
         AIF   ('&SA'(1,1) EQ '=').SAVEM
         DC    A(&SA)
         AGO   .SAVEM
.NOSA1   ANOP
$GENSA   DC    18F'0'         GENERATED SAVE AREA
.SAVEM   ANOP
&NAM     SAVE  (14,&SVT)      SAVEM
         AIF   (K'&BASENO EQ 0).NOBNO
&BA      SETC  'BASE1@'
         AGO   .NOAST
.NOBNO   ANOP
&BA      SETC  '&BASE'
         AIF   (K'&BASE GT 0).BASOK
&BA      SETC  '12'           DEFAULT
         AGO   .NOAST
.BASOK   AIF   ('&BASE'(1,1) NE '*').NOAST
&BA      SETC  '12'           DEFAULT
         AIF   (K'&NAME GT 0).USENAM
         MNOTE 4,'BASE=&BASE SPECIFIED BUT NO NAME FIELD'
         MEXIT
.USENAM  ANOP
         USING &NAME,&BA      CODE ADDRESSIBILITY
         AGO   .USNGOK
.NOAST   ANOP
         AIF   (K'&CSECT GT 0).NOSYS
&CSCT    SETC  '&SYSECT'
.NOSYS   ANOP
         USING &CSCT,&BA      TELL ASSEMBLER 1ST BASE
.USNGOK  ANOP
         LR    &BA,15         LOAD BASE REG
         AIF   (K'&BASENO EQ 0).BASEND
         AIF   (&BASENO LE 1).BASEND
&B       SETA  1
         LA    15,4095        LOAD BASE INCREMENT -1
.BASLOOP ANOP
&OFF     SETA  &B
&B       SETA  &B+1
         LA    BASE&B.@,1(15,BASE&OFF.@)  INCREMENT BASE BY 4096
&OFF     SETA  &OFF*4096
         USING &CSCT+&OFF,BASE&B.@  TELL ASSEMBLER
         AIF   (&B LT &BASENO).BASLOOP
.BASEND  ANOP
         AIF   (K'&SA EQ 0).NOSA2
         AIF   ('&SA'(1,1) EQ '=').SALIT
         L     15,$START-4    CHAIN
         AGO   .SAVOK
.SALIT   ANOP
         LA    15,&SA         CHAIN
         AGO   .SAVOK
.NOSA2   ANOP
         LA    15,$START-72   CHAIN
.SAVOK   ANOP
         ST    15,8(,13)       SAVE
         ST    13,4(,15)        AREA
         LR    13,15             FOR CALLEES
         AIF   ('&SAUSING' NE 'YES').MEND
         AIF   (K'&SA GT 0).ISLIT
         USING $GENSA,13      DATA ADDRESSIBILITY
         MEXIT
.ISLIT   AIF   ('&SA'(1,1) EQ '=').MEND
         USING &SA,13         DATA ADDRESSIBILITY
.MEND    MEND
         SPACE 5
         MACRO
&NAME    $DYNAL &TU,&VERB=,&WAIT=NO,&MOUNT=,&PREFIX=S99
         LCLC  &P
&P       SETC  '&PREFIX'
&NAME    LA    R1,&TU         LOAD TEXT UNIT PTR
         ST    R1,&P.TXTPP    STORE IN PARM BLOCK
         AIF   (K'&VERB EQ 0).NOVRB
         MVI   &P.VERB,&VERB  SET DYNALLOC VERB CODE
.NOVRB   AIF   ('&WAIT' EQ 'NO').NOWT1
         OI    &P.FLAG2,X'C0' FLAG VOL,DSN WAIT
.NOWT1   AIF   (K'&MOUNT EQ 0).LARBP
         AIF   ('&MOUNT' EQ 'YES').MN1
         OI    &P.FLAG1,X'20' SET NOMOUNT FLAG
         AGO   .LARBP
.MN1     ANOP
         NI    &P.FLAG1,X'DF' RESET NOMOUNT FLAG
.LARBP   ANOP
         LA    R1,&P.RBPTR    LOAD PARM LIST PTR
         SVC   99             DYNALLOC
         AIF   ('&WAIT' EQ 'NO').NOWT2
         NI    &P.FLAG2,X'3F' RESET VOL,DSN WAIT FLAGS
.NOWT2   AIF   (K'&MOUNT EQ 0).LTR15
         AIF   ('&MOUNT' EQ 'YES').MN2
         NI    &P.FLAG1,X'DF' RESET NOMOUNT FLAG
         AGO   .LTR15
.MN2     ANOP
         OI    &P.FLAG1,X'20' SET NOMOUNT FLAG
.LTR15   ANOP
         LTR   R15,R15        SUCCESSFUL?
         MEND
         SPACE 5
         MACRO
&NAM     $TU   &KEY,&PARM,&ALIGN=,&PREFIX=,&NAME=
         GBLA  &INDX(64),&J
         GBLB  &ALGN
         GBLC  &NAMS(64)
         GBLC  &TUPRFX   DAL,DUN,DDC,DRI,DDN,DIN
         LCLA  &I,&#,&PINDX
         LCLC  &L,&N,&NM,&EQNM
         AIF   (K'&PREFIX EQ 0).FSTU
         AIF   ('&PREFIX' EQ 'DAL' OR '&PREFIX' EQ 'DUN' OR            *
                '&PREFIX' EQ 'DDC' OR '&PREFIX' EQ 'DRI' OR            *
                '&PREFIX' EQ 'DDN' OR '&PREFIX' EQ 'DIN').PRFXOK
         MNOTE 8,'PREFIX=&PREFIX INVALID - CHECK JOB MGMT SPL'
         MEXIT
.PRFXOK  ANOP
&TUPRFX  SETC  '&PREFIX'
         AGO   .NAMCK
.FSTU    AIF   (&J GT 0).NAMCK
 MNOTE 4,'FIRST $TU MACRO DETERMINES ALLOC PREFIX - ''DAL'' ASSUMED'
&TUPRFX  SETC  'DAL'
.NAMCK   AIF   (K'&NAM GT 0).SETJ
         AIF   (&J GT 0).NAMNUL
         MNOTE 4,'FIRST $TU MACRO MUST HAVE NAME FIELD SPECIFIED'
         MEXIT
.SETJ    ANOP
&J       SETA  1
.JLOOP   ANOP
         AIF   (K'&NAMS(&J) EQ 0).SETNAMS
         AIF   ('&NAM' EQ '&NAMS(&J)').NAMNUL
&J       SETA  &J+1
         AIF   (&J LE 64).JLOOP
         MNOTE 8,'MAX NAMES = 64  -  &NAM REJECTED'
         MEXIT
.SETNAMS ANOP
&NAMS(&J) SETC  '&NAM'
.NAMNUL  ANOP
&N       SETC  '&NAMS(&J)'
&INDX(&J) SETA &INDX(&J)+1
&#       SETA  N'&PARM
&I       SETA  &#/10+K'&N+3
         AIF   (&I LE 8).NAMEOK
         MNOTE 8,'''&N'' AND &# PARM(S) WILL GENERATE &I CHAR NAMES'
         MEXIT
.NAMEOK  AIF   (K'&ALIGN EQ 0).ALGNCK
&ALGN    SETB  ('&ALIGN' EQ 'YES')
.ALGNCK  AIF   (NOT &ALGN).NALIGN
         DS    0H
.NALIGN  ANOP
&PINDX   SETA  &INDX(&J)+100
&NM      SETC  '&N&INDX(&J)'
         SPACE
         AIF   (K'&NAME EQ 0).NONAME
         AIF   ('&NAME'(1,1) EQ '*').ASTNAME
&EQNM    SETC  '&NAME'
         AGO   .NMEQATE
.ASTNAME ANOP
&EQNM    SETC  '&KEY'
         AIF   (K'&NAME EQ 1).NMEQATE
&EQNM    SETC  '&KEY'.'&NAME'(2,K'&NAME-1)
.NMEQATE ANOP
&EQNM    EQU   *
.NONAME  ANOP
&NM      DC    AL2(&TUPRFX&KEY),AL2(&#)
         AIF   (&# EQ 0).END
         AIF   ('&PARM'(1,1) EQ '*').MEND
&I       SETA  1
.PARMDO  ANOP
         AIF   (&I GT &#).END
         AIF   ('&PARM(&I)'(1,1) EQ '*').MEND
&L       SETC  'L''&N&PINDX'
         DC    AL2(&L)
&N&PINDX DC    &PARM(&I)
&PINDX   SETA  &PINDX+100
&I       SETA  &I+1
         AGO   .PARMDO
.END     AIF   (&# EQ 0).SPC2
         AIF   ('&PARM'(1,1) EQ '*').MEND
.SPC2    ANOP
         SPACE 2
.MEND    MEND
         SPACE 5
         MACRO
&NAM     $TUP  &NAME=,&TXT=,&FLGLAST=YES
         GBLA  &INDX(64)
         GBLC  &NAMS(64)
         LCLA  &I,&J
         LCLC  &FLG
         AIF   (K'&NAME EQ 0).INDXOK
&J       SETA  1
.JLOOP   AIF   (K'&NAMS(&J) EQ 0).NAMSEND
.POSSNAM AIF   ('&NAME' EQ '&NAMS(&J)').NAMOK
&J       SETA  &J+1
         AIF   (&J LE 64).JLOOP
.NAMSEND MNOTE 4,'NAME &NAME NOT PREVIOUSLY USED WITH $TU MACRO'
         MEXIT
.NAMOK   AIF   (&INDX(&J) GT 0).INDXOK
         MNOTE 4,'CODE ALL $TU MACROS BEFORE ANY $TUP MACROS'
         MEXIT
.INDXOK  ANOP
&I       SETA  1
&FLG     SETC  'A'
&NAM     DS    0A
         AIF   (N'&TXT GT 0).TXTGO
         AIF   (K'&NAME GT 0).LOOP
.MNOTE   MNOTE 4,'NAME OPERAND REQUIRED'
         MEXIT
.LOOP    AIF   (&I LT &INDX(&J) OR '&FLGLAST' EQ 'NO').NOTLST1
&FLG     SETC  'X''80'',AL3'
.NOTLST1 ANOP
         DC    &FLG.(&NAME&I)
&I       SETA  &I+1
         AIF   (&I LE &INDX(&J)).LOOP
         SPACE
         MEXIT
.TXTGO   ANOP
&J       SETA  N'&TXT          LOOP LIMIT
         AIF   (K'&TXT(&J) GT 0).TXTLOOP  LAST PARM NULL?
&J       SETA  &J-1                       YES - DONT USE IT
.TXTLOOP AIF   (&I LT &J OR '&FLGLAST' EQ 'NO').NOTLST2
&FLG     SETC  'X''80'',AL3'
.NOTLST2 ANOP
         AIF   (T'&TXT(&I) EQ 'N').NUMTXT
         DC    &FLG.(&TXT(&I))
         AGO   .INCRI
.NUMTXT  AIF   (K'&NAME EQ 0).MNOTE
         DC    &FLG.(&NAME&TXT(&I))
.INCRI   ANOP
&I       SETA  &I+1
         AIF   (&I LE &J).TXTLOOP
         SPACE
         MEND
         SPACE 5
         MACRO
         $DYNABLK &VERB=0,&FLAGS1=0000,&FLAGS2=00000000,&PREFIX=S99
         LCLC  &P
&P       SETC  '&PREFIX'
*
*        SVC 99 REQUEST BLOCK AND POINTER
*
         DS    0A
&P.RBPTR DC    X'80',AL3(&P.RB)
&P.RB    DS    0A
&P.RBLN  DC    AL1(&P.RBL)
&P.VERB  DC    AL1(&VERB)
&P.FLAG1 DC    X'&FLAGS1'
&P.ERROR DC    XL2'00'
&P.INFO  DC    XL2'00'
&P.TXTPP DS    A
&P.RSV   DC    XL4'00'
&P.FLAG2 DC    XL4'&FLAGS2'
&P.RBL   EQU   *-&P.RB
*
         MEND
./ ADD NAME=NETOPP
//NETOP   PROC  MA=TAF0,NAME=NETOP,PRFX=,LOADLIB='SYS9.LOADLIB'
//*********************************************************************
//*********************************************************************
//*                                                                 ***
//*                                                                 ***
//*    PURPOSE:            ALLOWS NETWORK OPERATOR CONTROL          ***
//*                        FROM TERMINALS IN THE VTAM NETWORK.      ***
//*                                                                 ***
//*                                                                 ***
//*    PARM FIELD:         MASTER VTAM TERMINAL NAME.               ***
//*                        IF PREFIXED BY '$' STARTUP               ***
//*                        COMMANDS ARE ISSUED (SYSIN).             ***
//*                        IF PREFIXED BY '#' LOG IS SPOOLED        ***
//*                        TO SYSPRINT AT START.                    ***
//*                                                                 ***
//*                                                                 ***
//*    OWNER:              SYSTEMS SUPPORT                          ***
//*                                                                 ***
//*    CONTACT:            ANDRE LAPORTE                            ***
//*                        ED PITKIN                                ***
//*                                                                 ***
//*                                                                 ***
//*********************************************************************
//*********************************************************************
//*
//NETOP   EXEC PGM=&NAME,PARM=&PRFX&MA,DPRTY=(15,0),PERFORM=14
//STEPLIB  DD DSN=&LOADLIB,DISP=SHR      <-- AUTH LIB FOR PF5 SUPPORT
//* NETOP CODE FOR VTAMLOG HAS BEEN DISABLED SINCE ALL NETOP TRAFFIC
//* IS LOGGED TO SYSLOG.
//VTAMLOG  DD DSN=SYS1.VTAMLOG,DISP=SHR
//SYSPRINT DD SYSOUT=A
//SYSABEND DD SYSOUT=A
./ ADD NAME=NETOP70,SSI=00092321
VTOP   TITLE 'N E T O P - VTAM PROGRAM OPERATOR'                 85240
***********************************************************************
*                                                                     *
*     MODULE NAME: NETOP                                              *
*                                                                     *
*     DESCRIPTIVE NAME: PROGRAM OPERATOR APPLICATION                  *
*                                                                     *
*     FUNCTION: ALLOWS NETWORK OPERATOR CONTROL FROM TERMINALS IN     *
*               THE VTAM NETWORK                                      *
*                                                                     *
*     AUTHOR: MIKE HOLDEN, GOVERNMENT OF ALBERTA, 1977-1979           *
*                                                                     *
*     NOTES:                                                          *
*                                                                     *
*                  (1) A LIST OF TERMINAL NAMES ELIGIBLE TO BE MASTER *
*        TERMINALS CAN BE FOUND AT LABEL 'MATABLE'                    *
*                                                                     *
*                  (2) NETOP LOGS ALL UNSOLICITED MESSAGES AND NON-   *
*        DISPLAY INTERACTIONS TO A SEQUENTIAL DATASET AND SYSOUT 'A'. *
*        EVERY OTHER DAY THE DATASET IS CLEARED, WHILE THE SYSOUT IS  *
*        SPUN OFF EVERY DAY.                                          *
*                                                                     *
*                  (3) NETOP PROC IN PROCLIB IS AS FOLLOWS:           *
*                                                                     *
* //NETOP PROC MA=T260,NAME=NETOP,PRFX=                             ***
* //*******************************************************************
* //*                                                               ***
* //*   PURPOSE:   VTAM NETWORK PROGRAM OPERATOR                    ***
* //*                                                               ***
* //*   PARM FIELD: MASTER VTAM TERMINAL NAME                       ***
* //*            IF PREFIXED BY '$' STARTUP CMDS ARE ISSUED (SYSIN) ***
* //*   (THIS IS THE CASE AT VTAM INITIALIZATION WHEN A MODIFIED    ***
* //*    NETSOL, ATTACHED BY VTAM, ISSUES 'S NETOP,MA=$T26B' )      ***
* //*                                                               ***
* //VTAMON EXEC PGM=&NAME,PARM=&PRFX&MA,DPRTY=(15,11)               ***
* //STEPLIB DD DSN=DPOS.LOADLIB,DISP=SHR <-- AUTH LIB               ***
* //*                                                               ***
* //*******************************************************************
*                                                                     *
*                                                                     *
*                  (4) NETOP APPL DEFINITIONS ARE AS FOLLOWS:         *
*                                                                     *
*  NETOP   APPL  BUFFACT=1,AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP        *
*  NETPPO  APPL  BUFFACT=1,AUTH=(ACQ,PASS,PPO,NVPACE),PRTCT=VTAMCMD   *
*  NETSPO  APPL  BUFFACT=1,AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD   *
*                      THESE ARE FOR TESTING WHEN NETOP IS RUNNING:   *
*  NETOPT  APPL  BUFFACT=1,AUTH=(ACQ,PASS,NVPACE),PRTCT=VTAMOP        *
*  NETSPOT APPL  BUFFACT=1,AUTH=(ACQ,PASS,SPO,NVPACE),PRTCT=VTAMCMD   *
*                                                                     *
*           ALL CMDS ARE SENT TO VTAM VIA THE SPO ACB WHICH IS ALWAYS *
*        OPEN.  UNSOLICITED MESSAGES ONLY ARE RECEIVED VIA THE PPO    *
*        ACB WHICH IS OPEN WHENEVER THERE IS A MASTER LOGGED ON.  IF  *
*        NOT THESE MESSAGES GO TO THE CONSOLE.                        *
*                                                                     *
*                  (5) HIT PF1 TO DISPLAY THE GENERAL HELP SCREEN,    *
*        THEN AGAIN TO DISPLAY THE PF2 HELP SCREEN.                   *
*                                                                     *
*                  (6) INSTEAD OF 'R 00,YES' FORMAT REPLIES, THE JES2 *
*        ABBREVIATION WORKS - '00YES'                                 *
*                                                                     *
*                  (7) TO OBTAIN MASTER CANDIDATE STATUS ON A NON-    *
*        MASTER TERMINAL ENTER THE 2-DIGIT HOUR OF DAY WITH PF2;      *
*        REPEAT TO TURN OFF MASTER STATUS.  NOTE THAT THIS WILL NOT   *
*        CAUSE THE PPO ACB TO BE OPENED IF IT WAS CLOSED DUE TO NO    *
*        MASTER BEING LOGGED ON, THEREFORE, IN SUCH A SITUATION, ALL  *
*        UNSOLICITED MESSAGES WILL STILL BE ROUTED TO THE CONSOLE.    *
*                                                                     *
*                  (8) NON-VTAM COMMANDS:                             *
*                                                                     *
*            'W' CAUSES WRITE EOF TO VTAMLOG SO THAT SPF BROWSE GETS  *
*        ACCESS TO THE LOG UP TO THE CURRENT TIME.  TO ALLOW FAST     *
*        BROWSING, THIS DATASET IS BLOCKED, SO TO KEEP IT FAIRLY      *
*        CURRENT IT IS CLOSED AND RE-OPENED EVERY 4 LOG PAGES, UNLESS *
*        THE 'W' COMMAND IS USED TO FORCE THIS ACTION.                *
*                                                                     *
*            'K' IS ACCEPTED IN LIEU OF A PA KEY FOR OPERATOR TYPES.  *
*                                                                     *
*            'END' IS ACCEPTED IN LIEU OF PF3.                        *
*                                                                     *
*            'ALL' WITH PF3 CAUSES NETOP TO TERMINATE.                *
*                                                                     *
*            'ROLL'/'NROLL', 'AUTO/NAUTO', 'ECHO/NECHO', 'SOLO/NSOLO',*
*        'LOGD/NLOGD'  ARE PF2 MODE CONTROL KEYWORDS AND ARE          *
*        EXPLAINED IN THE PF2 HELP SCREEN.  THEY CAN BE ABBREVIATED   *
*        TO ANY LENGTH WHILE REMAINING UNAMBIGUOUS.                   *
*                                                                     *
*                  (9) VTAM MESSAGE SUPPRESSION:                      *
*                                                                     *
*        THE INSERTION OF COMMANDS IN REPLY TEXT AND SETTING OF       *
*        DISPLAY CONTROL SWITCHES IS DEPENDANT UPON THE VTAM PARAMETER*
*        'SUPP=NOSUP'  BEING IN FORCE.  ANY SUPPRESSION WILL HAVE A   *
*        DELETERIOUS EFFECT ON NETOP OPERATION.                       *
*                                                                     *
*                 (10) NODE NAMING CONVENTIONS:                       *
*                                                                     *
*        THIS SCHEME HAS BEEN VERY SUCCESSFUL IN OUR NETWORK AND IS   *
*        INCLUDED HERE PURELY AS AN EXAMPLE, SINCE NETOP WILL FUNCTION*
*        WHATEVER THE CONVENTION.  NCP AND APPL NODES ARE NOT APPLIC- *
*        ABLE.  THERE ARE FIVE FIELDS IN A NAME:                      *
*                                                                     *
*              K  lib c tt                                            *
*        WHERE                                                        *
*              K IS THE 3705 id.                                      *
*                                                                     *
*              lib is the 3705 lib.                                   *
*                                                                     *
*              C IS THE RELATIVE HEX CLUSTER NUMBER (0-F)             *
*                                                                     *
*              TT IS THE RELATIVE HEX TERMINAL NUMBER (00-32)         *
*                                                                     *
*        THUS THE 3RD TERMINAL ON THE 2ND CLUSTER ON LINE 0A5 OF      *
*        3705-r        WILL HAVE A NODENAME OF r0a5b03, ATTACHED TO   *
*        CLUSTER r0a5b ON LINE r0a5.  ALL LOCAL TERMINALS ARE NAMED:  *
*                                                                     *
*              Tcuu  WHERE cuu IS THE SUBCHANNEL ADDRESS.             *
*                                                                     *
*                                                                     *
*                 (11) NETOP GENERATED COMMANDS:                      *
*                                                                     *
*        SUBROUTINE RCVVTAM FILTERS ALL OUTPUT FROM VTAM AND IN SOME  *
*        CASES CAUSES VTAM COMMANDS TO BE ISSUED IN RESPONSE, WHILE   *
*        OTHERS CAUSE OUTPUT FORMATS TO BE MODIFIED OR OS COMMANDS    *
*        TO BE ISSUED:                                                *
*                                                                     *
*        MESSAGE                               RESPONSE/ACTION        *
*                                                                     *
*        IST852I (CLUSTER UNAVAIL.)            V NET,INACT,I          *
*        IST209I (INT. REQD. ON CONTACT)       V NET,INACT,I          *
*        IST285,286,413 (DUMPING MESSAGES)     SE  TO SYS. PGMRS.     *
*        IST082I (DISPLAY LINE WITH ALLOC= )   'TSONNNN' CONVERTED TO *
*                                              USERID (ASID).         *
*                                                                     *
*                                                                     *
*                 (12) PF10 CLUSTER ONLY DISPLAY:                     *
*                                                                     *
*        THIS FEATURE IS TRIGGERED BY THE 1ST CHARACTER OF ALL CLUSTER*
*        NODENAMES BEING THE SAME.  THE DEFAULT IS 'C' BUT USE &CLUST *
*        TO SELECT YOUR OWN IF NECESSARY.  WHEN A DISPLAY COMMAND SUCH*
*        AS  'C7A0-5,I' IS ENTERED VIA PF10, ALL TERMINAL INFORMATION *
*        IS OMITTED AND CLUSTER INFORMATION HI-LIGHTED TO DRAW        *
*        ATTENTION TO, IN THIS CASE, DEAD CLUSTERS ON LINES BETWEEN   *
*        L7A0 AND L7A5.                                               *
*                                                                     *
*                                                                     *
*        RESTRICTIONS:                                                *
*                                                                     *
*                   SYSTEMS.     MVS                                  *
*                                                                     *
*                   TERMINALS:   3277-2, 3278-2/3/4                   *
*                                MAX=8 (NUMBER OF ASSEMBLED TICBS)    *
*                                                                     *
*        REGISTER CONVENTIONS:                                        *
*                                                                     *
*        R0,R1      PARAMETER PASSING                                 *
*        R2         @ RPL                                             *
*        R3         @ TICB                                            *
*        R4         @ DA (ISTDPOHD)                                   *
*        R5-R9      WORK REGISTERS (VARIOUS CONTENTS)                 *
*        R10        CODE BASE                                         *
*        R11        DATA BASE 1                                       *
*        R12        DATA BASE 2                                       *
*        R13        SAVE AREA ADDRESS                                 *
*        R14        RETURN ADDRESS, OCCASIONAL WORKREG                *
*        R15        SUBROUTINE ADDRESSES, RETURN CODE, ACTION CODE    *
*                                                                     *
*        DEFINITIONS:                                                 *
*                                                                     *
*        COMMAND -  DATA UNIT ORIGINATING AT A TERMINAL AND DESTINED  *
*                   FOR VTAM. CONTAINS A VTAM OPERATOR COMMAND (VARY, *
*                   MODIFY, DISPLAY, OR REPLY).                       *
*                                                                     *
*        MESSAGE -  A DATA UNIT ORIGINATING IN VTAM DESTINED FOR A    *
*                   REMOTE OPERATOR TERMINAL LOGGED ONTO THE PO.      *
*                                                                     *
*        UNSOLICITED MESSAGE - MESSAGE NOT RELATED TO ANY COMMAND     *
*                   PREVIOUSLY SENT TO VTAM FROM A REMOTE OPERATOR.   *
*                   AN UNSOLICITED MESSAGE IS RECOGNIZED BY THE       *
*                   INDICATOR IN THE MESSAGE HEADER  (SEE POHGEN IN   *
*                   ISTDPOHD DSECT).                                  *
*                                                                     *
*        MASTER TERMINAL - TERMINAL DESIGNATED BY PO TO RECEIVE       *
*                   UNSOLICITED MESSAGES (THESE ARE ALSO SENT TO ALL  *
*                   MASTER CANDIDATES).                               *
*                                                                     *
*                                                                     *
*        PROCESSOR: ASSEMBLER                                         *
*                                                                     *
*        ATTRIBUTES:  NON-REUSABLE                                    *
*                     AC(1)                                           *
*                                                                     *
*       ENTRY: NETOP                                                  *
*                                                                     *
*       LINKAGE: CALL                                                 *
*                                                                     *
*       INPUT: R13: SAVE AREA ADDRESS                                 *
*              R14: RETURN POINT ADDRESS                              *
*              R15: ENTRY POINT ADDRESS                               *
*                                                                     *
*       OUTPUT: ALL REGISTERS RESTORED                                *
*                                                                     *
*       EXIT-NORMAL: BR 14                                            *
*                                                                     *
*       EXIT-ERROR:  ABEND                                            *
*                                                                     *
*                    ABEND CODES:                                     *
*                                                                     *
*                                  1 OPEN FAILURE                     *
*                                  2 CLOSE FAILURE                    *
*                                 10 SETLOGON FAILED                  *
*                                 16 ENVIRONMENT ERROR (FROM LERAD)   *
*                                 20 LOGIC ERROR (FROM LERAD)         *
*                                 23 RECEIVE FAILURE (INBOUND)        *
*                                                                     *
*       EXTERNAL-REFERENCES:  NONE                                    *
*                                                                     *
*       CONTROL BLOCKS: TICB - TERMINAL INFORMATION CONTROL BLOCK     *
*                       ISTDPOHD - MESSAGE BUFFER                     *
*                                                                     *
*       TABLES:  MATABLE - LIST OF TERMINALS AUTHORIZED TO BE MASTER  *
*                TICBPOOL - POOL OF TICBS                             *
*                                                                     *
*       SYSTEM MACROS:                                                *
*                ABEND,WAIT,PUT,WRITE,READ,POST,OPEN,CLOSE,DCB,WTO    *
*                                                                     *
*       VTAM MACROS:                                                  *
*                ACB,RPL,NIB,MODCB,CHECK,EXLST,SETLOGON,OPEN,CLOSE    *
*                OPNDST,CLSDST,SEND,RECEIVE,SENDCMD,RCVCMD            *
*                                                                     *
*                                                                     *
*       RELATIONSHIPS BETWEEN MAINLINE, EXITS AND SUBROUTINES:        *
*                                                                     *
*       CODE SEGMENT   CALLS                                          *
*                                                                     *
*        MAINLINE       SHOWCDS,PRLOG,PUTLOG,IDFIND,                  *
*                       SND3270                                       *
*        ABEXIT         CVHX                                          *
*                                                                     *
*        INBOUND        RCV3270,ATOX                                  *
*        OUTBOUND       IDFIND,RCVVTAM,PUTLOG,SND3270,INBOUND(INLENOK)*
*        LOGON          INT3270,PUTLOG,CLSDST                         *
*        LOSTERM        PUTLOG,MAFIND,CLSDST                          *
*        RELREQ         PUTLOG,MAFIND,CLSDST                          *
*        TPEND          CVHX,PUTLOG                                   *
*        ERROR          PUTLOG                                        *
*                                                                     *
*        SHOWCDS        CVHX                                          *
*        CVHX                                                         *
*        RCVVTAM        TSOUID                                        *
*        RCV3270        INT3270,ATOX,PUTLOG,PRLOG,MAFIND,CLSDST,      *
*                       TSOUID                                        *
*        CLSDST         PUTLOG                                        *
*        ATOX                                                         *
*        MAFIND         IDFIND,PUTLOG                                 *
*        IDFIND                                                       *
*        PUTLOG         PRLOG                                         *
*        PRLOG                                                        *
*        SND3270        INT3270                                       *
*        INT3270                                                      *
*        TSOUID                                                       *
*                                                                     *
***********************************************************************
*
*
         MACRO ,                                                 85241
&NM      $TU   &A,&O,&LBL=,&PREFIX=                              85241
         GBLC  &TU@PFX                                           85241
         LCLA  &I                                                85241
         AIF   ('&PREFIX' EQ '').NOPFX                           85241
&TU@PFX  SETC  '&PREFIX'                                         85241
.NOPFX   AIF   ('&O' EQ '' AND '&LBL' NE '').CRUD                85241
         AIF   ('&O' NE '').EXPAND                               85241
&NM      DC    Y(&TU@PFX.&A,0)                                   85245
         MEXIT ,                                                 85241
.CRUD    MNOTE 8,'LBL= NOT PERMITTED WITHOUT OPERAND'            85241
         MEXIT ,                                                 85241
.EXPAND  ANOP  ,                                                 85241
&I       SETA  &SYSNDX                                           85241
&NM      DC    Y(&TU@PFX.&A,1,ZZTU&I-*-2)                        85245
&LBL     DC    &O                                                85241
ZZTU&I   DS    0X                                                85241
         MEND  ,                                                 85241
         SPACE 1                                                 85241
         MACRO ,                                                 85241
&NM      $TUP  &TXT=                                             85241
         LCLA  &I,&J                                             85241
         LCLC  &N                                                85241
&I       SETA  N'&TXT                                            85241
&N       SETC  '&NM'                                             85241
&J       SETA  1                                                 85241
.LOOP    AIF   (&I LT 2).NOA                                     85241
&N       DC    A(&TXT(&J))                                       85241
&N       SETC  ''                                                85241
&I       SETA  &I-1                                              85241
&J       SETA  &J+1                                              85241
         AGO   .LOOP                                             85241
.NOA     AIF   (&I LT 1).NONE                                    85241
&N       DC    0A(0),X'80',AL3(&TXT(&J))                         85241
.NONE    MEND  ,                                                 85241
         MACRO ,                                                 85241
&NM      $DYNAL &TU,&VERB=                                       85241
&NM      LA    R15,REQBLOCK  POINT TO THE REQUEST BLOCK          85241
         LA    R1,&TU        GET THE TEXT UNIT POINTER           85241
         MVI   1(R15),&VERB  SET THE REQUEST CODE                85241
         ST    R1,8(,R15)    SET THE TEXT UNIT POINTER ADDRESS   85241
         LA    R1,DYNPTR     POINT TO THE REQUEST BLOCK          85241
         SVC   99            REQUEST ALLOCATION SERVICE          85241
         LTR   R15,R15       SET CONDITION CODE                  85241
         MEND  ,                                                 85241
         MACRO
&NAME    $XINIT &XBASE=BASE1@,&TBASE=SUBR@,&SA=EXITSA,&RET=RET@,       *
               &DBASE1=DBASE1@,&DBASE2=DBASE2@,&DORG=@DBASE2
         GBLC  &GNAME
&GNAME   SETC  '&NAME'
         DS    0F                 ALIGN
         USING &NAME,&TBASE
&NAME    B     *+16               JUMP PAST CONSTANTS
         DC    CL8'&NAME'         EXIT ID
         DC    A(&DORG-&NAME)     DATA BASE ORIGIN
         AIF   ('&NAME' NE 'ABEXIT').NOSAVE
         SAVE  (14,12)
.NOSAVE  AIF   ('&GNAME' EQ 'ERROR').LBASE  ALREADY SET UP
         L     &DBASE1,&NAME+12   PICK UP DBASE OFFSET
         ALR   &DBASE1,&TBASE     ADD TEMP BASE TO GET ADDRESS
         L     &DBASE2,&DORG      LOAD 2ND DBASE ADDRESS
.LBASE   ANOP
         LR    &XBASE,&TBASE      LOAD EXIT BASE ADDRESS
         DROP  &TBASE
         USING &NAME,&XBASE
.*       ASSUME USINGS FOR DBASES ALREADY DONE IN MAINLINE
         AIF   ('&SA' EQ 'EXITSA' OR '&GNAME' EQ 'TPEND').NSAVE
         LR    &TBASE,SA@         SAVE HIGH SA PTR
.NSAVE   ANOP
         LA    SA@,&SA            LOAD NEW SA PTR
         AIF   ('&SA' EQ 'EXITSA' OR '&GNAME' EQ 'TPEND').SAVRET
         ST    SA@,8(,&TBASE)     CHAIN FORWARD
         ST    &TBASE,BWDPTR      CHAIN BACK
         AIF   ('&GNAME' EQ 'ERROR').SAVRET
         MEXIT
.SAVRET  ANOP
         TM    PL1WD,INUSE        SAVE AREA IN USE?
         BZ    *+24               NO
         $AB   13                 YES - GET A DUMP - THIS WE MUST SEE
         ST    &RET,PL1WD         SAVE RETURN PTR IN PL1 WORD
         OI    PL1WD,INUSE        FLAG SAVE AREA IN USE
         OI    &NAME+12,INUSE     FLAG EXIT IN USE
         MEND
*
         MACRO
&NAME    $XRET &RET=RET@
         GBLC  &GNAME
&NAME    NI    PL1WD,255-INUSE    FLAG SAVE AREA FREE
         NI    &GNAME+12,255-INUSE    FLAG EXIT FREE
         L     &RET,PL1WD         PICK UP RET PTR
         AIF   ('&GNAME' NE 'ERROR').RET
         L     SA@,BWDPTR         RELOAD CALLER'S SA PTR
         XC    FWDPTR,FWDPTR      ZERO CALLER'S LOW SA PTR
.RET     ANOP
         BR    &RET               RETURN
         MEND
*
         MACRO
&NAME    $XCTL &LABEL,&SUBNAME,&XBASE=BASE1@
         GBLC  &GNAME
&NAME    NI    &GNAME+12,255-INUSE   FLAG OLD EXIT FREE
         L     &XBASE,=A(&SUBNAME)   LOAD NEW EXIT BASE ADDRESS
         USING &SUBNAME,&XBASE       ESTABLISH NEW EXIT ADDRESSING
         OI    &SUBNAME+12,INUSE     FLAG NEW EXIT IN USE
         B     &LABEL                GO TO NEW EXIT
         USING &GNAME,&XBASE         RE-ESTABLISH OLD EXIT ADDRESSING
         MEND
*
         MACRO
&NAME    $CALL &SUBR,&PARM,&LEN,&LPARM
         LCLC  &NAM,&SUBNAM,&REG
         AIF   (K'&PARM GT 0 AND '&PARM' EQ '&LEN' OR                  *
               '&LEN' EQ 'R1' OR '&LEN' EQ '1' OR                      *
               '&LEN' EQ '(PARM@)').MERR
&NAM     SETC  '&NAME'
         AIF   (K'&PARM EQ 0).NOPARM
         AIF   ('&PARM'(1,1) NE '(').NOTREG
         AIF   ('&PARM' EQ '(PARM@)').NOLPARM
&REG     SETC  '&PARM'(2,K'&PARM-2)
&NAM     LR    PARM@,&REG     PICK UP PARM
         AGO   .NAMRST
.MERR    MNOTE 4,'PARM=&PARM WITH LEN=&LEN WILL CAUSE EXECUTION ERRORS'
         MEXIT
.NOTREG  ANOP
         AIF   ('&PARM' EQ '0').ZPARM
&NAM     LA    PARM@,&PARM    PICK UP PARM
         AGO   .NAMRST
.ZPARM   ANOP
&NAM     SR    PARM@,PARM@    SET PARM
         AGO   .NAMRST
.NOPARM  AIF   (K'&LPARM EQ 0).NOLPARM
&NAM     L     PARM@,&LPARM   PICK UP LOAD PARM
.NAMRST  ANOP
&NAM     SETC  ''
.NOLPARM ANOP
         AIF   (K'&LEN EQ 0).NOLEN
         AIF   ('&LEN'(1,1) NE '(').NOTLREG
&REG     SETC  '&LEN'(2,K'&LEN-2)
         AIF   ('&REG'(1,2) EQ 'WK').LENOK
         AIF   ('&REG' EQ 'SUBR@').LENCHG
&NAM     LR    SUBR@,&REG     COPY LENGTH
         AGO   .LENCHG
.NOTLREG ANOP
&REG     SETC  '&LEN'
         AIF   ('&LEN'(1,1) NE '*').NOTAST
&REG     SETC  'L''&PARM'.'&LEN'(2,K'&LEN-1)
.NOTAST  ANOP
         LA    SUBR@,&REG     LOAD LENGTH
.LENCHG  ANOP
&NAM     SETC  ''
&REG     SETC  'SUBR@'
.LENOK   ANOP
&NAM     SLL   &REG,24        SHIFT TO HI END
         OR    PARM@,&REG     OR LENGTH INTO PARM
&NAM     SETC  ''
.NOLEN   ANOP
&SUBNAM  SETC  '=A(&SUBR)'
&NAM     L     SUBR@,&SUBNAM PICK UP SUBR EP
         BALR  RET@,SUBR@     GO TO SUBROUTINE
         MEND
*
         MACRO
&NAME    $SINIT &SARET=
.*
.*          SARET=(LABEL1,LABEL2) IS USED AS FOLLOWS:
.*
.*       LABEL1 IS USED AS THE TARGET FOR SAVING RETURN AND BASE REGS,
.*       SPACE BEING RESERVED FOR THESE AT A SUSEQUENT ENTRY POINT.
.*       IF LABEL2 IS CODED IT IS USED AT THE NEXT ENTRY POINT TO
.*       BYPASS CODE AFTER THE BASE REG HAS BEEN UPDATED DURING FALL
.*       THROUGH, THE NORMAL MULTI-EP ACTION.
.*
         GBLC  &SUBNAME(32),&JUMP
         GBLB  &MULTEP
         GBLA  &SUB#
         LCLC  &SUBNAM
         LCLA  &SKIP
&SKIP    SETA  20
         AIF   (&MULTEP).MULTGO
         AIF   (K'&SARET EQ 0).NOMULT
&SKIP    SETA  12
&MULTEP  SETB  1
         AIF   (K'&SARET(2) EQ 0).NOMULT
&JUMP    SETC  '&SARET(2)'     JUMP LABEL FOR FALL THRU AT NEXT $SINIT
         AGO   .NOMULT
.MULTGO  AIF   (K'&SARET GT 0).MULTON
&MULTEP  SETB  0
         AGO   .MULTOK
.MULTON  ANOP
&SKIP    SETA  12
.MULTOK  ANOP
         AIF   (K'&JUMP GT 0).NOCNOP
         CNOP  0,4                  FULLWORD ALIGN
.NOCNOP  ANOP
         LA    BASE1@,&NAME
         USING &NAME,BASE1@         BASE USAGE
         AIF   (K'&JUMP GT 0).JUMP
&JUMP    SETC  '*+18+&SKIP'
.JUMP    ANOP
         B     &JUMP
&JUMP    SETC  ''
.NOMULT  ANOP
         DS    0F                   ALIGN
         USING &NAME,SUBR@          TEMP BASE
&SUB#    SETA  &SUB#+1
&SUBNAME(&SUB#) SETC '&NAME'
&SUBNAM  SETC '&SARET(1)'
&NAME    B     *+&SKIP              JUMP CONSTANTS
         DC    CL8'&NAME'           SUBR ID
         AIF   (K'&SARET GT 0).NOSA
         DS    2F                   RET PTR/BASE REG SAVE AREA
&SUBNAM  SETC  '&SUBNAME(&SUB#)'
.NOSA    ANOP
         ST    RET@,&SUBNAM+12      SAVE RET PTR
         ST    BASE1@,&SUBNAM+16    SAVE CALLERS BASE
         OI    &SUBNAM+16,INUSE     FLAG SUBR IN USER
         LR    BASE1@,SUBR@         LOAD LOCAL SUBR BASE
         DROP  SUBR@                RESET ASSEMBLER
         USING &NAME,BASE1@         BASE USAGE
         MEND
*
         MACRO
&NAME    $SRET
         GBLC  &SUBNAME(32)
         GBLA  &SUB#
         LCLC  &SUBNAM
&SUBNAM  SETC  '&SUBNAME(&SUB#)'
&NAME    L     RET@,&SUBNAM+12      PICK UP RET PTR
         NI    &SUBNAM+16,255-INUSE RESET INUSE FLAG
         L     BASE1@,&SUBNAM+16    RESTORE CALLERS BASE
         BR    RET@                 RETURN
         MEND
*
         MACRO
&NAME    $AB   &ABCD,&NODUMP
         LCLC  &REG,&DUMP
&REG     SETC  '(1)'
&NAME    STM   R0,R1,ABREGS   SAVE REGS CLOBBERED BY ABEND MACRO
         AIF   ('&ABCD'(1,1) EQ '(').REGFMT
         LA    R1,&ABCD       LOAD USER ABEND CODE
         AGO   .CHKDMP
.REGFMT  ANOP
&REG     SETC  '&ABCD'
.CHKDMP  AIF   ('&NODUMP' EQ 'NODUMP').NODUMP
         ABEND &REG,DUMP
         MEXIT
.NODUMP  ANOP
         ABEND &REG
         MEND
*
         MACRO
&NAME    $MATAB
         LCLA  &MALEN,&I
&I       SETA  1
&NAME    DS    0F             MASTER CANDIDATE TABLE
.MATLOOP ANOP
&MALEN   SETA  K'&SYSLIST(&I)
         DC    AL1(&MALEN),C'&SYSLIST(&I)'
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).MATLOOP
         MEND
*
         MACRO
         $HELPF2
         LCLC  &N,&P
         LCLA  &I
*
*        SET PF2 KEYWORD INTENSITIES TO REFLECT MODES IN FORCE
*
.HLOOP   ANOP
&I       SETA  &I+1
&P       SETC  '&SYSLIST(&I)'(1,1)
&N       SETC  '&P.Z'
         MVI   HELP&N,X'60'              INITIALIZE
         MVI   HELP&P,X'60'               AS LO
         TM    TIFLAGS2,TIF2&SYSLIST(&I) IF MODE NOT SET,
         BO    *+12
         MVI   HELP&N,X'E8'               THEN SET NEGATIVE TO HI
         B     *+8
         MVI   HELP&P,X'E8'               ELSE SET POSITIVE TO HI
         SPACE
         AIF   (&I LT N'&SYSLIST).HLOOP
         MEND
*
         MACRO
         $3270
*
*        3270 ORDERS, PF/PA KEYS, AND ATTRIBUTE CODES
*
         GBLC  &L(24)
&L(1)    SETC  '4040'
&L(2)    SETC  'C150'
&L(3)    SETC  'C260'
&L(4)    SETC  'C3F0'
&L(5)    SETC  'C540'
&L(6)    SETC  'C650'
&L(7)    SETC  'C760'
&L(8)    SETC  'C8F0'
&L(9)    SETC  '4A40'
&L(10)   SETC  '4B50'
&L(11)   SETC  '4C60'
&L(12)   SETC  '4DF0'
&L(13)   SETC  '4F40'
&L(14)   SETC  '5050'
&L(15)   SETC  'D160'
&L(16)   SETC  'D2F0'
&L(17)   SETC  'D440'
&L(18)   SETC  'D550'
&L(19)   SETC  'D660'
&L(20)   SETC  'D7F0'
&L(21)   SETC  'D940'
&L(22)   SETC  '5A50'
&L(23)   SETC  '5B60'
&L(24)   SETC  '5CF0'
SF       EQU   X'1D'          START FIELD
SBA      EQU   X'11'          SET BUFFER ADDRESS
IC       EQU   X'13'          INSERT CURSOR
PT       EQU   X'05'          PROGRAM TAB
RA       EQU   X'3C'          REPEAT TO ADDRESS
EUA      EQU   X'12'          ERASE UNPROTECTED TO ADDRESS
ENTER    EQU   X'7D'
XENTER   EQU   X'0D'
PF1      EQU   X'F1'
XPF1     EQU   X'01'
PF2      EQU   X'F2'
XPF2     EQU   X'02'
PF3      EQU   X'F3'
XPF3     EQU   X'03'
PF4      EQU   X'F4'
PF5      EQU   X'F5'
PF6      EQU   X'F6'
PF7      EQU   X'F7'
PF8      EQU   X'F8'
PF9      EQU   X'F9'
PF10     EQU   X'7A'
PF11     EQU   X'7B'
PF12     EQU   X'7C'
PA1      EQU   X'6C'
PA2      EQU   X'6E'
PA3      EQU   X'6B'
CLEAR    EQU   X'6D'
TESTREQ  EQU   X'F0'
         MEND
*
         GBLC  &L(24)         3270 BUFFER LINE ADDRESSES (COL 1)
         LCLC  &SENDLST       LIST OF TSO VTAM SYSTEM PGMRS. FOR SENDS
         LCLC  &CLUST         STARTING CHARACTER OF ALL CLUSTERS
         LCLC  &REL           RELEASE AND LEVEL (R.L)
         LCLB  &MAROLL        ROLL/NROLL MODE FOR INITIAL MASTER
&SENDLST SETC  ''                                                86356
&CLUST   SETC  'R'                                               85240
&REL     SETC  '2.1'
&MAROLL  SETB  1              ROLL
NETOP    START 0                                                R85240
         TITLE  'N E T O P - MISC. DSECTS'
* TERMINAL INFORMATION CONTROL BLOCK (TICB)
*
TICB     DSECT
TINDICS  DS    0CL4               INDICATORS
TISTATUS DS    XL1                STATUS BYTE
TISALLOC EQU   B'10000000'  80    ALLOCATION BIT
TISACT   EQU   B'01000000'  40    TERMINAL ACTIVE
TISMCAND EQU   B'00100000'  20    MASTER CANDIDATE
TISMA    EQU   B'00010000'  10    MASTER TERMINAL
TISUID   EQU   B'00001000'  08    USERID QUERY
TISTACK  EQU   B'00000100'  04    MESSAGES ARE STACKED AWAITING ROLL
TISREPLY EQU   B'00000010'  02    REPLY COMMAND ISSUED
TISNOMOR EQU   B'00000001'  01    NO MORE TICBS
*
TIFLAGS  DS    XL1
TIFDSP   EQU   B'10000000'  80    DISPLAY CMD ENTERED
TIFVLOG  EQU   B'01000000'  40    PF7 (VARY ,LOGON)
TIFCLUST EQU   B'00100000'  20    PF10 (DISPLAY, CLUSTER ONLY STATUS)
TIFDSP11 EQU   B'00010000'  10    PF11 (DISPLAY, AND LOG)
TIFHELP  EQU   B'00001000'  08    PF1 (HELP) ENTERED
TIFUNSOL EQU   B'00000100'  04    LAST MSG DISPLAYED IS UNSOL
TIFWTROL EQU   B'00000010'  02    WAIT FOR ROLL CONDITION (SCREEN FULL)
TIFNAUT  EQU   B'00000001'  01    NO-AUTO RE-ENTRY OF EXPANDED CMD
*
TIFLAGS2 DS    XL1                PF2 CONTROL FLAGS
TIF2ROLL EQU   B'10000000'  80    ROLL FLAG - ON=ROLL SCREEN
TIF2AUTO EQU   B'01000000'  40    AUTO FLAG - ON=NO AUTO CMDS
TIF2ECHO EQU   B'00100000'  20    ECHO FLAG - ON=NO ECHOING TO TERMINAL
TIF2SOLO EQU   B'00010000'  10    SOLO FLAG - ON=SOLICITED MSGS ONLY
TIF2LOGD EQU   B'00001000'  08    LOGD FLAG - ON=LOG DISPLAY CMDS
*
TIFLAGS3 DS    XL1           VTAM SUPPORT FLAGS                  87107
TIF3MCNT EQU   X'80'           REDISPLAY 'STACKED' COUNT         87109
TIF3READ EQU   X'02'           READ COMMAND POSTED (IN BRACKET)  87107
TIF3NTO  EQU   X'01'           NTO SUPPORT (PLANNED)             87107
*
TINAMLEN DS    H                  LENGTH TERMINAL NAME
TINAME   DS    CL8                TERMINAL NAME
TIMSGID  DS    0XL2               MESSAGE ID
TID      DS    XL1                 TERMINAL ID
TIMSGSEQ DS    XL1                 MESSAGE SEQUENCE NUMBER
TICMDLEN DS    H                  LENGTH LAST COMMAND ENTERED
TICMD    DS    CL40               LAST COMMAND ENTERED
TICOPYL  EQU   *-TICB             FOR COPY TO DUMTICB DURING ECHO
TILNCT   DS    H                  SCREEN LINE COUNT
TIDSPCT  DS    H                  OUTSTANDING DISPLAY COUNT
TIUNADDR DS    XL2                3270 BUFADD OF LAST UNSOL MSG
TIABRLEN DS    H                  LENGTH LAST ABBREV. COMMAND ENTERED
TIABR    DS    CL30               LAST ABBREV. COMMAND ENTERED
TICID    DS    F                  TERMINAL CID
TIHEAD@  DS    F                  STACK HEAD POINTER
TITAIL@  DS    F                  STACK TAIL POINTER
TISTKCT  DS    PL2                STACK ELEMENT COUNT
         DS    0F                 GUARANTEE L'TICB = N FULLWORDS
TICBLEN  EQU   ((*-TICB)+31)/32*32 L'TICB MULTIPLE OF 32 BYTES
         SPACE 5
         PRINT ON,NOGEN
*
* DATA AREA
*
         ISTDPOHD
         ORG   POHID
POHTID   DS    XL1                TERMINAL ID
POHMSQ   DS    XL1                MESSAGE SEQUENCE NUMBER
POHLEN   EQU   *-ISTDPOHD         LENGTH OF PO HEADER
DATX     DS    CL124              MESSAGE TEXT
DALEN    EQU   *-ISTDPOHD         LENGTH OF DATA AREA
DATXLEN  EQU   DALEN-POHLEN       LENGTH OF TEXT AREA
*
*        VTAM MESSAGE FIELDS
*
         ORG   DATX+3         VTAM MESSAGE NUMBER
DAMSG#   DS    CL3
         ORG   DATX+9         VTAM NODE NAME
DAMSGNOD DS    CL8
         ORG   DATX+17        RESPONSE VERB (ACCEPTED)
DAMSGFAI DS    CL6
         ORG   DATX+18        RESPONSE VERB (FAILED, IGNORED)
DAMSGRSP DS    CL6
DAM80TXL EQU   16             IST080I 'NODENAME STATUS'  FIELD LENGTH
DAM80NXL EQU   22             OFFSET OF ONE  'NODENAME STATUS'  TO NEXT
         ORG   DATX+18        IST082I DEVICE TYPE
DAM82DEV DS    CL5
         ORG   DATX+35        IST082I ALLOC APPLID
DAM82ALC DS    CL8
         ORG   DATX+63        IST082I SIMLOGON APPLID
DAM82SIM DS    CL8
DA342RC  EQU   DATX+93,2      IST342I RETURN CODE
DA400APL EQU   DATX+44,8      IST400I APPLID
DA804APL EQU   DATX+35,8      IST804I APPLID
DA805APL EQU   DATX+33,8      IST805I APPLID
*
*        VTAM ERROR MESSAGE FIELDS
*
         ORG   DATX+17        IST285I/6I 370X NODE NAME
DA285NOD DS    CL8
         ORG   DATX+26        IST852I CLUSTER NODE NAME
DA852NOD DS    CL8
         ORG   DATX+37        NCP BTU COMMAND
DABTUCMD DS    CL4
         ORG   DATX+57        EG: INTERVENTION REQD - BSC STATUS
DABSCST1 DS    CL2,CL3            40 -
DABSCST2 DS    CL2                     50
         ORG   DATX+61        EG: PERM. I/O ERROR - NCP RESPONSE
DANCPRS1 DS    CL2,CL3            AB -
DANCPRS2 DS    CL2                     80   (TIMEOUT)
*
STKEL    DSECT                STACK ELEMENT
STKNXEL  DS    F              NEXT STACK ELEMENT POINTER
STKELEN  DS    H              STACK ELEMENT LENGTH
STKDATA  DS    CL(DALEN)      STACK ELEMENT DATA (MAX LENGTH)
*
* PARAMETER LIST FOR TPEND EXIT
*
TPENDPRM DSECT
TPACB@   DS    F                  @ ACBTERMS
TPREASON DS    F                  REASON CODE
*
* PARAMETER LIST FOR LOGON AND RELREQ EXITS
*
LOGONPRM DSECT
LGNACB@  DS    F                  @ ACBTERMS
TNAME@   DS    F                  @ TERMINAL NAME
         DS    F                  RESERVED
LGNMSGLN DS    F                  LENGTH OF LOGON MESSAGE
*
* PARAMETER LIST FOR LOSTERM EXIT
*
LOSTPARM DSECT                    FOR LOSTERM AND RESP EXITS
LOSTACB  DS    F                  @ ACBTERMS
LOSTCID  DS    F                  CID OF TERMINAL
LOSTUSER DS    F                  USER FIELD INFO - @ TICB
LOSTCODE DS    F                  REASON CODE (UNUSED FOR RESP EXIT)
RESPRPL  DS    F                  RESPONSE EXIT READ-ONLY RPL
*
SA       DSECT                    SAVE AREA DSECT
PL1WD    DS    F                  RESERVED
INUSE    EQU   X'80'              IN USE FLAG
BWDPTR   DS    F                  @ CALLER'S SAVE AREA
FWDPTR   DS    F                  @ CALLEE'S SAVE AREA
RETURN   DS    F                  CALLER'S RETURN ADDRESS
ENTRY    DS    F                  CALLEE'S ENTRY ADDRESS
         PRINT ON,NOGEN
         IFGACB AM=VTAM
         ISTUSFBC
         IFGRPL AM=VTAM
         ISTDNIB
         IHASDWA
         IEFZB4D2             DYNALLOC EQUATES
         IKJTSB   EXT=YES,LIST=YES
         IKTTCAST
         IHAASCB
         CVT   DSECT=YES,LIST=NO                                 92321
         PRINT ON,NOGEN
         TITLE 'N E T O P - MISC. EQUATES'
* REGISTER EQUATES
*
         REGEQU ,                                                85240
         $3270
*
*        NOTE:   SYMBOL @ IS USED TO DENOTE 'ADDRESS OF' OR 'POINTER'.
*              IT IS USED AS A SUFFIX IN REGISTER EQUATES AND AS A
*              PREFIX IN ADCON SYMBOLS.
*
ACTCD    EQU   R0                 ACTION CODE FROM VTAM
PARM@    EQU   R1                 POINTER TO PARAMETER LIST
RPL@     EQU   R2                 RPL ADDRESS REGISTER
TICB@    EQU   R3                 TICB ADDRESS REGISTER
DA@      EQU   R4                 DATA AREA @ (INBOUND,OUTBOUND)
NIB@     EQU   R4                 NIB @ (MAINLINE,LOGON,RELREQ)
CID      EQU   R4                 TERMINAL CID (LOSTERM)
MSGLEN   EQU   R5                 MESSAGE LENGTH (OUTBOUND)
WKA      EQU   R6                 WORK REGISTER
WKB      EQU   R7                 WORK REGISTER
ACB@     EQU   R8                 ACB @
OUTX     EQU   R8                 SNDLOOP INDEX (SND3270)
WKC      EQU   R8                 OCCASIONAL WORK REGISTER
STKEL@   EQU   R9                 STACK ELEMENT ADDRESS
LOG@     EQU   R9                 RECORD PTR IN LOG BUFFER
BASE1@   EQU   R10                1ST CODE BASE REG
DBASE1@  EQU   R11                1ST DATA BASE REG
DBASE2@  EQU   R12                2ND DATA BASE REG
SA@      EQU   R13                SA PTR
RET@     EQU   R14                RETURN ADDRESS
WKD      EQU   R14                OCCASIONAL WORK REGISTER
SUBR@    EQU   R15                SUBROUTINE ENTRY ADDRESS
RTNCD    EQU   R15                RETURN CODE
*
* RCV3270 RETURN CODES (FOR INBOUND)
*
RCVCMDOK EQU   0                  COMMAND OK
RCVCMDRS EQU   4                  COMMAND OK AND RESPONSE MSG
RCVRMSG  EQU   8                  RESPONSE MSG
RCVNRMSG EQU   12                 NO RESPONSE MSG
RCVCLDST EQU   12                 CLSDST ISSUED FOR TERMINAL
RCVCLOSD EQU   16                 CLOSEDOWN ISSUED FOR NETOP
*
         TITLE 'N E T O P - MAINLINE'
*
***********************************************************************
*                                                                     *
* INITIAL HOUSEKEEPING - ENTRY CODE FOR OS/VS.                        *
* SAVE REGISTERS, ESTABLISH ADDRESSABILITY, SET UP SAVE AREA.         *
*                                                                     *
***********************************************************************
*
NETOP    CSECT ,                                                 85240
         B     NETOPIN-*(,R15)  BRANCH AROUND                    85240
         DC    AL1(15),C'NETOP: &SYSDATE'                        85240
A@DBASE2 DC    A(@DBASE2)                                        85240
A@MAINSA DC    A(MAINSA)                                         85240
NETOPIN  LR    BASE1@,R15                                        85240
         USING NETOP,BASE1@                                      85240
         L     SA@,A@MAINSA                                      85240
         USING SA,SA@             SAVE AREA DSECT ADDRESSING
         L     DBASE1@,A@DBASE2   SET DATA BASE 1
         USING @DBASE2,DBASE1@    DATA ADDRESSING (1)
         L     DBASE2@,@DBASE2    SET DATA BASE 2
         USING @DBASE2+4096,DBASE2@  DATA ADDRESSING (2)
         USING TICB,TICB@         TICB DSECT ADDRESSING
         USING IFGRPL,RPL@        RPL DSECT ADDRESSING
         LA    ACB@,ACBTERMS      SET BASE FOR ACB
         USING IFGACB,ACB@        ACB DSECT ADDRESSING
         L     PARM@,0(,PARM@)    PARM PTR
         SR    WKA,WKA
         ICM   WKA,3,0(PARM@)     PICK UP PARM LENGTH
         BZ    SETSTAE            IF ZERO, FORGET IT
         CLI   2(PARM@),C'A'      SPECIAL CHAR?
         BNL   NOSPEC             NO
         LA    PARM@,1(,PARM@)    YES - JUMP OVER
         BCTR  WKA,0               AND DECR LEN
         CLI   1(PARM@),C'$'      STARTUP COMMANDS?
         BNE   NOSPEC             NO
         OI    POFLAGS,POFOSCMD   YES - FLAG IT
NOSPEC   LA    NIB@,SIMNIB        SET POINTER TO NIB
         LA    WKB,8              IF > 8,
         CR    WKA,WKB             USE 8
         BNH   *+6
         LR    WKA,WKB
         BCTR  WKA,0              DECR FOR EX
         EX    WKA,MVPARM         MOVE PARM TO NIB
*
***********************************************************************
*        SET UP ESTAE ENVIRONMENT                                     *
***********************************************************************
*
SETSTAE  ESTAE ABEXIT,ASYNCH=YES,TERM=YES
*
***********************************************************************
*                                                                     *
* OPEN THE ACB FOR TERMINALS. OPENING THIS ACB FIRST WILL ALLOW THE   *
* PO TO SIMLOGON A MASTER BEFORE ACTIVATING THE PRIMARY PO INTERFACE. *
* NON MASTERS MAY LOGON  AND USE THE SECONDARY INTERFACE AT ANY TIME. *
*                                                                     *
***********************************************************************
*
OPENTCNT LA    R3,(2*60)/15       2 MIN TIME LIMIT FOR OPEN LOOP
         MVC   NTP06TYP,=C'TERMINALS'
OPENT    OPEN  ((ACB@))           OPEN THE ACB FOR TERMINALS
         LTR   R2,RTNCD           CHECK AND SAVE RETURN CODE
         BZ    LOGINIT            GO OPEN LOG IF SUCCESSFUL
*
* OPEN DID NOT SUCCEED: CHECK ERROR TYPE
*
         CLI   ACBERFLG,ACBONVRT  STORAGE SHORTAGE?
         BE    OPENT              YES - RETRY
         CLI   ACBERFLG,ACBOAPAA  OPENED ALREADY?
         BNE   LOGINIT            NO
        WTO    MF=(E,NTP04MSG)
         B     MAINRET            YES - WTO AND TERMINATE
*
***********************************************************************
*        INITIALIZE LOG                                               *
***********************************************************************
*
LOGINIT  TIME
         STM   R0,R1,STTIME      STORE TIME AND DATE, THEN
         $CALL PRLOG              ALLOCATE AND INITIALIZE LOG
*
OPENTCHK LTR   WKA,R2             CHECK OPEN TERMINAL ACB RETURN CODE
         BZ    RCVI               BRANCH IF SUCCESSFUL
         $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP06MSG    INFORM OPERATOR OF OPEN FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         CLI   ACBERFLG,ACBOAPNM  APPLID NOT YET ACTIVATED?
         BE    RETRYMSG           YES => WRITE RETRY MSG
         CLI   ACBERFLG,ACBOVINA  VTAM NOT YET ACTIVE?
         BNE   MAINRET            NO  => TERMINATE NETOP
RETRYMSG $CALL PUTLOG,NTP09MSG     WRITE RETRYING MSG,
         STIMER WAIT,BINTVL=OPNDLAY WAIT 15 SECS
         BCT   R3,OPENT              THEN RETRY FOR 2 MINUTES
         WTOR  MF=(E,NTP05MSG)    WRITE RETRY PROMPT
         WAIT  1,ECB=ECBMAIN      WAIT FOR REPLY
         OI    TBUF,C' '          FOLD
         CLI   TBUF,C'U'          CONTINUE?
         BNE   MAINRET            NO
         LA    R3,1               YES - SET LOOP COUNT
         ST    R3,OPNDLAY          AND NULLIFY STIMER DELAY
         B     OPENT              GO RETRY OPEN
         SPACE 3
*
***********************************************************************
* ISSUE RECEIVE MACRO TO START INPUT FROM TERMINALS. SPECIFY INBOUND  *
* AS THE EXIT TO BE SCHEDULED ON COMPLETION.                          *
***********************************************************************
*
RCVI     RECEIVE RPL=RCVRPL       GET 1ST INPUT MESSAGE
         LTR   RTNCD,RTNCD        OK?
         BZ    OPENSPO            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVI                THEN RETRY
         $AB   23                 ELSE ABEND - CANT GO ON IF CANT RCV..
*
***********************************************************************
*        OPEN THE SPO ACB                                             *
***********************************************************************
*
OPENSPO  L     ACB@,@ACBSPO       PICK UP SPO ACB PTR
         OPEN  ((ACB@))           OPEN THE SPO ACB
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    RCVCMDI            BRANCH IF SUCCESSFUL
*
* OPEN FAILED - INFORM OPERATOR AND ABEND.
*
         MVC   NTP06TYP(3),=C'SPO'
OPENFAIL $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP06MSG    INFORM OPERATOR OF OPEN FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         SR    RTNCD,RTNCD
         IC    RTNCD,ACBERFLG     SET ACB ERROR IN REASON CODE
         $AB   1                  TERMINATE NETOP
*
***********************************************************************
*   START INPUT FROM VTAM. ISSUE RCVCMD SPECIFYING THE EXIT ROUTINE   *
* OUTBOUND FOR ALL ACBSPO SENDCMDS.                                   *
***********************************************************************
*
RCVCMDI  RCVCMD RPL=SENDRPL       GET 1ST OUTGOING MESSAGE
         LTR   RTNCD,RTNCD        OK?
         BZ    CMANDO             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDI             THEN RETRY
*
***********************************************************************
*        ISSUE ANY STARTUP COMMANDS, IF REQUIRED / CHECK TSO TEST JOB *
***********************************************************************
*
CMANDO   TM    POFLAGS,POFOSCMD PRFX=# IN START CMD?
         BZ    TESTCHK        NO
         NI    POFLAGS,255-POFOSCMD YES - RESET FLAG AND
         LINK  EP=CMANDO,PARAM=NULL  ISSUE ANY STARTUP CMDS
*
TESTCHK  L     WKA,X'21C'     LOAD TCB PTR
         TM    20(WKA),X'04'  RUNNING UNDER TSO TEST?
         BZ    STARTLGN       NO
         OI    POSTATUS,POSTEST YES - FLAG TO AVOID 047 ABENDS
*
***********************************************************************
* START LOGONS SO THAT PO CAN OBTAIN TERMINALS, IN PARTICULAR, THE    *
* MASTER TERMINAL IT NEEDS TO BECOME A PPO. WAIT FOR THE MASTER       *
* TERMINAL TO BE LOGGED ON. WHEN IT IS, TELL OPERATOR WHAT TERMINAL   *
* IT IS.  IF PARM FLD PRESENT ASSUME IT IS MASTER TERMINAL NAME AND   *
* ISSUE A SIMLOGON TO DRIVE THE LOGON EXIT FOR THAT TERMINAL.         *
***********************************************************************
*
STARTLGN LA    RPL@,PRIMARPL
         SETLOGON OPTCD=START,    START LOGONS                         *
               ACB=ACBTERMS,                                           *
               RPL=(RPL@)
         LTR   RTNCD,RTNCD        OK?
         BZ    SETLGNOK           YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    STARTLGN            THEN RETRY
         $AB   10                  ELSE ABEND
*
*              TELL OPERATOR WE ARE WAITING FOR A MASTER TERMINAL.
*
SETLGNOK $CALL PUTLOG,NTP00MSG
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         CLI   NIBSYM,C' '        VALID TERMINAL NAME?
*CCSI*   BNH   NOPARM        NO; EITHER BLANK OR ZERO            85245
         BNH   WAITMAIN      NO; EITHER BLANK OR ZERO (NO WTO)   86356
*
*              AQUIRE MASTER SPECIFIED IN PARM VIA A LOGON EXIT.
*
SIMLOG   SIMLOGON RPL=(RPL@),     SIMULATE MASTER LOGON                *
               NIB=(NIB@),                                             *
               OPTCD=(SYN,CONALL,Q,RELRQ)
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITMAIN           YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SIMLOG              THEN RETRY
*             ELSE TELL OPERATOR PARM DRIVEN MASTER LOGON UNSUCCESSFUL
NOPARM   MVC   NTP11NOD,NIBSYM    MOVE NAME INTO MESSAGE
         $CALL PUTLOG,NTP11MSG
*             WAIT FOR MASTER TERMINAL TO BE LOGGED ON
WAITMAIN XC    ECBMAIN,ECBMAIN  CLEAR ECB
         XC    TIMEECB,TIMEECB  CLEAR STIMER ECB                 86356
         STIMER REAL,TIMEEXIT,BINTVL==A(29*60*100)  WAIT 29 MINUTES
         WAIT  ECBLIST=LISTECBS  WAIT FOR TIMER OR TERMINATION   86356
         TM    TIMEECB,X'40' TIMER EXPIRED ?                     86356
         BNZ   WAITED        YES; S522 AVERTED                   86356
         TTIMER CANCEL       ELSE CANCEL                         86356
WAITED   TM    ECBMAIN,X'40' TERMINATION OR SOME SUCH ?          86356
         BZ    WAITMAIN      NO; JUST TIMER                      86356
         CLI   ECBMAIN+3,0    CLOSE DOWN?
         BE    CLOSNTP
         CLI   ECBMAIN+3,1    OPEN PPO ACB?
         BE    OPENPPO
         CLI   ECBMAIN+3,2    CLOSE PPO ACB?
         BE    CLOSPPO
         $AB   0              IF YOU DROP TO HERE YOU HAVE PROBLEMS...
         DROP  NIB@
         SPACE 1                                                 86356
*        STIMER EXIT TO PREVENT SYSTEM 522 (30 MINUTE WAIT) ABENDS
         PUSH  USING                                             86356
         DROP  ,                                                 86356
         USING TIMEEXIT,R15                                      86356
TIMEEXIT POST  TIMEECB,0     POST TIMER ECB                      86356
         BR    R14           RETURN                              86356
         POP   USING                                             86356
LISTECBS DC    A(ECBMAIN),X'80',AL3(TIMEECB)  ECB WAIT LIST      86356
TIMEECB  DC    F'0'          STIMER ECB                          86356
*
***********************************************************************
*                                                                     *
* OPEN ACB FOR COMMUNICATION WITH VTAM NETWORK OPERATOR FACILITIES    *
*                                                                     *
***********************************************************************
*
OPENPPO  L     ACB@,@ACBPPO       SET BASE FOR ACB
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         OPEN  ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE, AND SAVE IT
         BZ    OPENPPOK           BRANCH IF SUCCESSFUL
*
* OPEN NOT SUCCESSFUL - CHECK FOR CONDITIONS
*
         CLI   ACBERFLG,ACBONVRT  STORAGE SHORTAGE?
         BE    OPENPPO            YES - RETRY
         CLI   ACBERFLG,ACBRNOOF  PPO OPENED ALREADY?
         BE    SPONLY             YES
         CLI   ACBERFLG,ACBOAPAA  THIS APPLID OPENED ALREADY?
         BNE   OPENPPFL           NO
SPONLY  WTO    MF=(E,NTP03MSG)    YES - ONLY SPO SERVICES AVAILABLE
         B     WAITMAIN           WAIT FOR NEXT POST
*
* OPEN FAILED - INFORM OPERATOR AND TERMINATE ABNORMALLY.
*
OPENPPFL MVC   NTP06TYP(3),=C'PPO'
         B     OPENFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
*              TELL OPERATOR NAME OF MASTER TERMINAL
*
OPENPPOK $CALL PUTLOG,NTP01MSG    OUTPUT NAME OF MASTER
*
***********************************************************************
*   ISSUE RCVCMD SPECIFYING THE EXIT ROUTINE OUTBOUND FOR ALL PPO MSGS*
***********************************************************************
*
         LA    RPL@,PRIMARPL     RPL PTR
         MVI   RPLACTIV,0        RESET IN CASE NOT 1ST TIME THRU HERE
*                                VTAM DOESNT CLEAR OUTSTANDING RPL WHEN
*                                ACBPPO IS CLOSED!!
         TM    POSTATUS,POSCLSDN  GOING OFF THE AIR ?            87194
         BNZ   WAITMAIN      YES; DON'T LOOP IN ERROR EXIT       87194
RCVCMDP  RCVCMD RPL=(RPL@),                                            *
               ACB=(ACB@),                                             *
               AREA=PRIMADA,                                           *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITMAIN           YES - WAIT FOR NEXT POST
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDP             THEN RETRY
         B     WAITMAIN           WAIT FOR NEXT POST
*
* INDICATE PO IS CLOSING DOWN
*
CLOSNTP  OI    POSTATUS,POSCLSDN  SET CLOSEDOWN FLAG
CLSIDLKP $CALL IDFIND,1       BUILD LIST ALL ACTIVE TICBS
         LTR   RTNCD,RTNCD    FIND ANY?
         BNZ   CLOSPPO        NO - FORGET CLOSEDOWN MSG TO TERMINALS
         LA    DA@,CLOSM      SET UP PHONEY ISTDPOHD BASE
         LA    MSGLEN,CLOSML  SET LENGTH
         LA    RPL@,DISCRPL   SET RPL PTR
         $CALL SND3270        SEND CLOSEDOWN MSG TO ALL TERMINALS
*
***********************************************************************
*                                                                     *
*       CLOSE SECONDARY PO ACB                                        *
* CLOSE PRIMARY PO ACB                                                *
*                                                                     *
***********************************************************************
*
CLOSPPO  L     ACB@,@ACBPPO       SET UP BASE FOR ACB
         TM    ACBOFLGS,ACBOPEN   IS IT OPEN?
         BZ    CLOSPPND           IF NOT FORGET CLOSE
         CLOSE ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    CLOSPPOK           BRANCH IF SUCCESSFUL
*
* CLOSE NOT SUCCESSFUL - CHECK FOR RETRIABLE ERROR.
*
         TM    POFLAGS,POFCFAIL   FIRST TIME?
         BO    CLOSPPFL           NO
         OI    POFLAGS,POFCFAIL   YES - INDICATE FIRST CLOSE FAILURE
         CLI   ACBERFLG,ACBRNOCF  MESSAGES LEFT?
         BE    CLOSPPO            YES - RETRY
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    CLOSPPOK           YES - IGNORE
*
* CLOSE FAILED - INFORM OPERATOR AND ABEND
*
CLOSPPFL MVC   NTP07TYP(3),=C'PPO'
CLOSFAIL $CALL SHOWCDS            CONSTRUCT ERROR MESSAGE NTP10
         $CALL PUTLOG,NTP07MSG    INFORM OPERATOR OF CLOSE FAILURE
         $CALL PUTLOG,NTP10MSG    WRITE OUT ACB FEEDBACK INFO
         SR    RTNCD,RTNCD
         IC    RTNCD,ACBERFLG     SET ACB ERROR IN REASON CODE
         $AB   2                  TERMINATE NETOP
         SPACE 3
CLOSPPOK NI    POFLAGS,255-POFCFAIL RESET FIRST CLOSE FAILURE FLAG
*
* TELL OPERATOR THAT FULL CONTROL OF VTAM IS AT THE SYSTEM CONSOLE.
*
         $CALL PUTLOG,NTP02MSG    SEND PPO INACTIVE MESSAGE
CLOSPPND CLI   ECBMAIN+3,0    CLOSE DOWN?
         BNE   WAITMAIN       NO - GO WAIT FOR NEXT POST
*
***********************************************************************
*                                                                     *
*       CLOSE SECONDARY PO ACB                                        *
*                                                                     *
***********************************************************************
*
CLOSSPO  L     ACB@,@ACBSPO       SET UP BASE FOR ACB
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         TM    ACBOFLGS,ACBOPEN   IS IT OPEN?                    86355
         BZ    CLOSSPFL           IF NOT, FORGET CLOSE           86355
         CLOSE ((ACB@))
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    CLOSSPOK           BRANCH IF SUCCESSFUL
*
* CLOSE NOT SUCCESSFUL - CHECK FOR RETRIABLE ERROR.
*
         TM    POFLAGS,POFCFAIL   IF THIS IS FIRST TIME
         BO    CLOSSPFL           THEN
         OI    POFLAGS,POFCFAIL   INDICATE FIRST CLOSE FAILURE
         CLI   ACBERFLG,ACBRNOCF  MESSAGES LEFT?
         BE    CLOSSPO            YES - RETRY
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    CLOSSPOK           YES - IGNORE
*
* CLOSE FAILED - INFORM OPERATOR AND ABEND
*
CLOSSPFL MVC   NTP07TYP(3),=C'SPO'
*        B     CLOSFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
***********************************************************************
*                                                                     *
* CLOSE ACB FOR TERMINALS TO SEVER THE CONNECTION WITH VTAM.          *
*                                                                     *
***********************************************************************
*
CLOSSPOK DS    0H
         LA    ACB@,ACBTERMS      SET ACB ADDRESS
         SR    RTNCD,RTNCD        CLEAR RETURN CODE REGISTER
         CLOSE ((ACB@))           CLOSE ACB FOR TERMINALS
         LTR   WKA,RTNCD          CHECK RETURN CODE
         BZ    MAINRET            BRANCH IF SUCCESSFUL
         CLI   ACBERFLG,ACBTVTCL  CLOSE DURING ABTERM?
         BE    MAINRET            YES - IGNORE
* CLOSE FAILED - INFORM OPERATOR AND TERMINATE PO.
         MVC   NTP07TYP,=C'TERMINALS'
         B     CLOSFAIL           WRITE ACB FEEDBACK INFO AND ABEND
*
***********************************************************************
* EXIT CODE                                                           *
***********************************************************************
*
MAINRET  L     SA@,BWDPTR         GET @ SYSTEM SAVE AREA
         RETURN (14,12)           RETURN TO CALLER
*
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
MVPARM   OC    NIBSYM(*-*),2(PARM@) FOLD TERM NAME FROM PARM INTO NIB
         DROP  NIB@
*
*        ESTAE EXIT
*
ABEXIT   $XINIT SA=ENDSA      SAVE, THEN CHAIN NEW SAVE AREA
         LR    DA@,PARM@      SAVE SDWA PTR
         USING SDWA,DA@       TELL ASMBLR
         OI    POSTATUS,POSABEND FLAG ESTAE ENTERED
         SR    R3,R3          DEFAULT NO RETRY
         L     WKA,SDWACMPF   PICK UP CMP CODE
         LA    WKA,0(,WKA)    CLEAR HI-ORDER BYTE
         SRDL  WKA,12         SPLIT SYS FROM USER
         SRL   WKB,20
         LTR   WKA,WKA        SYS CMP CODE?
         BNZ   SYSCMP         YES
         LR    WKA,WKB        NO - MUST BE USER CMP
         MVI   TBUF,C'U'      CMP ID
         B     LOGABM         NO
SYSCMP   MVI   TBUF,C'S'      CMP ID
         CH    WKA,=AL2(X'D37') VTAMLOGO DATASET FULL?
         BNE   ISZCAN         NO
         NI    SDWACMPF,255-SDWAREQ  YES - SET NO DUMP
         CLOSE (VTAMLOGO)      CLOSE, THEN RE-INITIALIZE -
         OPEN  (VTAMLOGI,OUTPUT) RE-OPEN VTAMLOG DISP=OLD
         CLOSE (VTAMLOGI)      CLOSE TO WRITE EOF
         B     LOGABM         ALLOW ABEND TO CONTINUE
ISZCAN   CH    WKA,=AL2(X'0A7') Z NET,CANCEL?
         BNE   ISCANCEL       NO
         NI    SDWACMPF,255-SDWAREQ  SET NO DUMP
         B     LOGABM         ALLOW ABEND TO CONTINUE
ISCANCEL CH    WKA,=AL2(X'222') OPER CANCEL?
         BNE   LOGABM         NO
         TM    SDWACMPF,SDWAREQ  DUMP REQUESTED?
         BO    LOGABM          YES - PROBABLY LEGIT
         WTO   MF=(E,NTP12MSG) NO - SEND REPROOF TO OPERATOR
LOGABM   $CALL CVHX           CONVERT BYTE 2
         MVC   ABMSGAC+2,HEX     AND MOVE IN
         SRL   WKA,8          SHIFT BYTE 1 OVER
         $CALL CVHX           CONVERT BYTE 1
         MVC   HEX(1),TBUF       SET CMP ID
         MVC   ABMSGAC,HEX       AND MOVE IN
         L     WKA,SDWAGR15   PICK UP REASON CODE (R15)
         $CALL CVHX           CONVERT,
         MVC   ABMSGRC,HEX     AND MOVE IN
         LA    TICB@,NETPTICB      SET ORIGIN AS NETOP
         TM    SYSPRINT+48,X'10' SYSPRINT OPEN?
         BZ    ABRET             NO
         PUT   SYSPRINT,ABMSG     OUTPUT TO SYSPRINT (DONT USE PUTLOG)
         CLOSE (SYSPRINT)         CLOSE TO SPINOFF
ABRET    MVI   SDWARCDE,0         SET RETURN CODE
         L     SA@,BWDPTR         RELOAD CALLERS SA
*
         RETURN (14,12)           ALLOW ABEND TO CONTINUE
*
*
*              SYNAD RTN FOR LOG DATASET
*
LOGSYNAD $SINIT
         SYNADAF ACSMETH=QSAM
         MVC   44(4,PARM@),=X'00548000'    WTO PREFIX AND
         MVC   128(4,PARM@),=X'00004000'   SUFFIX FOR ROUTCDE=2
         LA    PARM@,44(,PARM@)            JUMP OVER GARBAGE AND BLANKS
        WTO    MF=(E,(1))     WTO/TPUT
         SYNADRLS
         NOP   LOGSYNAB       ABEND AFTER 2ND SYNAD ENTRY
         MVI   *-3,X'F0'       BY CHANGING NOP TO B
         $SRET                RETURN TO NSI 1ST TIME ONLY
LOGSYNAB $AB   68
         TITLE 'N E T O P - INBOUND EXIT'
         SPACE
         USING ISTDPOHD,DA@       ISTDPOHD DSECT ADDRESSING
         SPACE
***********************************************************************
*                                                                     *
* NAME: INBOUND EXIT                                                  *
*                                                                     *
* FUNCTION: MOVE OPERATOR COMMANDS FROM THE REMOTE TERMINALS TO VTAM. *
*        IT IS THE RPL EXIT SPECIFIED IN THE RECEIVE MACRO ISSUED     *
*        BY THE MAINLINE, AND REISSUED HERE.                          *
*                                                                     *
* DESCRIPTION: CHECKS RCVRPL. DETERMINES HOW RECEIVE COMPLETED.       *
*        EXTRACTS INFORMATION ABOUT INCOMING MESSAGE FROM RPL. CALLS  *
*        RCV3270 TO PROCESS INPUT DATA. IF THE MESSAGE IS A COMMAND   *
*        FOR VTAM, ISSUES SENDCMD. REISSUES RECEIVE MACRO TO GET THE  *
*        NEXT MESSAGE.                                                *
*                                                                     *
* ENTRY POINT: INBOUND                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ RCVRPL                                               *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   @ INBOUND EXIT                                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ RCVRPL                             RPL@              *
*              @ TICB FOR THE TERMINAL BEING READ.  TICB@             *
*              @ DATA AREA WITH THE INPUT DATA      DA@               *
*              LENGTH OF MESSAGE                    MSGLEN            *
*              WORK REGISTERS                       WKA,WKB           *
*              SUBROUTINE RETURN ADDRESS            RET@              *
*              BASES                           BASE1@,DBASE1@,DBASE2@ *
*              VTAM CALLS                           SUBR@,RTNCD,RET@  *
*                                                                     *
* EXIT, NORMAL: BR 14                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS:RCV3270 TO PROCESS INPUT FROM 3277/3278.                      *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        VTAM RPL EXIT                                                *
*                                                                     *
***********************************************************************
*
INBOUND  $XINIT
         LR    RPL@,PARM@         PUT RPL ADDRESS IN RPL REGISTER
*
* ISSUE CHECK TO DETERMINE HOW RECEIVE COMPLETED
*
* ACTION CODES EXPECTED - 0 SUCCESSFUL COMPLETION
*                         8       RETRY
*                         12      TERMINAL NOT AVAILABLE
*
         CHECK RPL=(RPL@)
         LTR   RTNCD,RTNCD        CHECK COMPLETION
         BNZ   INRERCV            IF NOT SUCCESSFUL, REISSUE RCV
*
* RECEIVE COMPLETED SUCCESSFULLY. OBTAIN THE INFORMATION NECESSARY
* TO CONTINUE PROCESSING FROM THE RPL.
*
         L     TICB@,RPLUSFLD     GET @ TICB FROM USER FIELD
         OI    RPLRH3,RPLBB+RPLEB  SET BEGIN AND END BRACKET     87109
         TM    RPLCNTDC,RPLSIGNL  ATTENTION REQUESTED ?          87109
         BNZ   *+12          YES; BRACKET NOT STARTED            87109
         OI    TIFLAGS3,TIF3READ  SET BRACKET STARTED            87107
         NI    RPLRH3,255-RPLBB  NO BEGIN BRACKET NEEDED         87107
         L     DA@,RPLAREA        GET @ MSG TEXT FIELD
         SH    DA@,KPOHLEN        BACK UP FOR ISTDPOHD PREFIX FIELD
         L     MSGLEN,RPLRLEN     DETERMINE LENGTH OF MESSAGE:
         L     WKA,RPLBUFL        COMPARE LENGTH OF INPUT,
         CR    MSGLEN,WKA         AND LENGTH OF DATA AREA.
         BNH   INLENOK
         LR    MSGLEN,WKA         USE THE SMALLER OF THE TWO
*
* CALL DEVICE DEPENDENT ROUTINE TO PROCESS INPUT.
*
INLENOK  $CALL RCV3270            CALL 3270 ROUTINE
         LR    WKC,RTNCD          SAVE RTNCD
         B     *+4(RTNCD)         GO TO BRANCH TABLE
         B     CMDOK              RTNCD=0   GOOD CMD
         B     ABNORSND           RTNCD=4   GOOD CMD - WKA,WKB PRESET
*                                  AS MSG PTR AND MSG LENGTH FOR SEND
         B     ABNORSND           RTNCD=8   ABNORMAL - WKA,WKB PRESET
*                                  AS MSG PTR AND MSG LENGTH FOR SEND
         B     INRERCV            RTNCD=12  CLSDST ISSUED AFTER PF3 OR
*                                  SUPPRESS FURTHER I/O
         B     INBRET             RTNCD=16  CLOSDOWN POSTED
*
ABNORSND SEND  RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               AREA=(WKA),                                             *
               RECLEN=(WKB),                                           *
               OPTCD=SYN,POST=SCHED,RESPOND=(EX,FME,NRRN)
         LTR   RTNCD,RTNCD        OK?
         BZ    ABNOROK            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    ABNORSND            THEN RETRY
ABNOROK  LA    WKA,RCVCMDRS       GOOD CMD?
         NI    TIFLAGS3,255-TIF3READ  OUT OF BRACKET             87107
         CR    WKC,WKA
         BNE   INRERCV            NO - GO RE-ISSUE RCV FOR NEXT CMD
*
* PREPARE PO HEADER.
*
CMDOK    MVI   POHRSVD,0          ZERO HI BYTE
         MVI   POHSTAT,POHRREQ+POHGEN     INDICATE REPLY REQUESTED,
*                                 AND ID GENERATED BY PO.
         SR    WKA,WKA            CLEAR A WORK REGISTER
         IC    WKA,TIMSGSEQ       OBTAIN MESSAGE SEQUENCE NUMBER
         LA    WKA,1(,WKA)        INCREMENT BY ONE
         STC   WKA,TIMSGSEQ       UPDATE TICB
         MVC   POHID,TIMSGID      COPY ENTIRE ID FIELD TO PO HDR
*
* ISSUE SENDCMD(S) TO TRANSFER COMMAND(S) TO VTAM.
*
         AH    MSGLEN,KPOHLEN     ADD LENGTH OF PO HEADER TO
         LA    WKA,DALEN          ENSURE
         CR    MSGLEN,WKA          VALID
         BNH   RANGCHK              LENGTH
         LR    MSGLEN,WKA            FOR SENDCMD
*
RANGCHK  TM    POFLAGS,POFRANG    RANGE FORMAT CMD?
         BZ    SENDCACB           NO
*        AT THIS TIME RANGCHAR CONTAINS THE ADDR OF THE CHAR, HENCE
*        THE CALL TO ATOX SPECIFYING A LOAD INSTEAD OF A LOAD ADDRESS
         $CALL ATOX,,,RANGCHAR    CONVERT RANG CHAR TO HEX IN R15
         LTR   RTNCD,RTNCD        IS IT GOOD?
         BNM   RANGCHOK           YES
         LA    WKA,INVALK         NO - SET UP FOR
         LA    WKB,INVALKL         INVALID MSG
         B     ABNORSND            AND SEND IT
RANGCHOK STH   R15,RANGHEX        STORE FOR INCREMENTING LATER
SENDCACB TM    TISTATUS,TISREPLY  IS THIS REPLY COMMAND?
         BZ    SENDCSPO           NO
         NI    TISTATUS,255-TISREPLY  YES - RESET FLAG
         L     ACB@,@ACBPPO       PICK UP PPO ACB PTR
         B     SENDCMD            GO SENDCMD USING ORIGINATING ACB
SENDCSPO L     ACB@,@ACBSPO       PICK UP SPO ACB PTR
SENDCMD  SENDCMD RPL=(RPL@),  SEND COMMAND TO VTAM                     *
               ACB=(ACB@),                                             *
               AREA=(DA@),        TOP OF ISTDPOHD                      *
               RECLEN=(MSGLEN),                                        *
               OPTCD=SYN,POST=RESP
         LTR   RTNCD,RTNCD        OK?
         BZ    SENDCMOK          YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SENDCMD            THEN RETRY
*
SENDCMOK TM    POFLAGS,POFDSP    DISPLAY CMD?
         BZ    OUTRNGCK          NO
         LH    WKA,TIDSPCT       YES - SENDCMD COMPLETE SO
         AH    WKA,K1             INCREMENT OUTSTANDING
         STH   WKA,TIDSPCT         DISPLAY COUNT
OUTRNGCK TM    POFLAGS,POFRANG    RANGE FORMAT CMD?
         BZ    INRERCV            NO
         LH    R15,RANGHEX        YES - PICK UP RANGE CHAR IN HEX
         CH    R15,RANGEND        END OF RANGE?
         BNE   RANGOK             NO
         NI    POFLAGS,255-POFRANG YES - RESET RANGE FORMAT
         B     INRERCV             AND QUIT SENDCMD LOOP
RANGOK   LA    R15,1(,R15)         AND INCREMENT,
         N     R15,=A(15)          WRAPPING FROM X'0F' TO X'00'
         STH   R15,RANGHEX        SAVE INCREMENTED CHAR FOR NEXT PASS
         L     WKD,RANGCHAR       YES - PICK UP PTR TO RANGE CHAR
         STC   R15,0(,WKD)         AND STORE IT IN COMMAND
         TR    0(1,WKD),TRTAB     TRANSLATE TO ALPHA
         B     SENDCMD
*
* ISSUE RECEIVE MACRO TO GET THE NEXT MESSAGE.
*
INRERCV  TM    POFLAGS,POFINTCM   INTERNALLY GENERATED CMD?
         BZ    RCVGO              NO
         NI    POFLAGS,255-POFINTCM  YES - RESET FLAG
         B     INBRET                  AND RETURN
RCVGO    LA    DA@,RCVDA
         NI    POFLAGS,255-POFDSP  RESET PO DISPLAY FLAG
RCVR     RECEIVE RPL=(RPL@),                                           *
               ACB=ACBTERMS,                                           *
               AREA=(DA@),                                             *
               AREALEN=DATXLEN,                                        *
               EXIT=INBOUND,                                           *
               OPTCD=(ANY,ASY,TRUNC),                                  *
               RTYPE=(DFSYN,DFASY)  RECEIVE INCL. ATTN           87109
         LTR   RTNCD,RTNCD        OK?
         BZ    INBRET             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVR                THEN RETRY
         $AB   23                 ELSE ABEND - CANT GO ON IF CANT RCV..
*
INBRET   $XRET                    RETURN
         TITLE 'N E T O P - OUTBOUND EXIT'
***********************************************************************
*                                                                     *
* NAME: OUTBOUND EXIT                                                 *
*                                                                     *
* FUNCTION: MOVE MESSAGE FROM VTAM TO THE APPROPRIATE                 *
*        TERMINALS. IT IS THE RPL EXIT SPECIFIED FOR THE RCVCMD       *
*        MACROS.                                                      *
*                                                                     *
* DESCRIPTION: CHECKS RPL. DETERMINES HOW RCVCMD COMPLETED.           *
*        EXTRACTS INFORMATION ABOUT THE MESSAGE FROM THE RPL. CALLS   *
*        IDFIND TO DETERMINE FROM THE PO HEADER, WHAT TERMINAL        *
*        THE MESSAGE IS FOR. IF THE TERMINAL IS AVAILABLE, CALLS      *
*        SND3270 TO PROCESS MESSAGE. ISSUES SEND TO TRANSMIT THE      *
*        MESSAGE. REISSUES RCVCMD TO OBTAIN THE NEXT MESSAGE FROM     *
*        VTAM.                                                        *
*                                                                     *
* ENTRY POINT: OUTBOUND                                               *
*                                                                     *
* REGISTER AT ENTRY:                                                  *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ SENDRPL                                              *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   @ OUTBOUND EXIT                                        *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ SENDRPL          RPL@                                *
*              @ TICB             TICB@                               *
*              @ ISTDPOHD         DA@                                 *
*              LENGTH OF MESSAGE  MSGLEN                              *
*              WORK REGISTERS     WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: IDFIND                                                       *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        VTAM RPL EXIT                                                *
*                                                                     *
***********************************************************************
*
OUTBOUND $XINIT
         LR    RPL@,PARM@         SET UP POINTER TO RPL
         MVC   @SAVACB,RPLDACB    SAVE ACB @ FOR RE-ISSUE OF RCVCMD
*
* ISSUE CHECK TO DETERMINE HOW RCVCMD COMPLETED.
*
* ACTION CODES EXPECTED - 0 SUCCESSFUL COMPLETION
*                         >0 REISSUE RCVCMD
*
         CHECK RPL=(RPL@)         IF RTNCD = SUCCESS
         LTR   RTNCD,RTNCD        CHECK COMPLETION
         BNZ   RCVCMDO            THEN
*
* RCVCMD COMPLETED SUCCESSFULLY. OBTAIN THE INFORMATION NECESSARY
* TO CONTINUE PROCESSING FROM THE RPL.
*
         L     DA@,RPLAREA        GET @ ISTDPOHD
         L     MSGLEN,RPLRLEN     DETERMINE LENGTH OF MESSAGE:
         L     WKA,RPLBUFL        COMPARE LENGTH OF INPUT,
         CR    MSGLEN,WKA         AND LENGTH OF DATA AREA.
         BNH   OUTLENOK           USE THE SMALLER OF THE TWO.
         LR    MSGLEN,WKA
OUTLENOK SH    MSGLEN,KPOHLEN     SUBTRACT LENGTH OF PO HEADER
*
* CALL IDFIND TO IDENTIFY THE DESTINATION TERMINAL FROM PO HEADER.
*
OUTID    $CALL IDFIND,0
         LTR   RTNCD,RTNCD        IF RETURN CODE = 0
         BNZ   RCVCMDO            THEN...
*
* SEE IF THERE ARE DATA TO SEND TO TERMINALS.
*
         TM    POHSTAT,POHDATA+POHLBL+POHCNTRL      DATA?
         BNZ   RCVDATA            YES
         TM    POHSTAT,POHEND     END?
         BZ    RCVDATA            NO
         LH    WKA,TIDSPCT        YES - DISPLAY IS COMPLETE
         SH    WKA,K1             DECREMENT OUTSTANDING DISPLAY COUNT
         BM    RCVRSTDC      IF -VE SOMETHING WENT WRONG - DONT UPDATE
         STH   WKA,TIDSPCT          ELSE STORE IT
         BP    RCVCMDO            IF ZERO,
RCVRSTDC NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
         B     RCVCMDO            RETURN AFTER RCVCMD RE-ISSUED
*
RCVDATA  BCTR  MSGLEN,0           REDUCE FOR EX
         MVC   SENDTIME,BLANX     BLANK OUT TIME FIELD
*
* CALL RCVVTAM TO SCAN FOR MESSAGES REQUIRING NETOP ACTION
*
         $CALL RCVVTAM
         LTR   RTNCD,RTNCD        OUTPUT ACCEPABLE?
         BNZ   RCVCMDO            NO - SUPPRESS IT
         TM    POHSTAT,POHGEN     SOLICITED REPLY?
         BZ    LOGIT              NO - GO LOG IT
*
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BE    LOGIT              YES - LOG IT
         TM    TIFLAGS,TIFDSP     REPLY TO DISPLAY CMD?
         BZ    LOGIT              NO - LOG IT
         TM    TIFLAGS,TIFDSP11   PF11 OVER-RIDE?
         BO    LOGIT              YES - LOG IT
         TM    TIFLAGS2,TIF2LOGD  PF2/LOGD OVER-RIDE?
         BZ    CALSEND            NO - DONT LOG IT
*
* PREPARE AND WRITE HARD COPY LOG RECORD.
*
LOGIT    $CALL PUTLOG,DATX,(MSGLEN) OUTPUT REC
*
* CALL SND3270 TO SEND MSG TO TERMINAL(S).
*
CALSEND  $CALL SND3270            CALL SND3270
*
*
* ISSUE RCVCMD TO GET THE NEXT MESSAGE FROM VTAM.
*
RCVCMDO  L     ACB@,@SAVACB       PICK UP ACB PTR
         TM    POSTATUS,POSCLSDN  GOING OFF THE AIR ?            87194
         BNZ   OUTRET        YES; DON'T LOOP IN ERROR EXIT       87194
RCVCMDOR RCVCMD RPL=(RPL@),       GET NEXT OUTGOING MESSAGE            *
               ACB=(ACB@),                                             *
               AREA=(DA@),                                             *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
         LTR   RTNCD,RTNCD        OK?
         BZ    OUTICHK            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RCVCMDOR            THEN RETRY
*
* RETURN.
*
OUTICHK  TM    POFLAGS,POFINTCM   DID RCVVTAM GENERATE A CMD?
         BZ    OUTRET             NO
         LA    DA@,RCVDA          YES - USE OTHER DATA AREA
         LH    MSGLEN,INTBUFL     LOAD LENGTH
         LR    WKA,MSGLEN         COPY IT
         BCTR  WKA,0               LESS 1 FOR EX
         EX    WKA,OUTINTMV       MOVE INTCMD INTO DATA AREA
         LA    TICB@,NETPTICB     USE NETOP'S TICB
         L     WKA,RPLARG         PICK UP CID
         LA    RPL@,DISCRPL       USE SPARE RPL (RCVRPL RE-USED)
         ST    WKA,RPLARG          WITH CURRENT CID
         $XCTL INLENOK,INBOUND    XCTL TO INBOUND EXIT TO PROCESS CMD
OUTRET   $XRET                    RETURN
*
OUTINTMV MVC   DATX(*-*),INTBUF   MOVE INTCMD INTO ISTDPOHD
         TITLE 'N E T O P - LOGON EXIT'
***********************************************************************
*                                                                     *
* NAME: LOGON EXIT                                                    *
*                                                                     *
* FUNCTION: TO ESTABLISH CONNECTIONS WITH TERMINALS, INCLUDING THE    *
*        MASTER TERMINAL.                                             *
*                                                                     *
* DESCRIPTION: DETERMINES IF THE PO IS IN A POSITION TO ACCEPT LOGONS *
*        IF NOT, REJECTS THE TERMINAL. OTHERWISE, ALLOCATES A TICB TO *
*        THE TERMINAL, FILLS IN THE NIB, AND ACCEPTS THE TERMINAL. IF *
*        THE NEWLY ACOUIRED TERMINAL IS IN THE MASTER CANDIDATE LIST, *
*        IT IS MADE THE MASTER IF NONE EXISTED. WHEN NO MASTER IS     *
*        LOGGED ON ONLY THE SPO ACB IS OPEN.  THE MAINLINE IS POSTED  *
*        TO OPEN THE PPO ACB WHICH IS USED SOLELY TO RECEIVE UNSOL-   *
*        ICITED MESSAGES. ALL OTHER VTAM-PO MSGS FLOW VIA ACBSPO.     *
*              IF OPNDST FAILS IN ATTEMPTING TO ACCEPT THE TERMINAL,  *
*        THE TICB OBTAINED FOR IT IS DEALLOCATED.                     *
*                                                                     *
* ENTRY POINT: LOGON                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) @ TERMINAL NAME                                    *
*              (3) RESERVED                                           *
*              (4) LENGTH OF LOGON MESSAGE                            *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF LOGON EXIT                                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGS          WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: INT3270 TO TRANSMIT 3270 ORDERS THAT SET UP INITIAL SCREEN   *
*        AND START THE BRACKET.                                       *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
LOGON    $XINIT
         USING LOGONPRM,PARM@     LOGON PARM DSECT ADDRESSING
         LA    NIB@,LOGONNIB      SET POINTER TO NIB
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         LA    ACB@,ACBTERMS      SET POINTER TO ACB
         LA    RPL@,LOGONRPL      SET POINTER TO RPL
         L     WKA,TNAME@         SET POINTER TO TERMINAL NAME
         MVC   NIBSYM,0(WKA)      MOVE TERMINAL NAME INTO NIB
         TM    POSTATUS,POSCLSDN  IF PO NOT CLOSING DOWN,
         BZ    LGNTCHK             GO ALLOCATE TICB
*
LGNCLSDN CLSDST RPL=(RPL@),       REJECT THE TERMINAL                  *
               ACB=(ACB@),                                             *
               NIB=(NIB@)
         LTR   RTNCD,RTNCD        OK?
         BZ    LGNRET             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    LGNCLSDN            THEN RETRY
         B     LGNRET             RETURN
*
* ALLOCATE A TICB TO THE NEW TERMINAL.
*
LGNTCHK  CLI   TICBFCT+1,0        ANY FREE TICB'S ?
         BNE   LGNALOC            YES - GO ALLOCATE ONE
         LA    TICB@,VTAMTICB     ADDRESS VTAMTICB
         B     LGNOTICB           GO SET UP FOR REJECT
LGNALOC  LA    WKA,TICBCT         FIND FREE TICB
         LA    TICB@,TICBS+TICBLEN  START AT 1ST AFTER NETPTICB
LGNLOOP  TM    TISTATUS,TISALLOC  IS IT FREE?
         BZ    LGNFOUND           IF YES, GO ALLOCATE IT
         LA    TICB@,TICBLEN(,TICB@)   OTHERWISE, NEXT TICB...
         BCT   WKA,LGNLOOP        ANY MORE TICB'S TO EXAMINE?
LGNOTICB LA    WKA,NOTICBM        NO - TICBFCT ERRONEOUS,
         LA    WKB,NOTICBML        SET UP FOR NO MORE TICB MSG
         OI    TISTATUS,TISNOMOR  FLAG REJECT REASON IN DUMMY TICB
         ST    TICB@,NIBUSER      PUT @ TICB IN NIB USER FIELD
         B     LGNACCEP           GO ACCEPT AND THEN REJECT TERMINAL
LGNFOUND OI    TISTATUS,TISALLOC  ALLOCATE THE TICB
         LH    WKA,TICBFCT        DECREMENT
         BCTR  WKA,0                FREE
         STH   WKA,TICBFCT            COUNT
         ST    TICB@,NIBUSER      PUT @ TICB IN NIB USER FIELD
         C     TICB@,TICBLACT     HIGHEST TICB @?
         BNH   LGNACCEP           NO
         ST    TICB@,TICBLACT     YES - SAVE HI-WATER MARK
*
* ISSUE OPNDST TO ACCEPT THE TERMINAL.
*
LGNACCEP OPNDST RPL=(RPL@),       ACCEPT THE TERMINAL                  *
               ACB=(ACB@),                                             *
               NIB=(NIB@),                                             *
               OPTCD=NQ
         LTR   RTNCD,RTNCD        IF RTNCD = UNSUCCESSFUL
         BNZ   LGNRET              THEN FORGET IT
         TM    TISTATUS,TISNOMOR  REJECT REASON FLAGGED?
         BO    REJSEND            YES - GO REJECT
*
*        IF TERMINAL ACCEPTED, SET UP ITS TICB.
*
         MVC   TINAME,NIBSYM      PUT TERMINAL NAME INTO TICB
         LA    WKA,TINAME+1        SEARCH FOR BLANK
         LA    WKC,7
LGNBLOOP CLI   0(WKA),C' '
         BE    LGNBLANK
         LA    WKA,1(,WKA)
         BCT   WKC,LGNBLOOP
LGNBLANK LA    WKB,8              SUBTRACT FROM
         SR    WKB,WKC            8 TO GET NAME LEN
         STH   WKB,TINAMLEN       AND STORE IT
         MVC   TICID,NIBCID       PUT TERMINAL CID INTO TICB
         SR    WKA,WKA            ASSIGN NEXT ID TO THIS TERMINAL
         IC    WKA,POID           INCREMENT LAST ID ASSIGNED
         LA    WKA,1(,WKA)
         STC   WKA,POID
         STC   WKA,TID            MOVE INTO TICB
         ZAP   TISTKCT,KP0        ZERO STACK ELEMENT COUNT
         MVI   TIMSGSEQ,0         ZERO MESSAGE NUMBER
         MVI   TIFLAGS2,TIF2LOGD  SET 'D NET' LOGGING AS DEFAULT
*
* PERFORM DEVICE DEPENDENT INITIALIZATION, THEN MARK TERMINAL ACTIVE.
*
         OI    RPLRH3,RPLBB+RPLEB  SET FOR BRACKET CONTENTION    87107
         $CALL INT3270,0          INITIALISE SCREEN
         LTR   RTNCD,RTNCD        RETURN CODE OK?
         BNZ   LGNCLS             NO - DUMP IT
         OI    TISTATUS,TISACT    YES - MARK ACTIVE
*
* MARK TERMINAL A MASTER CANDIDATE IF IT IS LISTED IN MATABLE
*
         L     WKA,@MATABLE
         SH    WKA,K2             DECR. BEFORE LOOP ENTRY
         SR    WKB,WKB            INITIAL INCREMENT ZERO
MALOOP   LA    WKA,2(WKB,WKA)     GET NEXT ENTRY
         ICM   WKB,1,0(WKA)       GET ENTRY LENGTH
         BZ    LGNLOG             END OF TABLE IF ZERO
         BCTR  WKB,0              - 1 FOR EX
         EX    WKB,MACLC          SAME TERMINAL NAME?
         BNE   MALOOP             NO - GO TO NEXT ENTRY
*
         OI    TISTATUS,TISMCAND  YES - SET CANDIDATE BIT
         LH    WKA,TICBMCCT       INCREMENT
         AH    WKA,K1               MASTER CANDIDATE
         STH   WKA,TICBMCCT           COUNT
         TM    POSTATUS,POSHVMA   MASTER LOGGED ON YET?
         BO    LGNLOG             YES
         OI    TISTATUS,TISMA     NO - SET MASTER BIT
         AIF   (NOT &MAROLL).NMAROLL
MAROLL   OI    TIFLAGS2,TIF2ROLL  SET ROLL FLAG FOR INITIAL MASTER
.NMAROLL ANOP
         ST    TICB@,@MATICB      SAVE MASTER TICB @
         OI    POSTATUS,POSHVMA   INDICATE MASTER HAS LOGGED ON
         MVC   NTP1NODE,TINAME    MOVE NAME INTO MESSAGE.
         POST  ECBMAIN,1          POST MAINLINE TO OPEN PPO ACB
LGNLOG   $CALL PUTLOG,NOTICBLG,*-1  OUTPUT REC
         B     LGNRET
*
REJSEND  SEND  RPL=(RPL@),        SEND REJECT MSG AND CLSDST           *
               AREA=(WKA),                                             *
               RECLEN=(WKB)
         LTR   RTNCD,RTNCD        OK?
         BZ    WAITREJ            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    REJSEND             THEN RETRY
WAITREJ  STIMER WAIT,BINTVL=CLSDLAY  ALLOW 1/2 SEC TO READ REJECT MSG
LGNCLS   LA    WKA,L'OFFMSG-1     EX LENGTH FOR MOVE
         LA    PARM@,OFFMSG       MSG PTR
         TM    TISTATUS,TISNOMOR  NO MORE TICBS?
         BZ    LGNCLPT            NO
         LA    WKA,L'NOTICBRJ-1   EX LENGTH FOR MOVE
         LA    PARM@,NOTICBRJ     MSG PTR
LGNCLPT  $CALL PUTLOG,(PARM@),(WKA) OUTPUT REC
         $CALL CLSDST         CLSDST TERMINAL AND FREE TICB
*
LGNRET   $XRET                    RETURN
*
MACLC    CLC   1(*-*,WKA),TINAME  COMPARE TERMINAL NAMES
         DROP  NIB@,PARM@
         TITLE 'N E T O P - LOSTERM EXIT'
***********************************************************************
*                                                                     *
* NAME: LOSTERM EXIT                                                  *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN CONTACT HAS BEEN LOST     *
*        WITH A TERMINAL.                                             *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN THE     *
*        PARAMETER LIST BUT FOR THE MOMENT IT CHECKS FOR MASTER LOST, *
*        REASSIGNS MASTER IF SO, AND ISSUES CLSDST UNLESS CLOSEDOWN   *
*        IS IN PROGRESS.                                              *
*                                                                     *
* ENTRY POINT: LOSTERM                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) CID                                                *
*              (3) NIB USERFLD                                        *
*              (4) CODE INDICATING WHY ENTERED                        *
*                       CODES ARE:                                    *
*                         0 - DIAL-LINE DISCONNECTED ON DIAL-IN TERM  *
*                         4 - DIAL-LINE DISCONNECTED ON DIAL-OUT TERM *
*                         8 - RESERVED                                *
*                        12 - MANY REASONS SEE MANUAL - SHUTDOWN      *
*                        16 - SUCCESSFULLY RECONTACTED                *
*                        20 - UNCONDITIONAL TERMINATE SELF            *
*                        24 - POSSIBLE TO RECOVER                     *
*                        28 - INCOMPLETE OR INVALID SEGEMENTED REQUEST*
*                        32 - CONDITIONAL TERMINATE SELF              *
*                        36 - BUFFER LIMIT EXECEEDED                  *
*                        40 - TEST REQ KEY OR TOLTEP IS TAKING OVER   *
*                                                                     *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF LOSTERM EXIT                                *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              WORK REGS          WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT                                         *
*                                                                     *
***********************************************************************
*
LOSTERM  $XINIT
         USING LOSTPARM,PARM@     LOSTERM PARM DSECT ADDRESSING
         TM    POSTATUS,POSCLSDN  IF PO IS CLOSING DOWN, FORGET IT
         BO    LOSTRET
         LA    RPL@,DISCRPL       SET POINTER TO RPL
         L     CID,LOSTCID        PICK UP CID
         ST    CID,RPLARG         DROP IN RPL
         L     TICB@,LOSTUSER     SET TICB PTR
         L     ACB@,LOSTACB       PICK UP ACB PTR
         L     WKA,LOSTCODE      PICK UP LOST REASON CODE
         CVD   WKA,WORK          CONVERT DEC
         OI    WORK+7,X'0F'    FIX SIGN UP
         UNPK  LOSMSGRC(3),WORK+6(2)  UNPACK
         MVI   LOSMSGRC,C' '   BLANK LEADING ZERO
         $CALL PUTLOG,LOSMSG,LOSMSGL-1 OUTPUT REC
         TM    TISTATUS,TISMA     MASTER?
         BZ    LOSTCLS            NO - JUST CLSDST RELEASE
         $CALL MAFIND             YES - FIND ALT MASTER
*
LOSTCLS  ST    ACB@,RPLDACB       SET UP ACB @
         $CALL CLSDST             GO ISSUE CLSDST AND FREE UP TICB
*
LOSTRET  $XRET                    RETURN
         TITLE 'N E T O P - RELREQ EXIT'
***********************************************************************
*                                                                     *
* NAME: RELREQ EXIT                                                   *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN TERMINAL REQUESTED.       *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN THE     *
*        PARAMETER LIST SET UP BY VTAM AND TAKE APPROPRIATE RECOVERY  *
*        ACTION.                                                      *
*                                                                     *
* ENTRY POINT: RELREQ                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    UNPREDICTABLE                                          *
*        R1    @ PARAMETER LIST CONTAINING                            *
*              (1) @ ACBTERMS                                         *
*              (2) @ TERMINAL NAME                                    *
*                                                                     *
*        R2-13 UNPREDICTABLE                                          *
*        R14   RETURN ADDRESS IN VTAM                                 *
*        R15   ADDRESS OF RELREQ EXIT                                 *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    RICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGISTER      WKA,WKB                             *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*              SAVE AREA ADDRESS  SA@                                 *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT                                         *
*                                                                     *
***********************************************************************
*
RELREQ   $XINIT
         USING LOGONPRM,PARM@     RELREQ PARM DSECT ADDRESSING
         LA    NIB@,LOGONNIB      SET POINTER TO NIB
         USING ISTDNIB,NIB@       NIB DSECT ADDRESSING
         LA    RPL@,DISCRPL       SET POINTER TO RPL
         L     ACB@,LGNACB@       PICK UP ACB PTR
         L     WKA,TNAME@         SET POINTER TO TERMINAL NAME
         MVC   NIBSYM,0(WKA)      MOVE TERMINAL NAME INTO NIB
         LA    WKA,RPLARG         CID PTR
RLRQINQR INQUIRE RPL=(RPL@),                                           *
               ACB=(ACB@),                                             *
               NIB=(NIB@),                                             *
               AREA=(WKA),AREALEN=4,                                   *
               OPTCD=CIDXLATE
         LTR   RTNCD,RTNCD        OK?
         BZ    RLRQSEND          YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RLRQINQR            THEN RETRY
         B     RLRQINV             ELSE FORGET IT
RLRQSEND NI    RPLEXTDS,255-RPLNIB TURN OFF NIB FLAG (NOW A CID)
         OI    RPLRH3,RPLEB  SET END BRACKET                     87107
         NI    RPLRH3,255-RPLBB  RESET BEGIN BRACKET             87107
         L     TICB@,RPLUSFLD  GET LOCAL WORK AREA               87107
         TM    TIFLAGS3,TIF3READ  IN BRACKET ?                   87107
         BNZ   *+8           YES                                 87107
         OI    RPLRH3,RPLBB  NEED TO SET BEGIN ALSO              87107
         SEND  RPL=(RPL@),        SEND REJECT MSG AND CLSDST           *
               AREA=RLRQM,                                             *
               RECLEN=RLRQML,                                          *
               OPTCD=SYN,POST=RESP,RESPOND=(EX,FME,NRRN)
         LTR   RTNCD,RTNCD        OK?
         BZ    RLRQUS             YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    RLRQSEND            THEN RETRY
         B     RLRQINV             ELSE FORGET RELEASE
RLRQUS   L     TICB@,RPLUSFLD     GET TICB PTR
*
         TM    TISTATUS,TISMA     MASTER?
         BO    RLRQINV            YES - INVALID RELEASE
RLRQCLS  STIMER WAIT,BINTVL=CLSDLAY  ALLOW 1/2 SEC TO READ RELEASE MSG
         $CALL CLSDST             GO ISSUE CLSDST AND FREE UP TICB
*
         LA    WKA,6              EX LENGTH FOR SHORT MOVE
         B     RLRQPUT
*
RLRQINV  LA    WKA,L'RELMSG       EX LENGTH FOR LONG MOVE
*        B     RLRQPUT
*
RLRQPUT  $CALL PUTLOG,RELMSG,(WKA)  OUTPUT REC
RLRQRET  $XRET                    RETURN
         TITLE 'N E T O P - TPEND EXIT'
***********************************************************************
*                                                                     *
* NAME: TPEND EXIT                                                    *
*                                                                     *
* FUNCTION: TO NOTIFY PO OF VTAM SHUTDOWN.                            *
*                                                                     *
* DESCRIPTION: SAVES REASON CODE AND POSTS CLOSEDOWN ECB.             *
*                                                                     *
* ENTRY POINT: TPEND                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R1    @ PARAMETER LIST CONTAINING:                           *
*              (1) @ ACBTERMS                                         *
*              (2) REASON CODE                                        *
*        R14   RETURN ADDRESS                                         *
*        R15   TPEND ENTRY POINT ADDRESS                              *
*                                                                     *
* EXIT, NORMAL: BR 14                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
TPEND    $XINIT SA=ENDSA
         OI    POSTATUS,POSCLSDN  CLOSING DOWN, FORGET ERRORS    86356
         USING TPENDPRM,PARM@     TPEND PARM DSECT ADDRESSING
         L     WKA,TPREASON       PICK UP SAVE REASON CODE
         $CALL CVHX               CONVERT AND
         MVC   TPEMSGRC,HEX        MOVE INTO LOG TEXT
         LA    TICB@,VTAMTICB     ADDRESS VTAMTICB
         $CALL PUTLOG,TPEMSG,TPEMSGL-1 OUTPUT REC
         POST  ECBMAIN            INDICATE PO MUST CLOSE DOWN
         $XRET                    RETURN TO VTAM
         DROP  PARM@
         TITLE 'N E T O P - ERROR EXIT'
***********************************************************************
*                                                                     *
* NAME: SYNAD/LERAD                                                   *
*                                                                     *
* FUNCTION: TO TAKE APPROPRIATE ACTION WHEN A LOGICAL OR PHYSICAL     *
*        ERROR IS ENCOUNTERED  WITH A TERMINAL. THIS IS BOTH A        *
*        SYNAD AND LERAD EXIT.                                        *
*                                                                     *
* DESCRIPTION: THIS ROUTINE SHOULD EXAMINE THE RETURN CODE IN         *
*        REGISTER 0 AS SET UP BY VTAM AND TAKE APPROPRIATE RECOVERY   *
*        ACTION.                                                      *
*                                                                     *
* ENTRY POINT: ERROR                                                  *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        R0    RECOVERY ACTION RETURN CODE                            *
*        R1    @RPL                                                   *
*                                                                     *
*        R2-12 UNDETERMINED                                           *
*        R13   UNMODIFIED SINCE MACRO ISSUED - CALLERS SA, SAVED      *
*        R14   RETURN ADDRESS IN VTAM, SAVED                          *
*        R15   ADDRESS OF ERROR EXIT                                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE (IF ANY ARE MADE TO VTAM ANOTHER SA MUST BE CHAINED)    *
*                                                                     *
* ATTRIBUTES: VTAM EXLST EXIT (BOTH SYNAD AND LERAD)                  *
*                                                                     *
* NOTE:       ERRSAVE%+C% POINTS TO MACRO IN ERROR                    *
*                                                                     *
***********************************************************************
*
ERROR    $XINIT SA=ERRORSA    CHAIN SAVE AREAS
         LR    RPL@,PARM@     SET RPL PTR
         CLI   RPLRTNCD,USFLOGIC  LOGICAL ERROR?
         BE    LERERR         YES
         CLI   RPLRTNCD,USFENVER  ENVIRONMENT ERROR?
         BE    ENVERR         YES
         B     ERRLOG         LOG AND RETURN TO NSI
*
*        ENVIRONMENT ERRORS
*
ENVERR   CLI   RPLFDB2,USFVOFOC  REQUEST CANCELLED BY VARY?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
         CLI   RPLFDB2,USFTANAV  TERMINAL NOT AVAILABLE?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
         CLI   RPLFDB2,X'0D'     ACB BEEN CLOSED?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
ENVABEND TM    POSTATUS,POSCLSDN+POSABEND  CLOSEDOWN OR ABEND?
         BNZ   ERRLOG         YES - JUST LOG IT AN GO NSI
         SR    RTNCD,RTNCD    YES - SET REASON CODE
         IC    RTNCD,RPLFDB2   TO FEEDBACK2 VAL
         $AB   (ACTCD)          AND ABEND
*
*        LOGICAL ERRORS
*
LERERR   CLI   RPLFDB2,USFRNOCE  CMD SYNTAX ERROR?
         BE    ERRET             YES - RETURN TO NSI
         CLI   RPLFDB2,USFRNOSE  REPLY CMD SYNTAX ERROR?
         BE    ERRET             YES - RETURN TO NSI
         CLI   RPLFDB2,USFSDNP   SEND STILL PENDING?
         BE    ERRLOG            YES - LOG AND RETURN TO NSI
         CLI   RPLFDB2,USFRNOCL  RCVCMD DURING CLOSE             86355
         BE    ERRLOG            YES - LOG AND RETURN TO NSI     86355
*
LERABEND TM    POSTATUS,POSCLSDN+POSABEND  CLOSEDOWN OR ABEND?
         BNZ   ERRLOG         YES - JUST LOG IT AN GO NSI
         SR    RTNCD,RTNCD    SET REASON CODE
         IC    RTNCD,RPLFDB2   TO FEEDBACK2 VAL
         $AB   (ACTCD)
*
ERRLOG   IC    WKA,RPLREQ     GET REQ CODE
         $CALL CVHX            CONVERT
         MVC   ERREQ(2),HEX     AND MOVE IN
         IC    WKA,ACTCD      GET ACTION CODE
         $CALL CVHX            CONVERT
         MVC   ERRTNCD(2),HEX   AND MOVE IN
         IC    WKA,RPLFDB2    PICK UP FEEDBACK CODE
         $CALL CVHX            CONVERT
         MVC   ERFDBK2(2),HEX   AND MOVE IN
         IC    WKA,RPLSSEI    PICK UP SSENSEI CODE
         $CALL CVHX            CONVERT
         MVC   ERSENEI(2),HEX   AND MOVE IN
         IC    WKA,RPLSSMI    PICK UP SSENSMI CODE
         $CALL CVHX            CONVERT
         MVC   ERSENMI(2),HEX   AND MOVE IN
         IC    WKA,RPLESR1    PICK UP 1ST BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   ERSENU1(2),HEX   AND MOVE IN
         IC    WKA,RPLESR2    PICK UP 2ND BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   ERSENU2(2),HEX   AND MOVE IN
         OI    POSTATUS,POSSEND TELL TSO USERS ABOUT ABNORMAL CONDITION
         L     TICB@,RPLUSFLD -> CURRENT TICB
         LA    WKA,DUMTICB    VALIDATE
         CR    WKA,TICB@       TICB PTR
         BNH   ERRTCHK          IF INVALID
         LA    TICB@,BLANX       SUBSTITUTE BLANX FOR TINAME
         B     ERRPLOG            IN LOG MSG
ERRTCHK  LA    WKA,TICBS
         CR    WKA,TICB@
         BNL   ERRPLOG
         LA    TICB@,BLANX
ERRPLOG  $CALL PUTLOG,ERMSG,ERMSGL-1 OUTPUT RECORD
         CLI   RPLSSEI,RPLSTATI   STATE ERROR?
         BNE   ERRET               NO
         L     R1,=A(LERRRPL+8)    YES => SAVE
         MVC   0(112,R1),IFGRPL            READ ONLY RPL
         ABEND 405,DUMP                              & DUMP
ERRET    $XRET                    RETURN TO NSI VIA VTAM
         TITLE 'N E T O P - RESPONSE EXIT'
***********************************************************************
**                                                                   **
**       NAME:  RESP EXIT                                            **
**                                                                   **
**       DESCRIPTION:  A RESPONSE IS RECEIVED FROM A LOGICAL         **
**             UNIT FOR WHICH NO RECEIVE IS OUTSTANDING THAT         **
**             SPECIFIES  RTYPE=RESP.                                **
**                                                                   **
**       ENTRY POINT:  RESP                                          **
**                                                                   **
**       REGISTERS:                                                  **
**                                                                   **
**                                                                   **
**       AT ENTRY:                                                   **
**                                                                   **
**       R1   CONTAINS THE ADDRESS OF A 5 WORD PARAMETER LIST.       **
**                                                                   **
**            WORD 1 CONTAINS THE ADDRESS OF THE ACB FOR THE         **
**            APPLICATION PROGRAM TO WHICH THE LOGICAL UNIT WAS      **
**            CONNECTED.                                             **
**                                                                   **
**            WORD 2 CONTAINS THE CID OF THE LOGICAL UNIT.           **
**                                                                   **
**            WORD 3 CONTAINS THE VALUE THAT WAS PLACED IN THE       **
**            USERFLD OF THE NIB ASSOCIATED WITH THE LOGICAL         **
**            UNIT (THE NIB SPECIFIED WHEN THE LOGICAL UNIT WAS      **
**            CONNECTED).                                            **
**                                                                   **
**            WORD 4 IS NOT USED.                                    **
**                                                                   **
**            WORD 5 CONTAINS THE ADDRESS OF A VTAM-SUPPLIED         **
**            RPL IN READ-ONLY STORAGE. THE RPL CAN BE COPIED        **
**            OR DISPLAYED BY USING THE SHOWCB AND TESTCB MACROS     **
**            BUT CANNOT BE USED IN RECEIVE OR SEND MACROS.          **
**                                                                   **
**                                                                   **
**       R14  CONTAINS THE ADDRESS IN VTAM TO WHICH THE RESP         **
**            EXIT MUST BRANCH WHEN IT IS FINISHED PROCESSING.       **
**                                                                   **
**       R15  CONTAINS THE ADDRESS OF THE RESP EXIT ROUTINE.         **
**                                                                   **
**                                                                   **
**       THE EXIT DOES NOT HAVE TO ISSUE A RECEIVE TO GET THE        **
**       RESPONSE; THE COMMAND RECEIVED IS DETERMINED BY             **
**       EXAMINING THE READ-ONLY RPL.                                **
**                                                                   **
**                                                                   **
**       EXIT NORMAL:  BR 14                                         **
**                                                                   **
**       EXIT ERROR:  NONE                                           **
**                                                                   **
**       CALLS:   CVHX, PUTLOG                                       **
**                                                                   **
**       CALLED BY:  VTAM                                            **
**                                                                   **
**       ATTRIBUTES:                                                 **
*             SERIALLY REUSABLE                                       *
*              VTAM EXLST EXIT                                        *
*                                                                     *
***********************************************************************
*
RESP     $XINIT
         USING LOSTPARM,PARM@     LOSTERM PARM DSECT ADDRESSING
         STM   R0,R1,ABREGS
         L     RPL@,RESPRPL       LOAD READ-ONLY RPL PTR
         L     TICB@,LOSTUSER     LOAD TICB PTR
         IC    WKA,RPLREQ     GET REQ CODE
         $CALL CVHX            CONVERT
         MVC   REREQ(2),HEX     AND MOVE IN
         IC    WKA,RPLRTNCD   GET ACTION CODE
         $CALL CVHX            CONVERT
         MVC   RERTNCD(2),HEX   AND MOVE IN
         IC    WKA,RPLFDB2    PICK UP FEEDBACK CODE
         $CALL CVHX            CONVERT
         MVC   REFDBK2(2),HEX   AND MOVE IN
         IC    WKA,RPLSSEI    PICK UP SSENSEI CODE
         $CALL CVHX            CONVERT
         MVC   RESENEI(2),HEX   AND MOVE IN
         IC    WKA,RPLSSMI    PICK UP SSENSMI CODE
         $CALL CVHX            CONVERT
         MVC   RESENMI(2),HEX   AND MOVE IN
         IC    WKA,RPLESR1    PICK UP 1ST BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   RESENU1(2),HEX   AND MOVE IN
         IC    WKA,RPLESR2    PICK UP 2ND BYTE OF SENSE CODE
         $CALL CVHX            CONVERT
         MVC   RESENU2(2),HEX   AND MOVE IN
         OI    POSTATUS,POSSEND TELL TSO USERS ABOUT ABNORMAL CONDITION
         $CALL PUTLOG,REMSG,REMSGL-1 OUTPUT RECORD
         CLI   RPLRTNCD,X'04' IF RTNCD = 04
         BNE   RESPRET
         CLI   RPLFDB2,X'04'    AND FDB2 = 04
         BNE   RESPRET
         TM    POSTATUS,POSCLSDN+POSABEND  QUITTING ?            87131
         BNZ   RESPRET       YES; IGNORE PROBLEM                 87131
         ABEND 404,DUMP           THEN GIVE US A DUMP
RESPRET  $XRET                    RETURN TO NSI VIA VTAM
*
         DROP  PARM@
         EJECT
         SPACE 20
*                        SUBROUTINES
*
*
*        EACH IS INDEPENDENTLY BASED, EXIT BEING VIA $SRET MACRO.
*        WHERE MULTIPLE ENTRY POINTS OCCUR, BASE AND RETURN SAVE WORDS
*        OF THE LAST EP ONLY ARE GENERATED;  PREVIOUS $SINIT MACROS
*        REFER TO IT VIA THE  SARET=  OPERAND.
*
*
         USING ISTDPOHD,DA@       SET UP ISTDPOHD DSECT ADDRESSING
         TITLE 'N E T O P - SHOWCDS SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: SHOWCDS                                                       *
*                                                                     *
* FUNCTION: MOVE ACB ERROR FEEDBACK INFORMATION INTO MESSAGE NTP10.   *
*        THIS MESSAGE WILL SHOW IN DETAIL HOW OPEN OR CLOSE           *
*        FAILED.                                                      *
*                                                                     *
* DESCRIPTION: CONVERTS RETURN CODE AND ERROR CODE (ACBERFLG) TO      *
*        HEX DIGITS AND MOVES THEM INTO MESSAGE NTP10.                *
*                                                                     *
* REGISTERS:                                                          *
*                                                                     *
*              RC FROM OPEN/CLOSE WKA                                 *
*              @ ACB              ACB@                                *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
*        CHANGED:  R6                                        WKA      *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLED BY: MAINLINE                                                 *
*                                                                     *
* CALLS: CVHX TO CONVERT CODES TO HEX DIGITS                          *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              SUBROUTINE INTERNAL TO MAINLINE                        *
*                                                                     *
***********************************************************************
*
SHOWCDS  $SINIT
         $CALL CVHX               CONVERT RETURN CODE TO HEX
         MVC   NTP10RC,HEX        MOVE INTO MESSAGE
         SR    WKA,WKA            CLEAR REGISTER
         IC    WKA,ACBERFLG       OBTAIN ERROR CODE
         $CALL CVHX               CONVERT TO HEX
         MVC   NTP10EC,HEX        MOVE INTO MESSAGE
         $SRET                    RETURN
         TITLE 'N E T O P - CVHX SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: CVHX                                                          *
*                                                                     *
* FUNCTION: CONVERT A BYTE TO HEXADECIMAL CHARACTER REPRESENTATION    *
*           AND RETURN TO CHARACTERS TP CALLER.                       *
*                                                                     *
* DESCRIPTION: CONVERTS ONE BYTE CODE IN REGISTER 8 AND STORE TWO     *
*              HEX DIGITS CHARACTERS IN AREA LABELLED HEX.            *
*                                                                     *
* REGISTERS:                                                          *
*                                                                     *
*              LOW ORDER BYTE CONVERTED  WKA                          *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
*        CHANGED:  NONE *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLED BY: SHOWCDS                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*              SUBROUTINE INTERNAL TO SHOWCDS                         *
*                                                                     *
***********************************************************************
*
CVHX     $SINIT
         STC   WKA,HEXTOBE       STORE FOR UNPK
         UNPK  HEX(3),HEXTOBE    UNPACK TWO BYTES
         TR    HEX(2),TRTAB-240  MAKE IT PRINTABLE
         $SRET                    RETURN
         TITLE 'N E T O P - RCVVTAM SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: RCVVTAM                                                       *
*                                                                     *
* FUNCTION: TO FILTER UNSOLICITED VTAM MESSAGES FOR CONDITIONS        *
*        REQUIRING NETOP ACTION, AND FOR REPEATING MESSAGES.          *
*                                                                     *
* DESCRIPTION: CURRENTLY THE MSG ID IS CLI'D FOR A FEW MATCHES;       *
*        EVENTUALLY A CONTROL BLOCK SEARCH LOOP WILL BE IMPLEMENTED.  *
*        ONCE A MATCH IS FOUND, A COMMAND IS BUILT IN INTBUF IN PFKEY *
*        FORMAT AND THE POFINTCM FLAG IS TURNED ON. FURTHER ENHANCE-  *
*        MENTS WILL ALLOW COMMAND CHAINS TO BE GENERATED BY A SINGLE  *
*        UNSOLICITED MESSAGE.                                         *
*           REPEATING MESSAGES ARE SUPPRESSED, THE MSG# FIELD BEING   *
*        UPDATED WITH A REPEAT COUNT TO REGISTER RECEIPT.             *
*                                                                     *
* ENTRY POINT: RCVVTAM                                                *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*        R4    ADDRESS OF ISTDPOHD DA@                                *
*        R9    SUBROUTINE RETURN  RET@                                *
*        OTHERS IGNORED                                               *
*                                                                     *
* OUTPUT: INTBUF CONTAINS APPROPRIATE CMD                             *
*         POFLAGS POFINTCM SET TO REFLECT SEARCH RESULT               *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        NONE
*                                                                     *
* CALLED BY: OUTBOUND                                                 *
*                                                                     *
* CALLS:     TSOUID                                                   *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        SUBROUTINE INTERNAL TO OUTBOUND EXIT                         *
*                                                                     *
***********************************************************************
*
RCVVTAM $SINIT
         TM    POSTATUS,POSCLSDN+POSABEND  QUITTING ?            87131
         BNZ   RCVVRET4      YES; IGNORE RESPONSE                87131
         TM    POHSTAT,POHGEN     SOLICITED REPLY?
         BO    RCVVSOLC           YES
         LA    R0,L'UNSOL-1  GET MAXIMUM LENGTH                  87131
         CR    R0,MSGLEN                                         87131
         BNL   *+6           OK                                  87131
         LR    MSGLEN,R0     ELSE TRUNCATE                       87131
         EX    MSGLEN,RCVUNCLC    NO - REPEATING MSG?
         BNE   RCVUN               NO - NOT THE SAME
         AP    UNSOL#,KP1          YES - INCREMENT UNSOL MSG #
         CP    UNSOL#,MAXUNSOL    REACHED MAX?
         BE    RCVVNODE           YES - INACT NODE
         B     RCVV852
RCVUN    ZAP   UNSOL#,KP1         RESET UNSOL MSG #
         EX    MSGLEN,RCVUNMOV    SAVE UNSOL MSG FOR COMPARISON
*
RCVV852  CLC   DAMSG#,=C'852'     CLUSTER UNAVAILABLE MSG?
         BNE   RCVV342            NO
         MVC   INTNODE,DA852NOD   SET NODENAME
         B     RCVVINAC           YES - INACT,I
         SPACE 1
RCVV342  CLC   DAMSG#,=C'342'     UNABLE TO ESTABLISH SESSION?
         BNE   RCVV400            NO => NEXT MSG CHECK
         CLC   DA342RC(2),=CL2'12' APPLICATION INACTIVE??
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV400  CLC   DAMSG#,=C'400'     TERMINATION IN PROGRESS MSG?
         BNE   RCVV804            NO => NEXT MSG CHECK
         CLC   DA400APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV804  CLC   DAMSG#,=C'804'     CLOSE IN PROCESS MSG?
         BNE   RCVV805            NO => NEXT MSG CHECK
         CLC   DA804APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV805  CLC   DAMSG#,=C'805'     CLOSE COMPLETE MSG?
         BNE   RCVV285            NO => NEXT MSG CHECK
         CLC   DA805APL(3),=CL3'TSO' APPLID=TSO?
         BE    RCVVRET4           YES => SUPPRESS MSG
         B     RCVVRET0           NO  => EXIT
         SPACE 1
RCVV285  CLC   DAMSG#,=C'285'     DUMP COMPLETE MSG?
         BE    RCVV2856           YES
         CLC   DAMSG#,=C'286'     DUMP PARTIALLY COMPLETE MSG?
         BNE   RCVV413            NO
RCVV2856 MVC   INTDNODE,DA285NOD  SET NODENAME
         MVC   INTFDUMP,FDUMP     SET MODIFY CMD
         LA    WKA,L'FDUMP        SET CMD LENGTH
         OI    POSTATUS,POSSEND   FLAG SEND TO TSO USERS
         B     RCVVOSCM           OS COMMAND
*
RCVV413  CLC   DAMSG#,=C'413'     VTAM DUMPING MSG?
         BNE   RCVV209            YES
         OI    POSTATUS,POSSEND   FLAG SEND TO TSO USERS
         B     RCVVRET0
*
RCVV209  CLC   DAMSG#,=C'209'     INTERVENTION REQD MSG?
         BNE   RCVVRET0           NO
         CLC   DABTUCMD,=C'020A'  YES - WRITE CONTACT?
         BNE   RCVVRET0           NO
RCVVNODE MVC   INTNODE,DAMSGNOD   SET NODENAME
         B     RCVVINAC           YES - INACT,I
*
*
*        INACT REQUIRED
*
RCVVINAC MVI   INTAID,PF6         SET 'INACT,I' PFKEY
         LA    WKA,L'INTAID+L'INTNODE  SET INTERNAL CMD BUF LENGTH
         B     RCVVRETI
*
*        OS CMD REQUIRED
*
RCVVOSCM MVI   INTAID,PF5         SET OS CMD PFKEY
         LA    WKA,L'INTAID+L'INTNODE(,WKA)  INCREMENT CMD BUF LENGTH
*        B     RCVVRETI
*
*        INTERNAL CMD COMMON CODE
*
RCVVRETI OI    POFLAGS,POFINTCM   FLAG CMD GENERATED
         STH   WKA,INTBUFL
         B     RCVVRET0
*
*
*        SOLICITED MESSAGE COMPARES
*
RCVVSOLC TM    TIFLAGS,TIFCLUST   CLUSTER ONLY FLAG SET?
         BZ    RCVV082            NO
RCVV080  CLC   DAMSG#,=C'080'     CLUST/TERM LINE OF DISPLAY RESPONSE?
         BNE   RCVV089            NO
         LA    WKA,DAMSGNOD       YES - SCAN FOR
         LA    WKB,3               AND BLANK OUT
         SR    WKC,WKC              ANY NON-CLUSTER
RCVVCLOO CLI   0(WKA),C'&CLUST'      STATUS FIELD
         BNE   RCVVNCLU
         LA    WKC,1(,WKC)
         B     RCVVCLND
RCVVNCLU MVC   0(DAM80TXL,WKA),BLANX
RCVVCLND LA    WKA,DAM80NXL(,WKA)
         BCT   WKB,RCVVCLOO
         LTR   WKC,WKC            IF NO CLUSTER STATUS FIELDS
         BZ    RCVVRET4            ARE DETECTED, SUPPRESS OUTPUT
         OI    POFLAGS,POFHINT    FLAG FOR HI INTENSITY TO MAKE IT
         B     RCVVRET0            EASIER TO SEE
*
RCVV089  CLC   DAMSG#,=C'089'     SNA CLUST/TERM DISPLAY RESPONSE?
         BNE   RCVV082            NO
         CLI   DAMSGNOD,C'&CLUST' CLUSTER?
         BNE   RCVVRET4           NO - SUPPRESS OUTPUT
         OI    POFLAGS,POFHINT    FLAG FOR HI INTENSITY TO MAKE IT
         B     RCVVRET0            EASIER TO SEE
*
RCVV082  CLC   DAMSG#,=C'082'     3RD LINE OF DISPLAY RESPONSE?
         BNE   RCVVRET0           NO
         TM    TISTATUS,TISUID    USERID FOUND FLAG ON (? TYPE CMD)
         BZ    RCVTSOCK           NO
         NI    TISTATUS,255-TISUID  YES - RESET FLAG
         MVC   NEWUID,TIABR       MOVE IN USERID
         LH    WKC,TIABR+8        POINT TO HEX ASID
         B     RCVVASID           GO FILL REST OF NEW IST082 LINE
RCVTSOCK CLC   DAM82ALC(3),=C'TSO'    ALLOC= TSONNNN ?
         BNE   RCVVRET0            NO
         TM    POSTATUS,POSTEST    YES - RUNNING UNDER TEST?
         BO    RCVVRET0             YES - DONT CONVERT
         MVC   WORK(4),=C'0000'    VERIFY
         MVN   WORK(4),DAM82ALC+3   FOR VALID
         CLC   WORK(4),DAM82ALC+3    NUMERICS
         BNE   RCVVRET0            IF NOT, DONT CONVERT TSOXXXX
         PACK  WORK,DAM82ALC+3(4)   NO - PACK TCAS ID
         CVB   PARM@,WORK           LOAD TCAS APPL INDEX
         $CALL TSOUID,(PARM@)     GO CONVERT TSONNNN TO USERID
         USING ASCB,RTNCD              ESTABLISH ADDRESSABILITY TO ASCB
         LTR   RTNCD,RTNCD             ASCB PTR RETURNED?
         BZ    RCVVRET0                NO
         L     WKA,ASCBJBNS            YES - PICK UP USERID PTR
         MVC   NEWUID,0(WKA)             MOVE
         LH    WKC,ASCBASID               IN
RCVVASID CVD   WKC,WORK                    NEW
         MVC   WORK(4),=X'40202120'         VALUES
         ED    WORK(4),WORK+6
         CLI   WORK+1,C' '
         BNE   RCVVUNBL
         MVI   WORK+1,C'('
         B     RCVVMVID
RCVVUNBL MVI   WORK,C'('
RCVVMVID MVC   NEWASID,WORK
         MVC   NEWDEV,DAM82DEV          MOVE IN
         MVC   NEWALC,DAM82ALC           EXISTING
         MVC   NEWSIM,DAM82SIM            VALUES
         MVC   DAMSGNOD(NEW082L),NEW082  MOVE IN NEWLY FORMATTED MSG
         LA    MSGLEN,NEW082L+(DAMSGNOD-DATX)  SET NEW LENGTH
         B     RCVVRET0
         DROP  RTNCD
*
RCVVRET4 LA    RTNCD,4            SUPPRESS OUTPUT OF THIS MSG
         B     RCVVRET
*
RCVVRET0 SR    RTNCD,RTNCD        OUTPUT THIS MSG
RCVVRET  $SRET                    RETURN
*
RCVUNMOV MVC   UNSOL(*-*),DATX         MOVE INTO UNSOL AREA
RCVUNCLC CLC   UNSOL(*-*),DATX         COMPARE TO UNSOL AREA
         TITLE 'N E T O P - RCV3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: RCV3270                                                       *
*                                                                     *
* FUNCTION: ANALYZE THE INPUT OBTAINED FROM THE OPERATOR AND DETERMINE*
*           IF THERE IS ANYTHING TO SEND TO VTAM.                     *
*                                                                     *
* DESCRIPTION:                                                        *
*                                                                     *
* ENTRY POINT: RCV3270                                                *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*        DA@       ISTDPOHD ADDRESS                                   *
*        MSGLEN    MESSAGE LENGTH                                     *
*        RET@      RETURN ADDRESS                                     *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              @ TICB FOR THE TERMINAL BEING READ.  TICB@             *
*              @ DATA AREA WITH THE INPUT DATA      DA@               *
*              LENGTH OF MESSAGE                    MSGLEN            *
*              WORK REGISTERS                       WKA,WKB           *
*              SUBROUTINE RETURN ADDRESS            RET@              *
*              BASES                           BASE1@,DBASE1@,DBASE2@ *
*              VTAM CALLS                           SUBR@,RTNCD,RET@  *
*              RETURN CODE                          RTNCD             *
*               RCVCMDOK EQU 0            COMMAND OK                  *
*               RCVCMDRS EQU 4            COMMAND OK AND RESPONSE MSG *
*               RCVRMSG  EQU 8            RESPONSE MSG                *
*               RCVNRMSG EQU 12           NO RESPONSE MSG             *
*               RCVCLDST EQU 12           CLSDST ISSUED FOR TERMINAL  *
*               RCVCLOSD EQU 16           CLOSEDOWN ISSUED FOR NETOP  *
*                                                                     *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: UNSTACK TO UNSTACK MESSAGES AFTER PA KEY HIT WHEN IN         *
*                WAIT-FOR-ROLL CONDITION.                             *
*                                                                     *
* CALLED BY: INBOUND EXIT                                             *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
*                                                                     *
***********************************************************************
*
RCV3270  $SINIT
         ST    R2,RCVSAVE2        SAVE RPL @ (TRT USED)
         TM    RPLCNTDC,RPLSIGNL  ATTENTION REQUESTED ?          87109
         BZ    NOSIG         NO                                  87109
         MVI   DATX,PA1      FAKE A PA1                          87109
         LA    MSGLEN,1      FAKE LENGTH=1                       87109
NOSIG    OI    TIFLAGS3,TIF3MCNT  RESHOW STACKED COUNT           87109
         MVC   AID,DATX           SAVE AID
         NI    AID,X'0F'          ZERO ZONE
         BZ    INVINP             NO ACTION AID => TREAT AS INVALID
*                                     TILL I CAN FIGURE OUT WHY
*                                     WE GET IT.
         CLI   AID,X'0F'          INVALID IF > 14 NUMERIC
         BL    AIDFND             OK
AIDBAD   ABEND 256,DUMP           NO - LET'S GET A DUMP OF THIS...
*
AIDFND   CLI   AID,XPF3            END?
         BE    TERMEND             YES - GO RELEASE TERMINAL
         CLI   AID,XPF1            HELP?
         BE    HELPOUT             YES - GO DISPLAY HELP SCREEN
         CH    MSGLEN,K3           LENGTH > 3?
         BH    MOREDATA            YES
*              NO - RESET ROLL WAIT, NO-AUTO REENTRY, HELP, LAST UNSOL
AIDSHORT NI    TIFLAGS,255-(TIFWTROL+TIFNAUT)
         TM    TISTATUS,TISTACK    ANY MESSAGES STACKED?
         BO    ATTNCHK             YES
         NI    TIFLAGS,255-(TIFHELP+TIFUNSOL) NO - RESET FLAGS
         B     NOSTACK
ATTNCHK  CLI   DATX,PA1            ATTN? (DELETE OUTSTANDING MESSAGES)
         BE    DELSTACK            YES
         CLI   DATX,CLEAR          CLEAR?
         BE    CLRSTACK            YES
         TM    TIFLAGS,TIFHELP     HELP SCREEN CURRENT?
         BZ    NOHELP              NO - DONT RE-INIT SCREEN
CLRSTACK SR    PARM@,PARM@         YES - INIT PARM,
         IC    PARM@,TIABRLEN+1     PICKUP LAST CMD LEN,
         $CALL INT3270,(PARM@)      RE-INIT SCREEN BEFORE UNSTACKING
         NI    TIFLAGS,255-TIFHELP RESET HELP FLAG
NOHELP   ST    TICB@,TICBLIST      SET UP
         OI    TICBLIST,LASTPARM    TICBLIST FOR SENDS
         $CALL UNSTACK             RETRIEVE AND SEND STACKED MSGS
         B     RCV32RET GO SEND WARNING OR NOT (RC FROM UNSTACK=4 OR 8)
DELSTACK OI    POFLAGS,POFSTDEL    FLAG STACK DELETE
         $CALL UNSTACK             RETRIEVE AND DELETE STACKED MSGS
         MVI   DATX,PA2            ASK FOR RESHOW
         NI    TIFLAGS,255-(TIFHELP+TIFUNSOL) RESET FLAGS
         B     CLEARSET            GO INIT SCREEN
NOSTACK  NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DISPLAY
         XC    TIDSPCT,TIDSPCT                 FLAGS AND COUNT
         CLI   DATX,PA1            ATTN (NO-OP)?
         BE    RCVNULL             YES
CLEARSET SR    PARM@,PARM@         INIT PARM
         CLI   DATX,PA2            RESHOW?
         BNE   CLEARCAL            NO
RESHOW   IC    PARM@,TIABRLEN+1    YES - PICKUP LAST CMD LEN
CLEARCAL $CALL INT3270,(PARM@)     SHORT READ - RE-INIT SCREEN
         B     RCV32CLD            RET 8 TO SUPPRESS FURTHER OUTPUT
*
MOREDATA CH    MSGLEN,K6           LENGTH > 6?
         BNH   RCVNULL             NO - NULL MSG - RETURN 4
         AH    DA@,K3              INCR DSECT BASE OVER AID-CUR-CUR
         CLI   DATX,SBA            ?
         BNE   TRYNUM              NO
         AH    DA@,K3              INCR DSECT BASE OVER SBA-ADR-ADR
         CLI   DATX,X'40'          BLANK INPUT?
         BNE   TRYNUM              NO - CHECK IT
RCVNULL  LA    WKA,NULLM           SET UP FOR NULL MSG
         LA    WKB,L'NULLM         FULL LENGTH (WITH IC)
RCV32RMG LA    RTNCD,RCVRMSG       YES - SET RESP MSG RETURN CODE
         B     RCV32RET            RETURN
*
TRYNUM   MVI   WORK,C'0'
         MVN   WORK(1),DATX        1ST DATA BYTE
         CLC   WORK(1),DATX         NUMERIC?
         BNE   SUBSIX              NO
         CH    MSGLEN,K7           YES - ONLY 1 DATA BYTE?
         BE    PSEUDO1               YES - PSEUDO PF ONLY
         CLI   DATX+1,C' '           NO - FOLLOWING BLANK?
         BE    PSEUDO1                 YES - TREAT AS PSEUDO PF CMD
         MVI   WORK,C'0'
         MVN   WORK(1),DATX+1      1ST DATA BYTE
         CLC   WORK(1),DATX+1       NUMERIC?
         BNE   IMPLR1              NO - TREAT AS IMPLICIT REPLY CMD
         CH    MSGLEN,K8           YES - ONLY 2 DATA BYTES?
         BE    MACANREQ              YES - COULD BE MA-CAND REQUEST
         CLI   DATX+2,C' '           NO - FOLLOWING BLANK?
         BE    PSEUDO2                 YES - TREAT AS PSEUDO PF CMD
*
         MVC   TBUF+2(2),DATX      IMPLICIT REPLY, 2 NUMERICS
         SH    MSGLEN,K2           DECREMENT LENGTH
         LA    WKB,DATX+2          SET UP TEXT PTR
         B     IMPLREX
IMPLR1   MVC   TBUF+3(1),DATX      IMPLICIT REPLY, 1 NUMERIC
         MVI   TBUF+2,C'0'
         SH    MSGLEN,K1           DECREMENT LENGTH
         LA    WKB,DATX+1          SET UP TEXT PTR
IMPLREX  EX    MSGLEN,IMPLRMV1     MOVE REPLY TEXT INTO TBUF
         MVC   TBUF(2),=C'R '      SET UP REPLY CMD
         MVI   TBUF+4,C','                REPLY
         SH    MSGLEN,K2           DECREMENT LENGTH FOR MOVE EX
         ST    MSGLEN,RCVSAVE       AND SAVE IT FOR LOG EX MOVE
         EX    MSGLEN,IMPLRMV2     MOVE REPLY CMD INTO ISTDPOHD
         LA    MSGLEN,1(,MSGLEN)   INCREMENT LENGTH FOR SENDCMD
         B     RCVREPLY
*
*        PSEUDO PF COMMANDS CONSIST OF 1 OR 2 NUMERICS REPRESENTING A
*        PF KEY NUMBER, FOLLOWED BY A BLANK AND SOME DATA - THIS FORM
*        IS NECESSARY FOR CLISTS AND FOR TERMINALS WITHOUT PF KEYS
*
PSEUDO1  MVN   AID,DATX            MOVE IN PSEUDO AID
         CH    MSGLEN,K8           MORE THAN 2 DATA BYTES?
         BH    PSEUDOK             YES - MEANINGFUL DATA
         LH    MSGLEN,K3           NO - PF ONLY
         B     AIDFND               TREAT AS SHORT MSG
PSEUDOK  LA    DA@,2(,DA@)         INCREMENT DATX PTR OVER PSEUDO,
         SH    MSGLEN,K2            DECREMENT LENGTH FOR PSEUDO CHARS
         B     TRYNUM               AND GO RESCAN INPUT
PSEUDO2  CH    MSGLEN,K9           ONLY 3 DATA BYTES?
         BE    INVINP              YES - MEANINGLESS AS PSEUDO PF CMD
         NI    DATX+1,X'0F'        NO -
         SR    WKB,WKB              CONVERT
         IC    WKB,DATX+1            CHARACTER
         AH    WKB,K10                AID INTO
         CH    WKB,K12                 CORRECT
         BH    INVINP                   HEX
         STC   WKB,AID                   NUMERIC
         LA    DA@,3(,DA@)         INCREMENT DATX PTR OVER PSEUDO,
         SH    MSGLEN,K3            DECREMENT LENGTH FOR PSEUDO CHARS
         B     TRYNUM               AND GO RESCAN INPUT
*
MACANREQ CLI   AID,XPF2            MASTER CANDIDATE REQUEST
         BNE   INVINP              NO
         CLC   DATX(2),SENDTIME    YES - CORRECT HOUR?
         BNE   INVINP                NO
         TM    TISTATUS,TISMA        YES - MASTER?
         BO    INVCMD                  YES - DENY
         XI    TISTATUS,TISMCAND       NO - SWITCH CANDIDATE BIT
         LA    WKA,1               LOAD INCREMENT
         TM    TISTATUS,TISMCAND   BIT ON NOW?
         BO    MCCTUP              YES
         LNR   WKA,WKA             NO - CHANGE TO DECREMENT
MCCTUP   AH    WKA,TICBMCCT        ADD OR SUBTRACT 1
         STH   WKA,TICBMCCT         TO MCANDT COUNT
         SR    PARM@,PARM@         INIT PARM
         B     RESHOW              TREAT LIKE RESHOW KEY HIT
*
SUBSIX   SH    MSGLEN,K6           DECR. LEN
         TM    TIFLAGS,TIFNAUT     NO-AUTO RE-ENTRY OF EXPANDED CMD?
         BZ    NOTNAUT             NO
         MVI   AID,XENTER          YES - OVER-RIDE AID AS IF ENTER HIT
         B     UPMOVE               AND DONT UPDATE ABBREV FIELDS
NOTNAUT  CLI   AID,XPF2            PF2? (CONTROL KEYWORD)
         BE    UPMOVE              YES - DONT UPDATE ABBREV FIELDS
         LR    WKB,MSGLEN          CHECK
         LA    WKC,L'TIABR          LENGTH
         CR    WKB,WKC             > MAX?
         BNH   ABRLOK              NO
         LR    WKB,WKC             YES - SET TO MAX
ABRLOK   STH   WKB,TIABRLEN        SAVE ABBREV LENGTH
         BCTR  WKB,0               DECR FOR EX
         EX    WKB,MVABR           SAVE ABBREV CMD
UPMOVE   MVC   UPPER,BLANX         BLANK TARGET FIELD
         LA    WKB,6               IF LENGTH
         LR    WKC,MSGLEN           < 7 THEN
         BCTR  WKC,0                 USE IT,
         CR    WKC,WKB                ELSE USE 6
         BNH   UPFOLD                  FOR EX OF OR INSTR.
         LR    WKC,WKB                  TO FOLD INPUT DATA
UPFOLD   EX    WKC,ORUP                  INTO COMPARE FIELD
         CLC   UPPER(3),=C'END'    ?
         BE    TERMEND             YES - GO RELEASE TERMINAL
         SR    WKB,WKB            CALC OFFSET
         IC    WKB,AID             INTO AID OFFSET
         BCTR  WKB,0                BRANCH TABLE
AIDOK    SLL   WKB,1              * 2 SINCE OFFSETS ARE HALFWORDS
         LH    WKB,AIDTAB(WKB)    LOAD CODE OFFSET
         B     AIDTAB(WKB)        GO TO INPUT HANDLER FOR THIS AID
*
AIDTAB   DS    0H                 TABLE OF OFFSETS TO INPUT HANDLERS
*                                   THIS LOGIC MEANS THAT ON 3278'S
*                                 PF13-PF24 CORRESPOND TO PF1-PF12
         DC    AL2(AIDPF1-AIDTAB)
         DC    AL2(AIDPF2-AIDTAB)
         DC    AL2(AIDPF3-AIDTAB)
         DC    AL2(AIDPF4-AIDTAB)
         DC    AL2(AIDPF5-AIDTAB)
         DC    AL2(AIDPF6-AIDTAB)
         DC    AL2(AIDPF7-AIDTAB)
         DC    AL2(AIDPF8-AIDTAB)
         DC    AL2(AIDPF9-AIDTAB)
         DC    AL2(AIDPF10-AIDTAB)
         DC    AL2(AIDPF11-AIDTAB)
         DC    AL2(AIDPF12-AIDTAB)
         DC    AL2(AIDENTER-AIDTAB)
         DC    AL2(AIDSEL-AIDTAB)
*
AIDPF2   LR    WKD,MSGLEN         SET UP
         BCTR  WKD,0               EX LENGTH FOR COMPARE/MOVE
         LA    WKB,PF2KWDS        INDEX REG TO KEYWORDS
PF2LOOP  EX    WKD,PF2CLC         COMPARE FOR NEGATIVE FORM
         BE    PF2MASK            GO APPLY MASK
         LA    WKB,1(,WKB)        INCREMENT OVER 'N'
         EX    WKD,PF2CLC         COMPARE FOR POSITIVE FORM
         BE    PF2MASK            GO APPLY MASK
         LA    WKB,6(,WKB)        INCREMENT TO NEXT KEYWORD
         CLI   0(WKB),X'FF'       END OF TABLE?
         BNE   PF2LOOP            NO
*                                 YES - ASSUME USERID INTENDED
         TM    POSTATUS,POSTEST   RUNNING UNDER TEST?
         BO    INVINP             YES - DONT SEARCH
         MVC   TIABR(7),UPPER     NO -  MOVE IT INTO TIABR; ALSO MOVE
         STH   MSGLEN,TIABRLEN     LENGTH IN CASE UID ¬ FND, THEN PA2
         $CALL TSOUID,0           GO SEARCH TSB CHAIN FOR USERID
         LA    WKA,RCVRMSG        DCON RC
         CR    RTNCD,WKA          ACTIVE OR DCON?
         BH    INVINP             NO - MUST BE NOT FOUND
         LA    MSGLEN,8           SET NEW MSG LENGTH
         BL    IMPLD              ACTIVE - GO TREAT AS DISPLAY
         NI    TISTATUS,255-TISUID  DISCONNECTED - RESET FLAG
         MVC   DCONMNAM,DATX      MOVE OLD TERMNAME INTO ERROR PART
         MVC   DCONMABR,DATX      MOVE OLD TERMNAME INTO ENTRY PART
         LA    WKB,DCONML         SET UP FOR DCON
         LA    WKA,DCONM           MESSAGE
         B     RCV32RET           RETURN
*
PF2MASK  CLI   5(WKB),X'7F'       IS IT OVER 7F?
         BL    PF2OR              NO - MUST BE 'OR' MASK
         CLI   5(WKB),X'80'       YES - IS IT 80? (HIGHEST 'OR' MASK)
         BE    PF2OR              YES
         NC    TIFLAGS2,5(WKB)    NO - 'AND' FLAG BYTE TO TURN OFF
         B     RCVNULL             TREAT LIKE NULL MSG
PF2OR    TM    5(WKB),TIF2SOLO     SOLO ON?
         BZ    PF2ORFLG            NO
         TM    TISTATUS,TISMA      YES - IS THIS THE MASTER?
         BO    INVCMD               YES - DENY
PF2ORFLG OC    TIFLAGS2,5(WKB)    'OR' FLAG BYTE TO TURN ON FLAG
         B     RCVNULL             TREAT LIKE NULL MSG
*
AIDPF4   LA    WKC,L'MODIFY-1      IMPLICIT MODIFY...
         CLC   NETSOL,UPPER        BUT
         BE    NOIDMOD              CHECK FOR
TRYTEST  CLC   TEST,UPPER            MODIFY'S THAT
         BE    NOIDMOD                HAVE NO
TRYSUPP  CLC   SUPP,UPPER              'ID='
         BNE   ALMOD
NOIDMOD  LA    WKC,L'MODIFY-4      REDUCE LENGTH OF INSERT
ALMOD    LA    WKA,MODIFY                 FOR CMD INSERTION
         B     INSERT
*
AIDPF5   TM    TISTATUS,TISMCAND   IMPLICIT OS CMD - MASTER CANDIDATE?
         BZ    INVCMD              NO - DENY
         TM    POSTATUS,POSTEST    RUNNING UNDER TEST?
         BO    AIDENTER            YES - TREAT AS ENTER KEY
         LA    WKA,4(,MSGLEN)      YES - SET UP
         SLL   WKA,16                OS CMD PREFIX
         ST    WKA,ISTDPOHD           AND STORE IT
         $CALL MGCR,ISTDPOHD       ISSUE SVC 34
         $CALL PUTLOG,DATX,(MSGLEN)  LOG CMD
         LA    WKA,NULLM           SET UP FOR NULL MSG
         LA    WKB,2                WITHOUT SBA,IC
         B     RCV32RMG            RETURN NULL
*
AIDPF6   LA    WKC,L'VARYII-1      IMPLICIT VARY ,INACT,I
         LA    WKA,VARYII          SET UP FOR CMD INSERTION
         B     INSERT
*
AIDPF7   OI    TIFLAGS,TIFVLOG     IMPLICIT VARY ,LOGON
         B     AIDENTER            USE DISPLAY FORMAT, BUT FLAG
*
AIDPF8   LA    WKC,L'VARYI-1       IMPLICIT VARY ,INACT
         LA    WKA,VARYI           SET UP FOR CMD INSERTION
         B     INSERT
*
AIDPF10  OI    TIFLAGS,TIFCLUST    DISPLAY WITH CLUSTER STATUS ONLY
         B     AIDENTER            USE DISPLAY FORMAT, BUT FLAG
*
AIDPF11  OI    TIFLAGS,TIFDSP11    DISPLAY WITH LOGGING - FLAG IT
         B     AIDENTER
*
AIDPF12  LA    WKC,L'VARYA-1       IMPLICIT VARY ,ACT
         LA    WKA,VARYA           SET UP FOR CMD INSERTION
         B     INSERT
*
AIDSEL   EQU   *                   ALSO SELECTOR PEN ENTER
AIDENTER CLI   UPPER+1,C' '        VALID CMD FORMAT FOR ENTER KEY?
         BE    VALENT              YES
*
*  FOLLOWING CODE EDITS 'NODENAME,ETC..' AFTER ENTER, PF10 OR PF11
*  MSG LENGTH IS REDUCED TO ELIMINATE THE  'ETC..'
*
IMPLD    LA    WKB,DATX            SET UP
         LA    WKC,DATX-1(MSGLEN)  LAST CHAR PTR
         LA    WKD,8                SCAN START PTR
         LR    WKA,MSGLEN            AND COMMA
         BCTR  WKA,0
         CR    WKD,WKA               AND COMMA
         BNH   DSPLENOK               SCAN
         LR    WKD,WKA                 LENGTH
DSPLENOK SR    R2,R2              CLEAR FOR TRT FUNCTION CODE
         L     WKA,@TRTTAB        LOAD TRT TABLE @
         EX    WKD,TRTRANG        RANGE OR DELIMITER?
         BNZ   DELIMFND           NO
         TM    TIFLAGS,TIFVLOG    YES - VARY ,LOGON?
         BO    INVINP              YES - INVALID WITHOUT COMMA
         B     INSERTD             NO - GO INSERT 'D NET,ID='
DELIMFND LA    WKD,2              PRELOAD FINAL MSGLEN INCR
         LR    R15,R1             CALC
         LA    R0,DATX+1           NODENAME
         SR    R15,R0               LENGTH
         CH    R2,K1              RANGE NOTATION?
         BNE   DSPCOMMA           NO - MUST BE DELIM
         LA    R1,2(,R1)          YES - JUMP TO WHERE COMMA SHOULD BE
         LA    R15,2(,R15)         AND UPDATE NODENAME LENGTH
         CR    WKC,R1             PAST LAST CHAR?
         BNL   DSPCOMMA           NO
         LA    WKD,1              PRELOAD REVISED FINAL MSGLEN INCR
         B     DSPBLANK
DSPCOMMA CLI   0(R1),C','         COMMA?
         BNE   DSPBLANK           NO - BLANK OR OTHER DELIM
         LA    R1,1(,R1)          YES - JUMP COMMA
         TM    TIFLAGS,TIFVLOG    VARY ,LOGON?
         BZ    DSPLCHAR           NO
         CR    WKC,R1             YES - IS THIS LAST CHAR?
         BL    INVINP             YES
         B     INSERTD               AND GO DO VLOG INSERTION
DSPLCHAR CR    WKC,R1             IS THIS LAST CHAR?
         BNH   DSPFOLD            YES
         CLI   1(R1),C' '         NO - IS NEXT CHAR A BLANK?
         BNE   DSPBLANK           YES
DSPFOLD  MVI   HEX,C' '           NO - FOLD
         OC    HEX(1),0(R1)        NEXT CHAR
*              ONLY ABBREVIATION IS SUPPORTED HERE -
*                 FULL KEYWORD WOULD BE EDITED OUT
         CLI   HEX,C'E'           E FOR EVERY?
         BE    INSERTD            YES
         CLI   HEX,C'I'           I FOR INACT?
         BE    INSERTD            YES
         CLI   HEX,C'A'           A FOR ACT?
         BE    INSERTD            YES
         CLI   HEX,C'N'           N FOR NONE?
         BE    INSERTD            YES
*              DELIMITER BUT NO COMMA OR DELIMITER BUT END OF INPUT
DSPBLANK TM    TIFLAGS,TIFVLOG    VARY ,LOGON?
         BO    INVINP             YES - INVALID WITHOUT 2ND OPERAND
         LA    MSGLEN,0(WKD,R15)  NO - SET CORRECT LENGTH
*
INSERTD  LA    WKC,L'DISPLAY-1    IMPLICIT DISPLAY
         LA    WKA,DISPLAY         SET UP FOR CMD INSERTION
         B     INSERT
*
*
VALENT   CH    MSGLEN,K1           SINGLE CHARACTER INPUT?
         BNE   TRYREP              NO
         CLI   UPPER,C'K'          YES - IS IT KLEAR?
         BNE   TRYW                NO
         MVI   DATX,CLEAR          YES - FAKE CLEAR AID
         B     AIDSHORT             AND GO PROCESS IT
*
TRYW     CLI   UPPER,C'W'          IS IT W? (WRITE EOF TO LOG)
         BNE   INVINP              NO - TREAT AS INVALID
         TM    TISTATUS,TISMCAND   YES - MASTER CANDIDATE?
         BZ    INVCMD                NO - DENY
         CLOSE (VTAMLOGO)            YES - CLOSE,
         OPEN  (VTAMLOGO,OUTPUT)      AND RE-OPEN MOD
         SR    PARM@,PARM@         INIT PARM
         B     CLEARCAL            RE-INIT SCREEN
*
TRYREP   CLI   UPPER,C'R'          IS IT REPLY?
         BNE   NETCHK              NO
RCVREPLY TM    TISTATUS,TISMCAND   MASTER OR CANDIDATE?
         BZ    INVCMD              NO - DENY
         OI    TISTATUS,TISREPLY   YES - FLAG IT SINCE PPO ACB MUST BE
         B     VALCMD               USED FOR SENDCMD
*
NETCHK   CLC   NET,DATX+1          IS IT ' NET,'?
         BE    LONGFORM            YES - NO INSERTION NECESSARY
         MVC   TBUF(40),DATX+2         NO,
         MVC   DATX+9(33),TBUF          INSERT
         MVC   DATX+2(7),NETID           'NET,ID='
         LA    MSGLEN,L'NETID(,MSGLEN) INCREMENT LENGTH
         B     NAUTOCHK            GO CHECK FOR AUTO MODE
*
INSERT   LA    WKB,DATX+1(WKC) TARGET PTR FOR OPERAND MOVE
         MVC   TBUF(42),DATX MOVE CMD
         MVC   0(36,WKB),TBUF        OPERAND OVER
         EX    WKC,MVINSRT         INSERT CMD
         TM    TIFLAGS,TIFVLOG     VARY ,LOGON?
         BZ    INCRLEN             NO
*
         NI    TIFLAGS,255-TIFVLOG RESET FLAG
         MVI   DATX,X'A5'          CHANGE 'D' TO 'V' FOR VARY
         LR    WKD,MSGLEN          CALC
         SR    WKD,R15              LENGTH-1 OF
         SH    WKD,K2                REMAINDER FOR MOVE (IN WKD)
         BM    INVINP                 UNLESS NEGATIVE (NO REMAINDER)
         LA    WKB,2(R15,WKB)      CALC TARGET PTR FOR LOGON INSERT
         MVC   0(6,WKB),KLOGON     MOVE IN 'LOGON='
         LA    WKB,6(,WKB)         CALC TARGET PTR,
         LA    WKA,TBUF+1(R15)       LOAD SOURCE PTR AND
         EX    WKD,MVLOGINS          MOVE IN APPLID AND ANY OTHER DATA
         LA    MSGLEN,6(,MSGLEN)   INCREMENT LENGTH FOR LOGON=
*
INCRLEN  LA    MSGLEN,1(MSGLEN,WKC)      INCR LENGTH FOR NET INSERT
*
NAUTOCHK TM    TIFLAGS2,TIF2AUTO  NO-AUTO MODE?
         BZ    LONGFORM       NO
         LR    WKA,DA@        YES - JUST DISPLAY
         SH    WKA,K2          LONG FORM OF
         LA    WKB,6(,MSGLEN)   CMD IN INPUT AREA
         MVC   0(6,WKA),NULLM    FOR PERUSAL BEFORE ENTRY
         OI    TIFLAGS,TIFNAUT FLAG NO-AUTO RE-ENTRY OF EXPANDED CMD
         B     RCV32RMG
LONGFORM LR    WKA,MSGLEN         USE A WORK REG
         LA    WKC,L'TICMD        LOAD MAX LENGTH
         CR    WKA,WKC            TOO LONG?
         BNH   CLENOK             NO
         LR    WKA,WKC            YES - USE MAX
CLENOK   STH   WKA,TICMDLEN       SAVE CMD LENGTH IN TICB
         BCTR  WKA,0              DECREMENT LENGTH FOR MVC
         ST    WKA,RCVSAVE          AND SAVE IT
         EX    WKA,MVCMD          SAVE CMD IN TICB
         LA    WKC,DATX-1(WKA)    POINT TO CHAR BEFORE LAST
         LA    WKB,DATX+8         SET INPUT @ FOR RANGE CHECK
         LA    WKD,35             LOOP INDEX
RCVELOOP CLI   0(WKB),C'='        POSSIBLE NODENAME OPERAND?
         BNE   RCVNEQU            NO
         SH    WKB,K2             YES - IS IT
         CLC   0(2,WKB),=X'8984'   LOWERCASE 'ID='
         BE    RCVIDEQU           YES
         CLC   0(2,WKB),=C'ID'    UPPERCASE 'ID='
         BE    RCVIDEQU           YES
RCVNID   LA    WKB,2(,WKB)        INCR BACK TO '='
RCVNEQU  LA    WKB,1(,WKB)        INCR INDEX
         BCT   WKD,RCVELOOP       CHECK NEXT CHAR
         B     DCHK               NOT FOUND => ASSUME NO ID= FIELD
RCVIDEQU LA    WKB,3(,WKB)        JUMP 'ID='
*                                  (WKB POINTS TO NODENAME OPERAND)
RCVRCHK  LA    R1,1(,WKB)         POINT TO 2ND CHAR OF OPERAND
         SR    WKC,WKB            CALC. LENGTH REMAINING
         SR    R2,R2              CLEAR FOR TRT FUNCTION CODE
         L     WKA,@TRTTAB        LOAD TRT TABLE @
         EX    WKC,TRTRANG        RANGE OR DELIMITER?
         BZ    DCHK               NO
         CH    R2,K1              RANGE NOTATION?
         BNE   DCHK               NO - MUST BE DELIM
         LR    WKB,R1             YES - POINT WKB TO RANGE CHAR
         MVI   RANGEND,C' '        FOUND -
         OC    RANGEND(1),1(WKB)    SHIFT AND
         $CALL ATOX,RANGEND          CONVERT TO HEX IN R15
         LTR   RTNCD,RTNCD        IS IT GOOD?
         BM    INVINP             NO
         STH   R15,RANGEND        STORE AS BIN HALFWORD
         BCTR  WKB,0              BACK UP TO 1ST RANGE CHAR
         ST    WKB,RANGCHAR        AND STORE PTR
         LA    WKA,DATX           CALC
         AR    WKA,MSGLEN          REMAINING
         LA    WKD,4(,WKD)          CHARS AFTER
         SR    WKA,WKD               RANGE NOTATION
         BM    NOMVRANG           IF ANY,
         EX    WKA,MVRANG           SHIFT LEFT OVER '-N' CHARS
NOMVRANG SH    MSGLEN,K2          DECREMENT LENGTH ACCORDINGLY
         OI    POFLAGS,POFRANG    FLAG RANGE FORMAT IN EFFECT
DCHK     CLI   DATX,X'84' IS IT LOWERCASE 'D'?
         BE    FLAGD          YES
         CLI   DATX,C'D'      IS IT 'D'?
         BE    FLAGD          YES
         TM    TISTATUS,TISMCAND   MASTER OR CANDIDATE?
         BO    VALCMD              YES
*
INVCMD   LA    WKA,INVALM         SET UP FOR
         LA    WKB,INVALML         'INVALID FROM ........' MSG
         MVC   INVALTRM,TINAME    MOVE IN TNAME
         B     RCV32RMG           RETURN INVALID
INVINP   LA    WKA,INVALK         SET UP FOR
         LA    WKB,INVALKL         'INVALID INPUT' MSG
         B     RCV32RMG           RETURN INVALID
*
AIDPF1   EQU   INVINP             PREVIOUSLY CHECKED FOR
AIDPF3   EQU   INVINP             PREVIOUSLY CHECKED FOR
AIDPF9   EQU   INVINP             NO CODE YET
*
FLAGD    OI    TIFLAGS,TIFDSP FLAG FOR LOG SUPPRESSION (IN CASE NOT ON)
         OI    POFLAGS,POFDSP  AND SIGNAL DISPLAY TO SENDCMD LOOP
         TM    TIFLAGS,TIFDSP11  FLAGGED FOR LOGGING VIA PF11?
         BO    VALCMD            YES - LOG IT
         TM    TIFLAGS2,TIF2LOGD NO, FLAGGED FOR LOGGING VIA PF2/LOGD?
         BO    VALCMD            YES - LOG IT
         B     NAUTCHK           NO - DONT LOG IT
*
* PREPARE AND WRITE HARD COPY LOG RECORD.
*
VALCMD   L     WKA,RCVSAVE        EX LENGTH FOR MOVE
         LA    PARM@,DATX         SOURCE PTR FOR MOVE
         TM    POFLAGS,POFRANG    RANGE FORMAT?
         BZ    CMDLOG             NO
         LA    PARM@,TICMD        YES - USE ORIGINAL CMD FORMAT ON LOG
CMDLOG   $CALL PUTLOG,(PARM@),(WKA)  OUTPUT RECORD
NAUTCHK  TM    TIFLAGS,TIFNAUT    SUCCESSFUL NO-AUTO RE-ENTRY?
         BZ    RCV32OK            NO
         NI    TIFLAGS,255-TIFNAUT YES - RESET NO-AUTO RE-ENTRY FLAG,
         LH    WKB,TIABRLEN        THEN
         BCTR  WKB,0                SET UP
         EX    WKB,MVNAUTAB          NO-AUTO
         LA    WKB,L'NAUTM+1(,WKB)    RE-DISPLAY
         LA    WKA,NAUTM               OF ABBREV CMD
         LA    RTNCD,RCVCMDRS     SET CMD OK AND RESP MSG RETURN CODE
         B     RCV32RET
RCV32OK  LA    RTNCD,RCVCMDOK     SET CMD OK RETURN CODE
RCV32RET L     RPL@,RCVSAVE2      (RESTORE RPL @)
         $SRET
*
TERMEND  OC    DATX+6(3),BLANX FOLD DATA
         CLC   DATX+6(3),=C'ALL' TERMINATE NETOP?
         BNE   RCVNOCLS           NO
TERMALL  TM    TISTATUS,TISMCAND  MASTER OR CANDIDATE TERMINATION?
         BZ    INVCMD             NO - INVALID
         $CALL PUTLOG,CLOSMSG,*-1 OUTPUT REC
         OI    POSTATUS,POSCLSDN  INTERCEPT SOME CLOSE ERRORS    86355
         POST  ECBMAIN,0          YES - CLOSE DOWN
         LA    RTNCD,RCVCLOSD     SET CLOSEDOWN CODE
         B     RCV32RET           RETURN
*
RCVNOCLS TM    TISTATUS,TISMA     MASTER TERMINATION?
         BZ    TERMOK             NO
         $CALL MAFIND             YES - FIND ALT MASTER
TERMOK   $CALL CLSDST             CLSDST TERMINAL AND FREE TICB
         $CALL PUTLOG,OFFMSG,*-1  OUTPUT REC
RCV32CLD LA    RTNCD,RCVCLDST     RETURN WITH CLSDST CODE
         B     RCV32RET           RETURN
*
HELPOUT  XC    TILNCT,TILNCT      ZERO LINE COUNT
         NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
         OI    TIFLAGS,TIFWTROL   FLAG WAITING FOR ROLL
         TM    TIFLAGS,TIFHELP    PF2 HELP?
         BZ    HELPFLAG           NO
         L     WKA,@HELPM2        SET UP FOR
         LA    WKB,HELPML2         PF2 HELP MSG
         USING HELPM2,WKA
         $HELPF2 ROLL,AUTO,ECHO,SOLO,LOGD
         DROP  WKA
         B     RCV32RMG           RETURN RESPONSE MSG
HELPFLAG OI    TIFLAGS,TIFHELP    FLAG FOR SCREEN CLEAR AFTER HELP
         L     WKA,@HELPM         SET UP FOR
         LA    WKB,HELPML           HELP MSG
         B     RCV32RMG           RETURN RESPONSE MSG
*
MVCMD    MVC   TICMD(*-*),DATX       MOVE CMD INTO TICB
MVINSRT  MVC   DATX(*-*),0(WKA)      INSERT TEXT TO GIVE FULL CMD FMT
MVABR    MVC   TIABR(*-*),DATX       SAVE ABBR CMD
ORUP     OC    UPPER(*-*),DATX       FOLD UP TO 7 BYTES FOR CLC'S
MVNAUTAB MVC   NAUTABR(*-*),TIABR    MOVE ABBR INTO NAUTMSG
MVRANG   MVC   1(*-*,WKB),3(WKB)     SHIFT OVER RANGE NOTATION
IMPLRMV1 MVC   TBUF+5(*-*),0(WKB)    MOVE REPLY TEXT INTO TBUF
IMPLRMV2 MVC   DATX(*-*),TBUF        MOVE REPLY CMD BACK INTO DATX
PF2CLC   CLC   0(*-*,WKB),UPPER      COMPARE PF2 INPUT TO KEYWORDS
MVLOGINS MVC   0(*-*,WKB),1(WKA)     MOVE REMAINDER AFTER LOGON=
TRTRANG  TRT   0(*-*,WKB),0(WKA)     SEARCH FOR RANGE NOTATION OR DELIM
RCVSAVE  DS    F
RCVSAVE2 DS    F
         TITLE 'N E T O P - MGCR SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: MGCR                                                          *
*                                                                     *
* FUNCTION: TO ISSUE SVC 34 TO SEND AN OS COMMAND                     *
*                                                                     *
* ENTRY POINT: MGCR                                                   *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*              OS CMD BUFFER      PARM@                               *
*              SUBROUTINE RETURN  RET@                                *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        WKA,R0,RTNCD                                                 *
*                                                                     *
* CALLED BY: RCV3270, PUTLOG                                          *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
MGCR     $SINIT
         TM    POSTATUS,POSTEST    RUNNING UNDER TEST?
         BO    MGCRET              YES - IGNORE REQUEST
         LR    WKA,PARM@           SAVE CMD PTR
         MODESET KEY=ZERO          KEY ZERO FOR SVC 34
         SR    R0,R0               SET ORIGIN
         LR    PARM@,WKA            AND PARM @
         SVC   34                  ISSUE OS CMD
         MODESET KEY=NZERO         RESET KEY
MGCRET   $SRET                     RETURN
         TITLE 'N E T O P - TSOUID SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: TSOUID                                                        *
*                                                                     *
* FUNCTION: TO CONVERT A TSO USER APPLID INTO THE USERID OR TO        *
*           CONVERT A VTAM TSO USERID INTO A TERMINAL NAME            *
*                                                                     *
* DESCRIPTION:                                                        *
*        PARM=0 (CALL FROM RCV3270)                                   *
*              THE VTAM TSB CHAIN IS SEARCHED FOR ASCB->USERID,       *
*        COMPARING WITH THE INPUT COMMAND IN TIABR.  IF A MATCH IS    *
*        FOUND THE INPUT COMMAND IS REPLACED BY THE TERMINAL NAME     *
*        FROM THE TSB.  SUBSEQUENTLY, THE USERID IS INSERTED IN       *
*        THE REPLY MESSAGE BY SUBROUTINE RCVVTAM.                     *
*                                                                     *
*        PARM=APPL INDEX (CALL FROM RCVVTAM)                          *
*              THE VTAM TSB CHAIN IS SEARCHED FOR TSO APPLID.         *
*        IF A MATCH IS FOUND THE ASCB PTR IS RETURNED TO ALLOW MSG    *
*        IST082I TO BE REFORMATTED TO INCLUDE USERID AND ASID.        *
*                                                                     *
* ENTRY POINT: TSOUID                                                 *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*              PARM               PARM@                               *
*              TICB PTR           TICB@                               *
*              ISTDPOHD PTR       DA@                                 *
*              SUBROUTINE RETURN  RET@                                *
*                                                                     *
* OUTPUT:                                                             *
*         WHEN PARM@=0 -                                              *
*              RTNCD RETURNED AS 0=OK, 4=AWAITING RECON, 12=NOT FOUND *
*         WHEN PARM@>0 -                                              *
*              RTNCD RETURNED AS ZERO OR ASCB PTR                     *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*        WKA,WKB,WKC,WKD,RTNCD                                        *
*                                                                     *
* CALLED BY: RCVVTAM, RCV3270                                         *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
TSOUID   $SINIT
         SR    R9,R9                   ZERO RETURN REG
         LTR   WKA,PARM@               PARM = 0?
         BNZ   TSOGETZ                 NO
         LA    R9,RCVNRMSG         YES - SET DEFAULT UID NOT FOUND RC
TSOGETZ  MODESET KEY=ZERO              NECESSARY TO LOOK IN TSB
         LR    PARM@,WKA               RELOAD PARM
         L     WKA,CVTPTR              LOAD POINTER TO CVT
         USING CVTMAP,WKA              ESTABLISH ADDRESSABILITY TO CVT
         L     WKA,CVTTCASP            LOAD POINTER TO TCAS TABLE
         USING TCAST,WKA               ESTABLISH ADDRESSABILITY 2 TCAST
         ICM   WKA,15,TCASTSB   LOAD POINTER TO VTAM TSB TABLE   85245
         BZ    TSORET        NO TSO USERS ON                     85245
 ST WKA,TSOSAVEI
 XC TSOSAVEA(8),TSOSAVEA
*
         USING TSB,WKA                 ESTABLISH ADDRESSABILITY TO TSB
TSOLOOP  ICM   WKB,15,TSBEXTNT         GET ADDRESS OF TSB EXTENSION
         BZ    TSORET                  IF 0, RETURN (SHOULDNT BUT DOES)
 ST WKB,TSOSAVEB
         USING TSBX,WKB                ESTABLISH ADDRESSABILITY TO TSBX
         LTR   PARM@,PARM@             PARM > 0?
         BNZ   TSBTNAME                YES - TNAME COMPARE
         L     WKC,TSBASCBA             ELSE USERID COMPARE
         USING ASCB,WKC                ESTABLISH ADDRESSABILITY TO ASCB
         L     WKD,ASCBJBNS             AND PICK UP USERID PTR
         CLC   TIABR(7),0(WKD)         USERID MATCH?
         BNE   TSONXTSB                NO - GO ON TO NEXT TSB
         OI    TISTATUS,TISUID         YES - FLAG USERID FOUND
         LA    R9,RCVCMDOK             SET OK RC
         TM    TSBXFLG1,TSBXWREC       IS TERMINAL AWAITING RECON?
         BZ    TSOTRMID                NO
         LA    R9,RCVRMSG              YES - SET RESPONSE MSG RC
TSOTRMID MVC   DATX(8),TSBTRMID        COPY TERMINAL NAME
         MVC   TIABR+8(2),ASCBASID      AND ASID
         B     TSORET                  RETURN
*
TSBTNAME TM    TSBXFLG1,TSBXWREC       IS USER AWAITING RECON?
         BO    TSONXTSB                NO - GO ON TO NEXT TSB
         CH    PARM@,TSBXAIND          TCAS TERMINAL ID EQUAL?
         BNE   TSONXTSB                NO - GO ON TO NEXT TSB
         L     R9,TSBASCBA             NO - GET ASCB PTR
         B     TSORET                  YES
TSONXTSB ICM   WKA,15,TSBXFWD          NO - GET NEXT TSB PTR
 ST WKA,TSOSAVEA
         BNZ   TSOLOOP                 IF NON-ZERO, GO ANALYSE TSB
TSORET   MODESET KEY=NZERO             RESET KEY
         LR    RTNCD,R9                SET RETURN CODE
         $SRET                         RETURN
TSOSAVEI DS F
TSOSAVEA DS F
TSOSAVEB DS F
         DROP  WKA,WKB,WKC
         TITLE 'N E T O P - CLSDST A TERMINAL'
***********************************************************************
*                                                                     *
* NAME: CLSDST                                                        *
*                                                                     *
* FUNCTION: TO ISSUE A CLSDST AND FREE THE ASSOCIATED TICB.           *
*                                                                     *
* ENTRY POINT: CLSDST                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              RPL ADDRESS               RPL@                         *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,RTNCD                           *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: UNSTACK TO UNSTACK AND DELETE MESSAGES WHEN TERMINAL IN      *
*                WAIT-FOR-ROLL CONDITION.                             *
*                                                                     *
* CALLED BY: RCV3270,LOGON,LOSTERM,RELREQ                             *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
CLSDST   $SINIT
CLSCLS   CLSDST RPL=(RPL@),AREA=0,OPTCD=(RELEASE,SYN)
         LTR   RTNCD,RTNCD        OK?
         BZ    CLSFREE            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    CLSCLS              THEN RETRY
*
* FREE TICB ALLOCATED TO TERMINAL.
*
CLSFREE  TM    TISTATUS,TISNOMOR  REJECTED DUE TO NO MORE TICBS?
         BO    CLSRET             YES - NOTHING TO FREE
         TM    TISTATUS,TISTACK   NO - STACK OPEN?
         BZ    CLSINCRF             NO
         OI    POFLAGS,POFSTDEL     YES - FLAG FOR DELETE
         $CALL UNSTACK               AND GO DO IT
CLSINCRF LH    WKA,TICBFCT        INCREMENT
         LA    WKA,1(,WKA)          FREE
         STH   WKA,TICBFCT            COUNT
         TM    TISTATUS,TISMCAND  MASTER OR CANDIDATE TERMINATION?
         BZ    CLSCLEAR           NO
         LH    WKA,TICBMCCT       YES - DECREMENT
         SH    WKA,K1               MASTER CANDIDATE
         STH   WKA,TICBMCCT           COUNT
CLSCLEAR XC    TINDICS,TINDICS    CLEAR INDICATORS
         C     TICB@,TICBLACT     HIGHEST TICB @?
         BNH   CLSRET             NO
         LA    WKA,TICBLEN        YES -
         LA    WKB,NETPTICB        BACK UP
CLSBACK  SR    TICB@,WKA            TO PREVIOUS ACTIVE TICB @
         CR    TICB@,WKB          NETOP TICB @ ?
         BE    CLSRET
         TM    TISTATUS,TISACT    ACTIVE TICB @ ?
         BZ    CLSBACK            NO - GO BACK FURTHER
         ST    TICB@,TICBLACT     YES - SAVE NEW HI-WATER MARK
CLSRET   $SRET                RETURN
         TITLE 'N E T O P - ALPHA HEX TO BINARY HEX CONVERSION'
***********************************************************************
*                                                                     *
* NAME: ATOX                                                          *
*                                                                     *
* FUNCTION: TO CONVERT A CHARACTER CODE HEX BYTE TO 4 BITS.           *
*           (COULD HAVE USED TR INST. BUT SHORT OF TABLE SPACE)       *
*                                                                     *
* ENTRY POINT: ATOX                                                   *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              POINTER TO CHARACTER      PARM@                        *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTERS AT EXIT:                                                  *
*                                                                     *
*              BINARY HEX VALUE          RTNCD (R15)                  *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     RTNCD,R0                            *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: INBOUND,OUTBOUND                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
ATOX     $SINIT
         SR    RTNCD,RTNCD    PICK UP
         IC    RTNCD,0(,PARM@) CHARACTER HEX
         TM    0(PARM@),X'F0' NUMERIC?
         BO    ATOXNUM        YES
         MVI   ATOXWK,C' '    NO - FOLD
         OC    ATOXWK,0(PARM@) POSSIBLE ALPHA CHAR
         CLI   ATOXWK,C'A'    LESS THAN 'A'?
         BL    ATOXINV        YES - INVALID
         CLI   ATOXWK,C'F'    GREATER THAN 'F'?
         BNH   ATOXCHAR       NO - GOOD HEX CHAR
ATOXINV  LH    RTNCD,ATOX+4   NEITHER - RETURN NEGATIVE VAL
         B     ATOXRET
ATOXCHAR LA    RTNCD,X'39'(,RTNCD)  NO - INCREMENT TO X'FA' - X'FF'
ATOXNUM  LA    R0,X'0F'       AND OFF
         NR    RTNCD,R0        HI-ORDER 4 BITS
ATOXRET  $SRET                RETURN HEX VAL IN R15
ATOXWK   DS    X              WORK AREA
         TITLE 'N E T O P - ALTERNATE MASTER TICB SEARCH'
***********************************************************************
*                                                                     *
* NAME: MAFIND                                                        *
*                                                                     *
* FUNCTION: TO SEARCH TICBS FOR ACTIVE MASTER CANDIDATE TO REPLACE AN *
*        ENDED, LOST OR REQUESTED MASTER TERMINAL.                    *
*                                                                     *
* DESCRIPTION: IF AN ACTIVE CANDIDATE IS FOUND IT IS MARKED MASTER,   *
*        OTHERWISE THE MAINLINE IS POSTED TO CLOSE THE PPO ACB TILL   *
*        ANOTHER MASTER CANDIDATE LOGS ON.                            *
*                                                                     *
* ENTRY POINT: MAFIND                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              POINTER TO TICB           TICB@                        *
*              RETURN ADDRESS IN EXIT    RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              POINTER TO RPL     RPL@                                *
*              POINTER TO TICB    TICB@                               *
*              POINTER TO NIB     NIB@                                *
*              WORK REGISTERS     WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              RETURN             RET@                                *
*                                                                     *
* EXIT,NORMAL: BR RET@                                                *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: RELREQ, LOSTERM AND INBOUND(WITH PF3) EXITS              *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
*                                                                     *
MAFIND   $SINIT
         L     WKB,@ACBPPO        SET UP BASE FOR ACB
         TM    ACBOFLGS-IFGACB(WKB),ACBOPEN  IS IT OPEN?
         BZ    MARET              IF NOT FORGET SEARCH
         LA    DA@,TBUF          TEMP ISTDPOHD FOR STAT TEST
         NI    POHSTAT,255-POHGEN     TURN OFF SOLICITED FLAG
*        DROP  DA@
         ST    TICB@,MASAVE   SAVE CURRENT TICB PTR
         $CALL IDFIND,0       BUILD TICB LIST OF MASTER CANDIDATES
         LTR   RTNCD,RTNCD    FIND ANY?
         BNZ   NONEWMA        NO - CLOSE PPO AND USE SPO
         LA    WKB,TICBLIST   LOAD INDEX REG
MAFLOOP  CLC   @MATICB+1(3),1(WKB) IS THIS MASTER TICB @?
         BNE   NEWMAFND       NO - MAKE IT NEW MASTER
         TM    0(WKB),LASTPARM LAST TICB IN LIST?
         BO    NONEWMA        YES - NO ALTERNATE MASTER FOUND
         LA    WKB,4(,WKB)    NO - INCREMENT INDEX
         B     MAFLOOP         AND TRY NEXT TICB
*
NEWMAFND L     TICB@,0(WKB)    CHANGE NEW
         ST    TICB@,@MATICB    MASTER TICB @
         OI    TISTATUS,TISMA     SET MASTER BIT IN TICB
         MVC   NTP1NODE,TINAME INFORM OPERATOR
         $CALL PUTLOG,NTP01MSG OF CHANGE IN MASTER
         B     MATICBR         RETURN
*
NONEWMA  NI    POSTATUS,255-POSHVMA RESET 'HAVE MASTER' FLAG
         POST  ECBMAIN,2      POST CLOSE OF PPO ACB
MATICBR  L     TICB@,MASAVE   RESTORE CURRENT TICB PTR
MARET    $SRET
*
MASAVE   DS    F
         TITLE 'N E T O P - IDFIND SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: IDFIND                                                        *
*                                                                     *
* FUNCTION: TO DETERMINE, FROM THE PO HEADER, WHAT TERMINAL A         *
*        MESSAGE IS TO GO TO.                                         *
*                                                                     *
* DESCRIPTION: IF MESSAGE GENERATED BY VTAM, RETURNS LIST OF          *
*        MASTER TERMINAL TICB'S. IF MESSAGE GENERATED BY PO, SEARCHES *
*        TICBPOOL FOR AN ACTIVE TERMINAL WITH THE ID IN THE PO        *
*        HEADER. IF FOUND, RETURNS THE ADDRESS OF THAT TICB. IN ANY   *
*        CASE, INDICATES IN THE RETURN CODE WHETHER DESTINATION WAS   *
*        DETERMINED OR NOT.                                           *
*                                                                     *
* ENTRY POINT: IDFIND                                                 *
*                                                                     *
* INPUT REGISTERS:                                                    *
*                                                                     *
*            PARM                 PARM@   0=SELECT  1=ALL TICBS       *
*            ADDRESS OF ISTDPOHD  DA@                                 *
*            SUBROUTINE RETURN    RET@                                *
*        OTHERS IGNORED                                               *
*                                                                     *
* OUTPUT: TICBLIST CONTAINS APPROPRIATE TICB PTRS                     *
*        RETURN CODE IN REGISTER 15:  0 = FOUND                       *
*                                     4 = NOT FOUND                   *
*                                                                     *
*        REGISTERS CHANGED:                                           *
*                                                                     *
*              ADDRESS OF TICB    TICB@                               *
*              WKA,WKB            USED AS WORK REGISTERS              *
*              RTNCD              CONTAINS RETURN CODE                *
*                                                                     *
* CALLED BY: OUTBOUND                                                 *
*                                                                     *
* EXIT, NORMAL: BR 10                                                 *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*        SUBROUTINE INTERNAL TO OUTBOUND EXIT                         *
*                                                                     *
***********************************************************************
*
IDFIND $SINIT
*
* SEARCH TICB POOL FOR ACTIVE TICB WITH THIS ID.
*
         SR    RTNCD,RTNCD        ZERO ORIGIN TICB INDICATOR
         LA    WKD,TICBLIST-4     SET TICBLIST INDEX
         LR    R0,WKD             SAVE FOR COMPARISON
IDSTART  LA    TICB@,TICBS+TICBLEN  LOOP INDEX (IGNORE NETOP TICB)
         LA    WKA,TICBLEN        INCREMENT
         L     WKB,TICBLACT       COMPARAND - LAST ACTIVE TICB
IDLOOP   TM    TISTATUS,TISACT    IS TERMINAL ACTIVE?
         BZ    IDTEST             NO - FORGET THIS ONE
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BE    IDMCHK             YES
         TM    POSTATUS,POSECHO   NO - SHOULD THIS MSG BE ECHOED?
         BZ    IDSOLCHK             NO
         TM    TIFLAGS2,TIF2ECHO  SUPPRESS ECHOING TO THIS TERMINAL?
         BO    IDTEST             YES - BYPASS THIS TICB
         CR    TICB@,RTNCD        IS THIS THE ORIGIN TICB?
         BE    IDTEST               YES - BYPASS (ALREADY IN TICBLIST)
         B     IDMCHK
IDSOLCHK TM    POHSTAT,POHGEN       NO - SOLICITED MESSAGE?
         BO    IDSOLC                 YES
         LTR   PARM@,PARM@        PARM > 0 (BROADCAST)
         BNZ   IDUSE              YES - SEND TO ALL TERMINALS
         TM    TIFLAGS2,TIF2SOLO  ONLY SOLICITED MSGS TO TERMINAL?
         BO    IDTEST             YES - BYPASS THIS TICB
IDMCHK   EQU   *                  ECHO UNSOLICITED MSGS TO ALL TERMS
*DMCHK   TM    TISTATUS,TISMCAND  IS TERMINAL MASTER CANDIDATE?
*        BZ    IDTEST             NO
IDUSE    LA    WKD,4(,WKD)        YES - UPDATE TICBLIST INDEX
         ST    TICB@,0(WKD)       SAVE PTR IN TICBLIST
         B     IDTEST
IDSOLC   CLC   POHTID,TID         ID = TICB ID?
         BNE   IDTEST             NO - TRY NEXT TICB
*
*        IF MCANDT NON-DISPLAY RESPONSE, ECHO TO ALL MCANDTS
*
         TM    TIFLAGS,TIFDSP     RESP. TO DISPLAY CMD?
         BO    IDFOUND            YES
         CLC   TICBMCCT,K1        ONLY 1 MASTER LOGGED ON?
         BNH   IDFOUND            YES - NOBODY TO ECHO TO
         OI    POSTATUS,POSECHO   NO - FLAG THIS MSG TO BE ECHOED,
         MVC   DUMTICB(TICOPYL),TICB  COPY PARTIAL TICB
         LR    RTNCD,TICB@         SAVE ORIGIN @
         ST    TICB@,@ECHTICB       IN
         ST    TICB@,TICBLIST        3 PLACES
         LA    TICB@,DUMTICB       POINT TO COPY
         LA    R1,IDSTART         SET CONTINUE ADDRESS
IDINSCHG LH    WKA,TICMDLEN        GET CMD LEN
         LH    WKD,TINAMLEN         INCR BY NODENAME LEN,
         LA    WKB,4(WKD,WKA)       AND ' => '
         CH    WKB,=H'40'          LENGTH > TICMD AREA?
         BNH   IDSTCMDL            NO
         LH    WKB,=H'40'          YES - USE MAX LENGTH
IDSTCMDL STH   WKB,TICMDLEN        STORE IN TICB
         LA    WKB,TICMD(WKD)      POINT AFTER NODENAME INSERT AREA
         SH    WKA,K1              DECR CMD LEN
         BNM   IDMV1               IF < 0,
         SR    WKA,WKA              RESET TO 0
IDMV1    EX    WKA,IDMVCMD1        MOVE OUT CMD
         SH    WKD,K1              DECR NODENAME LEN
         BNM   IDMV2               IF < 0,
         SR    WKD,WKD              RESET TO 0
IDMV2    EX    WKD,IDMVNAM         MOVE IN NODENAME, FOLLOWED BY
         MVC   0(4,WKB),=C' => '     ARROW, THEN
         EX    WKA,IDMVCMD2        MOVE BACK CMD PAST INSERT
         LA    WKD,TICBLIST        POINT AFTER ORIGIN TICB FOR RESCAN
         BR    R1                 THEN GO REGENERATE TICB LIST IF ECHO
*                                  OR RETURN IF INTCMD RESPONSE
IDTEST   BXLE  TICB@,WKA,IDLOOP   LOOP BACK TILL ALL ACT TICBS CHECKED
         CR    R0,WKD             ANY TICBS FOUND?
         BE    IDNFOUND           NO
         OI    0(WKD),LASTPARM    YES - FLAG LAST TICB @
         TM    POHSTAT,POHGEN     SOLICITED MESSAGE?
         BO    IDSOLOK            YES
         LA    TICB@,VTAMTICB     NO - USE VTAM TICB SO LOG LOOKS GOOD
         B     IDRET
IDSOLOK  L     TICB@,0(WKD)       YES - PUT LAST TICB FOUND IN TICB@
         CLI   POHTID,0           RESP TO NETOP INTCMD?
         BNE   IDORGCHK           NO
         LA    WKA,NETPTICB       YES -
         MVC   TIFLAGS-TICB(1,WKA),TIFLAGS  COPY FLAGS
         LR    TICB@,WKA          PUT NETOP TICB @ IN TICB@
         LA    R1,IDRET0          SET CONTINUE ADDRESS
         CLC   TINAME(5),TICMD    'NETOP => ' ALREADY INSERTED?
         BNE   IDINSCHG           NO - GO INSERT ORIGIN IN TICMD
         B     IDRET0             YES - RETURN
IDORGCHK LTR   RTNCD,RTNCD        ORIGIN TICB @ SAVED?
         BZ    IDRET0             NO
         LR    TICB@,RTNCD        YES - PUT ORIGIN TICB @ IN TICB@
         B     IDRET0
IDNFOUND TM    POHSTAT,POHRREQ    IS REPLY REQUESTED
         BZ    IDRET4             NO
         TM    POSTATUS,POSHVMA   IS THERE A MASTER?
         BO    IDEFAULT           YES - USE IT
IDRET4   LA    RTNCD,4            NO - RETURN NOT FOUND
         B     IDRET              RETURN
IDEFAULT L     TICB@,@MATICB      DEFAULT IS MASTER
IDFOUND  ST    TICB@,TICBLIST
         OI    TICBLIST,LASTPARM   FLAG LAST TICB PTR
IDRET0   SR    RTNCD,RTNCD        INDICATE FOUND
IDRET    $SRET                    RETURN
*
IDMVCMD1 MVC   TBUF(*-*),TICMD MOVE CMD OUT
IDMVCMD2 MVC   4(*-*,WKB),TBUF MOVE CMD BACK IN
IDMVNAM  MVC   TICMD(*-*),TINAME  INSERT SOURCE NODENAME
         TITLE 'N E T O P - MESSAGE LOG SUBROUTINE'
***********************************************************************
*                                                                     *
* ENTRY: PUTLOG                                                       *
*                                                                     *
* FUNCTION: TO TIME STAMP AND ISSUE LOG MESSAGES                      *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              EX LENGTH,  MESSAGE PTR             PARM@              *
*                 LENGTH IS BYTE 0  (IF ZERO, WTO ASSUMED)            *
*                 MSG PTR IS BYTES 1-3                                *
*              RETURN ADDRESS IN EXIT              RET@               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,WKB,WKD (WKC AVOIDED - ACB@)    *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: EVERYONE, MOSTLY                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
PUTLOG   $SINIT
         LR    WKA,PARM@      SAVE PARM
*
*        I/O TO VTAMLOGO HAS BEEN DISABLED SINCE WE ARE GETTING A 001
*        ABEND THAT I DON'T HAVE TIME TO FIX. ALL MESSAGES ARE
*        WRITTEN TO SYSLOG AND ARE AVAILABLE USING QUEUE.
*
*        PUT   VTAMLOGO       GET BUFFER PTR (DISABLED)
         LA    R1,LOGBUF      SET UP R1 WITH BUFFER ADDR (EQU PUT)
         LR    LOG@,R1        SAVE IT
         USING LOGREC,LOG@
         LR    PARM@,WKA      RESTORE PARM
PUTCLR   MVI   LOGASA,C' '    SINGLE SPACING
         MVC   LOGWTLHD,BLANX CLEAR WTL PAD (FOR SYSLOG READABILITY)
         MVC   LOGBL1,BLANX   CLEAR
         MVC   LOGBL2,BLANX    PREFIX
         STCM  PARM@,8,HEX    STORE LENGTH BYTE
         SR    WKA,WKA        INSERT
         ICM   WKA,1,HEX       LENGTH
         BZ    PUTWTO         IF ZERO, ASSUME WTO BUFFER
         C     WKA,=AL4(133-(LOGPRFL+1)) MAX RECORD LENGTH?
         BNH   *+12           NO => USE SPECIFIED LENGTH
         L     WKA,=AL4(133-(LOGPRFL+2)) YES=>SET MAX LENGTH - 1
         MVI   LOGCONT,C'+'         AND SET TRUNCATE CHAR IN RECORD
         MVC   LOGNODE,TINAME INSERT TERMINAL NAME
         EX    WKA,PUTLOGMV   MOVE MSG TO LOG OUTPUT AREA
         LA    WKA,LOGPRFL+1(WKA)  CALC RDW LL VALUE
         B     PUTRDW         GO STORE IN LOGREC
*
PUTWTO   LH    WKA,0(PARM@)   PICK UP LENGTH
         LR    WKB,WKA        COPY IT
         SH    WKB,K5         REDUCE BY WTO PREFIX LENGTH +1 FOR EX
         EX    WKB,PUTWTOMV   MOVE MSG TO LOG OUTPUT AREA
         WTO   MF=(E,(1))     DO WTO (OR TPUT)
         OI    POFLAGS,POFWTO FLAG WTO DONE FOR WTL CHECK
         LA    WKA,LOGTIML(WKA)  CALC RDW LL VALUE
*
PUTRDW   SLL   WKA,16         SHIFT TO HI END
         ST    WKA,LOGRDW     STORE IN RDW
         TIME
         SRL   R0,4           NO CENTISECS
         STM   R0,R1,WORK     STORE TIME AND DATE
         OI    WORK+3,X'0F'   OVERLAY DECISECS WITH VALID SIGN
         MVC   TBUF(10),=X'402120204B21204B2120'
         ED    TBUF(10),WORK  EDIT TIME FIELD
         MVC   LOGTIME,TBUF+2 MOVE TIME TO LOG MSG
         MVC   SENDTIME,TBUF+2 MOVE TIME TO MSG
PUTLNCT  LH    WKA,LOGLN#     INCREMENT
         LA    WKA,1(,WKA)     LINE COUNT
         CH    WKA,PAGESIZE   END OF PAGE?
         BL    PUTNPAGE       NO
         MVI   LOGASA,C'1'    YES - SET ASA FOR SKIP,
         L     WKD,LOGHDR     GET FULL LENGTH RDW
         LR    WKA,WKD        COPY IT
         SRL   WKA,16         SHIFT TO LO HALF
         SH    WKA,LOGRDW     CALC REMAINING LENGTH
         SH    WKA,K12        SUBTRACT 10 FOR DATE TEXT AND 2 FOR EX
         BM    PUTLNCT1       <0 => WILL OVERLAY MSG DATA => SKIP DATE
         LR    WKB,LOG@       CALCULATE START OF
         AH    WKB,LOGRDW      UNCLEARED AREA
         ST    WKD,LOGRDW     STORE NEW RDW IN BUFFER
         MVI   0(WKB),C' '    CLEAR
         EX    WKA,PUTCLRMV    REMAINDER OF RECORD
         MVC   LOGDLIT,=C'DATE '  ADD DATE
         UNPK  LOGDATE,DATE+1(3)   FIELD TO RECORD
PUTLNCT1 LH    WKA,LOGPG#     INCREMENT
         LA    WKA,1(,WKA)     PAGE COUNT
         CH    WKA,EOFPGCNT   TIME TO WRITE EOF?
         BL    PUTPGCNT       NO
         CLOSE (VTAMLOGO)     YES - CLOSE,
         OPEN  (VTAMLOGO,OUTPUT)  AND RE-OPEN MOD
         SR    WKA,WKA        ZERO PAGE COUNT
PUTPGCNT STH   WKA,LOGPG#     SAVE NEW PAGE COUNT
         SR    WKA,WKA        ZERO LINE COUNT
PUTNPAGE STH   WKA,LOGLN#     SAVE NEW LINE COUNT
         PUT   SYSPRINT,(LOG@)  PRINT RECORD FROM VTAMLOGO BUFFER
         TM    POSTATUS,POSSEND SEND TO TSO USERS?
         BZ    PUTDTCHK       NO
         NI    POSTATUS,255-POSSEND YES - RESET FLAG,
         AIF   ('&SENDLST' EQ '').NONSEND
         MVC   SENDUTXT,LOGTXT       MOVE TEXT TO CMD BUFFER
         $CALL MGCR,SENDUBUF          AND SEND IT
.NONSEND ANOP  ,
PUTDTCHK CLC   DATE+3(1),WORK+7  HAS DATE CHANGED?
         BE    PUTWTL            NO - CONTINUE
         MVC   DATE+1(3),WORK+5  YES - SAVE NEW DATE
         CLI   STTIME,X'22'   ARE THERE MORE THAN 2 HOURS OF LOG?
         BNL   PUTWTL         NO - DONT BOTHER TO SPINOFF
         $CALL PRLOG          YES - RE-INITIALIZE LOG, SPINOFF SYSPRINT
*
*         FOLLOWING CODE SUPPORTS WTL FUNCTION
*
PUTWTL    TM    POFLAGS,POFWTO WTO ALREADY DONE?
          BO    PUTWTLSK       YES - SKIP WTL
          WTL   MF=(E,LOGREC) WRITE TO LOG
PUTWTLSK  NI    POFLAGS,255-POFWTO  RESET FLAG
PUTRET   $SRET                   RETURN
*                                                                     *
PUTLOGMV MVC   LOGMSG(*-*),0(PARM@)
PUTWTOMV MVC   LOGNODE(*-*),4(PARM@)
PUTCLRMV MVC   1(*-*,WKB),0(WKB)
         TITLE 'N E T O P - SYSPRINT ALLOC,OPEN,CLOSE'
***********************************************************************
*                                                                     *
* ENTRY: PRLOG                                                        *
*                                                                     *
* FUNCTION: TO INITIALIZE OR RE-INITIALIZE SYSPRINT                   *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              RETURN ADDRESS IN EXIT              RET@               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGISTERS     WKA,WKB                             *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: ABEND                                                  *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: MAINLINE, PUTLOG                                         *
*                                                                     *
* ATTRIBUTES: INTERNAL SUBROUTINE                                     *
*                                                                     *
***********************************************************************
PRLOG    $SINIT
         TM    SYSPRINT+48,X'10' SYSPRINT OPEN?
         BZ    PRLOGOAL        NO
         CLOSE (SYSPRINT)      YES - CLOSE TO SPINOFF AND REALLOC
         CLOSE (VTAMLOGO)      CLOSE, THEN RE-INITIALIZE -
         XC    WORK,WORK       CLEAR AND
         MVC   WORK+6(2),DATE+2 MOVE IN DAY #
         CVB   WKA,WORK        CONVERT
         D     WKA,K2          DIVIDE BY 2
         LTR   WKA,WKA         IF REMAINDER ZERO,
         BZ    PRLOPENV         GO RE-OPEN DISP=MOD
         OPEN  (VTAMLOGI,OUTPUT) ELSE RE-OPEN VTAMLOG DISP=OLD
         CLOSE (VTAMLOGI)      CLOSE TO WRITE EOF
         B     PRLOPENV        GO RE-OPEN DISP=MOD
*                              MUST BE INITIALIZATION
PRLOGOAL $DYNAL LGOTUPF,VERB=2 FREE F(VTAMLOGO)
         $DYNAL LGOTUP,VERB=1 ALLOC F(VTAMLOGO) DA('SYS1.VTAMLOG') MOD
         BZ    PRLOGIAL       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOGIAL            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOGIAL $DYNAL LGITUP,VERB=1 ALLOC F(VTAMLOGI) DA('SYS1.VTAMLOG')
         BZ    PRLOPENV       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOPENV            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOPENV OPEN  (VTAMLOGO,OUTPUT) OPEN VTAMLOG DISP=MOD
         TM    VTAMLOGO+48,X'10' LOG OPEN?
         BZ    PRLNOPEN        NO
         $DYNAL PRTUP,VERB=1  ALLOC F(SYSPRINT) SYSOUT(A) (FREE=CLOSE)
         BZ    PRLOPENS       YES
         CLC   S99ERROR,=X'0410' NO - DDNAME ALREADY IN USE?
         BE    PRLOPENS            YES - ASSUME OK
         $AB   99                  NO - ABEND
PRLOPENS OPEN  (SYSPRINT,OUTPUT)
         TM    SYSPRINT+48,X'10' OK?
         BO    PRLHDR          YES
         MVC   NTP08DDN,SYSPRINT+40  MODIFY DDNAME IN MSG
PRLNOPEN WTO   MF=(E,NTP08MSG)   INFORM OPERATOR
         $AB   19,NODUMP         AND ABEND U19
PRLHDR   UNPK  LOGHDRDT,DATE+1(3) MOVE DATE TO HEADER
         PUT   SYSPRINT,LOGHDR   PRINT HEADER
         PUT   SYSPRINT,LOGSKP    AND SKIP 2 LINES
         MVC   LOGLN#,K3      SET LINE COUNT
*
*        VTAMLOGO HAS BEEN DISABLED
*
*        PUT   VTAMLOGO       GET BUFFER PTR
*        MVC   0(125,R1),LOGHDR  INSERT HEADER
PRLRET   $SRET
         TITLE 'N E T O P - SND3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: SND3270 SUBROUTINE                                            *
*                                                                     *
* FUNCTION: INSERT 3270 ORDERS INTO A MESSAGE FROM VTAM. UPDATE       *
*        THE SCREEN LINE POINTER, SEND MESSAGE TO MULTIPLE TERMINALS. *
*                                                                     *
* DESCRIPTION: THIS ROUTINE MOVES THE MESSAGE TEXT TO SENDTXT AND     *
*            AND INSERTS THE 3270 ORDERS INTO SENDORDR.               *
*            THIS ROUTINE USES A TABLE OF SCREEN ADDRESSES AT         *
*            LABEL LINE1 TO MAINTAIN A ROLLING OUTPUT AREA OF LINEMAX *
*            LINES AND UPDATES THE CURRENT OUTPUT LINE POINTER        *
*            TILNCT IN THE TICB.  IF IN NOROLL MODE, STACK IS CALLED  *
*            TO STACK THE LINE.  WHEN A PA KEY IS EVENTUALLY HIT,     *
*            RCV3270 CALLS UNSTACK WHICH IN TURN CALLS SND3270 FOR    *
*            EACH LINE UNTIL A FULL SCREEN CONDITION ARISES OR ALL    *
*            STACKED LINES ARE DISPLAYED.                             *
*                                                                     *
* ENTRY POINT: SND3270                                                *
*                                                                     *
*       AT ENTRY:                                                     *
*                                                                     *
*              TICBLIST CONTAINS TICB PTRS TO TARGET TERMINALS        *
*              ISTDPOHD OR STKEL CONTAINS MSG                         *
*              MSGLEN CONTAINS LENGTH-1                               *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              BASE FOR TICB      TICB@                               *
*              ADDRESS OF ISTDPOHD  DA@                               *
*              MSG LENGTH-1       MSGLEN                              *
*              WORK REGS          WKA,WKB                             *
*              SUBROUTINE RETURN  RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 4                                                   *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: STACK TO STACK MESSAGES WHEN TERMINAL IN WAIT-FOR-ROLL COND. *
*                                                                     *
* CALLED BY: OUTBOUND EXIT, UNSTACK                                   *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
SND3270 $SINIT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING (SET IN UNSTACK)
         PRINT NOGEN
         MODCB AM=VTAM,       SET UP RPL FOR SEND(S)                   *
               RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               POST=SCHED,                                             *
               OPTCD=SYN,                                              *
               RESPOND=(EX,FME,NRRN)
         PRINT NOGEN
         ST    MSGLEN,SNDSAVE     SAVE LENGTH
         SR    TICB@,TICB@        ZERO HI BYTE
         LA    OUTX,TICBLIST-4    SET UP INDEX
SNDLOOP  LA    OUTX,4(,OUTX)      INCREMENT TICBLIST INDEX
         ICM   TICB@,7,1(OUTX)    GET 1ST TICB PTR
         BZ    SNDEND             RETURN IF NO TICB PTRS
         L     MSGLEN,SNDSAVE     RESTORE CURRENT MSG LEN
         TM    POSTATUS,POSMLTSN  MULTIPLE SEND?
         BZ    SNDNMLT            NO
         TM    POSTATUS,POSINSRT  ACCEPTED/FAILED MSG?
         BZ    SNDSETA            NO - DONT INSERT
         TM    POSTATUS,POSECHO   ECHOED RESPONSE?
         BO    SNDECHO            YES - GO DO INSERTION
         B     SNDSETA            NO - BYPASS MSG EDIT AND MOVE
SNDNMLT  MVC   SENDAT2(4),UNSENDAT  RE-INIT ATTRS
         MVI   SENDAT1,LO         INIT LO-INTENS ATTR
         MVI   SENDTXT,C' '       CLEAR SEND RECORD TO BLANKS
         MVC   SENDTXT+1(L'SENDTXT-1),SENDTXT
         TM    POFLAGS,POFUNSTK   UNSTACKING?
         BZ    SNDLCHK            NO
         LA    WKD,UNSENDSL-1     YES - (UNSTACK RETURNS L-1)
         CR    WKD,MSGLEN             UNSEND TYPE MSG?
         BNE   SNDSTOK                NO
         MVC   UNSENDTM(UNSENDSL),STKDATA  YES - MOVE IN STACKED MSG
         MVC   UNSENDAD,SENDADDR   AND LAST USED ADDR
         MVC   TIUNADDR,SENDADDR  SAVE FOR 1ST NONSTACK UNSOL REPEATER
         LA    WKA,UNSEND         LOAD MSG PTR
         LA    WKB,UNSENDL        LOAD MSG LENGTH
         B     SNDSEND             AND SEND TO SAME LINE ON SCREEN
SNDSTOK  EX    MSGLEN,SNDMV2      MOVE MSG FROM STACK AREA
         B     SNDSETA
*
SNDLCHK  LA    WKA,L'SENDTXT      COMPARE WITH
         CR    MSGLEN,WKA          TEXT AREA LENGTH
         BL    SNDMVMG            IF LOW, OK
         BE    SNDMVDSH           IF HI,
         LA    MSGLEN,1(,WKA)      USE MAX LENGTH
SNDMVDSH MVC   SENDAT2+1,=C' --'  BLANK ATR2, DASH SF,ATR3
SNDMVMG  EX    MSGLEN,SNDMV1      COPY MESSAGE INTO SND3270 BUFFER
         TM    POHSTAT,POHGEN     SOLICITED?
         BO    SNDHICK            YES
         MVI   SENDAT1,HI         SET HI-INTENS ATTR
         B     SNDSETA
SNDHICK  TM    POFLAGS,POFHINT    MAKE THIS ONE HI INTENSITY?
         BZ    SNDCLIN            NO
         MVI   SENDAT1,HI         YES - SET HI-INTENS ATTR
         NI    POFLAGS,255-POFHINT  AND RESET FLAG
SNDCLIN  CLC   DAMSGRSP,=C'ACCEPT' IST097 ....  ACCEPTED MSG?
         BE    SNDINS1            YES
         TM    TIFLAGS,TIFDSP     DISPLAY IN PROGRESS?
         BZ    SNDSETA            NO
         CLC   DAMSGFAI,=C'IGNORE' IST0XX ....  IGNORED MSG?
         BE    SNDNDSP            YES
         CLC   DAMSGRSP,=C'FAILED' IST0XX ....  FAILED MSG?
         BE    SNDNDSP            YES
         CLC   DAMSGFAI,=C'FAILED' IST0XX ....  FAILED MSG?
         BNE   SNDSETA            NO
*                                 YES - RESET FLAGS AND COUNT, SINCE
*                                  THERE WILL BE NO NULL MSG TO TRIGGER
*                                  THE RESET IN OUTBOUND
SNDNDSP  LH    WKA,TIDSPCT        DISPLAY IS COMPLETE
         SH    WKA,K1             DECREMENT OUTSTANDING DISPLAY COUNT
         BM    SNDRSTDC      IF -VE SOMETHING WENT WRONG - DONT UPDATE
         STH   WKA,TIDSPCT          ELSE STORE IT
         BP    SNDINS1            IF ZERO,
SNDRSTDC NI    TIFLAGS,255-(TIFDSP+TIFDSP11+TIFCLUST) RESET DSP FLAGS
*
SNDINS1  OI    POSTATUS,POSINSRT  SET INSERT FLAG (SCOPE = SND3270)
SNDECHK  TM    POSTATUS,POSECHO   ECHOED RESPONSE?
         BO    SNDECHO            YES
         CLI   POHTID,0           NETOP TICB ID?
         BNE   SNDNINT            NO - NOT POFINTCM RESPONSE
         LA    TICB@,NETPTICB     YES - USE NETOP TICB FOR CMD INSERT
         B     SNDNINT
SNDECHO  C     TICB@,@ECHTICB     IS THIS THE SOURCE TICB?
         BE    SNDNINT            YES
         LA    TICB@,DUMTICB      NO - USE DUMMY TICB FOR CMD INSERT
         NI    POSTATUS,255-POSINSRT TURN OFF TO PREVENT RE-INSERTION
SNDNINT  LH    WKA,TICMDLEN       PICK UP LAST CMD LEN
         LA    WKB,L'SENDTXT      INSERT
         SR    WKB,WKA             CMD INTO
         CR    WKB,MSGLEN           SEND AREA,
         BH    SNDROOM               RIGHT JUSTIFIED
         LR    WKD,MSGLEN
         LR    R15,WKD
         SR    WKD,WKB                 TRUNCATED
         SR    WKA,WKD                  IF NECESSARY,
         BNP   SNDRLTB                   (UNLESS NO ROOM)
         LR    WKB,R15                    TO AVOID
SNDROOM  BCTR  WKA,0                       OVERLAYING
         LA    WKB,SENDTXT(WKB)             REPLY
         EX    WKA,SNDMVCMD                  TEXT
         MVI   0(WKB),SF          HI-INTENSITY
         MVI   1(WKB),HI           INSERTION
         LA    MSGLEN,L'SENDTXT+1 SET UP FULL TEXT LENGTH IN CASE STACK
SNDRLTB  L     TICB@,0(,OUTX)     RESTORE TICB @ IN CASE MODIFIED
SNDSETA  LH    WKA,TILNCT         LOAD CURRENT LINE NUMBER
         LR    WKB,WKA            DUP CURRENT LINE NUMBER
         SLA   WKB,1              MULT BY TWO
         LA    WKB,LINE1(WKB)     CURRENT BUFFER ADDRESS PTR
         MVC   SENDADDR,0(WKB)    SET UP BUFFER ADDRESS
         TM    POFLAGS,POFUNSTK   UNSTACKING?
         BO    SNDINCR            YES
*
SNDSCHK  TM    POHSTAT,POHGEN     SOLICITED?
         BZ    SNDUNCK            NO - GO CHECK FOR REPEATER
         NI    TIFLAGS,255-TIFUNSOL YES - RESET LAST DISPLAYED MSG FLAG
SNDRCHK  TM    TIFLAGS,TIFWTROL   WAITING FOR ROLL?
         BZ    SNDINCR            NO
         LA    MSGLEN,11(,MSGLEN) YES - INCREMENT FOR TIME FIELD
         $CALL STACK,SENDTIME,(MSGLEN)  YES - STACK MESSAGE
         B     SNDSTKED      CHECK FOR 'STACKED' MESSAGE         87109
*
SNDUNCK  CP    UNSOL#,KP1         REPEAT COUNT ZERO?
         BH    SNDTUCK            NO - REPEATER
SNDFLUN  OI    TIFLAGS,TIFUNSOL   YES - FLAG LAST DISPLAYED MSG,
         MVC   TIUNADDR,SENDADDR   SAVE 3270 BUFAD,
         B     SNDRCHK             AND GO CHECK FOR ROLL
SNDTUCK  TM    TIFLAGS,TIFUNSOL   IS LAST DISPLAYED MSG UNSOL?
         BZ    SNDFLUN            NO - GO FLAG IT NOW
         TM    TIFLAGS,TIFHELP    HELP SCREEN DISPLAYED?
         BO    SNDRCHK            YES - SUPPRESS SHORT UNSOL MSGS
         MVC   UNSENDTM,SENDTIME   MOVE TIME FIELD TO GIVE LATEST TIME
         UNPK  UNSEND#,UNSOL#     UNPACK UNSOL COUNT
         OI    UNSEND#+1,X'F0'    FIX UP SIGN
         MVC   UNSENDAD,TIUNADDR  YES - SET UP SHORT UNSOL. MSG
         LA    WKA,UNSEND         LOAD MSG PTR
         LA    WKB,UNSENDL        LOAD MSG LENGTH
         TM    TIFLAGS,TIFWTROL   WAITING FOR ROLL?
         BZ    SNDSEND            NO - SEND TO SAME LINE ON SCREEN
         $CALL STACK,UNSENDTM,UNSENDSL YES - STACK MESSAGE,
SNDSTKED TM    TIFLAGS3,TIF3MCNT  SHOW STACKED COUNT ?           87109
         BNZ   SNDSTKSN      YES                                 87109
         CP    KP1,TISTKCT   FIRST STACKED MESSAGE ?             87107
         BNE   SNDOK         NO; PREVENT SCREEN FLICKER          87107
         MVI   STKMCT+L'STKMCT-1,C' '  CHANGE TO NON-SPECIFIC    87109
SNDSTKSN NI    TIFLAGS3,255-TIF3MCNT  RESET UPDATE FLAG          87109
         B     SNDSEND               THEN OUTPUT NEW STACK COUNT
*
SNDINCR  LA    MSGLEN,SENDL       LOAD FULL LENGTH
         CLI   SENDAT3,C'-'       3RD ATTR DASHED?
         BNE   SNDLOK             NO
         SH    MSGLEN,K2          YES - DECR BY LENGTH OF MISSING SFS
SNDLOK   LA    WKA,1(,WKA)        INCR CURRENT LINE NUMBER
         CH    WKA,LINEMAX        ARE WE PAST END?
         BH    SNDLAST            YES
         LA    MSGLEN,SENDSEPL(,MSGLEN)  ADD LENGTH OF SEPARATOR
         B     SNDSETL
SNDLAST  SR    WKA,WKA            RESET TO LINE ONE
         TM    TIFLAGS2,TIF2ROLL  ROLL MODE?
         BO    SNDSETL            YES
         OI    TIFLAGS,TIFWTROL   NO - SET WAITING FOR ROLL FLAG
SNDSETL  STH   WKA,TILNCT         UPDATE CURRENT LINE #
*
* ISSUE SEND TO TRANSMIT THE MESSAGE.
*
         LA    WKA,SENDORDR       LOAD DEFAULT AREA PTR
         LR    WKB,MSGLEN         LOAD DEFAULT MSG LENGTH
SNDSEND  L     R15,TICID          LOAD CID FOR ADDRESSED TERMINAL
         OI    RPLRH3,RPLBB+RPLEB  RESET BRACKETS FOR CONTENTION 87109
         TM    TIFLAGS3,TIF3READ  READ POSTED ?                  87107
         BZ    *+12          NO                                  87107
         NI    RPLRH3,255-RPLBB  ALREADY IN BRACKET              87107
         NI    TIFLAGS3,255-TIF3READ  RESET READ MODE            87107
         SEND  RPL=(RPL@),        USE PRESET RPL                       *
               AREA=(WKA),        SET AREA IN CASE INT3270 CALLED      *
               ARG=(R15),         SET CID FOR TERMINAL                 *
               RECLEN=(WKB)       LENGTH CAN VARY
         LTR   RTNCD,RTNCD        OK?
         BZ    SNDOK              YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    SNDSEND             THEN RETRY
         CH    ACTCD,DAMAGE       IF TERMINAL IS NOT AVAILABLE
         BNE   SNDDAMG            AND
         TM    POHSTAT,POHRREQ    REPLY WAS REQUESTED
         BZ    SNDDAMG            AND
         L     TICB@,@MATICB      MESSAGE NOT FOR MASTER
         CLC   RPLARG,TICID       THEN
         BE    SNDDAMG            ROUTE MESSAGE TO MASTER:
         B     SNDSEND            AND RETRY
SNDDAMG  CH    RTNCD,RETRY
         BE    SNDSEND            RETRY
SNDOK    TM    0(OUTX),LASTPARM   IF NOT LAST TICB PTR
         BO    SNDEND              ...
         OI    POSTATUS,POSMLTSN   FLAG MULTIPLE SEND, THEN
         B     SNDLOOP             SEND OUTPUT TO NEXT TERMINAL
SNDEND   NI    POSTATUS,255-(POSMLTSN+POSINSRT+POSECHO) RESET FLAGS
         $SRET                    RETURN
*
SNDMVCMD MVC   2(*-*,WKB),TICMD        MOVE CMD INTO SEND AREA
SNDMV1   MVC   SENDTXT(*-*),DATX        MOVE INTO SEND AREA
SNDMV2   MVC   SENDTIME(*-*),STKDATA   MOVE INTO SEND AREA
SNDSAVE  DS    F              SAVE WORD
         TITLE 'N E T O P - MESSAGE STACK SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: STACK                                                         *
*                                                                     *
* FUNCTION: TO STACK MESSAGES FOR TERMINALS IN NO-ROLL MODE WHEN AN   *
*        AWAITING ROLL CONDITION (FULL SCREEN) IS DETECTED.           *
*                                                                     *
* ENTRY POINTS: STACK                                                 *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              MSG & LENGTH-1     PARM@                               *
*              TICB REG           TICB@                               *
*              RETURN ADDRESS     RET@                                *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: SEND3270 SUBR                                            *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
STACK    $SINIT
         LR    WKD,PARM@      SAVE MSG PTR
         LR    WKB,PARM@      ISOLATE
         SRL   WKB,24          LENGTH-1
         LA    WKB,6(,WKB)    INCREMENT LENGTH FOR ELEMENT PREFIX
         GETMAIN RC,LV=(WKB)   AND GETMAIN STACK ELEMENT
         LTR   RTNCD,RTNCD    OK?
         BZ    STKCHECK
         LA    WKA,STKUNM     SET UP STACK STORAGE
         LA    WKB,STKUNML     UNAVAILABLE WARNING MSG
         MVC   STKUNMCT,=X'40202120'  EDIT
         ED    STKUNMCT,TISTKCT    INTO MSG
         B     STKRET         RETURN
STKCHECK TM    TISTATUS,TISTACK STACK ALREADY EXISTS?
         BZ    STKNOT         NO
         L     STKEL@,TITAIL@ YES - PICK UP LAST STACK ELEMENT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING
         ST    PARM@,STKNXEL  CHAIN NEW ELEMENT
         ST    PARM@,TITAIL@  SET NEW TAIL POINTER
         B     STKZNX         JUMP STACK SET UP
         DROP  STKEL@
         USING STKEL,PARM@    STACK ELEMENT ADDRESSING
STKNOT   ST    PARM@,TIHEAD@  NO STACK - SET UP HEAD
         ST    PARM@,TITAIL@   AND TAIL POINTERS
STKZNX   XC    STKNXEL,STKNXEL ZERO NEXT STACK ELEMENT PTR
         STH   WKB,STKELEN    SET ELEMENT LENGTH
         SH    WKB,K7         DECR. ELEMENT LENGTH FOR DATA MOVE
         EX    WKB,STKMV      MOVE DATA TO ELEMENT
         LA    WKA,STKM       SET UP STACK
         LA    WKB,STKML       COUNT WARNING MSG
         MVI   STKM+1,X'C2'   SET DEFAULT WCC
         AP    TISTKCT,KP1    INCREMENT ELEMENT COUNT
         MVC   STKMCT,=X'40202120'  EDIT
         ED    STKMCT,TISTKCT    INTO MSG
         TM    TISTATUS,TISTACK STACK ALREADY EXISTS?
         BO    STKSOLCK         YES
         OI    TISTATUS,TISTACK NO - FLAG STACK OPEN
         B     STKALARM          AND RING ALARM
STKSOLCK TM    POHSTAT,POHGEN SOLICITED MSG?
         BO    STKRET         YES
         LA    WKB,STKMSL     NO - SET UP SHORT MSG LENGTH AND
STKALARM MVI   STKM+1,X'C6'    RING ALARM
STKRET   $SRET                RETURN
*
STKMV    MVC   STKDATA(*-*),0(WKD) MOVE DATA TO STACK ELEMENT
         DROP  PARM@
         TITLE 'N E T O P - MESSAGE UNSTACK SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: UNSTACK                                                       *
*                                                                     *
* FUNCTION: TO UNSTACK MESSAGES FOR TERMINALS IN NO-ROLL MODE WHEN AN *
*        AWAITING ROLL CONDITION (FULL SCREEN) IS ALLEVIATED BY PA KEY*
*                                                                     *
* ENTRY POINTS: UNSTACK                                               *
*                                                                     *
* INPUT:                                                              *
*                                                                     *
*       POFSTDEL ¬ ON = UNSTACK AND SEND TILL FULLSCREEN/EMPTY STACK  *
*       POFSTDEL ON   = DELETE COMPLETE STACK WITHOUT SENDING         *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              TICB REG           TICB@                               *
*              RETURN ADDRESS     RET@                                *
*                                                                     *
* REGISTERS AT SND3270 CALL:                                          *
*                                                                     *
*              DATA LENGTH - 1    MSGLEN                              *
*              STACK ELEMENT PTR  STKEL@                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: SND3270                                                      *
*                                                                     *
* CALLED BY: RCV3270, CLSDST                                          *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
UNSTACK  $SINIT
         OI    POFLAGS,POFUNSTK  FLAG UNSTACKING MSGS (FOR SND3270)
         L     STKEL@,TIHEAD@ PICK UP TOP STACK ELEMENT
         USING STKEL,STKEL@   STACK ELEMENT ADDRESSING
UNSLOOP  LH    R0,STKELEN     LOAD ELEMENT LENGTH
         TM    POFLAGS,POFSTDEL  DELETE STACK?
         BO    UNSFREE        YES - BYPASS DATA MOVE
         LR    MSGLEN,R0      COPY IT
         SH    MSGLEN,K7      DECR. ELEMENT LENGTH FOR DATA MOVE
         SP    TISTKCT,KP1    DECR. STACK ELEMENT COUNT
         $CALL SND3270        SEND UNSTACKED MESSAGE
UNSFREE  L     WKA,STKNXEL    SAVE CHAIN POINTER TO NEXT ELEMENT
         FREEMAIN RC,LV=(0),A=(STKEL@)  AND FREEMAIN CURRENT ELEMENT
         LTR   STKEL@,WKA     RELOAD CHAIN POINTER TO NEXT ELEMENT
         BNZ   UNSRCHK        ZERO? (EMPTY STACK?)
         NI    TISTATUS,255-TISTACK  YES - RESET FLAG
         ZAP   TISTKCT,KP0    DECR. STACK ELEMENT COUNT
         LA    RTNCD,RCVNRMSG      SET NO RESP MSG RC FOR INBOUND
         B     UNSRET          AND RETURN
UNSRCHK  TM    TIFLAGS,TIFWTROL  WAITING FOR ROLL?
         BZ    UNSLOOP           NO - GO UNSTACK NEXT MSG
         ST    STKEL@,TIHEAD@ STORE NEW HEAD POINTER
         LA    WKA,STKM       SET UP STACK
         LA    WKB,STKML       COUNT WARNING MSG
         MVI   STKM+1,X'C6'    AND RING ALARM AS WELL
         MVC   STKMCT,=X'40202120'  EDIT
         ED    STKMCT,TISTKCT    INTO MSG
         LA    RTNCD,RCVRMSG    SET RESPONSE MSG RC FOR INBOUND
UNSRET   NI    POFLAGS,255-(POFUNSTK+POFSTDEL)  RESET FLAGS
         $SRET                RETURN
*
         DROP  STKEL@
         TITLE 'N E T O P - INT3270 SUBROUTINE'
***********************************************************************
*                                                                     *
* NAME: INT3270 SUBROUTINE                                            *
*                                                                     *
* FUNCTION: TO TRANSMIT 3270 ORDERS THAT SET UP THE INITIAL SCREEN    *
*        FORMAT. THE BEGIN BRACKET BIT IS SET IN THE RPL BY THE       *
*        LOGON EXIT FOR A FIRST TIME INITIALIZATION.                  *
*                                                                     *
* ENTRY POINTS: INT3270                                               *
*                                                                     *
* REGISTERS AT ENTRY:                                                 *
*                                                                     *
*              CMD ABR LENGTH     PARM@                               *
*              INT MSG LENGTH     MSGLEN                              *
*              RETURN ADDRESS IN CALLER  RET@                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*                                                                     *
*              RPL REG            RPL@                                *
*              WORK REGS          WKA,WKB                             *
*              RETURN ADDRESS     RET@                                *
*              SAVE AREA ADDRESS  SA@                                 *
*              BASES              BASE1@,DBASE1@,DBASE2@              *
*              VTAM CALLS         SUBR@,RTNCD,RET@                    *
*                                                                     *
* EXIT,NORMAL: BR 14                                                  *
*                                                                     *
* EXIT, ERROR: NONE                                                   *
*                                                                     *
* CALLS: NONE                                                         *
*                                                                     *
* CALLED BY: LOGON EXIT AND RCV3270 SUBR FROM INBOUND EXIT            *
*                                                                     *
* ATTRIBUTES: SERIALLY REUSABLE                                       *
*                                                                     *
***********************************************************************
*
INT3270  $SINIT
         OI    RPLRH3,RPLBB+RPLEB  RESET BRACKETS FOR CONTENTION 87107
         TM    TIFLAGS3,TIF3READ  READ POSTED ?                  87107
         BZ    *+12          NO                                  87107
         NI    RPLRH3,255-RPLBB  ALREADY IN BRACKET              87107
         NI    TIFLAGS3,255-TIF3READ  RESET READ MODE            87107
         LA    WKA,INTLEN     SET UP LENGTH
         LTR   PARM@,PARM@    CMD TO BE INSERTED?
         BZ    INTSEND        NO
         CH    PARM@,=X'0410' ARBITRARILY TOO LARGE?
         BH    INTSEND        YES - IGNORE PARM
         LA    WKA,3(WKA,PARM@) YES - INSERT
         BCTR  PARM@,0                     LAST CMD IN
         EX    PARM@,INTCMD                     INT MSG
INTSEND  XC    TILNCT,TILNCT      SET TO LINE 1
         SEND  RPL=(RPL@),                                             *
               ACB=ACBTERMS,                                           *
               AREA=INTTEXT,                                           *
               RECLEN=(WKA),                                           *
               POST=RESP,                                              *
               OPTCD=SYN,                                              *
               RESPOND=(NEX,FME,NRRN)  BB SEND MUST REQUEST +VE RESP
         LTR   RTNCD,RTNCD        OK?
         BZ    INTRET0            YES
         CH    ACTCD,RETRY        IF RETRIABLE ERROR
         BE    INTSEND             THEN RETRY
         LA    RTNCD,4             ELSE RETURN NO GO
         B     INTRET
INTRET0  SR    RTNCD,RTNCD         SAY ALL IS WELL (RTNCD=0)
INTRET   $SRET
*
INTCMD   MVC   INTCSUF(*-*),TIABR     MOVE ABBREV. CMD INTO INT MSG
         TITLE 'N E T O P - DATA AREAS'
*
***********************************************************************
*                                                                     *
*                                 DATA AREAS                          *
*                                                                     *
*        ADDRESSIBILITY VIA  DBASE1@ AND DBASE2@                      *
*        ACBTERMS IS LAST SYMBOL REQUIRING A BASE REGISTER - DONT ADD *
*        ANY BASED SYMBOLS AFTER IT.                                  *
*                                                                     *
***********************************************************************
*
         ORG   NETOP+((*-NETOP)/4096+1)*4096   ALIGN TO PAGE BOUNDARY
*              (LINKEDIT WITH ' PAGE NETOP' - MAKES DEBUGGING EASIER)
*
@DBASE2  DC    A(*+4096)          BASE 2 FOR DATA
MAINSA   DC    18F'0'             MAINLINE SAVE AREA
EXITSA   DC    18F'0'             EXIT SAVE AREA
ERRORSA  DC    18F'0'             ERROR EXIT SAVE AREA
ENDSA    DC    18F'0'             TPEND OR ABEND EXIT SAVE AREA
*
@HELPM   DC    A(HELPM)           1ST LEVEL HELP MESSAGE PTR
@HELPM2  DC    A(HELPM2)          PF2 HELP MESSAGE PTR
@TRTTAB  DC    A(TRTTAB)          TRT TABLE PTR
@MATABLE DC    A(MATABLE)         MATABLE PTR
@MATICB  DC    F'0'               ADDRESS OF MASTER'S TICB
@SAVACB  DC    F'0'               LAST ACB TO SATISFY RCVCMD
@ECHTICB DS    F'0'           TICB @ FOR USE WHEN ECHOING RESPONSES
@TCAST   DS    A                  TCAS TSB TABLE
@ACBPPO  DC    A(ACBPPO)
@ACBSPO  DC    A(ACBSPO)
ABREGS   DS    2F                 ABEND REGS SAVE AREA
ECBMAIN  DC    F'0'               MASTER LOGON AND CLOSEDOWN ECB
NULL     DC    F'0'               FULLWORD OF ZEROS
CLSDLAY  DC    F'50'              1/2 SEC DELAY
OPNDLAY  DC    F'1500'            15 SEC DELAY
RANGCHAR DS    F                  RANGE FORMAT CHAR/PTR
RANGHEX  DS    H                  RANGE FORMAT CHAR IN HEX
RANGEND  DS    H                  RANGE FORMAT LIMIT IN HEX
HEX      DC    CL2'  '            HEX CHARACTERS FROM CVHX SUBROUTINE
         DC    CL2'  '            HEX OVERFLOW - DO NOT MOVE
HEXTOBE  DC    XL2'0000'          BINARY TO BE HEX'D
POID     DC    XL1'00'            LAST ID ASSIGNED TO A TERMINAL
POSTATUS DC    XL1'00'            PO STATUS BYTE
POSCLSDN EQU   B'10000000'  80    CLOSEDOWN FLAG
POSHVMA  EQU   B'01000000'  40    MASTER HAS BEEN LOGGED ON
POSMLTSN EQU   B'00100000'  20    MULTIPLE SEND IN PROGRESS
POSINSRT EQU   B'00010000'  10    MOMENTARY INSERT SIGNAL FOR SND3270
POSTEST  EQU   B'00001000'  08    TSO TEST JOB AFTER INITIALIZATION
POSSEND  EQU   B'00000100'  04    SEND TO VTAM SYSTEM PGMRS ON TSO
POSABEND EQU   B'00000010'  02    ESTAE EXIT ENTERED
POSECHO  EQU   B'00000001'  01    ECHO THIS MSG TO OTHER MCANDTS
*
POFLAGS  DC    XL1'00'            PO FLAGS BYTE
POFOSCMD EQU   B'10000000'  80    ISSUE OS CMDS DURING INITIALIZATION
POFINTCM EQU   B'01000000'  40    INTERNAL CMD (RCVVTAM->OUT/INBOUND)
POFDSP   EQU   B'00100000'  20    MOMENTARY DISPLAY SIGNAL (INBOUND)
POFCFAIL EQU   B'00010000'  10    CLOSE FAILURE FIRST TIME FLAG
POFHINT  EQU   B'00010000'  10    HI INTENSE SIGNAL (RCVVTAM->SND3270)
POFRANG  EQU   B'00001000'  08    MOMENTARY RANGE SIGNAL (INBOUND)
POFSTDEL EQU   B'00000100'  04    DEL SIGNAL (RCV3270,CLSDST->UNSTACK)
POFUNSTK EQU   B'00000010'  02    UNSTACK SIGNAL (UNSTACK->SND3270)
POFWTO   EQU   B'00000001'  01    WTO DONE - NO NEED FOR WTL(RESERVED)
*                                 PF2 CONTROL KEYWORDS AND MASKS
PF2KWDS  DC    CL5'NROLL'         NROLL OR ROLL
         DC    AL1(255-TIF2ROLL,TIF2ROLL)  -VE AND +VE MASKS
         DC    CL5'NAUTO'
         DC    AL1(TIF2AUTO,255-TIF2AUTO)
         DC    CL5'NECHO'
         DC    AL1(TIF2ECHO,255-TIF2ECHO)
         DC    CL5'NSOLO'
         DC    AL1(255-TIF2SOLO,TIF2SOLO)
         DC    CL5'NLOGD'
         DC    AL1(255-TIF2LOGD,TIF2LOGD)
         DC    AL1(255)
*
INTBUFL  DS    H                  INTERNAL CMD BUFFER LENGTH
INTBUF   DS    CL28               INTERNAL CMD BUFFER
         ORG   INTBUF
INTAID   DC    X'404040114040'    AID _ _ SBA _ _
INTNODE  DS    CL8                NODENAME
         ORG   INTNODE
INTFDUMP DS    C'F DUMPMON,NCP='  F DUMPMON CMD AREA
INTDNODE DS    CL8                370X NODENAME
         ORG
FDUMP    DC    C'F DUMPMON,NCP='  F DUMPMON CMD TEXT
*
K1       DC    H'1'               CONSTANT
K2       DC    H'2'               CONSTANT
K3       DC    H'3'               CONSTANT
K4       DC    H'4'               CONSTANT
K5       DC    H'5'               CONSTANT
K6       DC    H'6'               CONSTANT
K7       DC    H'7'               CONSTANT
K8       DC    H'8'               CONSTANT
K9       DC    H'9'               CONSTANT
K10      DC    H'10'              CONSTANT
K12      DC    H'12'              CONSTANT
K13      DC    H'13'              CONSTANT
K36      DC    H'36'              CONSTANT
KPOHLEN  DC    AL2(POHLEN)        CONSTANT - PO HEADER LENGTH
RETRY    DC    AL2(USFRESSU)      ACTION CODE FOR RETRIABLE ERROR
DAMAGE   DC    AL2(USFDAMGE)      ACTION CODE FOR DAMAGE ERROR
KP0      DC    P'0'               CONSTANT
KP1      DC    P'1'               CONSTANT
KP7      DC    P'7'               CONSTANT
*
UNSOL#   DC    PL2'1'         UNSOLICITED MSG REPEAT #
MAXUNSOL DC    PL2'50'        MAX UNSOLICITED REPEATS BEFORE INACT
*
AID      DS    X              AID FROM INPUT AREA
UPPER    DS    CL7            1ST 7 CHARS IN UPPERCASE
BLANX    DC    CL20' '        GENERAL PURPOSE BLANK FIELD
*
*        CAREFUL -- LOWERCASE TEXT (NET TO KLOGON)
*
NET      DC    C' net,'       LONG FORM TRIGGER
NETSOL   DC    C'NETSOL'      F NETSOL TRIGGER
TEST     DC    C'TEST'        F TEST TRIGGER
SUPP     DC    C'SUPP'        F SUPP TRIGGER
DLONG    DC    C'display '     VARIATIONS
NETID    DC    C'net,id='     INSERT TEXT FOR ABBREV. CMDS
DISPLAY  DC    C'd net,id='   INSERT TEXT FOR IMPLICIT DISPLAY CMD
VARYA    DC    C'v net,act,id='   INSERT TEXT FOR PF12 CMD
VARYII   DC    C'v net,inact,i,id='   INSERT TEXT FOR PF6 CMD
VARYI    DC    C'v net,inact,id='     INSERT TEXT FOR PF8 CMD
MODIFY   DC    C'f net,id='      INSERT TEXT FOR PF4 CMD
KLOGON   DC    C'logon='      INSERT TEXT FOR PF10 CMD
*
SENDUBUF DC    AL2(SENDUL,0)  OS SEND CMD BUFFER
         DC    C'SE '''
SENDUTXT DS    CL72
         DC    C''',LOGON,USER=(&SENDLST)'
SENDUL   EQU   *-SENDUBUF
SENDPTCH DC    CL20' '        ZAP IN NEW USERIDS HERE AND UPDATE LENGTH
*
NEW082   DC    C'DEV='
NEWDEV   DS    CL5
         DC    C',ALLOC= '
NEWALC   DS    CL8
         DC    C',UID= '
NEWUID   DS    CL7
         DC    C' '
NEWASID  DS    CL4
         DC    C') ,SIMLOG='
NEWSIM   DS    CL8
NEW082L  EQU   *-NEW082
*
*     WORK AREA WHERE SND3270 PREPARES OUTPUT LINE
*
SENDORDR DC    X'F1C21140F83CC14F0011'
SENDADDR DC    XL2'4040'      SCREEN BUFFER ADDRESS SET BY SND3270
SENDTIME DC    CL8' '         TIMESTAMP FIELD
         DC    X'1D'          SF
SENDAT1  DC    X'60'          ATTRIBUTE BYTE FOR OUTPUT LINE
LO       EQU   X'60'          LO-INTENS
HI       EQU   X'E8'          HI-INTENS
SENDTXT  DC    CL69' '        MESSAGE TEXT
SENDAT2  DC    X'1D60'        FILL ATTR - SAVE SPACE FOR CMD INSERTION
SENDAT3  DC    X'1D60'        RESET ATTR TO ENSURE NEXT TIME FIELD LO
SENDL    EQU   *-SENDORDR     LENGTH OF MESSAGE
SENDSEPA DC    80C'-'         SEPARATOR LINE
SENDSEPL EQU   *-SENDSEPA     LENGTH OF SEPARATOR LINE
*
UNSEND   DC    X'F1C211'      SHORT UNSOL MSG TO UPDATE
UNSENDAD DC    XL2'4040'       UNSOL COUNT, OVERWRITING
UNSENDTM DC    CL8' '           'IST' TEXT OF UNSOL MSG
         DC    X'1DE8'        HI ATTR FOR UNSOL MSG
UNSEND#  DC    CL2' '         REPEAT COUNT
UNSENDSL EQU   *-UNSENDTM     SHORT LENGTH FOR STACKING
UNSENDAT DC    X'1D60'        LO ATTR FOR REST OF LINE AND FOR SENDAT2
UNSENDL  EQU   *-UNSEND       LENGTH FOR SENDING               REFRESH
         DC    X'1D60'        LO ATTR FOR SENDAT3 REFRESH
*
NULLM    DC    X'F1C211C1E3131140F83CC14F00'
*
NAUTM    DC    X'F1C01140F83CC14F0011C1E33CC25F0011C1E3'
NAUTABR  DS    CL20
*
INVALM   DC    X'F1C61140F83CC14F001140F8'
         DC    C'invalid from '
INVALTRM DS    CL8
INVALML  EQU   *-INVALM
*
INVALK   DC    X'F1C61140F83CC14F001140F8'
         DC    C'invalid input'
INVALKL  EQU   *-INVALK
*
DCONM    DC    X'F1C61140F8'
         DC    C'disconnect from '
DCONMNAM DS    CL8
         DC    X'11C1E313'
DCONMABR DS    CL8
DCONML   EQU   *-DCONM
*
STKM     DC    X'F1C21140F81DE8'
STKMCT   DS    CL4
STKMSL   EQU   *-STKM         SHORT LENGTH
         DC    C' messages stacked  '
STKML    EQU   *-STKM         FULL LENGTH
*
STKUNM   DC    X'F1C61140F81DE8'
         DC    C'no storage -'
STKUNMCT DS    CL4
         DC    C' stacked'
STKUNML  EQU   *-STKUNM
*
NOTICBM  DC    X'F1C7114EC11DE8'
NOTICBLG DC    C'LOGON',C' '
NOTICBRJ DC    C'REJECTED',C' -- MAXIMUM TERMINALS EXCEEDED'
NOTICBML EQU   *-NOTICBM
*
RLRQM    DC    X'F1C7114E401DE8'
         DC    C'THIS TERMINAL REQUESTED BY ANOTHER APPLICATION'
         DC    X'114FD7'
         DC    C'IF NOT MASTER IT WILL BE RELEASED'
RLRQML   EQU   *-RLRQM
*
CLOSM    DC    X'00000100'    TERM ID NON-ZERO - FAILS NETPTICB CHECK
         DC    15C'*',CL11' '
CLOSMSG  DC    C'NETOP CLOSING DOWN'
         DC    CL11' ',15C'*'
CLOSML   EQU   *-CLOSM-4-1
*
OFFMSG   DC    C'LOGOFF'
*
ABMSG    DC    AL2(ABMSGL,0)  RDW
         DC    C'-',C'ABEND ' ASA SKIP, TEXT
ABMSGAC  DC    3CL2' '        ABEND CODE
ABMSGRC  DC    CL2' '         REASON CODE
ABMSGL   EQU   *-ABMSG
*
LOSMSG   DC    C'LOST'
LOSMSGRC DC    C'   '
LOSMSGL  EQU   *-LOSMSG
*
RELMSG   DC    C'RELEASE REQUEST IGNORED DUE TO ERROR'
*
TPEMSG   DC    C'POSTED TPEND '
TPEMSGRC DC    C'  '
TPEMSGL  EQU   *-TPEMSG
*
ERMSG    DC    C'ERROR EXIT - REQ='
ERREQ    DC    C'  ,RTNCD='
ERRTNCD  DC    C'  ,FDBK2='
ERFDBK2  DC    C'  ,SSENSEI='
ERSENEI  DC    C'  ,SSENSMI='
ERSENMI  DC    C'  ,SENSE='
ERSENU1  DC    C'  '
ERSENU2  DC    C'  '
ERMSGL   EQU   *-ERMSG
*
REMSG    DC    C'RESPONSE EXIT - REQ='
REREQ    DC    C'  ,RTNCD='
RERTNCD  DC    C'  ,FDBK2='
REFDBK2  DC    C'  ,SSENSEI='
RESENEI  DC    C'  ,SSENSMI='
RESENMI  DC    C'  ,SENSE='
RESENU1  DC    C'  '
RESENU2  DC    C'  '
REMSGL   EQU   *-REMSG
UNSOL    DC    CL140' '       UNSOLICITED MSG SAVE AREA(ASSUME MAX 140)
LOGBUF   DC    CL133' '         USED BECAUSE I DISABLED VTAMLOGO
         USING LOGREC,LOG@
*
*    SCREEN INITIALIZATION TEXT USED BY INT3270
*
INTTEXT  DC     X'F5C21140D41DE8' WRITE ERASE + SF PROTECT OUR TITLE
         DC    C'N E T',X'1D60',C'W O R K  ',X'1DE8'
         DC    C'O P',X'1D60',C'E R A T O R',X'11C1C8',C'REL &REL'
         DC    X'1DE811C150'  PROT, SBA ROW 2 COL 1
         DC    C'COMMAND INPUT ===>'
         DC    X'1DC113'      SF,IC
         DC    X'11C25F'      SBA ROW 14,COL 80
         DC    X'1D60'        SF FOR DATA OUTPUT
INTLEN   EQU   *-INTTEXT      LENGTH OF INITIALIZATION TEXT
         DC    X'11C1E3'      SBA TO CMD INPUT AREA
INTCSUF  DS     CL40          INT CMD SUFFIX INSERTION AREA
*
*   DATA TO MAINTAIN OUTPUT ROLLING BUFFER
*
LINEMAX  DC   H'20'           MAX OUTPUT LINE POINTER
LINE1    DC   XL2'&L(4)'      3270 BUFFER ADDRESS LINE 1 - ROW4/COL1
         DC   XL2'&L(5)'      LINE 2  - ROW 5
         DC   XL2'&L(6)'      LINE 3  - ROW 6
         DC   XL2'&L(7)'      LINE 4  - ROW 7
         DC   XL2'&L(8)'      LINE 5  - ROW 8
         DC   XL2'&L(9)'      LINE 6  - ROW 9
         DC   XL2'&L(10)'     LINE 7  - ROW 10
         DC   XL2'&L(11)'     LINE 8  - ROW 11
         DC   XL2'&L(12)'     LINE 9  - ROW 12
         DC   XL2'&L(13)'     LINE 10 - ROW 13
         DC   XL2'&L(14)'     LINE 11 - ROW 14
         DC   XL2'&L(15)'     LINE 12 - ROW 15
         DC   XL2'&L(16)'     LINE 13 - ROW 16
         DC   XL2'&L(17)'     LINE 14 - ROW 17
         DC   XL2'&L(18)'     LINE 15 - ROW 18
         DC   XL2'&L(19)'     LINE 16 - ROW 19
         DC   XL2'&L(20)'     LINE 17 - ROW 20
         DC   XL2'&L(21)'     LINE 18 - ROW 21
         DC   XL2'&L(22)'     LINE 19 - ROW 22
         DC   XL2'&L(23)'     LINE 20 - ROW 23
         DC   XL2'&L(24)'     LINE 21 - ROW 24
         DC    XL(POHLEN)'00'     PREFIX AREA FOR OUTBOUND COMMANDS
RCVDA    DC    XL(DALEN)'00'      DATA AREA FOR INBOUND COMMANDS
SENDDA   DC    XL(DALEN)'00'      DATA AREA FOR OUTBOUND SPO MESSAGES
PRIMADA  DC    XL(DALEN)'00'      DATA AREA FOR OUTBOUND PPO MESSAGES
*
WORK     DS    D                  DOUBLE WORD WORK AREA
STTIME   DS    F                  START TIME
DATE     DS    F                  CURRENT DATE
TBUF     DS    XL60               WORK AREA FOR REARRANGING TEXT
*        TICB POOL
*
TICBLACT DC    A(0)               LAST ACTIVE TICB
TICBPOOL EQU   *
TICBCT   EQU   8                  # TICBS IN LIST
TICBFCT  DC    AL2(TICBCT)        # FREE TICBS IN LIST
TICBMCCT DC    AL2(0)             # TICBS USED BY MASTER CANDIDATES
         DS    0D
TICBS    DC    (TICBCT)XL(TICBLEN)'00'
         ORG   TICBS
NETPTICB DC    AL1(TISMCAND+TISALLOC)
         ORG   NETPTICB+(TINAMLEN-TICB)
         DC    AL2(5)
         DC    CL8'NETOP'
         ORG
VTAMTICB DC    XL(TICBLEN)'00'
         ORG   VTAMTICB+(TINAMLEN-TICB)
         DC    AL2(4)
         DC    CL8'VTAM'
         ORG
DUMTICB  DC    XL(TICBLEN)'00'
TICBLIST DC    (TICBCT)F'0'   LIST OF TICBS FOR SEND TARGET TERMINALS
LASTPARM EQU   X'80'          LAST-TICB-IN-LIST FLAG
         LTORG
*        PO MESSAGES.
*
         PRINT NOGEN
NTP00MSG WTO   'NTP00  NETOP WAITING FOR MASTER TO LOGON',             *
               ROUTCDE=2,MF=L
*
NTP01MSG WTO   'NTP01  NODENAME NOW MASTER',                           *
               ROUTCDE=2,MF=L
*
NTP02MSG WTO 'NTP02  LAST MASTER LOGGED OFF - SYSCON NOW VTAM PRIMARY',*
               ROUTCDE=2,MF=L
*
NTP03MSG WTO   'NTP03  NETOP PPO ALREADY OPEN - SPO ONLY AVAILABLE',   *
               ROUTCDE=2,MF=L
*
NTP04MSG WTO   'NTP04  NETOP ALREADY RUNNING',                         *
               ROUTCDE=2,MF=L
*
NTP05MSG WTOR  'NTP05 - REPLY ''U'' TO RETRY OR OTHER TO TERMINATE',   *
               TBUF,1,ECBMAIN,ROUTCDE=1,MF=L
*
NTP06MSG WTO   'NTP06  UNABLE TO OPEN ACB FOR           ',             *
               ROUTCDE=2,MF=L
*
NTP07MSG WTO   'NTP07  UNABLE TO CLOSE ACB FOR          ',             *
               ROUTCDE=2,MF=L
*
NTP08MSG WTO 'NTP08  NETOP UNABLE TO OPEN VTAMLOG ',                   *
               ROUTCDE=2,MF=L
*
NTP09MSG WTO   'NTP09 - RETRYING EVERY 15 SECONDS FOR 2 MINUTES',      *
               ROUTCDE=2,MF=L
*
NTP10MSG WTO 'NTP10  RETURN CODE=CD, ERROR CODE=CD',                   *
               ROUTCDE=2,MF=L
*
NTP11MSG WTO 'NTP11  UNABLE TO LOGON MASTER TERMINAL          - USE PF1*
               1 ON ANY MASTER CANDIDATE',ROUTCDE=1,DESC=2,MF=L
*
NTP12MSG WTO 'NTP12  NETOP CANCELLED - DID YOU TRY ''PF3 ALL'' FIRST?',*
               ROUTCDE=2,MF=L
*
*        OVERLAYS FOR MESSAGES
*
         ORG   NTP01MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP01  '
NTP1NODE DS    CL8
*
         ORG   NTP06MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP06  UNABLE TO OPEN ACB FOR '
NTP06TYP DS    CL9
*
         ORG   NTP07MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP07  UNABLE TO CLOSE ACB FOR '
NTP07TYP DS    CL9
*
         ORG   NTP08MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP08  NETOP UNABLE TO OPEN '
NTP08DDN DS    CL8
*
         ORG   NTP10MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP10  RETURN CODE='
NTP10RC  DS    CL2
         DS    C' ,ERROR CODE='
NTP10EC  DS    CL2
*
         ORG   NTP01MSG
         DS    XL4                SKIP OVER WTO PARAMETERS
         DS    C'NTP11  UNABLE TO LOGON MASTER TERMINAL '
NTP11NOD DS    CL8
         ORG
SIMNIB   NIB   PROC=TRUNC,MODE=RECORD
         PRINT NOGEN
         ORG
TRTAB    DC    C'0123456789ABCDEF'  TR TABLE FOR BIN TO HEX
*
LOGLN#   DS    H                  LOG LINE COUNT
PAGESIZE DC    H'60'              # LINES PER PAGE
LOGPG#   DS    H                  LOG PAGE COUNT
EOFPGCNT DC    H'3'               # PAGES BETWEEN WRITE-EOFS
LOGHDR   DC    AL2(133,0)         LOG HEADER LINE
         DC    CL30'1'
         DC    C'NETOP LOG'
         DC    CL72' '
         DC    C'DATE '
LOGHDRDT DS    CL5
*
LOGSKP   DC    AL2(5,0)           LOG SKIP AFTER HEADER LINE
         DC    C'-'
*
DYNPTR   DC    0A(0),X'80',AL3(REQBLOCK)                         85241
REQBLOCK DC    0A(0),AL1(20,0),X'2000',H'0,0',A(0,0,0)  NO RES   85241
S99ERROR EQU   REQBLOCK+4,2,C'H'  ERROR RETURN                   85241
LOGDDO   $TU   DDNAM,C'VTAMLOGO',PREFIX=DAL                      85241
LOGDDI   $TU   DDNAM,C'VTAMLOGI'                                 85241
LOGDS    $TU   DSNAM,C'SYS1.VTAMLOG'                             85241
OLD      $TU   STATS,X'01'                                       85241
MOD      $TU   STATS,X'02'                                       85241
PRT1     $TU   DDNAM,C'SYSPRINT'                                 85241
PRT2     $TU   SYSOU,C'A'                                        85241
PRT3     $TU   CLOSE          (FREE=CLOSE)                       85241
LGITUP   $TUP  TXT=(LOGDDI,LOGDS,OLD)
LGOTUP   $TUP  TXT=(LOGDDO,LOGDS,MOD)
LGOTUPF  $TUP  TXT=LOGDS
PRTUP    $TUP  TXT=(PRT1,PRT2,PRT3)                              85241
*
NTPATCH  DC    20F'0'             PATCH AREA
*
         PRINT NOGEN
*
***********************************************************************
*                                                                     *
*        DATA CONTROL BLOCKS FOR LOGGING                              *
*                                                                     *
***********************************************************************
*
SYSPRINT DCB   DDNAME=SYSPRINT,                                        *
               BLKSIZE=141,LRECL=137,                                  *
               DSORG=PS,RECFM=VA,MACRF=(PM)
VTAMLOGI DCB   DDNAME=VTAMLOGI,                                        *
               BLKSIZE=3155,LRECL=137,SYNAD=LOGSYNAD,BUFNO=0,          *
               DSORG=PS,RECFM=VBA,MACRF=(PL,GL)
VTAMLOGO DCB   DDNAME=VTAMLOGO,                                        *
               BLKSIZE=3155,LRECL=137,SYNAD=LOGSYNAD,BUFNO=2,          *
               DSORG=PS,RECFM=VBA,MACRF=(PL)
         PRINT NOGEN
*
* PO VTAM CONTROL BLOCKS.
*
RCVRPL   RPL   AM=VTAM,                                                *
               ACB=ACBTERMS,                                           *
               AREA=RCVDA,                                             *
               AREALEN=DALEN,                                          *
               EXIT=INBOUND,                                           *
               OPTCD=(ANY,ASY,TRUNC),                                  *
               RTYPE=DFSYN
         PRINT NOGEN
SENDRPL  RPL   AM=VTAM,                                                *
               ACB=ACBSPO,                                             *
               AREA=SENDDA,                                            *
               AREALEN=DALEN,                                          *
               EXIT=OUTBOUND,                                          *
               OPTCD=ASY
PRIMARPL RPL   AM=VTAM
LOGONRPL RPL   AM=VTAM,BRACKET=BB   FOR INITIAL MESSAGE
DISCRPL  RPL   AM=VTAM
*
         PRINT NOGEN
LOGONNIB NIB   PROC=TRUNC,                                             *
               EXLST=NXLST,                                            *
               MODE=RECORD
*
ACBTERMS ACB   AM=VTAM,                                                *
               APPLID=MODULEID,                                        *
               PASSWD=TERMSPW,                                         *
               EXLST=TXLST,                                            *
               MACRF=LOGON
TERMSPW  DC    X'06',CL8'VTAMOP'       PASSWORD FOR TERMINAL ACB
MODULEID DC    AL1(5),CL5'NETOP'                                 85245
*
PPOID    DC    X'06',CL8'NETPPO'       ID FOR PPO ACB
SPOID    DC    X'06',CL8'NETSPO'       ID FOR SPO ACB
POPW     DC    X'07',CL8'VTAMCMD'      PASSWORD FOR PO-VTAM ACBS
*
         PRINT NOGEN
ACBPPO   ACB   AM=VTAM,                                                *
               APPLID=PPOID,                                           *
               PASSWD=POPW,                                            *
               EXLST=PXLST,                                            *
               MACRF=NLOGON
ACBSPO   ACB   AM=VTAM,                                                *
               APPLID=SPOID,                                           *
               PASSWD=POPW,                                            *
               EXLST=PXLST,                                            *
               MACRF=NLOGON
*
TXLST    EXLST AM=VTAM,                                                *
               LERAD=ERROR,                                            *
               SYNAD=ERROR,                                            *
               TPEND=TPEND,                                            *
               LOGON=LOGON,                                            *
               RELREQ=RELREQ,                                          *
               LOSTERM=LOSTERM
*
NXLST    EXLST AM=VTAM,                                                *
               RESP=RESP
*
PXLST    EXLST AM=VTAM,                                                *
               LERAD=ERROR,                                            *
               SYNAD=ERROR
*
*
* TERMINALS ELIGIBLE TO BE MASTER TERMINAL.
*
MATABLE  $MATAB L1C4,        MR                                  85240 *
               L1C5,         GP                                  85240 *
               L1C6,         MAIN CONSOLE OPERATIONS             85240 *
               L1C7          SPARE                               85240
MAPATCH  DC    XL32'00'       SPARE - LAST ENTRY IS DUMMY, LENGTH 0
*
*        CAREFUL -- LOWERCASE TEXT IN HELP SCREEN
*
HELPM    DC   X'F5C2'               ADDRESSED VIA ADCON @HELPM
         DC   X'115D7F1DE8'
         DC   C'KEY      VALID INPUT                      NETOP ACTION'
         DC   X'11C25F1D40'
         DC   X'11&L(3)',C'ENTER    full vtam cmd                      *
                   passed asis'
         DC   X'11&L(4)',C'         abbr vtam cmd  ( NET,ID=  omitted) *
                   NET,ID=               inserted'
         DC   X'11&L(5)',C'         vtam nodename                      *
                   D NET,ID=             inserted'
         DC   X'11&L(6)',C'         1 or 2 digit numeric+blank+cmd     *
                   pf key n/nn assumed for rescan'
         DC   X'11&L(7)',C'PF1      n/a                                *
                   help screen'
         DC  X'11&L(08)',C'PF2      control keyword (next help screen) *
                   set/reset control function'
         DC  X'11&L(09)',C'PF3      ALL (only from a master for shutdow*
               n)  END NETOP'
         DC  X'11&L(10)',C'                                            *
                   END  (syscon primary if no ma)'
         DC  X'11&L(11)',C'PF4      vtam nodename                      *
                   F NET,ID=             inserted'
         DC  X'11&L(12)',C'PF5      os command                         *
                   passed to command scheduler'
         DC  X'11&L(13)',C'PF6      vtam nodename                      *
                   V NET,INACT,I,ID=     inserted'
         DC  X'11&L(14)',C'PF7      vtam nodename,applid               *
                   V NET,ID=,LOGON=      inserted'
         DC  X'11&L(15)',C'PF8      vtam nodename                      *
                   V NET,INACT,ID=       inserted'
         DC  X'11&L(16)',C'PF10     vtam nodename (cluster only status)*
                   D NET,ID=             inserted'
         DC  X'11&L(17)',C'PF11     vtam nodename (logging required)   *
                   D NET,ID=             inserted'
         DC  X'11&L(18)',C'PF12     vtam nodename                      *
                   V NET,ACT,ID=         inserted'
         DC  X'11&L(19)',C'PA1/PA2       n/a      auto - null/init+cmd;*
                    no-auto - delete/roll'
         DC  X'11&L(20)',C'CLEAR/PA3     n/a      auto - screen init;  *
                    no-auto - screen roll'
         DC  X'11&L(21)',C'TESTREQ       n/a (not remotes)             *
                   END (syscon primary if no ma)'
HELPML   EQU   *-HELPM
*
*
HELPM2   DC   X'F5C2115D7F1DE8'     ADDRESSED VIA ADCON @HELPM2
         DC   C'PF2 INPUT                                 NETOP ACTION'
         DC   X'11C25F1D60'
*
         DC   X'11&L(04)',C' userid     '
         DC   C'Display command generated if user logged on'
*
         DC   X'11&L(06)1D'
HELPR    DC   X'60',C' ROLL     ',X'1D60'
         DC   C'Output rolls continuously from top to bottom of screen'
         DC   X'11&L(07)1D'
HELPRZ   DC   X'60',C'NROLL     ',X'1D60'
         DC   C'Output halts at bottom of screen awaiting pa/clear key'
*
         DC   X'11&L(09)1D'
HELPAZ   DC   X'60',C' AUTO     ',X'1D60'
         DC   C'Abbreviated input is expanded and passed to vtam'
         DC   X'11&L(10)1D'
HELPA    DC   X'60',C'NAUTO     ',X'1D60'
         DC   C'Abbreviated input is expanded and redisplayed'
*
         DC   X'11&L(12)1D'
HELPEZ   DC   X'60',C' ECHO     ',X'1D60'
         DC   C'All logged responses are echoed if master terminal'
         DC   X'11&L(13)1D'
HELPE    DC   X'60',C'NECHO     ',X'1D60'
         DC   C'No logged responses are echoed if master terminal'
*
         DC   X'11&L(15)1D'
HELPS    DC   X'60',C' SOLO     ',X'1D60'
         DC   C'Only solicited messages to be displayed'
         DC   X'11&L(16)1D'
HELPSZ   DC   X'60',C'NSOLO     ',X'1D60'
         DC   C'Solicited and unsolicited messages to be displayed'
*
         DC   X'11&L(18)1D'
HELPL    DC   X'60',C' LOGD     ',X'1D60'
         DC   C'Display cmd responses to be logged if master terminal'
         DC   X'11&L(19)1D'
HELPLZ   DC   X'60',C'NLOGD     ',X'1D60'
         DC   C'Display cmd responses not to be logged (except PF11)'
*
         DC   X'11&L(24)',C'            '
         DC   C'NOTE:  ',X'1DE8'
         DC   C'INTENSIFIED',X'1D60',C'OPTIONS ARE IN FORCE'
HELPML2  EQU   *-HELPM2
*
*                             TRT TABLE FOR RANGE NOTATION CHECK
TRTTAB   DC    64X'00'        ADDRESSED VIA ADCON @TRTTAB
         DC    X'02'               C' '   DELIM
         DC    10X'00'
         DC    X'01'               C'.'   RANGE
         DC    18X'00'
         DC    X'01'               C';'   RANGE
         DC    X'00'
         DC    X'01'               C'-'   RANGE
         SPACE
         DC    X'01'               C'/'   RANGE
         DC    9X'00'
         DC    X'02'               C','   DELIM
         DC    14X'00'
         DC    X'01'               C':'   RANGE
         DC    133X'00'
LERRRPL  DC    CL120'STATERPL   '  COPY OF READ ONLY RPL
*
*
***********************************************************************
*        DATA AREAS FOR HARD COPY LOG                                 *
***********************************************************************
*
LOGREC   DSECT                    LOG BUILD AREA
LOGRDW   DS    2H                 DESCRIPTOR WORD
LOGASA   DS    C                  ASA CNTL CHAR
LOGTXT   DS    CL132              TEXT BUFFER
         ORG   LOGTXT
LOGWTLHD DS    CL4                PAD TO ALIGN NETOP LINES IN SYSLOG
LOGTIME  DS    CL8                TERMINAL NAME
LOGBL1   DS    CL1
LOGTIML  EQU   *-LOGASA           LOG TIME PREFIX LENGTH
LOGNODE  DS    CL8                TERMINAL NAME
LOGBL2   DS    CL2
LOGPRFL  EQU   *-LOGRDW           LOG TOTAL PREFIX LENGTH
LOGMSG   DS    CL97               COMMAND/MESSAGE TEXT
         ORG   LOGMSG+20
LOGLIT   DS    CL9                'NETOP LOG' IN HDR
         ORG   LOGMSG+87
LOGDLIT  DS    CL5                'DATE ' IN HDR
LOGDATE  DS    CL5                YYYDD IN HDR
         ORG
LOGCONT  EQU   LOGTXT+131,1       RECORD TRUNCATED=>'+' INSERTED HERE
         END
./ ADD NAME=NETSOL,SSI=00084141
         MACRO
&LABEL   $CMD  &GAPPL,&VAPPL,&ROUT,&CMDTEXT,&CMDFLAG
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S COMMAND LOOK-UP TABLE.
.*
.*  INPUT    : &GAPPL   - GENERALIZED APPLICATION NAME.
.*             &VAPPL   - ASSOCIATED VTAM APPLICATION NAME.
.*             &ROUT    - ROUTINE TO PROCESS THE COMMAND.
.*             &CMDTEXT - COMMAND ENTERED FROM TERMINAL.
.*             &CMDFLAG - COMMAND FLAG BYTE.
.*
.*  OUTPUT   : AN ENTRY IN NETSOL'S COMMAND ENTRY TABLE IS GENERATED.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : APR  15/81
.*
         LCLA  &L
&L       SETA  K'&CMDTEXT-2
&LABEL   DC    CL8'&GAPPL',CL8'&VAPPL',CL8&CMDTEXT,AL4(&ROUT),AL2(&L),AX
               L1(&CMDFLAG,0)
         MEND
         MACRO
&LABEL   $GP   &GPLEN,&ERRTEXT,&GPFLAG
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S GETPARM OPTION LIST.
.*
.*  INPUT    : &GPLEN   - MAXIMUM LENGTH OF PARAMETER.
.*             &ERRTEXT - TEXT FOR ERROR MSG FROM GETPARM ROUTINE.
.*             &GPFLAG  - OPTION BYTE FOR GETPARM.
.*
.*  OUTPUT   : A PARAMETER OPTION LIST
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : JUNE 19/81
.*
         LCLA  &L
&L       SETA  K'&ERRTEXT-2
&LABEL   DC    AL2(&GPLEN,&L),AL1(&GPFLAG),CL&L&ERRTEXT
         MEND
         SPACE 2
         COPY $3270INT
         SPACE 2
         TITLE '*****************    N E T S O L'
***********************************************************************
*                                                                     *
*                  *****************                                  *
*                                                                     *
*                    N E T W O R K                                    *
*                                                                     *
*                  S O L I C I T O R                                  *
*                                                                     *
*                   ( N E T S O L )                                   *
*                                                                     *
*                                                                     *
*  ENTRY PARAMETERS:  R15  -  ENTRY POINT ADDRESS                     *
*                     R13  -  CALLERS SAVE AREA (FROM ATTACH)         *
*                     R14  -  RETURN ADDRESS (POINTS TO SVC 3 IN CASE *
*                             OF ATTACH BY NET)                       *
*                     R0-R12  NOT USED                                *
*                                                                     *
*  EXIT PARAMETERS:   R0-R14  SAME AS ENTRY TO NETSOL                 *
*                     R15     ZERO                                    *
*                                                                     *
*  FUNCTION:  NETSOL IS USED TO HANDLE TERMINAL INITIATED LOGONS      *
*             AND AS SUCH SOLICITS LOGON DATA FROM THE TERMINALS      *
*             UNDER ITS CONTROL.                                      *
*                                                                     *
*             WITH THE ABOVE DATA, NETSOL CAN PASS CONTROL OF THE     *
*             LOGICAL UNIT FROM NETSOL'S CONTROL TO THAT OF THE       *
*             REQUESTED APPLICATION.                                  *
*                                                                     *
*             TO FACILITATE ENDUSER EASE OF USE, NETSOL HAS A TABLE   *
*             OF APPLICATIONS THAT USE NON-STANDARD LOGMODE TABLE     *
*             ENTRIES. WHEN THE USER REQUESTS ONE OF THESE            *
*             APPLICATIONS, NETSOL LOADS THE APPROPRIATE LOGMODE      *
*             NAME FROM THE TABLE AND PASSWS THIS INFORMATION         *
*             TO THE APPLICATION DURING THE CLSDST(PASS). THE ENDUSER *
*             IS NOT REQUIRED TO KNOW ABOUT LOGMODE TABLES. THE       *
*             NAME OF THIS TABLE IS 'LOGMDTAB'.                       *
*                                                                     *
*             THE 'LOGOFF' COMMAND HAS BEEN ADDED TO NETSOL TO ALLOW  *
*             8100-ATTACHED TERMINALS TO DISCONNECT FROM NETSOL. 8100 *
*             TERMINALS ARE GENNED WITH A NULL 'LOGAPPL'. LOGOFF     .*
*             ENTERED AT A STANDARD 3270 TERMINAL, WILL HAVE NO       *
*             EFFECT SINCE LOGAPPL=NETSOL FOR THESE TERMINALS.        *
*                                                                     *
*             ERROR MESSAGES CAN BE ISSUED AT VARIOUS STAGES OF THIS  *
*             PROCESS IF THE APPLICATION IS INACTIVE, LOGON DATA      *
*             ENTERED IS INVALID, APPLICATION WON'T ACCEPT LOGONS,ETC.*
*             ALL ERROR MESSAGES ISSUED BY NETSOL ARE PREFIXED WITH   *
*             THE CHARACTER STRING 'BCSC'.                            *
*                                                                     *
*             TO AID IN DEBUGGING, NETSOL ALSO WRITES SOME MESSAGES   *
*             TO THE OPERATORS CONSOLE WHEN ERRORS AE DETECTED AS A   *
*             RESULT OF I/O ERRORS, INVALID LOGONS, ETC.              *
*                                                                     *
*             NETSOL SUPPORTS BISYNC AND SDLC 3270 DEVICES (3276'S,   *
*             3275'S, 3276'S, AND 3278'S).                            *
*                                                                     *
*             NETSOL USES RECORD MODE I/O TO TALK TO ITS TERMINALS    *
*             SO IT DOES NOT SUPPORT ANY TERMINALS THAT CAN BE        *
*             ACCESSED VIA BASIC MODE I/O ONLY.                       *
*                                                                     *
*             TO AID IN CONTROLLING THE TERMINALS LOGGED ON TO        *
*             NETSOL, NETSOL MAINTAINS A TERMINAL TABLE WHICH HAS     *
*             AN ENTRY FOR EACH TERMINAL THAT HAS BEEN LOGGED ON      *
*             AT ANY TIME SINCE NETSOL WAS FIRST BROUGHT UP. THESE    *
*             TERMINAL TABLE ENTRIES (TTE'S) ARE USED TO PROVIDE      *
*             A MEANS OF TRANSLATING A GIVEN CID TO THE LU NAME AND   *
*             WHEN THE RELEASE-REQUEUE (RELREQ) EXIT NEEDS TO KNOW    *
*             THE STATUS OF A GIVEN TERMINAL (IE IS IT TRYING TO      *
*             DO A LOGON).                                            *
*                                                                     *
*             MOST OF NETSOL'S FUNCTIONS ARE PERFORMED IN VARIOUS     *
*             EXITS AS FOLLOWS:                                       *
*                                                                     *
*             1) TPEND EXIT        - HANDLE 'Z NET' FUNCTION          *
*                                    WHERE NETSOL IS TO SHUT DOWN.    *
*                                                                     *
*             2) LOGON EXIT        - HANDLES TERMINALS BEING LOGGED   *
*                                    ON TO NETSOL. BUILDS OR UPDATES  *
*                                    TTE, DOES OPNDST(ACCEPT), AND    *
*                                    SENDS THE FORMATTED LOGON SCREEN *
*                                    TO THE TERMINAL.                 *
*                                                                     *
*             3) LOSTERM EXIT      - HANDLE 'LOST TERMINAL' CONDITIONS*
*                                    DUE TO LU/PU/LINK/NCP FAILURES.  *
*                                    DEPENDING ON THE CONDITION, MAY  *
*                                    ATTEMPT TO RECOVER THE TERMINAL. *
*                                                                     *
*             4) RELREQ EXIT       - HANDLE RELEASE-REQUEUE REQUESTS  *
*                                    WHERE ANOTHER VTAM APPLICATION   *
*                                    WANTS THE TERMINAL OWNED BY      *
*                                    NETSOL. UNLESS A LOGON IS TAKING *
*                                    PLACE, NETSOL RELEASES THE LU.   *
*                                                                     *
*             AS WELL, A NUMBER OF RPL EXITS ARE USED TO HANDLE       *
*             RPL COMMANDS THAT ARE DONE ASYNCHRONOUSLY VIA RPL'S     *
*             THAT ARE GETMAINED WHEN NEEDED. THESE EXITS ARE:        *
*                                                                     *
*             1) OPNDST END EXIT   - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    OPDNST TO A SPECIFIC TERMINAL    *
*                                    COMPLETES.                       *
*                                                                     *
*             2) RECEIVE END EXIT  - ENTERED WHEN A RECEIVE(ANY) RPL  *
*                                    IS POSTED COMPLETE. EXAMINES THE *
*                                    DATA ENTERED FOR A LOGON REQUEST *
*                                    FROM THE TERMINAL USER.          *
*                                                                     *
*             3) END OF SEND EXIT  - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    SEND TO THE TERMINAL COMPLETES.  *
*                                                                     *
*             4) CLSDST(PASS) END  - ENTERED WHEN THE CLSDST(PASS)    *
*                                    COMPLETES THAT PASSES CONTROL    *
*                                    TO THE APPLICATION REQUESTED.    *
*                                    NETSOL RE-ISSUES SIMLOGON TO     *
*                                    GAIN CONTROL BACK WHEN USER      *
*                                    LOGS OFF THE APPLICATION         *
*                                                                     *
*             5) CLSDST(RELEASE)   - ENTERED WHEN CLSDST(RELEASE)     *
*                                    COMPLETES. DONE DUE TO RELREQ    *
*                                    REQUEST OR I/O ERRORS.           *
*                                                                     *
*             AS WELL, NETSOL MAKES USE OF A NUMBER OF SUBROUTINES    *
*             AS FOLLOWS:                                             *
*                                                                     *
*             1) GETRPL            - OBTAIN DYNAMIC RPLS VIA A        *
*                                    GETMAIN FROM SUBPOOL 1           *
*                                                                     *
*             2) FREERPL           - FREEMAIN DYNAMIC RPL'S           *
*                                                                     *
*             3) RECSUB            - ISSUE RECEIVE ANY'S              *
*                                                                     *
*             4) ERROR EXIT        - HANDLES ERRORS WHEN A CHECK      *
*                                    MACRO IS USED ON AN ASYNC RPL    *
*                                    OR A SYNC RPL COMPLETES. PASSES  *
*                                    BACK RETURN CODES AND A MODIFIER *
*                                    (USUALLY ERROR MESSAGE NUMBER)   *
*                                    TO CODE AFTER THE INSTRUCTION    *
*                                    THAT MADE THE MACRO CALL         *
*                                                                     *
*                                                                     *
*  REGISTER USAGE:                                                    *
*                                                                     *
*         R0  - ERROR MESSAGE NUMBER, PARAMETERS, SVC'S, ETC          *
*         R1  - PARAMETERS TO MACROS, SVC'S                           *
*         R2  - WORK                                                  *
*         R3  - -> TTE IN MOST CASES / WORK                           *
*         R4  - WORK                                                  *
*         R5  - -> DYNAMIC RPL / SYNCHRONOUS RPL                      *
*         R6  - WORK                                                  *
*         R7  - WORK  (ADDRESS OF ERROR SOMETIMES ON BAL R7,SNOCCUR)  *
*         R8  - -> ASYNCHRONOUS / SYNCHRONOUS NIB                     *
*         R9  - -> DDT WHEN DOING DEVICE DEP WORK / WORK              *
*         R10 - BASE REGISTER 3                                       *
*         R11 - BASE REGISTER 2                                       *
*         R12 - BASE REGISTER 1                                       *
*         R13 - ADDRESS OF SAVE AREA (USUALLY IN DYNAMIC RPL)         *
*         R14 - RETURN ADDRESS                                        *
*         R15 - ENTRY POINT, RETURN CODES                             *
*                                                                     *
*                                                                     *
*  ATTRIBUTES: SERIALLY REUSEABLE , NON-AUTHORIZED, VTAM APPLICATION  *
*                                                                     *
*  CONTROL BLOCK DEPENDENCIES: RPL, ACB, NIB, EXIT PARAMETER LISTS    *
*                                                                     *
*  ROUTINES CALLED: NONE                                              *
*                                                                     *
*  ********* MACROS USED: DCLSW, GOIF, SET, RESET, EXECUTE            *
*                                                                     *
*  SYSTEM MACROS USED: SAVE, GETMAIN, FREEMAIN, STIMER, OPEN,         *
*                      WAIT, WTO, CLOSE, ABEND, POST, CHECK           *
*                                                                     *
*  VTAM MACROS USED:  SETLOGON, OPNDST, INTRPRET, INQUIRE,            *
*                     GENCB, CLSDST, SIMLOGON, SEND, RECEIVE          *
*                                                                     *
*  MESSAGES TO TERMINAL USER:                                         *
*                                                                     *
*             LOGON SCREEN WITH BCSC LOGO.                            *
*                                        ENTERED BY THE TERMINAL USER)*
*                                                                     *
*             BCSC101          LOGMODE ENTRY UNDEFINED                *
*                                                                     *
*             BCSC102 INVALID LOGON SEQUENCE , REENTER                *
*                                                                     *
*             BCSC103 NO INTERPRET TABLE SPECIFIED FOR LU             *
*                                                                     *
*             BCSC104 NO INTERPRET ROUTINE TO RECOGNIZE APPLICATION   *
*                                                                     *
*             BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION          *
*                                                                     *
*             BCSC106 LOGON IN PROGRESS                               *
*                                                                     *
*             BCSC107 XXXXXXXX NOT DEFINED TO VTAM                    *
*                                                                     *
*             BCSC108 XXXXXXXX IS NOT ACTIVE OR LOGMODE INVALID       *
*                                                                     *
*             BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS             *
*                                                                     *
*             BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS                 *
*                                                                     *
*             BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS       *
*                                                                     *
*                                                                     *
*  MESSAGES TO THE SYSTEM OPERATOR:                                   *
*                                                                     *
*             BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL       *
*                     DUE TO I/O ERROR                                *
*                                                                     *
*             BCSC002 RC=42 ON NETSOL CLOSE ACB                       *
*                                                                     *
*             BCSC003 SYNAD/LERAD EXIT REQ=**,FBDK2=**,SSENSEI=**,    *
*                     SSENSMI=**,SENSE=****,TERM=********             *
*                                                                     *
*             BCSC004 LOSTERM ENTRY CODE ** FOR TERM=********         *
*                                                                     *
*             BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST    *
*                                                                     *
*             BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS    *
*                     PROGRAM IS TERMINATED.                          *
*                                                                     *
*             BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT       *
*                                                                     *
*  USER ABEND CODES:  U0001 - PROBLEM WITH OPEN OF THE ACB            *
*                     U0002 - SETLOGON FAILED                         *
*                     U0004 - RETURN CODE/SENSE CODE NOT EXPECTED     *
*                     U0008 - PROBLEM WITH THE TERMINAL TABLE (TTE)   *
*                                                                     *
*                                                                     *
*  RESTRICTIONS:                                                      *
*                                                                     *
*        1) THE TERMINAL TABLE HAS ONLY ROOM FOR 256 TERMINALS (4K),  *
*           IF MORE ARE NEEDED, THE CONSTANT 'TERMLTAB' WILL HAVE TO  *
*           BE CHANGED WITH A ZAP OR BY RE-ASSEMBLY OF NETSOL.        *
*                                                                     *
*        2) ONLY RECORD MODE DEVICES ARE CURRENTLY SUPPORTED.         *
*                                                                     *
*        3) NO DEVICES ARE CURRENTLY SUPPORTED THAT DO NOT SEND       *
*           3270 CONTROL CHARACTERS (EG SBA X'11'). LOGON CODE        *
*           WOULD HAVE TO BE CHANGED TO SUPPORT THEM.                 *
*                                                                     *
*        4) ANY FIELDS IN THE RPL WORK AREA THAT NEED TO BE ZERO      *
*           INITIALLY SHOULD BE PLACED AHEAD OF THE I/O AREAS AS      *
*           THESE ARE NOT INITIALIZED. IF THE AMOUNT TO BE            *
*           INITIALIZED EXCEEDS 256 BYTES, THE INITIALIZATION AND     *
*           COPY CODE IN GETRPL AND ERREXIT WILL HAVE TO BE CHANGED.  *
*                                                                     *
*        5) NETSOL ASSUMES THAT IT CAN ONLY HAVE ITS LOSTERM EXIT     *
*           ENTERED FOR TERMINALS WHOSE CID'S CAN BE FOUND IN THE     *
*           TERMINAL TABLE. A U0008 ABEND WILL OCCUR IF NOT FOUND.    *
*                                                                     *
*        6) NETSOL OBTAINS THE SYSTEM ID FOR CHANGING '***OLT**'      *
*           APPLICATION ID'S USING SVC 253. IF THIS FUNCTION CHANGES, *
*           NETSOL WILL HAVE TO BE LOOK AT                            *
*                                                                     *
*        7) BE CAREFUL OF CHANGING CODE THAT SETS BRACKET STATES AS   *
*           YOU MAY CAUSE ERRORS ON THE 3276 (MUST SEND BCSC106 WITH  *
*           AND END BRACKET BECAUSE IF THE CLSDST(PASS) FAILS AND WE  *
*           SEND AN ERROR MESSAGE (BCSC108) TO THE 3276, GET A X'0404'*
*           WITH A SENSE OF '081B' INDICATING BAD STATE).             *
*                                                                     *
*                                                                     *
*  VERSION:  *********  NETSOL   DC18202                              *
*                                                                     *
*  LAST UPDATE: FEB 27, 1979
*                                                                     *
*                                                                     *
*        F O R   F U R T H E R   I N F O R M A T I O N   O N          *
*          T H I S   P R O D U C T   S E E   T H E                    *
*              N E T S O L   D O C U M E N T A T I O N                *
*                                                                     *
*                                                                     *
***********************************************************************
         TITLE '*********  N E T S O L  -  INITIAL DECLARATIONS'      *
         SPACE 2
         TITLE '*********  N E T S O L  -  MAINLINE'
NETSOL   CSECT
         SPACE 2
***********************************************************************
*        NETSOL MAIN-LINE CODE INITIALIZATION                         *
*        REQUIRES OS/VS2 MVS RELEASE 3.7 + ACF/VTAM (SU 35+40)        *
***********************************************************************
         SPACE 2
START    B     STM-START(0,15)         JUMP OVER APPL NAME
NSNAME   DC    AL1(8),CL8'NETSOL70'    LOGON APPLID NAME FOR NETSOL
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'//&SYSTIME/'        ASSEMBLY TIME
STM      STM   14,12,12(13)            SAVE REGISTERS
         LR    R12,R15                 LOAD 1ST BASE REGISTER
         USING START,R12,R11,R10       TELL ASSEMBLER
         LM    R10,R11,RESTBASE        REST OF BASES
         ST    R13,MAINSAVE+4          CHAIN SAVE AREAS
         LR    R15,R13
         LA    R13,MAINSAVE            POINT R13 TO NS SAVE AREA
         ST    R13,8(,R15)             FORWARD SAVE AREA CHAIN
         SPACE 2
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
         SPACE 2
***********************************************************************
*        IF THE APPLID FIELD DOESN'T CONTAIN 'NETSOL' FOR THE         *
*        APPLICATION NAME, THIS CODE WILL MOVE THE CONTENTS OF NSNAME *
*        INTO MESSAGE 12 FOR EACH OF THE SUPPORTED DEVICES TO ALLOW   *
*        FOR EASY VISUAL IDENTIFICATION OF THE TEST VERSION OF NETSOL.*
***********************************************************************
         SPACE 1
         CLC   NSNAME+1(8),=CL8'NETSOL' PRODUCTION VERSION OF NETSOL?
         BE    GETTAB                   YES => BR TO GET TERM TABLE
         L     R1,=AL4(S32NSNAM)        NO  => UPDATE 3270
         MVC   0(8,R1),NSNAME+1                   MSG 12
         L     R1,=AL4(S3ENSNAM)        NO  => UPDATE 3270 EXTENDED
         MVC   0(8,R1),NSNAME+1                   MSG 12
         L     R1,=AL4(S37NSNAM)        NO  => UPDATE 3767
         MVC   0(8,R1),NSNAME+1                   MSG 12
*        SPACE 2
***********************************************************************
*        OBTAIN SPACE FROM SUBPOOL 2 FOR THE TERMINAL TABLE. THIS     *
*        TABLE IS USED TO MAINTAIN THE TERMINAL NAME, CID, AND LOGON  *
*        STATUS FOR ALL TERMINALS CONNECTED TO NETSOL. BY USING THIS  *
*        TABLE AND PROVIDING ENTRY ADDRESS IN THE RPL USER FIELD, WE  *
*        SAVE ON HAVING TO DO CID TRANSLATES FOR NAMES.               *
***********************************************************************
         SPACE 1
GETTAB   L     R0,TERMLTAB             GET LENGTH FOR GETMAIN
         ICM   R0,8,=X'02'             ADD SUBPOOL=2 TO IT
         GETMAIN R,LV=(0)              GET SPACE FOR TABLE
         ST    R1,TERMTABS             SAVE STARTING ADDRESS
         A     R1,TERMLTAB             COMPUTE END ADDRESS
         ST    R1,TERMTEND             SAVE IT TOO
         SPACE 1
RTRYOPEN DS    0H
         SR    R15,R15                 CLEAR RETURN-CODE REGISTER
         OPEN  ACB                     CONNECT NETSOL TO VTAM
         SPACE 2
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR OPEN ERROR.                            *
***********************************************************************
         SPACE 1
         CLI   ACB+X'31',X'52'         HALT IN PROGRESS ?
         BE    CLSOK                   YES, END THE TASK
         LTR   R15,R15                 SUCCESSFUL OPEN ?
         BZ    OPENOK                  YES, ALLOW LOGONS TO HAPPEN
         SPACE 2
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'58' WHICH CAN HAPPEN IF     *
*        THE OPERATOR HAS STARTED A SECOND COPY OF NETSOL. IN THIS
*        CASE, TELL THE OPERATOR ABOUT HIS MISTAKE AND TERMINATE
*        EXECUTION.                                                   *
***********************************************************************
         SPACE 1
         CLI   ACB+X'31',X'58'         APPLID ALREADY IN USE?
         BNE   OPENA5A                 NO => CHECK NEXT ERROR
         WTO   MF=(E,LISTWTO6)         TELL OPERATOR HIS MISTAKE
         B     FREETTE                 FREE TTE TABLE AND END
         SPACE 2
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5A' WHICH CAN HAPPEN IF     *
*        VTAM IS JUST COMMING UP AND NETSOL'S APPLID IS NOT YET       *
*        ACTIVE. IF THIS IS THE CASE, ISSUE A STIMER WAIT FOR
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         SPACE 1
OPENA5A  CLI   ACB+X'31',X'5A'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 2
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5C' WHICH CAN HAPPEN IF     *
*        VTAM IS DOWN. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         SPACE 1
         CLI   ACB+X'31',X'5C'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 2
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'70' WHICH CAN HAPPEN IF     *
*        NETSOL ABENDS AND IS RE-ATTACHED BY VTAM AND VTAM HAS NOT    *
*        YET SUCCESSFULLY FINISHED CLEANUP PROCESSING FOR             *
*        NETSOL'S ACB. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         SPACE 1
         CLI   ACB+X'31',X'70'         CAN'T OPEN ACB YET ?
         BNE   OPENFAIL                NO, REAL OPEN ERROR
OPENLOOP STIMER WAIT,BINTVL=WAIT1SEC   WAIT 1 SECOND, TRY AGAIN
         B     RTRYOPEN                GO AND RETRY OPERATION
         EJECT
***********************************************************************
*        READ THE INITIALIZATION FILE CONTAINING NETSOL COMMANDS      *
*        WHICH ESTABLISH AUTO LOGON,WTO MSG DEFAULTS,ETC.             *
*        AN ASYNC RPL WILL BE USED WHEN PROCESSING THESE INIT CMDS.   *
***********************************************************************
         SPACE 1
OPENOK   DS    0H
         BAL   R14,GETRPL              GET RPL FOR INIT CMD USE.
         BAL   R14,READINIT            PROCESS INIT CMDS
         BAL   R14,RECSUB              NOW REUSE RPL FOR RECEIVE
         EJECT
***********************************************************************
*        BEFORE ALLOWING LOGONS TO TAKE PLACE ISSUE 10 RECEIVE ANY'S  *
*        SO WE CAN HANDLE UP TO 10 LOGONS AT A TIME. WHEN THE RECEIVE *
*        EXIT IS SCHEDULED, IT WILL ALSO RE-ISSUE A RECEIVE ANY WITH  *
*        A NEW GOTTEN RPL.                                            *
***********************************************************************
         SPACE 1
         LA    R2,9                    # OF RPLS FOR RECEIVES
GETLOOP  BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE RECEIVE ANY
         BCT   R2,GETLOOP              LOOP TILL TEN DONE
         LA    PTRRPL,SETLRPL          POINT TO RPL FOR WORKAREA
         SPACE 2
***********************************************************************
*        ISSUE SETLOGON WITH START OPTION TO ALLOW LOGONS TO TAKE     *
*        PLACE. ANY LOGONS QUEUED FOR NETSOL WILL NOW DRIVE NETSOL'S  *
*        LOGON EXIT.                                                  *
***********************************************************************
         SPACE 1
SLOGON   SETLOGON RPL=(PTRRPL),        SYNCH OPERATION. ACT-           X
               OPTCD=START             IVATE LOGON EXIT.
         SPACE 2
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.  IF          *
*   ERREXIT WAS ENTERED, THE VTAM FEEDBACK CODE IN REG 0 WAS          *
*   PLACED IN REG 15 BEFORE RETURNING TO THE MAINLINE NSI.            *
*   ERREXIT DID NOT CHANGE THE RETURN CODES TO ACTION CODES.          *
***********************************************************************
         SPACE 1
         CH    R15,HEX8                NEED TO REISSUE?
         BE    SLOGON                  YES.  DO IT
         LTR   R15,R15                 SETLOGON ACCEPTED ?
         BNZ   SETLFAIL                NO, BRANCH
         LTR   R0,R0                   VALID COMPLETION?
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2
***********************************************************************
*    ALL FURTHER WORK IN NETSOL IS PERFORMED VIA ASYNCHRONOUS EXIT    *
*    ROUTINES. THE MAINLINE CODE WAITS UPON AN ECB WHICH IS POSTED    *
*    BY THE TPEND EXIT WHEN VTAM SHUTS DOWN NETSOL.                   *
***********************************************************************
         SPACE 1
         WAIT  ECB=FINISECB            WAIT FOR VTAM END
         EJECT
***********************************************************************
*        EXECUTION CONTINUES HERE WHEN ECB IS POSTED BY TPEND EXIT.   *
***********************************************************************
         SPACE 1
         SR    R15,R15                 ZERO RC REG FOR CLOSE
         CLOSE ACB                     RELEASE CONNECTION WITH
         SPACE 2
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR CLSDSTERROR.                           *
***********************************************************************
         SPACE 1
         LTR   R15,R15                 DID THE CLOSE GO?
         BZ    CLSOK                   YES, EXIT
         CLI   ACB+X'31',X'42'         CLOSE COMPLETE?
         BNE   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         WTO MF=(E,LISTWTO1)           INFORM OPERATER
         SPACE 2
***********************************************************************
*        SINCE WE DON'T KNOW HOW MANY RPL'S ARE OUTSTANDING (MAY BE   *
*        MORE THAN 10), WE FREE THE WHOLE SUBPOOL OF RPL'S AND DO THE *
*        SAME FOR THE TERMINAL TABLE AS WELL.                         *
***********************************************************************
         SPACE 1
CLSOK    FREEMAIN R,SP=1               FREE DYNAMIC RPL SPACE
         SPACE 1
FREETTE  FREEMAIN R,SP=2               FREE TERMINAL TABLE SPACE
         SPACE 1
         L     R13,MAINSAVE+4          FIND INPUT SAVE AREA
         SR    R14,R14                 CLEAR FORWARD SAVE
         ST    R14,8(,R13)             AREA CHAIN PTR
         LM    R14,R12,12(R13)         LOAD INPUT REGS
         SR    R15,R15                 RCODE=0 FOR NORMAL RTN
*        RETURN
         BR    14                      RETURN TO CALLER OR ATTACHER
         EJECT
***********************************************************************
*        THE FOLOWING CODE IS BRANCHED TO FROM THE MAIN-LINE CODE,    *
*        EXIT CODE, AND FROM THE ERREXIT ROUTINE.  THE ONLY ACTION    *
*        TAKEN SINCE THE CASES ARE 'SHOULD NOT OCCUR' CONDITIONS, IS  *
*        TO ABNORMALLY TERMINATE NETSOL WITH A REASON CODE IN         *
*        DUMPFLAG AND CAUSE A DUMP TO BE TAKEN.                       *
***********************************************************************
         SPACE 1
OPENFAIL DS    0H                      OPEN-ACB IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,OPENCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SETLFAIL DS    0H                      SETLOGON IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,SETLCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SNOCCUR  DS    0H                      REQUEST FAILED BECAUSE
*                                       OF AN INVALID CONTROL
*                                       BLOCK OR OTHER CON-
*                                       DITION WHICH SHOULD
*                                       NOT OCCUR
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         CLOSE ACB                     AVOID OPEN FAILURE ON
*                                      RE-DISPATCH OF SUBTASK
         MVI   DUMPFLAG,CBLKCODE       SAVE NETSOL DUMP CODE
         B     DUMP
         SPACE 1
TOOSMALL STM   R0,R15,SNOREGS          SAVE REGS
         MVI   DUMPFLAG,TABLTRBL       TROUBLE WITH TTE
         B     DUMP
         SPACE 1
DUMP     DS    0H                      TERMINATE WITH A DUMP
         SR    R1,R1                   PUT REASON CODE IN REG 1
         IC    R1,DUMPFLAG
         SPACE 1
         ABEND (1),DUMP
         TITLE '*********  N E T S O L  -  MAINLINE DATA AREAS'
MAINSAVE DS    18F                     SAVE AREA FOR MAINLINE
RESTBASE DC    A(START+8192,START+4096) REST OF BASE REG VALUES
WAIT1SEC DC    F'100'                  WAIT TIME OF 1.00 SECS
TERMTABS DC    A(0)                    START OF TERMINAL TABLE  FOR
TERMTABI DC    A(TERMELEN)             INDEX VALUE              BXLE
TERMTABE DC    A(0)                    LAST ENTRY USED ADDRESS  USE
TERMLTAB DC    A(768*TERMELEN)         SIZE OF TABLE (ENTRIES*LENGTH)
TERMTEND DC    A(0)                    END OF TABLE + 1
         EJECT
         TITLE '*********  N E T S O L  - READ INITIALIZATION COMMANDS'
***********************************************************************
*                                                                     *
*    READINIT PROCESSES THE NETSOL COMMANDS IN THE SYSIN FILE.        *
*    COMMANDS WHICH CAN BE PLACED IN THIS FILE ARE FLAGGED            *
*    WITH 'CMDINIT' IN THEIR CMD TABLE ENTRY.                         *
*                                                                     *
*    TO ALLOW COMMAND PROCESSING ROUTINES TO BE INDEPENDENT OF THEIR  *
*    SOURCE, ALL COMMAND PROCESSORS ASSUME A DDT,TTE AND ASYNC RPL    *
*    AVAILABLE FOR THEIR USE. THEREFORE, THESE CONTROL BLOCKS HAVE    *
*    BEEN SET UP FOR READINIT.                                        *
*                                                                     *
*    INPUT : R5  - A(ASYNC RPL)                                       *
*            R13 - A(SAVE AREA)                                       *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : REGISTERS ARE UNCHANGED                                  *
*                                                                     *
***********************************************************************
         EJECT
READINIT DS    0H
         SPACE 1
         STM   R14,R12,12(R13)         SET
         ST    R13,RPLSAVE+4             UP
         LA    R1,RPLSAVE                  SAVE
         ST    R1,8(,R13)                    AREA
         LR    R13,R1                          CHAIN
         SPACE 1
*        OPEN SYSIN AND SYSOUT FILES. NETSOL WILL CONTINUE EXECUTION
*        EVEN WITH ERRORS IN THE INIT FILE.
         SPACE 1
         OPEN  (SYSINDCB,(INPUT),SYSOUDCB,(OUTPUT)) OPEN FILES
         TM    SYSINDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSIN OPEN?
         BZ    DCBOSYSI                           NO => ERROR MSG
         TM    SYSOUDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSOUT OPEN?
         BNZ   RIOPENOK                           YES => BR TO CONTINUE
         MVC   DCBMSG+12(6),=CL6'SYSOUT'  MOVE
         B     *+10                        DDNAME
DCBOSYSI MVC   DCBMSG+12(6),=CL6'SYSIN '      TO OPERATOR MSG
         WTO   MF=(E,DCBMSG)             LOG ERROR MESSAGE ON SYSLOG
         B     RIEXIT                    END PROCESSING
         SPACE 1
*        SET UP RPL,TTE AND DDT LINKS FOR INIT
         SPACE 1
RIOPENOK OI    UFLAGS,INIT               FLAG PROCESSING INITIALIZATION
         LA    R3,TTEDUMMY               LOAD A(DUMMY TTE FOR INIT)
         ST    R3,RPLUSFLD               SET UP RPL USER PTR
         LA    R9,DDTSYSIN               LAOD A(DDT FOR INIT)
         ST    R9,TERMDDT                SAVE IN TTE
         SPACE 1
*        PROCESS NETSOL COMMANDS FROM THE SYSIN FILE
         SPACE 1
READLOOP LA    R6,IOAREA                 LOAD A(IO BUFFER)
         GET   SYSINDCB,(R6)             READ CMD FROM SYSIN FILE
         PUT   SYSOUDCB,(R6)             ECHO CMD TO SYSOUT FILE
         LA    R2,80                     SET UP REG 2 WIH REC LENGTH
         B     INTRPRET                  BR TO EDIT COMMAND
         SPACE 1
*        RETURN FROM CMD PROCESSING.
*        R0 CONTAINS MSG INDEX FOR OUTPUT MSG
         SPACE 1
RIPUTMSG LR    R1,R0                   LOAD INDEX INTO R1
         BCTR  R1,0                    INDEX - 1
         SLL   R1,2                    4 * (INDEX - 1)
*                                      = DISPLACEMENT OF MESSAGE
         L     R2,DDTMSGTB(R1)         POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(,R2)               PICK UP MSG LENGTH
         LA    R2,2(R2)                SKIP OVER MSG LENGTH
*        MOVE MESSAGE TO OUTPUT BUFFER AND WRITE TO SYSOUT
         MVI   IOAREA,X'40'            INITIALIZE BUFFER
         MVC   IOAREA+1(79),IOAREA       WITH BLANKS
         BCTR  R1,0                    MOVE MESSAGE
         EX    R1,RIEX1                  TO OUTPUT BUFFER
         PUT   SYSOUDCB,IOAREA         WRITE MESSAGE TO SYSOUT FILE
         B     READLOOP                BR TO GET NEXT CMD
         SPACE 1
*        END OF DATA REACHED ON SYSIN FILE
         SPACE 1
EODSYSIN TM    UFLAGS,INITERR          ERROR WHILE PROCESSING CMD FILE
         BNO   RICLOSE                 NO => CONTINUE
         WTO   MF=(E,INITEMSG)         YES => LOG ERROR TO OPERATOR
RICLOSE  CLOSE (SYSINDCB,,SYSOUDCB)    CLOSE SYSIN & SYSOUT
         NI    UFLAGS,X'FF'-INIT       FLAG END OF INIT PROCESSING
         SPACE 1
*        EXIT FROM READINIT
         SPACE 1
RIEXIT   L     R13,4(,R13)             RESTORE
         LM    R14,R12,12(R13)           REGISTERS
         BR    R14                         AND RETURN
         SPACE 5
RIEX1    MVC   IOAREA(0),0(R2)         MOVE MSG TO OUTPUT BUFFER
         TITLE '*********  N E T S O L  - GETPARM SUBROUTINE'
***********************************************************************
*                                                                     *
*    GETPARM LOCATES THE NEXT TEXT UNIT IN THE COMMAND BUFFER.        *
*                                                                     *
*    THIS TEXT UNIT IS VALIDATED FOR:                                 *
*         A) MAXIMUM LENGTH                                           *
*         B) REQUIRED PARAMETER                                       *
*                                                                     *
*    INPUT : R1  - A(PARAMETER OPTION LIST)                           *
*            R2  - A(OUTPUT MSG BUFFER)                               *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R1  - A(TEXT UNIT) OR GARBAGE IF ERROR                   *
*            R15 - LENGTH OF TEXT UNIT                                *
*                                                                     *
*   RETURN : 0(R14) - VALID TEXT UNIT FOUND                           *
*            4(R14) - NO TEXT UNIT FOUND (IF PARAMETER IS OPTIONAL)   *
*            8(R14) - ERROR DETECTED WHILE PROCESSING TEXT UNIT       *
*                                                                     *
***********************************************************************
GETPARM  DS    0H
         SPACE 1
         ST    R1,GPPARM          SAVE A(PARM OPTION LIST)
         SPACE 1
*        CHECK FOR NO DATA LEFT IN COMMAND BUFFER
         SPACE 1
         LH    R6,GPDATAL         GET LENGTH OF REMAINING DATA
         LTR   R6,R6              ANY DATA LEFT?
         BZ    GPNODATA           NO => BR TO HANDLE
         SPACE 1
*        FIND NEXT TEXT UNIT IN COMMAND BUFFER
         SPACE 1
         L     R7,GPDATAP         LOAD A(CURRENT OFFSET IN CMD BUFFER)
GRPLOOP1 CLI   0(R7),X'40'        FIND
         BNZ   GPNONBLK             FIRST
         LA    R7,1(,R7)              NON
         BCT   R6,GRPLOOP1              BLANK
         B     GPNODATA                   CHARACTER
         SPACE 1
*        FIND END OF TEXT UNIT
         SPACE 1
GPNONBLK LR    R1,R7              SET TEXT UNIT PTR
GPLOOP2  CLI   0(R7),X'40'        FIND
         BE    GPGOTIT              LAST
         LA    R7,1(,R7)              NON-BLANK
         BCT   R6,GPLOOP2               CHARACTER
         SPACE 1
*        NEXT TEXT UNIT HAS BEEN FOUND
         SPACE 1
GPGOTIT  ST    R7,GPDATAP         SAVE CURRENT OFFSET IN CMD BUFFER
         STH   R6,GPDATAL         SAVE LENGTH OF REMAINING DATA
         SR    R7,R1              CALC LENGTH OF THE TEXT UNIT
         LR    R15,R7               & MOVE TO REG 15
         B     GPCHKOPT           BR TO VALIDATE PARM OPTIONS
         SPACE 1
GPNODATA SR    R15,R15            INDICATE NO TEXT UNIT
         SPACE 1
*        VALIDATE THE PARAMETER OPTIONS FOR THE TEXT UNIT
         SPACE 1
GPCHKOPT L     R6,GPPARM          LOAD A(OPTION LIST)
         CH    R15,GPLEN(,R6)     TU > MAX ALLOWED?
         BNH   GPCHK10            NO => BR TO NEXT CHECK
         MVC   0(L'GPMSG1,R2),GPMSG1 MOVE ERR MSG TO BUFFER
         CH    R15,=H'8'          MOVE
         BNH   *+8                  MAX 8
         LA    R15,8                  CHARACTERS
         BCTR  R15,0                    OF TEXT UNIT
         EX    R15,GPEX1                  TO ERROR MSG
         LA    R1,L'GPMSG1(,R2)   POINT TO END OF ERROR MSG
         B     GPERRTXT           BR TO MOVE KEYWORD TO MSG
         SPACE 1
GPCHK10  LTR   R15,R15            WAS THERE A TEXT UNIT?
         BNZ   GPXFND             YES => EXIT NORMAL
         TM    GPFLAG(R6),GPOPT   WAS PARAMETER OPTIONAL?
         BNZ   GPXZERO            YES => EXIT NO PARM
         MVC   0(L'GPMSG2,R2),GPMSG2 NO => MOVE ERR MSG
         LA    R1,L'GPMSG2(,R2)   POINT TO END OF ERROR MSG
         SPACE 1
GPERRTXT LH    R7,GPTEXTL(,R6)    GET LENGTH OF TEXT IN OPT LIST
         BCTR  R7,0               DECREMENT FOR MOVE
         EX    R7,GPEX2           ADD OPTION LIST TEXT TO ERR MSG
         SPACE 1
         B     8(,R14)            TAKE ERROR RETURN
         SPACE 1
GPXZERO  B     4(,R14)            RETURN WITH NO TEXT UNIT
         SPACE 1
GPXFND   BR    R14                RETURN WITH TEXT UNIT FOUND
         SPACE 5
GPEX1    MVC   0(0,R2),0(R1)      MOVE TEXT UNIT TO ERROR MSG
GPEX2    MVC   0(0,R1),GPTEXT(R6) MOVE OPT LIST TEXT TO ERROR MSG
GPMSG1   DC    C'XXXXXXXX IS TOO BIG FOR '
GPMSG2   DC    C'MISSING PARAMETER '
         TITLE '*********  N E T S O L  - INIT MSG13 SUBROUTINE'
***********************************************************************
*                                                                     *
*    INITMSG4 LOCATES AND INITIALIZES THE MSG4 OUTPUT BUFFER.         *
*                                                                     *
*    INPUT : R9  - A(DDT)                                             *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R2  - A(MSG13 OUTPUT BUFFER)                             *
*                                                                     *
***********************************************************************
INITMSG4 DS    0H
         SPACE 1
         L     R2,DDTM4OFS        GET A(MSG13)
         LH    R1,DDTM4L          LOAD LENGTH OF MSG13 BUFFER
         MVI   0(R2),X'40'        INSERT 1ST BLANK
         BCTR  R1,0               DECREMENT LENGTH
         BCTR  R1,0               DECREMENT LENGTH
         EX    R1,INITM4X         INIT REST OF BUFFER
         SPACE 1
         BR    R14
         SPACE 5
INITM4X  MVC   1(0,R2),0(R2)      PROPOGATE BLANK THRU OUT BUFFER
         TITLE '*********  N E T S O L  - SETLOGON COMMAND'
***********************************************************************
*                                                                     *
*    SETLOGON SETS UP THE AUTOMATIC LOGON APPLICATION FOR A NODE.     *
*                                                                     *
*    THE FORMAT OF THE COMMAND IS:                                    *
*                                                                     *
*        SETLOGON NODENAME APPLID                                     *
*                                                                     *
*    IF THE APPLID IS OMITTED, THEN THE LOGAPPL RESET TO NOTHING.     *
*                                                                     *
*    INPUT : NO PARAMETERS                                            *
*                                                                     *
*   OUTPUT : R0  - INDEX INTO DDT MSG TABLE                           *
*                                                                     *
***********************************************************************
SETLOGON DS    0H
         SPACE 1
         BAL   R14,INITMSG4       OBTAIN MSG4  BUFFER
         SPACE 1
*        GET NODENAME
         SPACE 1
         LA    R1,SLNODE          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET NODE NAME
         B     *+12               +0 - FOUND IT
         B     SLXERR             +4 - NOT THERE
         B     SLXERR             +8 - ERROR IN NODENAME
         MVC   NODENAME,=CL8' '   SAVE
         BCTR  R15,0                NODENAME
         EX    R15,SLEX1              FOR LATER
         SPACE 1
*        GET APPLID (OPTIONAL)
         SPACE 1
         LA    R1,SLAPPL          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET APPLID
         B     *+12               +0 - FOUND APPLID
         B     SLTABLOK           +4 - APPLID NOT SPECIFIED
         B     SLXERR             +8 - ERROR IN APPLID
         MVC   DLOGAPPL,=CL8' '   SAVE
         BCTR  R15,0                APPLID
         EX    R15,SLEX2              FOR LATER
         LA    R15,1(,R15)        RESTORE APPLID LENGTH
         SPACE 1
*        SCAN TERM TABLE FOR NODENAME
         SPACE 1
SLTABLOK STM   R3,R5,12(R13)      SAVE REGS
         LA    R1,NODENAME             PT @ NODENAME
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    SLNOENT                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
SLTABLP  CLC   0(8,R1),TERMNAME        MATCH THE NAME ?
         BE    SLFNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,SLTABLP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BL    SLNOENT                 NO => NODENAME NOT IN TABLE
         BAL   R7,SNOCCUR              YES => SHOULD NOT OCCUR
         SPACE 1
*        THERE IS NO TTE ENTRY FOR THIS NODE.
*        NO APPLID WILL BE TREATED AS AN ERROR IN THIS CASE.
         SPACE 1
SLNOENT  L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDENT                YES => ADD ENTRY
         MVC   0(L'SLMSG1,R2),SLMSG1   NO  => MOVE ERROR MSG TO BUFFER
         MVC   0(8,R2),NODENAME               MOVE NODENAME TO MSG
         LM    R3,R5,12(R13)                  RESTORE REGS
         B     SLXERR                         BR TO ERROR EXIT
         SPACE 1
*        ADD TERM TABLE ENTRY FOR SPECIFIED NODE NAME
*        IF NO APPLID WAS SPECIFIED, THEN THE LOGAPPL IS RESET IN TTE
         SPACE 1
SLADDENT ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),NODENAME    COPY NAME ACROSS
         B      SLADDAPL               BR TO ADD APPLID TO ENTRY
         SPACE 1
SLFNDTAB MVI   TERMFLAG,0              CLEAR LOGON STATUS FLAG
         L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDAPL                YES => GO ADD APPLID
         XC    TERMDAPL,TERMDAPL       NO  => ZERO LOGON APPLID
         MVC   0(L'SLMSG2,R2),SLMSG2          MOVE MSG TO OUT BUF
         MVC   19(8,R2),NODENAME              ADD NODE NAME TO MSG
         B     SLNDTTE                        BR TO END OF TTE PROCESS
         SPACE 1
SLADDAPL MVC   TERMDAPL,DLOGAPPL       ADD LOGON APPLID TO TTE
         MVC   0(L'SLMSG3,R2),SLMSG3   MOVE OK MSG TO OUT BUF
         MVC   0(8,R2),TERMDAPL        ADD APPLID TO MSG
         MVC   33(8,R2),TERMNAME       ADD NODE NAME TO MSG
         SPACE 1
SLNDTTE  LM    R3,R4,13(R13)           RESTORE REGS
         B     SLEXIT                  BR TO EXIT
         SPACE 1
SLXERR   TM    UFLAGS,INIT             CMD ISSUED DURING INITIALIZATION
         BZ    *+8                     NO  => BR TO CONTINUE
         OI    UFLAGS,INITERR          YES => FLAG ERROR DURING INIT
         SPACE 1
SLEXIT   LA    R0,MSG04                INDICATE MSG4  TO BE SENT
         B     SENDMSG                 EXIT TO SEND MSG
         SPACE 5
SLEX1    MVC   NODENAME(0),0(R1)       SAVE NODENAME PARM
SLEX2    MVC   DLOGAPPL(0),0(R1)       SAVE APPLID PARM
SLMSG1   DC    C'XXXXXXXX NOT KNOWN TO NETSOL'
SLMSG2   DC    C'DEFAULT APPLID FOR XXXXXXXX RESET'
SLMSG3   DC    C'XXXXXXXX IS NOW LOGON APPLID FOR XXXXXXXX'
***********************************************************************
*    ACTION OF NETSOL NOW PROCEEDS BY USE OF EXIT ROUTINES.           *
*    THE FOLLOWING EXITS ARE SCHEDULED IN RESPONSE TO VTAM EVENTS:    *
*                                                                     *
*              TPEND   - VTAM SHUTS DOWN                              *
*              LOGON   - A TERMINAL IS SIMULATED LOGGED ON TO NETSOL, *
*                        OR IS PASSED TO NETSOL BY ANOTHER APPLICATION*
*              LOSTERM - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS DISCONNECTED (DIAL-LINE), OR 'VARY'ED TO  *
*                        ANOTHER APPLICATION                          *
*              RELREQ  - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS REQUESTED BY ANOTHER APPLICATION          *
*                                                                     *
*     RPL EXITS -                                                     *
*                                                                     *
*             READEND  - THE OUTSTANDING READ(ANY) HAS BEEN SATISFIED *
*             SENDEND  - A SEND HAS BEEN POSTED COMPLETE.             *
*             OPENEND  - AN OPNDST HAS COMPLETED.                     *
*             PASSEND  - CLSDST(PASS) HAS COMPLETED FOR A LOGON       *
*                        REQUEST MADE FROM A TERMINAL.                *
*             WRITEND  - END OF WRITE REQUEST.  WRITE WAS DUE         *
*                        TO INVALID LOGON FROM THE TERMINAL.          *
*             CDSTEND1 - CLSDST(RELEASE) COMPLETED.                   *
***********************************************************************
         TITLE '*********  N E T S O L  -  TPEND EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * VTAM IS CLOSING DOWN                                 *
*                                                                     *
*              * OPERATOR ISSUED A HALT COMMAND                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - REASON CODE FOR SHUTDOWN                      *
*                                                                     *
*        THIS PARAMETER LIST IS NOT USED BY NETSOL                    *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 3
TPEND    DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESSABILITY
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        REST OF  BASE REGS
         OI    UFLAGS,SHUTDOWN         INFORM OTHER EXITS OF SHUTDOWN
         SPACE 1
         POST  FINISECB                POST MAINLINES ECB
         SPACE 1
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN FROM IRB
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  LOGON EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * A TERMINAL IS LOGGED ON VIA VARY TO NETSOL           *
*                                                                     *
*              * A TERMINAL IS RETURNED TO NETSOL BY AN APPLICATION.  *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - POINTER TO SYMBOLIC TERMINAL NAME             *
*              WORD 2 - RESERVED                                      *
*              WORD 3 - LENGTH OF LOGON DATA.                         *
*              WORD 4 - READ-ONLY RPL POINTING TO LOGON CINIT.        *
*              WORD 5 - CID OF PENDING SESSION.                       *
*                                                                     *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 3
LOGON    DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESSABILITY
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RETURN
         SPACE 2
***********************************************************************
*        NOW ADD THE TERMINAL NAME TO THE TERMINAL TABLE AND RETURN   *
*        THE ENTRIE'S ADDRESS SO IT CAN BE PLACED IN THE NIB USER     *
*        FIELD. SUBSEQUENT OPERATIONS USING AN RPL WILL HAVE THE      *
*        RPLUSFLD UPDATED WITH THE TERMINAL TABLE ADDRESS FROM THE    *
*        NIB. IF ENTRY ALREADY EXISTS IN TABLE (SECOND LOGON, ETC.),  *
*        THEN WE RESET THE TERMINALS STATUS. A COUNT IS MAINTAINED    *
*        OF THE NUMBER OF LOGONS FOR A GIVEN TERMINAL. THE TERMINAL   *
*        TABLE CAN BE EXPANDED IF NEEDED TO PROVIDE ADDITIONAL STATS. *
***********************************************************************
         SPACE 1
         L     R2,4(,R1)               -> TERMINAL NAME PASSED BY LOGON
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    NOTABLE                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
TABLOOP  CLC   0(8,R2),TERMNAME        MATCH THE NAME ?
         BE    FOUNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,TABLOOP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BNL   TOOSMALL                YES, ABEND USER 0008
         SPACE 1
NOTABLE  ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),0(R2)       COPY NAME ACROSS
         SPACE 1
FOUNDTAB LH    R4,TERMLOGC             GET LOGON COUNT
         A     R4,=F'1'                ADD 1 TO IT
         STH   R4,TERMLOGC             SAVE IT BACK
         MVI   TERMFLAG,0              CLEAR LOGON STATUS FLAG
         MVC   TERMCID(4),20(R1)       SAVE PENDING CID FOR INQUIRE
         SPACE 2
***********************************************************************
*        OBTAIN AN ASYNC RPL/NIB AND PREPARE FOR OPNDST               *
***********************************************************************
         SPACE 1
         BAL   R14,GETRPL              OBTAIN AN RPL
         LA    PTRNIB,NIBSTART         -> NIB WITHIN RPL
         OI    EXITFLAG,LOGONEX        MARK LOGON EXIT ENTERED
         MVC   NIBSYM(8),TERMNAME      MOVE IN SYMBOLIC NAME
         ST    R3,NIBUSER              NIB USER -> TERM TABLE ADDRESS
         ST    R3,RPLUSFLD             SAVE FOR ERROR ON OPNDST
         ST    PTRRPL,TERMCRPL         SAVE A(RPL) IN TTE
         SPACE 2
***********************************************************************
*        OBTAIN THE SESSION PARAMETERS WITH THE INQUIRE MACRO         *
***********************************************************************
         SPACE 1
INQUIRSE MVC   SYNCHRPL(FRSYNL),FRSYNRPL REINIT SYNCH RPL
         XC    SESSPARM,SESSPARM       ZERO SESSION PARM WORK AREA
         ST    R3,SYNUSFLD             SAVE A(TTE) IN RPL USER FLD
         L     R2,TERMCID              LOAD CID FOR INQUIRE
         OI    MACFLAG2,INQSES         INDICATE INQUIRE(SESSPARM)
         OI    MFLAGS2,INQSESS
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=SESSPARM,                                         X
               ARG=(R2),                                               X
               AREA=SESSPARM,                                          X
               AREALEN=L'SESSPARM
         NI    MFLAGS2,255-(INQSESS)   RESET ERREXIT FLAG
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(SESSPARM)                                *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO CINIT QUEUED                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 3
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                 CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABC(R15)            CHECK VALID ACTIONS
ERRTABC  B     R0CHKC               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         BAL   R7,SNOCCUR           C
         B     INQUIRSE            10  REISSUE.  NO NEED TO
         B     FREERPL             14  TERMINAL GONE. END REQUEST
         SPACE 1
R0CHKC   DS    0H
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
*******> BNZ   SNOCCUR                 YES, OR OTHER ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2
***********************************************************************
*        USE BIND PARAMETERS JUST OBTAINED TO DETERMINE TERMINAL TYPE *
***********************************************************************
         SPACE 1
         LA    R2,SESSPARM             ESTABLISH ADDRESSABILITY
         USING ISTDBIND,R2               TO BIND PARMATERS
         CLI   BINLUP,BINLUP2C         LU TYPE 2 (3270) ?
         BE    LU3270                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP1C         LU TYPE 1 (3767) ?
         BE    LU3767                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP0C-BINLUP0C  IF NOT LU TYPE 0        84142
         BNE   BADLU                     THEN ASSUME UNSUPPORTED DEVICE
         CLI   BINFM,X'02'               ELSE IF FM=02
         BE    LU3270                         THEN ASSUME 3270
         CLI   BINFM,X'03'                    IF FM=03
         BE    LU3767                         THEN ASSUME 3767
         B     BADLU                          ELSE DEVICE NOT SUPPORTED
LU3270   DS    0H            INSERTION FOR PRE-ACF VTAM          84142
         AIF   (NOT &SP AND NOT &XA).NOTSEDS                     84142
         TM    BINDFLAG,BINSEDS        3270 WITH EXTENDED FUNCTION?
         BO    LU3270E                 YES - BR TO LOAD DDT3270E
.NOTSEDS LA    R1,DDT3270              NO  - PT AT DDT3270
         B     STORDDT                       BR TO STORE A(DDT)
LU3270E  LA    R1,DDT3270E             PT AT DDT3270E
         B     STORDDT                 BR TO STORE IN TTE
LU3767   LA    R1,DDT3767              PT AT DDT FOR 3767
STORDDT  ST    R1,TERMDDT              STORE A(DDT) IN TTE
         DROP  R2
         SPACE 2
***********************************************************************
*    ISSUE AN OPNDST TO CONNECT NETSOL TO LOGGED-ON TERMINAL.         *
***********************************************************************
         SPACE 1
OPENDST  OI    MACFLAGS,OPNSPEC        INDICATE DOING AN OPNDST(SP)
        OI   MFLAGS,OPNDSPEC
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(ACCEPT,SPEC,NQ),                                 X
               EXIT=OPENEND,                                           X
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST                                           *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    OPENDST                 YES. REISSUE
         LTR   R15,R15                 CLSDST ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  OPNDST END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE LOGON EXIT.                  *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 3
OPENEND  DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(ACCEPT,SPEC)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15 R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    09    NODE DEACTIVATED                     14  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    01    OPNDST FAILED                        14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    05    PERMENENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   10    11    SDT FAILED                           14  00           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         OI    EXITFLAG,OPENEX         INDICATE IN OPNDST EXIT
         CH    R15,HEX14               HIGHEST VALID ACTION
*******> BH    SNOCCUR                  CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB1(R15)            CHECK VALID ACTIONS
ERRTAB1  B     R0CHK1               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         BAL   R7,SNOCCUR           C  CAN'T WRITE MSG IF NOT
*                                      CONNECTED
         B     OPENDST             10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK1   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    RETURN                  RETURN IF SO
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2
***********************************************************************
*        CID OF DEVICE JUST OPNDST'ED IS NOW IN ASYNC RPL.            *
*        SOLICIT THE DEVICE JUST CONNECTED.                           *
***********************************************************************
         SPACE 1
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         MVC   CID(4),RPLARG           SAVE CID IN RPL WORKAREA
         LA    PTRNIB,NIBSTART         ADDRESS NIB
         L     R3,NIBUSER              -> TERM TABLE ENTRY
         MVC   TERMCID,RPLARG          COPY THE CID TO TTE
         ST    R3,RPLUSFLD             SAVE A(TTE) IN RPL FOR MSG
         MVI   TERMFLG2,TOPEN          MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND          FIRST SEND TO THE DEVICE
         NI    SRPLEXT1,FF-RPLNIB      RESET SYNCHRPL
         SPACE 2
***********************************************************************
*        DO AUTOMATIC LOGON FOR THOSE TERMINALS THAT HAD A            *
*        DEFAULT LOGON SPECIFIED IN THE INITIALIZATION DATA SET.      *
***********************************************************************
         SPACE 1
         CLC   TERMDAPL,=XL8'00'       IS THERE A DEFAULT APPL?
         BE    OPNDSTC                 NO  => GO WRITE MSG TO DEVICE
         SPACE 2
***********************************************************************
*        TO PREVENT LOOPING IN AUTOMATIC LOGON, AUTO LOGON WILL       *
*        BE TERMINATED IF MORE THAN 3 LOGONS FOR A TERMINAL ARE       *
*        PROCESSED IN A 60 SECOND TIME PERIOD.                        *
***********************************************************************
         SPACE 1
         TIME  BIN                     GET TIME IN .01 SECS
         C     R0,TERMDTIM             < 60 SECS SINCE LAST LOGON?
         BH    AUTONEW                 NO  => ASSUME NEW AUTO LOGON
         LH    R1,TERMDCNT             YES => INCR
         LA    R1,1(,R1)                        LOOP
         STH   R1,TERMDCNT                        COUNTER
         CH    R1,HEX2                 MORE THAN 3 TIMES IN 60 SECS?
         BNH   AUTOINQR                NO  => GO INQUIRE RE APPL STATUS
         B     OPNDSTC                 YES => SKIP AUTO LOGON
AUTONEW  A     R0,=AL4(100*60)         ADD 60 SECS TO CURRENT TIME
         ST    R0,TERMDTIM  AND STORE FOR LATER
         XC    TERMDCNT,TERMDCNT       ZERO LOOP COUNTER
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE DEFAULT LOGON APPLICATION FOR THIS TERMINAL.              *
*                                                                     *
***********************************************************************
         SPACE 1
AUTOINQR MVC   APPLID(8),TERMDAPL      SAVE APPLID FROM TTE ENTRY
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 2
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREA OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         MVC   SYNCHRPL(FRSYNL),FRSYNRPL CLEAR RPL           DC18203
         ST    R3,SYNUSFLD             SAVE A(TTE) IN SYNCHRPL USRFLD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 3
         CH    R15,HEX10               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                 CODE IS X'10'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB3(R15)            CHECK VALID ACTIONS
ERRTAB3  B     R0CHK3               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     OPNDSTC              C  DEFAULT APPL IS UNKNOWN SO
*                                      SKIP AUTO LOGON
         B     INQUIREA            10  REISSUE.  NO NEED TO
         SPACE 1
R0CHK3   DS    0H
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
*******> BNZ   SNOCCUR                 YES, OR OTHER ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         EJECT
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 3
         SR    R15,R15                 CLEAR  REG 15
         IC    R15,SYNFDB3             EXTRACT FEEDBACK INFO.
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
         B     STATUS3(R15)            BRANCH IN TABLE
STATUS3  B     DAPACTIV             0  DO AUTO LOGON
         B     OPNDSTC              4  SKIP AUTO LOGON
         B     OPNDSTC              8  SKIP AUTO LOGON
         B     OPNDSTC             12  SKIP AUTP LOGON
         B     OPNDSTC             16  SKIP AUTO LOGON
         SPACE 1
DAPACTIV SR    R4,R4                   SET A(LOGON DATA) = 0
         SR    R2,R2                   SET L(LOGON DATA) = 0
         B     FILLNIB                 BR INTO LOGON PROCESSING
         SPACE 2
***********************************************************************
*        NO AUTO LOGON IS BEING DONE FOR THIS TERMINAL SO             *
*        GO SOLICIT LOGON INFORMATION FROM THE TERMINAL USER.         *
***********************************************************************
         SPACE 1
OPNDSTC  LA    R0,MSG12                WRITE LOGON MESSAGE
         B     SENDMSG                 IS FROM THE LOGON EXIT
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  RECEIVE ANY EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN THE OUTSTANDING REC-ANY      *
*    COMPLETES.                                                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL USED FOR THE READ-ANY (IGFRPL)      *
*                                                                     *
*               THE CID FIELD OF THIS RPL HAS CID OF DEVICE           *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 3
RECEND   DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESSABILITY
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RETURN
         SPACE 2
***********************************************************************
*        ISSUE NEW READ SO WE CAN HANDLE MORE THAN 1 LOGON AT A TIME. *
***********************************************************************
         SPACE 1
         LR    R7,R1                   SAVE R7 AROUND THE REC ANY CODE
         BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE A RECEIVE (ANY)
         SPACE 1
         LR    PTRRPL,R7               RESTORE THE INPUT RPL @
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         L     R3,RPLUSFLD             -> TTE
         ST    R5,TERMCRPL             SAVE A(RPL)
         OI    EXITFLAG,RECEX
         SPACE 2
***********************************************************************
*        SAVE CID OF DEVICE FROM RPL ARG FIELD.                       *
*        GET LENGTH OF RECORD READ. THIS WILL BE DECREMENTED          *
*        IF DEVICE CONTROL CHARACTERS ARE REMOVED BEFORE INTRPRET.    *
*                                                                     *
*        NOTE: INFO IN RPL MAY NOT BE VALID IF CHECK RETURNS          *
*              AN ERROR.                                              *
***********************************************************************
         SPACE 1
         MVC   CID(4),RPLARG           GET CID FROM RPL
         MVC   RECLEN(4),RPLRLEN       GET RPL RECORD LENGTH
         SPACE 1
         OI    MFLAGS,RECA             TELL ERREXIT THAT ERRORS
*                                       ARE FOR REC(ANY)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
         NI    MFLAGS,255-(RECA)       RESET READ INDICATOR
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CHECK OF READ (ANY)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. CONDITION ON INCOMMING MESSAGE                  *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     03        FUNCTION ¬ SUPPORTED08  00          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    I/O ERROR.  DEVICE NOT USABLE         08  00          *
*   0C    02    TEST REQUEST SET (LOSTTERM)           14  00          *
*   0C    07    CONNECT REC. IN PROGRESS              14  00          *
*   0C    08    LU RESTARTED (LOSTTERM)               14  00          *
*   0C    0A    REQU. CANCEL. BY RESETR               SNOCCUR         *
*   0C    0B    CANCELED BY CLSDST                    14  00          *
*   0C    0C    REQUEST CANCEL. BY CLEAR              08  04          *
*   10    05    PERMANENT PATH FAILURE                08  00          *
*   10    07    REQUEST CANCEL BY VARY (LOSTTERM)     14  00          *
*   10    09    TERMINATE SELF OR LOGOFF (LOSTTERM)   14  00          *
*   10    0F    BUFFERS FILLED (LOSTTERM)             14  00          *
*   10    10    TERMINATE SELF COMMAND                08  04          *
*   10    0C    DIAL-IN DISCONNECT                    08  00          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    32    REQUEST INVALID FOR SPECIFIED DEVICE  08  00          *
*                                                                     *
***********************************************************************
         SPACE 3
         CH    R15,HEX18               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                  CODE IS X'20'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB2(R15)            CHECK VALID ACTIONS
ERRTAB2  B     R0CHK2               0  VALID DATA FROM READ?
         BAL   R7,SNOCCUR           4
         B     RELOPNB              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     RESEND               10 REISSUE
         B     FREERPL              14
         B     RESEND               18
         SPACE 1
RELOPNB  LTR   R0,R0                   DO OPNDST AFTER CLSDST ?
         BZ    RELEASE
         OI    FLAGS,RELOPND           SAY WE WANT TO REOPEN AFTER RELS
         B     RELEASE
         SPACE 1
R0CHK2   DS    0H
         LTR   R0,R0
*******> BNZ   SNOCCUR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         TM    RPLCNTDC,RPLLUS         DID WE RECEIVE LUSTAT ?
         BO    LUSTATUS                YES, GO HANDLE IT
         SPACE 1
         TM    TERMFLAG,LOGPROC        HAS IMPATIENT USER ISSUED
*                                      A SECOND LOGON SEQUENCE WHILE
*                                      THE FIRST IS IN PROGRESS?
         BO    FREERPL                 YES => IGNORE THIS REQUEST
         OI    TERMFLAG,LOGPROC        NO  => SET LOGON BEING PROCESSED
         SPACE 1
         LA    R6,IOAREA               POINT TO DATA RECEIVED
         L     R2,RECLEN               GET DATA LENGTH
         LTR   R2,R2                   RECEIVE ANY DATA?
*                                      IN CASE NO DATA RECEIVED
*                                       RESOLICIT THE TERMINAL
         BZ    RESEND
         LA    R3,L'IOAREA             COMPARE THE RECLEN WITH
         CR    R2,R3                    THE READ BUFFER LENGTH.
         BNH   GOEDIT                  BUFFER LENGTH GREATER
*                                       THAN INPUT RECORD.
         LR    R2,R3                   ONLY THE FIRST 80 BYTES
*                                       WILL BE READ IN.
         SPACE 1
***********************************************************************
*        BRANCH TO INPUT EDIT ROUTINE FOR THE APPROPRIATE DEVICE TYPE.*
***********************************************************************
         SPACE 1
GOEDIT   DS    0H
         L     R3,RPLUSFLD             LOAD A(TTE)
         L     R9,TERMDDT              LOAD A(DDT FOR DEVICE)
         L     R15,DDTEDIT             LOAD A(DEVICE EDIT ROUTINE)
         BR    R15                     GO EDIT INPUT
         TITLE '*********  N E T S O L  -  INPUT EDIT ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*        S32EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3270       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 2
S32EDIT  DS    0H
         CLI   0(R6),CLEARKEY          IS IT 'CLEAR' KEY ?
         BNE   S32PFK                  NO SO CHECK VALID LOGON
         B     RESEND                  OTHERWISE ASK FOR MORE
         SPACE 2
***********************************************************************
*        NOT 'CLEAR' KEY, CHECK FOR OTHER FUNCTION KEY DEPRESS.  IF   *
*        IT IS A FUNCTION KEY THE DATA WILL BE PASSED DIRECTLY TO     *
*        INTERPRET, OTHERWISE THE DATA POINTER WILL BE UPDATED TO     *
*        SKIP THE 3270 DEVICE CONTROL SEQUENCE.                       *
***********************************************************************
         SPACE 1
S32PFK   DS    0H
         CLI   0(R6),X'7A'             IS IT PF10
         BL    S32PA                   IF LOW CHECK PROGRAM ACCESS
         CLI   0(R6),X'7C'             IS IF PF12
         BNH   INTRPRET                IF IN RANGE DO IT
         CLI   0(R6),C'1'              IS IT PF1
         BL    S32ENTER                IF LOW CARRY ON
         CLI   0(R6),C'9'              IS IT PF9
         BNH   INTRPRET                IF IN RANGE DO IT
*        CHECK PROGRAM ACCESS KEYS HERE
S32PA    CLI   0(R6),X'6C'             IS IT PA1
         BE    INTRPRET                IF YES, DO IT
         CLI   0(R6),X'6E'             IS IT PA2
         BE    INTRPRET                IF YES, DO IT
         CLI   0(R6),X'6B'             IS IT PA3
         BE    INTRPRET                IF YES, DO IT
         SPACE 1
S32ENTER DS    0H
         CLI   0(R6),ENTERKEY          IS IT THE ENTER KEY?
         BNE   BADINPUT
         LA    R3,3                    USER MIGHT HAVE HIT
         CR    R2,R3                   ENTER KEY ONLY BUT NO LOGON
         BE    RESEND                  IF SO LETS GIVE HIM ANOTHER GO
         SPACE 1
         LA    R6,6(R6)                BYPASS SBA 3270 CONTROL + ORDER
         LA    R1,6
         SR    R2,R1                   ALLOW FOR DECREASE
         LTR   R2,R2                   IS THERE ANY THING
         BNP   BADINPUT                NO SO MUST BE INVALID
         B     INTRPRET                GO INTERPRET LOGON SEQ
         TITLE '*********  N E T S O L  -  INPUT EDIT ROUTINE FOR 3767'
***********************************************************************
*                                                                     *
*        S37EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3767       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 2
S37EDIT  DS    0H
         CLI   0(R6),CR                ONLY CARRIAGE RETURN?
         BNE   INTRPRET                NO  => BR TO INTERPRET INPUT
         B     RESEND                  YES => WRITE MSG 12
         TITLE '*********  N E T S O L  -  COMMAND LOOKUP'
***********************************************************************
*                                                                     *
*    SCAN NETSOL'S COMMAND TABLE FOR AN ENTRY MATCHING THE LOGON DATA *
*    ENTERED FROM THE TERMINAL.  IF A MATCH IS FOUND, THE SPECIFIED   *
*    CMD ROUTINE IS BRANCHED TO. OTHERWISE, AN ERROR MESSAGE IS       *
*    WRITTEN TO THE TERMINAL INDICATING INVALID LOGON DATA.           *
*                                                                     *
*    THE COMMAND CAN BE EITHER:                                       *
*           - A REQUEST FOR LOGON TO A VTAM APPLICATION PROGRAM, OR   *
*           - A REQUEST FOR A SERVICE FROM NETSOL, SUCH AS, LOGOFF    *
*                                                                     *
*    INPUT :                                                          *
*        R2 - LENGTH OF LOGON DATA                                    *
*        R6 - A(LOGON DATA IN DATA BUFFER)                            *
*                                                                     *
*    OUTPUT:                                                          *
*        R0 - ERROR MSG # IF NO ENTRY FOUND                           *
*        R1 - A(MATCHING COMMAND TABLE ENTRY)                         *
*                                                                     *
***********************************************************************
         SPACE 3
BADINPUT LA    R0,MSG02                INPUT NOT RECOGNISED
         B     SENDMSG
         SPACE 1
INTRPRET DS    0H
         STC   R2,DATASEQL             SAVE LOGON DATA LENGTH
         ST    R6,DATAPTR              SAVE A(LOGON DATA)
*        CONVERT LOGON DATA TO UPPER CASE
LOWTOUP  OI    0(R6),X'40'             MAKE CURRENT CHAR UPPER CASE
         LA    R6,1(R6)                GET
         BCT   R2,LOWTOUP                  NEXT CHAR
*        SAVE DATA FOR USE IN CLSDST(PASS)
         IC    R2,DATASEQL             RESTORE LOGON DATA LENGTH
         L     R6,DATAPTR              RESTORE A(LOGON DATA)
         BCTR  R2,0                    REDUCE FOR MOVE
         XC    DATASEQ,DATASEQ         ZERO OUT MSG WORK AREA
         EX    R2,@EXEC1               SAVE LOGON DATA
         SPACE 1
*        SEARCH COMMND TABLE FOR MATCHING COMMAND TEXT
         SPACE 1
         LA    R1,CMDTAB
CMDTABLP CLC   CMDGAPPL(,R1),CMDTABND     END OF SEARCH?
         BNE   CMDTABL1                NO
         LA    R0,MSG07                YES => LOAD ERROR MSG #
         B     SENDMSG                        AND GO SEND IT
CMDTABL1 LH    R2,CMDTEXTL(R1)         LOAD LENGTH OF CMDTEXT
         LA    R4,CMDTEXT(,R1)         PT @ CMDTEXT
         LA    R6,DATASEQ              PT @ LOGON DATA
CMDTABL2 CLC   0(1,R4),0(R6)           DOES THIS CHAR MATCH?
         BNE   CMDTABL3                NO => GET NEXT ENTRY
         LA    R4,1(,R4)               YES => COMPARE
         LA    R6,1(,R6)                        NEXT
         BCT   R2,CMDTABL2                        CHARACTER PAIR
*        TO ENSURE UNIQUENESS OF CMDS, COMMAND TEXT MUST
*        END WITH A BLANK OR BE AT THE END OF THE CMD BUFFER.
         CLI   0(R6),X'40'             IS NEXT CHAR A BLANK?
         BE    CMDFOUND                YES => CMD IS A MATCH
         CLI   0(R6),X'00'             IS THIS END OF CMD BUFFER?
         BE    CMDFOUND                YES => CMD IS A MATCH
         CLI   0(R6),C'$'              LAST CHAR OF PFK INPUT(PFK5=5$)
         BE    CMDFOUND                YES => CMD IS A MATCH
CMDTABL3 LA    R1,CMDTABL(,R1)         NO => GET
         B     CMDTABLP                          NEXT ENTRY
         SPACE 1
*        MATCHING CMD HAS BEEN FOUND
         SPACE 1
*        CHECK IF CMD IS VALID FOR THE SOURCE OF THE CMD
CMDFOUND TM    UFLAGS,INIT             CMD ISSUED DURING NETSOL INIT?
         BZ    CMDCKTRM                NO  => CHECK IF CMD OK FROM TERM
         TM    CMDFLAG(R1),CMDINIT     CMD VALID FROM SYSIN?
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
         B     CMDSETGP                YES => CONTINUE CMD SETUP
CMDCKTRM TM    CMDFLAG(R1),CMDTERM     CMD VALID FROM TERMINAL?
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
*        SET UP PARAMETERS FOR GETPARM SUBROUTINE
CMDSETGP ST    R6,GPDATAP              SAVE CURRENT CMD BUFFER PTR
         LA    R2,DATASEQ              CALCULATE
         SR    R6,R2                     LENGTH OF CMD
         SR    R2,R2                   CALCULATE
         IC    R2,DATASEQL               LENGTH OF TEXT
         SR    R2,R6                       REMAINING IN CMD BUFFER
         STH   R2,GPDATAL              SAVE FOR USE BY GETPARM
*        BRANCH TO CMD PROCESSING ROUTINE
         L     R2,CMDROUTA(,R1)        LOAD A(CMD ROUTINE)
         BR    R2                        AND BR TO IT
         SPACE 2
*        EXECUTED CODE
@EXEC1   MVC   DATASEQ(0),0(R6)
         TITLE '*********  N E T S O L  -  CHECK APPLICATION STATUS'
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE VTAM APPLICATION ASSOCIATED WITH THE LOGON DATA.          *
*                                                                     *
***********************************************************************
         SPACE 1
CHKAPPL  MVC   APPLID(8),CMDVAPPL(R1)  SAVE APPLID FROM CMD TABLE ENTRY
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 2
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREB OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         MVC   SYNCHRPL(FRSYNL),FRSYNRPL CLEAR RPL           DC18203
         L     R3,RPLUSFLD             -> TTE
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 3
         CH    R15,HEX10               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                 CODE IS X'10'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB4(R15)            CHECK VALID ACTIONS
ERRTAB4  B     R0CHK4               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     APPLBAD              C  THIS IS NORMAL CASE FOR
*                                      APPLICATION UNKNOWN
         B     INQUIREB            10  REISSUE.  NO NEED TO
         SPACE 1
R0CHK4   DS    0H
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
*******> BNZ   SNOCCUR                 YES, OR OTHER ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         EJECT
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 3
         SR    R15,R15                 CLEAR  REG 15
         IC    R15,SYNFDB3             EXTRACT FEEDBACK INFO.
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
         B     STATUS(R15)             BRANCH IN TABLE
STATUS   B     APPACTIV             0
         B     APPINACT             4
         B     APPNEVER             8
         B     APPTEMP             12
         B     APPCLOSE            16
         SPACE 1
APPTEMP  DS    0H                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS
         LA    R0,MSG11                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPNEVER DS    0H                      APPLICATION NEVER ACCEPTS LOGONS
         LA    R0,MSG10                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPINACT DS    0H                      APPLICATION INACTIVE
         LA    R0,MSG08                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPCLOSE DS    0H                      APPLICATION QUIESCING
         LA    R0,MSG09                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPLBAD  DS    0H                      BAD APPLICATION NAME
         LA    R0,MSG07                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         TITLE '*********  N E T S O L  -  CLSDST(PASS) FUNCTION'
***********************************************************************
*    THE APPLICATION IS ACTIVE AND AVAILABLE. PASS THE TERMINAL PLUS  *
*    LOGON DATA TO THE DESIRED APPLICATION.                           *
***********************************************************************
         SPACE 3
APPACTIV OI    FLAGS,CLEARSCR          MUST ISSUE CLEAR SCREEN
         LA    R0,MSG06                SEND LOGON IN PROGRESS
         B     SENDMSG                 GO ISSUE SEND
         SPACE 1
CONTPASS NI    FLAGS,255-(CLEARSCR)    TURN OFF FLAG TO INDICATE RETURN
         SR    R2,R2                   CLEAR
         IC    R2,DATASEQL             GET DATA SEQUENCE LENGTH PASSED
*                                       FROM INTRPRET
         LA    R4,DATASEQ              ADDRESS OF DATA TO PASS
         SPACE 1
FINDBLNK CLI   0(R4),X'40'             IS IT A BLANK?
         BE    FINDDATA                YES SEE IF ANY DATA FIELD
         LA    R4,1(R4)                OVERWISE GO TO NEXT BYTE
         BCT   R2,FINDBLNK             DECREASE COUNT TRY NEXT
         SPACE 1
NODATA   SR    R4,R4                   CLEAR REG TO SAY NO DATA
         B     FILLNIB                 GO ISSUE PASS WITH NO DAT
         SPACE 1
FINDDATA LA    R4,1(R4)                POINT TO NEXT CHARACTER
         CLI   0(R4),X'40'             IS IT STILL A BLANK?
         BNE   DATAFOND                NO SO WE HAVE DATA
         BCT   R2,FINDDATA             TRY AND FIND MORE DATA
         B     NODATA                  ISSUE PASS WITH NO DATA
         SPACE 1
DATAFOND BCTR  R2,0                    END OF LOGON BUT NO DATA
         LTR   R2,R2                   NO MORE DATA?
         BZ    NODATA                  ISSUE CLSDST WITH NO DATA
         SPACE 2
***********************************************************************
* THIS CODE WILL CHECK IF THE REQUESTED APPLICATION IS ONE THAT HAS   *
* A SPECIAL LOGMODE ENTRY. IF SO, THE ASSOCIATED LOGMODE ENTRY IN THE *
* TABLE WILL BE ADDED TO THE NIB PRIOR TO THE CLSDST(PASS).           *
***********************************************************************
         SPACE 1
FILLNIB  LA    PTRNIB,NIBSTART         USE NIB CONTAINED IN RPL.
         LA    R1,LOGMDTAB             PT @ LOGMODE TABLE
LOGMDLP  CLC   LOGMDAPP(8,R1),=XL8'FFFFFFFFFFFFFFFF' END OF TABLE?
         BE    SKIPLOGM                YES => USE DEFAULT ENTRY
         CLC   APPLID(8),LOGMDAPP(R1)  DOES APPLID MATCH TABLE ENTRY?
         BE    INSRTLGM                YES => GO INSERT LOGMODE NAME
         LA    R1,LOGMDLEN(,R1)        NO  => GET NEXT TABLE ENTRY
         B     LOGMDLP                        & PROCESS IT
INSRTLGM MVC   NIBLMODE(8),LOGMDENT(R1) MOVE LOGMODE NAME INTO NIB
         SPACE 1
SKIPLOGM L     R3,RPLUSFLD             -> TTE
         MVC   NIBSYM(8),TERMNAME      COPY TERMINAL NAME TO NIB
         SPACE 1
PASS     OI    MFLAGS,CLSDST           CLSDST(PASS) BEING DONE
         OI    MACFLAGS,CLOSPASS
         SPACE 1
         CLSDST  RPL=(PTRRPL),                                         X
               NIB=(PTRNIB),                                           X
               OPTCD=(ASY,PASS),                                       X
               AAREA=APPLID,                                           X
               AREA=(R4),                                              X
               RECLEN=(R2),                                            X
               EXIT=PASSEND
         NI    MFLAGS,255-(CLSDST)
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    PASS                    YES. REISSUE
         LTR   R15,R15                 CLOSE(PASS) ACCEPTED
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   VALID COMPLETION?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  RETURN TO VTAM
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  CLSDST(PASS) EXIT RTN'
***********************************************************************
*                                                                     *
*        CHECK THAT THE CLSDST(PASS) WORKED CORRECTLY                 *
*                                                                     *
*        THIS EXIT ROUTINE IS SCHEDULED WHEN A CLSDST (PASS)          *
*        IS ISSUED.  THE CLSDST IS ISSUED WHEN A VALID LOGON          *
*        SEQUENCE HAS BEEN RECEIVED FROM THE TERMINAL AND             *
*        THE DESIRED APPLICATION IS RECEIVING LOGON'S.                *
*                                                                     *
*        REGISTER 5 CONTAINS THE ADDRESS OF THE RPL USED              *
*            IN THE CLSDST.                                           *
*                                                                     *
***********************************************************************
         SPACE 3
PASSEND  DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RETURN
         LR    PTRRPL,R1               GET THE RPL PASSED
         LA    R13,RPLSAVE             R13 -> RPL SAVE AREA
         SPACE 1
         OI    MFLAGS,CLSDST           INDICATE IN PASSEND
         OI    EXITFLAG,PASSEX
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   00    08    QUEUED SESSION ALREADY EXISTS        00  08           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    00    APPLICATION UNAVAILABLE              0C  08           *
*   10    02    TARGET APPLICATION UNACCEPTABLE      0C  09           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0D    VTAM INACTIVE TO YOUR ACB            SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    13    CID INVALID                          14  00           *
*   14    4B    INVALID LOGMODE ENTRY SPECIFIED      0C  01           *
*   14    53    TERMINAL NOT DEFINED CROSS DOMAIN    0C  03           *
*   14    55    NO OPNDST AUTHORIZATION              0C  05           *
*   14    5D    OPNDST INVALID (TERM NOT CONNECTED)  14  00           *
*   14    5F    RESOURCE NOT OWNED                   14  00           *
*                                                                     *
***********************************************************************
         SPACE 3
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                  CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB5(R15)            CHECK VALID ACTIONS
ERRTAB5  B     R0CHK5               0  PROBABLY PASSED DEVICE
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         B     SENDMSG              C  NORMAL CASE IF APPLI-
*                                       CATION STOPPED ACCEPT-
*                                       ING LOGONS SINCE THE
*                                       INQUIRE
         B     RESEND              10  LET USER TRY AGAIN LATER
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       FREED BY RELREQ AFTER
*                                       THE READEND EXIT WAS
*                                       SCHEDULED.
R0CHK5   DS    0H
         CH    R0,HEX8             08  QUEUED SESSION EXISTS
         BE    QSESSION                 => ISSUE CLSDST RELEASE
         LTR   R0,R0                   ANYTHING BUT FDBK2=08
*******> BNZ   SNOCCUR                   SHOULD NOT OCCUR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TITLE '*********  N E T S O L  -  SIMLOGON FUNCTION'
SIMLOGON LA    PTRNIB,SYNCHNIB         GET ADDRESS OF NIB
         MVC   SYNCHRPL(FRSYNL),FRSYNRPL CLEAR RPL             DC18203
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TPASSED        MARK TERM NOT ON NETSOL
         MVC   TERMAPPL,APPLID         REMEMBER APPL FROM CLSDST(PASS)
         ST    R3,NIBUSER              SAVE IN THE USER FIELD
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         MVC   NIBSYM(8),TERMNAME      TERMINAL NAME TO NIB
         SPACE 1
         OI    MFLAGS,SMLOGON          INDICATE SIMLOGON
         OI    MACFLAGS,SIMLGON
         SIMLOGON RPL=SYNCHRPL,                                        X
               NIB=SYNCHNIB,                                           X
               OPTCD=(Q,NRELRQ)
         NI    MFLAGS,255-(SMLOGON)
         XC    NIBUSER,NIBUSER         CLEAR NIB USER FIELD OUT
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SIMLOGON                                         *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    13    CID INVALID                          14  00           *
*   10    4B    INVALID LOGON                        0C  02           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX14               HIGHEST VALID ACTION
*******> BH    SNOCCUR                  CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB6(R15)            CHECK VALID ACTIONS
ERRTAB6  B     R0CHK6               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         B     FREERPL              C  CAN'T SEND MSG IF NOT CONNECTED
*                                      CONNECTED
         B     SIMLOGON            10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK6   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    FREERPL                 RETURN IF SO
         CH    R0,HEX8                 X'0008' THAT WE SHOULD NOT GET ?
         BE    FREERPL                 YES, IGNORE IT FOR NOW
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
*******> BNZ   SNOCCUR                 ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     FREERPL                 FREE RPL GO BACK TO VTAM
         TITLE '*********  N E T S O L  -  SEND MESSAGES ROUTINE'
***********************************************************************
*                                                                     *
*          BRANCH TO DEVICE DEPENDENT SEND ROUTINE TO WRITE           *
*          A MESSAGE TO THE LOGICAL UNIT.                             *
*                                                                     *
***********************************************************************
         SPACE 3
         SPACE 3
SENDMSG  DS    0H
         L     R3,RPLUSFLD             -> TTE
         L     R9,TERMDDT              -> DDT FOR TERMINAL
         L     R15,DDTSEND             -> SEND ROUTINE FOR TERMINAL
         BR    R15                     GO SEND MESSAGE
         TITLE '*********  N E T S O L  -  SEND ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*          S32SEND EDITS AND SENDS NETSOL MESSAGES TO 3270 DEVICES.   *
*                                                                     *
*          ALL MESSAGES SENT ARE ASYNCHRONOUS USING THE RPL PASSED    *
*          IN R5.                                                     *
*                                                                     *
*               ON ENTRY:                                             *
*                  REG. 0 CONTAINS MESSAGE NUMBER                     *
*                  REG. 3 POINTS TO TTE OF ACTIVE TERMINAL            *
*                  REG. 5 POINTS TO RPL BEING USED                    *
*                  REG. 9 POINTS TO DDT FOR TERMINAL                  *
*                                                                     *
***********************************************************************
         SPACE 3
S32SEND  DS    0H
         CLM   R0,1,=AL1(MSG06)        LOGON MESSAGE ?
         BNE   S32MSG1                 NO, THEN DON'T SEND MSG WITH EB
         OI    TERMFLAG,LOGPROC        SINCE SENDING MSG IS LOGON
         OI    RPLRH3,RPLEB            SEND WITH END BRACKET ON
*                                      AS 3276 MAY GET UPSET ON CLSDST
         B     S32MSG2                 SKIP CHECK FOR EB SEND
         SPACE 1
S32MSG1  TM    TERMFLAG,SENDSCED   IS THERE A SEND (POST=SCHED) DC18203
*                                   ALREADY ISSUED FOR THIS LU  DC18203
       BO    MISSSEND              IF SO DO NOT ISSUE A NEW ONE DC18203
       NI    TERMFLAG,255-(LOGPROC) INDICAT NOT IN LOGON FUNCTION
         TM    RPLRH3,RPLEB            END BRACKET DUE TO MSG 6 ?
         BNO   S32MSG2                 NO, OKAY STILL IN BRACKET
         NI    RPLRH3,X'FF'-RPLEB      CLEAR END BRACKET STATE
         OI    RPLRH3,RPLBB            3276 MIGHT LIKE TO KNOW
         SPACE 1
S32MSG2  DS    0H
         STC   R0,MSGINDEX             SAVE MESSAGE INDEX
         TM    FLAGS,FIRSTSND          IS THIS FIRST SEND AFTER OPNDST
         BZ    S32MSGOK
         OI    RPLRH3,RPLBB            INDICATE BEGIN BRACKET
         NI    FLAGS,255-(FIRSTSND)    NEXT SEND WITHOUT BRACKET
         SPACE 2
***********************************************************************
*        FIND OUTPUT MESSAGE AND LENGTH                               *
***********************************************************************
         SPACE 1
S32MSGOK DS    0H
         SR    R1,R1                   CLEAR OUT REG
         IC    R1,MSGINDEX             GET THE INDEX
         LA    R2,X'FF'-X'80'          TURN OFF POSSIBLE RESET
         NR    R1,R2                    INDICATOR PRIOR TO INDEXING
         BCTR  R1,0                    INDEX - 1
         SLL   R1,2                    4 * (INDEX - 1)
*                                      = DISPLACEMENT OF MESSAGE
         L     R2,DDTMSGTB(R1)         POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(R2)                GET MESSAGE LENGTH
         S     R1,=F'2'                REDUCE BY LENGTH FIELD AT FRONT
         LA    R2,2(R2)                POINT TO ACTUAL MSG.
         LA    R6,IOAREA               POINT TO OUTPUT AREA
         LR    R7,R2                   POINT TO MESSAGE AREA
         AH    R7,DDTMSGOF               WHERE DATA IS TO BE MOVED
         SPACE 2
***********************************************************************
*        REGISTER 1 CONTAINS MESSAGE LENGTH                           *
*        REGISTER 2 POINTS TO MESSAGE                                 *
*        REGISTER 6 POINTS TO OUTPUT AREA                             *
*        REGISTER 7 POINTS TO MESSAGE AREA FOR VARIABLE DATA          *
***********************************************************************
         SPACE 2
***********************************************************************
*        EDIT MESSAGE 01                                              *
***********************************************************************
         CLI   MSGINDEX,X'01'          IS THIS MESSAGE 01?
         BNE   S32CKM7                 NO SO CARRY ON
         LA    R8,NIBSTART             YES => POINT AT NIB
         MVC   0(8,R7),NIBLMODE               ADD LOGMODE ENTRY TO MSG
         B     S32CONT
***********************************************************************
*        EDIT MESSAGE 07                                              *
***********************************************************************
S32CKM7  DS    0H
         CLI   MSGINDEX,X'07'          IS THIS MESSAGE 07?
         BNE   S32CKM8                 NO SO CARRY ON
         MVC   0(8,R7),=CL8' '         BLANK OUT USER DATA FIELD
         LR    R0,R1                   SAVE CONTENTS OF R1
         SR    R1,R1                   LOAD LENGTH
         IC    R1,DATASEQL              OF USER DATA
         CH    R1,=AL2(8)              IF LENGTH
         BNH   *+8                      GREATER THAN 8
         LA    R1,8                      THEN SET TO 8
         BCTR  R1,0                    DECREMENT FOR MVC
         EX    R1,S32MVAPP             MOVE APPLICATION ID TO MSG.
         LR    R1,R0                   RESTORE R1
         B     S32CONT                 SKIP FURTHER EDITS
S32MVAPP MVC   0(0,R7),DATASEQ         *** EXECUTED ***
***********************************************************************
*        EDIT MESSAGE 8,9,10,11                                       *
***********************************************************************
S32CKM8  DS    0H
         CLI   MSGINDEX,X'08'          IS MSG # LESS THAN 8?
         BL    S32CONT                 YES => BYPASS FURTHER CHECKING
         CLI   MSGINDEX,X'0B'          IS MSG # GREATER THAN 11?
         BH    S32CKM12                YES => CONTINUE MESSAGE CHECKING
         MVC   0(8,R7),APPLID          MOVE APPLID TO MESSAGE
         B     S32CONT                 SKIP FURTHER EDITS
***********************************************************************
*        EDIT MESSAGE 12                                              *
***********************************************************************
S32CKM12 CLI   MSGINDEX,X'0C'          IS IT MSG12?
         BNE   S32CONT                 NO
         BAL   R14,TIMETERM            ADD NODE NAME & TIME TO MSG
         SPACE 1
*        ALL BCSC MENUS WRITTEN FOR LOGABAX TERMINALS ARE TO
*        TRACKED BY WRITING A MESSAGE TO SYSLOG.
         SPACE 1
         C     R9,=AL4(DDT3767)        IF THIS IS A LOGABAX TERMINAL
         BNE   S32CONT                   NO  => BYPASS LOG MSG
         MVC   LOGMENU+17(8),TERMNAME    YES => ADD NODE NAME TO MSG
         MVC   LOGMENU+44(6),=CL6'LOGON'        ASSUME FROM LOGON EXIT
         TM    EXITFLAG,LOGONEX                 IF FROM LOGON EXIT
         BO    *+10                               YES=> BYPASS
         MVC   LOGMENU+44(6),=CL6'RESEND'         NO => MARK AS RESEND
         STM   R0,R1,RPLERRSA                   SAVE REGS
         WTO   MF=(E,LOGMENU)                   WRITE MSG TO LOG
         LM    R0,R1,RPLERRSA                   RESTORE REGS
***********************************************************************
*        MOVE MESSAGE TO OUTPUT AREA                                  *
***********************************************************************
S32CONT  DS    0H
         LR    R3,R1                   LOAD MESSAGE LENGTH TO ODD REG
         LR    R7,R1                   LOAD MESSAGE LENGTH TO ODD REG
         MVCL  R6,R2                   MOVE MESSAGE TO OUTPUT BUFFER
         L     R3,RPLUSFLD             RESTORE TTE POINTER
         LA    R1,IOAREA               CALCULATE
         SR    R6,R1                     THE MESSAGE LENGTH
         ST    R6,SENDLEN              SAVE LENGTH OF SEND
         SPACE 1
SEND     OI    MFLAGS,SENDING          TELL ERREXIT ASY. SEND
         OI    MACFLAGS,SENDASY
         L     R2,SENDLEN              LENGTH TO SEND TO TERM
         L     R4,CID                  TERMINAL ADDRESS
         SPACE 2
***********************************************************************
*        CHECK TO SEE IF SEND IS FOR MESSAGE 6 (LOGON IN PROGRESS)    *
*        AND IF SO, SEND REQUESTING A POSITIVE RESPONSE SO THAT THE   *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
         SPACE 1
         CLI   MSGINDEX,X'06'          LOGON IN PROGRESS MSG ?
         BE    S32SEND6                YES, DO ELSEWHERE
         OI    TERMFLAG,SENDSCED    INDICATE A SEND TO BE ISSUEDDC18203
         SPACE 1
         SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         X
               EXIT=SENDEND,RPL=(PTRRPL),POST=SCHED,                   X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(EX,FME,NRRN)
         SPACE 1
         B     S32CHKSD                HANDLE LIKE REST OF SENDS
         SPACE 3
***********************************************************************
*        SEND MESSAGE 6 REQUESTING A POSITIVE RESPONSE SO THAT THE    *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
S32SEND6 SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         X
               EXIT=SENDEND,RPL=(PTRRPL),POST=RESP,                    X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(NEX,FME,NRRN)
S32CHKSD NI    MFLAGS,255-(SENDING)
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    SEND                    YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         B     RETURN                  RETURN TO VTAM
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  SEND EXIT'
***********************************************************************
*                                                                     *
*         SENDEND IS ENTERED WHEN THE EXIT HAS BEEN SCHEDULED         *
*         FOR THE SEND DONE ABOVE.                                    *
*                                                                     *
*         REGISTER 1 POINTS TO THE ASYNCH RPL BEING USED              *
*         REGISTER 15 =A(SENDEND)                                     *
*                                                                     *
***********************************************************************
         SPACE 3
SENDEND  DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         L     R3,RPLUSFLD                                      DC18203
         NI    TERMFLAG,X'FF'-SENDSCED INDICATE SEND COMPLETE   DC18203
         OI    MFLAGS,SENDING          TELL ERREXIT THAT ERROR
*                                      ARE FOR SEND
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
*                                      OCCURRED
         NI    MFLAGS,255-(SENDING)
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                    ACTION           *
*  RTNCD FDBK2                                       CODE(S)          *
*  CODE  CODE         MEANING                        RETURNED         *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. INCOMMING MESSAGE                               *
*               REC  RESP HANDLES 0404 FOR 'SEND POST=SCHED'          *
*               SEND EXIT HANDLES 0404 FOR 'SEND POST=RESP'           *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    LU NOT AVAILABLE (POWERED OFF)        08  00          *
*   0C    02    REQUEST CANCELLED TEST REQ (LOSTTERM) 14  00          *
*   0C    07    CONNECTION RECOVERY        (LOSTTERM) 14  00          *
*   0C    08    LU RESTARTED               (LOSTTERM) 14  00          *
*   0C    0B    REQUEST CANCELLED BY CLSDST           14  00          *
*   0C    0C    REQUEST CANCELLED BY CLEAR            08  04          *
*   10    03    QUICK HALT (TPEND)                    SNOCCUR         *
*   10    05    PERMANENT CHANNEL OR LINK FAILURE     08  00          *
*   10    07    VARY DEACTIVATE IMMEDIATE  (LOSTTERM) 14  00          *
*   10    09    TERMINATE SELF OR LOGOFF   (LOSTTERM) 14  00          *
*   10    0A    ACF/VTAM ERROR                        SNOCCUR         *
*   10    0D    ACF/VTAM INACTIVE FOR ACB             SNOCCUR         *
*   10    0E    ABEND FOR PROGRAMS TCB                SNOCCUR         *
*   10    0F    BUFFERS FULL               (LOSTTERM) 14  00          *
*   10    10    TERMINATE SELF RECEIVED               08  04          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    13    CID INVALID                           14  00          *
*                                                                     *
***********************************************************************
         SPACE 3
         OI    EXITFLAG,SENDEX         INDICATE WRITE EXIT
         CH    R15,HEX18               HIGHEST VALID ACTION
*******> BH    SNOCCUR                  CODE IS X'20'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABB(R15)            CHECK VALID ACTION
ERRTABB  B     ROCHKB               0  CHECK IF WRITE WENT
         BAL   R7,SNOCCUR           4
         B     RELOPNA              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     WHATSEND            10  FIND OUT WHAT KIND OF SEND
         B     FREERPL             14  LOST DEVICE
         B     RESENDM             18  RESEND MSG
         SPACE 1
RELOPNA  LTR   R0,R0                   OPNDST AFTER CLSDST ?
         BZ    RELEASE                 NO SO JUST GO CLSDST
         OI    FLAGS,RELOPND           INDICATE WE WANT RE-OPEN
         B     RELEASE                 CLSDST FIRST
         SPACE 1
WHATSEND TM    FLAGS,LUSTATE           LUSTAT SEND ?
         BO    SENDLU
         B     SEND                    NO, NORMAL SEND, CONTINUE IT
         SPACE 1
RESENDM  DS    0H                      RESEND MESSAGE
         NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB TERMINAL MIGHT
*                                      HAVE STARTED FIRST
         IC    R0,MSGINDEX             RETRIEVE SAVED MSG #
         B     SENDMSG
         SPACE 1
ROCHKB   DS    0H
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
*******> BNZ   SNOCCUR                 NO ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
*ISSSEND NI    FLAGS,255-(LOOPONCE)     TURN OFF RETRY INDIC
MISSSEND TM    FLAGS,LUSTATE           CONTINUE LUSTAT PROC ?
         BO    CONTLU
         TM    FLAGS,CLEARSCR          CLEAR OF SCREEN FROM RECEND?
         BO    CONTPASS
         B     FREERPL                 WAIT FOR ACITIVITY FROM LU
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  RELREQ EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN AN APPLICATION ISSUES        *
*    OPNDST (ACQUIRE) FOR A TERMINAL CURRENTLY OWNED BY NETSOL.       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*         FOLLOWING;                                                  *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - ADDRESS OF SYMBOLIC NAME OF TERMINAL          *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 3
RELREQ   DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RRFAIL                  YES => WRITE REL REQ FAILED MSG
         SPACE 2
***********************************************************************
*        NOW SCAN THE TERMINAL TABLE ENTRIES TO SEE IF WE CAN FIND A  *
*        MATCH ON THE TERMINAL NAME (ERROR IF DON'T). WHEN FOUND,     *
*        SEE IF A LOGON IS IN PROGRESS (VIA LOGPROC FLAG). IF THIS IS *
*        THE CASE, WE WON'T RELEASE THE TERMINAL, OTHERWISE RELEASE   *
*        TO THE APPLICATION REQUESTING IT.                            *
***********************************************************************
         SPACE 1
         LM    R3,R5,TERMTABS          SET UP FOR THE BXLE THRU TABLE
         CR    R3,R5                   NULL TABLE ?
*******> BH    SNOCCUR                 YES, ERROR IF SO
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         L     R6,4(,R1)               ADDRESS OF RELREQ NAME OF TERM
         SPACE 1
FINDNAME CLC   0(8,R6),TERMNAME        MATCH ON THE NAME
         BE    FNDNAME                 YES, FOUND ITS TTE
         BXLE  R3,R4,FINDNAME          CONTINUE
         BAL   R7,SNOCCUR              ERROR, SHOULD NEVER GET HERE
         SPACE 1
FNDNAME  TM    TERMFLAG,LOGPROC        LOGON ? YES, DON'T FREE TERMINAL
         BO    RRFAIL                  YES => WRITE REL REQ FAILED MSG
         SPACE 1
         OI    EXITFLAG,RELREQEX       INDICATE IN RELREQ EXIT
         BAL   R14,GETRPL              GET AN RPL
         LA    R13,RPLSAVE             R13 -> SAVE IN THE RPL
         ST    R3,RPLUSFLD             SAVE ADDRESS OF TTE IN THE RPL
         ST    R5,TERMCRPL             SAVE ADDRESS OF RPL IN THE TTE
         LA    PTRNIB,SYNCHNIB
         MVC   NIBSYM(8),TERMNAME      PLACE SYMBOLIC TERMINAL
*                                      SET INDICATOR TO
         OI    FLAGS,RELOPND           RELEASE THE DEVICE AND
*                                      TRY TO REOPEN IT
         MVC   CID,TERMCID             GET CID INTO ASYNCH RPL
         SPACE 1
         MVC   RELRQMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELRQMSG)         INFORM WORLD OF REQUEST
         SPACE 1
         B     RELEASE                 GO DO THE RELEASE
         SPACE 1
RRFAIL   MVC   RELFLMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELFLMSG)         INFORM WORLD OF REQUEST FAILURE
         SPACE 1
         B     RETURN                  REFUSE RELEASE REQUEST
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  LOSTERM EXIT'
***********************************************************************
*                                                                     *
*   THIS EXIT ROUTINE IS SCHEDULED BY VTAM WHEN :                     *
*                                                                     *
*                * WHEN CONTACT WITH AN LU IS LOST                    *
*                * WHEN A LU REQUESTED A LOGOFF                       *
*                * WHEN CERTAIN ERRORS DETECTED IN TRANSMISSION       *
*                * WHEN A LU IS TEMPORARILY UNAVAILABLE               *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*            FOLLOWING;                                               *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - CID OF LOST TERMINAL                          *
*              WORD 2 - USER FIELD FROM NIB                           *
*              WORD 3 - REASON CODE, AS FOLLOWS:                      *
*                                                                     *
*  0 - DIAL-LINE DISCONNECT (DIAL-IN)            RELEASE (CLSDST)     *
*  4 - DIAL-LINE DISCONNECT (DIAL-OUT)           RELEASE (CLSDST)     *
*  8 - RESERVED                                                       *
*  C - CONTACT WITH LU PERMANENTLY LOST          PROBDEV (CLSDST)     *
* 10 - LU SUCCESSFULLY RECONTACTED               RELEASE + REAQUIRE   *
* 14 - UNCONDITIONAL TERMINATE COMMAND           RELEASE (CLSDST)     *
*    -       "       CHARACTER CODED LOGOFF         "        "        *
*    -       "       TERMSESS                       "        "        *
* 18 - CONTACT WITH LU LOST                      RETURN TO VTAM       *
* 1C - RESERVED                                                       *
* 20 - CONDITIONAL TERMINATE SELF                RELEASE + REACQUIRE  *
*    -     "       CHARACTER CODED LOGOFF           "        "        *
*    -     "       TERMSESS                         "        "        *
* 24 - BUFFER LIMIT DEFINED FOR LU EXCEEDED         "        "        *
* 28 - TEST REQUEST SET                             "        "        *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 3
LOSTERM  DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO    RETURN
         SPACE 1
         LR    R7,R1                   SAVE ACROSS GETRPL
         BAL   R14,GETRPL              GET AN RPL FOR WORK
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         MVC   RPLUSFLD(4),8(R7)       COPY TTE ADDRESS TO RPL
         OI    EXITFLAG,LOSTEX         INDICATE IN LOSTERM EXIT
         MVC   CID,4(R7)               SAVE CID IN RPL/WORKQREA
         MVC   PACKWORK(1),15(R7)      COPY LOSTERM CODE TO WORK AREA
         UNPK  PACKWORK+2(3),PACKWORK(2) UNPACK TO PRINT
         MVC   LOSTMSG+31(2),PACKWORK+2  TO MSG AREA
         TR    LOSTMSG+31(2),TRTAB     MAKE IT PRINTABLE
         L     R3,RPLUSFLD             GET TTE POINTER
         ST    R5,TERMCRPL             SAVE A(RPL) IN TTE
         MVC   LOSTMSG+43(8),TERMNAME  TERMINAL LU NAME
         WTO   MF=(E,LOSTMSG)          ISSUE ERROR MSG.
         SPACE 2
***********************************************************************
*        NOW CHECK TO MAKE SURE THAT THE NIB USER FIELD IS CORRECT.   *
*        WOULD NOT BE IF OPNDST DONE WITH WRONG NIBUSER VALUE.        *
***********************************************************************
         SPACE 1
         CLC   CID,TERMCID             CHECK THAT CID'S ARE CORRECT
         BE    LOSTCODE                YES SO GO CHECK CODE     DC18203
         CLC   TERMCID,=F'0'           IS IT ZERO (THIS HAPPENS DC18203
*                                      WHEN AN OPNDST FAILS FOR DC18203
*                                      FIRST LOGON PRIOR TO     DC18203
*                                      LOSTERM SCHEDULED )      DC18203
******>  BNE   SNOCCUR                 BAD NEWS IF NOT !!!!!!!
         BNE   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
LOSTCODE L     R4,12(R7)               GET LOSTERM ENTRY CODE
         CH    R4,HEX8                 IS IT 0,4 OR 8 ?
         BNH   RELEASE                 YES SO JUST CLSDST DEVICE
         CH    R4,HEXC                 IS IT 12 ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX10                IS IT X'10' ?
         BE    REAQUIRE                YES SO LETS RELEASE + REOPEN
         CH    R4,HEX14                IS IT X'14' ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX20                IS IT GREATER THAN X'20' ?
         BNL   REAQUIRE                YES SO LETS RELEASE + REOPEN
         B     FREERPL                 X'18' CODE (24), IGNORE, WAIT
*                                       FOR REENTRY WITH X'0C' OR X'10'
         SPACE 1
REAQUIRE OI    FLAGS,RELOPND           INDICATE TO RELEASE
         B     RELEASE
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  RELEASE TERMINAL SUBRTN'
***********************************************************************
*                                                                     *
*        RELEASE THE TERMINAL, AND PERHAPS RE-ACQUIRE IT.             *
*                                                                     *
*        THERE ARE THREE ENTRY POINTS TO THIS ROUTINE.                *
*                                                                     *
*        'LOGOFF' IS USED WHEN THE USER ISSUES A LOGOFF COMMAND TO    *
*        NETSOL. THE TERMINAL IS RELEASED.                            *
*                                                                     *
*        'QSESSION' IS USED WHEN A CLSDST(PASS) FAILS BECAUSE A QUEUED*
*        SESSION REQUEST IS OUTSTANDING FOR THIS TERMINAL FROM THE    *
*        REQUESTED APPLICATION. THE TERMINAL IS RELEASED AND THEN     *
*        A SIMLOGON IS ISSUED TO REACQUIRE THE TERMINAL WHEN IT       *
*        IS RELEASED BY THE APPLICATION.                              *
*                                                                     *
*        'PROBDEV' WILL WTO AND RELEASE THE DEVICE BECAUSE OF AN I/O  *
*        PROBLEM.                                                     *
*                                                                     *
*        'RELEASE' WILL RELEASE THE DEVICE AND, IF THERE IS A TEST    *
*        REQUEST SET, 'RELEASE' WILL REACQUIRE THE DEVICE.            *
*                                                                     *
*        REGISTER 5 (PTRRPL) WILL POINT TO AN RPL.                    *
*                                                                     *
***********************************************************************
         SPACE 3
LOGOFCMD OI    FLAGS,LOGOFF            INDICATE CLSDST TO RELEASE THE
*                                      TERMINAL.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
QSESSION OI    FLAGS,SIMLOG            INDICATE CLSDST THEN SIMLOGON
*                                      THE CLSDST RELEASE MUST BE DONE
*                                      SINCE THE CLSDST PASS FAILED.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
PROBDEV  OI    FLAGS,BADEVICE          TURN ON  FLAG FOR WTO.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
BADLU    MVC   LISTWTO8+17(8),TERMNAME ADD TERMNAME TO ERROR MSG
         WTO   MF=(E,LISTWTO8)         WRITE ERROR MSG
         MVC   CID,TERMCID             MOVE CID INTO RPL FOR LATER USE
         B     RELCODE                 GO TO RELEASE CODE
         SPACE 1
RELEASE  TM    FLAGS,RELOPND           IS RELEASE A PRELUDE TO
         BO    CLOSEREL                 REOPEN?
*                                      NO. SIMPLY RELEASE IT
*                                      YES. MUST SAVE SYMBOLIC
*                                       NAME FOR LATER REOPEN
*                                      NOTE: THIS CAN OCCUR
*                                       FOR READ(ANY)/CHECK
*                                       ERROR HANDLING.
RELCODE  L     R3,RPLUSFLD             -> TTE FROM RPL
         SPACE 1
         TM    FLAGS,BADEVICE          IS WTO BIT ON ? NO, DON'T WTO
         BZ    CLOSEREL
         NI    FLAGS,255-(BADEVICE)    YES WTO BIT ON THEN
*                                       TURN WTO FLAG OFF.
         MVC   LISTWTO+17(8),TERMNAME  MOVE DEVICE NAME INTO
*                                      THE MESSAGE AREA OF
*                                      THE LIST FORM OF WTO.
         WTO   MF=(E,LISTWTO)          EXECUTE FORM OF WTO
         SPACE 1
CLOSEREL OI    MACFLAGS,CLSREL         INDICATE DOING CLOSE(REL
         OI    MFLAGS,CLSDST
***********************************************************************
*        CLSDST RELEASE WILL BE DONE FOR THE TERMINAL BY SPECIFYING   *
*        THE TERMINAL NAME IN THE NIB. THE NIB IS USED BECAUSE THE    *
*        CLSDST(RELEASE) CAN BE DONE FROM THE LOGON EXIT BEFORE A     *
*        SESSION HAS BEEN ESTABLISHED. IN THIS CASE, THE CID WOULD BE *
*        REJECTED BY VTAM IF USED IN THE CLSDST(RELEASE).             *
***********************************************************************
         MVC   NIBSTART(NIBLNIB),FRESHNIB INITIALIZE NIB
         LA    PTRNIB,NIBSTART         -> NIB
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              SAVE A(TTE) IN NIB
         MVC   NIBSYM(8),TERMNAME      MOVE TERMINAL NAME TO NIB
         CLSDST RPL=(PTRRPL),                                          X
               EXIT=CDSTEND1,                                          X
               OPTCD=RELEASE,                                          X
               NIB=NIBSTART
         SPACE 1
         NI    MFLAGS,255-(CLSDST)     INDICATE CLOSE DONE
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    CLOSEREL                YES. REISSUE
         LTR   R15,R15                 CLSDST ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  CLSDST(RELEASE) END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE CLSDST(RELEASE)                        *
*        ENTRY IS FROM THE CLSDST(RELEASE) IN THE RELEASE RTN.        *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 3
CDSTEND1 DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,CLSDST           TELL ERREXIT THAT ERROR
*                                       IS FOR CLSDST(RELEASE)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    52    NIB INVALID                          SNOCCUR          *
*   14    60    INVALID LU NAME                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 3
         OI    EXITFLAG,CLOSEX         INDICATE IN CLOSE REL EX
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
*******> BH    SNOCCUR                  CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB9(R15)            CHECK VALID ACTIONS
ERRTAB9  B     R0CHK9               0  PROBABLY RELEASED IT
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  ALREADY RELEASING, NEW
*                                       RELEASE WON'T HELP
         BAL   R7,SNOCCUR           C  NO MSG TO WRITE AND
*                                       PROBABLY COULDN'T
*                                       ANYWAY
         B     CLOSEREL            10  REISSUE.
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       ALREADY FREED BY A LOSTERM,
*                                       RELREQ OR READEND
*                                       REQUEST.
         SPACE 1
R0CHK9   DS    0H
         LTR   R0,R0                   VALID COMPLETION?
*******> BNZ   SNOCCUR                 ERROR IF NOT
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         EJECT
***********************************************************************
*                                                                     *
*  AFTER RELEASING THE TERMINAL, IT MAY BE NECESSARY TO               *
*  RE-ACQUIRE IT, OR AT LEAST ATTEMPT TO RE-ACQUIRE IT, FOR THE       *
*  FOLLOWING REASONS:                                                 *
*                                                                     *
*    THE OTHER APPLICATION MAY CANCEL ITS REQUEST FOR THE             *
*    TERMINAL AFTER NETSOL'S RELREQ EXIT HAS ISSUED THE               *
*    CLSDST(RELEASE), BUT BEFORE LOGGING ONTO THE TERMINAL.           *
*    IN THIS CASE NETSOL WISHES TO RE-ACQUIRE THE TERMINAL.           *
*    THE TERMINAL WILL ONLY BE ACQUIRED BY NETSOL IF THE              *
*    OTHER APPLICATION HAS NOT ALREADY LOGGED ON THE TERMINAL.        *
*                                                                     *
*    THE TERMINAL MAY HAVE BEEN RELEASED BECAUSE IT WAS LOGGED        *
*    ON TO NETSOL WHEN THE TEST REQUEST KEY WAS SET.  THIS            *
*    BLOCKS ALL FURTHER I/O TO THE DEVICE, INCLUDING ENTRY OF         *
*    A LOGON SEQUENCE NECESSARY TO PASS THE DEVICE TO TOLTEP.         *
*    NETSOL MUST RELEASE, THEN RE-ACQUIRE THE DEVICE SO THAT          *
*    I/O IS NO LONGER BLOCKED.                                        *
*                                                                     *
***********************************************************************
         SPACE 3
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVI   TERMFLG2,TREL           MARK TERM RELEASED
         TM    FLAGS,LOGOFF            LOGOFF COMMAND ISSUED?
         BO    FREERPL                  YES => FINISHED
         TM    FLAGS,SIMLOG            NOW DO SIMLOGON?
         BO    SIMLOGON                 YES => BR TO SIMLOGON CODE
         TM    FLAGS,RELOPND           RELEASE DEVICE ONLY ?
         BZ    FREERPL
         NI    FLAGS,255-(RELOPND)
         LA    PTRNIB,NIBSTART         POINT TO THE NIB
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVC   NIBSYM(8),TERMNAME      GET THE SYMBOLIC NAME
         SPACE 2
***********************************************************************
*  MUST USE NIB WITH SYMBOLIC TERMINAL NAME BECAUSE THE CID IS        *
*  NO LONGER VALID AFTER DEVICE IS RELEASED.  OPNDST(SPEC)            *
*  MUST HAVE A SYMBOLIC TERMINAL NAME SUPPLIED.                       *
***********************************************************************
         SPACE 1
REOPEN   DS    0H                      USE THIS LABEL FOR ERREXIT
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              -> TTE IN NIB FOR FUTURE RPL'S
         OI    MACFLAGS,OPNDACQ        SET OPNDST ISSUED
         OI    MFLAGS,OPNDSPEC         SET OPNDST IS CURRENTLY ACTIVE
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(SPEC,ACQUIRE),                                   X
               EXIT=OPNAQRX,                                           X
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    REOPEN                  YES. REISSUE
         LTR   R15,R15                 OPNDST ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  OPNDST (SPEC,ACQUIRE) EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE CLSDST END EXIT.             *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 3
OPNAQRX  DS    0H
         DROP  R10,R11,R12             DROP BASE REGS
         USING *,R15                   ESTABLISH INITIAL ADDRESS
         L     R12,=A(START)           R12 IS BASE REGISTER
         DROP  R15
         USING START,R12,R11,R10       TELL ASSEM
         LM    R10,R11,RESTBASE        SET BASE REGS
         ST    R14,RETVTAM@            SAVE EXIT RETURN ADDRESS
         TM    UFLAGS,SHUTDOWN         SHUTDOWN IN PROGRESS?
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         EJECT
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    DEVICE UNAVAILABLE                   14  00           *
*   10    03    VTAM IS HALTING                      SNOCCUR          *
*   10    05    PERMENENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    53    NODE UNKNOWN TO VTAM                 14  00           *
*   14    55    NO OPNDST AUTHORIZATION              SNOCCUR          *
*                                                                     *
***********************************************************************
         SPACE 3
         OI    EXITFLG2,OPNACQX        INDICATE OPNDST EXIT ENTERED
         CH    R15,HEX14               HIGHEST VALID ACTION
*******> BH    SNOCCUR                  CODE IS X'14'
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB7(R15)            CHECK VALID ACTIONS
ERRTAB7  B     R0CHK7               0  CHECK IF DEVICE ACCEPTED
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         BAL   R7,SNOCCUR           C  CAN'T WRITE MSG IF NOT
*                                      CONNECTED
         B     REOPEN              10  REISSUE. NO NEED TO
*                                       CHECK FOR RESET
         B     FREERPL             14  A NORMAL CASE.  FAILED
*                                       TO RECONNECT DEVICE.
         SPACE 1
R0CHK7   DS    0H
         CH    R0,HEX8                 TERMINAL RECONNECTED?
         BE    FREERPL                 NO. THIS IS WHAT IS
*                                       WANTED.  CONTINUE
*                                       WITH OTHER DEVICES.
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
******>  BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TOPEN             MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND
         B     RESEND
         TITLE '*********  N E T S O L  -  RESEND ROUTINE'
***********************************************************************
*                                                                     *
*        RESEND (REISSUE A SEND)                                      *
*                                                                     *
*   THIS ROUTINE IS USER BY THE SENDEND EXIT , RECEND EXIT ,          *
*   RELEASE EXIT TO REISSUE THE 'GOOD MORNING ' MESSAGE               *
*   AFTER RECEIVING A BAD LOGON OR RECOVERING AN LU                   *
*                                                                     *
***********************************************************************
         SPACE 3
RESEND   DS    0H
         LA    R0,MSG12                LOGON MESSAGE
         NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB TERMINAL MIGHT
*                                      HAVE STARTED FIRST
         B     SENDMSG
         TITLE '*********  N E T S O L  -  ADD TIME AND NODE NAME TO MEX
               SSAGE'
*        A LITTLE SUBROUTINE TO PUT NODE AND TIME IN MESSAGE 12
*          ***** RETURNS TO REG 14 ******
         SPACE 1
TIMETERM DS    0H
         STM   R0,R1,TIMESAVE          SAVE REGS
         L     R1,DDTTERM              -> TERM FIELD IN MSG 12
         MVC   0(8,R1),TERMNAME        INSERT NODE NAME
         SPACE 1
*        PLACE TIME IN MESSAGE 12
         SPACE 1
         TIME  DEC
         STM   R0,R1,TIMEWORK          TIME STASHED AS HHMMSSTH DDYYY
         L     R1,DDTTIME              -> TIME FIELD IN MSG 12
         MVC   0(L'EDITMASK,R1),EDITMASK  SET UP EDIT MASK
         OI    TIMEWORK+2,X'0F'        SET UP THE SIGN
         ED    0(7,R1),TIMEWORK        DO IT TO THE TIME
         MVI   3(R1),C':'              SET SEPARATOR
         MVI   6(R1),C' '              BLANK OUT THE SECONDS DIGIT
         ED    8(7,R1),TIMEWORK+5      DO IT TO THE DATE
         LM    R0,R1,TIMESAVE          RESTORE THE WORKERS
         BR    R14                     REURN TO REQUESTOR
TIMEWORK DC    F'0'
TIMESAVE DC    2F'0'                    SAVE R0 + R1 HERE
EDITMASK DC    X'4020214B212121404021204B212121' TIME STAMP EDIT PATT
         TITLE '*********  N E T S O L  -  GET AN RPL SUBROUTINE'
***********************************************************************
*                                                                     *
*        THE GETRPL SUBROUTINE GETS A NEW RPL VIA A GETMAIN MACRO     *
*        FOR 'LNGTHRPL' IN SUBPOOL 1. IT THEN INITIALIZES IT AND      *
*        RETURNS TO THE CALLER WITH THE RPL ADDRESS IN R5.            *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 10-12 - BASE REGISTERS                             *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*        OUTPUT REGISTERS:                                            *
*                                                                     *
*              REG 0-1 - UNPREDICTABLE                                *
*              REG 5   - ADDRESS OF AN INITIALIZED RPL/NIB/WORKAREA   *
*                                                                     *
***********************************************************************
         SPACE 3
GETRPL   DS    0H
         L     R0,LNGTHRPL             LENGTH OF RPL + SUBPOOL
         GETMAIN R,LV=(0)              G E T M A I N    R P L
         MVC   0(8,R1),=CL8'DYNAMRPL'  IDENTIFY THE RPL AS DYNAMIC
         LA    PTRRPL,8(,R1)           R5 -> R P L
         MVC   IFGRPL(LNIFGRPL),FRESHRPL  COPY RPL TO GOTTEN ONE
*                                      NOTE: THIS MAKES RPL ASYNCH
         MVC   NIBDMPID(8),=CL8'DYNAMNIB' SET NIB DUMP ID
         MVC   NIBSTART(NIBLNIB),FRESHNIB INITITIALIZE NIB
         XC    WORKSPAC(WORKRPLA),WORKSPAC ZERO OUT KEY WORK AREA STUFF
         STM   R0,R1,TIMESAVE          SAVE WORK REGS
         TIME  DEC                      SAVE TIMESTAMP
         STM   R0,R1,GRPLTIME            IN RPL WORKAREA
         LM    R0,R1,TIMESAVE             RESTORE WORK REGS
         BR    R14                     RETURN TO CALLER
         TITLE '*********  N E T S O L  -  FREE RPL SUBROUTINE'
***********************************************************************
*                                                                     *
*        FREERPL IS ENTERED WHEN AN RPL/WORKAREA IS NOLONGER          *
*        NEEDED BY THE EXIT ROUTINES.  IT ISSUES A FREEMAIN           *
*        MACRO FOR THE RPL ADDRESS IN REGISTER 5.                     *
*        IF THE FIRST 8 CHARACTERS OF THE WORKAREA ARE NOT 'DYNAMRPL' *
*        THEN THIS SUBROUTINE BRANCHES TO INDICATE A USER 0008 ABEND. *
*                                                                     *
*        AT EXIT FROM FREERPL, CONTROL IS RETURNED TO VTAM.           *
*                                                                     *
*        INPUT REGISTERS                                              *
*          R5  - POINTS TO RPL/WORKAREA TO BE FREED                   *
*          R10-R12 - BASE REGISTERS                                   *
*          R13 - ADDRESS OF REGISTER SAVE AREA                        *
*                                                                     *
***********************************************************************
         SPACE 3
FREERPL  DS    0H
         L     R3,RPLUSFLD             -> TTE
         LTR   R3,R3                   IF NOT ZERO
         BZ    *+10                      THEN
         XC    TERMCRPL,TERMCRPL              RESET A(RPL) IN TTE
         L     R0,LNGTHRPL             LENGTH OF RPL TO BE FREED
         S     R5,=F'8'                REDUCE FOR INDENTITY AT FRONT
         CLC   0(8,R5),=CL8'DYNAMRPL'  IS IT A DYNAMIC RPL ?
         BNE   TOOSMALL                NO, ISSUE U0008 ABEND
         SPACE 1
         FREEMAIN R,LV=(0),A=(5)       F R E E   R P L  -> R5
         SPACE 1
RETURN   DS    0H
         L     R14,RETVTAM@            RESTORE EXIT RETURN ADDRESS
         BR    R14                     RETURN
         TITLE '*********  N E T S O L  -  RECEIVE(ANY) SUBROUTINE'
***********************************************************************
*                                                                     *
*                   RECEIVE (ANY)                                     *
*                                                                     *
*        THIS SUBROUTINE IS ENTERED ONLY WHEN A REC (ANY) IS TO       *
*        BE ISSUED.                                                   *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 5     - POINTS TO AN ASYNCHRONOUS RPL PLUS         *
*                          ITS WORKAREA                               *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*         OUTPUT REGISTERS:                                           *
*                                                                     *
*               REG 0-1   - UNPREDICTABLE                             *
*               REG 2-14  - VALUE AT INPUT                            *
*               REG 15    - UNPREDICTABLE                             *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
RECSUB   DS    0H
         ST    R14,SUBSAV14            SAVE RETURN ADDR
RECANY   OI    MFLAGS,RECA             INDICATE READ(ANY) IN PROGRESS
         RECEIVE RPL=(PTRRPL),OPTCD=(ASY,ANY,TRUNC,Q),                 X
               AREA=IOAREA,AREALEN=L'IOAREA,EXIT=RECEND,               X
               RTYPE=(DFSYN,RESP,NDFASY)
         NI    MFLAGS,255-(RECA)
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR RECEIVE(ANY):                                    *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    RECANY                  YES. REISSUE
         LTR   R15,R15                 READ-ANY ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R14,SUBSAV14            RESTORE THE RETURN ADDR
         BR    R14                     RETURN TO CALLER
         SPACE 3
         LTORG
         TITLE '********* N E T S O L  -  LUSTAT ROUTINE'
***********************************************************************
*       ROUTINE TO HANDLE LOGICAL UNIT STATUS RECEIVED                *
*                                                                     *
*    SSENEEI  SSENSMI                                                 *
*      00        02       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      00        02          SNOCCUR                                  *
*      08        1C       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      08        2B         "     "     "        "    "    "  (RESEND)*
*      08        31       DEVICE POWERED OFF     "    "    "          *
*      08        01          SNOCCUR                                  *
*                                                                     *
***********************************************************************
         SPACE 3
LUSTATUS DS    0H
         OI    FLAGS,LUSTATE           SEND +VE RESPONSE
         OI    MFLAGS,LUSEND
         MVC   SENSE(2),RPLSSEI   SAVE SSENSEI + SSENSMI
         MVC   USENSE(2),RPLUSNSI SAVE USSESEI(2 BYTES)
         NI    RPLOPT12,FF-RPLFMHDR CLEAR FM HDR BIT
         SPACE 1
SENDLU   EQU   *
         SEND  STYPE=RESP,CONTROL=LUS,RESPOND=(NEX,FME,NRRN),          *
               RPL=(PTRRPL),POST=SCHED,OPTCD=(ASY,CA),EXIT=SENDEND
         NI    MFLAGS,255-(LUSEND)     SEND DONE
         SPACE 2
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    SENDLU                  YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
*******> BNZ   SNOCCUR                 NO. IMPOSSIBLE
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
*******> BNZ   SNOCCUR                 NO. ERROR
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B    RETURN                   RETURN TO VTAM
         SPACE 1
CONTLU   NI    FLAGS,255-(LUSTATE)     LUSTAT SEND DONE
         CLC   SENSE,LUS0001           IS DEVICE NOW AVAILABLE
         BE    RESEND                  YES SO SEND LOGON MSG.
         CLC   SENSE,LUS082B           IS DEVICE NOW AVAILABLE
         BE    RESEND
         B     FREERPL
         TITLE '*********  N E T S O L  -  ERROR EXIT RTN'
***********************************************************************
*                                                                     *
*    THIS ROUTINE IS ENTERED IF AN ERROR IS DETECTED.                 *
*                                                                     *
*        INPUT REGS:                                                  *
*                                                                     *
*    REGISTER 0 CONTAINS A RTNCD CODE (4, 8, C, 10, 14, 18)           *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL OF THE REQUEST                      *
*                                                                     *
*           THE FDBK2 FIELD OF THIS RPL CONTAINS A REASON             *
*           CODE WHICH IS A SUBCODE OF THE RTNCD CODE IN              *
*           REGISTER 0.                                               *
*                                                                     *
*    REGISTER 2 - 12 UNMODIFIED BY VTAM                               *
*                                                                     *
*    REGISTER 13 POINTS TO THE SAVE AREA IN USE                       *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS TO VTAM                      *
*                                                                     *
*    REGISTER 15 ERREXIT ROUTINE ADDRESS                              *
*                                                                     *
*                                                                     *
*                                                                     *
*    EXIT FROM ERREXIT IS AS FOLLOWS:                                 *
*                                                                     *
*           THRU ERRETURN TO VTAM, WHICH WILL RETURN TO THE           *
*           MAINLINE OR EXIT ROUTINE NSI.                             *
*                                                                     *
*           TO SNOCCUR, WHICH WILL ABNORMALLY TERMINATE               *
*           NETSOL.                                                   *
*                                                                     *
*           TO PROBDEV.                                               *
*                                                                     *
*                                                                     *
*        OUTPUT REGS:                                                 *
*                                                                     *
*    REGISTER  1-9  UNPREDICTABLE                                     *
*                                                                     *
*    REGISTER 10-12 NETSOL BASE REGISTERS                             *
*                                                                     *
*    REGISTER 13    SAVE AREA UPON ENTRY                              *
*                                                                     *
*    REGISTER 14    UNPREDICTABLE IF EXIT TO SNOCCUR OR               *
*                    RETURN.                                          *
*                   VALUE AT INPUT IF RETURN TO VTAM.                 *
*                                                                     *
*    REGISTER 15    THE INPUT RTNCD CODE IF ERREXIT WAS               *
*                   ENTERED FROM MAINLINE NETSOL.                     *
*                   AN ACTION CODE IF ENTERED FROM AN EXIT            *
*                    ROUTINE.                                         *
*                                                                     *
*    REGISTER  0    UNPREDICTABLE IF ENTERED FROM MAINLINE            *
*                    NETSOL.                                          *
*                   AN ACTION CODE MODIFIER IF ENTERED FROM AN        *
*                    EXIT ROUTINE.                                    *
*                                                                     *
*        NOTE: REGISTERS 0 AND 15 WILL BE RETURNED THRU VTAM          *
*              TO MAINLINE OR EXIT ROUTINE NSI.                       *
*    DESCRIPTION OF ACTION CODES AND FLAGS                            *
*                                                                     *
*                                                                     *
*        THE ERREXIT ROUTINE COMMUNICATES TO THE ERROR EXIT NSI       *
*        VIA AN ACTION CODE SET IN REG 15 AND, IN SOME CASES,         *
*        AN ACTION CODE MODIFIER SET IN REG 0. IN SOME SPECIAL        *
*        CASES, FLAGS ARE SET TO PASS INFORMATION TOO.                *
*                                                                     *
*        THE ACTION CODES AND MODIFIERS INDICATE APPROPRIATE          *
*        ACTIONS TO BE TAKEN BY THE EXIT ROUTINE. THE EXIT            *
*        ROUTINE MAY, HOWEVER, HANDLE THE ERROR ACTION                *
*        DIFFERENTLY FROM WHAT ERREXIT INDICATES BY ITS ACTION        *
*        CODE, IF IT SO CHOOSES.                                      *
*                                                                     *
*        ACTION CODES AND MODIFIERS ARE AS FOLLOWS:                   *
*                                                                     *
*            00 MACRO COMPLETED SUCCESSFULLY                          *
*               REG 0 MODIFIER=0                                      *
*                                                                     *
*            04 THIS IS A SNO (SHOULD NOT OCCUR) WHICH WILL NOT       *
*               BE SET BY THE ERROR EXIT. IF THIS IS SET AT           *
*               NSI, THE NETWORK SOLICITOR SHOULD ABNORMALLY          *
*               TERMINATE.                                            *
*                                                                     *
*TORELES     08 BRANCH TO RELEASE                                     *
*RELONLY        REG 0 MODIFIER=0 CLSDST                               *
*REL1ST                        4 CLSDST + OPNDST (AQUIRE)             *
*                                                                     *
*TOSEND     0C BRANCH TO SENDMSG                                      *
*               REG 0 MODIFIER=MESSAGE NUMBER                         *
*                                                                     *
*REISSU        10     REISSUE THE REQUEST                             *
*                                                                     *
*TOENDREQ    14 BRANCH TO FREERPL                                     *
*                                                                     *
*TORESEND    18 RESEND                                                *
*RSETSOL     1C SNOCCUR                                               *
*                                                                     *
*TOPROBDV    20 BRANCH TO PROBDEV                                     *
*                                                                     *
*    SINCE NETSOL DOES NOT ISSUE ALL API MACROS, NOT ALL              *
*    RTNCD CODES AND REASON CODES ARE POSSIBLE. THOSE                 *
*    FDBK3 CODES WHICH CAN OCCUR FOR THE MACROS ISSUED ARE            *
*    LISTED WITHIN THE SUBSECTIONS OF ERREXIT FOR EACH                *
*    RTNCD CODE. THIS LIST INCLUDES ANY WHICH MAY BE                  *
*    IMPOSSIBLE BECAUSE OF CURRENT NETSOL LOGIC.  THOSE WHICH         *
*    ARE POSSIBLE ARE INDICATED WITH AN '*'.  BASIC ONLY              *
*    CODES ARE NOT LISTED.                                            *
*                                                                     *
*                                                                     *
*    THE FLAGS SET ARE:                                               *
*                                                                     *
*          LOOPONCE - REISSUE I/O COMMAND ONE MORE TIME. IF           *
*                     THE REISSUED COMMAND IS SUCCESSFUL, THE         *
*                     FLAG MUST BE TURNED OFF BY THE MAINLINE         *
*                     OR EXIT ROUTINE. IF UNSUCCESSFUL,               *
*                     ERREXIT TURNS OFF THE FLAG ON ENTRY TO          *
*                     HANDLE THE FAILURE.                             *
*                                                                     *
*            RELOPND - RELEASE THE DEVICE THEN OPNDST(ACQUIRE)        *
*                      IT, THUS RE-ESTABLISHING A SESSION FOR         *
*                      THAT DEVICE.                                   *
*                                                                     *
*           SHUTDOWN - NETSOL SHUTDOWN IN PROGRESS. IF THIS           *
*                      BIT IS ON AT ENTRY TO AN EXIT ROUTINE          *
*                      OTHER THAN TPEND, NO PROCESSING IS DONE        *
*                      WITHIN THE ROUTINE. THIS WILL RAPIDLY          *
*                      FLUSH EXITS REQUESTS ALREADY SCHEDULED         *
*                      AT THE TIME A NEED FOR SHUTDOWN IS             *
*                      DETECTED.                                      *
*                      NOTE: THIS BIT IS ALSO SET BY THE TPEND        *
*                            EXIT, WHICH HAS BEEN SCHEDULED           *
*                            PRIOR TO ENTRY TO ERREXIT FOR A          *
*                            SHUTDOWN CONDITION.                      *
*                                                                     *
***********************************************************************
         SPACE 3
ERREXIT  DS    0H
         SPACE 2
***********************************************************************
*        NO NEED TO ESTABLISH ADDRESSABILITY, SINCE BASE REGISTERS    *
*        HAVE NOT BEEN MODIFIED.  NOTE THAT ALSO PTRRPL POINTS TO RPL *
*        USED IN EXIT ROUTINE, ALTHOUGH IT IS NOT NECESSARILY THE RPL *
*        IN USE WHEN ERREXIT WAS ENTERED, I. E. SYNCHRPL MAY          *
*        HAVE BEEN IN USE FOR INQUIRE (APPSTAT).                      *
***********************************************************************
         SPACE 1
         LR    R7,R0                   SAVE RTNCD CODE TO
*                                       USE AS RETURN CODE IF
*                                       ENTRY FROM MAINLINE.
         SPACE 1
         DROP  R5
         USING IFGRPL,R1               => R P L
         SPACE 1
         LR    R8,R1                   SAVE RPL ADRESS
         LR    R6,R14                  SAVE RETURN ADDRESS
         SPACE 2
***********************************************************************
*        FORMAT THE RPL ERROR FIELDS INTO A READABLE MESSAGE AND      *
*        WRITE THE MESSAGE TO THE OPERATOR. NOTE THAT SOME ERRORS     *
*        WILL NOT BE LOGGED TO THE SYSTEM LOG AS THEY ARE CONSIDERED  *
*        UNIMPORTANT. THE DATA IN ERMDATA IS AVAILABLE FOR            *
*        DEBUGGING PURPOSES.                                          *
***********************************************************************
         SPACE 1
***********************************************************************
*        BYPASS THOSE ERROR COMBINATIONS DEFINED IN 'ERMSGTAB'        *
***********************************************************************
         SPACE 1
         STM   R3,R5,RPLERRSA     SAVE WORK REGS DURING TABLE SCAN
         MVC   ERMDATA(1),RPLREQ  BUILD                  REQ
         MVC   ERMDATA+1(2),RPLFDBK   ERROR COMPARISON  /RTNCD/FDBK2
         MVC   ERMDATA+3(4),RPLSSEI     FIELD           /SSEI/SSMI/USER
         LM    R3,R5,ERMBXLE      LOAD BXLE REGS
         CR    R3,R5              NULL TABLE?
         BH    ERMSG              YES => DISPLAY ERROR MSG
         SPACE 1
ERMLOOP  MVC   ERMTEMP,ERMDATA    COPY COMPARISON FIELD TO WORKAREA
         NC    ERMTEMP,ERMAND(R3) ZERO IRRELEVANT FIELDS FOR COMPARE
         CLC   ERMTEMP,ERMCODE(R3) A NON-DISPLAY ERROR?
         BE    ERMBYPAS             YES => DON'T DISPLAY ERROR MSG
         BXLE  R3,R4,ERMLOOP        NO  => LOOK AT NEXT TABLE ENTRY
         SPACE 1
***********************************************************************
*        FORMAT AND DISPLAY ERROR MESSAGE                             *
***********************************************************************
         SPACE 1
ERMSG    UNPK  PACKWORK(3),RPLREQ(2)   UNPACK REQUEST CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+33(2),PACKWORK PUT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLRTNCD(2) UNPACK RETURN CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+42(2),PACKWORK PUT IT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLFDB2(2)  UNPACK FEEDBACK 2 CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+51(2),PACKWORK PLACE IN MESSAGE
         UNPK  PACKWORK(9),RPLSSEI(5)  UNPACK SYSTEM SENSE CODES
         TR    PACKWORK(8),TRTAB       PRETTY IT UP
         MVC   ERRORMSG+62(2),PACKWORK TO MESSAGE
         MVC   ERRORMSG+73(2),PACKWORK+2  RPLSSMI CODES TOO
         MVC   ERRORMSG+82(4),PACKWORK+4  RPLUSNSI CODES ALSO
         L     R3,RPLUSFLD             -> TTE FOR TERMINAL NAME
         MVC   ERRORMSG+92(8),TERMNAME TO ERROR MESSAGE AREA
ERMWTO   WTO   MF=(E,ERRORMSG)              WRITE ERROR MSG.
ERMBYPAS LR    R15,R7                  RESTORE R0 RETURN CODE
         LR    R1,R8                   RESTORE RPL ADDRESS
         LR    R14,R6                  RESTORE RETURN ADDRESS
         LM    R3,R5,RPLERRSA          RESTORE WORK REGS
         SPACE 2
***********************************************************************
*        CHECK IF ERREXIT HAS BEEN ENTERED FROM MAIN LINE OR          *
*        EXIT ROUTINE . IF ERROR IN MAIN LINE THEN RETURN VIA         *
*        REGISTER 14, AND UPON RETURN TO MAIN-LINE CODE               *
*        APPROPRIATE ACTION WILL BE TAKEN.                            *
***********************************************************************
         SPACE 1
         LR    R3,R14                  SAVE RETURN ADDR
         LA    R8,SETLRPL              IS REQUEST A
         CR    R1,R8                   SETLOGON?
         BER   R14                     YES.  IN MAINLINE
*                                       AND RETURN TO VTAM.
         CH    R15,HEX18           18  RPL ECB/EXIT PROBLEM?
*******> BNL   SNOCCUR                 YES. CANNOT VALIDLY
         BNL   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*                                       OCCUR SINCE SHUTDOWN
*                                       SWITCH STOPS EXITS'
*                                       ACTION PRIOR TO THE
*                                       CLSDSTACB.
*                                      NOTE. CODES HIGHER
*                                       THAN 18 DO NOT EXIST
         SPACE 2
***********************************************************************
*        UPON ENTRY IF R1 IS NOT EQUAL TO R5 (R1 = A(SYNCHRPL) )      *
*        THEN R1'S AND R5'S INFORMATION MUST BE COMBINED.             *
*        THE COMMAND THAT CAUSED THE ERROR WAS                        *
*        ISSUED USING SYNCHRPL AND R5 IS POINTING TO AN               *
*        ASYNCH RPL.  FOR THIS RTN WE NEED SOME INFO IN BOTH.         *
***********************************************************************
         SPACE 1
         CR    R1,R5                   ARE WE USING ONE RPL
         BE    ERRPLOK                 YES, BRANCH
*              MOVE THE NECESSARY INFORMATION FROM THE R5 RPL TO
*              SYNCHRONOUS RPL (R1). THIS IS THE SWITCHES, SAVE AREAS
*              ETC. PRIOR TO THE WORK AREAS.
         MVC   SYNWORK(WORKRPLA),LNIFGRPL(R5)
         SPACE 2
***********************************************************************
*        GET THE FDBK2 FIELD FROM THE RPL.                            *
*        PREPARE TO BRANCH BASED ON 'RTNCD'.                          *
***********************************************************************
         SPACE 1
ERRPLOK  DS    0H
         SR    R6,R6                   CLEAR REG 6  .
         IC    R6,RPLFDB2              PICK UP REASON CODE
         LR    R7,R6                   START TO INITIALIZE R7
*                                       WHICH WILL BE USED AS
*                                       AN INDEX FOR BRANCH
*                                       TABLES
         SR    R0,R0                   SET UP DEFAULT ACTION CODE
          SPACE 2
***********************************************************************
* TRANSLATE RTNCD CODE AND FDBK2 CODE INTO ACTION CODE                *
*                                                                     *
*   RTNCD CODES HAVE A GENERAL MEANING AS FOLLOWS:                    *
*                                                                     *
*          04   EXTRAORDINARY COMPLETION                              *
*                 FUNCTION COMPLETED. ADDITIONAL INFORMATION          *
*                 AVAILABLE. PROBABLY HANDLED OUT OF LINE.            *
*                 CONDITION SHOULD BE HANDLED BEFORE MAKING           *
*                 FURTHER REQUESTS TO THE DEVICE.                     *
*                                                                     *
*          08   REISSUE                                               *
*                 TEMPORARY ENVIRONMENT CONDITION CAUSED              *
*                 REQUEST TO BE REJECTED.                             *
*                                                                     *
*          0C   DAMAGE                                                *
*                 INTEGRITY OF THE REQUEST OR DEVICE HAS BEEN         *
*                 DISTURBED.                                          *
*                                                                     *
*          10   ENVIRONMENT ERROR                                     *
*                 REQUEST INCOMPLETE DUE TO ENVIRONMENTAL             *
*                 CONDITION. ENVIRONMENT MUST BE ALTERED              *
*                 BEFORE RECOVERY CAN BE ATTEMPTED.                   *
*                                                                     *
*          14   USER LOGIC ERROR                                      *
*                 USER ERROR ON THE REQUEST. REQUEST REJECTED         *
*                 OR INCOMPLETE. NOT EXECUTABLE IN THE                *
*                 PRESENT FORM.                                       *
*                                                                     *
*          18   RPL NOT AN RPL   OR   RPL IS ALREADY ACTIVE.          *
***********************************************************************
         SPACE 1
         B     FEEDTAB(R15)            GO TO FEEDBACK CODE
*                                       HANDLING ROUTINE
FEEDTAB  BAL   R7,SNOCCUR           0  FEEDBACK OF 00 DOESN'T
*                                       ENTER LERAD OR SYNAD
         B     EXTRAORD             4  EXTRAORDINARY COM-
*                                       PLETION
         B     REISSUE              8  REISSUE
         B     DAMAGE               C  DAMAGE
         B     ENVIRON             10  ENVIRONMENT ERROR
         B     LOGIC               14  LOGIC ERROR
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 04 - EXTRAORDINARY COMPLETION                           *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*    03        *  RECEIVE    /   "     "          "     MESSAGE       *
*    04        *  RECEIVE    / EXCP CONDITION INCOMMING RESPONSE      *
*                                                                     *
***********************************************************************
         SPACE 3
EXTRAORD DS    0H
         CH    R6,HEX3                 IS IS VALID FDBK2
         BE    VALFDBK2                YES SO HANDLE IT
         CH    R6,HEX4                 IS IT ONLY VALID REASON CODE
*******> BNE   SNOCCUR                 NO SO FORGET IT
         BNE   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2
***********************************************************************
* BSC DEVICES UNDER VTAM2 RESPOND WITH ZERO SENSE IN SOME CASES
* TO RECORD MODE MACROS I.E.
* WHEN USER SENSE INCLUDED THE SSENSEI + SSENSMI FIELDS ARE 0
***********************************************************************
         SPACE 1
VALFDBK2 IC    R7,SENSE                SAVE SSENSEI FOR BRANCHING
         LTR   R7,R7                   DO WE HAVE ZERO STATUS?
         BZ    STAT3270                MUST BE STATUS FROM 3270
***********************************************************************
*        CONVERT SENSE CODE INTO BRANCH TABLE OFFSET                  *
***********************************************************************
         SRL   R7,3                    ASSUME X'04' IS INDEX = 0
         SR    R6,R6                   ZERO INDEX REG
CINDEX4  LTR   R7,R7                   INDEX DONE?
         BZ    BRTAB4                  YES => GO BRANCH
         SRL   R7,1                    NO  => SHIFT NEXT BIT OUT
         LA    R6,4(,R6)                      BUMP INDEX BY 4
         B     CINDEX4                        GET NEXT BIT
BRTAB4   CH    R6,HEX14                INDEX TOO BIG?
*******> BH    SNOCCUR YES => SNOCCUR
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RSNTAB4(R6)             GO TO HANDLE SSENSMI
RSNTAB4  BAL   R7,SNOCCUR        <08 (00)  SHOULD NOT OCCUR
         B     REQREJ             08 (04)  REQUEST REJECT
         B     REQERR             10 (08)  REQUEST ERROR
         B     STATERR            20 (0C)  STATE ERROR
         B     RHERROR            40 (10)  RH ERROR
         B     PATHERR            80 (14)  PATH ERROR
         SPACE 2
***********************************************************************
*                                                                     *
*        08 - REQUEST REJECT                                          *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       08      00                  REISSUE SEND (IN BRACKET)         *
*       08      01                  RELEASE LU                        *
*       08      02                  IGNORE (CONTINUE)                 *
*       08      13                  REISSUE SEND (IN BRACKET)         *
*       08      1B                  IGNORE (WAIT FOR LU TO ENTER DATA)*
*       08      1C                  IGNORE                  DC18203   *
*       08      2B                  REISSUE SEND                      *
*       08      2D                  IGNORE (CONTINUE)                 *
*       08      31                     "       "                      *
*                                                                     *
***********************************************************************
         SPACE 1
REQREJ   IC    R7,SENSE+1              GET SSENSMI
         CH    R7,HEX2                 IS IT POSSIBLE
         BH    TRYHIGH                 >2 TRY FOR HIGH RANGE
         LR    R6,R7
         AR    R7,R7                   PEPARE FOR BRANCH
         AR    R7,R6                   TABLE INDEXING
         SLL   R7,2
         B     RSNTAB5(R7)             HANDLE SSENSMI
         SPACE 1
RSNTAB5  LA    R15,TORESEND         0  REISSUE SEND WITH OUT BB
         B     ERRETURN
         NOP   0
         LA    R15,TORELES          1  RELEASE
         LA    R0,RELONLY              NO OPNDST
         B     ERRETURN
         LA    R15,TOENDREQ         2  CONTINUE REQUEST (IGNORE)
         B     ERRETURN
         NOP   0
         SPACE 1
TRYHIGH  CH    R7,HEX13            13  REISSUE SEND
         BNE   CHK1BX
         LA    R15,TORESEND            WITH IN BRACKET CONDITION
         B     ERRETURN
         SPACE 1
CHK1BX   CH    R7,HEX1B                KEY PRESSED ON TERMINAL ?
         BNE   CHK1CX                                         DC18203
         LA    R15,TOENDREQ        1B  WE SHOULD IGNORE
         B     ERRETURN
         SPACE 1
CHK1CX   EQU   *                                               DC18203
         CH    R7,HEX1C                                        DC18203
         BNE   CHK2BX                                          DC18203
         LA    R15,TOENDREQ        IC WE SHOULD IGNORE IT      DC18203
         B     ERRETURN                                        DC18203
         SPACE 1                                               DC18203
CHK2BX   CH    R7,HEX2B
         BNE   CHK2DX
         LA    R15,TORESEND        2B  WE SHOULD TRY AGAIN
         B     ERRETURN
         SPACE 1
CHK2DX   CH    R7,HEX2D
         BNE   CHK31X                                           DC18203
         LA    R15,TOENDREQ        2D  WE SHOULD IGNORE
         B     ERRETURN
CHK31X   CH    R7,HEX31            31  DEVICE POWERED OFF       DC18203
*******> BNE   SNOCCUR                                          DC18203
         BNE   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LA    R15,TOENDREQ            SO IGNORE                DC18203
         B     ERRETURN                                         DC18203
         SPACE 2
***********************************************************************
*                                                                     *
*        10 - REQUEST ERROR                                           *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       10      03                  RELEASE TERMINAL                  *
*       10      XX                  SHOULD NOT OCCUR                  *
*                                                                     *
***********************************************************************
         SPACE 1
REQERR   CLI   SENSE+1,X'03'           FUNCTION NOT SUPPORTED?
*******> BNE   SNOCCUR                 NO - SNOCCUR
         BNE   *+8                          JUMP TO THE BAL
         B     *+8                          JUMP OVER THE BAL
         BAL   R7,SNOCCUR                   TELL WHERE WE CAME FROM
         SPACE 1
         STM   R1,R3,RPLERRSA          SAVE REG 1-3
         L     R3,RPLUSFLD             LOAD A(TTE)
         MVC   MSG1003+17(8),TERMNAME  MOVE NODE NAME TO MSG
         WTO   MF=(E,MSG1003)          WTO ERROR MSG
         SPACE 1
         LM    R1,R3,RPLERRSA          RESTORE REG 1-3
         LA    R15,TORELES         03  FUNCTION NOT SUPPORTED
         LA    R0,RELONLY              RELEASE TERMINAL
         B     ERRETURN
         SPACE 1
STATERR  LA    R15,TORELES         20  STATE ERROR
         LA    R0,REL1ST               RELEASE AND REOPEN
         B     ERRETURN
         SPACE 1
RHERROR  BAL   R7,SNOCCUR
         SPACE 2
***********************************************************************
*                                                                     *
*          80 - PATH ERRORS                                           *
*                                                                     *
*           SSENSEI/SSENSMI                                           *
*             80      05           NO SESSION CONDITION               *
*                                                                     *
***********************************************************************
         SPACE 1
PATHERR  IC    R7,SENSE+1              GET   SSENSMI
         CH    R7,HEX5                 IS IT ONE WE CAN HANDLE
         BE    NOSESS                  YES SO HANDLE IT
         LA    R15,TOENDREQ            OTHERWISE END THIS REQUEST
         B     ERRETURN
         SPACE 1
NOSESS   DS    0H                      THIS IS A NO SESSION COND.
*                                       A SESSION FOR SOME REASON HAS
*                                       NOT BEEN ESTABLISHED BETWEEN
*                                       THE SENDER AND RECEIVER
         LA    R15,TORELES              SO LETS CLOSE TO CLEAR
         LA    R0,REL1ST                AND REOPEN
         B     ERRETURN
         SPACE 1
STAT3270 DS    0H                      HANDLE 2 BYT OF USER SENSE CODES
*                                       RETURNED FROM 3270
         LA    R15,TORELES             ASSUME DEVICE UNUSABLE
         CLC   USENSE,SNAS0200         WAS SDLC STATUS RETURNED FOR DE
*                                       WHICH SHOWS POWER ON
         BE    INTRREQ1                YES CHECK MORE
         CLC   USENSE,SNAS0010         NO CHECK IF INTV. REQ. (DEVICE
*                                       POWERED OFF )
         BNE   ERRETURN                RELEASE DEVICE
         LA    R15,TOENDREQ            WE SHOULD IGNORE REQUEST AND
*                                      WAIT FOR TERM TO BE POWERED UP
         B     ERRETURN                BEFORE WE SEND SCREEN
         SPACE 1
INTRREQ1 DS    0H                      DEVICE IS NOW AVAILABLE. JUST
         LA    R15,TOENDREQ            IGNORE BECAUSE LOSTERM WILL GET
         B     ERRETURN                SCHEDULLED .
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 08 - REISSUE                                            *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*      00      * ALL API MACROS   TEMPORARY STORAGE                   *
*                (NOT CHECK,       ALLOCATION FAILURE                 *
*                 OPEN, OR CLOSE)                                     *
*                                                                     *
***********************************************************************
         SPACE 3
REISSUE  DS    0H
         LTR   R6,R6                   ONLY VALID REASON CODE
*                                       IS 0
*******> BNZ   SNOCCUR             >0  ERROR IF NOT
         BNZ   *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LA    R15,REISSU           0  ACTION IS TO REISSUE
*                                      REG 0 IS ALREADY SET FOR
*                                       REISSUE ONLY
         B     ERRETURN                RETURN TO EXIT ROUTINE
         EJECT
***********************************************************************
*                                                                     *
*  FEEDBACK CODE 0C - DAMAGE                                          *
*                                                                     *
*   REASON CODE   MACROS         MEANING          ACTION              *
*    00              *           BASIC ONLY          *                *
*    01          RECEIVE      LU NOT AVAILABLE     RELEASE 08         *
*                 SEND         "    "   "            "     08         *
*    02          REC/SEND     REQUEST CANCELLED    FREERPL 14 00      *
*                             BY TEST REQUEST                         *
*    03              *         BASIC ONLY             *               *
*    04              *         BASIC ONLY             *               *
*    05              *         BASIC ONLY             *               *
*    06              *         BASIC ONLY             *               *
*    07          REC/SEND     CONNECTION RECOVERY  FREERPL 14 00      *
*                               IN PROGRESS                           *
*    08          REC/SEND     LU RESTARTED         FREERPL 14 00      *
*    09          OPNDST       NODE DEACTIVATED     FREERPL 14 00      *
*    0A          RECEIVE      SNOCCUR                SNOCCUR          *
*    0B         RE/SEND/CLSDST REQUEST CANCELLED   FREERPL 14 00      *
*                                BY CLSDST                            *
*    0C          REC/ SEND     REQUEST CANCELLED   RELEASE 14 04      *
*                                BY CLEAR                             *
*    0D          SEND          REQ CANCEL BY EXCP.  SNOCCUR           *
*                                                                     *
***********************************************************************
         SPACE 3
DAMAGE   DS    0H
         CH    R6,HEXD                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
*******> BH    SNOCCUR             >D  YES, ERROR
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         AR    R7,R7                   MULTIPLY REASON CODE BY
         AR    R7,R6                   12 FOR BRANCH TABLE
         SLL   R7,2                    INDEXING
         B     RSNTABC(R7)             GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTABC  BAL   R7,SNOCCUR          0   BASIC MODE ONLY
         NOP   0
         NOP   0
         LA    R15,TORELES         1   LU NOT AVAILABLE
         LA    R0,RELONLY              DO NOT REOPEN
         B     ERRETURN
         LA    R15,TOENDREQ        2   REQUEST CANCELLED BY TEST REQ.
         B     ERRETURN
         NOP   0
         BAL   R7,SNOCCUR          3   BASIC ONLY
         NOP   0
         NOP   0
         BAL   R7,SNOCCUR          4   BASIC ONLY
         NOP   0
         NOP   0
         BAL   R7,SNOCCUR          5   BASIC ONLY
         NOP   0
         NOP   0
         BAL   R7,SNOCCUR          6   BASIC ONLY
         NOP   0
         NOP   0
         LA    R15,TOENDREQ        7   CONNECTION RECOVERY
         B     ERRETURN                 IN PROGRESS
         NOP   0
         LA    R15,TOENDREQ        8   LU  RESTARTED
         B     ERRETURN
         NOP   0
         LA    R15,TOENDREQ        9   NODE DEACTIVATED
         B     ERRETURN
         NOP   0
         BAL   R7,SNOCCUR          A   SNOCCUR
         NOP   0
         NOP   0
         LA    R15,TOENDREQ        B   REQUEST CANCELLED BY CLSDST
         B     ERRETURN
         NOP   0
         LA    R15,TORELES         C   RELEASE WITH OPNDST
         LA    R0,REL1ST
         B     ERRETURN
         BAL   R7,SNOCCUR          D   SNOCCUT
         NOP   0
         NOP   0
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 10 - ENVIRONMENT                                        *
*                                                                     *
*   FDBK2 CODE   MACRO(S)      MEANING                  ACTION        *
*                                                                     *
*     00        OPNDST/CLSDST  TERM,LU,APPL NOT ACTIVE  CLSDST  0C 08 *
*                                              (OPNDST) FREERPL 14 00 *
*     01        OPNDST         OPNDST FAILED           FREERPL  14 00 *
*                                                                     *
*     02        CLSDST (PASS)  TARGET APPL. UNACCEPTABLE MSG.   0C 09 *
*                                                                     *
*     03        OPNDST/SEND/REC  HALT QUICK                   SNOCCUR *
*                                                                     *
*     05         "      "     "   CHANNEL/LINK FAILURE RELEASE  08 00 *
*                                                                     *
*     06        OPNDST          ANS                    RELEASE  08 00 *
*                                                                     *
*     07        SEND/REC        CANCELLED BY VARY      RELEASE  08 00 *
*                                                                     *
*     09         "    "         TERMINATE SELF/LOGOFF  FREERPL  14 00 *
*                                                                     *
*     0A        ALL MACROS      ACF/VTAM ERROR         RELEASE  08 00 *
*                                                                     *
*     0D        ALL MACROS      ACF/VTAM INACTIVE TO ACB       SNOCCUR*
*                                                                     *
*     0E        ALL MACROS      TCB ABENDED            FREERPL  14 00 *
*                                                                     *
*     0F        SEND/REC        BUFFERS FILLED         FREERPL  14 00 *
*                                                                     *
*     10         "   "          TERMINATE SELF COMMAND RELEASE  08 04 *
*                                                                     *
*     11        OPNDST          SDT FAILED             FREERPL  14 00 *
*                                                                     *
***********************************************************************
         SPACE 3
ENVIRON  DS    0H
         CH    R6,HEX11                IS RSN COD11VALID SIZE?
*******> BH    SNOCCUR             >11 NO. ERROR
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2
***********************************************************************
*   HANDLE FIRST THREE REASON CODES WITHOUT BRANCH TABLE.             *
***********************************************************************
         SPACE 1
         LTR   R6,R6                   CHECK FOR TERMINAL OR
*                                       APPLICATION NOT
*                                       AVAILABLE.
         BNZ   CHKQUIES            ¬0  IF NOT, NEXT CHECK
*
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
         BO    TERMUNAV
         LA    R15,TOSEND              NO. APPLICATION UNAVAIL-
         LA    R0,MSG08                ABLE WRITE ERROR MSG
         B     ERRETURN
TERMUNAV DS    0H
         LA    R15,TOENDREQ            TERMINAL UNAVAILABLE FOR
         B     ERRETURN                 OPNDST(SPEC) AFTER
*                                       CLSDST(PASS) BECAUSE
*                                       CLSDST(PASS) FAILED
*                                       AND THE NETWORK OPER-
*                                       ATOR VARRIED OFF THE
*                                       TERMINAL.
CHKQUIES DS    0H
         LA    R15,TORELES             PREPARE ACTION CODE
         SLL   R7,2                     AND BRANCH TABLE INDEX
*                                       IN CASE REASON CODE
*                                       GREATER THAN 2
         CH    R6,HEX2                 CHECK FOR 1 OR 2
*
         BL    TERMUNAV             1  OPNDST FAILED FREERPL
*
         BH    RSNTAB10(R7)        >2  GO TO REASON CODE
*                                       HANDLING ROUTINE
*
         LA    R15,TOSEND           2  APPLICATION IS QUIESCING
         LA    R0,MSG09                 OR NEVER ACCEPTS LOGONS
*                                       BUT QUIESCE IS MORE
*                                       LIKELY SINCE 'NEVER
*                                       ACCEPTS WOULD PROBABLY
*                                       HAVE BEEN FOUND ON THE
*                                       INQUIRE.  EITHER CAN
*                                       HAPPEN IF THE OTHER
*                                       APPLICATION CHANGES ITS
*                                       STATUS AFTER NETSOL'S
*                                       INQUIRE(APPSTAT) BUT
*                                       PRIOR TO THE LATER
*                                       CLSDST(PASS).
         B     ERRETURN                WRITE ERROR MESSAGE
RSNTAB10 EQU   *-(3*4)                 START TABLE AT R6=3
*
         B     QUIKHALT             3  VTAM IS HALTING.
*                                      NETSOL CAN NO LONGER
*                                       COMMUNICATE WITH
*                                       DEVICES. TPEND NOTIFIED
*
         BAL   R7,SNOCCUR           4  BASIC MODE ONLY
         B     ERRETURN             5  PERMANENT PATH FAILURE
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             6  AUTO NETWORK SHUTDOWN
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             7  VARY DEACT. IMMEDIATE
*                                       LOSTERM WAS SCHEDULED
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         BAL   R7,SNOCCUR           8  DIAL BASIC MODE ONLY
         B     IGNORERR             9  TERMINATE SELF OR LOGOFF
*
         B     VTAMERR              A  VTAM ERROR FOR DEVICE
*
         BAL   R7,SNOCCUR           B  DIAL-OUT ONLY
*
         BAL   R7,SNOCCUR           C  DIAL IN BASIC MODE ONLY
         BAL   R7,SNOCCUR           D  VTAM INACTIVE TO YOUR
*                                      ACB.  SHOULD NOT OCCUR
*
         B     IGNORERR             E  TCB ABENDED
         B     IGNORERR             F  BUFFERS FILLED
         B     ERR1010             10  TERMINATE SELF
         B     IGNORERR            11  SDT FAILED
*
QUIKHALT DS    0H
         LA    R15,TOENDREQ            INDICATE RETURN TO VTAM
         OI    UFLAGS,SHUTDOWN         TURN ON SHUTDOWN
         B     ERRETURN
*
VTAMERR  DS    0H                      ON 100A RTNCD  JUST
         LA    R15,TOPROBDV             RELEASE THE TERMINAL.
         B     ERRETURN
         SPACE 1
IGNORERR DS    0H
         LA    R15,TOENDREQ            END REQUEST
         B     ERRETURN
         SPACE 1
ERR1010  DS    0H
         LA    R15,TORELES
         LA    R0,REL1ST
         B     ERRETURN
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 14 - LOGIC
*                                                                     *
*   FDBK2 CODE      MACRO(S)     MEANING                    ACTION    *
*                                                                     *
*       00        REC/SEND    NON-VTAM REQUEST CDE         SNOCCUR    *
*                                                                     *
*       02         "    "     EXIT ADDRESS ZERO            SNOCCUR    *
*                                                                     *
*       03         "    "     ECB ADDRESS ZERO             SNOCCUR    *
*                                                                     *
*       04         CHECK      RPL IS NOT ACTIVE            SNOCCUR    *
*                                                                     *
*       10         REC/SEND   INVALID ACB                  SNOCCUR    *
*                                                                     *
*       11          "    "                                            *
*                                                                     *
*       12          "    "    CLSDST IN PROGRESS (FREERPL)  14 00     *
*                                                                     *
*       13      REC/SEND/INT  RPL ARG + NIB CID INVALID     14 00     *
*                                                                     *
*       1E      REC/SEND      INVALID DATA ARE OR LENGTH   SNOCCUR    *
*                                                                     *
*       23        "   "       INVALID MACRO REQUEST TYPE   SNOCCUR    *
*                                                                     *
*         3C    SEND (POST=SCHED)   TRIED TO ISSUE 2ND SEND14 00DC18203
*       3B-47     "   "                                    SNOCCUR    *
*                                                                     *
*       4A                                                 SNOCCUR    *
*                                                                     *
*       4B          "         INVALID LOGON         (MSG)   0C 07     *
*                                                                     *
*       4C       INQUIRE(APPLSTAT) NO APPL NAME     (MSG)   0C 07     *
*                INQUIRE(SESSPARM) NO QUEUED CINIT(FREERPL) 14 00     *
*                CLSDST(PASS)      NO CDRSC FOR TERM(MSG)   0C 03     *
*                                                                     *
*       4D                                                 SNOCCUR    *
*                                                                     *
*       4E-51                                              SNOCCUR    *
*                                                                     *
*       52      INVALID NIB                                SNOCCUR    *
*                                                                     *
*       53      INQUIRE       INVALID SYM. NAME     (MSG)   0C 06     *
*               OPNDST(SPEC)  INVALID SYM. NAME   (FREERPL) 14 00     *
*                                                                     *
*       54      OPNDST        DEST. UNOPENABLE    (FREERPL) 14 00     *
*                                                                     *
*       55      OPNDST(AQUIRE) APPL NOT AUTHORIZED         SNOCCUR    *
*               CLSDST(PASS)   ????????????????????   (MSG) 0C 05     *
*                                                                     *
*       56-5C                                              SNOCCUR    *
*                                                                     *
*       5D      CLSDST        DEST, NOT OPENED    (FREERPL) 14 00     *
*                                                                     *
*       5E                                                            *
*                                                                     *
*       5F      CLSDST        RESOURCE NOT OWNED  (FREERPL) 14 00     *
*                                                                     *
*       60      CLSDST           "      "  CLOSABL   "     14 00      *
*                                                                     *
*        62     REC/SEND                                   SNOCCUR    *
*                                                                     *
***********************************************************************
         SPACE 3
LOGIC    DS    0H
         CH    R6,HEX60                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
*                                       X'60' IS HIGHEST VALID
*                                       VALUE TO BE EXPECTED.
*******> BH    SNOCCUR            >60  NO. ERROR
         BH    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         CH    R6,HEX4A                IF REASON CODE AT LEAST
         BNL   CHK56X            >=4A   X'4A', DO SEPARATELY
         LA    R15,TOENDREQ            PREPARE ACTION FOR
*                                       REASON CODES OF 12 & 13
         CH    R6,HEX12                CLSDST IN PROGRESS?
         BE    ERRETURN            12  YES, ACTION CODE
*                                        ALREADY SET
         CH    R6,HEX13                IS REASON CODE 13?
         BE    ERRETURN            13  CID INVALID
*                                      PROBABLY ALREADY
*                                       RELEASED THE TERMINAL.
*                                       IGNORE.
         CH    R6,HEX3C             3C  TRY TO ISSUE 2ND SEND   DC18203
         BE    ERRETURN                 YES SO IGNORE           DC18203
         BAL   R7,SNOCCUR        16
CHK56X   DS    0H
         CH    R6,HEX56                IF REASON CODE MORE THAN
         BH    CHK5DX             >56   X'56', DO SEPARATELY
         LA    R15,TOSEND              PREPARE DEFAULT ACTION
         SLL   R7,3                     AND BRANCH TABLE INDEX
         B     RSNTAB14(R7)            GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTAB14 EQU   *-(8*(X'4A'))           START TABLE W/ R6=X'4A'
*
         BAL   R7,SNOCCUR          4A
         NOP   0
*
         LA    R0,MSG07            4B  UNKNOWN LOGOMODE TABLE ENTRY
         B     ER144B                  OR UNIDENTIFIED APPLICATION
*
         LA    R0,MSG07            4C  INQUIRE(APPSTAT)..NO SYMBOLIC
         B     TSTINQA                  NAME FOR APPLICATION
*                                     OR INQUIRE(SESSPARM)..NO QUEUED
*                                       CINIT
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         BAL   R7,SNOCCUR          4D
         NOP   0
*
         BAL   R7,SNOCCUR          4E
         NOP   0
*
         BAL   R7,SNOCCUR          4F
         NOP   0
*
         BAL   R7,SNOCCUR          50
         NOP   0
*
         BAL   R7,SNOCCUR          51  APPLICATION NEVER
         NOP   0                        ACCEPTS LOGONS
*                                      MEANS NETSOL NEVER
*                                       ACCEPTS LOGON.
*
         BAL   R7,SNOCCUR          52
         NOP   0
*
         LA    R0,MSG07            53  SYMBOLIC (APPL OR TERM)
         B     TSTINQA                  NAME NOT KNOWN
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         LA    R15,TOENDREQ                   54
         B     ERRETURN
*
         LA    R0,MSG05            55  APPLICATION NOT AUTHORIZED
         B     OPNDSPC                  FOR OPNDST(ACQUIRE)
*                                      OR
*                                      CLSDST FAILURE.
*
         BAL   R7,SNOCCUR          56  CONFLICT BETWEEN MODE
         NOP   0                        AND DEVICE TYPE.
*                                      TRIED TO OPNDST FOR
*                                       A RECORD DEVICE.
*                                       NETSOL ONLY SUPPORTS
*                                       BASIC DEVICES.
*                                      CAN NOT OCCUR IN NETSOL
CHK5DX   DS    0H
         CH    R6,HEX5D                CLSDST INVALID (TERMINAL
*                                       NOT CONNECTED)
         BNE   CHK5FX             ¬5D  NOT X'5D', CHECK FURTHER
         LA    R15,TOENDREQ        5D  ACTION, RELEASE RPL AND
         B     ERRETURN                 RETURN TO VTAM
CHK5FX   DS    0H
         CH    R6,HEX5F                LESS THAN X'5F' NOT
*******> BL    SNOCCUR            <5F   VALID
         BL    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*
         LA    R15,TOENDREQ     5F 60  REASON CODES OF 5F
         B     ERRETURN                 AND 60 ARE POSSIBLE IF
*                                       A RELREQ OR READEND
*                                       EXIT IS PROCESSED
*                                       AFTER THE DEVICE WAS
*                                       PASSED TO ANOTHER
*                                       APPLICATION.  THIS CAN
*                                       HAPPEN BECAUSE THE
*                                       CLSDST(PASS) WILL NOT
*                                       PURGE AN ALREADY
*                                       SCHEDULED EXIT.
TSTINQA  DS    0H
         TM    MFLAGS,INQAPPST         INQUIRE(APPSTAT) MEANS THE
         BO    ERRETURN                 APPLICATION WAS UNKNOWN TO
*                                       VTAM.
*                                       => PUT OUT ERROR MESSAGE
         LA    R0,MSG03                ASSUME CLSDST(PASS)
         TM    MFLAGS,CLSDST           CLSDST FAILURE MEANS THERE
         BO    ERRETURN                 IS NO CDRSC FOR THE TERMINAL
*                                       IN A CROSS-DOMAIN SESSION.
*                                       => PUT OUT ERROR MESSAGE
         LA    R15,TOENDREQ            ASSUME INQUIRE(SESSPARM)
*                                       FAILURE IMPLIES THAT THERE
         TM    MFLAGS2,INQSESS          IS NO QUEUED CINIT FOR LOGON
         BO    ERRETURN                 PROCESSING FOR THE TERMINAL.
*                                       => END THE REQUEST
         LA    R15,TOENDREQ            ASSUME OPNDST(SPEC)
         TM    MFLAGS,OPNDSPEC         OPNDST FAILURE MEANS THE
         BO    ERRETURN                 NODE IS UNKNOWN TO VTAM.
*                                       POSSIBLY DUE TO MAJOR NODE
*                                       BEING DEACTIVATED.
*                                       => END THE REQUEST
         BAL   R7,SNOCCUR              ANY OTHER CAUSE OF
*                                       ERROR IS IMPOSSIBLE
ER144B   DS    0H
         TM    MFLAGS,CLSDST           ERROR ON CLSDST(PASS)
         BZ    ERRETURN                NO => WRITE UNKNOWN APPL'N
         LA    R0,MSG01                YES. WRITE THE MESSAGE
*                                       'XXXXXXXX UNKNOWN LOGOMODE'
         B     ERRETURN
OPNDSPC  DS    0H
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
*******> BO    SNOCCUR
         BO    *+8           JUMP TO THE BAL
         B     *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TM    MFLAGS,CLSDST           WAS THIS A CLOSE
         BO    ERRETURN                 CLDST(PASS).  OR
*                                       APPLICATION CAN'T BE
*                                       CONNECTED AS REQUESTED
*                                       IN RELREQ OR READEND.
*                                       ISSUE ALREADY PREPARED
*                                       ERROR MESSAGE.
         BAL   R7,SNOCCUR              NO, ANY OTHER CAUSE
*                                       IS IMPOSSIBLE
         TITLE '*********  N E T S O L  -  SCAN FOR LOGON SUBROUTINE'
ERRETURN DS    0H
         STC   R15,ACTIONS             SAVE ACTION CODES FOR
         STC   R0,ACTIONS+1             DEBUGGING
         CR    R1,R5                   DO WE HAVE BOTH A SYNCH
*                                      RPL AND A ASYNCH RPL
         BE    ERROUT                  NO, SKIP THE MOVE OF THE
*                                      RPL WORKAREA
         MVC   LNIFGRPL(WORKRPLA,R5),SYNWORK RESTORE WORKAREA
         SPACE 1
         DROP  R1
         USING IFGRPL,R5
         SPACE 1
ERROUT   DS    0H
         LR    R14,R3                  RESTORE ADDR AND RETURN
         BR    R14                      VTAM WHICH WILL RETURN
*                                       TO THE NSI AFTER THE
*                                       COMMAND WHICH CAUSED
*                                       ERREXIT TO BE ENTERED.
         TITLE '*********  N E T S O L  -  EQUATES AND CONSTANTS'
R0       EQU   0                       MACRO WORK REGISTER, AND
*                                      CONTAINS REASON CODE UPON
*                                      ABNORMAL TERMINATION
R1       EQU   1                       PARAMETER REGISTER,
*                                      CORRUPTED BY API MACROS
R2       EQU   2                       WORK REGISTER
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       POINTER TO CURRENT RPL, IT
*                                      IS NOT USED FOR ANY OTHER
*                                      PURPOSE
PTRRPL   EQU   R5                      AS ABOVE
R6       EQU   6                       WORK REGISTER
R7       EQU   7                       WORK REG
R8       EQU   8                       NIB POINTER
PTRNIB   EQU   8                        EXCEPT IN STD LOGON.
R9       EQU   9                       WORK REG
R10      EQU   10                      THIRD BASE REGISTER
R11      EQU   11                      SECOND BASE REGISTER
R12      EQU   12                      FIRST BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN REGISTER
R15      EQU   15                      RETURN CODE AND EXIT ENTRY PTR
         SPACE 2
***********************************************************************
*        FLAGS INDEPENDENT OF A SPECIFIC REQUEST                      *
***********************************************************************
         SPACE 1
UFLAGS   DC    X'00'                   MAIN NETSOL FLAGS
SHUTDOWN EQU   X'80'                   SHUTDOWN IN PROGRESS
INIT     EQU   X'40'                   INITIALIZATION IN PROGRESS
INITERR  EQU   X'20'                   ERROR DURING INITIALIZATION
         SPACE 1
DUMPFLAG DC    X'00'                   REASON CODE FOR DUMPING
OPENCODE EQU   1                       OPEN ACB FAILURE
SETLCODE EQU   2                       SETLOGON FAILURE
CBLKCODE EQU   4                       CONTROL BLOCK FAILURE
TABLTRBL EQU   8                       TROUBLE WITH THE TTE'S
         SPACE 1
TRTAB1   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6' HEX->CHAR TR TABLE
TRTAB    EQU   TRTAB1-X'F0'            USE ONLY LAST 16 OF TRTAB
         SPACE 1
PACKWORK DS    XL16                    UNPACK WORK AREA
         SPACE 1
SESSPARM DS    XL120                   INQUIRE(SESSPARM) WORK AREA
*                                      MAX SIZE ENCOUNTERED IS 88
         SPACE 1
SYSTEMID DC    X'00'                   SYSTEM ID FOR SOME APPLIDS
         SPACE 1
         DC    C'SAVED REGISTERS FOR USER ABENDS HERE'
SNOREGS  DC    16F'0'                  REGS FOR SNO CONDITIONS
         SPACE 1
RETVTAM@ DS    F                       SAVE AREA FOR EXIT RETURN ADDR
         SPACE 1
GENSAVE  DS    18F                     SAVE AREA FOR SOME EXIT RTNS
         SPACE 1
SUBSAV14 DC    F'0'                    SAVE AREA FOR REG 14
*                                       USED BY SUBROUTINES
FINISECB DC    F'0'                    ECB THAT MAIN-LINE CODE WAITS
*                                      ON, IT IS POST'ED BY TPEND EXIT
         EJECT
*              MISCELLANEOUS CONSTANTS AND MASKS.
SBA      EQU   X'11'                   3270 SET BUFFER @ FIELD
CLEARKEY EQU   X'6D'                   3270 CLEAR KEY
ENTERKEY EQU   X'7D'                   3270 ENTER KEY
HEX50    EQU   X'50'                   3270 BUFFER ADDRESS
HEXD3    EQU   X'D3'                     "    "       "
HEXD5    EQU   X'D5'                     "     "       "
CR       EQU   X'0D'                   3767 CARRIAGE RETURN
FF       EQU   X'FF'                   USED TO TURN OFF SWITCHES
         SPACE 1
*              EQUATES FOR ACTION CODES AND MODIFIERS
TORELES  EQU   8                       BRANCH TO RELEASE
TOSEND   EQU   X'0C'                   BRANCH TO WRITE
REISSU   EQU   X'10'                   REISSUE COMMAND
RELONLY  EQU   0                       RELEASE ONLY DONT REAQUIRE
REL1ST   EQU   4                       RELEASE AND ACQUIRE
TOENDREQ EQU   X'14'                   BRANCH TO FREERPL
TORESEND EQU   X'18'                   TAKE ACTION ACCORDING TO RTN
TOPROBDV EQU   X'20'                   BRANCH TO PROBDEV
         EJECT
*              HEX VALUES FOR FEEDBACK AND RETURN CODE COMPARES
         SPACE 1
         DS    0H
HEX2     DC    XL2'2'
HEX3     DC    XL2'3'
HEX4     DC    XL2'4'
HEX5     DC    XL2'5'
HEX8     DC    XL2'8'
HEX9     DC    XL2'9'
HEXC     DC    XL2'C'
HEXD     DC    XL2'D'
HEX10    DC    XL2'10'
HEX11    DC    XL2'11'
HEX12    DC    XL2'12'
HEX13    DC    XL2'13'
HEX14    DC    XL2'14'
HEX18    DC    XL2'18'
HEX1B    DC    XL2'1B'
HEX1C    DC    XL2'1C'                                      DC18203
HEX20    DC    XL2'20'
HEX2B    DC    XL2'2B'
HEX2D    DC    XL2'2D'
HEX31    DC    XL2'31'
HEX3C    DC    XL2'3C'
HEX4A    DC    XL2'4A'
HEX56    DC    XL2'56'
HEX5D    DC    XL2'5D'
HEX5F    DC    XL2'5F'
HEX60    DC    XL2'60'
         EJECT
*              BISYNCH STATUS ERROR MESSAGE CODES
         DS    0H
SNAS0010 DC    XL2'0010'               3270 -- INTERRUPTION
*                                       REQUIRED BECAUSE DEVICE
*                                       POWERED OFF.
SNAS0200 DC    XL2'0200'                3270 -- DEVICE END
*                                       (ALONE), MEANING THAT
*                                       THE DEVICE IS POWERED
*                                       ON AND OK TO USE.
         SPACE 1
*              LOGICAL UNIT STATUS FOR 3276/3278/3287/ETC.
         SPACE 1
LUS0001  DC    XL2'0001'               DEVICE AVAILABLE
LUS082B  DC    XL2'082B'               DEVICE AVAILABLE
         SPACE 1
@EXEC2   MVC   0(0,R4),2(R7)
@EXEC3   MVC   0(0,R4),0(R6)
         SPACE 3
         LTORG
         TITLE '*********  N E T S O L  -  ERROR BYPASS TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE RPL-BASED MACRO ERRORS WHICH        *
*        ARE NOT TO BE WRITTEN TO THE OPERATOR'S CONSOLE.             *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OFTHE FOLLOWING FIELDS:            *
*                                                                     *
*             ERMCODE - THE ERROR COMBINATION TO BE BYPASSED.         *
*                       THE FORMAT OF THIS FIELD IS:                  *
*                     RPLREQ/RPLRTNCD/RPLFDB2/RPLSSEI/RPLSSMI/RPLUSNSI*
*                       ANY FIELD WHICH DOESN'T MATTER SHOULD BE SET  *
*                       TO ZERO.                                      *
*                                                                     *
*             ERMAND  - THE MASK TO ZERO IRRELEVANT FIELDS IN THE     *
*                       CONSTRUCTED ERROR COMBINATION FIELD PRIOR     *
*                       TO COMPARISON WITH ERMCODE. EACH BYTE HERE    *
*                       HAS A CORRESPONDING BYTE IN ERMCODE AND SHOULD*
*                       BE SET TO:                                    *
*                         X'FF' - IF THE FIELD IN ERRCODE IS NON-ZERO.*
*                         X'00' - IF THE FIELD IN ERRCODE IS ZERO.    *
*                                                                     *
***********************************************************************
         SPACE 2
ERMCODE  EQU   0,7                    ERROR COMBINATION TO BE COMPARED
ERMAND   EQU   7,7                    MASK TO ZERO IRRELEVANT FIELDS
ERMSGL   EQU   14                     LENGTH OF A TABLE ENTRY
         SPACE 2
ERMSGTAB EQU   *                      START OF ERROR MSG TABLE
ERM1CODE DC    XL7'1B144B00000000'      BAD APPLID
ERM1AND  DC    XL7'FFFFFF00000000'        KEYED IN AT TERMINAL
ERMSGEND EQU   *-ERMSGL               LAST ENTRY IN TABLE
         SPACE 2
ERMBXLE  DC    A(ERMSGTAB)            BXLE (TABLE START)
         DC    A(ERMSGL)                REGS   (ENTRY LENGTH)
         DC    A(ERMSGEND)                FOR TABLE SEARCH  (TABLE END)
         TITLE '*********  N E T S O L  -  NETSOL GETPARM OPTIONS'
***********************************************************************
*        THIS TABLE DEFINES THE OPTIONS WHICH CAN BE SPECIFIED        *
*        WHEN SEARCHING THE INPUT CMD STRING FOR AN OPTION.           *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 2
GPAMECT  EQU   0                      START OF OPTION LIST
GPLEN    EQU   0,2                    MAX LENGTH OF PARAMETER
GPTEXTL  EQU   2,2                    LEN OF PARM ERROR TEXT
GPFLAG   EQU   4,1                    OPTION FLAGS
GPOPT    EQU   X'80'                  PARAMETER IS OPTIONAL
GPNULL   EQU   X'00'                  NO OPTIONS FOR THIS PARAMTER
GPTEXT   EQU   5                      TEXT INSERTED INTO GP ERR MSG
         SPACE 2
         PRINT NOGEN
*
*        APPLICATION LOGON SEQUENCES
*
SLNODE   $GP    8,'NODENAME',GPNULL
SLAPPL   $GP    8,'LOGON APPLID',GPOPT
         TITLE '*********  N E T S O L  -  NETSOL COMMAND TABLE'
***********************************************************************
*        THIS TABLE DEFINES THE COMMANDS WHICH MAY BE ENTERED FROM    *
*        THE TERMINAL.                                                *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 2
CMDGAPPL EQU   0,8                    GENERIC APPLICATION NAME
CMDVAPPL EQU   8,8                    VTAM APPLICATION NAME
CMDTEXT  EQU   16,8                   LOGON SEQUENCE OR COMMAND
CMDROUTA EQU   24,4                   A(CMD PROCESSING ROUTINE)
CMDTEXTL EQU   28,2                   LENGTH OF CMDTEXT
CMDFLAG  EQU   30,1                   COMMAND FLAG
CMDINIT  EQU   X'80'                  COMMAND ALLOWED FROM SYSIN FILE
CMDTERM  EQU   X'40'                  COMMAND ALLOWED FROM TERMINAL
CMDFILL  EQU   31,1                   FILLER
CMDTABL  EQU   32                     LENGTH OF CMD TABLE ENTRY
         SPACE 2
         PRINT NOGEN
CMDTAB   EQU   *                             START OF COMMAND TABLE
*
*        APPLICATION LOGON SEQUENCES
*
CHCF     $CMD  HCF,HCF,CHKAPPL,'HCF',CMDTERM
CIMSTEST $CMD  IMSTEST,IMSTEST,CHKAPPL,'IMSTEST',CMDTERM
         $CMD  IMSTEST,IMSTEST,CHKAPPL,'4',CMDTERM
CIMS     $CMD  IMS,IMS,CHKAPPL,'IMS',CMDTERM
         $CMD  IMS,IMS,CHKAPPL,'2',CMDTERM
CLCV     $CMD  LCV,LCV,CHKAPPL,'LCV',CMDTERM
CNCCFA   $CMD  NCCFA,NCCFA,CHKAPPL,'NCCFA',CMDTERM
CNCCFB   $CMD  NCCFB,NCCFB,CHKAPPL,'NCCFB',CMDTERM
CNETAPL1 $CMD  NETAPPL1,NETAPPL1,CHKAPPL,'NETAPPL1',CMDTERM
CNETAPL2 $CMD  NETAPPL2,NETAPPL2,CHKAPPL,'NETAPPL2',CMDTERM
CNETEST  $CMD  NETEST,NETEST,CHKAPPL,'NETEST',CMDTERM
CNETSOLA $CMD  NETSOLA,NETSOLA,CHKAPPL,'NETSOLA',CMDTERM
CNETSOLB $CMD  NETSOLB,NETSOLB,CHKAPPL,'NETSOLB',CMDTERM
CNETSOL  $CMD  NETSOL,NETSOL,CHKAPPL,'NETSOL',CMDTERM
CNETOP   $CMD  NETOP,NETOP,CHKAPPL,'NETOP',CMDTERM
CNPA     $CMD  NPA,NPA,CHKAPPL,'NPA',CMDTERM
CTESTWYL $CMD  TESTWYL,TESTWYL,CHKAPPL,'TESTWYL',CMDTERM
CTSOA    $CMD  TSOA,TSOA,CHKAPPL,'TSOA',CMDTERM
         $CMD  TSOA,TSOA,CHKAPPL,'LOGONA',CMDTERM
CTSOB    $CMD  TSOB,TSOB,CHKAPPL,'TSOB',CMDTERM
         $CMD  TSOB,TSOB,CHKAPPL,'LOGONB',CMDTERM
CTSO     $CMD  TSO,TSOB,CHKAPPL,'TSO',CMDTERM
         $CMD  TSO,TSOB,CHKAPPL,'LOGON',CMDTERM
CWYLBUR  $CMD  WYLBUR,WYL,CHKAPPL,'WYLBUR',CMDTERM
         $CMD  WYLBUR,WYL,CHKAPPL,'3',CMDTERM
CVSPC    $CMD  VSPC,VSPC,CHKAPPL,'VSPC',CMDTERM
         $CMD  VSPC,VSPC,CHKAPPL,'5',CMDTERM
*
*        NETSOL COMMANDS
*
CLOGOFF  $CMD  LOGOFF,LOGOFF,LOGOFCMD,'LOGOFF',CMDTERM
CSLOGON  $CMD  SETLOGON,SETLOGON,SETLOGON,'SETLOGON',CMDTERM+CMDINIT
         SPACE 1
CMDTABND DC    CL8'ENDOFTAB'                 END OF COMMAND TABLE
         PRINT GEN
         TITLE '*********  N E T S O L  -  SPECIAL LOGMODE ENTRY TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE APPLICATIONS WHICH DO NOT USE       *
*        THE DEFAULT LOGMODE ENTRY FOR THE DEVICE.                    *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             LOGMDAPP - THE APPLID OF THE APPLICATION USING A        *
*                        DIFFERNENT LOGOMODE TABLE ENTRY.             *
*                                                                     *
*             LOGMDENT- THE ASSOCIATED LOGOMODE TABLE ENTRY NAME.     *
*                                                                     *
***********************************************************************
         SPACE 2
LOGMDAPP EQU   0,8                    APPLICATION NAME
LOGMDENT EQU   8,8                    ASSOCIATED LOGMODE TABLE ENTRY
LOGMDLEN EQU   16                     LENGTH OF A TABLE ENTRY
         SPACE 2
LOGMDTAB EQU   *                             START OF LOGMODE TABLE
*                 /APPLID  /    /LOGMODE /   FORMAT ENTRY
LOGMDHCF DC    CL8'HCF     ',CL8'HCFPX   '   HCF
LOGMDNCF DC    CL8'NCCF    ',CL8'DSILGMOD'   NCCF
LOGMDEND DC    XL8'FFFFFFFFFFFFFFFF'         END OF LOGMODE TABLE
         TITLE '*********  N E T S O L  -  MESSAGE EQUATES/CONSTANTS'
*              EQUATES FOR ERROR MESSAGE NUMBERS AND REASON-CODES
MSG01    EQU   1                       INVALID LOGMODE TABLE ENTRY
MSG02    EQU   2                       LOGON DATA NOT IN INTRPRET TBLE.
MSG03    EQU   3                       NO INTRPRET TABLE
MSG04    EQU   4                       NO ROUTINE TO FIND APPL NAME
MSG05    EQU   5                       NOT AUTHORIZED FOR APPLICATION
MSG06    EQU   6                       APPLICATION NOT KNOWN
MSG07    EQU   7                       APPLICATION DEACTIVATED
MSG08    EQU   8                       APPLICATION INACTIVE
MSG09    EQU   9                       APPLICATION QUIESCING
MSG10    EQU   10                      APPLICATION NEVER ACCEPTS LOGONS
MSG11    EQU   11                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS.
MSG12    EQU   12                      THIS TERMINAL LOGGED ON
*                                      TO NETWORK SOLICITOR
         SPACE 2
***********************************************************************
*        LIST FORMS OF SOME MESSAGES                                  *
***********************************************************************
         SPACE 1
LISTWTO  WTO  'BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL DUE TOX
                I/O ERROR',                                            X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
LISTWTO1 WTO  'BCSC002 RC=42 ON NETSOL CLOSE ACB',                     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
LISTWTO6 WTO  'BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS PROX
               GRAM IS TERMINATED.',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
ERRORMSG WTO  'BCSC003 SYNAD/LERAD EXIT REQ=**,RTNCD=**,FDBK2=**,SSENSEX
               I=**,SSENSMI=**,SENSE=****,TERM=********',              X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
LOSTMSG  WTO  'BCSC004 LOSTERM ENTRY CODE XX FOR TERM=********',       X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
RELRQMSG WTO  'BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST',  X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
RELFLMSG WTO  'BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT',     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
LISTWTO8 WTO  'BCSC008 TERM=******** IS AN UNSUPPORTED TERMINAL TYPE', X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
LOGMENU  WTO  'BCSC009 TERM=******** MENU WRITTEN FROM ******',        X
               ROUTCDE=(11),DESC=(7),MF=L
         SPACE 3
MSG1003  WTO  'BCSC010 TERM=******** LOGMODE NOT COMPATIBLE WITH TERMINX
               AL',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 3
DCBMSG   WTO  'BCSC011 XXXXXX FILE WILL NOT OPEN. INITIALIZATION BYPASSX
               ED',ROUTCDE=(1,8),DESC=(7),MF=L
         SPACE 3
INITEMSG WTO  'BCSC012 ERROS ON INITIALIZATION FILE. EXECUTION CONTINUEX
               S',ROUTCDE=(1,8),DESC=(7),MF=L
         TITLE '*********  N E T S O L  -  A C B'
         DS    0D
         DC    CL8'ACB'
         SPACE 2
ACB      ACB   AM=VTAM,                                                X
               APPLID=NSNAME,                                          X
               EXLST=EXLST,                                            X
               MACRF=LOGON
         TITLE '*********  N E T S O L  -  A C B   EXIT LIST'
***********************************************************************
*    EXIT ROUTINES TO BE SCHEDULED IN RESPONSE TO VTAM EVENTS         *
*                                                                     *
*              * ERREXIT ENTERED FOR ERROR CONDITIONS.                *
*              * TPEND SCHEDULED WHEN VTAM SHUTS DOWN                 *
*              * LOGON SCHEDULED WHEN A TERMINAL LOGS ON              *
*              * LOSTERM SCHEDULED WHEN A TERMINAL IS LOST            *
*              * RELREQ SCHEDULED WHEN ANOTHER APPLICATION ACQUIRES   *
*                A TERMINAL CURRENTLY LOGGED ON TO NETSOL.            *
***********************************************************************
         SPACE 3
         DS    0D
         DC    CL8'EXITLIST'
         SPACE 2
EXLST    EXLST LERAD=ERREXIT,                                          X
               SYNAD=ERREXIT,                                          X
               TPEND=TPEND,                                            X
               RELREQ=RELREQ,                                          X
               LOGON=LOGON,                                            X
               LOSTERM=LOSTERM,                                        X
               AM=VTAM
         TITLE '*********  N E T S O L  -  ASYNCHRONOUS  N I B'
***********************************************************************
*        THE FOLLOWING NIB IS USED TO REFRESH THE NIB IN THE          *
*        ASYNCHROUS RPL. IT ITSELF IS NOT USED IN ANY MACRO.          *
***********************************************************************
         SPACE 3
         DS    0D
         DC    CL8'FRESHNIB'
         SPACE 2
FRESHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0
         TITLE '*********  N E T S O L  -  ASYNCHRONOUS   R P L'
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE ASYNC        *
*        RPL'S IN THE RPL CSECT.  IT IS NOT ITSELF USED IN ANY        *
*        MACRO.                                                       *
***********************************************************************
         SPACE 3
         DS    0D
         DC    CL8'FRESHRPL'
         SPACE 2
FRESHRPL RPL   ACB=ACB,                                                X
               AM=VTAM,                                                X
               OPTCD=ASY
         TITLE '*********  N E T S O L  -  TERMINAL TABLE DSECT'
TERMTABL DSECT
TERMNAME DS    CL8                     TERMINAL LU NAME FROM LOGON
TERMCID  DS    XL4                     CID GOTTEN AFTER OPNDST
TERMCRPL DS    AL4                     A(ACTIVE RPL FOR THIS TTE)
TERMAPPL DS    CL8                     APPLID FOR LAST CLSDST(PASS)
TERMDAPL DS    CL8                     DEFAULT LOGON APPLID FOR TERM
TERMLOGC DS    H                       LOGON COUNTER
TERMFLAG DS    XL1                     FLAG BYTE FOR LOGON STATUS
LOGPROC  EQU   X'80'                   LOGON PROCEEEDING
SENDSCED EQU   X'40'                   SEND (POST=SCED) ISSUED  DC18203
TERMFLG2 DS    XL1                     FLAG FOR TERMINAL'S NETSOL STAT
TOPEN    EQU   X'80'                   TERM LOGGED ON TO NETSOL
TPASSED  EQU   X'40'                   TERM SUCCESSFULLY TO APPLID
TREL     EQU   X'20'                   TERM RELEASED FOR SOME REASON
TINIT    EQU   X'10'                   DEFAULT APPLID SET AT INIT TIME
TERMDDT  DS    AL4                     A(DDT FOR THIS TERMINAL)
TERMDTIM DS    F                       TIME+60 SECS OF AUTO LOGON
TERMDCNT DS    H                       AUTO LOGON LOOP COUNTER
TERMFILL DS    CL18                    RESERVED
TERMELEN EQU   *-TERMNAME              LENGTH OF AN ENTRY
         TITLE '*********  N E T S O L  - DEVICE DEPENDENT TABLE DSECT'
DDT      DSECT
         SPACE 2
*        THE DEVICE DEPENDENT TABLE IDENTIFIES EDIT AND I/O ROUTINES
*        AND MESSAGES APPLICABLE TO A PARTICULAR DEVICE TYPE.
*        THE INQUIRE MACRO IS ISSUED IN THE LOGON EXIT TO OBTAIN
*        LOGMODE INFORMATION SO THAT THE DEVICE TYPE CAN BE DETERMINED.
*        TERMDDT POINTS TO THE DDT FOR A TERMINAL.
         SPACE 2
         DS    0D
DDTEDIT  DS    AL4                     A(INPUT EDIT ROUTINE)
DDTSEND  DS    AL4                     A(SEND ROUTINE)
DDTTERM  DS    AL4                     A(TERMINAL FIELD IN MSG 12)
DDTTIME  DS    AL4                     A(TIME FIELD IN MSG 12)
DDTM4OFS DS    AL4                     A(USEABLE MSG BUFFER IN MSG4)
DDTMSGOF DS    AL2                     MSG OFFSET OF DATA FIELD
DDTM4L   DS    AL2                     LEN(USEABLE MSG BUFFER IN MSG4)
DDTMSGTB DS    0F
DDTMSG01 DS    AL4                     A(MSG 01)
DDTMSG02 DS    AL4                     A(MSG 02)
DDTMSG03 DS    AL4                     A(MSG 03)
DDTMSG04 DS    AL4                     A(MSG 04)
DDTMSG05 DS    AL4                     A(MSG 05)
DDTMSG06 DS    AL4                     A(MSG 06)
DDTMSG07 DS    AL4                     A(MSG 07)
DDTMSG08 DS    AL4                     A(MSG 08)
DDTMSG09 DS    AL4                     A(MSG 09)
DDTMSG10 DS    AL4                     A(MSG 10)
DDTMSG11 DS    AL4                     A(MSG 11)
DDTMSG12 DS    AL4                     A(MSG 12)
         TITLE '*********  N E T S O L  -  D C B ''S'
*        DCB FOR SYSIN FILE
         SPACE 1
NETSOL   CSECT
         PRINT NOGEN
SYSINDCB DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EODSYSIN,MACRF=(GM),        X
               LRECL=80
*        DCB FOR SYSOUT FILE
         SPACE 1
SYSOUDCB DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=(PM),LRECL=80,RECFM=F
         SPACE 1
         IHADCB DSORG=PS
         PRINT GEN
         TITLE '*********  N E T S O L  -  N I B   DSECT'
         ISTDNIB
         TITLE '*********  N E T S O L  -  B I N D   DSECT'
         ISTDBIND
         TITLE '*********  N E T S O L  -  R P L   DSECT'
IFGRPLX  DSECT
STSECT   DS    0D                  START DSECT ON D-WORD
         IFGRPL DSECT=NO,AM=VTAM
         EJECT
*********       END OF RPL DSECT AND START OF NIB       **************
         ORG
NIBDMPID DC    0D'0',CL8'DYNAMNIB'     NIB DUMP ID
NIBSTART DS    CL(NIBLNIB)             ASYNCHROUS NIB
*********       END OF NIB AND START OF RPL WORK AREA   **************
WORKSPAC DS    0D                      START OF RPL WORK AREA
CID      DS    F                       CID OF READ DEVICE
RPLSAVE  DS    18F                     SAVE AREA FOR RPL OPERATIONS
RPLERRSA DS    12F                     SAVE AREA FOR SYNAD EXIT
*                                      THAT ARE ASYNCHRONOUS
APPLID   DS    CL8                     NAME OF APPLICATION
MODETAB  DS    CL8                     NAME OF MODE TABLE ENTRY
GRPLTIME DS    CL8     (HHMMSSTH YYYDD) TIMESTAMP WHEN RPL GETMAINED
RECLEN   DS    F                       FOR READ RECLEN FIELD
SENDLEN  DS    F                       FOR SEND TO TERMINAL
DATAPTR  DS    AL4(0)                  A(LOGON SEQUENCE IN IOAREA)
GPPARM   DS    AL4(0)                  A(OPTION LIST PASSED TO GETPARM)
GPDATAP  DS    AL4(0)                  A(CURRENT PTR IN CMD BUFFER)
GPDATAL  DS    H                       LENGTH OF TEXT LEFT IN CMD BUF
MSGINDEX DS    X                       NUMBER OF ERROR MESSAGE WRITTEN
ERMDATA  DS    CL7                     COMBINED ERROR FIELD
REQ      EQU   ERMDATA,1               FOR RPL REQ FIELD
RTNCD    EQU   ERMDATA+1,1             FOR RPL RTNCD FIELD
FDBK2    EQU   ERMDATA+2,1             FOR RPL FDBK2 FIELD
SENSE    EQU   ERMDATA+3,2             SAVE SSENSEI + SSENSMI FIELDS
USENSE   EQU   ERMDATA+5,2             SAVE USSESEI (2 BYTES)
ERMTEMP  DS    CL7                     ERROR FIELD WORKAREA
ACTIONS  DS    2X                      SAVE AREA FOR ERROR
APPLSTAT DC    X'0'                    FOR RPL FDBK FIELD
*                                      ACTION CODES
*        INTERNAL FLAG BYTES
FLAGS    DS    X                       FLAG BYTE
*
LOGOFF   EQU   X'80'                   LOGOFF COMMAND ISSUED
RELOPND  EQU   X'40'                   RELEASE DEVICE, THEN
*                                      ATTEMPT TO RECONNECT
*                                      VIA OPNDST
BADEVICE EQU   X'20'                   PROBLEM WITH DEVICE
LOGMODE  EQU   X'10'                   FLAG TO INDICATE THE USER
*                                      HAS SUPPLIED THE NAME OF A
*                                      LOGMODE TABLE ENTRY IN THE
*                                      LOGON MSG TO BE PASSED TO
*                                      THE APPLICATION.
FIRSTSND EQU   X'08'                   FIRST SEND TO TERMINAL
CLEARSCR EQU   X'04'                   RECEND ISSUING CLEAR SCREEN
LUSTATE  EQU   X'02'                   LUSTAT PROCESSING FOR TERMINAL
SIMLOG   EQU   X'01'                   CLSDST(PASS) FAILED => MUST
*                                      ISSUE CLSDST(RELEASE) BEFORE
*                                      CONTINUING WITH SIMLOGON
         SPACE 1
EXITFLAG DS    X                       FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
LOGONEX  EQU   X'80'                   ENTERED THE LOGON EXIT
RECEX    EQU   X'40'                   ENTERED THE READEND EXIT
PASSEX   EQU   X'20'                   ENTERED THE CLSDST(PASS) EXIT
SENDEX   EQU   X'10'                   ENTERED THE WRITE EXIT
RELREQEX EQU   X'08'                   ENTERED THE RELREQ EXIT
LOSTEX   EQU   X'04'                   ENTERED THE LOSTERM EXIT
CLOSEX   EQU   X'02'                   ENTERED THE CLSDST(RELEASE)EXIT
OPENEX   EQU   X'01'                   ENTERED THE OPNDST EXIT
         SPACE 1
EXITFLG2 DS    X                       2ND FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
OPNACQX  EQU   X'80'                   ENTERED THE OPNDST(ACQUIRE) EXIT
         SPACE 1
MFLAGS   DS    X                       FLAG BYTE FOR CURRENT VTAM MACRO
OPNDSPEC EQU   X'80'                   OPNDST(SPEC) IN PROGRESS
INQAPPST EQU   X'40'                   INQUIRE(APPSTST) IN PROGRESS
SENDING  EQU   X'20'                   WRITE IN PROGRESS
RECA     EQU   X'10'                   READ(ANY) IN PROGRESS
SMLOGON  EQU   X'08'                   SIMLOGON ISSUED AFTER CLSDST
INTRPRT  EQU   X'04'                   INTRPRET IN PROGRESS
CLSDST   EQU   X'02'                   CLSDST IN PROGRESS
LUSEND   EQU   X'01'                   LUSTAT RESPONSE SENT
         SPACE 1
         SPACE 1
MFLAGS2  DS    X                      FLAG BYTE2 FOR CURRENT VTAM MACRO
INQSESS  EQU   X'80'                   INQUIRE(SESSPARM) IN PROGRESS
         SPACE 1
MACFLAGS DS    X                       INDICATE MACROS CALLED FLAG 1
CLSREL   EQU   X'80'                   WILL DO CLSDST(RELEASE)
OPNSPEC  EQU   X'40'                   WILL DO OPEN(SPEC)
SIMLGON  EQU   X'20'                   SIMLOGON AFTER CLSDST
INTAPPID EQU   X'10'                   WILL DO INTERP (APPLID)
INQAPPS  EQU   X'08'                   WILL DO INQUIRE(APPSTAT)
CLOSPASS EQU   X'04'                   WILL DO CLSDST(PASS)
SENDASY  EQU   X'02'                   WILL DO SEND ASY
OPNDACQ  EQU   X'01'                   WILL DO OPNDST(AQUIRE)
         SPACE 1
MACFLAG2 DS    X                       INDICATE MACROS CALLED FLAG 2
INQSES   EQU   X'80'                   WILL DO INQUIRE(SESSPARM)
         SPACE 1
DATASEQL DS    X                       X-LATED DATA SEQ-LENGTH
         SPACE 2
WORKRPLA EQU   *-WORKSPAC              USED TO CLEAR OUT WORKAREA
         TITLE '*********  N E T S O L  -  SYNCHRONOUS RPL + NIB + WA'
***********************************************************************
*        THE FOLLOWING RPL IS USED FOR ALL SYNCHRONOUS COMMANDS       *
***********************************************************************
         SPACE 3
NETSOL   CSECT
         DS    0D
         DC    CL8'SYNCHRPL'
         SPACE 2
SYNCHRPL RPL  ACB=ACB,OPTCD=SYN,                                       X
               AM=VTAM
         ORG
***********************************************************************
*        THE FOLLOWING NIB IS USED FOR ALL SYNCHRONOUS OPERATIONS     *
*        REQUIRING A NIB.                                             *
***********************************************************************
         SPACE 3
         DS    0D
         DC    CL8'SYNCHNIB'
         SPACE 2
SYNCHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0
         DS    0D
SYNWORK  DC    (WORKRPLA)X'00'         RPL WORK AREA
         DS    0D
LNGTHRPL DC    AL1(1),AL3(ENDSECT-STSECT+8)  SUBPOOL #/LENGTH OF RPL
*                                      AND ITS OWN WORKAREA
SYNARG   EQU   SYNCHRPL+RPLARG-IFGRPL  DISPLACEMENT TO THE ARG
*                                      WITHIN SYNCHRPL
SYNFDB3  EQU   SYNCHRPL+RPLFDB3-IFGRPL DISPLACEMENT TO FBD3
*                                      IN SYNCHRPL'S WORKAREA
SRPLEXT1 EQU   SYNCHRPL+RPLEXTD1-IFGRPL DISPLACEMENT TO 'NIB@
*                                      IN ARG FIELD' BIT
SYNUSFLD EQU   SYNCHRPL+RPLUSFLD-IFGRPL DISPLACEMENT TO RPL USER FIELD
*                                      FOR USE BY ERROR EXIT ROUTINE
         EJECT
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE SYNCRONOUS   *
*        RPL'S. IT IS NOT ITSELF USED IN ANY MACROS      DC18203      *
***********************************************************************
         SPACE 1
         DS    0D                                              DC18203
         DC    CL8'FRSYNRPL'                                   DC18203
         SPACE 2
FRSYNRPL RPL   ACB=ACB,AM=VTAM,OPTCD=SYN                       DC18203
FRSYNL   EQU   *-FRSYNRPL    LENGTH OF SYN RPL FOR REFRESH     DC18203
         TITLE '*********  N E T S O L  -  SETLOGON RPL'
***********************************************************************
*        SETLOGON RPL - A SEPARATE RPL IS NECESSARY BECAUSE           *
*         THE LOGON EXIT CAN BE DRIVEN BEFORE THE SETLOGON            *
*         COMPLETES.                                                  *
***********************************************************************
         SPACE 3
         DS    0D
         DC    CL8'LOGONRPL'
         SPACE 2
SETLRPL  RPL   ACB=ACB,OPTCD=SYN,                                      X
               AM=VTAM
SETNIB   DC    (8+NIBLNIB)X'00'        NIB IN IFGRPLX DSECT
SETWORKA DC    (WORKRPLA)X'00'         WORKAREA IN IFGRPLX DSECT
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES.    *
***********************************************************************
DDT3270  DS    0D
S32EDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S32SENDA DC    A(S32SEND)         A(3270 SEND ROUTINE)
S32TERMA DC    A(S32TERM)         A(TERMINAL FIELD IN MSG 12)
S32TIMEA DC    A(S32TIME)         A(TIME FIELD IN MSG 12)
S32M4OFS DC    A(S32M4OF)         A(USEABLE BUFFER IN MSG 4)
S32OFFST DC    AL2(23)            MSG OFFSET FOR INSERTED DATA
S32M4L   DC    AL2(60)            L(USEABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 3
S32MSGTB DS    0F
         DC    A(S32MSG01)
         DC    A(S32MSG02)
         DC    A(S32MSG03)
         DC    A(S32MSG04)
         DC    A(S32MSG05)
         DC    A(S32MSG06)
         DC    A(S32MSG07)
         DC    A(S32MSG08)
         DC    A(S32MSG09)
         DC    A(S32MSG10)
         DC    A(S32MSG11)
         DC    A(S32MSG12)
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270 EXTENDED FUNCTION'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES     *
*        THAT HAVE EXTENDED FUNCTION (I.E. COLOUR + SYMBOL SETS ).    *
***********************************************************************
DDT3270E DS    0D
S3EEDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S3ESENDA DC    A(S32SEND)         A(3270 SEND ROUTINE)
S3ETERMA DC    A(S3ETERM)         A(TERMINAL FIELD IN MSG 12)
S3ETIMEA DC    A(S3ETIME)         A(TIME FIELD IN MSG 12)
S3EM4OFS DC    A(S3EM4OF)         A(USEABLE BUFFER IN MSG 4)
S3EOFFST DC    AL2(27)            MSG OFFSET FOR INSERTED DATA
S3EM4L   DC    AL2(60)            L(USEABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 3
S3EMSGTB DS    0F
         DC    A(S3EMSG01)
         DC    A(S3EMSG02)
         DC    A(S3EMSG03)
         DC    A(S3EMSG04)
         DC    A(S3EMSG05)
         DC    A(S3EMSG06)
         DC    A(S3EMSG07)
         DC    A(S3EMSG08)
         DC    A(S3EMSG09)
         DC    A(S3EMSG10)
         DC    A(S3EMSG11)
         DC    A(S3EMSG12)
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               767'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3767 TERMINALS.  *
***********************************************************************
DDT3767  DS    0D
S37EDITA DC    A(S37EDIT)         A(3767 INPUT EDIT ROUTINE)
S37SENDA DC    A(S32SEND)         A(3767 SEND ROUTINE)
S37TERMA DC    A(S37TERM)         A(TERMINAL FIELD IN MSG 12)
S37TIMEA DC    A(S37TIME)         A(TIME FIELD IN MSG 12)
S37M4OFS DC    A(S37M4OF)         A(USEABLE BUFFER IN MSG 4)
S37OFFST DC    AL2(8)             MSG OFFSET FOR INSERTED DATA
S37M4L   DC    AL2(60)            L(USEABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 3
S37MSGTB DS    0F
         DC    A(S37MSG01)
         DC    A(S37MSG02)
         DC    A(S37MSG03)
         DC    A(S37MSG04)
         DC    A(S37MSG05)
         DC    A(S37MSG06)
         DC    A(S37MSG07)
         DC    A(S37MSG08)
         DC    A(S37MSG09)
         DC    A(S37MSG10)
         DC    A(S37MSG11)
         DC    A(S37MSG12)
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR SX
               YSIN FILE'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN PROCESSING CMDS FROM THE SYSIN FILE.*
***********************************************************************
DDTSYSIN DS    0D
SINEDITA DC    A(0)               A(SYSIN INPUT EDIT ROUTINE)
SINSENDA DC    A(RIPUTMSG)        A(SYSIN SEND ROUTINE)
SINTERMA DC    A(0)               A(TERMINAL FIELD IN MSG 12)
SINTIMEA DC    A(0)               A(TIME FIELD IN MSG 12)
SINM4OFS DC    A(SINM4OF)         A(USEABLE BUFFER IN MSG 4)
SINOFFST DC    AL2(0)             MSG OFFSET FOR INSERTED DATA
SINM4L   DC    AL2(60)            L(USEABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 3
SINMSGTB DS    0F
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG04)         RESPONSE FOR INITIALIZATION CMDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG07)         FOR INVALID COMMANDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3270'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 3
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         SPACE 3
S32MSG01 DC    YL2(S32END01-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)
         $SF   (HI,SKIP)
         DC    C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END01 EQU   *
         SPACE 3
S32MSG02 DC    YL2(S32END02-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)
         $SF   (HI,SKIP)
         DC    C'BCSC102 INVALID LOGON SEQUENCE , REENTER'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END02 EQU   *
         SPACE 3
S32MSG03 DC    YL2(S32END03-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)
         $SF   (HI,SKIP)
         DC    C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END03 EQU   *
         SPACE 3
S32MSG04 DC    YL2(S32END04-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             MOVE CURSOR
         $IC                        TO START OF INPUT AREA
         $SBA  (24,16)
         $SF   (HI,SKIP)
S32M4OF  DC    CL60' '
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END04 EQU   *
         SPACE 3
S32MSG05 DC    YL2(S32END05-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)
         $SF   (HI,SKIP)
         DC    C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END05 EQU   *
         SPACE 3
S32MSG06 DC    YL2(S32END06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SF   (PROT)             SET ATTRIBUTE BYTE
         DC    C'BCSC106 LOGON IN PROGRESS'
S32END06 EQU   *
         SPACE 3
S32MSG07 DC    YL2(S32END07-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)            SET BUFFER ADDRESS
         $SF   (HI,SKIP)          SET BUFFER ATTRIBUTES
         DC    C'BCSC107          NOT DEFINED TO VTAM'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END07 EQU   *
         SPACE 3
S32MSG08 DC    YL2(S32END08-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)            SET BUFFER ADDRESS
         $SF   (HI,SKIP)          SET BUFFER ATTRIBUTES
         DC    C'BCSC108          IS NOT ACTIVE'  OR LOGMODE INVALID
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END08 EQU   *
         SPACE 3
S32MSG09 DC    YL2(S32END09-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)            SET BUFFER ADDRESS
         $SF   (HI,SKIP)          SET BUFFER ATTRIBUTES
         DC    C'BCSC109          NO LONGER ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END09 EQU   *
         SPACE 3
S32MSG10 DC    YL2(S32END10-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)            SET BUFFER ADDRESS
         $SF   (HI,SKIP)          SET BUFFER ATTRIBUTES
         DC    C'BCSC110          NEVER ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END10 EQU   *
         SPACE 3
S32MSG11 DC    YL2(S32END11-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,16)            SET BUFFER ADDRESS
         $SF   (HI,SKIP)          SET BUFFER ATTRIBUTES
         DC    C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S32END11 EQU   *
         SPACE 3
S32MSG12 DC    YL2(S32END12-*)
***********************************************************************
*                                                                     *
*        FULLSCREEN MSG FOR 3275/3277                                 *
*                                                                     *
***********************************************************************
         SPACE
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (RESETKBD,MDT)     SET WCC CODE
         $SBA  (1,1)              DEFINE ATTRIBUTES OF 1ST BUFFER
         $SF   (SKIP)
         $SBA  (2,1)
S32NSNAM DC    CL40'          BBBBBBBBBBBBB    CCCCCCCCCCCCC'
         DC    CL40'CC  SSSSSSSSSSSSSSS  CCCCCCCCCCCCCCC    '
         DC    CL40'         BBBBBBBBBBBBB    CCCCCCCCCCCCCC'
         DC    CL40'C  SSSSSSSSSSSSSSS  CCCCCCCCCCCCCCC     '
         DC    CL40'        BBBBBB     BB    CCCCCC       CC'
         DC    CL40'  SS           SS  CCCCCC       CC'
         DC    CL40'       BBBBBB     BB    CCCCCC          '
         DC    CL40' SS               CCCCCC'
         DC    CL40'      BBBBBBBBBBBBB    CCCCCC           '
         DC    CL40'SSSSSSSSSSSSSSS  CCCCCC'
         DC    CL40'     BBBBBBBBBBBBBBB  CCCCCCCC         S'
         DC    CL40'SSSSSSSSSSSSSS  CCCCCCCC                '
         DC    CL40'    BBBBBBBB     BB  CCCCCCCC           '
         DC    CL40'     SSSSSSSS  CCCCCCCC                 '
         DC    CL40'   BBBBBBBB     BB  CCCCCCCC     CC  SS '
         DC    CL40'    SSSSSSSS  CCCCCCCC     CC           '
         DC    CL40'  BBBBBBBB     BB  CCCCCCCC     CC  SS  '
         DC    CL40'   SSSSSSSS  CCCCCCCC     CC            '
         DC    CL40' BBBBBBBBBBBBBBB  CCCCCCCCCCCCCCC  SSSSS'
         DC    CL40'SSSSSSSSSS  CCCCCCCCCCCCCCC             '
         DC    CL40'BBBBBBBBBBBBBBB  CCCCCCCCCCCCCCC  SSSSSS'
         DC    CL40'SSSSSSSSS  CCCCCCCCCCCCCCC              '
         $SBA  (14,20)
         DC    C'BRITISH COLUMBIA SYSTEMS CORPORATION'
         EJECT
***********************************************************************
*                                                                     *
*        TIME AND DATE STAMP                                          *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (14,63)
         DC    C'TERM:'           TELL 'EM IT THE NODE NAME
S32TERM  DC    CL13' '            TERM NAME
         $SBA  (16,62)
S32TIME  DC    CL15' '            TIME STAMP
         EJECT
***********************************************************************
*                                                                     *
*        PF KEY SELECTION MENU                                        *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (16,6)
         DC    C'PFK APPL          ENTER         EXIT'
         $SBA  (18,6)
         DC    C'    TSO           LOGON         LOGOFF'
         $SBA  (19,6)
         DC    C' 2  IMS/VS        IMS           /RCL'
         $SBA  (20,6)
         DC    C' 3  WYLBUR        WYLBUR        LOGOFF'
         $SBA  (21,6)
         DC    C' 4  TEST IMS/VS   IMSTEST       /RCL'
         EJECT
***********************************************************************
*                                                                     *
*        LOGON INPUT AREA                                             *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (22,80)
         $SF   (UNPROT)            SF,ATT(UNPROTECT)
         $IC
         $SBA  (24,1)              DEFINE END OF INPUT FIELD
         $SF   (SKIP)
S32END12 EQU   *
S32SIZ12 EQU   S32END12-S32MSG12   CALCULATE SIZE OF MSG 12
         TITLE '*********  N E T S O L  -  MESSAGES FOR EXTENDED FUNCTIX
               ON 3270'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 3
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         SPACE 3
S3EMSG01 DC    YL2(S3EEND01-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND01 EQU   *
         SPACE 3
S3EMSG02 DC    YL2(S3EEND02-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC102 INVALID LOGON SEQUENCE , REENTER'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND02 EQU   *
         SPACE 3
S3EMSG03 DC    YL2(S3EEND03-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND03 EQU   *
         SPACE 3
S3EMSG04 DC    YL2(S3EEND04-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             MOVE CURSOR
         $IC                        TO START OF INPUT BUFFER
         $SBA  (24,12)
         $SFE  ATTR=SKIP,COL=RED
S3EM4OF  DC    CL60' '
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND04 EQU   *
         SPACE 3
S3EMSG05 DC    YL2(S3EEND05-*)
         $IO   WRITE
         $WCC  (ALARM,RESETKBD,MDT)
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND05 EQU   *
         SPACE 3
S3EMSG06 DC    YL2(S3EEND06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SFE  ATTR=PROT,COL=GREEN
         DC    C'BCSC106 LOGON IN PROGRESS'
S3EEND06 EQU   *
         SPACE 3
S3EMSG07 DC    YL2(S3EEND07-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)            SET BUFFER ADDRESS
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC107          NOT DEFINED TO VTAM'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND07 EQU   *
         SPACE 3
S3EMSG08 DC    YL2(S3EEND08-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)            SET BUFFER ADDRESS
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC108          IS NOT ACTIVE'  OR LOGMODE INVALID
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND08 EQU   *
         SPACE 3
S3EMSG09 DC    YL2(S3EEND09-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)            SET BUFFER ADDRESS
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC109          NO LONGER ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND09 EQU   *
         SPACE 3
S3EMSG10 DC    YL2(S3EEND10-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)            SET BUFFER ADDRESS
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC110          NEVER ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND10 EQU   *
         SPACE 3
S3EMSG11 DC    YL2(S3EEND11-*)
         $IO   WRITE              SET 3270 COMMAND CODE
         $WCC  (ALARM,RESETKBD,MDT) SET WCC CODE
         $SBA  (23,1)             CLEAR
         $IC                        OLD
         $RA   (23,80,X'00')          INPUT BUFFER
         $SBA  (24,12)            SET BUFFER ADDRESS
         $SFE  ATTR=SKIP,COL=RED
         DC    C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
         $RA   (24,80,X'00')      CLEAR REST OF MSG BUFFER
S3EEND11 EQU   *
         SPACE 3
S3EMSG12 DC    YL2(S3EEND12-*)
***********************************************************************
*                                                                     *
*        FULLSCREEN MSG FOR EXTENDED FUNCTION 3270                    *
*                                                                     *
***********************************************************************
         SPACE
         $IO   ERASE/WRITE
         $WCC  (RESETKBD,MDT)
         $SBA  (1,1)              ADDRESS 1ST BYTE ON SCREEN
         $SF   (PROT)             MARK IT PROTECTED
         $SBA  (2,1)
         $SFE  ATTR=SKIP,COL=GREEN
S3ENSNAM DC    CL40'          BBBBBBBBBBBBB    CCCCCCCCCCCCC'
         DC    CL40'CC  SSSSSSSSSSSSSSS  CCCCCCCCCCCCCCC    '
         DC    CL40'         BBBBBBBBBBBBB    CCCCCCCCCCCCCC'
         DC    CL40'C  SSSSSSSSSSSSSSS  CCCCCCCCCCCCCCC     '
         DC    CL40'        BBBBBB     BB    CCCCCC       CC'
         DC    CL40'  SS           SS  CCCCCC       CC'
         DC    CL40'       BBBBBB     BB    CCCCCC          '
         DC    CL40' SS               CCCCCC'
         DC    CL40'      BBBBBBBBBBBBB    CCCCCC           '
         DC    CL40'SSSSSSSSSSSSSSS  CCCCCC'
         DC    CL40'     BBBBBBBBBBBBBBB  CCCCCCCC         S'
         DC    CL40'SSSSSSSSSSSSSS  CCCCCCCC                '
         DC    CL40'    BBBBBBBB     BB  CCCCCCCC           '
         DC    CL40'     SSSSSSSS  CCCCCCCC                 '
         DC    CL40'   BBBBBBBB     BB  CCCCCCCC     CC  SS '
         DC    CL40'    SSSSSSSS  CCCCCCCC     CC           '
         DC    CL40'  BBBBBBBB     BB  CCCCCCCC     CC  SS  '
         DC    CL40'   SSSSSSSS  CCCCCCCC     CC            '
         DC    CL40' BBBBBBBBBBBBBBB  CCCCCCCCCCCCCCC  SSSSS'
         DC    CL40'SSSSSSSSSS  CCCCCCCCCCCCCCC             '
         DC    CL40'BBBBBBBBBBBBBBB  CCCCCCCCCCCCCCC  SSSSSS'
         DC    CL40'SSSSSSSSS  CCCCCCCCCCCCCCC              '
         $SBA  (14,20)
         DC    C'BRITISH COLUMBIA SYSTEMS CORPORATION'
         EJECT
***********************************************************************
*                                                                     *
*        TIME AND DATE STAMP                                          *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (14,65)
         $SFE  ATTR=SKIP,COL=RED
         DC    C'TERM: '          TELL 'EM IT THE NODE NAME
         $SBA  (14,71)
         $SFE  ATTR=PROT,XHL=BLINK,COL=RED
S3ETERM  DC    CL13' '            TERM NAME
         $SBA  (15,1)             DEFINE END OF FIELD TO RESET BLINKING
         $SFE  ATTR=SKIP
         $SBA  (16,62)
         $SFE  ATTR=SKIP,COL=GREEN
S3ETIME  DC    CL15' '            TIME STAMP
         EJECT
***********************************************************************
*                                                                     *
*        PF KEY SELECTION MENU                                        *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (16,6)
         $SFE  ATTR=SKIP,COL=GREEN
         DC    C'PFK  APPL         ENTER         EXIT'
         $SBA  (18,6)
         $SFE  ATTR=SKIP,COL=YELLOW
         DC    C'    TSO           LOGON         LOGOFF'
         $SBA  (19,6)
         $SFE  ATTR=SKIP,COL=PINK
         DC    C' 2  IMS/VS        IMS           /RCL'
         $SBA  (20,6)
         $SFE  ATTR=SKIP,COL=TURQ
         DC    C' 3  WYLBUR        WYLBUR        LOGOFF'
         $SBA  (21,6)
         $SFE  ATTR=SKIP,COL=YELLOW
         DC    C' 4  TEST IMS/VS   IMSTEST       /RCL'
         EJECT
***********************************************************************
*                                                                     *
*        LOGON INPUT AREA                                             *
*                                                                     *
***********************************************************************
         SPACE
         $SBA  (22,80)
         $SFE  ATTR=UNPROT,COL=WHITE
         $IC
         $SBA  (24,1)
         $SFE  ATTR=SKIP          END OF INPUT FIELD
S3EEND12 EQU   *
S3ESIZ12 EQU   S3EEND12-S3EMSG12
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3767'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 3
S37MSG01 DC    YL2(S37END01-*)
         DC    C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END01 EQU   *
         SPACE 3
S37MSG02 DC    YL2(S37END02-*)
         DC    C'BCSC102 INVALID LOGON SEQUENCE , REENTER'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END02 EQU   *
         SPACE 3
S37MSG03 DC    YL2(S37END03-*)
         DC    C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END03 EQU   *
         SPACE 3
S37MSG04 DC    YL2(S37END04-*)
S37M4OF  DC    CL60' '
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END04 EQU   *
         SPACE 3
S37MSG05 DC    YL2(S37END05-*)
         DC    C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END05 EQU   *
         SPACE 3
S37MSG06 DC    YL2(S37END06-*)
         DC    C'BCSC106 LOGON IN PROGRESS'
         DC    X'15'              CARRIAGE RETURN
S37END06 EQU   *
         SPACE 3
S37MSG07 DC    YL2(S37END07-*)
         DC    C'BCSC107          NOT DEFINED TO VTAM'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END07 EQU   *
         SPACE 3
S37MSG08 DC    YL2(S37END08-*)
         DC    C'BCSC108          IS NOT ACTIVE'  OR LOGMODE INVALID
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END08 EQU   *
         SPACE 3
S37MSG09 DC    YL2(S37END09-*)
         DC    C'BCSC109          NO LONGER ACCEPTING LOGONS'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END09 EQU   *
         SPACE 3
S37MSG10 DC    YL2(S37END10-*)
         DC    C'BCSC110          NEVER ACCEPTING LOGONS'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END10 EQU   *
         SPACE 3
S37MSG11 DC    YL2(S37END11-*)
         DC    C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
         DC    X'15'              CARRIAGE RETURN
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END11 EQU   *
         SPACE 3
S37MSG12 DC    YL2(S37END12-*)
         DC    XL2'1515'          DOUBLE CARRIAGE RETURN
S37NSNAM DC    C'B.C. SYSTEMS CORPORATION'
***********************************************************************
*                                                                     *
*        TIME AND DATE STAMP                                          *
*                                                                     *
***********************************************************************
         SPACE
         DC    C'   TERM:'        TERM KEYWORD
S37TERM  DC    CL8' '             TERM NAME
         DC    CL3' '             FILLER
S37TIME  DC    CL15' '            TIME STAMP
         DC    XL2'1515'          CARRIAGE RETURN
***********************************************************************
*                                                                     *
*        APPLICATION SELECTION MENU                                   *
*                                                                     *
***********************************************************************
         SPACE
         DC    C'  APPLICATION  ENTER         EXIT'
         DC    X'15'
         DC    X'15'
         DC    C'  TSO          LOGON         LOGOFF'
         DC    X'15'
         DC    C'  IMS          IMS           /RCL'
         DC    X'15'
         DC    C'  TEST IMS     IMSTEST       /RCL'
         DC    X'15'
***********************************************************************
*                                                                     *
*        PROMPT FOR INPUT                                             *
*                                                                     *
***********************************************************************
         DC    C'ENTER ? '
S37END12 EQU   *
S37SIZ12 EQU   S37END12-S37MSG12
         TITLE '*********  N E T S O L  -  MESSAGES FOR SYSIN'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 3
SINMSG00 DC    YL2(SINEND00-*)
         DC    C'UNSUPPORTED MESSAGE FOR SYSIN CMDS'
SINEND00 EQU   *
         SPACE 3
SINMSG04 DC    YL2(SINEND04-*)
SINM4OF  DC    CL60' '
SINEND04 EQU   *
         SPACE 3
SINMSG07 DC    YL2(SINEND07-*)
         DC    CL60'BCSC107 INVALID COMMAND'
SINEND07 EQU   *
         SPACE 3
         EJECT
         TITLE '*********  N E T S O L  -  R P L   DSECT CONTINUED'
IFGRPLX  DSECT
*        THE FOLLOWING SECTION OF THE WORK AREA IS NOT INITIALIZED BY
*        THE GETRPL FUNCTION SO NO DATA SHOULD BE PLACED IN THAT NEEDS
*        TO BE ZERO AT THE BEGINNING
         SPACE 1
*        THE FOLLOWING MANIPULATION RESERVES A MESSAGE BUFFER FOR
*        THE LARGEST EXISTING MESSAGE.
IOBASE   DS    CL(S32SIZ12)            SPACE FOR 3270 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S3ESIZ12)            SPACE FOR 3270 EXTENDED MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S37SIZ12)            SPACE FOR 3767 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         ORG   ,                       GO TO END OF BUFFER
LMSG12   EQU   *-IOBASE                CALC MAX MSG 12 SIZE
         ORG   IOBASE BACK TO START OF BUFFER
IOAREA   DS    CL(LMSG12)              FOR MSG OUTPUT / INPUT FROM LU
         ORG   IOAREA+80               ORG OVER SYSIN BUFFER
NODENAME DS    CL8                     TEMP NODE NAME STORAGE
DLOGAPPL DS    CL8                     TEMP APPLID STORAGE
TTEDUMMY DS    CL(TERMELEN)            DUMMY TTE USED BY SYSIN CMDS
         ORG   ,                       ORG BACK TO END OF BUFFER
*        OUTPUT BUFFER DEFINITION COMPLETE.
DATASEQ  DS    CL256                   TRANSLATED DATA SEQUENC DC18203
ENDSECT  DS    0D                      END DSECT ON D-WORD
LNIFGRPL EQU   WORKSPAC-STSECT         LENGTH OF ONE RPL AREA
IOBUFLEN EQU   ENDSECT-IOAREA          LENGTH OF THE IOAREA
*                                      WITHOUT THE WORKAREA
         END
./ ADD NAME=NETSOL$
INSTRUCTIONS FOR INSTALLING 'NETSOL'
*************************************

1) ASSEMBLE NETSOL USING THE SAMPLE JCL IN NETSOLA.

2) ADD VTAM DEFINITION FOR 'NETSOL' TO SYS1.VTAMLST.

3) ASSEMBLE AN INTERPRET TABLE(VLOGTAB2) FOR USE BY NETSOL.

4) ADD LOGAPPL=NETSOL,LOGTAB=VLOGTAB2 TO THE TERMINAL, PU, AND LU
   STATEMENTS IN VTAMLST FOR THOSE TERMINALS YOU WISH TO TALK TO NETSOL.

5) ADD STARTUP PROC (NETSOLP) TO SYS1.PROCLIB.

./ ADD NAME=NETSOLA  8001-08125-08125-1731-00011-00009-00000-GERHARD
//NETSOL70 JOB (Z904,0012),GERHARD,CLASS=E,MSGCLASS=C,MSGLEVEL=(1,1)
//        EXEC  PURGEME
// EXEC SYSCL,RENT=NO,OLIB='SYS1.ESPLIB',
//             SRC='GERHARD.MVS.NETSOL',
//             MAC3='GERHARD.MVS.NETSOL'
DDLMOD=DYNALLOC
%LKEDDFLT MAP,LIST
 ENTRY NETSOL70
 PAGE NETSOL70
 SETCODE AC(1)
%NEWLINK NETSOL70
./ ADD NAME=NETSOLD,SSI=00093263
NSOL     TITLE '*****************    N E T S O L'
         MACRO ,                                                 90141
&NM      XHEAD ,             EXIT CODE (IN NETSOLEX CSECT)       90141
NETSOLEX CSECT ,             GET EXIT CSECT                      90141
&NM      LR    R7,R15        MAKE LOCAL BASE                     90141
         DROP  ,                                                 90141
         USING &NM,R7        SET LOCAL BASE                      90141
         L     R12,EXMAIN    GET MAIN BASE                       90141
         USING NETSOL,R12,R11,R10  CHEAT A LITTLE                90141
         LM    R10,R11,RESTBASE  LOAD OTHERS                     90141
         ST    R14,RETVTAM@  SAVE RETURN ADDRESS                 90141
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
         MEND  ,                                                 90141
         SPACE 1                                                 90141
         MACRO ,                                                 90141
&NM      MHEAD ,             EXIT CODE (IN NETSOL CSECT)         90141
NETSOL70 CSECT ,             GET MAIN CSECT                      90141
         DROP  ,                                                 90141
         USING &NM,R15       SET LOCAL BASE                      90141
&NM      L     R12,=A(NETSOL)  GET MAIN BASE                     90141
         USING NETSOL,R12,R11,R10  CHEAT A LITTLE                90141
         LM    R10,R11,RESTBASE  LOAD OTHERS                     90141
         ST    R14,RETVTAM@  SAVE RETURN ADDRESS                 90141
         DROP  R15                                               90141
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
         MEND  ,                                                 90141
         SPACE 1                                                 90141
         MACRO ,                                                 87193
&NM      LPALOOK &NAME=INVOKE,&CDE=R5,&ERR=EXCXCB,&MLPA=YES      87193
.*       THIS MODULE PERFORMS SYSTEM DEPENDENT LOOKUP OF A       87193
.*       SPECIFIC MODULE IN THE LINK-PACK AREA                   87193
.*       NAME=  D(B) OR RELOC. MEMBER NAME                       87193
.*       CDE=      MAPPING REGISTER FOR RETURNED CDE             87193
.*       ERR=      BRANCH ADDRESS IF NOT FOUND                   87193
         GBLB  &SVS,&MVS                                         87193
         LCLA  &I                                                87193
&I       SETA  &SYSNDX                                           87193
         AIF   (&SVS OR &MVS).SUB                                87193
&NM      L     R14,CVTPTR    GET CVT                             87193
         USING CVTMAP,R14    DECLARE IT                          87193
         L     R14,CVTHEAD   FIRST TCB                           87193
         USING TCB,R14                                           87193
         L     R14,TCBOTC    GET MASTER SCHEDULER                87193
         LA    R14,TCBLLS    GET LOAD LIST                       87193
LPALOOP  LAT   R14,0(R14),&ERR  EXIT WITH UNAVAILABLE MESSAGE    87193
         LAT   &CDE,4(R14),LPALOOP  GET CDE OR OUT               87193
         USING CDENTRY,&CDE                                      87193
         TM    CDATTR,CDFLPRES+CDFRENT  RENT/LPA MODULE ?        87193
         BNO   LPALOOP       NO                                  87193
         CLC   CDENAME,&NAME   MATCHING ENTRY ?                  87193
         BNE   LPALOOP       NO                                  87193
         DROP  R14                                               87193
         MEXIT ,             RETURN WITH &CDE REGISTER SET       87193
.SUB     ANOP  ,                                                 87193
&NM      STM   R1,R15,12(R13)  SAVE ALL REGISTERS                87193
         L     R3,CVTPTR     GET CVT IN R3 FOR IEAVVMSR          87193
         LM    R0,R1,&NAME   LOAD MODULE NAME                    87193
         AIF   ('&MLPA' NE 'YES' AND '&MLPA' NE '').NOMLPA       87193
         L     R15,CVTQLPAQ-CVTMAP(R3)  GET MLPA CDE CHAIN       87193
         USING CDENTRY,R15                                       87193
LPL&I.M  ICM   R15,15,CDCHAIN   GET NEXT CDE; ELSE TRY PLPA      87193
         BZ    LPL&I.P                                           87193
         C     R1,CDNAME+4   MATCH ?                             87193
         BNE   LPL&I.M       NO; TRY NEXT                        87193
         C     R0,CDNAME     FULL MATCH ?                        87193
         BNE   LPL&I.M       NO; TRY NEXT                        87193
         LR    R0,R15        FINAGLE THE CDE ADDRESS             87193
         B     LPL&I.G       FOUND IT                            87193
         DROP  R15                                               87193
.NOMLPA  ANOP  ,                                                 87193
LPL&I.P  L     R7,CVTLPDSR-CVTMAP(,R3)   GET LOOKUP ENTRY        87193
         BALR  R14,R7    NOTE THAT R7-R9 ARE CLOBBERED           87193
         B     LPL&I.G-*(,R14)   MODULE FOUND                    87193
         LM    R1,R15,12(R13)  RESTORE REGS                      87193
         B     &ERR          TAKE ERROR EXIT                     87193
LPL&I.G  LM    R1,R15,12(R13)  RESTORE REGS                      87193
         LR    &CDE,R0       LOAD CDE (LPDE) BASE                87193
         USING CDENTRY,&CDE  DECLARE IT                          87193
         MEND  ,                                                 87193
         SPACE 1                                                 87193
         MACRO
&LABEL   $CMD  &VAPPL,&ROUT,&TEXT,&FLAG,&TYPE=0                  88185
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S COMMAND LOOK-UP TABLE.
.*
.*  INPUT    : &GAPPL   - GENERALIZED APPLICATION NAME.(DELETED) 88185
.*             &VAPPL   - ASSOCIATED VTAM APPLICATION NAME.
.*             &ROUT    - ROUTINE TO PROCESS THE COMMAND.
.*             &TEXT    - COMMAND ENTERED FROM TERMINAL.
.*             &FLAG    - COMMAND FLAG BYTE.
.*             &TYPE    - APPLICATION GROUP FLAG (TSO/CICS/WYL/EXH/OTH)
.*  OUTPUT   : AN ENTRY IN NETSOL'S COMMAND ENTRY TABLE IS GENERATED.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : APR  15/81
.*
         LCLA  &L
&L       SETA  K'&TEXT-2                                         88185
&LABEL   DC    CL8'&VAPPL',CL8&TEXT,AL4(&ROUT),AL1(0,&L,&FLAG,&TYPE)
         MEND
         SPACE 1                                                 87193
         MACRO ,                                                 87193
&NM      $CMDN &VAPPL,&ROUT,&TEXT,&FLAG,&TYPE=0                  88185
         GBLC  &LCSTR,&OC                                        88172
&OC      SETC  '&SYSECT'     SAVE OLD CSECT                      88172
&NM      $CMD  &VAPPL,&ROUT,&TEXT,&FLAG,TYPE=&TYPE               88185
NETINTAB CSECT ,                                                 87193
         LOGCHAR APPLID=(APPLICID,&VAPPL),SEQNCE=&TEXT
         LCSTR &TEXT         CONVERT TO LOWER CASE               88185
         AIF   ('&TEXT' EQ '&LCSTR').NOTUP                       88185
         LOGCHAR APPLID=(APPLICID,&VAPPL),SEQNCE=&LCSTR          87193
.NOTUP   ANOP  ,                                                 87287
&OC      CSECT ,             RESTORE OLD CSECT                   88172
         MEND  ,                                                 87193
         SPACE 1                                                 87193
         MACRO
&LABEL   $GP   &GPLEN,&ERRTEXT,&GPFLAG
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S GETPARM OPTION LIST.
.*
.*  INPUT    : &GPLEN   - MAXIMUM LENGTH OF PARAMETER.
.*             &ERRTEXT - TEXT FOR ERROR MSG FROM GETPARM ROUTINE.
.*             &GPFLAG  - OPTION BYTE FOR GETPARM.
.*
.*  OUTPUT   : A PARAMETER OPTION LIST
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : JUNE 19/81
.*
         LCLA  &L
&L       SETA  K'&ERRTEXT-2
&LABEL   DC    AL2(&GPLEN,&L),AL1(&GPFLAG),CL&L&ERRTEXT
         MEND
         SPACE 1                                                 84142
         MACRO ,                                                 84142
&NM      LOGO  &SBA=(12,19),&ML=                                 88220
         GBLC  &LOCAL                                            92222
         GBLA  &MDL70                                            88206
         LCLA  &W                                                88206
&W       SETA  40+(&MDL70/5)*52                                  88206
&NM      DC    CL39'                                        '    88220
         DC    CL&W'                                        '    84163
         AIF   ('&ML' EQ '').NOTIM                               88220
&ML      EQU   *-15,15,C'C'  TIME STAMP                          88220
.NOTIM   DC    CL40'                                        '    84163
         DC    CL&W'                                        '    84163
         AIF   ('&LOCAL' EQ 'DTS').DODIAL                        92222
         DC    CL40'   PPPPPPPPPPP     IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DD                                      '    92222
         DC    CL40'   PPPPPPPPPPPP    IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DDD          IIIIII NN   NN   CCCCC     '    92222
         DC    CL40'   PP        PP        II        DD     '    92222
         DC    CL&W'  DD           II   NNN  NN  CC   CC    '    92222
         DC    CL40'   PP        PP        II        DD     '    92222
         DC    CL&W'   DD          II   NNNN NN  CC         '    92222
         DC    CL40'   PPPPPPPPPPPP        II        DD     '    92222
         DC    CL&W'   DD          II   NN NNNN  CC         '    92222
         DC    CL40'   PPPPPPPPPPP         II        DD     '    92222
         DC    CL&W'   DD          II   NN  NNN  CC   CC    '    92222
         DC    CL40'   PP                  II        DD     '    92222
         DC    CL&W'  DD         IIIIII NN   NN   CCCCC     '    92222
         DC    CL40'   PP              IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DDD                                     '    92222
         DC    CL40'   PP              IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DD                                      '    92222
         $SBA  &SBA                                              92222
         $SFE  ATTR=SKIP,COL=TURQ                                92222
         DC    C'Public Interest Data, Inc.'                     92222
         AGO   .COMOUT                                           92222
.DODIAL  DC    CL40'    DDDDDD   IIII     A     LL          '    84163
         DC    CL&W'   TTTTTTTT YY   YY M     M EEEEEEE     '    84163
         DC    CL40'    DD   DD   II     AAA    LL          '    84163
         DC    CL&W'      TT    YY   YY MM   MM EE          '    84163
         DC    CL40'    DD   DD   II    AA AA   LL          '    84163
         DC    CL&W'      TT    YY   YY MMM MMM EE          '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL          '    84163
         DC    CL&W'      TT     YY YY  MMMMMMM EEEEE       '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL      ===='    84163
         DC    CL&W'===   TT      YYY   MM M MM EE          '    84163
         DC    CL40'    DD   DD   II   AAAAAAA  LL          '    84163
         DC    CL&W'      TT      YY    MM   MM EE          '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL          '    84163
         DC    CL&W'      TT      YY    MM   MM EE          '    84163
         DC    CL40'    DDDDDD   IIII  AA   AA  LLLLLLL     '    84163
         DC    CL&W'      TT      YY    MM   MM EEEEEEE     '    84163
         $SBA  &SBA                                              84142
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'Consumers Computer Services, Inc.'              84142
.COMOUT  MEND  ,                                                 84142
         SPACE 1                                                 86065
         MACRO ,                                                 86065
&NM      CLOGO ,                                                 86065
         GBLA  &MDL70                                            88206
         LCLA  &W                                                88206
&W       SETA  40+(&MDL70/5)*52                                  88206
&NM      DC    CL40'  CCCCC   LL       OOOOO    SSSSS   EEEE'    86065
         DC    CL&W'EEE DDDDDD    **                        '    86065
         DC    CL40' CC   CC  LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO  SS       EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO   SSSSS   EEEE'    86065
         DC    CL&W'E   DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO       SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC   CC  LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD                             '    86065
         DC    CL40'  CCCCC   LLLLLLL  OOOOO    SSSSS   EEEE'    86065
         DC    CL&W'EEE DDDDDD    **                        '    86065
         MEND  ,                                                 86065
         SPACE 1                                                 88192
         MACRO                                                   88192
&LABEL   $MSG  &TEXT,&TYPE=,&WCC=ALARM,&COL=RED,&ML=             88206
         GBLC  &@DEV@                                            88192
         GBLA  &MDL70                                            88220
         LCLC  &LE                                               88206
         LCLA  &L,&W                                             88192
&W       SETA  80+(&MDL70/5)*52                                  88220
&L       SETA  K'&TEXT-3                                         88192
&LE      SETC  '&LABEL'(1,3).'END'.'&LABEL'(7,2)                 88206
         AIF   ('&TYPE' EQ '').KEEP                              88192
&@DEV@   SETC  '&TYPE'                                           88192
.KEEP    AIF   ('&@DEV@' EQ '3767').DO67                         88192
         AIF   ('&@DEV@' EQ '3270').DO70                         88206
         AIF   ('&@DEV@' EQ '327E').DO7E                         88206
         AIF   ('&@DEV@' EQ 'CON').DOCON                         88192
         AIF   ('&@DEV@' EQ 'SYN').DOSYN                         88192
         MNOTE 4,'TYPE= REQUIRED'                                88192
.DO67    AIF   ('&ML' NE '').DO67L                               88206
&LABEL   DC    AL2(2+&L+2+2+8),X'0D25',&TEXT,X'0D25',C'Enter ? ' 88192
         MEXIT ,                                                 88192
.DO67L   ANOP  ,                                                 88206
&LABEL   DC    AL2(2+&L+2+2+8),X'0D25'                           88206
&ML      DC    &TEXT,X'0D25',C'Enter ? '                         88206
         MEXIT ,                                                 88192
.DOCON   AIF   ('&ML' NE '').DOCONL                              88206
&LABEL   DC    AL2(&L+2),&TEXT                                   88192
         MEXIT ,                                                 88192
.DOCONL  ANOP  ,                                                 88192
&LABEL   DC    AL2(&L+2)                                         88206
&ML      DC    &TEXT                                             88206
         MEXIT ,                                                 88192
.DOSYN   AIF   ('&ML' NE '').DOSYNL                              88206
&LABEL   DC    AL2(&L),&TEXT                                     88192
         MEXIT ,                                                 88206
.DOSYNL  ANOP  ,                                                 88206
&LABEL   DC    AL2(&L)                                           88206
&ML      DC    &TEXT                                             88206
         MEXIT ,                                                 88206
.DO70    ANOP  ,                                                 88206
&LABEL   DC    YL2(&LE-*)                                        88206
         $IO   WRITE                                             88206
         $WCC  (&WCC,RESETKBD,MDT)                               88206
         $SBA  (23,1)             CLEAR                          88206
         $EUA  (23,1)               OLD                          88206
         $IC   ,                      INPUT BUFFER               88206
         $SBA  (24,16)                                           88206
         $SF   (HI,PROT)                                         88206
&ML      DC    &TEXT                                             88206
         $RA   (24,&W,X'00')      CLEAR REST OF MSG BUFFER       88206
&LE      EQU   *                                                 88206
         MEXIT ,                                                 88206
.DO7E    ANOP  ,                                                 88206
&LABEL   DC    YL2(&LE-*)                                        88206
         $IO   WRITE                                             88206
         $WCC  (&WCC,RESETKBD,MDT)                               88206
         $SBA  (23,1)             CLEAR                          88206
         $EUA  (23,1)               OLD                          88206
         $IC   ,                      INPUT BUFFER               88206
         $SBA  (24,12)                                           88206
         $SFE  ATTR=PROT,COL=&COL                                88206
&ML      DC    &TEXT                                             88206
         $RA   (24,&W,X'00')      CLEAR REST OF MSG BUFFER       88206
&LE      EQU   *                                                 88206
.MEND    MEND                                                    88192
         SPACE 1                                                 88207
         MACRO ,                                                 88207
&NM      CHELP &R=17,&C=59,&COLOR=YELLOW                         88207
         GBLC  &@DEV@        PASSED THROUGH                      88207
         LCLA  &I                                                88207
         $SBA  (&R,&C)                                           88207
&I       SETA  &R+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'*------------------*'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|                  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|  For assistance  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|    type HELP     |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|                  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'*------------------*'                           88207
         MEND  ,                                                 88207
         SPACE 1                                                 88220
         MACRO ,                                                 88220
&NM      $SCRN &N,&TYPE=,&IO=ERASE/WRITE                         88220
         GBLC  &@DEV@                                            88220
         GBLA  &MDL70                                            88220
         LCLA  &W                                                88220
         LCLC  &P                                                88220
&P       SETC  '&NM'(1,3)                                        88220
&W       SETA  80+(&MDL70/5)*52                                  88220
         AIF   ('&TYPE' EQ '').NOGTYP                            88220
&@DEV@   SETC  '&TYPE'                                           88220
.NOGTYP  ANOP  ,                                                 88220
&P.MSG&N DC    YL2(&P.END&N-*)                                   88220
         $IO   &IO           ERASE/WRITE OR ERASE/WRITE-ALT      88220
         $WCC  (RESETKBD,MDT)                                    88220
         $SBA  (1,1)              ADDRESS 1ST BYTE ON SCREEN     88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
&P.NSN&N LOGO  ML=&P.TIM&N   EXPAND THE LOGO                     88220
         $SBA  (12,&W)                                           88220
         $SFE  ATTR=(HI,SKIP),COL=PINK XHL=UNDER                 88220
&P.MUS&N DC    CL58' '       MESSAGE TO THE USER                 88220
         $SBA  (12,61)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  System: ' IDENTIFY THE RUNNING SYSTEM         88220
         $SBA  (12,71)                                           88220
         $SFE  ATTR=PROT,COL=TURQ                                88220
&P.SID&N DC    CL8' '        SMCA ID                             88220
         $SBA  (13,61)                                           88220
         $SFE  ATTR=SKIP,COL=RED                                 88220
         DC    C'Terminal: '      TELL USER THE NODE NAME        88220
         $SBA  (13,71)                                           88220
         $SFE  ATTR=PROT,COL=PINK,XHL=UNDER                      88220
&P.TID&N DC    CL13' '            TERM NAME                      88220
         $SBA  (14,1)             DEFINE END OF FIELD TO RESET BLINKING
         $SFE  ATTR=SKIP                                         88220
         AIF   ('&N' EQ '20').SCRN20                             88220
         AIF   ('&N' EQ '13').SCRN13                             88220
         SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        PF KEY SELECTION MENU - SCREEN 12                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88220
         $SBA  (15,6)                                            88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C'PFK  APPL          ENTER         EXIT'          88220
         $SBA  (17,6)                                            88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         DC    C'  1  TSO           LOGON         LOGOFF'        88220
         $SBA  (18,6)                                            88220
         $SFE  ATTR=SKIP,COL=PINK                                88220
         DC    C'  2  CICS          CICS          CSSF LOGOFF'   88220
         $SBA  (19,6)                                            88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'  3  SuperWYLBUR   SWYL          LOGOFF     '   88220
         $SBA  (20,6)                                            88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  4  WYLBUR        WYLBUR        LOGOFF'        88220
         $SBA  (21,6)                                            88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C'  5  EXHIBIT       EXH           LOGOFF'        88220
         AGO   .SCRNIN                                           88220
.SCRN13  SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        'CENTER CLOSED' MESSAGE - SCREEN 13                          *
*                                                                     *
***********************************************************************
         $SBA  (15,1)                                            88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         CLOGO ,             AND THE NASTY MESSAGE               88220
.SCRNIN  $SBA  (22,&W)                                           88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
         $IC   ,                                                 88220
         AGO   .SCRNEND                                          88220
.SCRN20  SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        USER ID / PASSWORD / ACCOUNT SOLICITATION - SCREEN 20        *
*                                                                     *
***********************************************************************
         $SBA  (15,1)                                            88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'> > > > > > > > > > > >'                        88220
         $SFE  ATTR=SKIP,COL=WHITE                               88220
         DC    C'VTAM'                                           88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         DC    C'Sign-on'                                        88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'< < < < < < < < < < < <'                        88220
         $SBA  (17,11)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C' User-Id'                                       88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
         $IC   ,                                                 88220
         $SBA  (17,29)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         $SBA  (18,11)                                           88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'Password'                                       88220
         $SF   (UNPROT,NONDISP)                                  88220
         $SBA  (18,29)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         $SBA  (20,11)                                           88220
         $SFE  ATTR=SKIP,COL=PINK                                88220
         DC    C' Account'                                       88220
         $SFE  ATTR=UNPROT,COL=YELLOW                            88220
         $SBA  (20,29)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE      WAS =PROT                 88252
         DC    C' (optional - specify to set'                    88220
         $SBA  (21,29)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  global TSO/WYLBUR logon)'                     88220
         $SBA  (22,&W)                                           88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
.SCRNEND $SBA  (24,1)        DEFINE END OF INPUT FIELD           88220
         $SFE  ATTR=PROT,COL=YELLOW  END OF INPUT FIELD          88220
         $SBA  (24,17)                                           88220
         DC    C'Please issue LOGOFF when you are finished'      88220
         CHELP ,             ADD HELP PROMPT                     88220
&P.END&N EQU   *                                                 88220
&P.SIZ&N EQU   &P.END&N-&P.MSG&N                                 88220
         MEND  ,                                                 88220
         SPACE 1
         COPY $3270INT
         SPACE 1
         COPY  OPTIONGB                                          84141
         SPACE 1                                                 84141
         SYSPARM LIST=YES                                        84141
         AIF   ('&LOCAL' NE 'CCSI').TEMPFIX  *****TEMP FIX*****  92320
&LOCAL   SETC  'PID'                         *****TEMP FIX*****  92320
.TEMPFIX ANOP  ,                             *****TEMP FIX*****  92320
         EJECT ,                                                 86012
***********************************************************************
*                                                                     *
*                  *****************                                  *
*                                                                     *
*                    N E T W O R K                                    *
*                                                                     *
*                  S O L I C I T O R                                  *
*                                                                     *
*                   ( N E T S O L )                                   *
*                                                                     *
*                                                                     *
*  ENTRY PARAMETERS:  R15  -  ENTRY POINT ADDRESS                     *
*                     R13  -  CALLER'S SAVE AREA (FROM ATTACH)        *
*                     R14  -  RETURN ADDRESS (POINTS TO SVC 3 IN CASE *
*                             OF ATTACH BY NET)                       *
*                     R0-R12  NOT USED                                *
*                                                                     *
*  EXIT PARAMETERS:   R0-R14  SAME AS ENTRY TO NETSOL                 *
*                     R15     ZERO                                    *
*                                                                     *
*  FUNCTION:  NETSOL IS USED TO HANDLE TERMINAL INITIATED LOGONS      *
*             AND AS SUCH SOLICITS LOGON DATA FROM THE TERMINALS      *
*             UNDER ITS CONTROL.                                      *
*                                                                     *
*             WITH THE ABOVE DATA, NETSOL CAN PASS CONTROL OF THE     *
*             LOGICAL UNIT FROM NETSOL'S CONTROL TO THAT OF THE       *
*             REQUESTED APPLICATION.                                  *
*                                                                     *
*             TO FACILITATE ENDUSER EASE OF USE, NETSOL HAS A TABLE   *
*             OF APPLICATIONS THAT USE NON-STANDARD LOGMODE TABLE     *
*             ENTRIES. WHEN THE USER REQUESTS ONE OF THESE            *
*             APPLICATIONS, NETSOL LOADS THE APPROPRIATE LOGMODE      *
*             NAME FROM THE TABLE AND PASSES THIS INFORMATION         *
*             TO THE APPLICATION DURING THE CLSDST(PASS). THE ENDUSER *
*             IS NOT REQUIRED TO KNOW ABOUT LOGMODE TABLES. THE       *
*             NAME OF THIS TABLE IS 'LOGMDTAB'.                       *
*                                                                     *
*             THE 'LOGOFF' COMMAND HAS BEEN ADDED TO NETSOL TO ALLOW  *
*             8100-ATTACHED TERMINALS TO DISCONNECT FROM NETSOL. 8100 *
*             TERMINALS ARE GENNED WITH A NULL 'LOGAPPL'. LOGOFF     .*
*             ENTERED AT A STANDARD 3270 TERMINAL, WILL HAVE NO       *
*             EFFECT SINCE LOGAPPL=NETSOL FOR THESE TERMINALS.        *
*                                                                     *
*             ERROR MESSAGES CAN BE ISSUED AT VARIOUS STAGES OF THIS  *
*             PROCESS IF THE APPLICATION IS INACTIVE, LOGON DATA      *
*             ENTERED IS INVALID, APPLICATION WON'T ACCEPT LOGONS,ETC.*
*             ALL ERROR MESSAGES ISSUED BY NETSOL ARE PREFIXED WITH   *
*             THE CHARACTER STRING 'BCSC'.                            *
*                                                                     *
*             TO AID IN DEBUGGING, NETSOL ALSO WRITES SOME MESSAGES   *
*             TO THE OPERATORS CONSOLE WHEN ERRORS AE DETECTED AS A   *
*             RESULT OF I/O ERRORS, INVALID LOGONS, ETC.              *
*                                                                     *
*             NETSOL SUPPORTS BISYNC AND SDLC 3270 DEVICES (3275,     *
*             3276, 3277, 3278, 3279 AND COMPATIBLES). ADDITIONAL     *
*             CODE WAS ADDED FOR TERMINALS (TTY, ETC.) RUNNING UNDER  *
*             THE NUTTY TERMINAL OPTION (NTO) AS IBM 3767 TYPES.      *
*                                                                     *
*             NETSOL USES RECORD MODE I/O TO TALK TO ITS TERMINALS    *
*             SO IT DOES NOT SUPPORT ANY TERMINALS THAT CAN BE        *
*             ACCESSED VIA BASIC MODE I/O ONLY.                       *
*                                                                     *
*             TO AID IN CONTROLLING THE TERMINALS LOGGED ON TO        *
*             NETSOL, NETSOL MAINTAINS A TERMINAL TABLE WHICH HAS     *
*             AN ENTRY FOR EACH TERMINAL THAT HAS BEEN LOGGED ON      *
*             AT ANY TIME SINCE NETSOL WAS FIRST BROUGHT UP. THESE    *
*             TERMINAL TABLE ENTRIES (TTE'S) ARE USED TO PROVIDE      *
*             A MEANS OF TRANSLATING A GIVEN CID TO THE LU NAME AND   *
*             WHEN THE RELEASE-REQUEUE (RELREQ) EXIT NEEDS TO KNOW    *
*             THE STATUS OF A GIVEN TERMINAL (I.E., IS IT TRYING TO   *
*             DO A LOGON). THE TTE HAS BEEN EXTENDED TO PRESERVE OTHER*
*             INFORMATION (AUTHORIZATION, ETC.).                      *
*                                                                     *
*             CODE WAS ADDED TO PROVIDE A HELP SCREEN, A NEWS SCREEN, *
*             AND MEANS OF PROVIDING ACCESS CONTROL (LOCK FOR SYSTEMS *
*             MAINTENANCE; GLOBAL LOGON CONTROL).                     *
*                                                                     *
*             MOST OF NETSOL'S FUNCTIONS ARE PERFORMED IN VARIOUS     *
*             EXITS AS FOLLOWS:                                       *
*                                                                     *
*             1) TPEND EXIT        - HANDLE 'Z NET' FUNCTION          *
*                                    WHERE NETSOL IS TO SHUT DOWN.    *
*                                                                     *
*             2) LOGON EXIT        - HANDLES TERMINALS BEING LOGGED   *
*                                    ON TO NETSOL. BUILDS OR UPDATES  *
*                                    TTE, DOES OPNDST(ACCEPT), AND    *
*                                    SENDS THE FORMATTED LOGON SCREEN *
*                                    TO THE TERMINAL.                 *
*                                                                     *
*             3) LOSTERM EXIT      - HANDLE 'LOST TERMINAL' CONDITIONS*
*                                    DUE TO LU/PU/LINK/NCP FAILURES.  *
*                                    DEPENDING ON THE CONDITION, MAY  *
*                                    ATTEMPT TO RECOVER THE TERMINAL. *
*                                                                     *
*             4) RELREQ EXIT       - HANDLE RELEASE-REQUEUE REQUESTS  *
*                                    WHERE ANOTHER VTAM APPLICATION   *
*                                    WANTS THE TERMINAL OWNED BY      *
*                                    NETSOL. UNLESS A LOGON IS TAKING *
*                                    PLACE, NETSOL RELEASES THE LU.   *
*                                                                     *
*             AS WELL, A NUMBER OF RPL EXITS ARE USED TO HANDLE       *
*             RPL COMMANDS THAT ARE DONE ASYNCHRONOUSLY VIA RPLS      *
*             THAT ARE GETMAINED WHEN NEEDED. THESE EXITS ARE:        *
*                                                                     *
*             1) OPNDST END EXIT   - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    OPDNST TO A SPECIFIC TERMINAL    *
*                                    COMPLETES.                       *
*                                                                     *
*             2) RECEIVE END EXIT  - ENTERED WHEN A RECEIVE(ANY) RPL  *
*                                    IS POSTED COMPLETE. EXAMINES THE *
*                                    DATA ENTERED FOR A LOGON REQUEST *
*                                    FROM THE TERMINAL USER.          *
*                                                                     *
*             3) END OF SEND EXIT  - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    SEND TO THE TERMINAL COMPLETES.  *
*                                                                     *
*             4) CLSDST(PASS) END  - ENTERED WHEN THE CLSDST(PASS)    *
*                                    COMPLETES THAT PASSES CONTROL    *
*                                    TO THE APPLICATION REQUESTED.    *
*                                    NETSOL RE-ISSUES SIMLOGON TO     *
*                                    GAIN CONTROL BACK WHEN USER      *
*                                    LOGS OFF THE APPLICATION         *
*                                                                     *
*             5) CLSDST(RELEASE)   - ENTERED WHEN CLSDST(RELEASE)     *
*                                    COMPLETES. DONE DUE TO RELREQ    *
*                                    REQUEST OR I/O ERRORS.           *
*                                                                     *
*             AS WELL, NETSOL MAKES USE OF A NUMBER OF SUBROUTINES    *
*             AS FOLLOWS:                                             *
*                                                                     *
*             1) GETRPL            - OBTAIN DYNAMIC RPLS VIA A        *
*                                    GETMAIN FROM SUBPOOL 1           *
*                                                                     *
*             2) FREERPL           - FREEMAIN DYNAMIC RPLS            *
*                                                                     *
*             3) RECSUB            - ISSUE RECEIVE ANY'S              *
*                                                                     *
*             4) ERROR EXIT        - HANDLES ERRORS WHEN A CHECK      *
*                                    MACRO IS USED ON AN ASYNC RPL    *
*                                    OR A SYNC RPL COMPLETES. PASSES  *
*                                    BACK RETURN CODES AND A MODIFIER *
*                                    (USUALLY ERROR MESSAGE NUMBER)   *
*                                    TO CODE AFTER THE INSTRUCTION    *
*                                    THAT MADE THE MACRO CALL         *
*                                                                     *
*                                                                     *
*  REGISTER USAGE:                                                    *
*                                                                     *
*         R0  - ERROR MESSAGE NUMBER, PARAMETERS, SVCS, ETC           *
*         R1  - PARAMETERS TO MACROS, SVCS                            *
*         R2  - WORK                                                  *
*         R3  - -> TTE IN MOST CASES / WORK                           *
*         R4  - WORK                                                  *
*         R5  - -> DYNAMIC RPL / SYNCHRONOUS RPL                      *
*         R6  - WORK                                                  *
*         R7  - WORK  (ADDRESS OF ERROR SOMETIMES ON BAL R7,SNOCCUR)  *
*         R8  - -> ASYNCHRONOUS / SYNCHRONOUS NIB                     *
*         R9  - -> DDT WHEN DOING DEVICE DEP WORK / WORK              *
*         R10 - BASE REGISTER 3                                       *
*         R11 - BASE REGISTER 2                                       *
*         R12 - BASE REGISTER 1                                       *
*         R13 - ADDRESS OF SAVE AREA (USUALLY IN DYNAMIC RPL)         *
*         R14 - RETURN ADDRESS                                        *
*         R15 - ENTRY POINT, RETURN CODES                             *
*                                                                     *
*                                                                     *
*  ATTRIBUTES: SERIALLY REUSABLE , NON-AUTHORIZED, VTAM APPLICATION   *
*                                                                     *
*  CONTROL BLOCK DEPENDENCIES: RPL, ACB, NIB, EXIT PARAMETER LISTS    *
*                                                                     *
*  ROUTINES CALLED: NONE                                              *
*                                                                     *
*  ********* MACROS USED: DCLSW, GOIF, SET, RESET, EXECUTE            *
*                                                                     *
*  SYSTEM MACROS USED: SAVE, GETMAIN, FREEMAIN, STIMER, OPEN,         *
*                      WAIT, WTO, CLOSE, ABEND, POST, CHECK           *
*                                                                     *
*  VTAM MACROS USED:  SETLOGON, OPNDST, INTRPRET, INQUIRE,            *
*                     GENCB, CLSDST, SIMLOGON, SEND, RECEIVE          *
*                                                                     *
*  MESSAGES TO TERMINAL USER:                                         *
*                                                                     *
*             LOGON SCREEN WITH BCSC LOGO.                            *
*                                        ENTERED BY THE TERMINAL USER)*
*                                                                     *
*             BCSC101          LOGMODE ENTRY UNDEFINED                *
*                                                                     *
*             BCSC102 INVALID LOGON SEQUENCE , REENTER                *
*                                                                     *
*             BCSC103 NO INTERPRET TABLE SPECIFIED FOR LU             *
*                                                                     *
*             BCSC104 NO INTERPRET ROUTINE TO RECOGNIZE APPLICATION   *
*                                                                     *
*             BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION          *
*                                                                     *
*             BCSC106 LOGON IN PROGRESS                               *
*                                                                     *
*             BCSC107 XXXXXXXX NOT DEFINED TO VTAM                    *
*                                                                     *
*             BCSC108 XXXXXXXX IS NOT AVAILABLE (LOGMODE INVALID?)    *
*                                                                     *
*             BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS             *
*                                                                     *
*             BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS                 *
*                                                                     *
*             BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS       *
*                                                                     *
*                                                                     *
*  MESSAGES TO THE SYSTEM OPERATOR:                                   *
*                                                                     *
*             BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL       *
*                     DUE TO I/O ERROR                                *
*                                                                     *
*             BCSC002 RC=42 ON NETSOL CLOSE ACB                       *
*                                                                     *
*             BCSC003 SYNAD/LERAD EXIT REQ=**,FBDK2=**,SSENSEI=**,    *
*                     SSENSMI=**,SENSE=****,TERM=********             *
*                                                                     *
*             BCSC004 LOSTERM ENTRY CODE ** FOR TERM=********         *
*                                                                     *
*             BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST    *
*                                                                     *
*             BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS    *
*                     PROGRAM IS TERMINATED.                          *
*                                                                     *
*             BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT       *
*                                                                     *
*  USER ABEND CODES:  U0001 - PROBLEM WITH OPEN OF THE ACB            *
*                     U0002 - SETLOGON FAILED                         *
*                     U0004 - RETURN CODE/SENSE CODE NOT EXPECTED     *
*                     U0008 - PROBLEM WITH THE TERMINAL TABLE (TTE)   *
*                                                                     *
*                                                                     *
*  RESTRICTIONS:                                                      *
*                                                                     *
*        1) THE TERMINAL TABLE ONLY HAS ROOM FOR 1024 TERMINALS,      *
*           IF MORE ARE NEEDED, THE CONSTANT 'TERMLTAB' WILL HAVE TO  *
*           BE CHANGED WITH A ZAP OR BY RE-ASSEMBLY OF NETSOL.        *
*                                                                     *
*        2) ONLY RECORD MODE DEVICES ARE CURRENTLY SUPPORTED.         *
*                                                                     *
*        3) DEVICE SUPPORT IS RESTRICTED TO 3270 DATASTREAMS AND      *
*           NTO (IBM 3767) TYPES.                                     *
*                                                                     *
*        4) ANY FIELDS IN THE RPL WORK AREA THAT NEED TO BE ZERO      *
*           INITIALLY SHOULD BE PLACED AHEAD OF THE I/O AREAS AS      *
*           THESE ARE NOT INITIALIZED. IF THE AMOUNT TO BE            *
*           INITIALIZED EXCEEDS 256 BYTES, THE INITIALIZATION AND     *
*           COPY CODE IN GETRPL AND ERREXIT WILL HAVE TO BE CHANGED.  *
*                                                                     *
*        5) NETSOL ASSUMES THAT IT CAN ONLY HAVE ITS LOSTERM EXIT     *
*           ENTERED FOR TERMINALS WHOSE CID'S CAN BE FOUND IN THE     *
*           TERMINAL TABLE. A U0008 ABEND WILL OCCUR IF NOT FOUND.    *
*                                                                     *
*        6) NETSOL OBTAINS THE SYSTEM ID FOR CHANGING '***OLT**'      *
*           APPLICATION IDS USING SVC 253. IF THIS FUNCTION CHANGES,  *
*           NETSOL WILL NEED REVISION.     ???? BCSC GOODIE ????      *
*                                                                     *
*        7) BE CAREFUL OF CHANGING CODE THAT SETS BRACKET STATES AS   *
*           YOU MAY CAUSE ERRORS ON THE 3276 (MUST SEND BCSC106 WITH  *
*           AND END BRACKET BECAUSE IF THE CLSDST(PASS) FAILS AND WE  *
*           SEND AN ERROR MESSAGE (BCSC108) TO THE 3276, GET A X'0404'*
*           WITH A SENSE OF '081B' INDICATING BAD STATE).             *
*                                                                     *
*                                                                     *
*  VERSION:  *********  NETSOL   DC18202                              *
*                                                                     *
*  LAST UPDATE: FEB 27, 1979
*        MINOR FIXES AND CHANGES, 522 ABEND PREVENTION, ETC.     85234
*          BY G. POSTPISCHIL, EXPERT SYSTEM PROGRAMMING, INC.    85234
*        SNA AND NTO SUPPORT; MODULE MERGED WITH INTERPRET TABLE 87193
*        SUPPORT FOR GLOBAL LOGON AND REQUIRED NETSOL LOGON PRIOR TO
*        APPLICATION CONNECTION. NEWS AND HELP SCREENS ADDED.    88179
*        MODEL 5, AND USER SPECIFIABLE LOGMODE SUPPORT ADDED     88206
*        522 ABEND CODE CHANGED TO RUN UNDER SUBTASK IN ORDER TO FREE
*          STIMER FOR LOGON DELAY TO PREVENT VTAM GOING CPU BOUND AT
*          SYSTEM START-UP TIME.                                 89261
*                                                                     *
*                                                                     *
*        F O R   F U R T H E R   I N F O R M A T I O N   O N          *
*          T H I S   P R O D U C T   S E E   T H E                    *
*              N E T S O L   D O C U M E N T A T I O N                *
*                                                                     *
*   PROGRAM OBTAINED FROM THE CONNECTICUT BANK & TRUST TAPE, FILE 19  *
***********************************************************************
         TITLE '*********  N E T S O L  -  MAINLINE'
NETINTAB INTAB ,             INTEGRATED INTERPRET TABLE          87193
NETINLOG CSECT ,             IMMEDIATELY FOLLOWED BY LOGON CODE  90126
NETSOL70 CSECT ,
         ENTRY NETSOL        SOLICITOR ENTRY POINT               87193
         SPACE 1
***********************************************************************
*        NETSOL MAIN-LINE CODE INITIALIZATION                         *
*        REQUIRES OS/VS2 MVS RELEASE 3.7 + ACF/VTAM (SU 35+40)        *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR                                           85234
NETSOL   B     STM-NETSOL(0,R15)  JUMP OVER APPL NAME            87193
NSNAME   DC    AL1(8),CL8'NETSOL70'    LOGON APPLID NAME FOR NETSOL
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'//&SYSTIME/'        ASSEMBLY TIME
STM      STM   14,12,12(13)            SAVE REGISTERS
         LR    R12,R15                 LOAD 1ST BASE REGISTER
         USING NETSOL,R12,R11,R10      TELL ASSEMBLER
         LM    R10,R11,RESTBASE        REST OF BASES
         ST    R13,MAINSAVE+4          CHAIN SAVE AREAS
         LR    R15,R13
         LA    R13,MAINSAVE            POINT R13 TO NS SAVE AREA
         ST    R13,8(,R15)             FORWARD SAVE AREA CHAIN
         LA    R9,0(,R1)     CLEAN THE PARM LIST POINTER         86065
         LTR   R9,R9         ANY PARM ?                          86065
         BZ    NOPARM                                            86065
         ICM   R9,15,0(R9)   ANY PARM ?                          86065
         BZ    NOPARM        NO                                  86065
         SLR   R8,R8                                             86065
         ICM   R8,3,0(R9)    TEST PARM LENGTH                    86065
         BNP   NOPARM                                            86065
         OI    UFLAGS,UFGSYS  ***TEMP***                         86065
NOPARM   EXTRACT COMMAD,FIELDS=(TIOT)  GET THE TIOT              88185
         L     R15,COMMAD    GET THE TIOT                        88185
         CLC   NSNAME+1(6),0(R15)  JOB(STC)NAME/PREFIX SAME ?    88185
         BNE   GETCOMM       NO                                  88185
         MVC   NSNAME+1(8),0(R15)  USE FULL JOBNAME AS APPLID    88185
GETCOMM  EXTRACT COMMAD,FIELDS=(COMM)  GET CSCB POINTER          86065
         L     R15,COMMAD    GET ECB POINTER                     86065
         MVC   WAITECBS(4),0(R15)  SAVE COMM. ECB ADDRESS        86065
         LA    R0,4(,R15)    POINT TO CIB ADDRESS FIELD          86065
         QEDIT ORIGIN=(0),CIBCTR=2  ALLOW ONE MODIFY AT A TIME   86065
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                 88186
         BXH   R15,R15,NOTAUTH   NO                              88186
         SLR   R1,R1         CLEAR ECB ADDRESS                   88186
         SYSEVENT TRANSWAP   DO "DONTSWAP" THE ELEGANT WAY       88186
         BXLE  R15,R15,NOTAUTH  SKIP IF IT WORKED, ELSE          88186
         WTO   'BCSC195 SYSEVENT TRANSWAP FAILED',ROUTCDE=11     88186
         SLR   R1,R1                                             88186
         SYSEVENT DONTSWAP   TRY A NORMAL DONTSWAP               88186
         BXLE  R15,R15,NOTAUTH SKIP IF IT WORKED, ELSE           88186
         WTO   'BCSC195 SYSEVENT DONTSWAP FAILED'                88186
NOTAUTH  ICM   R0,15,A522TCB  RECURSION ?                        89264
         BNZ   NOTAGAIN      YES                                 89264
         IDENTIFY EPLOC=A522NAME,ENTRY=A522ER                    89261
         ATTACH EPLOC=A522NAME,ECB=A522DONE                      89261
         ST    R1,A522TCB       SAVE TCB ADDR FOR DETACH         89261
NOTAGAIN DS    0H                                                89264
         SPACE 1
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
*        SPACE 1
***********************************************************************
*        OBTAIN SPACE FROM SUBPOOL 2 FOR THE TERMINAL TABLE. THIS     *
*        TABLE IS USED TO MAINTAIN THE TERMINAL NAME, CID, AND LOGON  *
*        STATUS FOR ALL TERMINALS CONNECTED TO NETSOL. BY USING THIS  *
*        TABLE AND PROVIDING ENTRY ADDRESS IN THE RPL USER FIELD, WE  *
*        SAVE ON HAVING TO DO CID TRANSLATES FOR NAMES.               *
***********************************************************************
GETTAB   L     R0,TERMLTAB             GET LENGTH FOR GETMAIN
         ICM   R0,8,=X'02'             ADD SUBPOOL=2 TO IT
         GETMAIN R,LV=(0)              GET SPACE FOR TABLE
         ST    R1,TERMTABS             SAVE STARTING ADDRESS
         A     R1,TERMLTAB             COMPUTE END ADDRESS
         ST    R1,TERMTEND             SAVE IT TOO
         S     R1,RANGEEND-4                                     88185
         ST    R1,RANGEEND   SET END OF HIGH RANGE               88185
         XC    TERMTABE,TERMTABE  RESTART TERMINAL LIST          87137
         XC    CONSRPL,CONSRPL  CLEAR CONSOLE RPL ADDRESS        88192
         SPACE 1
RTRYOPEN DS    0H
         SLR   R15,R15                 CLEAR RETURN-CODE REGISTER
         OPEN  ACB                     CONNECT NETSOL TO VTAM
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR OPEN ERROR.                            *
***********************************************************************
         CLI   ACB+X'31',X'52'         HALT IN PROGRESS ?
         BE    CLSOK                   YES, END THE TASK
         LTR   R15,R15                 SUCCESSFUL OPEN ?
         BZ    OPENOK                  YES, ALLOW LOGONS TO HAPPEN
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'58' WHICH CAN HAPPEN IF     *
*        THE OPERATOR HAS STARTED A SECOND COPY OF NETSOL. IN THIS
*        CASE, TELL THE OPERATOR ABOUT THE MISTAKE AND TERMINATE
*        EXECUTION.                                                   *
***********************************************************************
         CLI   ACB+X'31',X'58'         APPLID ALREADY IN USE?
         BNE   OPENA5A                 NO => CHECK NEXT ERROR
         WTO   MF=(E,LISTWTO6)         LET OPERATOR KNOW
         B     FREETTE                 FREE TTE TABLE AND END
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5A' WHICH CAN HAPPEN IF     *
*        VTAM IS JUST COMING UP AND NETSOL'S APPLID IS NOT YET        *
*        ACTIVE. IF THIS IS THE CASE, ISSUE A STIMER WAIT FOR
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
OPENA5A  CLI   ACB+X'31',X'5A'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5C' WHICH CAN HAPPEN IF     *
*        VTAM IS DOWN. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         CLI   ACB+X'31',X'5C'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'70' WHICH CAN HAPPEN IF     *
*        NETSOL ABENDS AND IS RE-ATTACHED BY VTAM AND VTAM HAS NOT    *
*        YET SUCCESSFULLY FINISHED CLEANUP PROCESSING FOR             *
*        NETSOL'S ACB. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         CLI   ACB+X'31',X'70'         CAN'T OPEN ACB YET ?
         BNE   OPENFAIL                NO, REAL OPEN ERROR
OPENLOOP STIMER WAIT,BINTVL=WAIT1SEC   WAIT 1 SECOND, TRY AGAIN
         B     RTRYOPEN                GO AND RETRY OPERATION
         SPACE 1
OPENOK   L     R7,=A(OPENIDS)                                    86145
         BALR  R6,R7         INITIALIZE VERSION AND PROGRAM IDS  86145
         SPACE 1                                                 86012
***********************************************************************
*        READ THE INITIALIZATION FILE CONTAINING NETSOL COMMANDS      *
*        WHICH ESTABLISH AUTO LOGON,WTO MSG DEFAULTS,ETC.             *
*        AN ASYNC RPL WILL BE USED WHEN PROCESSING THESE INIT CMDS.   *
***********************************************************************
*                                                                87256
*        THIS INSERTION SETS A FLAG TO ENABLE DELAYS IN LOGON EXIT.
*        THIS PERMITS OTHER JOBS TO RUN WHILE NETSOL IS WRITING THE
*        INITIAL SCREENS TO A LARGE NUMBER OF CRTS               87256
*                                                                87256
         OI    UFLAGS,INITDLAY  SET FOR DELAY BETWEEN LOGONS     87256
         SLR   R0,R0                                             89261
         POST  A522CECB,(0)  POST CONTROL ECB                    89261
         BAL   R14,GETRPL              GET RPL FOR INIT CMD USE.
         L     R8,=A(READINIT)                                   88185
         BALR  R14,R8        PROCESS INIT CMDS
         BAL   R14,RECSUB              NOW REUSE RPL FOR RECEIVE
         SPACE 1                                                 90140
*        LOAD THE BUFFER COMPRESSION ROUTINE                     90140
         XC    COMP3270,COMP3270  CLEAR THE ADDRESS              90140
         DELETE EPLOC=NMCOMPR                                    90140
         LOAD  EPLOC=NMCOMPR,ERRET=NOTCMP70                      90140
         ST    R0,COMP3270   SET COMPRESSION ADDRESS             90140
NOTCMP70 DS    0H            BYPASS FOR COMPRESSION              90140
         EJECT
***********************************************************************
*        BEFORE ALLOWING LOGONS TO TAKE PLACE ISSUE 10 RECEIVE ANY'S  *
*        SO WE CAN HANDLE UP TO 10 LOGONS AT A TIME. WHEN THE RECEIVE *
*        EXIT IS SCHEDULED, IT WILL ALSO RE-ISSUE A RECEIVE ANY WITH  *
*        A NEW GOTTEN RPL.                                            *
***********************************************************************
         SPACE 1
         LA    R2,9                    # OF RPLS FOR RECEIVES
GETLOOP  BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE RECEIVE ANY
         BCT   R2,GETLOOP              LOOP TILL TEN DONE
         L     PTRRPL,=A(SETLRPL)  POINT TO RPL FOR WORKAREA     86065
         SPACE 1
***********************************************************************
*        ISSUE SETLOGON WITH START OPTION TO ALLOW LOGONS TO TAKE     *
*        PLACE. ANY LOGONS QUEUED FOR NETSOL WILL NOW DRIVE NETSOL'S  *
*        LOGON EXIT.                                                  *
***********************************************************************
         SPACE 1
SLOGON   SETLOGON RPL=(PTRRPL),        SYNCH OPERATION. ACT-           X
               OPTCD=START             IVATE LOGON EXIT.
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.  IF          *
*   ERREXIT WAS ENTERED, THE VTAM FEEDBACK CODE IN REG 0 WAS          *
*   PLACED IN REG 15 BEFORE RETURNING TO THE MAINLINE NSI.            *
*   ERREXIT DID NOT CHANGE THE RETURN CODES TO ACTION CODES.          *
***********************************************************************
         SPACE 1
         CH    R15,HEX8                NEED TO REISSUE?
         BE    SLOGON                  YES.  DO IT
         LTR   R15,R15                 SETLOGON ACCEPTED ?
         BNZ   SETLFAIL                NO, BRANCH
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*    ALL FURTHER WORK IN NETSOL IS PERFORMED VIA ASYNCHRONOUS EXIT    *
*    ROUTINES. THE MAINLINE CODE WAITS UPON AN ECB WHICH IS POSTED    *
*    BY THE TPEND EXIT WHEN VTAM SHUTS DOWN NETSOL.                   *
*        STIMER ADDED TO PREVENT 522 ABENDS                      85234
***********************************************************************
***********************************************************************
*    ACTION OF NETSOL NOW PROCEEDS BY USE OF EXIT ROUTINES.           *
*    THE FOLLOWING EXITS ARE SCHEDULED IN RESPONSE TO VTAM EVENTS:    *
*                                                                     *
*              TPEND   - VTAM SHUTS DOWN                              *
*              LOGON   - A TERMINAL IS SIMULATED LOGGED ON TO NETSOL, *
*                        OR IS PASSED TO NETSOL BY ANOTHER APPLICATION*
*              LOSTERM - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS DISCONNECTED (DIAL-LINE), OR 'VARY'ED TO  *
*                        ANOTHER APPLICATION                          *
*              RELREQ  - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS REQUESTED BY ANOTHER APPLICATION          *
*                                                                     *
*     RPL EXITS -                                                     *
*                                                                     *
*             READEND  - THE OUTSTANDING READ(ANY) HAS BEEN SATISFIED *
*             SENDEND  - A SEND HAS BEEN POSTED COMPLETE.             *
*             OPENEND  - AN OPNDST HAS COMPLETED.                     *
*             PASSEND  - CLSDST(PASS) HAS COMPLETED FOR A LOGON       *
*                        REQUEST MADE FROM A TERMINAL.                *
*             WRITEND  - END OF WRITE REQUEST.  WRITE WAS DUE         *
*                        TO INVALID LOGON FROM THE TERMINAL.          *
*             CDSTEND1 - CLSDST(RELEASE) COMPLETED.                   *
***********************************************************************
         SPACE 1
WAITLOOP MVI   TIMEECB,0     RESET STIMER ECB                    85235
         TM    UFLAGS,SHUTDOWN+UFGREST  CLOSE OR RESTART ?       86065
         BNZ   WAITDONE      YES; KICK OUT                       86065
*OLD*    STIMER REAL,EXITTIME,BINTVL==A(10*60*100)  WAIT 10 MINS 85234
         WAIT  ECBLIST=WAITECBS  WAIT FOR TIMER OR FINISH        85234
         TM    TIMEECB,X'40' TIMER EXPIRED ?                     85234
         BNZ   WAITTESS      YES                                 85234
         TTIMER CANCEL       ELSE CANCEL IT                      85234
         B     WAITTESX                                          87256
WAITTESS NI    UFLAGS,255-INITDLAY  RESET START-UP DELAY         87256
WAITTESX TM    FINISECB,X'40'  FINISH POSTED ?                   85234
         BNZ   WAITDONE      YES; GO TO FINISH UP                86065
*        IF WE GOT HERE, THE COMMUNICATIONS ECB WAS POSTED.      86065
*                                                                86065
         L     R1,WAITECBS   GET THE CSCB COMM. ECB ADDRESS      86065
         TM    0(R1),X'50'   WAS IT POSTED ?                     86065
         BZ    WAITLOOP      NO; WAIT SOME MORE                  86065
         BO    WAITDONE      STOP ISSUED                         86065
         ICM   R5,15,CONSRPL  GET THE CONSOLE I/O WORK AREA      88192
         BNZ   CONSGET       OK; INITIALIZED                     88192
         BAL   R14,GETRPL    ELSE GET ONE                        88192
         LA    R3,NIBDMPID   OVERLAY NIB FOR TTE                 88192
         ST    R3,RPLUSFLD   MAKE COMMON LINK                    88192
         XC    TERMTABL(TERMELEN),TERMTABL  CLEAR IT             88192
         ST    R5,CONSRPL    REMEMBER THE RPL ADDRESS            88192
         MVI   TERMFLAG,TERMCONS  FLAG THIS AS A CONSOLE TTE     88192
         MVI   TERMFLG3,TPRIVY  SET PRIVILEGED FOR ALL COMMANDS  88192
         L     R9,=A(DDTCONS)  POINT TO DEVICE DEPENDENT VECTOR TABLE
         ST    R9,TERMDDT    SAVE IT                             88192
         ST    R5,TERMCRPL   MAKE RPL POINTER                    88192
         MVC   TERMNAME,=CL8' CONSOLE'  FOR DEBUGGING, ETC.      88192
CONSGET  L     R2,COMMAD     GET ECB/CIB POINTER                 86065
         ICM   R1,15,4(R2)   IS THERE A CIB ?                    86065
         BZ    WAITLOOP      NO ?                                86065
         USING CIB,R1        DECLARE IT                          86065
         L     R9,TERMDDT    RELOAD DDT                          88192
         L     R3,RPLUSFLD   RELOAD TTE                          88192
         CLI   CIBVERB,CIBMODFY  MODIFY ?                        86065
         BE    DOCIB         YES                                 86065
         CLI   CIBVERB,CIBSTART  START ?                         86065
         BNE   TOSSCIB       NO; IGNORE IT                       86065
DOCIB    SLR   R15,R15                                           86065
         ICM   R15,3,CIBDATLN  GET LENGTH OF DATA                86065
         BNP   TOSSCIB       NONE ?                              86065
         LR    R2,R15        SAVE LENGTH FOR EDITING             88192
         LA    R14,CIBDATA   GET DATA                            88192
         ICM   R15,8,=C' '   SET FOR BLANK FILL                  88192
         LA    R0,IOAREA     POINT TO INPUT WORK AREA            88192
         LA    R1,L'IOAREA   MAX LENGTH                          88192
         LR    R6,R0         SAVE START FOR THE EDIT ROUTINE     88192
         MVCL  R0,R14        COPY TO RPL INPUT AREA              88192
         B     INTRPRET      GO TO COMMAND PARSE                 88192
         SPACE 2                                                 88192
***********************************************************************
*                                                                     *
*        MSG 'TEXT' - ADD A SHORT MESSAGE TO SCREENS 12, 13 AND 20    *
*                                                                     *
***********************************************************************
CONSMSG  L     R14,GPDATAP   GET DATA
         LH    R15,GPDATAL   GET LENGTH OF DATA
         LTR   R15,R15       ANY DATA ?                          88220
         BNP   CONSMSG2      NO; JUST CLEAR                      88220
CONSMSG1 CLI   0(R14),C' '   BLANK OR NULL ?                     88220
         BH    CONSMSG2      YES                                 88220
         LA    R14,1(,R14)                                       88220
         BCT   R15,CONSMSG1  SKIP LEADING BLANKS                 88220
CONSMSG2 ICM   R15,8,=CL8' '   SET BLANK FILL                    86066
         L     R0,=A(S32MUS12)                                   86066
         LA    R1,L'S32MUS12                                     86066
         MVCL  R0,R14        MAKE MESSAGE                        86066
         L     R14,=A(S32MUS12)                                  86066
         MVC   S32MUS13-S32MUS12(L'S32MUS12,R14),0(R14)          86068
         L     R1,=A(S32MUS20)                                   88179
         MVC   S32MUS20-S32MUS20(L'S32MUS12,R1),0(R14)           88179
         L     R15,=A(S3EMUS12)                                  86066
         MVC   0(L'S32MUS12,R15),0(R14)                          86066
         MVC   S3EMUS13-S3EMUS12(L'S3EMUS12,R15),0(R14)          86068
         L     R1,=A(S3EMUS20)                                   88179
         MVC   S3EMUS20-S3EMUS20(L'S32MUS12,R1),0(R14)           88179
         L     R15,=A(MD5MUS12)                                  88206
         MVC   0(L'S32MUS12,R15),0(R14)                          88206
         MVC   MD5MUS13-MD5MUS12(L'MD5MUS12,R15),0(R14)          88206
         L     R1,=A(MD5MUS20)                                   88206
         MVC   MD5MUS20-MD5MUS20(L'S32MUS12,R1),0(R14)           88206
         TM    UFLAGS,INIT   START-UP ?                          90054
         BNZ   SENDMSG4      RESPOND WITH GARBAGE MESSAGE        90054
         B     CONSREST      SET TO RESTART                      88192
         SPACE 1                                                 88192
*        SET UNRESTRICTED (EXCEPT LOGON SCREENS) RUNNING MODE    88192
CONSULOK TM    UFLAGS,UFGSYS  IN SYSTEMS MODE ?                  86065
         BZ    OKCIB         YES; NO CHANGE                      86065
         NI    UFLAGS,255-UFGSYS  RESET                          86065
*        RESTART THE NETSOL TERMINAL ACQUISITION (FOR FORCED APPLID
*          ROUTING AFTER AN APPLICATION STARTS UP - MODIFY COMMAND
*          GETS ISSUED BY TSSO COMMAND SYSTEM.                   88192
*                                                                88192
CONSREST OI    UFLAGS,UFGREST+UFGIGNER   RESTART                 86065
         B     OKCIB                                             86065
*        PERMIT USE OF VTAM BY SYSTEMS STAFF ONLY (MAINTENANCE, ETC.)
CONSLOCK TM    UFLAGS,UFGSYS  ALREADY IN SYSTEMS MODE ?          86065
         BNZ   OKCIB         YES; LEAVE IT ALONE                 86065
         OI    UFLAGS,UFGSYS+UFGREST+UFGIGNER   RESTART          86065
OKCIB    L     R2,COMMAD     GET COMM AREA BACK                  88192
         L     R1,4(,R2)     REGAIN CIB                          88192
         SLR   R0,R0                                             86065
         IC    R0,CIBCONID                                       86065
         WTO   'OK',MCSFLAG=REG0                                 86065
TOSSCIB  LA    R0,4(,R2)     ORIGIN                              86065
         L     R1,4(,R2)     CIB ADDRESS                         86065
         QEDIT ORIGIN=(0),BLOCK=(1)  FREE IT                     86065
         B     WAITLOOP      GO FOR MORE                         86065
         SPACE 1                                                 88192
CONSSEND L     R1,SENDLEN    GET TEXT LENGTH                     88192
         LA    R1,4(,R1)     PLUS RDW LENGTH                     88192
         STCM  R1,3,IOAREA   MAKE RDW LENGTH                     88192
         STCM  R1,12,IOAREA+2  ZERO FLAGS                        88192
         L     R2,COMMAD     GET COMM AREA BACK                  88192
         L     R1,4(,R2)     REGAIN CIB                          88192
         SLR   R0,R0                                             88192
         IC    R0,CIBCONID   GET CONSOLE ID                      88192
         WTO   ,MF=(E,IOAREA),MCSFLAG=REG0  RESPOND TO CONSOLE   88192
         B     TOSSCIB       FREE THE CIB                        88192
         SPACE 2                                                 89261
         PUSH  USING                                             89261
         DROP  ,                                                 89261
         USING NETSOL,R12,R11,R10      PASSED BY CALLER          89261
         USING A522ER,R12                                        89261
A522ER   STM   R14,R12,12(R13)                                   89261
         LR    R12,R15        LOAD NEW TEMPORARY BASE            89261
A522UP   STIMER REAL,A522EXIT,BINTVL=A522TIME   START THE CLOCK  89261
         WAIT  ECBLIST=A522ECBS  WAIT FOR SOMETHING              89261
         TM    A522TECB,X'40'  TIMER ECB POSTED ?                89261
         BNZ   A522TMUP      YES; RESET INITIALIZATION DELAY     89261
         TTIMER CANCEL       CANCEL TIME REQUEST                 89261
         B     A522CNTL      CHECK FOR ACTION                    89261
A522TMUP NI    UFLAGS,255-INITDLAY  NO MORE DELAYS IN STARTUP    89261
         MVI   A522TECB,0    RESET TIMER ECB                     89261
A522CNTL TM    A522CECB,X'40'  CONTROL ACTION REQUIRED ?         89261
         BZ    A522UP        NO; WAIT AGAIN                      89261
         TM    A522CECB,X'3F'  RESTART REQUEST ?                 89261
         BM    A522QUIT      NO                                  89261
         MVI   A522CECB,0    RESET                               89261
         B     A522UP        AND RESTART TIMER                   89261
         SPACE 1                                                 89263
A522QUIT LM    R14,R12,12(R13)  RETRIEVE REGISTERS               89261
         SLR   R15,R15                                           89261
         BR    R14           QUIT                                89261
         SPACE 1                                                 89261
         DROP  ,                                                 89261
         USING A522EXIT,R15  DECLARE TEMPORARY BASE              89261
A522EXIT POST  A522TECB,0    POST TIME INTERVAL COMPLETE         89261
         BR    R14           RETURN TO CALLER                    89261
         SPACE 1                                                 89261
A522ECBS DC    A(A522CECB),X'80',AL3(A522TECB)                   89261
A522CECB DC    F'0'          CONTROL ECB                         89261
A522TECB DC    F'0'          STIMER ECB                          89261
A522TCB  DC    A(0)              SUBTASK TCB ADDRESS             89261
A522DONE DC    A(0)              SUBTASK ECB                     89261
A522TIME DC    A(100*60*10)      A522 10 MINUTES                 89261
A522NAME DC    CL8'OMIT522S'                                     89261
         POP   USING                                             89261
         SPACE 1                                                 85234
         PUSH  USING                                             85234
         DROP  ,                                                 85234
         USING EXITTIME,R15  DECLARE TEMPORARY BASE              85234
EXITTIME POST  TIMEECB,0     POST TIME INTERVAL COMPLETE         85234
         BR    R14           RETURN TO CALLER                    85234
         POP   USING                                             85234
         SPACE 1                                                 85234
WAITECBS DC    A(0,TIMEECB),X'80',AL3(FINISECB)  ECB LIST        86065
TIMEECB  DC    F'0'          STIMER ECB                          85234
A522POST DC    F'0'          A522 SUBTASK COMPLETION ECB         89261
COMMAD   DC    A(0)          EXTRACT COMM RESULT                 86065
CONSRPL  DC    A(0)          ADDRESS OF RPL/TTE/DDT FOR CONSOLE I/O
         EJECT
***********************************************************************
*        EXECUTION CONTINUES HERE WHEN ECB IS POSTED BY TPEND EXIT.   *
***********************************************************************
         SPACE 1
WAITDONE SLR   R15,R15                 ZERO RC REG FOR CLOSE
         TM    UFLAGS,UFGREST  RESTART ?                         86065
         BNZ   *+8           YES; DON'T SET SHUTDOWN             86065
         OI    UFLAGS,SHUTDOWN+UFGIGNER  INHIBIT ERRORS          86065
         CLOSE ACB                     RELEASE CONNECTION WITH
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR CLSDSTERROR.                           *
***********************************************************************
         SPACE 1
         LTR   R15,R15                 DID THE CLOSE GO?
         BZ    CLSOK                   YES, EXIT
         CLI   ACB+X'31',X'42'         CLOSE COMPLETE?
         BE    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         WTO MF=(E,LISTWTO1)           INFORM OPERATOR
         SPACE 1
***********************************************************************
*        SINCE WE DON'T KNOW HOW MANY RPLS ARE OUTSTANDING (MAY BE    *
*        MORE THAN 10), WE FREE THE WHOLE SUBPOOL OF RPLS AND DO THE  *
*        SAME FOR THE TERMINAL TABLE AS WELL.                         *
***********************************************************************
         SPACE 1
CLSOK    FREEMAIN R,SP=1               FREE DYNAMIC RPL SPACE
         SPACE 1
FREETTE  FREEMAIN R,SP=2               FREE TERMINAL TABLE SPACE
         TM    UFLAGS,SHUTDOWN  FORCED DOWN ?                    86065
         BNZ   FREETERM      YES; QUIT                           86065
         TM    UFLAGS,UFGREST  RESTART WITH DIFFERENT MODE ?     86065
         BZ    FREETERM      NO                                  86065
         NI    UFLAGS,255-UFGREST-UFGIGNER   RESET               86065
         B     NOPARM        RESTART FROM BEGINNING              86065
         SPACE 1
         SPACE 1
FREETERM ICM   R2,15,A522TCB   DID WE ATTACH 522 SUBTASK ?       89261
         BZ    FREEMAIN      NO; TERMINATE MAIN TASK             89261
         ICM   R0,8,=X'01'   POST SUB-TASK TERMINATION           89261
         POST  A522CECB,(0)                                      89261
         WAIT  ECB=A522DONE  WAIT FOR RESPONSE                   89261
         DETACH A522TCB      GET RID OF SUBTASK                  89261
FREEMAIN L     R13,MAINSAVE+4          FIND INPUT SAVE AREA      89261
         SLR   R14,R14                 CLEAR FORWARD SAVE
         ST    R14,8(,R13)             AREA CHAIN PTR
         LM    R14,R12,12(R13)         LOAD INPUT REGS
         SLR   R15,R15                 RCODE=0 FOR NORMAL RTN
*        RETURN
         BR    14                      RETURN TO CALLER OR ATTACHER
         SPACE 2                                                 90120
***********************************************************************
*        THE FOLLOWING CODE IS BRANCHED TO FROM THE MAIN-LINE CODE,   *
*        EXIT CODE, AND FROM THE ERREXIT ROUTINE.  THE ONLY ACTION    *
*        TAKEN SINCE THE CASES ARE 'SHOULD NOT OCCUR' CONDITIONS, IS  *
*        TO ABNORMALLY TERMINATE NETSOL WITH A REASON CODE IN         *
*        DUMPFLAG AND CAUSE A DUMP TO BE TAKEN.                       *
***********************************************************************
         SPACE 1
OPENFAIL DS    0H                      OPEN-ACB IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,OPENCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SETLFAIL DS    0H                      SETLOGON IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,SETLCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SNOCCUR  DS    0H                      REQUEST FAILED BECAUSE
*                                       OF AN INVALID CONTROL
*                                       BLOCK OR OTHER CON-
*                                       DITION WHICH SHOULD
*                                       NOT OCCUR
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         CLOSE ACB                     AVOID OPEN FAILURE ON
*                                      RE-DISPATCH OF SUBTASK
         MVI   DUMPFLAG,CBLKCODE       SAVE NETSOL DUMP CODE
         B     DUMP
         SPACE 1
TOOSMALL STM   R0,R15,SNOREGS          SAVE REGS
         MVI   DUMPFLAG,TABLTRBL       TROUBLE WITH TTE
*NEXT*   B     DUMP
         SPACE 1
DUMP     DS    0H                      TERMINATE WITH A DUMP
         LA    R6,SNOREGS    POINT TO SAVED REGISTERS            91170
         LA    R5,2          SET FOR TWO LINES                   91170
STABRLP  LA    R4,GENREG0    SET FIRST OUTPUT ADDRESS            91170
         LA    R3,2          SET FOR TWO GROUPS OF FOUR          91170
STABRLP2 LA    R2,4          SET FOR FOUR REGISTERS              91170
STABRLP3 UNPK  0(9,R4),0(5,R6)  UNPACK A REGISTER                91170
         TR    0(8,R4),HEXTAB-C'0'     MAKE EBCDIC               91170
         MVI   8(R4),C' '    SEPARATOR                           91170
         LA    R4,9(,R4)     NEXT OUTPUT ADDRESS                 91170
         LA    R6,4(,R6)     NEXT REGISTER                       91170
         BCT   R2,STABRLP3   DO NEXT REGISTER                    91170
         LA    R4,1(,R4)     INTERGROUP GAP                      91170
         BCT   R3,STABRLP2   DO NEXT GROUP                       91170
         WTO   MF=(E,GENREGS)   WRITE TO CONSOLE                 91170
         MVC   GENREGNM+3(3),=C'8-F'   IDENTIFY SECOND LINE      91170
         BCT   R5,STABRLP    DO SECOND LINE                      91170
         SLR   R1,R1                   PUT REASON CODE IN REG 1
         IC    R1,DUMPFLAG
         SPACE 1
         ABEND (1),DUMP
         SPACE 1                                                 85235
MAINSAVE DC    18F'0'                  SAVE AREA FOR MAINLINE
RESTBASE DC    A(NETSOL+8192,NETSOL+4096) REST OF BASE REG VALUES
WAIT1SEC DC    F'100'                  WAIT TIME OF 1.00 SECS
TERMTABS DC    A(0)                    START OF TERMINAL TABLE  FOR
TERMTABI DC    A(TERMELEN)             INDEX VALUE              BXLE
TERMTABE DC    A(0)                    LAST ENTRY USED ADDRESS  USE
TERMTEND DC    A(0,TERMELEN)           END OF TABLE + 1
RANGEEND DC    A(0)          END OF TABLES                       88185
TERMLTAB DC    A(1024*TERMELEN)        SIZE OF TABLE (ENTRIES*LENGTH)
@MODETAB DC    A(0)          ADDRESS OF MODE TABLE (ISTINCLM)    88213
NMCOMPR  DC    CL8'COMP3270'  COMPRESSION ROUTINE                90140
COMP3270 DC    A(0)          ADDRESS OF COMPRESSION ROUTINE      90140
HEXTAB   DC    C'0123456789ABCDEF'  HEX CONVERSION TABLE         91170
GENREGS  DC    Y(GENREGND-*,0)                                   91170
GENREGNM DC    C'GR 0-7  '                                       91170
GENREG0  DC    CL8' ',C' ',CL8' ',C' ',CL8' ',C' ',CL8' ',CL2' ' 91170
GENREG4  DC    CL8' ',C' ',CL8' ',C' ',CL8' ',C' ',CL8' '        91170
GENREGND DC    C' '          EXTRA FOR UNPACK                    91170
VTAMVERL DC    CL2' '        VTAM VERSION/RELEASE (CHAR)         92221
         TITLE '*********  N E T S O L  - GETPARM SUBROUTINE'
***********************************************************************
*                                                                     *
*    GETPARM LOCATES THE NEXT TEXT UNIT IN THE COMMAND BUFFER.        *
*                                                                     *
*    THIS TEXT UNIT IS VALIDATED FOR:                                 *
*         A) MAXIMUM LENGTH                                           *
*         B) REQUIRED PARAMETER                                       *
*                                                                     *
*    INPUT : R1  - A(PARAMETER OPTION LIST)                           *
*            R2  - A(OUTPUT MSG BUFFER)                               *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R1  - A(TEXT UNIT) OR GARBAGE IF ERROR                   *
*            R15 - LENGTH OF TEXT UNIT                                *
*                                                                     *
*   RETURN : 0(R14) - VALID TEXT UNIT FOUND                           *
*            4(R14) - NO TEXT UNIT FOUND (IF PARAMETER IS OPTIONAL)   *
*            8(R14) - ERROR DETECTED WHILE PROCESSING TEXT UNIT       *
*                                                                     *
***********************************************************************
GETPARM  DS    0H
         SPACE 1
         ST    R1,GPPARM          SAVE A(PARM OPTION LIST)
         SPACE 1
*        CHECK FOR NO DATA LEFT IN COMMAND BUFFER
         SPACE 1
         LH    R6,GPDATAL         GET LENGTH OF REMAINING DATA
         LTR   R6,R6              ANY DATA LEFT?
         BZ    GPNODATA           NO => BR TO HANDLE
         SPACE 1
*        FIND NEXT TEXT UNIT IN COMMAND BUFFER
         SPACE 1
         L     R7,GPDATAP         LOAD A(CURRENT OFFSET IN CMD BUFFER)
GRPLOOP1 CLI   0(R7),X'40'        FIND
         BE    GRPBUMP1             FIRST                        88179
         CLI   0(R7),C'/'    FUNNY FIELD SEPARATOR ?             88179
         BE    GRPBUMP1      YES; SKIP IT                        88179
         CLI   0(R7),C','    FUNNY FIELD SEPARATOR ?             88185
         BE    GRPBUMP1      YES; SKIP IT                        88185
         CLI   0(R7),X'11'   START FIELD ?                       88179
         BNE   GPNONBLK      NO; PROCESS AS PARAMETER            88179
         LA    R7,2(R7,0)    BUMP OVER ADDRESS                   88179
         SH    R6,*-2        ADJUST LENGTH                       88179
         BNP   GPNODATA      NOTHING LEFT                        88179
GRPBUMP1 LA    R7,1(,R7)              NON                        88179
         BCT   R6,GRPLOOP1              BLANK
         B     GPNODATA                   CHARACTER
         SPACE 1
*        FIND END OF TEXT UNIT
         SPACE 1
GPNONBLK LR    R1,R7              SET TEXT UNIT PTR
GPLOOP2  CLI   0(R7),X'40'        FIND
         BE    GPGOTIT              LAST
         CLI   0(R7),X'11'  ANOTHER START FIELD ?                88179
         BE    GPGOTIT       YES; END OF PRIOR FIELD             88179
         CLI   0(R7),C'/'    OTHER FIELD END ?                   88179
         BE    GPGOTIT                                           88179
         CLI   0(R7),C','    FUNNY FIELD SEPARATOR ?             88185
         BE    GPGOTIT       YES; SKIP IT                        88185
         LA    R7,1(,R7)              NON-BLANK
         BCT   R6,GPLOOP2               CHARACTER
         SPACE 1
*        NEXT TEXT UNIT HAS BEEN FOUND
         SPACE 1
GPGOTIT  ST    R7,GPDATAP         SAVE CURRENT OFFSET IN CMD BUFFER
         STH   R6,GPDATAL         SAVE LENGTH OF REMAINING DATA
         SR    R7,R1              CALC LENGTH OF THE TEXT UNIT
         LR    R15,R7               & MOVE TO REG 15
         SPACE 1
*        VALIDATE THE PARAMETER OPTIONS FOR THE TEXT UNIT
         SPACE 1
         L     R6,GPPARM          LOAD A(OPTION LIST)
         CLI   0(R1),C'*'    POSSIBLE COMMENT ?                  88220
         BNE   GPCHKOPT      NO                                  88220
         TM    GPFLAG(R6),GPCOM  COMMENT ALLOWED ?               88220
         BNZ   GPNODATA      YES; END OF INPUT                   88220
GPCHKOPT CH    R15,GPLEN(,R6)     TU > MAX ALLOWED?
         BNH   GPCHK10            NO => BR TO NEXT CHECK
         MVC   0(L'GPMSG1,R2),GPMSG1 MOVE ERR MSG TO BUFFER
         CH    R15,=H'8'          MOVE
         BNH   *+8                  MAX 8
         LA    R15,8                  CHARACTERS
         BCTR  R15,0                    OF TEXT UNIT
         EX    R15,GPEX1                  TO ERROR MSG
         LA    R1,L'GPMSG1(,R2)   POINT TO END OF ERROR MSG
         B     GPERRTXT           BR TO MOVE KEYWORD TO MSG
         SPACE 1
GPNODATA SLR   R15,R15            INDICATE NO TEXT UNIT
         L     R6,GPPARM          LOAD A(OPTION LIST)            88220
GPCHK10  LTR   R15,R15            WAS THERE A TEXT UNIT?
         BNZ   GPXTYP        YES; NOW CHECK TYPING RESTRICTIONS  88220
         TM    GPFLAG(R6),GPOPT   WAS PARAMETER OPTIONAL?
         BNZ   GPXZERO            YES => EXIT NO PARM
         MVC   0(L'GPMSG2,R2),GPMSG2 NO => MOVE ERR MSG
         LA    R1,L'GPMSG2(,R2)   POINT TO END OF ERROR MSG
         SPACE 1
GPERRTXT LH    R7,GPTEXTL(,R6)    GET LENGTH OF TEXT IN OPT LIST
         BCTR  R7,0               DECREMENT FOR MOVE
         EX    R7,GPEX2           ADD OPTION LIST TEXT TO ERR MSG
         SPACE 1
         B     8(,R14)            TAKE ERROR RETURN
         SPACE 1
GPXZERO  B     4(,R14)            RETURN WITH NO TEXT UNIT
         SPACE 1
GPXTYP   TM    GPFLAG(R6),GPNUM  NUMERIC ONLY ?                  88220
         BZ    GPXFND        NO; RETURN                          88220
         LR    R0,R15        COPY LENGTH                         88220
         LR    R7,R1         COPY TEXT START                     88220
GPXTYPN  CLI   0(R7),C'0'    DIGIT ?                             88220
         BL    GPNNUM        NO; FAIL                            88220
         CLI   0(R7),C'9'    IN RANGE ?                          88220
         BNH   GPXTYPNS                                          88220
GPNNUM   MVC   0(25,R2),=C'PARAMETER MUST BE NUMERIC'            88220
         LA    R1,25(,R2)    POINT TO END OF MESSAGE             88220
         B     8(,R14)       TAKE ERROR RETURN                   88220
GPXTYPNS LA    R7,1(,R7)                                         88220
         BCT   R0,GPXTYPN    TRY NEXT                            88220
GPXFND   BR    R14                RETURN WITH TEXT UNIT FOUND
         SPACE 2
GPEX1    MVC   0(0,R2),0(R1)      MOVE TEXT UNIT TO ERROR MSG
GPEX2    MVC   0(0,R1),GPTEXT(R6) MOVE OPT LIST TEXT TO ERROR MSG
GPMSG1   DC    C'XXXXXXXX IS TOO BIG FOR '
GPMSG2   DC    C'MISSING PARAMETER: '
         TITLE '*********  N E T S O L  - INIT MSG13 SUBROUTINE'
***********************************************************************
*                                                                     *
*    INITMSG4 LOCATES AND INITIALIZES THE MSG4 OUTPUT BUFFER.         *
*                                                                     *
*    INPUT : R9  - A(DDT)                                             *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R2  - A(MSG04 OUTPUT BUFFER)                             *
*                                                                     *
***********************************************************************
INITMSG4 DS    0H
         SPACE 1
         L     R2,DDTM4OFS        GET A(MSG04)
         LH    R1,DDTM4L          LOAD LENGTH OF MSG04 BUFFER
         MVI   0(R2),X'40'        INSERT 1ST BLANK
         BCTR  R1,0               DECREMENT LENGTH
         BCTR  R1,0               DECREMENT LENGTH
         EX    R1,INITM4X         INIT REST OF BUFFER
         SPACE 1
         BR    R14
         SPACE 2
INITM4X  MVC   1(0,R2),0(R2)      PROPAGATE BLANK THROUGHOUT BUFFER
         SPACE 1                                                 86065
*        SYSTEMS RESTRICTION RELATED ROUTINES                    86065
*                                                                86065
SETPASON BAL   R14,UTERMOF   RESET PRIOR LOGON                   88179
         AIF   ('&LOCAL' NE 'PID').NOPASON                       92300
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR WORK AREA        88179
         MVC   A$SBUFR,TERMLOUD                                  88179
         MVC   A$SID,=C'A$RB'  IDENTIFY                          88179
         MVC   A$SFCTN(3),=AL1(A$SFLOUD,A$SONL,A$SAKEY)          88179
         BAL   R14,INITMSG4  GET MESSAGE BUFFER                  88179
         MVC   A$SERMSG,=A(ERRMSG)   STASH ERROR MESSAGE ADDRESS 88199
         MVC   A$SACCT,TERMNAME  COPY TERMINAL ID                88179
         ICM   R0,15,TERMLOUD  ALREADY HAVE A LOUD ?             88179
         BNZ   PONHLOUD      YES                                 88179
         LA    R1,A$SVCRB    GET PARM LIST                       88179
         SVC   249           CALL ACCOUNTING SVC                 88179
         BXH   R15,R15,POPERMSG  DO ERROR MESSAGE PROCESSING     88179
         MVC   TERMLOUD,A$SBUFR  SAVE THE LOUD ADDRESS           88179
PONHLOUD OI    A$SCNTL,A$SBUILD  SHOW LOUD ADDRESS PRESENT       88179
         L     R4,TERMLOUD   LOAD THE LOUD                       88179
         USING A$LOUD,R4     DECLARE IT                          88179
         MVC   A$SACCT,=CL8' '                                   88179
         MVC   A$SUID,=CL8' '                                    88179
         MVC   A$SPSWD,=CL8' '                                   88179
         LA    R1,PWUID      SET FOR USER-ID                     88179
         BAL   R14,GETPARM   GET IT                              88179
         B     *+12          FOUND                               88179
         B     BAREPSWD      MISSING OPERAND - ISSUE LOGON SCRN  89066
         B     POPPARM       INVALID PARM                        88179
         BCTR  R15,0         SET EXECUTE LENGTH                  88179
         LA    R14,A$SUID                                        88179
         EX    R15,POPMVC    MOVE PARAMETER                      88179
         MVC   A$SFCTN(3),=AL1(A$SFVALD,0,A$SUKEY+A$SBUILD)      88179
         LA    R1,PWPSWD     GET PASSWORD                        88179
         BAL   R14,GETPARM   LOOK FOR IT                         88179
         B     *+12          OK                                  88179
         B     POPPARM       INVALID                             88179
         B     POPPARM       INVALID                             88179
         BCTR  R15,0                                             88179
         LA    R14,A$SPSWD                                       88179
         EX    R15,POPMVC    MOVE PARM                           88179
         LA    R1,PWACCT     TEST FOR ACCOUNT                    88186
         BAL   R14,GETPARM   LOOK FOR IT                         88186
         B     *+12          OK                                  88186
         B     PONACSVC      MISSING; ISSUE SVC WITHOUT IT       88186
         B     POPPARM       INVALID                             88179
         BCTR  R15,0                                             88179
         LA    R14,A$SACCT                                       88179
         EX    R15,POPMVC    MOVE PARM                           88179
         OI    A$SCNTL,A$SAKEY  SHOW ACCOUNT SUPPLIED            88186
PONACSVC LA    R1,A$SVCRB                                        88179
         SVC   249                                               88179
         BXH   R15,R15,POPERMSG                                  88179
PONLON   BAL   R14,UTERM     SET AUTHORIZATION AND LOGON         88185
         TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88192
         BNZ   PONOPEN       YES                                 88192
         TM    UFLAGS,UFGSYS SYSTEMS ONLY ?                      88192
         BZ    PONOPEN       NO; PROCEED                         88192
         MVC   0(35,R2),=C'SIGN-ON restricted to systems staff'  88192
         B     PONERR4       JOIN COMMON                         88192
PONOPEN  TM    A$USUBFG,A$USFTSO+A$USFCIC+A$USFWYL+A$USFEXH+A$USFNET+A$*
               USFOTH        ALLOWED ON-LINE SERVICES ?          88192
         BNZ   PONTSUB       YES; SEE IF ONE ONLY                88179
         MVC   0(40,R2),=C'MSG772 USER NOT ALLOWED ON-LINE SERVICES'
PONERR4  BAL   R14,UTERMOF   RESET LOGON AGAIN                   88192
         B     SENDMSG4      WRITE ERROR MESSAGE TO USER         88185
         SPACE 1                                                 92320
PONTSUB  BAL   R14,UTERMAP   SEE IF APPLICATION IS FORCED        88179
         L     R7,=A(OPENEND)  SET BASE FOR AUTOTIME             90141
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   AUTOTIME-OPENEND(R7)  YES; INVOKE IT              88220
         SPACE 1                                                 88185
PONANY   LH    R2,GPDATAL    GET LENGTH OF BUFFER                88311
         LTR   R2,R2         ROOM FOR TEXT ?                     88311
         BNP   PONSCRN       NO                                  88311
         L     R6,GPDATAP    GET DATA BUFFER LEFT                88311
PONMORE  CLI   0(R6),C' '    ANY MORE TEXT ?                     88311
         BH    INTRPRET      YES; PARSE IT                       88311
         LA    R6,1(,R6)                                         88311
         BCT   R2,PONMORE    TRY AGAIN                           88311
.NOPASON SPACE 1                                                 91195
PONSCRN  TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BNZ   RESEND        YES; REWRITE FULL SCREEN            88179
         LA    R0,MSG15      SHOW UNLOCKED                       86065
         B     SENDMSG                                           86065
POPMVC   MVC   0(0,R14),0(R1)  MOVE PARM                         88179
POPERMSG L     R15,A$SERMSG  GET ERROR MESSAGE ADDRESS           88199
         OC    0(L'SINM4OF,R2),4(R15)  MOVE MESSAGE TEXT         88199
POPPARM  B     SENDMSG4      WRITE ERROR MESSAGE TO USER         88185
         SPACE 1                                                 88179
PWUID    $GP   8,'USER-ID',GPNULL+GPOPT  (REWRITE IF MISSING)    89066
PWPSWD   $GP   8,'PASSWORD',GPNULL                               88179
PWACCT   $GP   8,'ACCOUNT',GPOPT+GPCOM                           88179
PWAUTO   $GP   6,'AUTO LOGON',GPOPT+GPCOM                        88179
         SPACE 1                                                 88185
UTERMAP  DS    0H                                                91195
         AIF   ('&LOCAL' NE 'PID').NOUTRMN                       92300
         LA    R15,PONAPTAB  GET TABLE OF FORCED APPLICATIONS    88179
         LA    R0,(PONAPEND-PONAPTAB)/(PONAPTA2-PONAPTAB) # TO CHECK
PONAPLUP CLC   A$USUBFG,0(R15)  MATCH ?                          88179
         BE    PONAPFOR      YES; FORCED APPLICATION LOGON       88179
         LA    R15,PONAPTA2-PONAPTAB(R15)  NEXT ENTRY            88179
         BCT   R0,PONAPLUP   TRY IT                              88179
         BR    R14           RETURN WITHOUT A MATCH              88179
PONAPTAB DC    AL1(A$USFTSO),CL8'TSO'  FORCED LOGON TABLE        88179
PONAPTA2 DC    AL1(A$USFWYL),CL8'WYLBUR'                         88179
         DC    AL1(A$USFEXH),CL8'EXHI'                           88179
         DC    AL1(A$USFCIC),CL8'CICS'                           88179
PONAPEND EQU   *                                                 88179
         SPACE 1                                                 88179
PONAPFOR CLI   A$USUBFG,A$USFCIC  CICS LOGON ?                   88179
         BE    PONAPCIC      YES; CHECK FURTHER                  88179
         MVC   TERMAPPL,1(R15)  MOVE THE APPLICATION NAME        88179
         OI    TERMFLG3,TFAPL  SET FORCED APPLICATION            88220
         BR    R14           RETURN WITH APPLID SET              88179
PONAPCIC CLI   A$UCICNM,C' ' FORCED NAME ?                       88179
         BNHR  R14           NO                                  88179
         CLI   A$UCICNM+8,C' '  MORE THAN ONE ?                  88179
         BH    R14           YES; LET USER SPECIFY               88179
         LA    R0,8                                              88179
         LA    R15,A$UCICNM                                      88179
PONACLUP CLI   0(R15),C' '   BIGGER THAN A BLANK ?               88179
         BNH   PONACLOK      NO; END OF NAME                     88179
         CLI   0(R15),C'*'   MATCH ANY RESIDUAL ?                88186
         BER   R14           YES; NO SPECIFIC NAME               88186
         CLI   0(R15),C'?'   SPECIAL CHARACTER ?                 88186
         BER   R14           YES; NO SPECIFIC NAME               88186
         LA    R15,1(,R15)                                       88179
         BCT   R0,PONACLUP   TRY AGAIN                           88179
PONACLOK MVC   TERMAPPL,A$UCICNM  MAKE NAME                      88179
         OI    TERMFLG3,TFAPL  SET FORCED APPLICATION            88220
.NOUTRMN BR    R14           RETURN WITH APPLID SET              88179
         SPACE 1                                                 88185
UTERM    OI    TERMFLG3,TFLON  SHOW USER LOGGED ON               88179
         AIF   ('&LOCAL' NE 'PID').NOUTER1                       92300
         TM    A$UPRIVY,A$UPFSYS  SYSTEMS PRIVILEGE ?            88179
         BZ    *+8           NO                                  88179
.NOUTER1 OI    TERMFLG3,TPRIVY  YES; FULL AUTHORIZATION          88179
         AIF   ('&LOCAL' NE 'PID').NOUTER2                       92300
         TM    A$UPRIVY,A$UPFACT+A$UPFOPE  SUPPORT ?             88179
         BNO   *+8           NO                                  88179
         OI    TERMFLG3,TSUPP  SET TECHNICAL SUPPORT             88179
.NOUTER2 BR    R14           RETURN TO CALLER                    88185
         SPACE 1                                                 86065
UTERMOF  XC    TERMAPPL,TERMAPPL  RESET PRIOR APPLICATION        88185
         XC    TERMDCNT,TERMDCNT  RESET APPL RETRY COUNT         88185
         XC    TERMDTIM,TERMDTIM  RESET APPL RETRY TIME          88185
         NI    TERMFLG3,TFREQ     RESET LOGON/PRIVY FLAGS        88185
         BR    R14           RETURN TO CALLER                    88185
         SPACE 1                                                 88185
SETPASOF BAL   R14,UTERMOF   RESET LOGON/PRIVIES                 88179
         AIF   ('&LOCAL' NE 'PID').NOPASOF                       92300
         ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    POFFLOUD      NO                                  88179
         XC    A$SVCRB(A$SLENRB),A$SVCRB  USE AS ACCT SVC PARM   88179
         MVC   A$SID,=C'A$RB'                                    88179
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88179
         LA    R1,A$SVCRB                                        88179
         SVC   249           CANCEL SESSIONS AND USER LOGON      88179
.NOPASOF  ANOP  ,                                                91195
POFFLOUD LA    R0,MSG16      SHOW LOCKED                         86065
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    SENDMSG       NO                                  86065
BAREPSWD LA    R0,MSG20      SET FOR LOGON SCREEN                88179
         B     SENDMSG                                           88179
         SPACE 1                                                 88172
*        MSG TEXT - SEND NON-DELETABLE MESSAGE TO OPERATOR       88172
*                                                                88172
SETWTO   L     R0,GPDATAP    POINT TO COMMAND TEXT               88172
         SLR   R2,R2                                             88172
         ICM   R2,3,GPDATAL  LOAD AND TEST LENGTH                88172
         BNP   BADINPUT      ERROR                               88172
         LR    R1,R2         COPY LENGTH FROM MVC                88179
         LA    R14,IOBASE+4+4+1+8  FIRST BYTE AFTER TERM         88179
         LA    R15,150-4-4-1-8  MAX LENGTH SUPPORTED             88179
         MVC   IOBASE+4(5),=C'FROM '                             88172
         MVC   IOBASE+4+4+1(8),TERMNAME  TERM ID                 88172
         MVI   IOBASE+4+4+1+8,C' '                               88172
         MVCL  R14,R0        MOVE TEXT TO BUFFER (NULL FILL)     88172
         LA    R2,4+4+1+8(,R2)                                   88172
         LA    R1,IOBASE(R2) POINT TO END OF TEXT                88172
         MVC   0(4,R1),=X'40008000'  ROUTCDE=1,DESC=2            88172
         STCM  R2,3,IOBASE   SET RDW LENGTH                      88172
         MVC   IOBASE+2(2),=X'8000'  SET ROUT/DESC PRESENT       88172
         SLR   R0,R0         CLEAR FOR UCMID                     88172
         WTO   MF=(E,IOBASE)  WRITE TO OPERATOR                  88172
         BAL   R14,INITMSG4  CLEAR VARIABLE MESSAGE AREA         88172
         MVC   0(12,R2),=C'MESSAGE SENT'                         88172
         B     SENDMSG4      SEND MESSAGE 4                      88185
         SPACE 1                                                 87187
*        OS TEXT - IF PRIVILEGED USER, ISSUES OS COMMAND (TEXT)  87187
*                                                                87187
SETOSCMD TESTAUTH FCTN=1     AUTHORIZED FOR OS COMMANDS ?        87187
         BXH   R15,R15,CMDNAUTH  NO; FAIL REQUEST                87187
         L     R6,GPDATAP    POINT TO COMMAND TEXT               87187
         SLR   R2,R2                                             87187
         ICM   R2,3,GPDATAL  LOAD AND TEST LENGTH                87187
         BNP   BADINPUT      ERROR                               87187
         MVC   IOBASE+4(256),0(R6)  COPY PARM +                  87187
         LA    R2,4(,R2)                                         87187
         SLL   R2,16                                             87187
         ST    R2,IOBASE     COMPLETE V-FORMAT ENTRY             87187
         SLR   R0,R0         CLEAR FOR UCMID                     87187
         L     R2,CVTPTR     GET THE CVT                         87187
         USING CVTMAP,R2                                         87187
         ICM   R2,15,CVTCUCB  GET CONSOLE CONTROL BLOCK          87187
         BZ    SETOSNCN      NO CONSOLE ?                        87187
         USING UCM,R2                                            87187
         LM    R1,R3,UCMVEA  LOAD CONSOLE BXLE WORDS             87187
         DROP  R2                                                87187
         USING UCMLIST,R1    DECLARE SINGLE ENTRY                87187
SETOSCLP TM    UCMDISP,UCMDISPA  MASTER CONSOLE ?                87187
         BZ    SETOSCBM      NO                                  87187
         IC    R0,UCMID      INSERT ID                           87187
         OI    IOBASE+2,X'40'  SET UCM ID PRESENT                87187
         B     SETOSNCN      PROCEED WITH NEW ID                 87187
SETOSCBM BXLE  R1,R2,SETOSCLP  LOOP THROUGH CONSOLES             87187
         DROP  R1                                                87187
SETOSNCN MODESET KEY=ZERO,MODE=SUP  GET PRIVILEGED               87193
         MGCR  IOBASE        ISSUE COMMAND                       87193
         MODESET KEY=NZERO,MODE=PROB  GET LOW                    87193
         BAL   R14,INITMSG4  CLEAR MESSAGE BUFFER                87187
         LH    R3,DDTM4L     GET MAXIMUM LENGTH                  87187
         LA    R0,IOBASE+4                                       87187
         LH    R1,IOBASE     GET LENGTH+4                        87187
         SH    R1,=H'4'                                          87187
         MVCL  R2,R0         MOVE RESPONSE OR ORIGINAL COMMAND   87187
         B     SENDMSG4      SEND MESSAGE 4                      88185
         SPACE 2                                                 87193
***********************************************************************
*                                                                     *
*        SETNEWS - DISPLAY THE CURRENT GOSSIP FROM DD CARD NEWS       *
*        SETSTATS - (LOCAL ONLY) DISPLAY THE EXHIBIT SYSTEM SCREEN    *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88179
SETSTATS DS    0H            DISPLAY STATUS SCREEN FROM EXHIBIT  87193
         AIF   ('&LOCAL' NE 'PID').NOSTATS                       92300
         MODESET KEY=ZERO                                        93038
         L     R2,CVTPTR     GET THE CVT                         93038
         ICM   R2,15,CVTJESCT-CVTMAP(R2)  GET JES TABLE          93038
         BZ    NOT24         OR OUT                              93038
         LA    R2,JESSSCT-JESCT-(SSCTSCTA-SSCT)(,R2)  SSCT CHAIN 93038
         USING SSCT,R2       DECLARE IT                          93038
LOOPSSCT ICM   R2,15,SSCTSCTA  GET NEXT ENTRY                    93038
         BZ    NOT24         TOO BAD                             93038
         AM31  ,             GET HIGH - ALL DATA ABOVE THE LINE  93038
         CLC   =C'EXHI',SSCTSNAM  MY SUBSYSTEM NAME ?            93038
         BNE   LOOPSSCT      NO                                  93038
         ICM   R2,15,SSCTSUSE  LOAD CSA GLOBAL ADDRESS           93038
         BZ    NOT24         NOT BUILT YET ?                     93038
         USING EXRBASE,R2    DECLARE CSA                         93038
         SLR   R3,R3         SAVE BACKUP POINTER                 93038
         LA    R4,EXRSCRIN-(EXKCHAIN-EXKBASE)  HEAD OF SCREENS   93038
         USING EXKBASE,R4                                        93038
         L     R0,=Y(24,80)  SET PREFERRED ENTRY                 93038
         L     R1,=C'JES2'   SET PREFERRED SUBSYSTEM (LATER DO *)
LOOPEXK  ICM   R4,15,EXKCHAIN  GET NEXT ELEMENT                  93038
         BNZ   TESTEXK       TEST IT                             93038
         LTR   R4,R3         DID WE FIND AN ALTERNATE ?          93038
         BZ    NOT24         NO ?                                93038
         B     HAVEEXK       YES; USE ALTERNATE SIZE             93038
TESTEXK  CLM   R1,15,EXKJESNM  SAME SUBSYSTEM ?                  93038
         BNE   LOOPEXK       NO; IGNORE                          93038
         CLM   R0,15,EXKSCRSZ  SAME SIZE ?                       93038
         BE    HAVEEXK       YES; USE IT                         93038
         CLM   R0,3,EXKSCRSZ  AT LEAST SOMETHING BY 80 ?         93038
         BNE   LOOPEXK       NO; IGNORE IT                       93038
         LR    R3,R4         SAVE AS ALTERNATE                   93038
         B     LOOPEXK       TRY AGAIN                           93038
         SPACE 1                                                 93038
HAVEEXK  LA    R0,EXKSCRN    LOAD SCREEN START ADDRESS           93038
         DROP  R4                                                93038
         B     COMSCRIN                                          88179
.NOSTATS SPACE 1                                                 88179
SETHELP  L     R0,=A(HELPTEXT)   FOR 'HELP' SCREEN               88179
         B     COMSCRIN      MOVE IT                             88179
         SPACE 1                                                 87193
SETNEWS  L     R0,=A(NEWSTEXT)  LOAD NEWS SCREEN ADDRESS         88179
COMSCRIN LA    R1,24*80      SET SCREEN SIZE                     87193
         LA    R14,IOBASE                                        87193
         ST    R14,GPDATAP   SAVE POINTER                        87193
         C     R9,=A(DDT3767)  NTO DEVICE ?                      88179
         BE    COMNSCR       YES; FORMAT LINE BY LINE            88179
         C     R9,=A(DDTMDL5)  MODEL 5 ?                         88206
         BE    COMMDL5       YES; SPECIAL PROCESSING             88206
         LR    R15,R1        COPY LENGTH                         87193
         MVC   0(PREFIXLN,R14),PREFIX  MOVE 3270 PREFIX ORDERS   87193
         LA    R14,PREFIXLN(,R14)  ADJUST                        87193
         MVCL  R14,R0        MOVE SCREEN BUFFER                  87193
         MVC   IOBASE+PREFIXLN+24*80(SUFFIXLN),SUFFIX  TRAILER   87193
         LA    R15,PREFIXLN+24*80+SUFFIXLN                       87193
         B     COMSTLEN      JOIN COMMON                         88206
         SPACE 1                                                 88206
COMMDL5  LR    R1,R0         COPY START ADDRESS                  88206
         LA    R0,24         NUMBER OF LINES TO DO               88206
         MVC   0(PREFIXLN,R14),PREFIX   MOVE PREFIX ORDERS       88206
COMMDL5L MVI   PREFIXLN(R14),C' '                                88206
         MVC   PREFIXLN+1(131,R14),PREFIXLN(R14)  CLEAR THE LINE 88206
         MVC   PREFIXLN+27(80,R14),0(R1)  MOVE ONE LINE OF TEXT  90010
         LA    R14,132(,R14)   ADVANCE ONE LINE OF OUTPUT        88206
         LA    R1,80(,R1)    ADVANCE ONE LINE OF INPUT           88206
         BCT   R0,COMMDL5L   DO FOR ALL LINES                    88206
         MVC   PREFIXLN(SUFFIXLN,R14),SUFFIX  TRAILER            88206
         LA    R15,PREFIXLN+SUFFIXLN+24*132  SCREEN SIZE         88206
         B     COMSTLEN      JOIN COMMON                         88206
         SPACE 1                                                 88179
COMNSCR  LA    R14,IOBASE+1  SET INPUT BUFFER ADDRESS            88179
         ST    R14,GPDATAP   SET BUFFER START                    88179
         LR    R1,R0         STARTING ADDRESS                    88179
         MVI   IOBASE,X'FF'  SET SCAN STOPPER                    88179
         LA    R0,24         NUMBER OF LINES TO DO               88179
         LA    R2,80         SET LINE LENGTH                     88179
COMNSLUP MVC   0(80,R14),0(R1)  MOVE ONE LINE                    88179
         AR    R1,R2         NEXT INPUT LINE                     88179
         CLC   0(79,R14),1(R14)  ALL BLANK (OR SOMETHING?)       88179
         BE    COMNSLIP      YES; SKIP IT                        88179
         AR    R14,R2        NEXT LINE                           88179
COMNSLED BCTR  R14,0         BACKSPACE 1                         88179
         CLI   0(R14),C' '   TRAILING BLANK ?                    88179
         BE    COMNSLED      YES; DO IT AGAIN                    88179
         MVC   1(2,R14),=X'0D25'  MAKE CR/LF                     88179
         LA    R14,3(,R14)   NEXT AVAILABLE POSITION             88179
COMNSLIP BCT   R0,COMNSLUP   DO NEXT LINE                        88179
         AIF   (NOT &MVSXA OR '&LOCAL' NE 'PID').NOBROAD         93038
         LTR   R3,R3         STATUS DISPLAY ?                    93038
         BZ    COMNENTR      NO; MAKE PROMPT                     93038
         LR    R2,R14        JUST IN CASE                        93038
         AM31  ,             GET HIGH AGAIN                      93038
         MVC   4(73,R2),EXRBROAD+2  MOVE BROADCAST MESSAGE       93038
         CLI   4(R2),C' '    ANY TEXT, EVER ?                    93038
         BL    COMNENTR      NO; GET OUT                         93038
         MVC   0(4,R2),=C'==> '  NOTE BLANK AT +3                93038
         CLC   3(73,R2),4(R2)  ALL BLANK ?                       93038
         BE    COMNENTR      YES; GET OUT                        93038
         SLR   R3,R3         ONLY ONCE                           93038
         LA    R0,1          SET FOR ONE MORE                    93038
         LA    R14,73(,R2)   POINT TO END OF LINE                93038
         B     COMNSLED      DELETE TRAILING BLANKS              93038
         SPACE 1                                                 93038
COMNENTR MVC   0(8,R14),=C'ENTER ? '                             88179
         LA    R15,8(,R14)                                       88179
         S     R15,GPDATAP   LESS START OF BUFFER                88179
COMSTLEN STH   R15,GPDATAL   SET BUFFER LENGTH                   88179
         AM24  ,             RESET POSSIBLE 31-BIT MODE          93038
         MODESET KEY=NZERO   RESET KEY ZERO                      93038
         LA    R0,MSG19                                          88179
         B     SENDMSG       SEND CONVERTED SCREEN               88179
         SPACE 1                                                 88172
NOT24    AM24  ,             GET DOWN                            93038
         MODESET KEY=NZERO                                       93038
NOTFOUND BAL   R14,INITMSG4  CLEAR MESSAGE LINE                  87193
         MVC   0(22,R2),=C'SUBCOMMAND UNAVAILABLE'               87193
SENDMSG4 LA    R0,MSG04      REQUEST MESSAGE 4                   88185
         B     SENDMSG       AND GET OUT                         88185
         SPACE 1                                                 87193
EXRESMOD DC    0D'0',CL8'EXHRDFL3'  WORD ALIGNMENT THE HARD WAY  87193
PREFIX   $IO   ERASE/WRITE                                       87193
         $WCC  (RESETKBD,MDT)                                    87193
         $SBA  (1,1)                                             87193
PREFIXLN EQU   *-PREFIX                                          87193
SUFFIX   $SBA  (1,1)         FUNNY WRAP-AROUND                   87193
         $SF   (UNPROT)                                          87193
         $IC                                                     87193
         DC    CL8' '        USER INPUT                          87193
         $SF   (PROT)                                            87193
SUFFIXLN EQU   *-SUFFIX                                          87193
         TITLE '*********  N E T S O L  -  TPEND EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * VTAM IS CLOSING DOWN                                 *
*                                                                     *
*              * OPERATOR ISSUED A HALT COMMAND                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - REASON CODE FOR SHUTDOWN                      *
*                                                                     *
*        THIS PARAMETER LIST IS NOT USED BY NETSOL                    *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
TPEND    XHEAD ,                                                 90141
         OI    UFLAGS,SHUTDOWN+UFGIGNER  TELL OTHER EXITS OF SHUTDOWN
         SPACE 1
         POST  FINISECB                POST MAINLINE'S ECB
         SPACE 1
         SLR   R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN FROM IRB
         TITLE '*********  N E T S O L  -  LOGON EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * A TERMINAL IS LOGGED ON VIA VARY TO NETSOL           *
*                                                                     *
*              * A TERMINAL IS RETURNED TO NETSOL BY AN APPLICATION.  *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - POINTER TO SYMBOLIC TERMINAL NAME             *
*              WORD 2 - RESERVED                                      *
*              WORD 3 - LENGTH OF LOGON DATA.                         *
*              WORD 4 - READ-ONLY RPL POINTING TO LOGON CINIT.        *
*              WORD 5 - CID OF PENDING SESSION.                       *
*                                                                     *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
LOGON    MHEAD ,                                                 90141
         L     R6,20(,R1)    GET THE CID                         88188
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
***********************************************************************
*        NOW ADD THE TERMINAL NAME TO THE TERMINAL TABLE AND RETURN   *
*        THE ENTRY'S ADDRESS SO IT CAN BE PLACED IN THE NIB USER      *
*        FIELD. SUBSEQUENT OPERATIONS USING AN RPL WILL HAVE THE      *
*        RPLUSFLD UPDATED WITH THE TERMINAL TABLE ADDRESS FROM THE    *
*        NIB. IF ENTRY ALREADY EXISTS IN TABLE (SECOND LOGON, ETC.),  *
*        THEN WE RESET THE TERMINALS STATUS. A COUNT IS MAINTAINED    *
*        OF THE NUMBER OF LOGONS FOR A GIVEN TERMINAL. THE TERMINAL   *
*        TABLE CAN BE EXPANDED IF NEEDED TO PROVIDE ADDITIONAL STATS. *
***********************************************************************
         SPACE 1
         L     R2,4(,R1)               -> TERMINAL NAME PASSED BY LOGON
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    NOTABLE                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
TABLOOP  CLC   0(8,R2),TERMNAME        MATCH THE NAME ?
         BE    FOUNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,TABLOOP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BNL   TOOSMALL                YES, ABEND USER 0008
         SPACE 1
NOTABLE  ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),0(R2)       COPY NAME ACROSS
TESTRANG LM    R15,R1,TERMTEND  GET RANGE ENTRIES                88185
         SR    R15,R0        BACK-UP ONE                         88185
LOOKRANG BXH   R15,R0,FOUNDTAB  PATTERN ENTRY NOT LOCATED        88185
         CLC   TERMNAME,TERMNAME-TERMTABL(R15)  IN RANGE ?       88185
         BL    LOOKRANG      NO                                  88185
         CLC   TERMNAME,TERMNAM2-TERMTABL(R15) NOT TOO HIGH ?    88185
         BH    LOOKRANG      NO; TRY AGAIN                       88185
         MVC   TERMDAPL,TERMDAPL-TERMTABL(R15)  COPY APPLICATION 88185
         MVC   TERMFLG3,TERMFLG3-TERMTABL(R15)  LOGON FLAGS      88185
         MVC   TERMLPAD(L'TERMLPAD+L'TERMLPLN),TERMLPAD-TERMTABL(R15)
         SPACE 1
FOUNDTAB LA    R4,1                    GET LOGON COUNT           86127
         AH    R4,TERMLOGC             ADD 1 TO IT               86127
         STH   R4,TERMLOGC             SAVE IT BACK
         MVI   TERMFLAG,0              CLEAR LOGON STATUS FLAG
*        CLC   TERMCID,TERMNAME  PRE-ACF VTAM ?                  84142
*        BE    *+8           YES; LEAVE CID FIELD ZERO           84142
         ST    R6,TERMCID    SAVE PENDING CID FOR INQUIRE        88188
         SPACE 1
***********************************************************************
*        OBTAIN AN ASYNC RPL/NIB AND PREPARE FOR OPNDST               *
***********************************************************************
         SPACE 1
         BAL   R14,GETRPL              OBTAIN AN RPL
         LA    PTRNIB,NIBSTART         -> NIB WITHIN RPL
         OI    EXITFLAG,LOGONEX        MARK LOGON EXIT ENTERED
         MVC   NIBSYM(8),TERMNAME      MOVE IN SYMBOLIC NAME
         MVC   NIBCID,TERMCID  ALSO SET PENDING ID               89121
         XC    NIBLMODE,NIBLMODE  KILL LOGMODE                   89121
*DO NOT  CLI   VTAMVERL,C'2'  VTAM 3 OR HIGHER ?                 92221
*NEED    BNH   INQUMODE      NO                                  92221
*THIS    MVC   NIBLMODE,=CL8' '  USE BLANKS INSTEAD OF ZEROES    92221
INQUMODE MVC   MODENAM,NIBLMODE  SAVE FOR USER OVERRIDE          92221
         ST    R3,NIBUSER              NIB USER -> TERM TABLE ADDRESS
         ST    R3,RPLUSFLD             SAVE FOR ERROR ON OPNDST
         ST    PTRRPL,TERMCRPL         SAVE A(RPL) IN TTE
         SPACE 1
***********************************************************************
*        OBTAIN THE SESSION PARAMETERS WITH THE INQUIRE MACRO         *
***********************************************************************
         SPACE 1
INQUIRSE L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         XC    SESSPARM,SESSPARM       ZERO SESSION PARM WORK AREA
         ST    R3,SYNUSFLD             SAVE A(TTE) IN RPL USER FLD
         L     R2,TERMCID              LOAD CID FOR INQUIRE
         OI    MACFLAG2,INQSES         INDICATE INQUIRE(SESSPARM)
         OI    MFLAGS2,INQSESS
         AIF   (&MVSSP OR &MVSXA).NEWINQ                         84142
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=SESSPARM,                                         X
               NIB=(PTRNIB),                                           X
               AREA=SESSPARM,                                          X
               AREALEN=L'SESSPARM                                84142
         AGO   .COMINQ                                           84142
.NEWINQ  INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=SESSPARM,                                         X
               ARG=(R2),                                               X
               AREA=SESSPARM,                                          X
               AREALEN=L'SESSPARM
.COMINQ  NI    MFLAGS2,255-(INQSESS)   RESET ERREXIT FLAG
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(SESSPARM)                                *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO CINIT QUEUED                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABC(R15)            CHECK VALID ACTIONS
ERRTABC  B     R0CHKC               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         BAL   R7,SNOCCUR           C
         B     INQUIRSE            10  REISSUE.  NO NEED TO
         B     FREERPL             14  TERMINAL GONE. END REQUEST
         SPACE 1
R0CHKC   DS    0H
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*        USE BIND PARAMETERS JUST OBTAINED TO DETERMINE TERMINAL TYPE *
***********************************************************************
         SPACE 1
         LA    R2,SESSPARM             ESTABLISH ADDRESSABILITY
         USING ISTDBIND,R2               TO BIND PARAMETERS
         ICM   R7,15,@MODETAB  IS THERE A MODE TABLE ?           88213
         BZ    LOGNOMOD      NO                                  88213
*KILL*   CLI   TERMMODE,C' ' PRIOR MODE FOUND ?                  88220
*KILL*   BH    LOGNOMOD      YES; DON'T SEARCH AGAIN             88220
*KILL*   SLR   R15,R15       ZERO IC                             88213
*KILL*   LA    R14,8(,R7)    POINT TO FIRST ENTRY                88213
*KILL*   LH    R0,2(,R7)     LOAD NUMBER OF ENTRIES (AT LEAST ONE!)
*OGDOMOD CLC   ISTDBIND(BINTSU-ISTDBIND),8(R14)  MATCH ?         88311
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   CLC   BINSRUSZ(2),8+BINSRUSZ-ISTDBIND(R14)  SAME SIZE ? 88220
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   CLC   BINLUP(BINRSV15+1-BINLUP),8+BINLUP-ISTDBIND(R14)  88220
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   MVC   TERMMODE,0(R14)  COPY LOGMODE NAME                88213
*KILL*   B     LOGNOMOD                                          88213
*OGUPMOD IC    R15,BINUSEL-ISTDBIND+8(,R14)  GET USER LENGTH     88213
*KILL*   LA    R14,8+BINDSIZE(R14,R15)  NEXT ENTRY               88213
*KILL*   BCT   R0,LOGDOMOD   TRY AGAIN                           88213
LOGNOMOD CLI   BINLUP,BINLUP2C         LU TYPE 2 (3270) ?
         BE    LU3270                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP1C         LU TYPE 1 (3767) ?
         BE    LU3767                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP0C   IF NOT LU TYPE 0
         BNE   BADLU                     THEN ASSUME UNSUPPORTED DEVICE
         CLI   BINFM,X'02'               ELSE IF FM=02
         BE    LU3270                         THEN ASSUME 3270
         CLI   BINFM,X'03'                    IF FM=03
         BE    LU3767                         THEN ASSUME 3767
         B     BADLU                          ELSE DEVICE NOT SUPPORTED
LU3270   CLI   BINBDESC,BINBFSZF  CHECK BUFFER SIZE              88206
         BNL   LU70PRI       TEST PRIMARY SCREEN SIZE            88206
         CLI   BINBDESC,5    MODEL 5 OR SMALLER ?                88206
         BE    LUMDL5        GO TO 27*132                        88206
         BH    BADLU         INVALID                             88206
         CLI   BINBDESC,1    12*80 (OR 24*40) ???                88206
         BE    BADLU         YES; NOT SUPPORTED                  88206
*        NOTE THAT =0 AND =2 BOTH MAY APPEAR FOR 24*80           88206
         B     LU3270N       SET FOR 'NORMAL' SCREEN             88206
LU70PRI  OI    TERMFLAG,LETMODE ALLOW USER LOGMODE MODIFICATION  88207
         CLI   BINBFRAR,27   27*132 ALTERNATE ?                  88206
         BNE   LU3270N       NO; USE NORMAL SCREENS              88206
LUMDL5   L     R1,=A(DDTMDL5)  SET FOR NORMAL MODE               88206
         B     STORDDT       STASH IT                            88206
LU3270N  L     R1,=A(DDT3270)  SET FOR BASIC MODE                88206
         AIF   (NOT &MVSSP AND NOT &MVSXA).NOTSEDS               84142
         TM    BINDFLAG,BINSEDS        3270 WITH EXTENDED FUNCTION?
         BZ    STORDDT       NO; USE BASIC MODE                  88206
         AGO   .NOTSEDT                                          84141
.NOTSEDS ANOP  ,                                                 84141
BINLUP0C EQU   0             LU TYPE 0                           84141
         TM    BINDFLAG,X'80'    EXTENDED DATASTREAM OPTION ?    88206
         BZ    STORDDT       NO                                  88206
.NOTSEDT L     R1,=A(DDT3270E)         PT AT DDT3270E           85327
         B     STORDDT                 BR TO STORE IN TTE
LU3767   L     R1,=A(DDT3767)          PT AT DDT FOR 3767       85327
         MVI   BINCMNP2,X'80'  SET HALF-DUPLEX FLIP-FLOP         86168
         MVI   BINPRIP,BINPCHN+BINPCHNR+BINPSEB                  86168
         MVI   BINSECP,BINSCHN+X'10'   EXC. RESP. ONLY, NO END   86168
         MVI   BINCMNP,BINBRAK+BINBKTR                           86168
         MVI   BINUSEL,4     SET USER DATA LENGTH                86168
         MVC   BINUSE(4),=X'FF000020'  NTO INST. MANUAL, APP. D  86168
STORDDT  ST    R1,TERMDDT              STORE A(DDT) IN TTE
         TM    BINCMNP2,BINHDXFF  CONVERSATIONAL DEVICE ?        90135
         BZ    *+8           NO                                  90135
         OI    TERMFLAG,FLIPFLOP  YES; SET IT                    90135
         TM    BINCMNP2,BINHDXC  CONTENTION MODE ?               90135
         BZ    *+8           NO                                  90135
         OI    TERMFLAG,CONTENT  YES; SET IT                     90135
         IC    R14,BINPRUSZ  GET PRIMARY RU SIZE                 86143
         LR    R1,R14        SAVE                                86143
         LA    R0,BINRUSZM   GET MANTISSA MASK                   86143
         NR    R14,R0                                            86143
         SRL   R14,4         MAKE MANTISSA                       86143
         LA    R0,BINRUSZE   GET EXPONENT MASK                   86143
         NR    R1,R0         ISOLATE EXPONENT                    86143
         LA    R15,1         MAKE BASE                           86143
         SLL   R15,0(R1)     MAKE 2**E                           86143
         MR    R14,R14       M*2**E                              86143
         ST    R15,TERMRUSZ  STASH RU SIZE MAXIMUM               86143
         DROP  R2
*        RESET LOCAL OPTIONS                                     88179
*TSSO*   CLC   TERMDDT,=A(DDT3767)  NTO DEVICE ?                 88199
*TSSO*   BNE   *+8           NO                                  88199
*TSSO*   OI    TERMFLG3,TFLOF  UNTIL LATER - FORCE LOGOFF        88199
         TM    TERMFLG3,TFLOF  FORCED USER LOGOFF ?              88188
         BZ    LOGOTONE      NO; CHECK FOR SINGLE FORCED APPLID  88188
         BAL   R14,UTERMOF   LOG THE USER OFF                    88188
         OI    TERMFLG3,TFLOF  RESET THE LOGOFF                  88188
LOGOTONE TM    TERMFLG3,TFAPL  FORCED APPLICATION LOGON ?        88220
         BZ    LOGORHEA      NO                                  88220
*CONSIDR NI    TERMFLG3,TFREQ  RESET USER'S PRIVIES              88179
LOGORHEA L     R14,CVTPTR    GET THE CVT                         88185
         AIF   ('&LOCAL' NE 'PID').NOLOGEX                       92300
         ICM   R14,15,CVTUSER-CVTMAP(R14)  LOCAL EXTENSION?      88185
         BZ    LOGOLOGY      NO                                  88185
         LA    R4,UCLOUD-USERCVT-(A$LNEXT-A$LOUD)(R14) LINK-PTR  88185
LOGOLEGO ICM   R4,15,A$LNEXT-A$LOUD(R4)  ANOTHER ?               88185
         BZ    LOGOLOGY      NO                                  88185
         CLC   TERMNAME,A$LTERM-A$LOUD(R4)  SAME ID ?            88185
         BNE   LOGOLEGO                                          88185
         ST    R4,TERMLOUD   SAVE IT                             88185
         NI    TERMFLG3,TFREQ+TFLOF  RESET LOGON AND PRIVIES     88197
         TM    TERMFLG3,TFLOF  IS LOGOFF FORCED ?                88197
         BNZ   LOGOLOGY      YES; KILL LOUD                      88197
         TM    A$LFLG1-A$LOUD(R4),A$LFGOK  VALID USER ?          88185
         BZ    LOGOLOGY                                          88185
         BAL   R14,UTERM     SET USER'S PRIVILEGES               88185
         CLI   TERMAPPL,0    BACK FROM OTHER APPLICATION ?       88185
         BH    LOGOLOGY      YES; LEAVE AS IS                    88185
         BAL   R14,UTERMAP   TEST FOR FORCED APPLICATION AND SET IT
LOGOLOGY ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    LOGOLOUD      NO                                  88179
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM AREA
         MVC   A$SID,=C'A$RB'                                    88207
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,A$SONL,A$SAKEY+A$SBUILD) 88207
*                            LOGOFF SESSIONS, NOT USER           88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88207
         LA    R1,A$SVCRB                                        88207
         SVC   249           CANCEL SESSIONS; KEEP USER          88179
         TM    TERMFLG3,TFLOF  FORCED LOGOFF ?                   88188
         BZ    LOGOLOUD      NO                                  88188
         BAL   R14,UTERMOF   RESET EVERYTHING AGAIN              88188
         MVI   A$SFCTN,A$SFVALD  VALIDATE USER                   88207
         MVI   A$SCNTL,A$SUKEY+A$SBUILD                          88207
         XC    A$SUID(L'A$SUID+L'A$SACCT),A$SUID  KILL USER AND ACCT
         LA    R1,A$SVCRB    ...BUT USERID IS GARBAGE            88207
         SVC   249           ...SO THIS CALL KILLS THE DATA      88188
.NOLOGEX ANOP  ,                                                 91195
LOGOLOUD NI    TERMFLG3,255-TFLOF  LOGOFF REQUEST PROCESSED      88179
         SPACE 1
***********************************************************************
*    ISSUE AN OPNDST TO CONNECT NETSOL TO LOGGED-ON TERMINAL.         *
***********************************************************************
         SPACE 1
OPENDST  OI    MACFLAGS,OPNSPEC        INDICATE DOING AN OPNDST(SP)
         OI    MFLAGS,OPNDSPEC
         L     R7,=A(OPENEND)  GET EXIT ADDRESS                  90141
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(ACCEPT,SPEC,NQ),                                 X
               EXIT=(R7),    OPENEND                                   *
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST                                           *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    OPENDST                 YES. REISSUE
         LTR   R15,R15                 CLSDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1                                                 84142
         CLC   TERMNAME(4),TERMCID  PRE-ACF VTAM ?               84142
         BNE   RETURN        NO; ASSUME THE BEST                 84142
         MVC   TERMCID,RPLARG-IFGRPL(PTRRPL)  GET CID            84142
         MVC   NIBCID-NIBST+NIBSTART(4),TERMCID                  84142
         CLC   TERMCID,TERMNAME  CRUD ?                          84142
         BNE   RETURN        NO; WAIT FOR EXIT TO BE SCHEDULED   86012
         BAL   R7,SNOCCUR                                        84142
         TITLE '*********  N E T S O L  -  OPNDST END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE LOGON EXIT.                  *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
OPENEND  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(ACCEPT,SPEC)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15 R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    09    NODE DEACTIVATED                     14  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    01    OPNDST FAILED                        14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    05    PERMANENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   10    11    SDT FAILED                           14  00           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         OI    EXITFLAG,OPENEX         INDICATE IN OPNDST EXIT
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB1(R15)            CHECK VALID ACTIONS
ERRTAB1  B     R0CHK1               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         BAL   R7,SNOCCUR           C  CAN'T WRITE MSG IF NOT
*                                      CONNECTED
         B     OPENDST             10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK1   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    RETURN                  RETURN IF SO
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*        CID OF DEVICE JUST OPNDST'ED IS NOW IN ASYNC RPL.            *
*        SOLICIT THE DEVICE JUST CONNECTED.                           *
***********************************************************************
         SPACE 1
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         MVC   CID(4),RPLARG           SAVE CID IN RPL WORKAREA
         LA    PTRNIB,NIBSTART         ADDRESS NIB
         L     R3,NIBUSER              -> TERM TABLE ENTRY
*LOSE*   MVC   TERMCID,RPLARG          COPY THE CID TO TTE
         MVC   NIBCID,TERMCID  THIS GETS LOST?                   91105
         ST    R3,RPLUSFLD             SAVE A(TTE) IN RPL FOR MSG
         MVI   TERMFLG2,TOPEN          MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND          FIRST SEND TO THE DEVICE
         NI    SRPLEXT1,FF-RPLNIB      RESET SYNCHRPL
         SPACE 1                                                 90008
         AIF   ('&LOCAL' NE 'PID').NOLAUTF                       92300
***********************************************************************
*                                                                     *
*        LOCAL - IF L.O.U.D. LOGOFF FLAG IS SET, DISCONNECT USER      *
*                                                                     *
***********************************************************************
         ICM   R2,15,TERMLOUD  IS THERE A LOUD ?                 90008
         BZ    AUTLOOK       NO                                  90008
         TM    A$LFLG2-A$LOUD(R2),A$LFLOG  FORCED LOGOFF ?       90008
         BNZ   LOGOFCMD      YES; DO NASTY DISCONNECT            90008
.NOLAUTF SPACE 1
***********************************************************************
*        DO AUTOMATIC LOGON FOR THOSE TERMINALS THAT HAD A            *
*        DEFAULT LOGON SPECIFIED IN THE INITIALIZATION DATA SET.      *
***********************************************************************
         SPACE 1
AUTLOOK  TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88220
         BZ    AUTONTIM      NO; OLD CODE                        88221
         TIME  BIN           GET THE TIME                        88220
         C     R0,TERMDTIM   MORE THAN 1 MINUTE ELAPSED ?        88220
         BH    OPNDSTC       YES; GIVE USER CHANCE TO LOG OFF    88220
         B     AUTOTIME      ELSE TRY APPLICATION AGAIN          88179
AUTONTIM OC    TERMDAPL,TERMDAPL       IS THERE A DEFAULT APPL?  88179
         BZ    OPNDSTC                 NO  => GO WRITE MSG TO DEVICE
         TM    TERMFLG3,TFREQ  PRIOR LOGON REQUIRED ?            88179
         BZ    AUTOTIME      NO; CONNECT                         88179
         TM    TERMFLG3,TFLON  LOGGED ON ?                       88179
         BZ    OPNDSTC       NO; FORCE LOGON SCREEN              88179
         SPACE 1
***********************************************************************
*        TO PREVENT LOOPING IN AUTOMATIC LOGON, AUTO LOGON WILL       *
*        BE TERMINATED IF MORE THAN 3 LOGONS FOR A TERMINAL ARE       *
*        PROCESSED IN A 60 SECOND TIME PERIOD.                        *
***********************************************************************
         SPACE 1
AUTOTIME TIME  BIN                     GET TIME IN .01 SECS      88179
         C     R0,TERMDTIM             < 60 SECS SINCE LAST LOGON?
         BH    AUTONEW                 NO  => ASSUME NEW AUTO LOGON
         LH    R1,TERMDCNT             YES => INCR
         LA    R1,1(,R1)                        LOOP
         STH   R1,TERMDCNT                        COUNTER
         CH    R1,HEX2                 MORE THAN 3 TIMES IN 60 SECS?
         BNH   AUTOINQR                NO  => GO INQUIRE RE APPL STATUS
         MVC   KICKBACK+12(8),TERMNAME  SHOW TERMID              88221
         LA    R14,TERMAPPL  POINT TO FORCED APPLICATION ID      88224
         TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88224
         BNZ   *+8           YES; SHOW IT                        88224
         LA    R14,TERMDAPL   ELSE POINT TO FORCED TERM'S APPL   88224
         MVC   KICKBACK+33(8),0(R14)  SHOW REJECTING APPLID      88224
         WTO   MF=(E,KICKBACK)  LET OPSIE KNOW                   88221
         B     OPNDSTC                 YES => SKIP AUTO LOGON
AUTONEW  A     R0,=AL4(100*60)         ADD 60 SECS TO CURRENT TIME
         ST    R0,TERMDTIM  AND STORE FOR LATER
         XC    TERMDCNT,TERMDCNT       ZERO LOOP COUNTER
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE DEFAULT LOGON APPLICATION FOR THIS TERMINAL.              *
*                                                                     *
***********************************************************************
         SPACE 1
AUTOINQR LA    R14,TERMAPPL  POINT TO FORCED APPLICATION ID      88222
         TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88222
         BNZ   AUTOINQS      YES; TRY IT                         88222
         LA    R14,TERMDAPL   ELSE POINT TO FORCED TERM'S APPL   88222
AUTOINQS MVC   APPLID,0(R14) SET DESIRED APPLICATION NAME        88222
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 1
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREA OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         ST    R3,SYNUSFLD             SAVE A(TTE) IN SYNCHRPL USRFLD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14     HIGHEST POSSIBLE ACTION?            88185
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R15,R15       ERROR CODE ?                        87186
         BZ    ERRTAB3       NO                                  87186
         TM    UFLAGS,SHUTDOWN+UFGIGNER  RECYCLING ?             87186
         BNZ   OPNDSTC       SKIP AUTO LOGON                     87186
         B     ERRTAB3(R15)            CHECK VALID ACTIONS
ERRTAB3  B     R0CHK3               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     OPNDSTC              C  DEFAULT APPL IS UNKNOWN SO
*                                      SKIP AUTO LOGON
         B     INQUIREA            10  REISSUE.  NO NEED TO
*        B     INQBADAP      14  NETSOL/INTAB/VTAMLST OUT OF SYNCH
         SPACE 1                                                 88185
INQBADAP MVC   INQBADWO+4+17(8),TERMNAME                         88185
         MVC   INQBADWO+4+34(8),APPLID                           88185
INQBADWO WTO   'BCSC197 TERM=********, APPLID=******** UNDEFINED',     *
               ROUTCDE=(8),DESC=(7)                              88185
         B     OPNDSTC       WRITE 'CLOSED' SCREEN               88185
         SPACE 1
R0CHK3   CH    R0,=H'10'     APPLICATION IS PEEVED ?             93169
         BE    OPNDSTC       YES; MAKE 'CLOSED' SCREEN           93169
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2                                                 90120
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 2
         SLR   R15,R15                 CLEAR  REG 15
         ICM   R15,1,SYNFDB3 LOAD AND TEST FEED-BACK             88186
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
*OLD*    B     STATUS3(R15)            BRANCH IN TABLE
*OLD*S3  B     DAPACTIV             0  DO AUTO LOGON
*OLD*    B     OPNDSTC              4  SKIP AUTO LOGON
*OLD*    B     OPNDSTC              8  SKIP AUTO LOGON
*OLD*    B     OPNDSTC             12  SKIP AUTP LOGON
*OLD*    B     OPNDSTC             16  SKIP AUTO LOGON
         BNZ   OPNDSTC       SKIP AUTO LOGON                     88186
         SPACE 1
DAPACTIV L     R4,TERMLPAD   SET A(LOGON DATA)                   87131
         L     R2,TERMLPLN   SET L(LOGON DATA)                   87131
         TM    UFLAGS,SHUTDOWN+UFGIGNER  RECYCLING ?             87187
         BNZ   OPNDSTC       YES; BYPASS AUTO LOGON              87187
         TM    TERMFLG3,TPRIVY  PRIVILEGED TERMINAL ?            87187
         BNZ   FILLNIB       YES; PROCEED WITH LOGON             87187
         TM    UFLAGS,UFGSYS  RUNNING IN LOCKED MODE ?           87187
         BZ    FILLNIB       BRANCH INTO LOGON PROCESSING        87187
         SPACE 1
***********************************************************************
*        NO AUTO LOGON IS BEING DONE FOR THIS TERMINAL SO             *
*        GO SOLICIT LOGON INFORMATION FROM THE TERMINAL USER.         *
***********************************************************************
         SPACE 1
OPNDSTC  TM    UFLAGS,INITDLAY  DELAY DURING START-UP ?          87256
         BZ    NINITDLY      NO                                  87256
         STIMER WAIT,BINTVL==A(10)  WAIT 0.1 SECONDS             87256
NINITDLY B     OPSEND        JOIN RESEND COMMON CODE             86160
         TITLE '*********  N E T S O L  -  RECEIVE ANY EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN THE OUTSTANDING REC-ANY      *
*    COMPLETES.                                                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL USED FOR THE READ-ANY (IGFRPL)      *
*                                                                     *
*               THE CID FIELD OF THIS RPL HAS CID OF DEVICE           *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
RECEND   MHEAD ,                                                 90141
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
***********************************************************************
*        ISSUE NEW READ SO WE CAN HANDLE MORE THAN 1 LOGON AT A TIME. *
***********************************************************************
         SPACE 1
         LR    R7,R1                   SAVE R7 AROUND THE REC ANY CODE
         BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE A RECEIVE (ANY)
         SPACE 1
         LR    PTRRPL,R7               RESTORE THE INPUT RPL @
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         ICM   R3,15,RPLUSFLD          -> TTE                    92273
         BZ    RETURN        SHOULD NOT HAVE HAPPENED            92273
         ST    R5,TERMCRPL             SAVE A(RPL)
         OI    EXITFLAG,RECEX
         SPACE 1
***********************************************************************
*        SAVE CID OF DEVICE FROM RPL ARG FIELD.                       *
*        GET LENGTH OF RECORD READ. THIS WILL BE DECREMENTED          *
*        IF DEVICE CONTROL CHARACTERS ARE REMOVED BEFORE INTRPRET.    *
*                                                                     *
*        NOTE: INFO IN RPL MAY NOT BE VALID IF CHECK RETURNS          *
*              AN ERROR.                                              *
***********************************************************************
         SPACE 1
         MVC   CID(4),RPLARG           GET CID FROM RPL
         MVC   RECLEN(4),RPLRLEN       GET RPL RECORD LENGTH
         SPACE 1
         OI    MFLAGS,RECA             TELL ERREXIT THAT ERRORS
*                                       ARE FOR REC(ANY)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
         NI    MFLAGS,255-(RECA)       RESET READ INDICATOR
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CHECK OF READ (ANY)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. CONDITION ON INCOMING MESSAGE                   *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     03        FUNCTION ¬ SUPPORTED08  00          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    I/O ERROR.  DEVICE NOT USABLE         08  00          *
*   0C    02    TEST REQUEST SET (LOSTTERM)           14  00          *
*   0C    07    CONNECT REC. IN PROGRESS              14  00          *
*   0C    08    LU RESTARTED (LOSTTERM)               14  00          *
*   0C    0A    REQU. CANCEL. BY RESETR               SNOCCUR         *
*   0C    0B    CANCELED BY CLSDST                    14  00          *
*   0C    0C    REQUEST CANCEL. BY CLEAR              08  04          *
*   10    05    PERMANENT PATH FAILURE                08  00          *
*   10    07    REQUEST CANCEL BY VARY (LOSTTERM)     14  00          *
*   10    09    TERMINATE SELF OR LOGOFF (LOSTTERM)   14  00          *
*   10    0F    BUFFERS FILLED (LOSTTERM)             14  00          *
*   10    10    TERMINATE SELF COMMAND                08  04          *
*   10    0C    DIAL-IN DISCONNECT                    08  00          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    32    REQUEST INVALID FOR SPECIFIED DEVICE  08  00          *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX18               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB2(R15)            CHECK VALID ACTIONS
ERRTAB2  B     R0CHK2               0  VALID DATA FROM READ?
         BAL   R7,SNOCCUR           4
         B     RELOPNB              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     RESEND               10 REISSUE
         B     FREERPL              14
         B     RESEND               18
         SPACE 1
RELOPNB  LTR   R0,R0                   DO OPNDST AFTER CLSDST ?
         BZ    RELEASE
RELOPNS  OI    FLAGS,RELOPND           SAY WE WANT TO REOPEN AFTER RELS
         B     RELEASE
         SPACE 1
R0CHK2   DS    0H
         LTR   R0,R0
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         TM    RPLCNTDC,RPLLUS         DID WE RECEIVE LUSTAT ?
         BO    LUSTATUS                YES, GO HANDLE IT
         TM    RPLCNTDC,RPLSIGNL  USER HIT ATTENTION ?           88304
         BNZ   RESENDSG      YES; SEND AGAIN                     89338
         ICM   R2,15,RECLEN  ANY INPUT AT ALL ?                  86159
         BNZ   R0CHK2L1      YES                                 86159
         CLC   =A(DDT3767),TERMDDT  NTO DEVICE ?                 86159
         BE    FREERPL       YES; IGNORE, AND DON'T SET LOGPROC  86159
         SPACE 1
R0CHK2L1 TM    TERMFLAG,LOGPROC        HAS IMPATIENT USER ISSUED
*                                      A SECOND LOGON SEQUENCE WHILE
*                                      THE FIRST IS IN PROGRESS?
         BO    FREERPL                 YES => IGNORE THIS REQUEST
         OI    TERMFLAG,LOGPROC        NO  => SET LOGON BEING PROCESSED
         SPACE 1
         LA    R6,IOAREA               POINT TO DATA RECEIVED
         LTR   R2,R2         ANY TEXT RECEIVED ?
         BZ    RESENDAP      NO; SEND INVITATION AGAIN           88179
         LA    R3,L'IOAREA             COMPARE THE RECLEN WITH
         CR    R2,R3                    THE READ BUFFER LENGTH.
         BNH   GOEDIT                  BUFFER LENGTH GREATER
*                                       THAN INPUT RECORD.
         LR    R2,R3                   ONLY THE FIRST 80 BYTES
*                                       WILL BE READ IN.
         SPACE 1
***********************************************************************
*        BRANCH TO INPUT EDIT ROUTINE FOR THE APPROPRIATE DEVICE TYPE.*
***********************************************************************
         SPACE 1
GOEDIT   DS    0H
         L     R3,RPLUSFLD             LOAD A(TTE)
         L     R9,TERMDDT              LOAD A(DDT FOR DEVICE)
         L     R15,DDTEDIT             LOAD A(DEVICE EDIT ROUTINE)
         BR    R15                     GO EDIT INPUT
         TITLE '*********  N E T S O L  -  INPUT EDIT ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*        S32EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3270       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
S32EDIT  DS    0H
         CLI   0(R6),CLEARKEY          IS IT 'CLEAR' KEY ?
         BE    RESENDAP      YES; ASK FOR INPUT AGAIN            88179
         CLI   0(R6),PA1KEY  PA1 - LOGOFF REQUEST ?              88220
         BE    LOGOFCMD      YES; DO IT                          88220
         SPACE 1
***********************************************************************
*        NOT 'CLEAR' KEY, CHECK FOR OTHER FUNCTION KEY DEPRESS.  IF   *
*        IT IS A FUNCTION KEY THE DATA WILL BE PASSED DIRECTLY TO     *
*        INTERPRET, OTHERWISE THE DATA POINTER WILL BE UPDATED TO     *
*        SKIP THE 3270 DEVICE CONTROL SEQUENCE.                       *
***********************************************************************
         SPACE 1
S32PFK   DS    0H
         MVI   1(R6),C' '    CLEAR CURSOR ADDRESS                85328
         MVI   2(R6),C' '    DITTO                               85328
         SLR   R0,R0                                             85328
         IC    R0,0(,R6)     LOAD COMPARE BYTE                   85328
         LA    R14,S32AIDS   LOAD AIDS TABLE                     85328
         LA    R15,S32AIDN   GET NUMBER OF ENTRIES               85328
S32PFKLP CLM   R0,1,0(R14)   MATCH ?                             85328
         BL    S32PFKUP      NO                                  85328
         CLM   R0,1,1(R14)   IN RANGE ?                          85328
         BH    S32PFKUP      NO                                  85328
         IC    R15,0(,R14)   GET START OF RANGE                  85328
         SR    R0,R15        GET OFFSET FROM START OF RANGE      85328
         IC    R15,2(,R14)   GET DESIRED VALUE                   85328
         AR    R0,R15        MAKE PFK NUMBER                     85328
         MVC   0(6,R6),=CL8' '  CLEAR CURSOR, ATB BYTES          87362
         C     R0,=F'10'     ONE OR MORE ?                       85328
         BNL   S32PFK10      MORE                                85328
         STC   R0,0(,R6)     STASH BACK                          85328
         B     S32PFK00      MAKE NUMERIC                        85328
S32PFK10 SRDA  R0,32         PREPARE FOR DIVIDE                  85328
         D     R0,=F'10'     DIVIDE                              85328
         STC   R0,1(,R6)                                         85328
         STC   R1,0(,R6)                                         85328
         OI    1(R6),C'0'    MAKE UNITS NUMERIC                  85328
S32PFK00 OI    0(R6),C'0'    MAKE TENS OR UNITS NUMERIC          85328
         B     INTRPRET      GO TO PFK LOOKUP                    85328
S32PFKUP LA    R14,3(,R14)   BUMP TO NEXT TABLE ENTRY            85328
         BCT   R15,S32PFKLP  TRY IT                              85328
         SPACE 1
S32ENTER DS    0H
         CLI   0(R6),ENTERKEY          IS IT THE ENTER KEY?
         BNE   BADINPUT
         LA    R3,3                    USER MIGHT HAVE HIT
         CR    R2,R3                   ENTER KEY ONLY BUT NO LOGON
         BNH   RESENDAP                IF SO, REWRITE THE SCREEN 88179
         SPACE 1
         LA    R1,6
         AR    R6,R1                   BYPASS SBA 3270 CONTROL + ORDER
         SR    R2,R1                   ALLOW FOR DECREASE
         BNP   BADINPUT      INVALID IF NOTHING LEFT
         B     INTRPRET                GO INTERPRET LOGON SEQ
         SPACE 1                                                 85328
S32AIDS  DC    X'F1,F9,01'   PFK1-9 => 1 TO 9                    85328
         DC    X'7A,7C,0A'   PFK10-12                            85328
         DC    X'C1,C9,0D'   PFK13-21 (NO LONGER FOLDED)         87225
         DC    X'4A,4C,16'   PFK22-24 (NO LONGER FOLDED)         87225
S32AIDN  EQU   (*-S32AIDS)/3   NUMBER OF ENTRIES                 85328
         SPACE 1                                                 85328
***********************************************************************
*                                                                     *
*        S37EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3767       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
S37EDIT  LTR   R0,R2         ANY INPUT ?                         86152
         BNP   RESENDAP      HUH ?                               88179
         LR    R14,R6        GET TEXT START                      86152
         LR    R15,R6        DITTO                               86152
         SLR   R3,R3         CLEAR FOR CR                        86152
         LA    R1,X'40'      CONSTANT BLANK                      86152
S37EDLUP IC    R3,0(,R14)    GET NEXT CHARACTER FOR INSPECTION   86152
         CR    R3,R1         PRINTABLE CHARACTER ?               86152
         BNL   S37EDPUT      YES; PROCESS IT                     86152
         CLI   0(R14),X'16'  BACKSPACE ?                         86152
         LR    R3,R1         BUT REPLACE BY BLANK                86152
         BNE   S37EDPUT      NO; JUST PROCESS AS BLANK           86152
         STC   R1,0(,R14)    CLEAR IT OUT                        86152
         CR    R15,R6        POSSIBLE TO BACK-UP ?               86152
         BNH   S37EDB14      NO; JUST BUMP 14                    86152
         BCTR  R15,0         BACK-UP ONE SPACE                   86152
         STC   R1,0(,R15)    CLEAR OLD BYTE                      86166
         B     S37EDB14      AND AVOID R15 INCREMENTATION        86166
S37EDPUT STC   R1,0(,R14)    CLEAR THE SOURCE LOCATION           86152
         STC   R3,0(,R15)    STORE THE NEW BYTE                  86152
         LA    R15,1(,R15)   SET NEW OUTPUT LOCATION             86152
S37EDB14 LA    R14,1(,R14)   SET NEW INPUT                       86152
         BCT   R0,S37EDLUP   REPEAT FOR ALL                      86152
         B     INTRPRET      PROCESS                             86152
         TITLE '*********  N E T S O L  -  COMMAND LOOKUP'
***********************************************************************
*                                                                     *
*    SCAN NETSOL'S COMMAND TABLE FOR AN ENTRY MATCHING THE LOGON DATA *
*    ENTERED FROM THE TERMINAL.  IF A MATCH IS FOUND, THE SPECIFIED   *
*    CMD ROUTINE IS BRANCHED TO. OTHERWISE, AN ERROR MESSAGE IS       *
*    WRITTEN TO THE TERMINAL INDICATING INVALID LOGON DATA.           *
*                                                                     *
*    THE COMMAND CAN BE EITHER:                                       *
*           - A REQUEST FOR LOGON TO A VTAM APPLICATION PROGRAM, OR   *
*           - A REQUEST FOR A SERVICE FROM NETSOL, SUCH AS, LOGOFF    *
*                                                                     *
*    INPUT :                                                          *
*        R2 - LENGTH OF LOGON DATA                                    *
*        R6 - A(LOGON DATA IN DATA BUFFER)                            *
*                                                                     *
*    OUTPUT:                                                          *
*        R0 - ERROR MSG # IF NO ENTRY FOUND                           *
*        R1 - A(MATCHING COMMAND TABLE ENTRY)                         *
*                                                                     *
***********************************************************************
         SPACE 1
BADINPUT LA    R0,MSG02                INPUT NOT RECOGNISED
         B     SENDMSG
         SPACE 1
INTRPRET LTR   R2,R2         ANY INPUT ?                         86146
         BNP   RESENDAP      NO; TRY AGAIN                       88179
         CLI   0(R6),C' '    LEADING NON-BLANK ?                 86152
         BH    INTRNBLK      YES                                 86152
         LA    R6,1(,R6)                                         86152
         BCTR  R2,0                                              86152
         B     INTRPRET      KEEP SPACING                        86152
INTRNBLK STC   R2,DATASEQL             SAVE LOGON DATA LENGTH    86152
         ST    R6,DATAPTR              SAVE A(LOGON DATA)
*        CONVERT LOGON DATA TO UPPER CASE
LOWTOUP  CLI   0(R6),X'11'   SBA ?                               88179
         BE    *+8           YES; LEAVE IT                       88179
         OI    0(R6),X'40'             MAKE CURRENT CHAR UPPER CASE
         LA    R6,1(R6)                GET
         BCT   R2,LOWTOUP                  NEXT CHAR
         SPACE 1                                                 88206
         IC    R2,DATASEQL   RELOAD LENGTH                       88206
         L     R6,DATAPTR    AND ADDRESS                         88206
         LR    R15,R6        COPY START                          88206
         LR    R0,R2         COPY LENGTH                         88206
         SH    R0,=H'8'      LENGTH OF 'LOGMODE()' MINUS 1       88206
         BNP   INTLOGMX      SKIP                                88206
INTLOGMD CLC   =C'LOGMODE(',0(R15)  LOGMODE REQUEST ?            88206
         BNE   INTLOGMN      NO                                  88206
         L     R3,RPLUSFLD   GET TERM ENTRY                      88207
         TM    TERMFLAG,LETMODE ALLOWED TO CHANGE LOGMODE ?      88207
         BZ    BADINPUT      NO; FAIL                            88207
         MVI   0(R15),C' '   WIPE IT                             88206
         MVC   1(7,R15),0(R15)  CLEAR ALL                        88206
         MVC   MODENAM,0(R15)  CLEAR NAME                        88206
         LA    R14,MODENAM   SET DESTINATION                     88206
         LA    R1,8          MAKE SURE OF TRAILING ')'           88206
INTLOGMF CLI   8(R15),C')'   END OF NAME ?                       88206
         BE    INTLOGMR      YES; BLANK AND RESTART              88206
         MVC   0(1,R14),8(R15)  COPY IT                          88206
         MVI   8(R15),C' '   CLEAR IT                            90127
         LA    R14,1(,R14)                                       88206
         LA    R15,1(,R15)                                       88206
         BCT   R0,*+8        OK IF MORE                          88206
         B     BADINPUT      SYNTAX ERROR (MSG 02)               88206
         BCT   R1,INTLOGMF   DO UNTIL )                          88206
INTLOGMR CLI   8(R15),C')'   TRAILING PARENTHESIS ?              88206
         BNE   BADINPUT      NO; ERROR                           88206
         MVI   8(R15),C' '   CLEAR IT                            88206
*DEFER*  CLC   TERMMODE(6),MODENAM  SAME MAJOR TYPE ?            88213
*DEFER*  BE    INTRPRET      YES; HONOR IT                       88213
*DEFER*  TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88213
*DEFER*  BZ    BADINPUT      NO; REJECT THE REQUEST              88213
         B     INTRPRET      GO TO SKIP TRAILING BLANKS          88206
INTLOGMN LA    R15,1(,R15)                                       88206
         SH    R0,=H'1'                                          88206
         BP    INTLOGMD      TRY AGAIN                           88206
INTLOGMX DS    0H            END OF LOGMODE INSERTION            88206
*        SAVE DATA FOR USE IN CLSDST(PASS)
         LA    R14,DATASEQ   MOVE INPUT TO WORK AREA             88311
         LA    R15,L'DATASEQ                                     88311
         LR    R0,R6         'FROM' ADDRESS                      88311
         LR    R1,R2         'FROM' LENGTH                       88311
         MVCL  R14,R0        COPY (OR LEFT-ADJUST)               88311
         SPACE 1
*        SEARCH COMMND TABLE FOR MATCHING COMMAND TEXT
         SPACE 1
         L     R1,=A(PRELOGON)  GET PRE-LOGON COMMANDS           88179
         L     R3,RPLUSFLD   GET TERM ENTRY                      88179
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    CMDSCAN1      NO                                  88179
         TM    TERMFLG3,TFLON  LOGON COMPLETED ?                 88179
         BZ    CMDTABLP      NO; RESTRICT TO LOCAL COMMANDS      88179
CMDSCAN1 L     R1,=A(PRECMDTB)  SET FOR VTAM LOGON APPLID SCAN   88172
         B     CMDTABLP      AND DO NORMAL SCAN                  87186
CMDSCAN2 L     R1,=A(CMDTAB)                                     88172
CMDTABLP C     R1,=A(CMDTABND)  END OF TABLE ?                   88172
         BL    CMDTABL1      NO                                  88172
         LA    R0,MSG07                YES => LOAD ERROR MSG #
         L     R3,RPLUSFLD   GET TERM ENTRY                      88179
         CLI   TERMMSGX,MSG20  LOGON REQUEST LAST WRITE ?        89066
         BE    FAKEPSWD      YES; FAKE PASSWORD COMMAND          89066
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    SENDMSG       NO; SEND ERROR MESSAGE              88179
         TM    TERMFLG3,TFLON  LOGON COMPLETED ?                 88179
         BNZ   SENDMSG       YES; SEND MESSAGE                   88179
FAKEPSWD L     R1,=A(PSWCMD) SET FOR FAKE MATCH                  89066
         LA    R6,DATASEQ    POINT TO LOGON DATA AGAIN           88193
         SLR   R2,R2                                             88193
         IC    R2,DATASEQL   RESTORE THE LENGTH                  88193
         B     CMDSETUP      AND PROCESS LOGON                   88179
CMDTABL1 SLR   R2,R2         CLEAR FOR IC                        88185
         IC    R2,CMDTEXTL(R1)         LOAD LENGTH OF CMDTEXT    88185
         LA    R4,CMDTEXT(,R1)         PT @ CMDTEXT
         LA    R6,DATASEQ              PT @ LOGON DATA
CMDTABL2 CLC   0(1,R4),0(R6)           DOES THIS CHAR MATCH?
         BNE   CMDTABL3                NO => GET NEXT ENTRY
         LA    R4,1(,R4)               YES => COMPARE
         LA    R6,1(,R6)                        NEXT
         BCT   R2,CMDTABL2                        CHARACTER PAIR
*        TO ENSURE UNIQUENESS OF CMDS, COMMAND TEXT MUST
*        END WITH A BLANK OR BE AT THE END OF THE CMD BUFFER.
         CLI   0(R6),X'40'             IS NEXT CHAR A BLANK?
         BNH   CMDFOUND                YES => CMD IS A MATCH     86146
         BCTR  R6,0                                              92320
         CLI   0(R6),C'('    APPLID ?                            92320
         BE    CMDFOUND      YES; ACCEPT AS TERMINATOR           87186
CMDTABL3 LA    R1,CMDTABL(,R1)         NO => GET
         B     CMDTABLP                          NEXT ENTRY
         SPACE 1
*        MATCHING CMD HAS BEEN FOUND
         SPACE 1
*        CHECK IF CMD IS VALID FOR THE SOURCE OF THE CMD
CMDFOUND L     R3,RPLUSFLD   RELOAD TERM ENTRY                   86127
         TM    UFLAGS,INIT             CMD ISSUED DURING NETSOL INIT?
         BZ    CMDCKTRM                NO  => CHECK IF CMD OK FROM TERM
         TM    CMDFLAG(R1),CMDINIT     CMD VALID FROM SYSIN?
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
         B     CMDSETUP      SKIP SYSTEMS ONLY CHECK AND DO      86125
CMDCKTRM TM    TERMFLAG,TERMCONS  IS THIS A CONSOLE ?            88192
         BNZ   CMDCKCON      YES; CHECK CONSOLE                  88192
         TM    CMDFLAG(R1),CMDTERM  VALID FROM TERMINAL ?        88192
         BNZ   CMDCKCKD      YES; PROCEED                        88192
         B     CMDTABL3      LOOK FOR ALTERNATIVE ENTRY          88192
CMDCKCON TM    CMDFLAG(R1),CMDCONS  VALID FROM CONSOLE ?         88192
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
*        SET UP PARAMETERS FOR GETPARM SUBROUTINE
CMDCKCKD TM    TERMFLG3,TFREQ  LOGON REQUESTED ?                 88185
         BZ    CMDSETGP      NO; USE CODE FOR OPEN TERMINALS     88185
         CLI   CMDAPPF(R1),0  APPLICATION GROUP RESTRICTION ?    88185
         BE    CMDSETGP      NO                                  88185
         TM    TERMFLG3,TFLON  USER LOGGED ON ?                  88185
         BZ    CMDNAUTH      NO; UNAUTHORIZED                    88185
         AIF   ('&LOCAL' NE 'PID').NOCMDEX                       92300
         L     R14,TERMLOUD  GET USER'S DATA                     88185
         SLR   R0,R0                                             88185
         IC    R0,A$USUBFG-A$LOUD(,R14)  LOAD AUTHORIZED SYSTEMS 88185
         SLR   R15,R15                                           88185
         IC    R15,CMDAPPF(,R1)  LOAD THE CURRENT GROUP          88185
         NR    R0,R15        IS THE USER AUTHORIZED ?            88185
         BZ    CMDNAPPL      NO                                  88185
         CLI   CMDAPPF(R1),A$USFCIC  CICS ?                      88185
         BNE   CMDSETGP      CONTINUE WITH OLD CHECKS            88185
         LA    R15,A$UCICNM-A$LOUD(,R14) POINT TO MASK           88185
         LA    R0,CMDVAPPL(,R1)  POINT TO TEST VALUE             88185
         BAL   R14,MASKTEST  CHECK FOR (MASKED) COMPARE          88185
           B   CMDSETGP      MATCH; PROCEED                      88185
         LA    R15,8(,R15)   TRY OTHER VALUE                     88185
         BAL   R14,MASKTEST                                      88185
           B   CMDSETGP      MATCH; ALLOW                        88185
         TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88185
         BZ    CMDNAPPL      NO; FAIL                            88185
.NOCMDEX ANOP  ,                                                 91195
CMDSETGP TM    TERMFLG3,TPRIVY    PRIVILEGED USER ?              86065
         BNZ   CMDSETUP      YES                                 86065
         L     R0,=A(CMDUNTAB)  POINT TO UNPRIVILEGED TABLE      88172
         TM    TERMFLG3,TFAPL  FORCED USER APPLID ?              88220
         BNZ   CMDSETUA      YES                                 88220
         CLI   TERMDAPL,0    ANY FORCED APPLICATION ?            87137
         BNH   CMDSETOP      NO; CHECK FOR LOCKED MODE           87137
CMDSETUA CR    R1,R0         PRIVILEGED COMMAND ?                88192
         BNL   CMDSETUP      NO; ALLOW                           88192
         LA    R0,MSG08      XXX IS NOT ACTIVE                   87137
         MVC   APPLID,TERMAPPL  COPY FORCED APPLICATION ID       88222
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   SENDMSG       YES; SEND FALSE MESSAGE             88220
         MVC   APPLID,TERMDAPL  SHOW UNAVAILABLE APPLICATION     88220
         B     SENDMSG       SEND FALSE MESSAGE                  87137
CMDSETOP TM    UFLAGS,UFGSYS   SYSTEMS ONLY ?                    86065
         BZ    CMDSETUP      NO; PROCEED                         86065
         CR    R1,R0         PRIVILEGED COMMAND ?                88192
         BNL   CMDSETUP      NO; ALLOW (PRIVY CMDS CHECK AGAIN)  88192
CMDNTNOW LA    R0,MSG14      SET FOR UNTIMELY REQUEST            87187
         B     SENDMSG       AND FAIL THIS REQUEST               86065
CMDNAPPL LA    R0,MSG05      SET UNAUTHORIZED REQUEST            88192
         B     SENDMSG       AND FAIL                            88192
CMDNAUTH LA    R0,MSG18      SET UNAUTHORIZED REQUEST            87187
         B     SENDMSG                                           87187
CMDSETUP TM    TERMFLG3,TPRIVY  PRIVILEGED USER ?                88192
         BNZ   CMDSETGO      YES; PROCEED                        88192
         TM    CMDFLAG(R1),CMDAUTH  RESTRICTED COMMAND ?         88192
         BNZ   CMDNAUTH      YES; FAIL                           88192
CMDSETGO ST    R6,GPDATAP    SAVE CURRENT CMD BUFFER PTR         88192
         LA    R2,DATASEQ              CALCULATE
         SR    R6,R2                     LENGTH OF CMD
         SLR   R2,R2                   CALCULATE
         IC    R2,DATASEQL               LENGTH OF TEXT
         SR    R2,R6                       REMAINING IN CMD BUFFER
         STH   R2,GPDATAL              SAVE FOR USE BY GETPARM
*        BRANCH TO CMD PROCESSING ROUTINE
         L     R3,RPLUSFLD   ENSURE CORRECT TTE ADDRESS          88192
         L     R2,CMDROUTA(,R1)        LOAD A(CMD ROUTINE)
         BR    R2                        AND BR TO IT
         SPACE 1                                                 87186
*        BUFFER BEGINS WITH 'LOGON' - SCAN FOR APPLID (AND OUR SHORTER
*        APPL().  IF FOUND, USE CONTENTS OF () AS NAME, AND SCAN 87186
*        FOR DATA(). IGNORE LOGMODE() AND OTHER STUFF)           87186
*                                                                87186
PRETEST  L     R6,DATAPTR    POINT TO INPUT                      87186
         SLR   R4,R4                                             87186
         IC    R4,DATASEQL   GET LENGTH OF INPUT                 87186
         LA    R0,4+1        SET LENGTH FOR 'APPL' AND '('       87186
PRETELP  CLC   =C'APPLID(',0(R6)  NON-TSO ENTRY ?                87186
         BE    PRETE6        MAYBE                               87186
         CLC   =C'APPL(',0(R6)  ALTERNATE FORM ?                 87186
         BE    PRETE4        YES                                 87186
         LA    R6,1(,R6)     UP, UP                              87186
         BCT   R4,PRETELP    . . . AND AWAY                      87186
         B     CMDSCAN2      NO; REAL TSO (?)                    87186
PRETE6   LA    R0,2+4+1      SET FOR 'APPLID(' LENGTH            87186
PRETE4   AR    R6,R0         SKIP FOR 'APPL' AND '('             87186
         SR    R4,R0         ADJUST RESIDUAL LENGTH              87186
         SLR   R2,R2                                             87186
         SLR   R3,R3                                             87186
PRETEAP  LTR   R4,R4         ANY MORE ?                          87186
         BNP   PRETEAD       NO; DONE                            87186
         CLI   0(R6),C')'    END ?                               87186
         BE    PRETEAD       YES                                 87186
         SLDL  R2,8          MAKE ROOM FOR ANOTHER               87186
         IC    R3,0(,R6)     LOAD IT                             87186
         LA    R6,1(,R6)                                         87186
         BCT   R4,PRETEAP                                        87186
         B     APPLBAD       BAD/UNKNOWN APPL                    87186
PRETEAD  L     R6,DATAPTR    RESTART AT BEGINNING                87186
         SLR   R4,R4                                             87186
         IC    R4,DATASEQL   GET LENGTH AGAIN                    87186
PRETEDAL CLC   =C'DATA(',0(R6)  DATA ?                           87186
         MVI   0(R6),C' '    CLEAR IT ANYWAY                     87186
         BE    PRETEDAD      YES                                 87186
         LA    R6,1(,R6)                                         87186
         BCT   R4,PRETEDAL   KEEP IT UP                          87186
         B     PRETEDAA      PUT THE APPLICATION NAME IN         87186
PRETEDAD MVC   1(4,R6),0(R6)  BLANK IT                           87186
         LA    R0,5          SET INCREMENT                       87186
         AR    R6,R0         BUMP OVER                           87186
         SR    R4,R0         ADJUST RESIDUAL LENGTH              87186
PRETEDDL CLI   0(R6),C')'    END ?                               87186
         BE    PRETEDAL      YES; START BLANKING AGAIN           87186
         LA    R0,1          SET INCREMENT                       87186
         AR    R6,R0                                             87186
         SR    R4,R0                                             87186
         BP    PRETEDDL      TRY AGAIN                           87186
PRETEDAA L     R6,DATAPTR    SET RESCAN START                    87186
         STM   R2,R3,0(R6)   STASH DESIRED APPLICATION NAME      87186
         SLR   R2,R2                                             87186
         IC    R2,DATASEQL   GET ORIGINAL LENGTH BACK            87186
         B     INTRPRET      AND RESCAN                          87186
         SPACE 1                                                 88185
*        MASKED COMPARISON                                       88185
*        R0 - VALUE  R15 - MASK    R14 RETURN                    88185
*                                                                88185
MASKTEST STM   R14,R1,12(R13)   SAVE                             88185
         LR    R1,R0         COPY VALUE OVER                     88185
         LA    R0,8          NUMBER TO SCAN                      88185
         LA    R14,1         INCREMENT                           88185
MASKTESL CLI   0(R15),C'*'   GENERAL COMPLETE MATCH ?            88185
         BE    MASKTESX      YES; RETURN MATCHED                 88185
         CLI   0(R15),C'?'   CHARACTER MATCH ?                   88185
         BE    MASKTESB      YES; BUMP                           88185
         CLC   0(1,R15),0(R1)  MATCH ?                           88185
         BE    MASKTESB      YES; BUMP                           88185
         LM    R14,R1,12(R13)   RESTORE                          88185
         B     4(,R14)       RETURN NO MATCH                     88185
MASKTESB AR    R1,R14                                            88185
         AR    R15,R14                                           88185
         BCT   R0,MASKTESL   TRY NEXT ENTRY                      88185
MASKTESX LM    R14,R1,12(R13)                                    88185
         BR    R14           RETURN MATCHED                      88185
         SPACE 1                                                 90141
         LTORG ,                                                 90141
         TITLE '*********  N E T S O L  -  CHECK APPLICATION STATUS'
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE VTAM APPLICATION ASSOCIATED WITH THE LOGON DATA.          *
*                                                                     *
***********************************************************************
         SPACE 1
CHKAPPL  MVC   APPLID(8),CMDVAPPL(R1)  SAVE APPLID FROM CMD TABLE ENTRY
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 1
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREB OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         L     R3,RPLUSFLD             -> TTE
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION   86127
         BNH   ERRTAB4B      JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
ERRTAB4B B     ERRTAB4(R15)            CHECK VALID ACTIONS       86127
ERRTAB4  B     R0CHK4               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     APPLBAD              C  THIS IS NORMAL CASE FOR
*                                      APPLICATION UNKNOWN
         B     INQUIREB            10  REISSUE.  NO NEED TO
         B     APPLBAD       14 - NETSOL/INTTAB/VTAMLST OUT OF SYNCH
         SPACE 1
R0CHK4   CH    R0,=H'10'     NOT ACCEPTING LOGONS ?              93169
         BE    APPINACT      YES; SAY SO                         93169
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2                                                 90120
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 2
         SLR   R15,R15                 CLEAR  REG 15
         IC    R15,SYNFDB3             EXTRACT FEEDBACK INFO.
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
         B     STATUS(R15)             BRANCH IN TABLE
STATUS   B     APPACTIV             0
         B     APPINACT             4
         B     APPNEVER             8
         B     APPTEMP             12
         B     APPCLOSE            16
         SPACE 1
APPTEMP  DS    0H                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS
         LA    R0,MSG11                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPNEVER DS    0H                      APPLICATION NEVER ACCEPTS LOGONS
         LA    R0,MSG10                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPINACT DS    0H                      APPLICATION INACTIVE
         LA    R0,MSG08                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPCLOSE DS    0H                      APPLICATION QUIESCING
         LA    R0,MSG09                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPLBAD  DS    0H                      BAD APPLICATION NAME
         LA    R0,MSG07                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         TITLE '*********  N E T S O L  -  CLSDST(PASS) FUNCTION'
***********************************************************************
*    THE APPLICATION IS ACTIVE AND AVAILABLE. PASS THE TERMINAL PLUS  *
*    LOGON DATA TO THE DESIRED APPLICATION.                           *
***********************************************************************
         SPACE 2
APPACTIV OI    FLAGS,CLEARSCR          MUST ISSUE CLEAR SCREEN
         L     R15,=A(S32M6APL)                                  86012
         USING S32M6APL,R15                                      86012
         MVC   S32M6APL,APPLID  SHOW CONNECTING ID               86012
         L     R15,=A(S3EM6APL)                                  88172
         USING S3EM6APL,R15                                      88172
         MVC   S3EM6APL,APPLID  DITTO FOR 3270 WITH EDS          86012
         L     R15,=A(S37M6APL)                                  86065
         USING S37M6APL,R15                                      86065
         MVC   S37M6APL,APPLID  DITTO FOR 3767/TTY               86012
         L     R15,=A(MD5M6APL)                                  90042
         USING MD5M6APL,R15                                      90042
         MVC   MD5M6APL,APPLID  DITTO FOR MODEL 5 327X           90042
         DROP  R15                                               86012
         LA    R0,MSG06                SEND LOGON IN PROGRESS
         B     SENDMSG                 GO ISSUE SEND
         SPACE 1
CONTPASS NI    FLAGS,255-(CLEARSCR)    TURN OFF FLAG TO INDICATE RETURN
         SLR   R2,R2                   CLEAR
         IC    R2,DATASEQL             GET DATA SEQUENCE LENGTH PASSED
*                                       FROM INTRPRET
         LA    R4,DATASEQ              ADDRESS OF DATA TO PASS
         SPACE 1
FINDBLNK CLI   0(R4),X'40'             IS IT A BLANK?
         BE    FINDDATA                YES SEE IF ANY DATA FIELD
         LA    R4,1(R4)                OVERWISE GO TO NEXT BYTE
         BCT   R2,FINDBLNK             DECREASE COUNT TRY NEXT
         SPACE 1
NODATA   SLR   R4,R4                   CLEAR REG TO SAY NO DATA
         B     FILLNIB                 GO ISSUE PASS WITH NO DAT
         SPACE 1
FINDDATA LA    R4,1(R4)                POINT TO NEXT CHARACTER
         CLI   0(R4),X'40'             IS IT STILL A BLANK?
         BNE   DATAFOND                NO SO WE HAVE DATA
         BCT   R2,FINDDATA             TRY AND FIND MORE DATA
         B     NODATA                  ISSUE PASS WITH NO DATA
         SPACE 1
DATAFOND BCTR  R2,0                    END OF LOGON BUT NO DATA
         LTR   R2,R2                   NO MORE DATA?
         BZ    NODATA                  ISSUE CLSDST WITH NO DATA
         SPACE 1
***********************************************************************
* THIS CODE WILL CHECK IF THE REQUESTED APPLICATION IS ONE THAT NEEDS *
* A SPECIAL LOGMODE ENTRY. IF SO, THE ASSOCIATED LOGMODE ENTRY IN THE *
* TABLE WILL BE ADDED TO THE NIB PRIOR TO THE CLSDST(PASS).           *
***********************************************************************
         SPACE 1
FILLNIB  LA    PTRNIB,NIBSTART         USE NIB CONTAINED IN RPL.
         MVC   NIBLMODE,MODENAM  ZERO OR LOGMODE TABLE NAME      88206
         LA    R1,LOGMDTAB             PT @ LOGMODE TABLE
LOGMDLP  CLC   LOGMDAPP(8,R1),=XL8'FFFFFFFFFFFFFFFF' END OF TABLE?
         BE    SKIPLOGM                YES => USE DEFAULT ENTRY
         CLC   APPLID(8),LOGMDAPP(R1)  DOES APPLID MATCH TABLE ENTRY?
         BE    INSRTLGM                YES => GO INSERT LOGMODE NAME
         LA    R1,LOGMDLEN(,R1)        NO  => GET NEXT TABLE ENTRY
         B     LOGMDLP                        & PROCESS IT
INSRTLGM MVC   NIBLMODE,LOGMDENT(R1)  MOVE LOGMODE NAME INTO NIB
         SPACE 1
SKIPLOGM L     R3,RPLUSFLD             -> TTE
         MVC   NIBSYM(8),TERMNAME      COPY TERMINAL NAME TO NIB
         SPACE 1
PASS     OI    MFLAGS,CLSDST           CLSDST(PASS) BEING DONE
         OI    MACFLAGS,CLOSPASS
         SPACE 1
         CLSDST  RPL=(PTRRPL),NIB=(PTRNIB),OPTCD=(ASY,PASS),           *
               AAREA=APPLID,AREA=(R4),RECLEN=(R2),EXIT=PASSEND   90120
         NI    MFLAGS,255-(CLSDST)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    PASS                    YES. REISSUE
         LTR   R15,R15                 CLOSE(PASS) ACCEPTED
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  RETURN TO VTAM
         TITLE '*********  N E T S O L  -  CLSDST(PASS) EXIT RTN'
***********************************************************************
*                                                                     *
*        CHECK THAT THE CLSDST(PASS) WORKED CORRECTLY                 *
*                                                                     *
*        THIS EXIT ROUTINE IS SCHEDULED WHEN A CLSDST (PASS)          *
*        IS ISSUED.  THE CLSDST IS ISSUED WHEN A VALID LOGON          *
*        SEQUENCE HAS BEEN RECEIVED FROM THE TERMINAL AND             *
*        THE DESIRED APPLICATION IS RECEIVING LOGON'S.                *
*                                                                     *
*        REGISTER 5 CONTAINS THE ADDRESS OF THE RPL USED              *
*            IN THE CLSDST.                                           *
*                                                                     *
***********************************************************************
         SPACE 2
PASSEND  MHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         LR    PTRRPL,R1               GET THE RPL PASSED
         LA    R13,RPLSAVE             R13 -> RPL SAVE AREA
         SPACE 1
         OI    MFLAGS,CLSDST           INDICATE IN PASSEND
         OI    EXITFLAG,PASSEX
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   00    08    QUEUED SESSION ALREADY EXISTS        00  08           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    00    APPLICATION UNAVAILABLE              0C  08           *
*   10    02    TARGET APPLICATION UNACCEPTABLE      0C  09           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0D    VTAM INACTIVE TO YOUR ACB            SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    13    CID INVALID                          14  00           *
*   14    4B    INVALID LOGMODE ENTRY SPECIFIED      0C  01           *
*   14    53    TERMINAL NOT DEFINED CROSS DOMAIN    0C  03           *
*   14    55    NO OPNDST AUTHORIZATION              0C  05           *
*   14    5D    OPNDST INVALID (TERM NOT CONNECTED)  14  00           *
*   14    5F    RESOURCE NOT OWNED                   14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB5(R15)            CHECK VALID ACTIONS
ERRTAB5  B     R0CHK5               0  PROBABLY PASSED DEVICE
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         B     SENDMSG              C  NORMAL CASE IF APPLI-
*                                       CATION STOPPED ACCEPT-
*                                       ING LOGONS SINCE THE
*                                       INQUIRE
         B     RESEND              10  LET USER TRY AGAIN LATER
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       FREED BY RELREQ AFTER
*                                       THE READEND EXIT WAS
*                                       SCHEDULED.
R0CHK5   DS    0H
         CH    R0,HEX8             08  QUEUED SESSION EXISTS
         BE    QSESSION                 => ISSUE CLSDST RELEASE
         LTR   R0,R0                   ANYTHING BUT FDBK2=08
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TITLE '*********  N E T S O L  -  SIMLOGON FUNCTION'
SIMLOGON LA    PTRNIB,SYNCHNIB         GET ADDRESS OF NIB
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TPASSED        MARK TERM NOT ON NETSOL
         MVC   TERMAPPL,APPLID         REMEMBER APPL FROM CLSDST(PASS)
         ST    R3,NIBUSER              SAVE IN THE USER FIELD
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         MVC   NIBSYM(8),TERMNAME      TERMINAL NAME TO NIB
         SPACE 1                                                 88185
         AIF   ('&LOCAL' NE 'PID').NOSIMEX                       92300
         ICM   R0,15,TERMLOUD  IS THERE A LOUD ?                 88185
         BZ    SIMLOGOL      NO; SKIP                            88185
         CLC   =C'TS',TERMAPPL  TSO ?                            88185
         BE    SIMLOGOL      YES; LET TSO DO IT                  88185
         CLC   =C'WY',TERMAPPL  WYLBUR ?                         88185
         BE    SIMLOGOL      DITTO                               88185
         CLC   =C'EX',TERMAPPL  EXHIBIT ?                        88185
         BE    SIMLOGOL                                          88185
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT PARM        88185
         MVC   A$SID,=C'A$RB'                                    88185
         MVC   A$SFCTN(3),=AL1(A$SFLOGN,0,A$SAKEY+A$SBUILD) LOGON
         MVC   A$SACCT,TERMAPPL  PASS THE NAME                   88192
         ST    R0,A$SBUFR    SET LOUD ADDRESS                    88185
         LA    R1,A$SVCRB                                        88185
         SVC   249           BEGIN A SESSION                     88185
.NOSIMEX SPACE 1                                                 91195
         SPACE 1
SIMLOGOL OI    MFLAGS,SMLOGON          INDICATE SIMLOGON
         OI    MACFLAGS,SIMLGON
         SIMLOGON RPL=SYNCHRPL,                                        X
               NIB=SYNCHNIB,                                           X
               OPTCD=(Q,NRELRQ)
         NI    MFLAGS,255-(SMLOGON)
         XC    NIBUSER,NIBUSER         CLEAR NIB USER FIELD OUT
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SIMLOGON                                         *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    13    CID INVALID                          14  00           *
*   10    4B    INVALID LOGON                        0C  02           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB6(R15)            CHECK VALID ACTIONS
ERRTAB6  B     R0CHK6               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         B     FREERPL              C  CAN'T SEND MSG IF NOT CONNECTED
*                                      CONNECTED
         B     SIMLOGON            10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK6   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    FREERPL                 RETURN IF SO
         CH    R0,HEX8                 X'0008' THAT WE SHOULD NOT GET ?
         BE    FREERPL                 YES, IGNORE IT FOR NOW
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     FREERPL                 FREE RPL GO BACK TO VTAM
         TITLE '*********  N E T S O L  -  SEND MESSAGES ROUTINE'
***********************************************************************
*                                                                     *
*          BRANCH TO DEVICE DEPENDENT SEND ROUTINE TO WRITE           *
*          A MESSAGE TO THE LOGICAL UNIT.                             *
*                                                                     *
***********************************************************************
         SPACE 2
         SPACE 2
SENDMSG  DS    0H
         L     R3,RPLUSFLD             -> TTE
         L     R9,TERMDDT              -> DDT FOR TERMINAL
         L     R15,DDTSEND             -> SEND ROUTINE FOR TERMINAL
         BR    R15                     GO SEND MESSAGE
         SPACE 5                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        FOR COLOR AND WIDE SCREEN, ATTEMPT BUFFER COMPRESSION        *
*                                                                     *
*              ERROR RECOVERY WORKS BETTER WHEN BUFFER <= R.U. SIZE   *
*                                                                     *
*---------------------------------------------------------------------*
S32COMP  DS    0H            NORMAL 3270 COMPRESSION ROUTINE     90141
S3ESEND  ICM   R15,15,COMP3270  COMPRESS ROUTINE LOADED ?        90140
         BZ    S32SEND       NO; NORMAL CRT SEND                 90140
         CLM   R0,1,=AL1(12) MENU SCREEN ?                       90140
         BE    S3ESEND2      YES; PROCESS                        90140
         CLM   R0,1,=AL1(13) CLOSED ?                            90140
         BE    S3ESEND2      YES; PROCESS                        90140
         CLM   R0,1,=AL1(20) PASSWORD SCREEN ?                   90140
         BNE   S32SEND       NO; DO NORMALLY                     90140
S3ESEND2 XC    COMPPARM(OPSEQLEN),COMPPARM  CLEAR WORK AREA      90140
         L     R7,=A(SENDEND)  SEND END EXIT                     90141
         TM    TERMFLAG,SENDSCED   IS THERE A SEND (POST=SCHED)  90140
         BO    MISSSEND-SENDEND(R7)   IF SO, DO NOT ISSUE A NEW ONE
         NI    TERMFLAG,255-(LOGPROC) INDICATE NOT IN LOGON FUNCTION
         TM    RPLRH3,RPLEB  END BRACKET DUE TO MSG 6 ?          90140
         BNO   S3EMSG2       NO, STILL IN BRACKET                90140
         NI    RPLRH3,X'FF'-RPLEB      CLEAR END BRACKET STATE   90140
         OI    RPLRH3,RPLBB  3276 MIGHT LIKE TO KNOW             90140
S3EMSG2  STC   R0,MSGINDEX   SAVE MESSAGE INDEX                  90140
         STC   R0,TERMMSGX   ALSO SAVE IN TERMINAL BLOCK         90140
         TM    FLAGS,FIRSTSND   IS THIS FIRST SEND AFTER OPNDST  90140
         BZ    S3EMSGOK                                          90140
         OI    RPLRH3,RPLBB  INDICATE BEGIN BRACKET              90140
         NI    FLAGS,255-(FIRSTSND)    NEXT SEND WITHOUT BRACKET 90140
S3EMSGOK SLR   R1,R1         CLEAR OUT REG                       90140
         IC    R1,MSGINDEX   GET THE INDEX                       90140
         LA    R2,X'FF'-X'80'   TURN OFF POSSIBLE RESET          90140
         NR    R1,R2         INDICATOR PRIOR TO INDEXING         90140
         SLL   R1,2          4 * (INDEX)                         90140
         L     R2,DDTMSGTB-4(R1)  POINT TO MSG. ENTRY IN TABLE   90140
         LH    R1,0(,R2)     GET MESSAGE LENGTH                  90140
         S     R1,=F'2'      REDUCE BY LENGTH FIELD AT FRONT     90140
         LA    R2,2(R2)      POINT TO ACTUAL MSG.                90140
         ST    R2,COMPPARM+8 SET INPUT ADDRESS                   90140
         ST    R1,CPINLEN    SET INPUT LENGTH                    90140
         LA    R14,24*80                                         90140
         C     R9,=A(DDTMDL5)  MODEL 5 SIZE ?                    90140
         BNE   *+8           NO                                  90140
         LA    R14,27*132    LOAD LARGER SIZE                    90140
         ST    R14,CPBUFLEN  STASH IT                            90140
         MVI   OPFUN,OFYCCW  CCW PRESENT                         90140
         MVI   OPADD,OPA14   14-BIT ADDRESSING AVAILABLE         90140
         MVI   OPCOL,OPSEVEN 7-COLOR AVAILABLE (MAY BE A LIE)    90140
         MVI   OPHIGH,OPSEVEN  HIGH-LIGHTING AVAILABLE (FAIRLY SURE)
         LA    R6,IOAREA               POINT TO OUTPUT AREA      90140
         ST    R6,COMPPARM   SET OUTPUT BUFFER ADDRESS           90140
         LA    R14,LMSG12    SET MAXIMUM OUTPUT AREA             90140
         ST    R14,CPOUTLEN  STASH IN PARM LIST                  90140
         LA    R14,CPOUTLEN  GET POINTER TO OUTPUT LENGTH        90140
         ST    R14,COMPPARM+4  STASH IT                          90140
         LA    R14,CPINLEN   POINT TO INPUT LENGTH               90140
         ST    R14,COMPPARM+12  STASH IN LIST                    90140
         LA    R14,CPBUFLEN  GET BUFFER LENGTH                   90140
         ST    R14,COMPPARM+16  STASH                            90140
         LA    R14,OPFUN     POINT TO OPTION LIST                90140
         ST    R14,COMPPARM+20  STASH IN LIST                    90140
         CLI   MSGINDEX,MSG12  IS IT MSG12?                      90140
         BNE   S3ECONT       NO                                  90140
         BAL   R14,TIMETERM  ADD NODE NAME & TIME TO MSG         90140
         B     S3ECONT2                                          90140
S3ECONT  CLI   MSGINDEX,MSG13  NEW MESSAGE 13 ?                  90140
         BNE   S3ECONT3      NO                                  90140
         AH    R9,=Y(DDTTERM3-DDTTERM)  FINAGLE DDT BASE         90140
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          90140
         SH    R9,=Y(DDTTERM3-DDTTERM)  RESTORE R9               86065
         B     S3ECONT2      JOIN COMMON                         90140
S3ECONT3 CLI   MSGINDEX,MSG20  NEW MESSAGE 20                    88179
         BNE   S32SEND       MAJOR BOOBOO ?                      90140
         AH    R9,=Y(DDTTERM2-DDTTERM)  FINAGLE DDT BASE         90140
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          90140
         SH    R9,=Y(DDTTERM2-DDTTERM)  RESTORE R9               90140
S3ECONT2 LA    R1,COMPPARM   GET PARM LIST                       90140
         L     R15,COMP3270  GET COMPRESSION ROUTINE ADDRESS     90140
         BALR  R14,R15       CALL IT                             90140
         CH    R15,=H'8'     DID WE MAKE A BOOBOO ?              90140
         BNL   S32SEND       NO; DO THE SLOW WAY                 90140
         L     R0,CPOUTLEN   GET NEW OUTPUT LENGTH               90140
         ST    R0,SENDLEN    SAVE LENGTH OF SEND                 90140
         B     SEND          JOIN COMMON SEND PROCESSING         90140
         TITLE '*********  N E T S O L  -  SEND ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*          S32SEND EDITS AND SENDS NETSOL MESSAGES TO 3270 DEVICES.   *
*                                                                     *
*          ALL MESSAGES SENT ARE ASYNCHRONOUS USING THE RPL PASSED    *
*          IN R5.                                                     *
*                                                                     *
*               ON ENTRY:                                             *
*                  REG. 0 CONTAINS MESSAGE NUMBER                     *
*                  REG. 3 POINTS TO TTE OF ACTIVE TERMINAL            *
*                  REG. 5 POINTS TO RPL BEING USED                    *
*                  REG. 9 POINTS TO DDT FOR TERMINAL                  *
*                                                                     *
***********************************************************************
         SPACE 2
S37SEND  DS    0H                                                86145
S32SEND  DS    0H                                                86153
         CLM   R0,1,=AL1(MSG06)        LOGON MESSAGE ?
         BNE   S32MSG1                 NO, THEN DON'T SEND MSG WITH EB
         OI    TERMFLAG,LOGPROC        SINCE SENDING MSG IS LOGON
         OI    RPLRH3,RPLEB            SEND WITH END BRACKET ON
*                                      AS 3276 MAY GET UPSET ON CLSDST
         B     S32MSG2                 SKIP CHECK FOR EB SEND
         SPACE 1
S32MSG1  L     R7,=A(SENDEND)  SEND END EXIT                     90141
         TM    TERMFLAG,SENDSCED   IS THERE A SEND (POST=SCHED) DC18203
*                                   ALREADY ISSUED FOR THIS LU  DC18203
         BO  MISSSEND-SENDEND(R7)  IF SO DO NOT ISSUE A NEW ONE DC18203
         NI  TERMFLAG,255-(LOGPROC) INDICAT NOT IN LOGON FUNCTION
         TM    RPLRH3,RPLEB            END BRACKET DUE TO MSG 6 ?
         BNO   S32MSG2                 NO, OKAY STILL IN BRACKET
         NI    RPLRH3,X'FF'-RPLEB      CLEAR END BRACKET STATE
         OI    RPLRH3,RPLBB            3276 MIGHT LIKE TO KNOW
         SPACE 1
S32MSG2  DS    0H
         STC   R0,MSGINDEX             SAVE MESSAGE INDEX
         STC   R0,TERMMSGX   ALSO SAVE IN TERMINAL BLOCK         86160
         TM    FLAGS,FIRSTSND          IS THIS FIRST SEND AFTER OPNDST
         BZ    S32MSGOK
         OI    RPLRH3,RPLBB            INDICATE BEGIN BRACKET
         NI    FLAGS,255-(FIRSTSND)    NEXT SEND WITHOUT BRACKET
         SPACE 1
***********************************************************************
*        FIND OUTPUT MESSAGE AND LENGTH                               *
***********************************************************************
         SPACE 1
S32MSGOK DS    0H
         SLR   R1,R1                   CLEAR OUT REG
         IC    R1,MSGINDEX             GET THE INDEX
         LA    R2,X'FF'-X'80'          TURN OFF POSSIBLE RESET
         NR    R1,R2                    INDICATOR PRIOR TO INDEXING
         SLL   R1,2                    4 * (INDEX)
*                                      = DISPLACEMENT OF MESSAGE +4
         L     R2,DDTMSGTB-4(R1)       POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(,R2)               GET MESSAGE LENGTH
         S     R1,=F'2'                REDUCE BY LENGTH FIELD AT FRONT
         LA    R2,2(R2)                POINT TO ACTUAL MSG.
         LA    R6,IOAREA               POINT TO OUTPUT AREA
         C     R9,=A(DDTCONS)  CONSOLE REQUEST ?                 88192
         BNE   *+8           NO                                  88192
         LA    R6,4(,R6)     LEAVE ROOM FOR RDW                  88192
         LR    R7,R2                   POINT TO MESSAGE AREA
         AH    R7,DDTMSGOF              WHERE DATA ARE TO BE MOVED
         CLI   MSGINDEX,MSG19  VARIABLE TEXT MESSAGE ?           87193
         BNE   *+4+4+4       NO                                  87193
         LH    R1,GPDATAL    GET OUTPUT LENGTH                   87193
         L     R2,GPDATAP    AND ADDRESS                         87193
         SPACE 1
***********************************************************************
*        REGISTER 1 CONTAINS MESSAGE LENGTH                           *
*        REGISTER 2 POINTS TO MESSAGE                                 *
*        REGISTER 6 POINTS TO OUTPUT AREA                             *
*        REGISTER 7 POINTS TO MESSAGE AREA FOR VARIABLE DATA          *
***********************************************************************
         SPACE 1
***********************************************************************
*        EDIT MESSAGE 01                                              *
***********************************************************************
         CLI   MSGINDEX,MSG01          IS THIS MESSAGE 01?       88192
         BNE   S32CKM7                 NO SO CARRY ON
         LA    R8,NIBSTART             YES => POINT AT NIB
         MVC   0(8,R7),NIBLMODE               ADD LOGMODE ENTRY TO MSG
         B     S32CONT
***********************************************************************
*        EDIT MESSAGE 07                                              *
***********************************************************************
S32CKM7  DS    0H
         CLI   MSGINDEX,MSG07          IS THIS MESSAGE 07?       88192
         BNE   S32CKM8                 NO SO CARRY ON
         MVC   0(8,R7),=CL8' '         BLANK OUT USER DATA FIELD
         LR    R0,R1                   SAVE CONTENTS OF R1
         SLR   R1,R1                   LOAD LENGTH
         IC    R1,DATASEQL              OF USER DATA
         CH    R1,=AL2(8)              IF LENGTH
         BNH   *+8                      GREATER THAN 8
         LA    R1,8                      THEN SET TO 8
         BCTR  R1,0                    DECREMENT FOR MVC
         EX    R1,S32MVAPP             MOVE APPLICATION ID TO MSG.
         LR    R1,R0                   RESTORE R1
         B     S32CONT                 SKIP FURTHER EDITS
S32MVAPP MVC   0(0,R7),DATASEQ         *** EXECUTED ***
***********************************************************************
*        EDIT MESSAGE 8,9,10,11                                       *
***********************************************************************
S32CKM8  DS    0H
         CLI   MSGINDEX,MSG08          IS MSG # LESS THAN 8?     88192
         BL    S32CONT                 YES => BYPASS FURTHER CHECKING
         CLI   MSGINDEX,MSG11          IS MSG # GREATER THAN 11? 88192
         BH    S32CKM12                YES => CONTINUE MESSAGE CHECKING
         MVC   0(8,R7),APPLID          MOVE APPLID TO MESSAGE
         B     S32CONT                 SKIP FURTHER EDITS
***********************************************************************
*        EDIT MESSAGE 12                                              *
***********************************************************************
S32CKM12 CLI   MSGINDEX,MSG12          IS IT MSG12?              88192
         BNE   S32CONT                 NO
         BAL   R14,TIMETERM            ADD NODE NAME & TIME TO MSG
         SPACE 1
*        ALL BCSC MENUS WRITTEN FOR LOGABAX TERMINALS ARE
*        TRACKED BY WRITING A MESSAGE TO SYSLOG.
         SPACE 1
*DTS*    C     R9,=AL4(DDT3767)        IF THIS IS A LOGABAX TERMINAL
*DTS*    BNE   S32CONT                   NO  => BYPASS LOG MSG
*DTS*    MVC   LOGMENU+17(8),TERMNAME    YES => ADD NODE NAME TO MSG
*DTS*    MVC   LOGMENU+44(6),=CL6'LOGON'        ASSUME FROM LOGON EXIT
*DTS*    TM    EXITFLAG,LOGONEX                 IF FROM LOGON EXIT
*DTS*    BO    *+10                               YES=> BYPASS
*DTS*    MVC   LOGMENU+44(6),=CL6'RESEND'         NO => MARK AS RESEND
*DTS*    STM   R0,R1,RPLERRSA                   SAVE REGS
*DTS*    WTO   MF=(E,LOGMENU)                   WRITE MSG TO LOG
*DTS*    LM    R0,R1,RPLERRSA                   RESTORE REGS
***********************************************************************
*        MOVE MESSAGE TO OUTPUT AREA                                  *
***********************************************************************
S32CONT  CLI   MSGINDEX,MSG13  NEW MESSAGE 13                    86065
         BNE   S32CONT3      NO                                  86065
         AH    R9,=Y(DDTTERM3-DDTTERM)  FINAGLE DDT BASE         86065
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          86065
         SH    R9,=Y(DDTTERM3-DDTTERM)  RESTORE R9               86065
S32CONT3 CLI   MSGINDEX,MSG20  NEW MESSAGE 20                    88179
         BNE   S32CONT2      NO                                  88179
         AH    R9,=Y(DDTTERM2-DDTTERM)  FINAGLE DDT BASE         88179
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          88179
         SH    R9,=Y(DDTTERM2-DDTTERM)  RESTORE R9               88179
S32CONT2 LR    R3,R1                   LOAD MESSAGE LENGTH TO ODD REG
         LR    R7,R1                   LOAD MESSAGE LENGTH TO ODD REG
         MVCL  R6,R2                   MOVE MESSAGE TO OUTPUT BUFFER
         L     R3,RPLUSFLD             RESTORE TTE POINTER
         LA    R1,IOAREA               CALCULATE
         SR    R6,R1                     THE MESSAGE LENGTH
         ST    R6,SENDLEN              SAVE LENGTH OF SEND
         SPACE 1
SEND     OI    MFLAGS,SENDING          TELL ERREXIT ASY. SEND
         OI    MACFLAGS,SENDASY
         L     R2,SENDLEN              LENGTH TO SEND TO TERM
         NI    RPLO7,255-RPLLMPEO  TURN LARGE MESSAGE OPTION OFF 86143
         ICM   R0,15,TERMRUSZ  GET TERMINAL RU SIZE MAXIMUM      86143
         BZ    SENDRUMX      NONE; SKIP                          86143
         CR    R2,R0         LARGER THAN LIMIT ?                 86143
         BNH   SENDRUMX      NO; USE IT                          86143
         OI    RPLO7,RPLLMPEO  SET FOR DATA EXCEEDING RU SIZE    86143
SENDRUMX L     R4,CID                  TERMINAL ADDRESS          86143
         ST    R4,NIBCID-NIBST+NIBSTART  MAKE SURE               91105
         C     R9,=A(DDTCONS)  CONSOLE REQUEST ?                 88192
         BE    CONSSEND      YES; GO THERE                       88192
         SPACE 1
***********************************************************************
*        CHECK TO SEE IF SEND IS FOR MESSAGE 6 (LOGON IN PROGRESS)    *
*        AND IF SO, SEND REQUESTING A POSITIVE RESPONSE SO THAT THE   *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
         SPACE 1
         L     R7,=A(SENDEND)  SET EXIT ADDRESS                  90141
         CLI   MSGINDEX,MSG06          LOGON IN PROGRESS MSG ?   88192
         BE    S32SEND6                YES, DO ELSEWHERE
         OI    TERMFLAG,SENDSCED    INDICATE A SEND TO BE ISSUEDDC18203
         SPACE 1
         TM    TERMFLAG,CONTENT   HALF-DUPLEX MODE ?             90135
         BZ    S32SES32      NO; USE 3270-TYPE SEND              90135
         NI    RPLRH3,255-RPLCMD-RPLCHREQ  NO CHG                86159
         SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         *
               EXIT=(R7),RPL=(PTRRPL),POST=SCHED,                      *
               CHNGDIR=(NCMD,NREQ),ARG=(R4),                           *
               OPTCD=(ASY,CA),RESPOND=(NEX,FME,NRRN)             86153
         B     S32CHKSD                                          86153
         SPACE 1                                                 86153
S32SES32 TM    TERMFLAG,FLIPFLOP  CONVERSATIONAL MODE ?          90135
         BNZ   S32SEND6      YES; FORCE RESPONSE                 90135
         SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         *
               EXIT=(R7),RPL=(PTRRPL),POST=SCHED,                      X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(EX,FME,NRRN)
         B     S32CHKSD                HANDLE LIKE REST OF SENDS
         SPACE 1
***********************************************************************
*        SEND MESSAGE 6 REQUESTING A POSITIVE RESPONSE SO THAT THE    *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
S32SEND6 SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         X
               EXIT=(R7),RPL=(PTRRPL),POST=RESP,                       X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(NEX,FME,NRRN)
S32CHKSD NI    MFLAGS,255-(SENDING)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    SEND                    YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  RETURN TO VTAM
         TITLE '*********  N E T S O L  -  SEND EXIT'
***********************************************************************
*                                                                     *
*         SENDEND IS ENTERED WHEN THE EXIT HAS BEEN SCHEDULED         *
*         FOR THE SEND DONE ABOVE.                                    *
*                                                                     *
*         REGISTER 1 POINTS TO THE ASYNCH RPL BEING USED              *
*         REGISTER 15 =A(SENDEND)                                     *
*                                                                     *
***********************************************************************
         SPACE 2
SENDEND  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         L     R3,RPLUSFLD                                      DC18203
         NI    TERMFLAG,X'FF'-SENDSCED INDICATE SEND COMPLETE   DC18203
         OI    MFLAGS,SENDING          TELL ERREXIT THAT ERROR
*                                      ARE FOR SEND
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
*                                      OCCURRED
         NI    MFLAGS,255-(SENDING)
         NI    RPLO7,255-RPLLMPEO  RESET BIG MSG BIT             86145
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     88039
         BO    RETURN                                            88039
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                    ACTION           *
*  RTNCD FDBK2                                       CODE(S)          *
*  CODE  CODE         MEANING                        RETURNED         *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. INCOMING MESSAGE                                *
*               REC  RESP HANDLES 0404 FOR 'SEND POST=SCHED'          *
*               SEND EXIT HANDLES 0404 FOR 'SEND POST=RESP'           *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    LU NOT AVAILABLE (POWERED OFF)        08  00          *
*   0C    02    REQUEST CANCELLED TEST REQ (LOSTTERM) 14  00          *
*   0C    07    CONNECTION RECOVERY        (LOSTTERM) 14  00          *
*   0C    08    LU RESTARTED               (LOSTTERM) 14  00          *
*   0C    0B    REQUEST CANCELLED BY CLSDST           14  00          *
*   0C    0C    REQUEST CANCELLED BY CLEAR            08  04          *
*   10    03    QUICK HALT (TPEND)                    SNOCCUR         *
*   10    05    PERMANENT CHANNEL OR LINK FAILURE     08  00          *
*   10    07    VARY DEACTIVATE IMMEDIATE  (LOSTTERM) 14  00          *
*   10    09    TERMINATE SELF OR LOGOFF   (LOSTTERM) 14  00          *
*   10    0A    ACF/VTAM ERROR                        SNOCCUR         *
*   10    0D    ACF/VTAM INACTIVE FOR ACB             SNOCCUR         *
*   10    0E    ABEND FOR PROGRAMS TCB                SNOCCUR         *
*   10    0F    BUFFERS FULL               (LOSTTERM) 14  00          *
*   10    10    TERMINATE SELF RECEIVED               08  04          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    13    CID INVALID                           14  00          *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLAG,SENDEX         INDICATE WRITE EXIT
         CH    R15,HEX18               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABB(R15)            CHECK VALID ACTION
ERRTABB  B     ROCHKB               0  CHECK IF WRITE WENT
         BAL   R7,SNOCCUR           4
         B     RELOPNA              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     WHATSEND            10  FIND OUT WHAT KIND OF SEND
         B     FREERPL             14  LOST DEVICE
         B     RESENDM             18  RESEND MSG
         SPACE 1
RELOPNA  LTR   R0,R0                   OPNDST AFTER CLSDST ?
         BZ    RELEASE                 NO SO JUST GO CLSDST
         OI    FLAGS,RELOPND           INDICATE WE WANT RE-OPEN
         B     RELEASE                 CLSDST FIRST
         SPACE 1
WHATSEND TM    FLAGS,LUSTATE           LUSTAT SEND ?
         BO    SENDLU
         B     SEND                    NO, NORMAL SEND, CONTINUE IT
         SPACE 1
RESENDM  DS    0H                      RESEND MESSAGE
         NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB TERMINAL MIGHT
*                                      HAVE STARTED FIRST
         IC    R0,MSGINDEX             RETRIEVE SAVED MSG #
         B     SENDMSG
         SPACE 1
ROCHKB   DS    0H
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
*ISSSEND NI    FLAGS,255-(LOOPONCE)     TURN OFF RETRY INDIC
MISSSEND TM    FLAGS,LUSTATE           CONTINUE LUSTAT PROC ?
         BO    CONTLU
         TM    FLAGS,CLEARSCR          CLEAR OF SCREEN FROM RECEND?
         BO    CONTPASS
         B     FREERPL                 WAIT FOR ACITIVITY FROM LU
         TITLE '*********  N E T S O L  -  RELREQ EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN AN APPLICATION ISSUES        *
*    OPNDST (ACQUIRE) FOR A TERMINAL CURRENTLY OWNED BY NETSOL.       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*         FOLLOWING;                                                  *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - ADDRESS OF SYMBOLIC NAME OF TERMINAL          *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
RELREQ   XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN        YES; REFUSE AND EXIT                90141
         SPACE 1
***********************************************************************
*        NOW SCAN THE TERMINAL TABLE ENTRIES TO SEE IF WE CAN FIND A  *
*        MATCH ON THE TERMINAL NAME (ERROR IF DON'T). WHEN FOUND,     *
*        SEE IF A LOGON IS IN PROGRESS (VIA LOGPROC FLAG). IF THIS IS *
*        THE CASE, WE WON'T RELEASE THE TERMINAL, OTHERWISE RELEASE   *
*        TO THE APPLICATION REQUESTING IT.                            *
***********************************************************************
         SPACE 1
         LM    R3,R5,TERMTABS          SET UP FOR THE BXLE THRU TABLE
         CR    R3,R5                   NULL TABLE ?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         L     R6,4(,R1)               ADDRESS OF RELREQ NAME OF TERM
         SPACE 1
FINDNAME CLC   0(8,R6),TERMNAME        MATCH ON THE NAME
         BE    FNDNAME                 YES, FOUND ITS TTE
         BXLE  R3,R4,FINDNAME          CONTINUE
         BAL   R7,SNOCCUR              ERROR, SHOULD NEVER GET HERE
         SPACE 1
FNDNAME  TM    TERMFLAG,LOGPROC        LOGON ? YES, DON'T FREE TERMINAL
         BO    RRFAIL                  YES => WRITE REL REQ FAILED MSG
         SPACE 1
         OI    EXITFLAG,RELREQEX       INDICATE IN RELREQ EXIT
         BAL   R14,GETRPL              GET AN RPL
         LA    R13,RPLSAVE             R13 -> SAVE IN THE RPL
         ST    R3,RPLUSFLD             SAVE ADDRESS OF TTE IN THE RPL
         ST    R5,TERMCRPL             SAVE ADDRESS OF RPL IN THE TTE
         LA    PTRNIB,SYNCHNIB
         MVC   NIBSYM(8),TERMNAME      PLACE SYMBOLIC TERMINAL
*                                      SET INDICATOR TO
         OI    FLAGS,RELOPND           RELEASE THE DEVICE AND
*                                      TRY TO REOPEN IT
         MVC   CID,TERMCID             GET CID INTO ASYNCH RPL
         SPACE 1
         MVC   RELRQMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELRQMSG)         INFORM WORLD OF REQUEST
         SPACE 1
         B     RELEASE                 GO DO THE RELEASE
         SPACE 1
RRFAIL   MVC   RELFLMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELFLMSG)         INFORM WORLD OF REQUEST FAILURE
         SPACE 1
         B     RETURN                  REFUSE RELEASE REQUEST
         TITLE '*********  N E T S O L  -  LOSTERM EXIT'
***********************************************************************
*                                                                     *
*   THIS EXIT ROUTINE IS SCHEDULED BY VTAM WHEN :                     *
*                                                                     *
*                * WHEN CONTACT WITH AN LU IS LOST                    *
*                * WHEN A LU REQUESTED A LOGOFF                       *
*                * WHEN CERTAIN ERRORS DETECTED IN TRANSMISSION       *
*                * WHEN A LU IS TEMPORARILY UNAVAILABLE               *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*            FOLLOWING;                                               *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - CID OF LOST TERMINAL                          *
*              WORD 2 - USER FIELD FROM NIB                           *
*              WORD 3 - REASON CODE, AS FOLLOWS:                      *
*                                                                     *
*  0 - DIAL-LINE DISCONNECT (DIAL-IN)            RELEASE (CLSDST)     *
*  4 - DIAL-LINE DISCONNECT (DIAL-OUT)           RELEASE (CLSDST)     *
*  8 - RESERVED                                                       *
*  C - CONTACT WITH LU PERMANENTLY LOST          PROBDEV (CLSDST)     *
* 10 - LU SUCCESSFULLY RECONTACTED               RELEASE + REAQUIRE   *
* 14 - UNCONDITIONAL TERMINATE COMMAND           RELEASE (CLSDST)     *
*    -       "       CHARACTER CODED LOGOFF         "        "        *
*    -       "       TERMSESS                       "        "        *
* 18 - CONTACT WITH LU LOST                      RETURN TO VTAM       *
* 1C - RESERVED                                                       *
* 20 - CONDITIONAL TERMINATE SELF                RELEASE + REACQUIRE  *
*    -     "       CHARACTER CODED LOGOFF           "        "        *
*    -     "       TERMSESS                         "        "        *
* 24 - BUFFER LIMIT DEFINED FOR LU EXCEEDED         "        "        *
* 28 - TEST REQUEST SET                             "        "        *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
LOSTERM  MHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
         LR    R7,R1                   SAVE ACROSS GETRPL
         BAL   R14,GETRPL              GET AN RPL FOR WORK
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         MVC   RPLUSFLD(4),8(R7)       COPY TTE ADDRESS TO RPL
         OI    EXITFLAG,LOSTEX         INDICATE IN LOSTERM EXIT
         MVC   CID,4(R7)               SAVE CID IN RPL/WORKQREA
         MVC   PACKWORK(1),15(R7)      COPY LOSTERM CODE TO WORK AREA
         UNPK  PACKWORK+2(3),PACKWORK(2) UNPACK TO PRINT
         MVC   LOSTMSG+31(2),PACKWORK+2  TO MSG AREA
         TR    LOSTMSG+31(2),TRTAB     MAKE IT PRINTABLE
         L     R3,RPLUSFLD             GET TTE POINTER
         OI    TERMFLG3,TFLOF  FORCE A USER LOGOFF               88188
         ST    R5,TERMCRPL             SAVE A(RPL) IN TTE
         MVC   LOSTMSG+43(8),TERMNAME  TERMINAL LU NAME
         WTO   MF=(E,LOSTMSG)          ISSUE ERROR MSG.
         SPACE 1
***********************************************************************
*        NOW CHECK TO MAKE SURE THAT THE NIB USER FIELD IS CORRECT.   *
*        WOULD NOT BE IF OPNDST DONE WITH WRONG NIBUSER VALUE.        *
***********************************************************************
         SPACE 1
         CLC   CID,TERMCID             CHECK THAT CID'S ARE CORRECT
         BE    LOSTCODE                YES SO GO CHECK CODE     DC18203
         OC    TERMCID,TERMCID         IS IT ZERO (THIS HAPPENS  88179
*                                      WHEN AN OPNDST FAILS FOR DC18203
*                                      FIRST LOGON PRIOR TO     DC18203
*                                      LOSTERM SCHEDULED )      DC18203
         BZ    *+8           JUMP OVER THE BAL                   88179
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
LOSTCODE L     R4,12(R7)               GET LOSTERM ENTRY CODE
         CH    R4,HEX8                 IS IT 0,4 OR 8 ?
         BNH   RELEASE                 YES SO JUST CLSDST DEVICE
         CH    R4,HEXC                 IS IT 12 ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX10                IS IT X'10' ?
         BE    REAQUIRE                YES SO LETS RELEASE + REOPEN
         CH    R4,HEX14                IS IT X'14' ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX20                IS IT GREATER THAN X'20' ?
         BNL   REAQUIRE                YES SO LETS RELEASE + REOPEN
         B     FREERPL                 X'18' CODE (24), IGNORE, WAIT
*                                       FOR REENTRY WITH X'0C' OR X'10'
         SPACE 1
REAQUIRE OI    FLAGS,RELOPND           INDICATE TO RELEASE
         B     RELEASE
         TITLE '*********  N E T S O L  -  RELEASE TERMINAL SUBRTN'
***********************************************************************
*                                                                     *
*        RELEASE THE TERMINAL, AND PERHAPS RE-ACQUIRE IT.             *
*                                                                     *
*        THERE ARE THREE ENTRY POINTS TO THIS ROUTINE.                *
*                                                                     *
*        'LOGOFF' IS USED WHEN THE USER ISSUES A LOGOFF COMMAND TO    *
*        NETSOL. THE TERMINAL IS RELEASED.                            *
*                                                                     *
*        'QSESSION' IS USED WHEN A CLSDST(PASS) FAILS BECAUSE A QUEUED*
*        SESSION REQUEST IS OUTSTANDING FOR THIS TERMINAL FROM THE    *
*        REQUESTED APPLICATION. THE TERMINAL IS RELEASED AND THEN     *
*        A SIMLOGON IS ISSUED TO REACQUIRE THE TERMINAL WHEN IT       *
*        IS RELEASED BY THE APPLICATION.                              *
*                                                                     *
*        'PROBDEV' WILL WTO AND RELEASE THE DEVICE BECAUSE OF AN I/O  *
*        PROBLEM.                                                     *
*                                                                     *
*        'RELEASE' WILL RELEASE THE DEVICE AND, IF THERE IS A TEST    *
*        REQUEST SET, 'RELEASE' WILL REACQUIRE THE DEVICE.            *
*                                                                     *
*        REGISTER 5 (PTRRPL) WILL POINT TO AN RPL.                    *
*                                                                     *
***********************************************************************
         SPACE 2
LOGOFCMD L     R3,RPLUSFLD   RELOAD TTE POINTER FOR PA1 ENTRY    88220
         BAL   R14,UTERMOF   RESET LOGON/PRIVIES                 88179
         AIF   ('&LOCAL' NE 'PID').NOLOFEX                       92300
         ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    LOGFLOUD      NO                                  88179
         MODESET KEY=ZERO    GET PRIVILEGED                      90008
         NI    A$LFLG2-A$LOUD(R4),255-A$LFLOG  RESET FORCE REQ.  90008
         MODESET KEY=NZERO   GET NORMAL                          90008
         XC    A$SVCRB(A$SLENRB),A$SVCRB  USE AS ACCT SVC PARM   88179
         MVC   A$SID,=C'A$RB'                                    88179
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88179
         LA    R1,A$SVCRB                                        88179
         SVC   249           CANCEL SESSIONS AND USER LOGON      88179
.NOLOFEX SPACE 1                                                 91195
LOGFLOUD CLC   =C'NT',TERMNAME  ONE OF OUR NTO TERMINALS ?       86356
         BE    LOGOFOK       YES; MEANINGFUL REQUEST             86356
         CLC   =C'PA',TERMNAME  PROTOCOL CONVERTER SYSTEM A?     89338
         BE    LOGOF71       YES                                 88311
         CLC   =C'PB',TERMNAME  PROTOCOL CONVERTER SYSTEM B?     89338
         BE    LOGOF71       YES                                 88311
         CLI   TERMNAME,C'D' DIAL-UP CONNECTION ?                88311
         BE    LOGOFOK       YES; DON'T RECONNECT (FREE PU)      88311
   B SETPASOF  *****DEBUG***** TREAT AS LOCK                     92317
         OI    FLAGS,RELOPND  CLOSE AND RE-ACQUIRE THE DEVICE    88192
         B     RELEASE       RELEASE THE DEVICE                  88192
LOGOF71  LA    R0,L'HANG7171   GET CX-80/IBM 7171/HYDRA DISCONNECT
         LA    R1,HANG7171                                       88311
         STH   R0,GPDATAL    STASH LENGTH                        88311
         ST    R1,GPDATAP    AND ADDRESS                         88311
         LA    R0,MSG19      IDENTIFY POT-LUCK MESSAGE           88311
         B     SENDMSG       JOIN COMMON                         88311
HANG7171 DC    X'F1C370C2A8852B5B4B'  DISCONNECT REQUEST         88311
         SPACE 1                                                 88311
LOGOFOK  OI    FLAGS,LOGOFF            INDICATE CLSDST TO RELEASE THE
*                                      TERMINAL.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
QSESSION OI    FLAGS,SIMLOG            INDICATE CLSDST THEN SIMLOGON
*                                      THE CLSDST RELEASE MUST BE DONE
*                                      SINCE THE CLSDST PASS FAILED.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
PROBDEV  OI    FLAGS,BADEVICE          TURN ON  FLAG FOR WTO.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
BADLU    MVC   LISTWTO8+17(8),TERMNAME ADD TERMNAME TO ERROR MSG
         WTO   MF=(E,LISTWTO8)         WRITE ERROR MSG
         MVC   CID,TERMCID             MOVE CID INTO RPL FOR LATER USE
         B     RELCODE                 GO TO RELEASE CODE
         SPACE 1
RELEASE  TM    FLAGS,RELOPND           IS RELEASE A PRELUDE TO
         BO    CLOSEREL                 REOPEN?
*                                      NO. SIMPLY RELEASE IT
*                                      YES. MUST SAVE SYMBOLIC
*                                       NAME FOR LATER REOPEN
*                                      NOTE: THIS CAN OCCUR
*                                       FOR READ(ANY)/CHECK
*                                       ERROR HANDLING.
RELCODE  L     R3,RPLUSFLD             -> TTE FROM RPL
         SPACE 1
         TM    FLAGS,BADEVICE          IS WTO BIT ON ? NO, DON'T WTO
         BZ    CLOSEREL
         NI    FLAGS,255-(BADEVICE)    YES WTO BIT ON THEN
*                                       TURN WTO FLAG OFF.
         MVC   LISTWTO+17(8),TERMNAME  MOVE DEVICE NAME INTO
*                                      THE MESSAGE AREA OF
*                                      THE LIST FORM OF WTO.
         WTO   MF=(E,LISTWTO)          EXECUTE FORM OF WTO
         SPACE 1
CLOSEREL OI    MACFLAGS,CLSREL         INDICATE DOING CLOSE(REL
***********************************************************************
*        CLSDST RELEASE WILL BE DONE FOR THE TERMINAL BY SPECIFYING   *
*        THE TERMINAL NAME IN THE NIB. THE NIB IS USED BECAUSE THE    *
*        CLSDST(RELEASE) CAN BE DONE FROM THE LOGON EXIT BEFORE A     *
*        SESSION HAS BEEN ESTABLISHED. IN THIS CASE, THE CID WOULD BE *
*        REJECTED BY VTAM IF USED IN THE CLSDST(RELEASE).             *
***********************************************************************
         L     R15,=A(FRESHNIB)  GET FRESH ASYNCH NIB            87131
         MVC   NIBSTART(NIBLNIB),0(R15)   INITIALIZE NIB         87131
         LA    PTRNIB,NIBSTART         -> NIB
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              SAVE A(TTE) IN NIB
         MVC   NIBSYM(8),TERMNAME      MOVE TERMINAL NAME TO NIB
CLOSERET OI    MFLAGS,CLSDST   SET FLAG - CLSDST IN PROGRESS     90127
         L     R7,=A(CDSTEND1)  SET EXIT ADDRESS                 90141
         CLSDST RPL=(PTRRPL),                                          X
               EXIT=(R7),    CDSTEND1                                  *
               OPTCD=RELEASE,                                          X
               NIB=NIBSTART
         SPACE 1
         NI    MFLAGS,255-(CLSDST)     INDICATE CLOSE DONE
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    CLOSERET                YES. REISSUE              90127
         LTR   R15,R15                 CLSDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  CLSDST(RELEASE) END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE CLSDST(RELEASE)                        *
*        ENTRY IS FROM THE CLSDST(RELEASE) IN THE RELEASE RTN.        *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
CDSTEND1 XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,CLSDST           TELL ERREXIT THAT ERROR
*                                       IS FOR CLSDST(RELEASE)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    52    NIB INVALID                          SNOCCUR          *
*   14    60    INVALID LU NAME                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLAG,CLOSEX         INDICATE IN CLOSE REL EX
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB9(R15)            CHECK VALID ACTIONS
ERRTAB9  B     R0CHK9               0  PROBABLY RELEASED IT
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  ALREADY RELEASING, NEW
*                                       RELEASE WON'T HELP
         BAL   R7,SNOCCUR           C  NO MSG TO WRITE AND
*                                       PROBABLY COULDN'T
*                                       ANYWAY
         B     CLOSEREL            10  REISSUE.
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       ALREADY FREED BY A LOSTERM,
*                                       RELREQ OR READEND
*                                       REQUEST.
         SPACE 1
R0CHK9   DS    0H
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         EJECT
***********************************************************************
*                                                                     *
*  AFTER RELEASING THE TERMINAL, IT MAY BE NECESSARY TO               *
*  RE-ACQUIRE IT, OR AT LEAST ATTEMPT TO RE-ACQUIRE IT, FOR THE       *
*  FOLLOWING REASONS:                                                 *
*                                                                     *
*    THE OTHER APPLICATION MAY CANCEL ITS REQUEST FOR THE             *
*    TERMINAL AFTER NETSOL'S RELREQ EXIT HAS ISSUED THE               *
*    CLSDST(RELEASE), BUT BEFORE LOGGING ONTO THE TERMINAL.           *
*    IN THIS CASE NETSOL WISHES TO RE-ACQUIRE THE TERMINAL.           *
*    THE TERMINAL WILL ONLY BE ACQUIRED BY NETSOL IF THE              *
*    OTHER APPLICATION HAS NOT ALREADY LOGGED ON THE TERMINAL.        *
*                                                                     *
*    THE TERMINAL MAY HAVE BEEN RELEASED BECAUSE IT WAS LOGGED        *
*    ON TO NETSOL WHEN THE TEST REQUEST KEY WAS SET.  THIS            *
*    BLOCKS ALL FURTHER I/O TO THE DEVICE, INCLUDING ENTRY OF         *
*    A LOGON SEQUENCE NECESSARY TO PASS THE DEVICE TO TOLTEP.         *
*    NETSOL MUST RELEASE, THEN RE-ACQUIRE THE DEVICE SO THAT          *
*    I/O IS NO LONGER BLOCKED.                                        *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVI   TERMFLG2,TREL           MARK TERM RELEASED
         TM    FLAGS,LOGOFF            LOGOFF COMMAND ISSUED?
         BO    FREERPL                  YES => FINISHED
         TM    FLAGS,SIMLOG            NOW DO SIMLOGON?
         BO    SIMLOGON                 YES => BR TO SIMLOGON CODE
         TM    FLAGS,RELOPND           RELEASE DEVICE ONLY ?
         BZ    FREERPL
         NI    FLAGS,255-(RELOPND)
         LA    PTRNIB,NIBSTART         POINT TO THE NIB
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVC   NIBSYM(8),TERMNAME      GET THE SYMBOLIC NAME
         SPACE 1
***********************************************************************
*  MUST USE NIB WITH SYMBOLIC TERMINAL NAME BECAUSE THE CID IS        *
*  NO LONGER VALID AFTER DEVICE IS RELEASED.  OPNDST(SPEC)            *
*  MUST HAVE A SYMBOLIC TERMINAL NAME SUPPLIED.                       *
***********************************************************************
         SPACE 1
REOPEN   DS    0H                      USE THIS LABEL FOR ERREXIT
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              -> TTE IN NIB FOR FUTURE RPLS
         OI    MACFLAGS,OPNDACQ        SET OPNDST ISSUED
         OI    MFLAGS,OPNDSPEC         SET OPNDST IS CURRENTLY ACTIVE
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(SPEC,ACQUIRE),                                   X
               EXIT=OPNAQRX,                                           X
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    REOPEN                  YES. REISSUE
         LTR   R15,R15                 OPNDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  OPNDST (SPEC,ACQUIRE) EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE CLSDST END EXIT.             *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
OPNAQRX  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    DEVICE UNAVAILABLE                   14  00           *
*   10    03    VTAM IS HALTING                      SNOCCUR          *
*   10    05    PERMANENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    53    NODE UNKNOWN TO VTAM                 14  00           *
*   14    55    NO OPNDST AUTHORIZATION              SNOCCUR          *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLG2,OPNACQX        INDICATE OPNDST EXIT ENTERED
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB7(R15)            CHECK VALID ACTIONS
ERRTAB7  B     R0CHK7               0  CHECK IF DEVICE ACCEPTED
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         B     FREERPL              C  CAN'T WRITE MSG IF NOT    88304
*                                      CONNECTED (WAS SNOCCUR)
         B     OPNAROPN            10  REISSUE. NO NEED TO       90141
*                                       CHECK FOR RESET
         B     FREERPL             14  A NORMAL CASE.  FAILED
*                                       TO RECONNECT DEVICE.
         SPACE 1
R0CHK7   DS    0H
         CH    R0,HEX8                 TERMINAL RECONNECTED?
         BE    FREERPL                 NO. THIS IS WHAT IS
*                                       WANTED.  CONTINUE
*                                       WITH OTHER DEVICES.
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TOPEN             MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND
         B     RESEND
         SPACE 1                                                 90141
OPNAROPN L     R7,=A(CDSTEND1)  SET BASE FOR REOPEN              90141
         B     REOPEN-CDSTEND1(R7)  RE-ISSUE SEND                90141
         SPACE 1                                                 90141
***********************************************************************
*                                                                     *
*        CONSTANTS FOR NETSOLEX CSECT ADDRESSABILITY                  *
*                                                                     *
***********************************************************************
EXMAIN   DC    A(NETSOL70)   MAIN BASE ADDRESS                   90141
         TITLE '*********  N E T S O L  -  RESEND ROUTINE'
***********************************************************************
*                                                                     *
*        RESEND (REISSUE A SEND)                                      *
*                                                                     *
*   THIS ROUTINE IS USER BY THE SENDEND EXIT , RECEND EXIT ,          *
*   RELEASE EXIT TO REISSUE THE 'GOOD MORNING ' MESSAGE               *
*   AFTER RECEIVING A BAD LOGON OR RECOVERING AN LU                   *
*                                                                     *
***********************************************************************
NETSOL70 CSECT ,             COMMON SUBROUTINES                  90141
         SPACE 2
RESENDSG NI    RPLOPT12,FF-RPLFMHDR CLEAR FM HDR BIT             89338
         OI    FLAGS,FIRSTSND  TRY NEW BRACKET                   89338
RESENDAP L     R3,RPLUSFLD   GET THE TTE BACK                    88179
         TM    TERMFLG3,TFAPL  FORCED LOGON ?                    88220
         BNZ   RESENDAC      YES                                 88179
         OC    TERMDAPL,TERMDAPL  ALTERNATE FORCED ID ?          88179
         BZ    RESEND        NO; JUST REFRESH THE DISPLAY        88179
RESENDAC XC    GPDATAL,GPDATAL  CLEAR OPTIONAL DATA              88179
         L     R7,=A(OPENEND)  SET BASE FOR AUTOTIME             90141
         B     AUTOTIME-OPENEND(R7)  RETRY APPLICATION CONNECT   88179
RESEND   NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB             86160
OPSEND   SLR   R0,R0                                             86160
         L     R3,RPLUSFLD   GET TTE PTR BACK                    86160
         ICM   R0,1,TERMMSGX  REPEAT PRIOR MESSAGE ?             86160
         BNM   OPSEND2       NO                                  86160
         MVI   TERMMSGX,0    CLEAR OUT                           86160
         B     SENDMSG       GO TO SEND IT                       86160
OPSEND2  TM    UFLAGS,UFGSYS SYSTEMS ONLY ?                      88220
         BZ    OPSEND20      NO                                  88220
         TM    TERMFLG3,TPRIVY  SYSTEMS UNLOCK ?                 88220
         BZ    OPSEND13      NO; SEND 'CLOSED'                   88220
OPSEND20 LA    R0,MSG20      SET FOR LOGON SCREEN                88179
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    OPSEND12      NO                                  88179
         TM    TERMFLG3,TFLON  LOGON PERFORMED ?                 88179
         BZ    OPSENDCM      NO; SOLICIT LOGON                   88179
OPSEND12 LA    R0,MSG12      REGULAR APPLICATION MENU            88179
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   OPSEND13      YES                                 88220
         CLI   TERMDAPL,0    DEDICATED APPLICATION ?             87137
         BE    OPSENDCM      NO; ISSUE NORMAL MENU               88220
OPSEND13 LA    R0,MSG13      ELSE USE NASTIER SCREEN             86065
OPSENDCM B     SENDMSG
         TITLE '*********  N E T S O L  -  ADD TIME AND NODE NAME TO MEX
               SSAGE'
*        A LITTLE SUBROUTINE TO PUT NODE AND TIME IN MESSAGE 12
*          ***** RETURNS TO REG 14 ******
         SPACE 1
TIMETERM STM   R0,R1,TIMESAVE          SAVE REGS
         ICM   R1,15,DDTTERM   -> TERM FIELD IN MSG 12           86065
         BZ    TIMETERN      SKIP NAME INSERTION                 86065
         MVC   0(8,R1),TERMNAME        INSERT NODE NAME
         SPACE 1
*        PLACE TIME IN MESSAGE 12
         SPACE 1
TIMETERN TIME  DEC           * DONE BEFORE TEST - SAVE R1 *
         SRL   R0,12         MAKE 000HHMMS                       88220
         STM   R0,R1,TIMEWORK  TIME STASHED AS 000HHMMS DDYYY    88220
         OI    TIMEWORK+3,X'0F'  CLOBBER SECONDS BY SIGN         88220
         ICM   R1,15,DDTTIME  -> TIME FIELD IN MSG 12            86065
         BZ    TIMETERT      SKIP IF NO ROOM                     86065
         MVC   7(7,R1),=X'402120204B2020'  0HH.MM MASK           88220
         ED    7(7,R1),TIMEWORK+1   MAKE TIME                    88220
         MVC   0(7,R1),=X'F021204B202020'  YY.DDD                88220
         ED    0(7,R1),TIMEWORK+5  MAKE DATE                     88220
         MVI   0(R1),C' '    CLEAR HUNDREDS                      88220
         TM    TERMFLG3,TPRIVY  UNLOCKED TERMINAL ?              87187
         BNZ   *+8           YES; LEAVE PERIOD                   87187
         MVI   7+4(R1),C':'  ELSE INDICATE LOCKED (:)            88220
TIMETERT LM    R0,R1,TIMESAVE          RESTORE THE WORKERS
         BR    R14                     RETURN TO REQUESTOR
TIMEWORK DC    F'0'
TIMESAVE DC    2F'0'                    SAVE R0 + R1 HERE
         TITLE '*********  N E T S O L  -  GET/FREE AN RPL ROUTINES'
***********************************************************************
*                                                                     *
*        THE GETRPL SUBROUTINE GETS A NEW RPL VIA A GETMAIN MACRO     *
*        FOR 'LNGTHRPL' IN SUBPOOL 1. IT THEN INITIALIZES IT AND      *
*        RETURNS TO THE CALLER WITH THE RPL ADDRESS IN R5.            *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 10-12 - BASE REGISTERS                             *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*        OUTPUT REGISTERS:                                            *
*                                                                     *
*              REG 0-1 - UNPREDICTABLE                                *
*              REG 5   - ADDRESS OF AN INITIALIZED RPL/NIB/WORKAREA   *
*                                                                     *
***********************************************************************
         SPACE 2
GETRPL   DS    0H
         L     R0,LNGTHRPL             LENGTH OF RPL + SUBPOOL
         GETMAIN R,LV=(0)              G E T M A I N    R P L
         MVC   0(8,R1),=CL8'DYNAMRPL'  IDENTIFY THE RPL AS DYNAMIC
         LA    PTRRPL,8(,R1)           R5 -> R P L
         L     R15,=A(FRESHNIB)  POINT TO ASYNCH NIB/RPL         87131
         MVC   IFGRPL(LNIFGRPL),FRESHRPL-FRESHNIB(R15)  COPY RPL 87131
*                                      NOTE: THIS MAKES RPL ASYNCH
         MVC   NIBDMPID(8),=CL8'DYNAMNIB' SET NIB DUMP ID
         MVC   NIBSTART(NIBLNIB),0(R15) INITITIALIZE NIB         87131
         XC    WORKSPAC(WORKRPLA),WORKSPAC ZERO OUT KEY WORK AREA STUFF
         STM   R0,R1,TIMESAVE          SAVE WORK REGS
         TIME  DEC                      SAVE TIMESTAMP
         STM   R0,R1,GRPLTIME            IN RPL WORKAREA
         LM    R0,R1,TIMESAVE             RESTORE WORK REGS
         BR    R14                     RETURN TO CALLER
         SPACE 3                                                 90120
***********************************************************************
*                                                                     *
*        FREERPL IS ENTERED WHEN AN RPL/WORKAREA IS NOLONGER          *
*        NEEDED BY THE EXIT ROUTINES.  IT ISSUES A FREEMAIN           *
*        MACRO FOR THE RPL ADDRESS IN REGISTER 5.                     *
*        IF THE FIRST 8 CHARACTERS OF THE WORKAREA ARE NOT 'DYNAMRPL' *
*        THEN THIS SUBROUTINE BRANCHES TO INDICATE A USER 0008 ABEND. *
*                                                                     *
*        AT EXIT FROM FREERPL, CONTROL IS RETURNED TO VTAM.           *
*                                                                     *
*        INPUT REGISTERS                                              *
*          R5  - POINTS TO RPL/WORKAREA TO BE FREED                   *
*          R10-R12 - BASE REGISTERS                                   *
*          R13 - ADDRESS OF REGISTER SAVE AREA                        *
*                                                                     *
***********************************************************************
         SPACE 2
FREERPL  ICM   R3,15,RPLUSFLD  LOAD AND TEST TTE ADDRESS         88185
         BZ    *+10                      THEN
         XC    TERMCRPL,TERMCRPL              RESET A(RPL) IN TTE
         L     R0,LNGTHRPL             LENGTH OF RPL TO BE FREED
         S     R5,=F'8'                REDUCE FOR INDENTITY AT FRONT
         CLC   0(8,R5),=CL8'DYNAMRPL'  IS IT A DYNAMIC RPL ?
         BNE   TOOSMALL                NO, ISSUE U0008 ABEND
         SPACE 1
         FREEMAIN R,LV=(0),A=(5)       F R E E   R P L  -> R5
         SPACE 1
RETURN   DS    0H
         L     R14,RETVTAM@            RESTORE EXIT RETURN ADDRESS
         BR    R14                     RETURN
         SPACE 1
LNGTHRPL DC    0F'0',AL1(1),AL3(ENDSECT-STSECT+8)  RPL SUBPOOL/LENGTH
         TITLE '*********  N E T S O L  -  RECEIVE(ANY) SUBROUTINE'
***********************************************************************
*                                                                     *
*                   RECEIVE (ANY)                                     *
*                                                                     *
*        THIS SUBROUTINE IS ENTERED ONLY WHEN A REC (ANY) IS TO       *
*        BE ISSUED.                                                   *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 5     - POINTS TO AN ASYNCHRONOUS RPL PLUS         *
*                          ITS WORKAREA                               *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*         OUTPUT REGISTERS:                                           *
*                                                                     *
*               REG 0-1   - UNPREDICTABLE                             *
*               REG 2-14  - VALUE AT INPUT                            *
*               REG 15    - UNPREDICTABLE                             *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
RECSUB   DS    0H
         ST    R14,SUBSAV14            SAVE RETURN ADDR
RECANY   OI    MFLAGS,RECA             INDICATE READ(ANY) IN PROGRESS
         RECEIVE RPL=(PTRRPL),OPTCD=(ASY,ANY,TRUNC,Q),                 X
               AREA=IOAREA,AREALEN=L'IOAREA,EXIT=RECEND,               X
               RTYPE=(DFSYN,RESP,DFASY)  ALLOW ATTENTIONS        89335
         NI    MFLAGS,255-(RECA)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR RECEIVE(ANY):                                    *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    RECANY                  YES. REISSUE
         LTR   R15,R15                 READ-ANY ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R14,SUBSAV14            RESTORE THE RETURN ADDR
         BR    R14                     RETURN TO CALLER
         TITLE '********* N E T S O L  -  LUSTAT ROUTINE'
***********************************************************************
*       ROUTINE TO HANDLE LOGICAL UNIT STATUS RECEIVED                *
*                                                                     *
*    SSENEEI  SSENSMI                                                 *
*      00        02       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      00        02          SNOCCUR                                  *
*      08        1C       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      08        2B         "     "     "        "    "    "  (RESEND)*
*      08        31       DEVICE POWERED OFF     "    "    "          *
*      08        01          SNOCCUR                                  *
*                                                                     *
***********************************************************************
         SPACE 1
LUSTATUS DS    0H
         OI    FLAGS,LUSTATE           SEND +VE RESPONSE
         OI    MFLAGS,LUSEND
         MVC   SENSE(2),RPLSSEI   SAVE SSENSEI + SSENSMI
         MVC   USENSE(2),RPLUSNSI SAVE USSESEI(2 BYTES)
         NI    RPLOPT12,FF-RPLFMHDR CLEAR FM HDR BIT
         SPACE 1
SENDLU   L     R7,=A(SENDEND)                                    90141
         SEND  STYPE=RESP,CONTROL=LUS,RESPOND=(NEX,FME,NRRN),          *
               RPL=(PTRRPL),POST=SCHED,OPTCD=(ASY,CA),EXIT=(R7)  90141
         NI    MFLAGS,255-(LUSEND)     SEND DONE
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
         BE    SENDLU                  YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B    RETURN                   RETURN TO VTAM
         SPACE 1
CONTLU   NI    FLAGS,255-(LUSTATE)     LUSTAT SEND DONE
         CLC   SENSE,LUS0001           IS DEVICE NOW AVAILABLE
         BE    RESEND                  YES SO SEND LOGON MSG.
         CLC   SENSE,LUS082B           IS DEVICE NOW AVAILABLE
         BE    RESEND
*LOOPS*  CLC   SENSE,LUS0831 POWERED OFF ?                       89344
*LOOPS*  BE    RESEND        YES; BETTER ERROR RECOVERY ON INT.REQ.
         B     FREERPL
         SPACE 1                                                 90141
         LTORG ,                                                 90141
         TITLE '*********  N E T S O L  -  ERROR EXIT RTN'
***********************************************************************
*                                                                     *
*    THIS ROUTINE IS ENTERED IF AN ERROR IS DETECTED.                 *
*                                                                     *
*        INPUT REGS:                                                  *
*                                                                     *
*    REGISTER 0 CONTAINS A RTNCD CODE (4, 8, C, 10, 14, 18)           *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL OF THE REQUEST                      *
*                                                                     *
*           THE FDBK2 FIELD OF THIS RPL CONTAINS A REASON             *
*           CODE WHICH IS A SUBCODE OF THE RTNCD CODE IN              *
*           REGISTER 0.                                               *
*                                                                     *
*    REGISTER 2 - 12 UNMODIFIED BY VTAM                               *
*                                                                     *
*    REGISTER 13 POINTS TO THE SAVE AREA IN USE                       *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS TO VTAM                      *
*                                                                     *
*    REGISTER 15 ERREXIT ROUTINE ADDRESS                              *
*                                                                     *
*                                                                     *
*                                                                     *
*    EXIT FROM ERREXIT IS AS FOLLOWS:                                 *
*                                                                     *
*           THRU ERRETURN TO VTAM, WHICH WILL RETURN TO THE           *
*           MAINLINE OR EXIT ROUTINE NSI.                             *
*                                                                     *
*           TO SNOCCUR, WHICH WILL ABNORMALLY TERMINATE               *
*           NETSOL.                                                   *
*                                                                     *
*           TO PROBDEV.                                               *
*                                                                     *
*                                                                     *
*        OUTPUT REGS:                                                 *
*                                                                     *
*    REGISTER  1-9  UNPREDICTABLE                                     *
*                                                                     *
*    REGISTER 10-12 NETSOL BASE REGISTERS                             *
*                                                                     *
*    REGISTER 13    SAVE AREA UPON ENTRY                              *
*                                                                     *
*    REGISTER 14    UNPREDICTABLE IF EXIT TO SNOCCUR OR               *
*                    RETURN.                                          *
*                   VALUE AT INPUT IF RETURN TO VTAM.                 *
*                                                                     *
*    REGISTER 15    THE INPUT RTNCD CODE IF ERREXIT WAS               *
*                   ENTERED FROM MAINLINE NETSOL.                     *
*                   AN ACTION CODE IF ENTERED FROM AN EXIT            *
*                    ROUTINE.                                         *
*                                                                     *
*    REGISTER  0    UNPREDICTABLE IF ENTERED FROM MAINLINE            *
*                    NETSOL.                                          *
*                   AN ACTION CODE MODIFIER IF ENTERED FROM AN        *
*                    EXIT ROUTINE.                                    *
*                                                                     *
*        NOTE: REGISTERS 0 AND 15 WILL BE RETURNED THRU VTAM          *
*              TO MAINLINE OR EXIT ROUTINE NSI.                       *
*    DESCRIPTION OF ACTION CODES AND FLAGS                            *
*                                                                     *
*                                                                     *
*        THE ERREXIT ROUTINE COMMUNICATES TO THE ERROR EXIT NSI       *
*        VIA AN ACTION CODE SET IN REG 15 AND, IN SOME CASES,         *
*        AN ACTION CODE MODIFIER SET IN REG 0. IN SOME SPECIAL        *
*        CASES, FLAGS ARE SET TO PASS INFORMATION TOO.                *
*                                                                     *
*        THE ACTION CODES AND MODIFIERS INDICATE APPROPRIATE          *
*        ACTIONS TO BE TAKEN BY THE EXIT ROUTINE. THE EXIT            *
*        ROUTINE MAY, HOWEVER, HANDLE THE ERROR ACTION                *
*        DIFFERENTLY FROM WHAT ERREXIT INDICATES BY ITS ACTION        *
*        CODE, IF IT SO CHOOSES.                                      *
*                                                                     *
*        ACTION CODES AND MODIFIERS ARE AS FOLLOWS:                   *
*                                                                     *
*            00 MACRO COMPLETED SUCCESSFULLY                          *
*               REG 0 MODIFIER=0                                      *
*                                                                     *
*            04 THIS IS A SNO (SHOULD NOT OCCUR) WHICH WILL NOT       *
*               BE SET BY THE ERROR EXIT. IF THIS IS SET AT           *
*               NSI, THE NETWORK SOLICITOR SHOULD ABNORMALLY          *
*               TERMINATE.                                            *
*                                                                     *
*TORELES     08 BRANCH TO RELEASE                                     *
*RELONLY        REG 0 MODIFIER=0 CLSDST                               *
*REL1ST                        4 CLSDST + OPNDST (AQUIRE)             *
*                                                                     *
*TOSEND     0C BRANCH TO SENDMSG                                      *
*               REG 0 MODIFIER=MESSAGE NUMBER                         *
*                                                                     *
*REISSU        10     REISSUE THE REQUEST                             *
*                                                                     *
*TOENDREQ    14 BRANCH TO FREERPL                                     *
*                                                                     *
*TORESEND    18 RESEND                                                *
*RSETSOL     1C SNOCCUR                                               *
*                                                                     *
*TOPROBDV    20 BRANCH TO PROBDEV                                     *
*                                                                     *
*    SINCE NETSOL DOES NOT ISSUE ALL API MACROS, NOT ALL              *
*    RTNCD CODES AND REASON CODES ARE POSSIBLE. THOSE                 *
*    FDBK3 CODES WHICH CAN OCCUR FOR THE MACROS ISSUED ARE            *
*    LISTED WITHIN THE SUBSECTIONS OF ERREXIT FOR EACH                *
*    RTNCD CODE. THIS LIST INCLUDES ANY WHICH MAY BE                  *
*    IMPOSSIBLE BECAUSE OF CURRENT NETSOL LOGIC.  THOSE WHICH         *
*    ARE POSSIBLE ARE INDICATED WITH AN '*'.  BASIC ONLY              *
*    CODES ARE NOT LISTED.                                            *
*                                                                     *
*                                                                     *
*    THE FLAGS SET ARE:                                               *
*                                                                     *
*          LOOPONCE - REISSUE I/O COMMAND ONE MORE TIME. IF           *
*                     THE REISSUED COMMAND IS SUCCESSFUL, THE         *
*                     FLAG MUST BE TURNED OFF BY THE MAINLINE         *
*                     OR EXIT ROUTINE. IF UNSUCCESSFUL,               *
*                     ERREXIT TURNS OFF THE FLAG ON ENTRY TO          *
*                     HANDLE THE FAILURE.                             *
*                                                                     *
*            RELOPND - RELEASE THE DEVICE THEN OPNDST(ACQUIRE)        *
*                      IT, THUS RE-ESTABLISHING A SESSION FOR         *
*                      THAT DEVICE.                                   *
*                                                                     *
*           SHUTDOWN - NETSOL SHUTDOWN IN PROGRESS. IF THIS           *
*                      BIT IS ON AT ENTRY TO AN EXIT ROUTINE          *
*                      OTHER THAN TPEND, NO PROCESSING IS DONE        *
*                      WITHIN THE ROUTINE. THIS WILL RAPIDLY          *
*                      FLUSH EXITS REQUESTS ALREADY SCHEDULED         *
*                      AT THE TIME A NEED FOR SHUTDOWN IS             *
*                      DETECTED.                                      *
*                      NOTE: THIS BIT IS ALSO SET BY THE TPEND        *
*                            EXIT, WHICH HAS BEEN SCHEDULED           *
*                            PRIOR TO ENTRY TO ERREXIT FOR A          *
*                            SHUTDOWN CONDITION.                      *
*                                                                     *
***********************************************************************
         SPACE 2
NETSOLER CSECT ,             SPLIT OFF FOR ADDRESSABILITY        87186
ERREXIT  DS    0H
         BALR  R9,0                                              87186
         USING *,R9          LOCAL BASE                          87186
         SPACE 1
***********************************************************************
*        NO NEED TO ESTABLISH ADDRESSABILITY, SINCE BASE REGISTERS    *
*        HAVE NOT BEEN MODIFIED.  NOTE THAT ALSO PTRRPL POINTS TO RPL *
*        USED IN EXIT ROUTINE, ALTHOUGH IT IS NOT NECESSARILY THE RPL *
*        IN USE WHEN ERREXIT WAS ENTERED, I. E. SYNCHRPL MAY          *
*        HAVE BEEN IN USE FOR INQUIRE (APPSTAT).                      *
***********************************************************************
         SPACE 1
         LR    R7,R0                   SAVE RTNCD CODE TO
*                                       USE AS RETURN CODE IF
*                                       ENTRY FROM MAINLINE.
         SPACE 1
         DROP  R5
         USING IFGRPL,R1               => R P L
         SPACE 1
         LR    R8,R1                   SAVE RPL ADRESS
         LR    R6,R14                  SAVE RETURN ADDRESS
         SPACE 1
***********************************************************************
*        FORMAT THE RPL ERROR FIELDS INTO A READABLE MESSAGE AND      *
*        WRITE THE MESSAGE TO THE OPERATOR. NOTE THAT SOME ERRORS     *
*        WILL NOT BE LOGGED TO THE SYSTEM LOG AS THEY ARE CONSIDERED  *
*        UNIMPORTANT. THE DATA IN ERMDATA ARE AVAILABLE FOR           *
*        DEBUGGING PURPOSES.                                          *
***********************************************************************
         SPACE 1
***********************************************************************
*        BYPASS THOSE ERROR COMBINATIONS DEFINED IN 'ERMSGTAB'        *
***********************************************************************
         SPACE 1
         STM   R3,R5,RPLERRSA     SAVE WORK REGS DURING TABLE SCAN
         TM    UFLAGS,SHUTDOWN+UFGIGNER+UFGREST  SHUTTING DOWN ? 89338
         BNZ   ERMBYPAS      YES, DON'T FLOOD CONSOLE            89338
         MVC   ERMDATA(1),RPLREQ  BUILD                  REQ
         MVC   ERMDATA+1(2),RPLFDBK   ERROR COMPARISON  /RTNCD/FDBK2
         MVC   ERMDATA+3(4),RPLSSEI     FIELD           /SSEI/SSMI/USER
         LM    R3,R5,ERMBXLE      LOAD BXLE REGS
         TM    UFLAGS,INITDLAY  STILL IN START-UP MODE ?         89338
         BZ    *+8           NO                                  89338
         LA    R3,ERMINIT    USE LONGER EXCLUSION LIST           89338
         CR    R3,R5              NULL TABLE?
         BH    ERMSG              YES => DISPLAY ERROR MSG
         SPACE 1
ERMLOOP  MVC   ERMTEMP,ERMDATA    COPY COMPARISON FIELD TO WORKAREA
         NC    ERMTEMP,ERMAND(R3) ZERO IRRELEVANT FIELDS FOR COMPARE
         CLC   ERMTEMP,ERMCODE(R3) A NON-DISPLAY ERROR?
         BE    ERMBYPAS             YES => DON'T DISPLAY ERROR MSG
         BXLE  R3,R4,ERMLOOP        NO  => LOOK AT NEXT TABLE ENTRY
         SPACE 1
***********************************************************************
*        FORMAT AND DISPLAY ERROR MESSAGE                             *
***********************************************************************
         SPACE 1
ERMSG    UNPK  PACKWORK(3),RPLREQ(2)   UNPACK REQUEST CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+33(2),PACKWORK PUT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLRTNCD(2) UNPACK RETURN CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+42(2),PACKWORK PUT IT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLFDB2(2)  UNPACK FEEDBACK 2 CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+51(2),PACKWORK PLACE IN MESSAGE
         UNPK  PACKWORK(9),RPLSSEI(5)  UNPACK SYSTEM SENSE CODES
         TR    PACKWORK(8),TRTAB       PRETTY IT UP
         MVC   ERRORMSG+62(2),PACKWORK TO MESSAGE
         MVC   ERRORMSG+73(2),PACKWORK+2  RPLSSMI CODES TOO
         MVC   ERRORMSG+82(4),PACKWORK+4  RPLUSNSI CODES ALSO
         L     R3,RPLUSFLD             -> TTE FOR TERMINAL NAME
         MVC   ERRORMSG+92(8),TERMNAME TO ERROR MESSAGE AREA
ERMWTO   WTO   MF=(E,ERRORMSG)              WRITE ERROR MSG.
ERMBYPAS LR    R15,R7                  RESTORE R0 RETURN CODE
         LR    R1,R8                   RESTORE RPL ADDRESS
         LR    R14,R6                  RESTORE RETURN ADDRESS
         LM    R3,R5,RPLERRSA          RESTORE WORK REGS
         SPACE 1
***********************************************************************
*        CHECK IF ERREXIT HAS BEEN ENTERED FROM MAIN LINE OR          *
*        EXIT ROUTINE . IF ERROR IN MAIN LINE THEN RETURN VIA         *
*        REGISTER 14, AND UPON RETURN TO MAIN-LINE CODE               *
*        APPROPRIATE ACTION WILL BE TAKEN.                            *
***********************************************************************
         SPACE 1
         LR    R3,R14                  SAVE RETURN ADDR
         C     R1,=A(SETLRPL)  IS THIS A SETLOGON REQUEST ?      88210
         BER   R14                     YES.  IN MAINLINE
*                                       AND RETURN TO VTAM.
         CH    R15,HEX18           18  RPL ECB/EXIT PROBLEM?
         BL    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*                                       OCCUR SINCE SHUTDOWN
*                                       SWITCH STOPS EXITS'
*                                       ACTION PRIOR TO THE
*                                       CLSDSTACB.
*                                      NOTE. CODES HIGHER
*                                       THAN 18 DO NOT EXIST
         SPACE 1
***********************************************************************
*        UPON ENTRY IF R1 IS NOT EQUAL TO R5 (R1 = A(SYNCHRPL) )      *
*        THEN R1'S AND R5'S INFORMATION MUST BE COMBINED.             *
*        THE COMMAND THAT CAUSED THE ERROR WAS                        *
*        ISSUED USING SYNCHRPL AND R5 IS POINTING TO AN               *
*        ASYNCH RPL.  FOR THIS RTN WE NEED SOME INFO IN BOTH.         *
***********************************************************************
         SPACE 1
         CR    R1,R5                   ARE WE USING ONE RPL
         BE    ERRPLOK                 YES, BRANCH
*              MOVE THE NECESSARY INFORMATION FROM THE R5 RPL TO
*              SYNCHRONOUS RPL (R1). THIS IS THE SWITCHES, SAVE AREAS
*              ETC. PRIOR TO THE WORK AREAS.
         L     R14,=A(SYNWORK)  GET WORK AREA                    86145
         MVC   0(WORKRPLA,R14),LNIFGRPL(R5)                      86145
         SPACE 1
***********************************************************************
*        GET THE FDBK2 FIELD FROM THE RPL.                            *
*        PREPARE TO BRANCH BASED ON 'RTNCD'.                          *
***********************************************************************
         SPACE 1
ERRPLOK  DS    0H
         SLR   R6,R6                   CLEAR REG 6  .
         IC    R6,RPLFDB2              PICK UP REASON CODE
         LR    R7,R6                   START TO INITIALIZE R7
*                                       WHICH WILL BE USED AS
*                                       AN INDEX FOR BRANCH
*                                       TABLES
         SLR   R0,R0                   SET UP DEFAULT ACTION CODE
         SPACE 1
***********************************************************************
* TRANSLATE RTNCD CODE AND FDBK2 CODE INTO ACTION CODE                *
*                                                                     *
*   RTNCD CODES HAVE A GENERAL MEANING AS FOLLOWS:                    *
*                                                                     *
*          04   EXTRAORDINARY COMPLETION                              *
*                 FUNCTION COMPLETED. ADDITIONAL INFORMATION          *
*                 AVAILABLE. PROBABLY HANDLED OUT OF LINE.            *
*                 CONDITION SHOULD BE HANDLED BEFORE MAKING           *
*                 FURTHER REQUESTS TO THE DEVICE.                     *
*                                                                     *
*          08   REISSUE                                               *
*                 TEMPORARY ENVIRONMENT CONDITION CAUSED              *
*                 REQUEST TO BE REJECTED.                             *
*                                                                     *
*          0C   DAMAGE                                                *
*                 INTEGRITY OF THE REQUEST OR DEVICE HAS BEEN         *
*                 DISTURBED.                                          *
*                                                                     *
*          10   ENVIRONMENT ERROR                                     *
*                 REQUEST INCOMPLETE DUE TO ENVIRONMENTAL             *
*                 CONDITION. ENVIRONMENT MUST BE ALTERED              *
*                 BEFORE RECOVERY CAN BE ATTEMPTED.                   *
*                                                                     *
*          14   USER LOGIC ERROR                                      *
*                 USER ERROR ON THE REQUEST. REQUEST REJECTED         *
*                 OR INCOMPLETE. NOT EXECUTABLE IN THE                *
*                 PRESENT FORM.                                       *
*                                                                     *
*          18   RPL NOT AN RPL   OR   RPL IS ALREADY ACTIVE.          *
***********************************************************************
         SPACE 1
         B     FEEDTAB(R15)            GO TO FEEDBACK CODE
*                                       HANDLING ROUTINE
FEEDTAB  BAL   R7,SNOCCUR           0  FEEDBACK OF 00 DOESN'T
*                                       ENTER LERAD OR SYNAD
         B     EXTRAORD             4  EXTRAORDINARY COM-
*                                       PLETION
         B     REISSUE              8  REISSUE
         B     DAMAGE               C  DAMAGE
         B     ENVIRON             10  ENVIRONMENT ERROR
         B     LOGIC               14  LOGIC ERROR
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 04 - EXTRAORDINARY COMPLETION                           *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*    03        *  RECEIVE    /   "     "          "     MESSAGE       *
*    04        *  RECEIVE    / EXCP CONDITION INCOMING RESPONSE       *
*                                                                     *
***********************************************************************
         SPACE 2
EXTRAORD DS    0H
         CH    R6,HEX3                 IS IS VALID FDBK2
         BE    VALFDBK2                YES SO HANDLE IT
         CH    R6,HEX4                 IS IT ONLY VALID REASON CODE
         BE    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
* BSC DEVICES UNDER VTAM2 RESPOND WITH ZERO SENSE IN SOME CASES
* TO RECORD MODE MACROS I.E.
* WHEN USER SENSE INCLUDED THE SSENSEI + SSENSMI FIELDS ARE 0
***********************************************************************
         SPACE 1
VALFDBK2 IC    R7,SENSE                SAVE SSENSEI FOR BRANCHING
         LTR   R7,R7                   DO WE HAVE ZERO STATUS?
         BZ    STAT3270                MUST BE STATUS FROM 3270
***********************************************************************
*        CONVERT SENSE CODE INTO BRANCH TABLE OFFSET                  *
***********************************************************************
         SRL   R7,3                    ASSUME X'04' IS INDEX = 0
         SLR   R6,R6                   ZERO INDEX REG
CINDEX4  LTR   R7,R7                   INDEX DONE?
         BZ    BRTAB4                  YES => GO BRANCH
         SRL   R7,1                    NO  => SHIFT NEXT BIT OUT
         LA    R6,4(,R6)                      BUMP INDEX BY 4
         B     CINDEX4                        GET NEXT BIT
BRTAB4   CH    R6,HEX14                INDEX TOO BIG?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RSNTAB4(R6)             GO TO HANDLE SSENSMI
RSNTAB4  BAL   R7,SNOCCUR        <08 (00)  SHOULD NOT OCCUR
         B     REQREJ             08 (04)  REQUEST REJECT
         B     REQERR             10 (08)  REQUEST ERROR
         B     STATERR            20 (0C)  STATE ERROR
         B     RHERROR            40 (10)  RH ERROR
         B     PATHERR            80 (14)  PATH ERROR
         SPACE 1
***********************************************************************
*                                                                     *
*        08 - REQUEST REJECT                                          *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       08      00                  REISSUE SEND (IN BRACKET)         *
*       08      01                  RELEASE LU                        *
*       08      02                  IGNORE (CONTINUE)                 *
*       08      11                  REISSUE SEND (USER ATTN)     87054
*       08      13                  REISSUE SEND (IN BRACKET)         *
*       08      18           LINK CONNECT/DISCONNECT (RETRY)     86131
*       08      1B                  IGNORE (WAIT FOR LU TO ENTER DATA)*
*       08      1C                  IGNORE                  DC18203   *
*       08      27                  INTERMITTENT ERROR - RETRY   88304
*       08      2B                  REISSUE SEND                      *
*       08      2D                  IGNORE (CONTINUE)                 *
*       08      31                     "       "                      *
*                                                                     *
***********************************************************************
         SPACE 1
REQREJ   IC    R7,SENSE+1              GET SSENSMI
         CH    R7,HEX2                 IS IT POSSIBLE
         BH    TRYHIGH                 >2 TRY FOR HIGH RANGE
         SLL   R7,2          CONVERT INDEX TO OFFSET
         B     RSNTAB5(R7)             HANDLE SSENSMI
         SPACE 1
RSNTAB5  B     DORESEND      0  REISSUE SEND WITHOUT BB          86160
         B     DORELON       1  RELEASE                          86160
         B     DOENDREQ      2  CONTINUE REQUEST (IGNORE)        86160
         SPACE 1
TRYHIGH  CH    R7,HEX13            13  REISSUE SEND
         BE    DORESEND                                          86160
         CH    R7,HEX11      ATTENTION DURING WRITE ?            87054
         BE    DORESEND      YES; RESTART THE WRITE (NASTY)      87054
         SPACE 1                                                 86131
CHK18X   CH    R7,HEX18      LINK DISCONNECT/RECONNECT ?         86131
         BNE   CHK1BX        NO; LOOK FOR OTHERS                 86160
         L     R15,RPLUSFLD  GET TERMINAL BLOCK                  86160
         CLI   TERMMSGX-TERMTABL(R15),X'06'  LOGON MESSAGE ?     86160
         BE    CONTPASS      YES; COMPLETE RELEASE               86160
         OI    TERMMSGX-TERMTABL(R15),X'80' ACTIVATE THE MESSAGE 86160
         B     STATERR       AND TREAT AS STATE ERROR            86160
         SPACE 1
CHK1BX   CH    R7,HEX1B                KEY PRESSED ON TERMINAL ?
         BE    DOENDREQ      YES; IGNORE FOR NOW                 86160
         SPACE 1
CHK1CX   EQU   *                                               DC18203
         CH    R7,HEX1C                                        DC18203
         BE    DOENDREQ      IGNORE FOR NOW                      86160
         SPACE 1                                               DC18203
CHK2BX   CH    R7,HEX2B
         BE    DORESEND      INEGRITY LOST - RETRY               88304
         CH    R7,=Y(X'27')  INTERMITTENT ERROR ?                88304
         BNE   CHK2DX
DORESEND LA    R15,TORESEND        2B  WE SHOULD TRY AGAIN
         B     ERRETURN
         SPACE 1
CHK2DX   CH    R7,HEX2D
         BE    DORELON       TAKE TERM OUT OF SERVICE (ELSE LOOPS)
CHK31X   CH    R7,HEX31            31  DEVICE POWERED OFF       DC18203
         BE    DOENDREQ      YES; IGNORE FOR NOW                 86160
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*                                                                     *
*        10 - REQUEST ERROR                                           *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       10      03                  RELEASE TERMINAL                  *
*       10      XX                  SHOULD NOT OCCUR                  *
*                                                                     *
***********************************************************************
         SPACE 1
REQERR   CLI   SENSE+1,X'03'           FUNCTION NOT SUPPORTED?
***      BE    *+8                          JUMP OVER THE BAL    86012
***      BAL   R7,SNOCCUR                   TELL WHERE WE CAME FROM
         SPACE 1
         STM   R1,R3,RPLERRSA-IFGRPL(R5)  SAVE REG 1 - 3         86160
         L     R3,RPLUSFLD             LOAD A(TTE)
         MVC   MSG1003+17(8),TERMNAME  MOVE NODE NAME TO MSG
         WTO   MF=(E,MSG1003)          WTO ERROR MSG
         L     R1,=A(DDT3270E)  EDS TYPE DEVICE ?                89263
         C     R1,TERMDDT    OR DID SOMEONE GOOF ?               89263
         BNE   NOTEDS03      ?                                   89263
*KILL*   XC    TERMMODE,TERMMODE  KILL LOGON MODE                89263
         L     R1,=A(DDT3270)   TRY AS A DUMB DEVICE             89263
         ST    R1,TERMDDT    UPDATE WITH PLAIN DEVICE            89263
         LM    R1,R3,RPLERRSA-IFGRPL(R5)  RESTORE                89263
         B     DORESEND      TRY RESENDING THIS MESSAGE SANS SFE 89263
NOTEDS03 DS    0H                                                89263
         SPACE 1
         LM    R1,R3,RPLERRSA-IFGRPL(R5)  RESTORE REG 1 - 3      86160
DORELON  LA    R15,TORELES         03  FUNCTION NOT SUPPORTED
         LA    R0,RELONLY              RELEASE TERMINAL
         B     ERRETURN
         SPACE 1
STATERR  LA    R15,TORELES         20  STATE ERROR
         LA    R0,REL1ST               RELEASE AND REOPEN
         B     ERRETURN
         SPACE 1
RHERROR  BAL   R7,SNOCCUR
         ORG   RHERROR                                           87131
         B     STATERR       HAPPENED WHILE INSTALLING LOCAL SNA 87131
*                            CONTROLLER AND CONNECTING/DISCONNECTING
*                            CRTS.                               87131
         SPACE 1
***********************************************************************
*                                                                     *
*          80 - PATH ERRORS                                           *
*                                                                     *
*           SSENSEI/SSENSMI                                           *
*             80      05           NO SESSION CONDITION               *
*                                                                     *
***********************************************************************
         SPACE 1
PATHERR  IC    R7,SENSE+1              GET   SSENSMI
         CH    R7,HEX5                 IS IT ONE WE CAN HANDLE
         BE    STATERR       HANDLE 'NO SESSION' BY RE-OPENING   86160
         B     DOENDREQ      ELSE IGNORE                         86160
         SPACE 1
STAT3270 DS    0H                      HANDLE 2 BYT OF USER SENSE CODES
*                                       RETURNED FROM 3270
         CLC   =X'0001',USENSE  PLAIN OLD I/O ERROR ?            92073
         BNE   STAT3272      NO                                  92073
         L     R15,RPLUSFLD  GET TERM BASE                       92073
         L     R0,=A(DDT3270E)  GET EDS BASE                     92073
         C     R0,TERMDDT-TERMTABL(R15)  TRYING AS EDS DEVICE ?  92073
         BE    REQERR        YES; TRY AS NON-EDS                 92073
STAT3272 LA    R15,TORELES             ASSUME DEVICE UNUSABLE
         CLC   USENSE,SNAS0200         WAS SDLC STATUS RETURNED FOR DE
*                                       WHICH SHOWS POWER ON
         BE    INTRREQ1                YES CHECK MORE
         CLC   USENSE,=X'0A0A'  OUR PROTOCOL CONVERTER CODE ?    88185
         BE    STATERR       RELEASE AND RE-ACQUIRE              88185
         CLC   USENSE,SNAS0010         NO CHECK IF INTV. REQ. (DEVICE
*                                       POWERED OFF )
         BNE   ERRETURN                RELEASE DEVICE
*        B     DOENDREQ      WAIT FOR DEVICE POWER-UP
         SPACE 1
INTRREQ1 DS    0H                      DEVICE IS NOW AVAILABLE. JUST
DOENDREQ LA    R15,TOENDREQ  IGNORE BECAUSE LOSTERM WILL GET CALLED
         B     ERRETURN                SCHEDULED
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 08 - REISSUE                                            *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*      00      * ALL API MACROS   TEMPORARY STORAGE                   *
*                (NOT CHECK,       ALLOCATION FAILURE                 *
*                 OPEN, OR CLOSE)                                     *
*                                                                     *
***********************************************************************
         SPACE 2
REISSUE  DS    0H
         LTR   R6,R6                   ONLY VALID REASON CODE
*                                       IS 0
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LA    R15,REISSU           0  ACTION IS TO REISSUE
*                                      REG 0 IS ALREADY SET FOR
*                                       REISSUE ONLY
         B     ERRETURN                RETURN TO EXIT ROUTINE
         SPACE 3                                                 90120
***********************************************************************
*                                                                     *
*  FEEDBACK CODE 0C - DAMAGE                                          *
*                                                                     *
*   REASON CODE   MACROS         MEANING          ACTION              *
*    00              *           BASIC ONLY          *                *
*    01          RECEIVE      LU NOT AVAILABLE     RELEASE 08         *
*                 SEND         "    "   "            "     08         *
*    02          REC/SEND     REQUEST CANCELLED    FREERPL 14 00      *
*                             BY TEST REQUEST                         *
*    03              *         BASIC ONLY             *               *
*    04              *         BASIC ONLY             *               *
*    05              *         BASIC ONLY             *               *
*    06              *         BASIC ONLY             *               *
*    07          REC/SEND     CONNECTION RECOVERY  FREERPL 14 00      *
*                               IN PROGRESS                           *
*    08          REC/SEND     LU RESTARTED         FREERPL 14 00      *
*    09          OPNDST       NODE DEACTIVATED     FREERPL 14 00      *
*    0A          RECEIVE      SNOCCUR                SNOCCUR          *
*    0B         RE/SEND/CLSDST REQUEST CANCELLED   FREERPL 14 00      *
*                                BY CLSDST                            *
*    0C          REC/ SEND     REQUEST CANCELLED   RELEASE 14 04      *
*                                BY CLEAR                             *
*    0D          SEND          REQ CANCEL BY EXCP.  RELEASE/REACQ     *
*                                                                     *
***********************************************************************
         SPACE 2
DAMAGE   DS    0H
         CH    R6,HEXD                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SLL   R7,2                    INDEXING
         B     RSNTABC(R7)             GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTABC  BAL   R7,SNOCCUR          0   BASIC MODE ONLY           86160
         B     DORELON             1   LU NOT AVAILABLE          86160
         B     DOENDREQ            2   REQUEST CANCELLED BY TEST REQ.
         BAL   R7,SNOCCUR          3   BASIC ONLY                86160
         BAL   R7,SNOCCUR          4   BASIC ONLY                86160
         BAL   R7,SNOCCUR          5   BASIC ONLY                86160
         BAL   R7,SNOCCUR          6   BASIC ONLY                86160
         B     DOENDREQ            7   CONNECTION RECOVERY       86160
         B     DOENDREQ            8   LU  RESTARTED             86160
         B     DOENDREQ            9   NODE DEACTIVATED          86160
         BAL   R7,SNOCCUR          A   SNOCCUR                   86160
         B     DOENDREQ            B   REQUEST CANCELLED BY CLSDST
         B     STATERR             C   RELEASE WITH OPNDST       86160
         B     STATERR             D   RELEASE AND RE-ACQUIRE    87103
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 10 - ENVIRONMENT                                        *
*                                                                     *
*   FDBK2 CODE   MACRO(S)      MEANING                  ACTION        *
*                                                                     *
*     00        OPNDST/CLSDST  TERM,LU,APPL NOT ACTIVE  CLSDST  0C 08 *
*                                              (OPNDST) FREERPL 14 00 *
*     01        OPNDST         OPNDST FAILED           FREERPL  14 00 *
*                                                                     *
*     02        CLSDST (PASS)  TARGET APPL. UNACCEPTABLE MSG.   0C 09 *
*                                                                     *
*     03        OPNDST/SEND/REC  HALT QUICK                   SNOCCUR *
*                                                                     *
*     05         "      "     "   CHANNEL/LINK FAILURE RELEASE  08 00 *
*                                                                     *
*     06        OPNDST          ANS                    RELEASE  08 00 *
*                                                                     *
*     07        SEND/REC        CANCELLED BY VARY      RELEASE  08 00 *
*                                                                     *
*     09         "    "         TERMINATE SELF/LOGOFF  FREERPL  14 00 *
*                                                                     *
*     0A        ALL MACROS      ACF/VTAM ERROR         RELEASE  08 00 *
*                                                                     *
*     0D        ALL MACROS      ACF/VTAM INACTIVE TO ACB       SNOCCUR*
*                                                                     *
*     0E        ALL MACROS      TCB ABENDED            FREERPL  14 00 *
*                                                                     *
*     0F        SEND/REC        BUFFERS FILLED         FREERPL  14 00 *
*                                                                     *
*     10         "   "          TERMINATE SELF COMMAND RELEASE  08 04 *
*                                                                     *
*     11        OPNDST          SDT FAILED             FREERPL  14 00 *
*                                                                     *
***********************************************************************
         SPACE 2
ENVIRON  DS    0H
         CH    R6,HEX11                IS RSN COD11VALID SIZE?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*   HANDLE FIRST THREE REASON CODES WITHOUT BRANCH TABLE.             *
***********************************************************************
         SPACE 1
         LTR   R6,R6                   CHECK FOR TERMINAL OR
*                                       APPLICATION NOT
*                                       AVAILABLE.
         BNZ   CHKQUIES            ¬0  IF NOT, NEXT CHECK
*
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
         BO    TERMUNAV
         LA    R15,TOSEND              NO. APPLICATION UNAVAIL-
         LA    R0,MSG08                ABLE WRITE ERROR MSG
         B     ERRETURN
TERMUNAV DS    0H
         LA    R15,TOENDREQ            TERMINAL UNAVAILABLE FOR
         B     ERRETURN                 OPNDST(SPEC) AFTER
*                                       CLSDST(PASS) BECAUSE
*                                       CLSDST(PASS) FAILED
*                                       AND THE NETWORK OPER-
*                                       ATOR VARRIED OFF THE
*                                       TERMINAL.
CHKQUIES DS    0H
         LA    R15,TORELES             PREPARE ACTION CODE
         SLL   R7,2                     AND BRANCH TABLE INDEX
*                                       IN CASE REASON CODE
*                                       GREATER THAN 2
         CH    R6,HEX2                 CHECK FOR 1 OR 2
*
         BL    TERMUNAV             1  OPNDST FAILED FREERPL
*
         BH    RSNTAB10(R7)        >2  GO TO REASON CODE
*                                       HANDLING ROUTINE
*
         LA    R15,TOSEND           2  APPLICATION IS QUIESCING
         LA    R0,MSG09                 OR NEVER ACCEPTS LOGONS
*                                       BUT QUIESCE IS MORE
*                                       LIKELY SINCE 'NEVER
*                                       ACCEPTS WOULD PROBABLY
*                                       HAVE BEEN FOUND ON THE
*                                       INQUIRE.  EITHER CAN
*                                       HAPPEN IF THE OTHER
*                                       APPLICATION CHANGES ITS
*                                       STATUS AFTER NETSOL'S
*                                       INQUIRE(APPSTAT) BUT
*                                       PRIOR TO THE LATER
*                                       CLSDST(PASS).
         B     ERRETURN                WRITE ERROR MESSAGE
RSNTAB10 EQU   *-(3*4)                 START TABLE AT R6=3
*
         B     QUIKHALT             3  VTAM IS HALTING.
*                                      NETSOL CAN NO LONGER
*                                       COMMUNICATE WITH
*                                       DEVICES. TPEND NOTIFIED
*
         BAL   R7,SNOCCUR           4  BASIC MODE ONLY
         B     ERRETURN             5  PERMANENT PATH FAILURE
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             6  AUTO NETWORK SHUTDOWN
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             7  VARY DEACT. IMMEDIATE
*                                       LOSTERM WAS SCHEDULED
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         BAL   R7,SNOCCUR           8  DIAL BASIC MODE ONLY
         B     IGNORERR             9  TERMINATE SELF OR LOGOFF
*
         B     VTAMERR              A  VTAM ERROR FOR DEVICE
*
         BAL   R7,SNOCCUR           B  DIAL-OUT ONLY
*
         BAL   R7,SNOCCUR           C  DIAL IN BASIC MODE ONLY
         B     QUIKHALT             D  VTAM INACTIVE TO YOUR     89129
*                                      ACB.  SHOULD NOT OCCUR
*
         B     QUIKHALT             E  TCB ABENDED               89129
         B     IGNORERR             F  BUFFERS FILLED
         B     ERR1010             10  TERMINATE SELF
         B     IGNORERR            11  SDT FAILED
*
QUIKHALT DS    0H
         LA    R15,TOENDREQ            INDICATE RETURN TO VTAM
         OI    UFLAGS,SHUTDOWN+UFGIGNER  BEGIN SHUTDOWN          86065
         B     ERRETURN
*
VTAMERR  DS    0H                      ON 100A RTNCD  JUST
         LA    R15,TOPROBDV             RELEASE THE TERMINAL.
         B     ERRETURN
         SPACE 1
IGNORERR DS    0H
         LA    R15,TOENDREQ            END REQUEST
         B     ERRETURN
         SPACE 1
ERR1010  DS    0H
         LA    R15,TORELES
         LA    R0,REL1ST
         B     ERRETURN
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 14 - LOGIC
*                                                                     *
*   FDBK2 CODE      MACRO(S)     MEANING                    ACTION    *
*                                                                     *
*       00        REC/SEND    NON-VTAM REQUEST CDE         SNOCCUR    *
*                                                                     *
*       02         "    "     EXIT ADDRESS ZERO            SNOCCUR    *
*                                                                     *
*       03         "    "     ECB ADDRESS ZERO             SNOCCUR    *
*                                                                     *
*       04         CHECK      RPL IS NOT ACTIVE            SNOCCUR    *
*                                                                     *
*       10         REC/SEND   INVALID ACB                  SNOCCUR    *
*                                                                     *
*       11          "    "                                            *
*                                                                     *
*       12          "    "    CLSDST IN PROGRESS (FREERPL)  14 00     *
*                                                                     *
*       13      REC/SEND/INT  RPL ARG + NIB CID INVALID     14 00     *
*                                                                     *
*       1E      REC/SEND      INVALID DATA ARE OR LENGTH   SNOCCUR    *
*                                                                     *
*       23        "   "       INVALID MACRO REQUEST TYPE   SNOCCUR    *
*                                                                     *
*         3C    SEND (POST=SCHED)   TRIED TO ISSUE 2ND SEND14 00DC18203
*       3B-47     "   "                                    SNOCCUR    *
*                                                                     *
*       4A                                                 SNOCCUR    *
*                                                                     *
*       4B          "         INVALID LOGON         (MSG)   0C 07     *
*                                                                     *
*       4C       INQUIRE(APPLSTAT) NO APPL NAME     (MSG)   0C 07     *
*                INQUIRE(SESSPARM) NO QUEUED CINIT(FREERPL) 14 00     *
*                CLSDST(PASS)      NO CDRSC FOR TERM(MSG)   0C 03     *
*                                                                     *
*       4D                                                 SNOCCUR    *
*                                                                     *
*       4E-51                                              SNOCCUR    *
*                                                                     *
*       52      INVALID NIB                                SNOCCUR    *
*                                                                     *
*       53      INQUIRE       INVALID SYM. NAME     (MSG)   0C 06     *
*               OPNDST(SPEC)  INVALID SYM. NAME   (FREERPL) 14 00     *
*                                                                     *
*       54      OPNDST        DEST. UNOPENABLE    (FREERPL) 14 00     *
*                                                                     *
*       55      OPNDST(AQUIRE) APPL NOT AUTHORIZED         SNOCCUR    *
*               CLSDST(PASS)   ????????????????????   (MSG) 0C 05     *
*                                                                     *
*       56-5C                                              SNOCCUR    *
*                                                                     *
*       5D      CLSDST        DEST, NOT OPENED    (FREERPL) 14 00     *
*                                                                     *
*       5E                                                            *
*                                                                     *
*       5F      CLSDST        RESOURCE NOT OWNED  (FREERPL) 14 00     *
*                                                                     *
*       60      CLSDST           "      "  CLOSABL   "     14 00      *
*                                                                     *
*        62     REC/SEND                                   SNOCCUR    *
*                                                                     *
***********************************************************************
         SPACE 2
LOGIC    DS    0H
         CH    R6,HEX60                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
*                                       X'60' IS HIGHEST VALID
*                                       VALUE TO BE EXPECTED.
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         CH    R6,HEX4A                IF REASON CODE AT LEAST
         BNL   CHK56X            >=4A   X'4A', DO SEPARATELY
         LA    R15,TOENDREQ            PREPARE ACTION FOR
*                                       REASON CODES OF 12 & 13
         CH    R6,HEX12                CLSDST IN PROGRESS?
         BE    ERRETURN            12  YES, ACTION CODE
*                                        ALREADY SET
         CH    R6,HEX13                IS REASON CODE 13?
         BNE   CHK3CX        *****DEBUG - FREE DEVICE WHICH OTHERWISE
         OI    UFLAGS,UFGREST+UFGIGNER  FORCE RESTART *****DEBUG*****
         STM   R15,R1,A$SAVE-IFGRPL(R5) SAVE *****DEBUG*****     89344
         ABEND 666,DUMP      ****DEBUG*****                      90127
*DEBUG*  BAL   R7,SNOCCUR    HANGS ON 'PNFY1' STATUS *****DEBUG  89338
         LM    R15,R1,A$SAVE-IFGRPL(R5) RESTORE *****DEBUG*****  89344
         CR    R15,R15       SET CODE FOR NEXT TEST   *****DEBUG*****
         BE    ERRETURN            13  CID INVALID
*                                      PROBABLY ALREADY
*                                       RELEASED THE TERMINAL.
*                                       IGNORE.
CHK3CX   CH    R6,HEX3C             3C  TRY TO ISSUE 2ND SEND   DC18203
         BE    ERRETURN                 YES SO IGNORE           DC18203
         BAL   R7,SNOCCUR        16
CHK56X   DS    0H
         CH    R6,HEX56                IF REASON CODE MORE THAN
         BH    CHK5DX             >56   X'56', DO SEPARATELY
         LA    R15,TOSEND              PREPARE DEFAULT ACTION
         SLL   R7,3                     AND BRANCH TABLE INDEX
         B     RSNTAB14(R7)            GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTAB14 EQU   *-(8*(X'4A'))           START TABLE W/ R6=X'4A'
*
         BAL   R7,SNOCCUR          4A
         NOP   0
*
         LA    R0,MSG07            4B  UNKNOWN LOGOMODE TABLE ENTRY
         B     ER144B                  OR UNIDENTIFIED APPLICATION
*
         LA    R0,MSG07            4C  INQUIRE(APPSTAT)..NO SYMBOLIC
         B     TSTINQA                  NAME FOR APPLICATION
*                                     OR INQUIRE(SESSPARM)..NO QUEUED
*                                       CINIT
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         BAL   R7,SNOCCUR          4D
         NOP   0
*
         BAL   R7,SNOCCUR          4E
         NOP   0
*
         BAL   R7,SNOCCUR          4F
         NOP   0
*
         BAL   R7,SNOCCUR          50
         NOP   0
*
         BAL   R7,SNOCCUR          51  APPLICATION NEVER
         NOP   0                        ACCEPTS LOGONS
*                                      MEANS NETSOL NEVER
*                                       ACCEPTS LOGON.
*
         BAL   R7,SNOCCUR          52
         NOP   0
*
         LA    R0,MSG07            53  SYMBOLIC (APPL OR TERM)
         B     TSTINQA                  NAME NOT KNOWN
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         LA    R15,TOENDREQ                   54
         B     ERRETURN
*
         LA    R0,MSG05            55  APPLICATION NOT AUTHORIZED
         B     OPNDSPC                  FOR OPNDST(ACQUIRE)
*                                      OR
*                                      CLSDST FAILURE.
*
         BAL   R7,SNOCCUR          56  CONFLICT BETWEEN MODE
         NOP   0                        AND DEVICE TYPE.
*                                      TRIED TO OPNDST FOR
*                                       A RECORD DEVICE.
*                                       NETSOL ONLY SUPPORTS
*                                       BASIC DEVICES.
*                                      CAN NOT OCCUR IN NETSOL
CHK5DX   DS    0H
         CH    R6,HEX5D                CLSDST INVALID (TERMINAL
*                                       NOT CONNECTED)
         BNE   CHK5FX             ¬5D  NOT X'5D', CHECK FURTHER
         LA    R15,TOENDREQ        5D  ACTION, RELEASE RPL AND
         B     ERRETURN                 RETURN TO VTAM
CHK5FX   DS    0H
         CH    R6,HEX5F                LESS THAN X'5F' NOT
         BNL   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*
         LA    R15,TOENDREQ     5F 60  REASON CODES OF 5F
         B     ERRETURN                 AND 60 ARE POSSIBLE IF
*                                       A RELREQ OR READEND
*                                       EXIT IS PROCESSED
*                                       AFTER THE DEVICE WAS
*                                       PASSED TO ANOTHER
*                                       APPLICATION.  THIS CAN
*                                       HAPPEN BECAUSE THE
*                                       CLSDST(PASS) WILL NOT
*                                       PURGE AN ALREADY
*                                       SCHEDULED EXIT.
TSTINQA  DS    0H
         TM    MFLAGS,INQAPPST         INQUIRE(APPSTAT) MEANS THE
         BO    ERRETURN                 APPLICATION WAS UNKNOWN TO
*                                       VTAM.
*                                       => PUT OUT ERROR MESSAGE
         LA    R0,MSG03                ASSUME CLSDST(PASS)
         TM    MFLAGS,CLSDST           CLSDST FAILURE MEANS THERE
         BO    ERRETURN                 IS NO CDRSC FOR THE TERMINAL
*                                       IN A CROSS-DOMAIN SESSION.
*                                       => PUT OUT ERROR MESSAGE
         LA    R15,TOENDREQ            ASSUME INQUIRE(SESSPARM)
*                                       FAILURE IMPLIES THAT THERE
         TM    MFLAGS2,INQSESS          IS NO QUEUED CINIT FOR LOGON
         BO    ERRETURN                 PROCESSING FOR THE TERMINAL.
*                                       => END THE REQUEST
         LA    R15,TOENDREQ            ASSUME OPNDST(SPEC)
         TM    MFLAGS,OPNDSPEC         OPNDST FAILURE MEANS THE
         BO    ERRETURN                 NODE IS UNKNOWN TO VTAM.
*                                       POSSIBLY DUE TO MAJOR NODE
*                                       BEING DEACTIVATED.
*                                       => END THE REQUEST
         BAL   R7,SNOCCUR              ANY OTHER CAUSE OF
*                                       ERROR IS IMPOSSIBLE
ER144B   DS    0H
         TM    MFLAGS,CLSDST           ERROR ON CLSDST(PASS)
         BZ    ERRETURN                NO => WRITE UNKNOWN APPL'N
         LA    R0,MSG01                YES. WRITE THE MESSAGE
*                                       'XXXXXXXX UNKNOWN LOGOMODE'
         B     ERRETURN
OPNDSPC  DS    0H
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
         BNO   *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TM    MFLAGS,CLSDST           WAS THIS A CLOSE
         BO    ERRETURN                 CLDST(PASS).  OR
*                                       APPLICATION CAN'T BE
*                                       CONNECTED AS REQUESTED
*                                       IN RELREQ OR READEND.
*                                       ISSUE ALREADY PREPARED
*                                       ERROR MESSAGE.
         BAL   R7,SNOCCUR              NO, ANY OTHER CAUSE
*                                       IS IMPOSSIBLE
         TITLE '*********  N E T S O L  -  SCAN FOR LOGON SUBROUTINE'
ERRETURN DS    0H
         STC   R15,ACTIONS             SAVE ACTION CODES FOR
         STC   R0,ACTIONS+1             DEBUGGING
         CR    R1,R5                   DO WE HAVE BOTH A SYNCH
*                                      RPL AND A ASYNCH RPL
         BE    ERROUT                  NO, SKIP THE MOVE OF THE
*                                      RPL WORKAREA
         L     R14,=A(SYNWORK)  GET WORK AREA                    86145
         MVC   LNIFGRPL(WORKRPLA,R5),0(R14)   RESTORE WORKAREA   86145
         SPACE 1
         DROP  R1
         USING IFGRPL,R5
         SPACE 1
         PUSH  USING         SAVE R3 AND ?                       91296
         DROP  R3            R3 HAS RETURN ADDRESS, NOT TERM     91296
ERROUT   ICM   R2,15,RPLUSFLD  ANY TTE POINTER ?                 91296
         BZ    ERROUTNS      NO                                  91296
         LTR   R15,R15       RELEASE WITHOUT REACQUIRE?          91296
         BZ    ERROUTNS      YES                                 91296
         STM   R15,R1,A$SAVE   SAVE REGISTERS                    91296
         TIME  BIN           GET CURRENT TIME                    91296
         USING TERMTABL,R2                                       91296
         LR    R1,R0         COPY TIME                           91296
         S     R1,TERMETIM   SUBTRACT TIME OF LAST ERROR         91296
         CH    R1,=Y(60*100)  MORE THAN ONE MINUTE ?             91296
         BH    ERROUTNW      YES; SET NEW                        91296
         INC   TERMERCT,WORK=R15  INCREASE CONSECUTIVE ERRORS    91296
         CH    R15,=H'10'    10 ERRORS IN ONE MINUTE ?           91296
         BL    ERROUTNR      NO; JUST RESTORE                    91296
         LM    R15,R1,A$SAVE  RESTORE                            91296
         SLR   R15,R15       BUT CHANGE REQUEST TO RELEASE, NO ACQ
         B     ERROUTNS                                          91296
ERROUTNW ST    R0,TERMETIM   SAVE ERROR TIME                     91296
         LA    R0,1                                              91296
         ST    R0,TERMERCT   INITIALIZE ERROR COUNT              91296
ERROUTNR LM    R15,R1,A$SAVE  RESTORE                            91296
ERROUTNS CH    R15,=Y(TOPROBDV)  LARGER THAN MAX?
         BH    ERROUTR                                           88188
         B     *+4(R15)      BRANCH ACCORDING TO CODE            88188
         B     ERROUTR       0 - RELEASE; DON'T RE-ACQUIRE       88188
         B     ERROUTR       4 - RELEASE AND RE-ACQUIRE          88188
         B     ERROUTR       8 - RELEASE                         88188
         B     ERROUTS      12 - SEND (AGAIN?)                   88188
         B     ERROUTS      16 - RE-ISSUE REQUEST                88188
         B     ERROUTR      20 - END REQUEST                     88188
         B     ERROUTS      24 - RESEND                          88188
         B     ERROUTS      28 -   OPEN                          88188
*        B     ERROUTR      32 - PROBLEM DEVICE                  88188
ERROUTR  ICM   R2,15,RPLUSFLD  LOAD AND TEST TTE POINTER         88188
         BZ    ERROUTS       NONE; SKIP                          88188
         NI    TERMFLG3,TFREQ  FORCE LOGOFF                      91296
         OI    TERMFLG3,TFLOF  SET FORCED USER LOGOFF            91296
         AIF   ('&LOCAL' NE 'PID').NOERROF                       92300
         ICM   R2,15,TERMLOUD  ANY LOUD ?                        91296
         BZ    ERROUTS       NO                                  88207
         STM   R15,R1,A$SAVE   SAVE REGISTERS                    88207
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM AREA
         MVC   A$SID,=C'A$RB'                                    88207
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,A$SONL,A$SAKEY+A$SBUILD) 88207
*                            LOGOFF SESSIONS, NOT USER           88207
         ST    R2,A$SBUFR    COPY LOUD                           88207
         LA    R1,A$SVCRB                                        88207
         SVC   249           CANCEL SESSIONS; KEEP USER          88207
         LM    R15,R1,A$SAVE   RESTORE REGISTERS                 88207
.NOERROF SPACE 1                                                 91195
ERROUTS  LR    R14,R3                  RESTORE ADDR AND RETURN
         BR    R14                      VTAM WHICH WILL RETURN
*                                       TO THE NSI AFTER THE
*                                       COMMAND WHICH CAUSED
*                                       ERREXIT TO BE ENTERED.
         POP   USING         RESTORE R3                          91296
NETSOL70 CSECT ,             RESTORE MAIN CSECT                  87186
         TITLE '*********  N E T S O L  -  EQUATES AND CONSTANTS'
R0       EQU   0                       MACRO WORK REGISTER, AND
*                                      CONTAINS REASON CODE UPON
*                                      ABNORMAL TERMINATION
R1       EQU   1                       PARAMETER REGISTER,
*                                      CORRUPTED BY API MACROS
R2       EQU   2                       WORK REGISTER
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       POINTER TO CURRENT RPL, IT
*                                      IS NOT USED FOR ANY OTHER
*                                      PURPOSE
PTRRPL   EQU   R5                      AS ABOVE
R6       EQU   6                       WORK REGISTER
R7       EQU   7                       WORK REG
R8       EQU   8                       NIB POINTER
PTRNIB   EQU   8                        EXCEPT IN STD LOGON.
R9       EQU   9                       WORK REG
R10      EQU   10                      THIRD BASE REGISTER
R11      EQU   11                      SECOND BASE REGISTER
R12      EQU   12                      FIRST BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN REGISTER
R15      EQU   15                      RETURN CODE AND EXIT ENTRY PTR
         SPACE 1
***********************************************************************
*        FLAGS INDEPENDENT OF A SPECIFIC REQUEST                      *
***********************************************************************
         SPACE 1
UFLAGS   DC    X'00'                   MAIN NETSOL FLAGS
SHUTDOWN EQU   X'80'                   SHUTDOWN IN PROGRESS
INIT     EQU   X'40'                   INITIALIZATION IN PROGRESS
INITERR  EQU   X'20'                   ERROR DURING INITIALIZATION
INITDLAY EQU   X'10'         TIME DELAY BETWEEN START-UPS        87256
UFGSYS   EQU   X'08'         SYSTEM RESERVED FOR SYSTEMS GROUP   86065
UFGREST  EQU   X'04'         SYSTEM IS BEING RECYCLED            86065
UFGIGNER EQU   X'02'         IGNORE ERRORS; SHUTDOWN OR RECYCLE  86065
         SPACE 1
DUMPFLAG DC    X'00'                   REASON CODE FOR DUMPING
OPENCODE EQU   1                       OPEN ACB FAILURE
SETLCODE EQU   2                       SETLOGON FAILURE
CBLKCODE EQU   4                       CONTROL BLOCK FAILURE
TABLTRBL EQU   8                       TROUBLE WITH THE TTE'S
         SPACE 1
TRTAB1   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6' HEX->CHAR TR TABLE
TRTAB    EQU   TRTAB1-X'F0'            USE ONLY LAST 16 OF TRTAB
         SPACE 1
PACKWORK DS    XL16                    UNPACK WORK AREA
         SPACE 1
SESSPARM DS    XL120                   INQUIRE(SESSPARM) WORK AREA
*                                      MAX SIZE ENCOUNTERED IS 88
         SPACE 1
SYSTEMID DC    X'00'                   SYSTEM ID FOR SOME APPLIDS
         SPACE 1
         DC    C'SAVED REGISTERS FOR USER ABENDS HERE'
SNOREGS  DC    16F'0'                  REGS FOR SNO CONDITIONS
         SPACE 1
RETVTAM@ DS    F                       SAVE AREA FOR EXIT RETURN ADDR
         SPACE 1
GENSAVE  DS    18F                     SAVE AREA FOR SOME EXIT RTNS
         SPACE 1
SUBSAV14 DC    F'0'                    SAVE AREA FOR REG 14
*                                       USED BY SUBROUTINES
FINISECB DC    F'0'                    ECB THAT MAIN-LINE CODE WAITS
*                                      ON, IT IS POST'ED BY TPEND EXIT
         SPACE 1                                                 85235
*              MISCELLANEOUS CONSTANTS AND MASKS.
SBA      EQU   X'11'                   3270 SET BUFFER @ FIELD
CLEARKEY EQU   X'6D'                   3270 CLEAR KEY
PA1KEY   EQU   X'6C'         3270 PA1 KEY (LOGOFF REQUEST)       88220
ENTERKEY EQU   X'7D'                   3270 ENTER KEY
HEX50    EQU   X'50'                   3270 BUFFER ADDRESS
HEXD3    EQU   X'D3'                     "    "       "
HEXD5    EQU   X'D5'                     "     "       "
CR       EQU   X'0D'                   3767 CARRIAGE RETURN
FF       EQU   X'FF'                   USED TO TURN OFF SWITCHES
         SPACE 1
*              EQUATES FOR ACTION CODES AND MODIFIERS
TORELES  EQU   8                       BRANCH TO RELEASE
TOSEND   EQU   X'0C'                   BRANCH TO WRITE
REISSU   EQU   X'10'                   REISSUE COMMAND
RELONLY  EQU   0                       RELEASE ONLY DONT REAQUIRE
REL1ST   EQU   4                       RELEASE AND ACQUIRE
TOENDREQ EQU   X'14'                   BRANCH TO FREERPL
TORESEND EQU   X'18'                   TAKE ACTION ACCORDING TO RTN
TOPROBDV EQU   X'20'                   BRANCH TO PROBDEV
         SPACE 2                                                 90120
*              HEX VALUES FOR FEEDBACK AND RETURN CODE COMPARES
         SPACE 1
         DS    0H
HEX2     DC    XL2'2'
HEX3     DC    XL2'3'
HEX4     DC    XL2'4'
HEX5     DC    XL2'5'
HEX8     DC    XL2'8'
HEX9     DC    XL2'9'
HEXC     DC    XL2'C'
HEXD     DC    XL2'D'
HEX10    DC    XL2'10'
HEX11    DC    XL2'11'
HEX12    DC    XL2'12'
HEX13    DC    XL2'13'
HEX14    DC    XL2'14'
HEX18    DC    XL2'18'
HEX1B    DC    XL2'1B'
HEX1C    DC    XL2'1C'                                      DC18203
HEX20    DC    XL2'20'
HEX2B    DC    XL2'2B'
HEX2D    DC    XL2'2D'
HEX31    DC    XL2'31'
HEX3C    DC    XL2'3C'
HEX4A    DC    XL2'4A'
HEX56    DC    XL2'56'
HEX5D    DC    XL2'5D'
HEX5F    DC    XL2'5F'
HEX60    DC    XL2'60'
         EJECT
*              BISYNCH STATUS ERROR MESSAGE CODES
         DS    0H
SNAS0010 DC    XL2'0010'               3270 -- INTERRUPTION
*                                       REQUIRED BECAUSE DEVICE
*                                       POWERED OFF.
SNAS0200 DC    XL2'0200'                3270 -- DEVICE END
*                                       (ALONE), MEANING THAT
*                                       THE DEVICE IS POWERED
*                                       ON AND OK TO USE.
         SPACE 1
*              LOGICAL UNIT STATUS FOR 3276/3278/3287/ETC.
         SPACE 1
LUS0001  DC    XL2'0001'               DEVICE AVAILABLE
LUS082B  DC    XL2'082B'               DEVICE AVAILABLE
LUS0831  DC    XL2'0831'     LUSTAT - DEVICE POWERED OFF         89344
         SPACE 1
@EXEC2   MVC   0(0,R4),2(R7)
@EXEC3   MVC   0(0,R4),0(R6)
         SPACE 2
         LTORG
         TITLE '*********  N E T S O L  -  ERROR BYPASS TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE RPL-BASED MACRO ERRORS WHICH        *
*        ARE NOT TO BE WRITTEN TO THE OPERATOR'S CONSOLE.             *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OFTHE FOLLOWING FIELDS:            *
*                                                                     *
*             ERMCODE - THE ERROR COMBINATION TO BE BYPASSED.         *
*                       THE FORMAT OF THIS FIELD IS:                  *
*                     RPLREQ/RPLRTNCD/RPLFDB2/RPLSSEI/RPLSSMI/RPLUSNSI*
*                       ANY FIELD WHICH DOESN'T MATTER SHOULD BE SET  *
*                       TO ZERO.                                      *
*                                                                     *
*             ERMAND  - THE MASK TO ZERO IRRELEVANT FIELDS IN THE     *
*                       CONSTRUCTED ERROR COMBINATION FIELD PRIOR     *
*                       TO COMPARISON WITH ERMCODE. EACH BYTE HERE    *
*                       HAS A CORRESPONDING BYTE IN ERMCODE AND SHOULD*
*                       BE SET TO:                                    *
*                         X'FF' - IF THE FIELD IN ERRCODE IS NON-ZERO.*
*                         X'00' - IF THE FIELD IN ERRCODE IS ZERO.    *
*                                                                     *
***********************************************************************
         SPACE 1
ERMCODE  EQU   0,7                    ERROR COMBINATION TO BE COMPARED
ERMAND   EQU   7,7                    MASK TO ZERO IRRELEVANT FIELDS
ERMSGL   EQU   14                     LENGTH OF A TABLE ENTRY
         SPACE 1                                                 89338
ERMINIT  DC    X'00040400000010'       START-UP; IGNORE UNREADY  89339
         DC    X'00FFFF0000FFFF'       2/2                       89339
         SPACE 1
ERMSGTAB EQU   *                      START OF ERROR MSG TABLE
ERM1CODE DC    XL7'1B144B00000000'      BAD APPLID
ERM1AND  DC    XL7'FFFFFF00000000'        KEYED IN AT TERMINAL
ERMSGEND EQU   *-ERMSGL               LAST ENTRY IN TABLE
         SPACE 1
ERMBXLE  DC    A(ERMSGTAB)            BXLE (TABLE START)
         DC    A(ERMSGL)                REGS   (ENTRY LENGTH)
         DC    A(ERMSGEND)                FOR TABLE SEARCH  (TABLE END)
         TITLE '*********  N E T S O L  -  NETSOL GETPARM OPTIONS'
***********************************************************************
*        THIS TABLE DEFINES THE OPTIONS WHICH CAN BE SPECIFIED        *
*        WHEN SEARCHING THE INPUT CMD STRING FOR AN OPTION.           *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 1
GPAMECT  EQU   0                      START OF OPTION LIST
GPLEN    EQU   0,2                    MAX LENGTH OF PARAMETER
GPTEXTL  EQU   2,2                    LEN OF PARM ERROR TEXT
GPFLAG   EQU   4,1                    OPTION FLAGS
GPOPT    EQU   X'80'                  PARAMETER IS OPTIONAL
GPNUM    EQU   X'40'         NUMERIC PARAMETER ONLY              88220
GPCOM    EQU   X'01'         * STARTS COMMENTS                   88220
GPNULL   EQU   X'00'                  NO OPTIONS FOR THIS PARAMTER
GPTEXT   EQU   5                      TEXT INSERTED INTO GP ERR MSG
         SPACE 1
         PRINT NOGEN
*
*        APPLICATION LOGON SEQUENCES
*
SLNODE   $GP    8,'NODENAME',GPNULL
SLAPPL   $GP    8,'LOGON APPLID',GPOPT+GPCOM
SLNAME   $GP   8,'NODE OR USER NAME',GPNULL                      88209
        TITLE '*********  N E T S O L  -  VTAM COMMAND/INTERPRET TABLE'
***********************************************************************
*                                                                     *
*        purpose: define interpret table used by NETSOL70.            *
*                 (refer to acf/vtam system programmers guide)        *
*                                                                     *
*        note:    1) valid logon sequences are defined in upper       *
*                    and lower case.                                  *
*                 2) the logon sequences are compared with the        *
*                    passed string for a length equal to the          *
*                    logon sequence. therefore, any logon sequence    *
*                    containing another logon sequence as a           *
*                    substring (as 'imstest' contains 'ims') must     *
*                    appear in the interpret table before the         *
*                    sequence contained as a substring does.          *
*                                                                     *
*        date:    August 21, 1985          Updated by G.P.            *
*                                                                     *
*                                                                     *
***********************************************************************
         PRINT NOGEN                                             85328
NETINTAB CSECT ,                                                 87193
         LOGCHAR APPLID=(ROUTINE,NETINLOG),SEQNCE='LOGON'        87193
         LOGCHAR APPLID=(ROUTINE,NETINLOG),SEQNCE='logon'        87193
*        ALL OTHER SEQUENCES ARE EXPANDED BY $CMDN MACRO         87193
         SPACE 1                                                 87193
NETSOLCM CSECT ,             BEGIN NEW CSECT FOR COMMANDS        88172
***********************************************************************
*        THIS TABLE DEFINES THE COMMANDS WHICH MAY BE ENTERED FROM    *
*        THE TERMINAL.                                                *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 1
CMDGAPPL EQU   0,8,C'C'      OBSOLETE GENERIC APPLICATION NAME   88185
CMDVAPPL EQU   0,8,C'C'      VTAM APPLICATION NAME               88185
CMDTEXT  EQU   8,8,C'C'      LOGON SEQUENCE OR COMMAND           88185
CMDROUTA EQU   16,4,C'A'     A(CMD PROCESSING ROUTINE)           88185
CMDTEXTL EQU   21,1,C'F'     LENGTH OF CMDTEXT                   88185
CMDFLAG  EQU   22,1,C'B'     COMMAND FLAG                        88185
CMDINIT  EQU   X'80'           ALLOWED FROM SYSIN FILE           88185
CMDTERM  EQU   X'40'           ALLOWED FROM TERMINAL             88185
CMDCONS  EQU   X'20'           ALLOWED FROM CONSOLE              88192
CMDAUTH  EQU   X'01'           USER MUST BE AUTHORIZED           88185
CMDAPPF  EQU   23,1,C'B'     0 OR APPLICATION GROUP FLAG         88185
CMDTABL  EQU   24            LENGTH OF CMD TABLE ENTRY           88185
         SPACE 1
         PRINT NOGEN
PRECMDTB $CMD  TSO,PRETEST,'LOGON',CMDTERM  SCAN APPLID()        87186
         $CMD  TSO,PRETEST,'APPLID(',CMDTERM  APPLID             87186
CMDTAB   DS    0X                            START OF COMMAND TABLE
*
*        APPLICATION LOGON SEQUENCES
*
         $CMDN TSOA,CHKAPPL,'TSOA',CMDTERM,TYPE=A$USFTSO  CDRSC  87187
         $CMDN TSOB,CHKAPPL,'TSOB',CMDTERM,TYPE=A$USFTSO  CDRSC  87187
*        NOTE THAT WE HAVE ONLY ONE TSO/E LICENSE; ALL 'TSO' REQUESTS
*        ARE ROUTED TO SYSTEM B.                                 88311
         $CMDN TSO,CHKAPPL,'TSO',CMDTERM,TYPE=A$USFTSO           84142
         $CMDN TSO,CHKAPPL,'LOGON',CMDTERM,TYPE=A$USFTSO         84142
         $CMDN TSO,CHKAPPL,'1',CMDTERM,TYPE=A$USFTSO             84142
         SPACE 1                                                 87287
CCICS    $CMDN CICSPROD,CHKAPPL,'CICSPROD',CMDTERM,TYPE=A$USFCIC 92335
         $CMDN CICSPROD,CHKAPPL,'CICS',CMDTERM,TYPE=A$USFCIC     92335
         $CMDN CICSPROD,CHKAPPL,'2',CMDTERM,TYPE=A$USFCIC        92335
CCICT    $CMDN CICSTEST,CHKAPPL,'CICSTEST',CMDTERM,TYPE=A$USFCIC 87225
         $CMDN CICSTEST,CHKAPPL,'14',CMDTERM,TYPE=A$USFCIC       87225
         SPACE 1                                                 87287
CSWYL  $CMDN SUPWYL,CHKAPPL,'SUPWYL',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SUPWYL,CHKAPPL,'SUPER',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SWYA,CHKAPPL,'SUPA',CMDTERM+CMDAUTH,TYPE=A$USFWYL   90113
       $CMDN SWYA,CHKAPPL,'SWYA',CMDTERM+CMDAUTH,TYPE=A$USFWYL   93002
       $CMDN SUPWYL,CHKAPPL,'SWYL',CMDTERM+CMDAUTH,TYPE=A$USFWYL 92335
       $CMDN SWYB,CHKAPPL,'SUPB',CMDTERM+CMDAUTH,TYPE=A$USFWYL   90343
       $CMDN SWYB,CHKAPPL,'SWYB',CMDTERM+CMDAUTH,TYPE=A$USFWYL   93002
       $CMDN SUPWYL,CHKAPPL,'3',CMDTERM+CMDAUTH,TYPE=A$USFWYL    90113
       $CMDN SWYLTEST,CHKAPPL,'SWYLTEST',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SWYLTEST,CHKAPPL,'15',CMDTERM+CMDAUTH,TYPE=A$USFWYL 92222
         SPACE 1                                                 87287
CWYL     $CMDN WYLBUR,CHKAPPL,'WYLBUR',CMDTERM,TYPE=A$USFWYL     84142
         $CMDN WYLA,CHKAPPL,'WYLA',CMDTERM,TYPE=A$USFWYL CDRSC   87187
         $CMDN WYLB,CHKAPPL,'WYLB',CMDTERM,TYPE=A$USFWYL CDRSC   87187
*TEST*   $CMDN WYLC,CHKAPPL,'WYLC',CMDTERM,TYPE=A$USFWYL CDRSC   90343
         $CMDN WYLBUR,CHKAPPL,'WYL',CMDTERM,TYPE=A$USFWYL        84142
         $CMDN WYLBUR,CHKAPPL,'4',CMDTERM,TYPE=A$USFWYL          84142
         $CMDN WYLTEST,CHKAPPL,'WYLTEST',CMDTERM+CMDAUTH,TYPE=A$USFWYL
         $CMDN WYLTEST,CHKAPPL,'16',CMDTERM+CMDAUTH,TYPE=A$USFWYL
         SPACE 1                                                 87287
         $CMDN EXHI,CHKAPPL,'EXHIBIT',CMDTERM,TYPE=A$USFEXH      84142
         $CMDN EXHA,CHKAPPL,'EXHA',CMDTERM,TYPE=A$USFEXH CDRSC   87187
         $CMDN EXHB,CHKAPPL,'EXHB',CMDTERM,TYPE=A$USFEXH CDRSC   87187
*TEST*   $CMDN EXHC,CHKAPPL,'EXHC',CMDTERM,TYPE=A$USFEXH CDRSC   90330
         $CMDN EXHI,CHKAPPL,'EXHI',CMDTERM,TYPE=A$USFEXH         86356
         $CMDN EXHI,CHKAPPL,'EXH',CMDTERM,TYPE=A$USFEXH          84142
         $CMDN EXHI,CHKAPPL,'5',CMDTERM,TYPE=A$USFEXH            84142
CEXOR   $CMDN EXORCIST,CHKAPPL,'EXORCIST',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORCIST,CHKAPPL,'17',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORA,CHKAPPL,'EXORA',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORB,CHKAPPL,'EXORB',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         SPACE 1                                                 87287
CJRPA    $CMDN CJRPA,CHKAPPL,'CJRPA',CMDTERM,TYPE=A$USFOTH       85328
         $CMDN CJRPA,CHKAPPL,'CJRP',CMDTERM,TYPE=A$USFOTH        85328
         $CMDN CJRPA,CHKAPPL,'JRP',CMDTERM,TYPE=A$USFOTH         85328
         $CMDN CJRPA,CHKAPPL,'10',CMDTERM,TYPE=A$USFOTH          85328
         SPACE 1                                                 85245
         $CMDN NETOP,CHKAPPL,'NETOP',CMDTERM,TYPE=A$USFNET       85245
         $CMDN NETOP,CHKAPPL,'OPERATOR',CMDTERM,TYPE=A$USFNET    85245
         $CMDN NETOP,CHKAPPL,'11',CMDTERM,TYPE=A$USFNET          85245
         SPACE 1                                                 88245
*DEFUNCT RELAY GOLD (PC <=> NTO <=> 3270 MODE)                   88245
*DEFUNCT                                                         88245
*DEFUNCT $CMDN R3270,CHKAPPL,'R3270',CMDTERM  RELAY/3270         88245
*DEFUNCT $CMDN R3270,CHKAPPL,'GOLD',CMDTERM                      88245
*DEFUNCT $CMDN R3270,CHKAPPL,'RELAY',CMDTERM                     88245
         SPACE 1                                                 89328
CKERM    $CMDN KERMIT,CHKAPPL,'KERMIT',CMDTERM  UNRESTRICTED KERMIT
         $CMDN KERMIT,CHKAPPL,'KERM',CMDTERM                     89328
         $CMDN KERB,CHKAPPL,'KERB',CMDTERM   B-SYSTEM ONLY       89328
         $CMDN KERA,CHKAPPL,'KERA',CMDTERM   A-SYS / DEBUG       89328
         $CMDN COMM,CHKAPPL,'COMM',CMDTERM  CPU/CPU COMMUNICATIONS
         $CMDN COMM,CHKAPPL,'8',CMDTERM                          93263
         $CMDN COMA,CHKAPPL,'COMA',CMDTERM  CPU A                93263
         $CMDN COMB,CHKAPPL,'COMB',CMDTERM  CPU B                93263
         SPACE 1                                                 87287
         $CMDN PFK9,CHKAPPL,'9',CMDTERM       **ERROR            85245
         $CMDN PFK12,CHKAPPL,'12',CMDTERM  **FOR SPARES          85328
         $CMDN PFK13,CHKAPPL,'13',CMDTERM  **FOR SPARES          85328
         $CMDN PFK20,CHKAPPL,'20',CMDTERM  **FOR SPARES          85328
         $CMDN PFK21,CHKAPPL,'21',CMDTERM  **FOR SPARES          85328
         $CMDN PFK22,CHKAPPL,'22',CMDTERM  **FOR SPARES          85328
*OLD*    $CMDN SWITCH,CHKAPPL,'SWITCH',CMDTERM  MACKINNEY SWITCH 92040
         $CMDN SWITCH,CHKAPPL,'23',CMDTERM            DITTO      92040
         $CMDN PFK24,CHKAPPL,'24',CMDTERM  **FOR SPARES          85328
         SPACE 1                                                 90147
        $CMDN NETSOLGP,CHKAPPL,'NETSOLGP',CMDTERM+CMDAUTH,TYPE=A$USFNET
         $CMDN NETA,CHKAPPL,'NETA',CMDTERM   CDRSC (DEBUG)       88223
         $CMDN NETB,CHKAPPL,'NETB',CMDTERM   CDRSC (DEBUG)       88223
*TEST*   $CMDN NETC,CHKAPPL,'NETC',CMDTERM   CDRSC (DEBUG)       90330
         SPACE 1                                                 90147
         $CMDN JES2A,CHKAPPL,'JES2A',CMDTERM+CMDAUTH (DEBUG)     89116
         $CMDN JES2B,CHKAPPL,'JES2B',CMDTERM+CMDAUTH (DEBUG)     89116
         $CMDN JES2,CHKAPPL,'JES2',CMDTERM+CMDAUTH (DEBUG)       89116
         SPACE 1                                                 90147
*OLD*    $CMDN TMON8CSM,CHKAPPL,'TMON8CSM',CMDTERM+CMDAUTH   TMON
*OLD*    $CMDN TMON8CSM,CHKAPPL,'TMON',CMDTERM+CMDAUTH   TMON    90147
         SPACE 1                                                 87287
***********************************************************************
*                                                                     *
*        COMMANDS VALID PRIOR TO NETSOL LOGON                         *
*                                                                     *
***********************************************************************
PRELOGON DS    0X            START OF LOCAL FUNCTIONS            88179
         $CMD  SETSTATS,SETSTATS,'STATUS',CMDTERM                87193
         $CMD  SETSTATS,SETSTATS,'STAT',CMDTERM                  87193
CSLOGON  $CMD  SETLOGON,SETLOGON,'SETLOGON',CMDTERM+CMDINIT+CMDCONS
         $CMD  SETRANGE,SETRANGE,'SETRANGE',CMDTERM+CMDINIT+CMDCONS
         $CMD  EODSYSIN,EODSYSIN,'END',CMDINIT  LOG.EOF          87137
         SPACE 1                                                 86065
CMDUNTAB $CMD  SETPASON,SETPASON,'PASSWORD',CMDTERM              86065
         $CMD  SETPASON,SETPASON,'PASS',CMDTERM                  88192
         $CMD  SETPASON,SETPASON,'PAS',CMDTERM                   89076
         $CMD  SETPASON,SETPASON,'UNLOCK',CMDTERM                86065
         $CMD  SETPASON,SETPASON,'SIGNON',CMDTERM                88192
PSWCMD   $CMD  SETPASON,SETPASON,'LOGON',CMDTERM                 88179
         $CMD  SETPASOF,SETPASOF,'LOCK',CMDTERM                  86065
         $CMD  SETOSCMD,SETOSCMD,'OS',CMDTERM+CMDAUTH            87187
         $CMD  SETWTO,SETWTO,'MESSAGE',CMDTERM                   88172
         $CMD  SETWTO,SETWTO,'MSG',CMDTERM                       88172
         $CMD  SETHELP,SETHELP,'HELP',CMDTERM                    88172
         $CMD  SETHELP,SETHELP,'?',CMDTERM                       88172
         $CMD  SETNEWS,SETNEWS,'NEWS',CMDTERM                    88179
CLOGOFF  $CMD  LOGOFF,LOGOFCMD,'LOGOFF',CMDTERM
         $CMD  LOGOFF,LOGOFCMD,'SIGNOFF',CMDTERM                 88192
         $CMD  SETSHOW,SETSHOW,'SHOW',CMDTERM+CMDCONS  SHOW STUFF
         $CMD  SETSET,SETSET,'SET',CMDTERM+CMDCONS   SET THINGS  88206
         $CMD  SETKILL,SETKILL,'KILL',CMDTERM+CMDCONS+CMDAUTH    88206
         SPACE 1                                                 88192
         $CMD  CONSREST,CONSREST,'RESTART',CMDCONS               88192
         $CMD  CONSREST,CONSREST,'RESHOW',CMDCONS                88192
         $CMD  CONSREST,CONSREST,'REPEAT',CMDCONS                88192
         $CMD  CONSLOCK,CONSLOCK,'LOCK',CMDCONS                  88192
         $CMD  CONSULOK,CONSULOK,'UNLOCK',CMDCONS                88192
         $CMD  SETWTO,CONSMSG,'MESSAGE',CMDCONS                  88192
         $CMD  SETWTO,CONSMSG,'MSG',CMDCONS                      88192
         $CMD  SETWTO,CONSMSG,'MSG',CMDINIT ALLOW IN CONFIG FILE 90054
         $CMD TESTMSG,TESTMSG,'TESTMSG',CMDAUTH+CMDCONS+CMDTERM+CMDINIT
         SPACE 1
CMDTABND DC    CL8'ENDOFTAB'                 END OF COMMAND TABLE
NETINTAB CSECT ,             PUT END IN PROPER CSECT             90126
         PRINT &PRTSYS                                           85234
         ENDINTAB                                                87193
         TITLE 'MVS/SP SYSTEM IPO SUPPLIED INTERPRET TABLE'      87187
*/* LIB: IPO1.COM.SAMPLIB(INTTAB)                                87187
*/* GDE: SYSTEM IPO COMMUNICATIONS GUIDE                         87187
*/* DOC: THIS IS THE MVS/SP SYSTEM IPO SAMPLE INTERPRET TABLE    87187
*/*      FOR VTAM LOGONS.  IT HAS THE UPPER AND LOWER            87187
*/*      CASE ENTRIES FOR 'LOGON' (ROUTINE OF NETINLOG)          87187
*/*                                                              87187
         SPACE 2                                                 87187
***************************************************************  87187
*                                                                87187
*    SCAN INPUT FOR STANDARD LOGON SEQUENCE                      87187
*                                                                87187
*    STANDARD LOGON SEQUENCE IS AS FOLLOWS:                      87187
*      ANY NUMBER OF BLANKS                                      87187
*      'LOGON ' OR 'LOGON,'                                      87187
*      OPTIONAL OTHER DATA ENDING IN ' ' OR ','                  87187
*      'APPLID('                                                 87187
*      ONE TO EIGHT ALPHANUMERIC CHARACTERS SIGNIFYING           87187
*       THE APPLICATION NAME                                     87187
*      ')'                                                       87187
*      AN OPTIONAL ' ' OR ',' FOLLOWED BY OTHER DATA             87187
*                                                                87187
*    NOTE:                                                       87187
*      'LOGON' OR 'LOGON ' OR 'LOGON,'                           87187
*      IS SUFFICIENT TO LOGON TO TSO.                            87187
*                                                                87187
*    NOTE:                                                       87187
*      IF 'APPLID(NAME)' IS NOT FOUND,                           87187
*      THEN TSO IS ASSUMED.                                      87187
*                                                                87187
***************************************************************  87187
         PUSH  USING                                             87193
         DROP  ,             MAKE SURE                           90126
NETINLOG CSECT ,                                                 87187
         STM   R14,R12,12(R13)                                   87187
         BALR  R12,0                                             87187
         USING *,R12                                             87187
*                                                                87187
         LTR   R2,R0                   LENGTH OF LOGON MESSAGE   87187
         BNP   VS2DFLT       MAKE DEFAULT SUBSYSTEM              90120
         BCTR  R2,0                    DECREMENT TO              87187
         EX    R2,TRANS                 EXECUTE TRANSLATE        87187
         LR    R2,R0                   LENGTH OF LOGON MESSAGE   87187
         LR    R3,R1                   POINT TO LOGON MESSAGE    87187
         LR    R4,R3                   POINT BEYOND END OF       87187
         AR    R4,R2                    LOGON MESSAGE            87187
         BCTR  R3,0                    BACKSPACE 1 FOR LOOP      87187
*                                       ACTION                   87187
*                                       BELOW                    87187
         SPACE 2                                                 87187
NEXTCHAR DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHARACTER            87187
         CLI   0(R3),C' '              IGNORE LEADING BLANKS     87187
         BNE   FOUNDLOG                NON BLANK CONTINUE        87187
         BCT   R2,NEXTCHAR             ALL BLANKS?               87187
         B     VS2DFLT                 YES. SET DEFAULT          90120
         SPACE 2                                                 87187
FOUNDLOG DS    0H                                                87187
         LA    R5,L'CLOGON+L'CAPPLID+3(,R3) MINIMUM END          87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
*       'LOGON' HAS BEEN FOUND.SEARCH FOR APPLID(NAME)           87187
         SPACE 2                                                 87187
         LA    R3,L'CLOGON(,R3)        NEXT CHAR BEYOND LOGON    87187
         CLI   0(R3),C' '              NEXT CHAR MUST BE         87187
         BE    APPLSCAN                  EITHER BLANK OR A       87187
         CLI   0(R3),C','                COMMA                   87187
         BNE   VS2DFLT                 NO. MUST BE DEFAULT       90120
APPLSCAN LA    R7,L'CAPPLID  MAXIMUM LENGTH                      87187
         SPACE 2                                                 87187
APPLSCAM DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHAR                 87187
         LA    R5,2(R7,R3)   LENGTH FOR STD. SEQUENCE            87187
         CR    R5,R4         WILL IT FIT ?                       87187
         BH    VS2NTSO       NO; ASSUME TSO                      87187
         LA    R5,L'CAPPLID+2(,R3)     MINIMUM END               87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
         CLC   CAPPLID,0(R3)           IS THIS APPLID(?          87187
         BNE   APPLSCAM                                          87187
         SPACE 2                                                 87187
*       APPLID( FOUND--ENSURE THAT BLANK OR COMMA PRECEDES IT    87187
*       AND THAT IT'S WITHIN BOUNDS OF MESSAGE                   87187
         SPACE 2                                                 87187
COMAPPL  BCTR  R3,0                    BACKSPACE ONE             87187
         CLI   0(R3),C' '              IS IT A BLANK?            87187
         BE STARTSOK                   CONTINUE IF SO            87187
         SPACE 2                                                 87187
         CLI 0(R3),C','                IS IT A COMMA?            87187
         BE    STARTSOK                CONTINUE IF SO            87187
         SPACE 2                                                 87187
         LA    R3,1(R7,R3)         NEXT CHAR PAST APPLID(        87187
         B     APPLSCAN                CONTINUE SCAN FOR APPLID( 87187
         SPACE 2                                                 87187
STARTSOK DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(R7,R3)   GO PAST APPLID(                     87187
NEXT     CLI   0(R3),C' '              IS IT A BLANK?            87187
         BNE   RIGHT                   NO.CHECK FOR RIGHT PAREN  87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL   VS2NTSO                 YES. MUST BE TSO          87187
         B     NEXT                    NO. GO TO NEXT CHAR       87187
RIGHT    CLI   0(R3),C')'              NULL APPL NAME?           87187
         BE    APPLSCAN                YES. LOOK FOR VALID       87187
*                                       APPLID(                  87187
         SPACE 2                                                 87187
*       FIND RIGHT PARENTHESIS                                   87187
         SPACE 2                                                 87187
         LR    R6,R3                   ADDRESS POTENTIAL APPLID NAME
         SPACE 2                                                 87187
FNDPAREN DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL VS2NTSO                   YES. MUST BE TSO          87187
         SPACE 2                                                 87187
         CLI   0(R3),C')'              IS THIS RIGHT PAREN.?     87187
         BNE   FNDPAREN                NO,CONTINUE SCAN          87187
         LA    R5,1(,R3)               MINIMUM END               87187
         CR    R5,R4                   END OF DATA               87187
         BE    NAMELENG                YES. CAN CHECK FOR        87187
*                                       APPL NAME                87187
         SPACE 2                                                 87187
         CLI   1(R3),C' '              NO. NEXT CHARACTER MUST   87187
         BE    NAMELENG                 BE BLANK OR COMMA,       87187
         CLI   1(R3),C','               ELSE CONTINUE SCAN FOR   87187
         BNE   APPLSCAN                 VALID APPLID             87187
         SPACE 2                                                 87187
NAMELENG DS    0H                                                87187
         SPACE 2                                                 87187
*       IF THIS POINT REACHED APPLID WITH LEFT AND RT. PAREN FOUND
*        AND IT IS FOLLOWED BY A BLANK OR A COMMA OR NO MORE DATA
         SPACE 2                                                 87187
         SR    R3,R6                   LENGTH OF APPL NAME IN R3 87187
         CH    R3,LAPPLID              IS NAME TOO BIG?          87187
         BNH   EXTRAPPL                NO. EXTRACT APPL NAME     87187
         LR    R3,R6                   YES. CONTINUE SCAN FOR    87187
         B     APPLSCAN                 VALID APPLID(            87187
EXTRAPPL DS    0H                                                87187
         SPACE 2                                                 87187
         BCTR  R3,0                    DECREMENT FOR EXECUTE     87187
         MVC   20(8,R13),BLANK8        CLEAR OUT TO MOVE NAME    87187
         EX    R3,MVCNAME              EXEC MVC WITH CORRECT LENGTH
         B     VS2ISOK                 GO SET GOOD CODE          87187
         SPACE 2                                                 87187
*        USER TO BE CONNECTED TO DEFAULT SUBSYSTEM (NETWORK SOLICITOR)
*        WHEN NETSOL IS NOT AVAILABLE, THIS DEFAULT CAUSES AN 0C6 ABEND
*        IN VTAM!!!  THE INSERTED CODE SCANS THE ASCB CHAIN TO MAKE
*        SURE NETSOL IS THERE - IF NOT, THE REQUEST IS REJECTED. 90120
VS2DFLT  L     R3,CVTPTR                                         90120
         USING CVTMAP,R3                                         90120
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           90120
         USING ASVT,R15                                          90120
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID              90120
         SLL   R0,2          *4 FOR FAST CHECK                   90120
         SLR   R1,R1         SET INDEX FOR NEXT ASID             90120
GTIAASID LA    R1,4(,R1)     GET NEXT ASID INDEX                 90120
         CR    R1,R0         VALID ?                             90120
         BH    VS2FAIL       NO; QUIT                            90120
GTIAACOM LA    R5,ASVTFRST(R1)  POINT TO ASCB POINTER            90120
         ICM   R5,15,0(R5)   LOAD AND TEST                       90120
         BNP   GTIAASID      SKIP UNUSED/FREE SLOT               90120
         USING ASCB,R5                                           90120
         LA    R14,8         SET DIFFERENTIAL OFFSET - FAKE CSCB 90120
         ICM   R2,15,ASCBJBNI  JOB CSCB ?                        90120
         BNZ   GTIAAJOB      YES; SKIP                           90120
         SLR   R14,14        RESET CSCB ORIGIN OFFSET            90120
         ICM   R2,15,ASCBCSCB  GET THE CSCB                      90120
         BZ    GTIAASID                                          90120
         USING CHAIN,R2      DECLARE THE CSCB                    90120
         CLI   CHVCD,X'04'   START TASK/INIT ?                   90120
         BNE   GTIAASID      NO                                  90120
GTIAAJOB SLR   R2,R14        MAKE FAKE CSCB ORIGIN               90120
         CLC   CTSO,CHCLS    MATCHING NAME ?                     90120
         BNE   GTIAASID      NO                                  90120
         SPACE 1                                                 90120
*  LOGON IS FOR INSTALLATION DEFAULT (IBM IS TSO)                87187
VS2NTSO  MVC   20(8,R13),CTSO          MOVE TSO NAME INTO SAVE AREA
         B     VS2ISOK       YES; ACCEPT IT                      90121
         SPACE 2                                                 87187
VS2FAIL  LA    R15,4         FAIL THIS REQUEST                   90120
         B     VS2EXCOM      GET OUT                             90120
*  VS2 LOGON SEQUENCE O.K.                                       87187
VS2ISOK  SLR   R15,R15                 INDICATE THAT LOGON SEQ   87187
VS2EXCOM LM    R0,R12,20(R13)           WAS INTERPRETED OK       87187
         BR    R14                     RETURN TO CALLER          87187
         SPACE 3                                                 87187
BLANK8   DC    CL8' '                  BLANKS FOR NAME           87187
CLOGON   DC    C'LOGON'                                          87187
*OLD*CTSO     DC    CL8'TSO'                                     87187
CTSO     DC    CL8'NETSOL70'  THIS MODULE IS INSTALLATION DFLT.  90080
CAPPLID  DC    C'APPLID('                                        87187
LAPPLID  DC    H'8'                    LENGTH OF APPLID NAME     87187
MVCNAME  MVC   20(0,R13),0(R6)                                   87187
TRANS    TR    0(0,R1),TRTAB2                                    87187
         SPACE 3                                                 87187
TRTAB2   EQU   *                                                 87187
         DC    74C' '         00-49    BLANK OUT CONTROL CHARS   87187
         DC    X'4A'                   CENT OR LEFT ARROW        87187
         DC    C'.<(+|'                                          87187
         DC    X'50'                   AMPERSAND                 87187
         DC    X'515253545556575859'                             87187
         DC    X'5A'                   EXCLAMATION POINT         87187
         DC    C'$*);¬-/'                                        87187
         DC    X'6263646566676869'                               87187
         DC    X'6A'                   VERTICAL LINE (NOT |)     87187
         DC    C',%_>?'                                          87187
         DC    X'707172737475767778'                             87187
         DC    X'79'                   GRAVE ACCENT              87187
         DC    C':#@'                                            87187
         DC    X'7D'                   SINGLE QUOTE              87187
         DC    C'="'                                             87187
         DC    X'80'                                             87187
         DC    C'ABCDEFGHI'            SMALL LETTERS             87187
         DC    X'8A8B8C8D8E8F90'                                 87187
         DC    C'JKLMNOPQR'            SMALL LETTERS             87187
         DC    X'9A9B9C9D9E9FA0'                                 87187
         DC    X'A1'                   TILDE                     87187
         DC    C'STUVWXYZ'             SMALL LETTERS             87187
         DC    X'AAABACADAEAF'                                   87187
         DC    X'B0B1B2B3B4B5B6B7B8B9'                           87187
         DC    X'BABBBCBDBEBF'                                   87187
         DC    X'C0'                   LEFT BRACE                87187
         DC    C'ABCDEFGHI'            CAPITAL LETTERS           87187
         DC    X'CACB'                                           87187
         DC    X'CC'                   HOOK                      87187
         DC    X'CD'                                             87187
         DC    X'CE'                   FORK                      87187
         DC    X'CF'                                             87187
         DC    X'D0'                   RIGHT BRACE               87187
         DC    C'JKLMNOPQR'            CAPITAL LETTERS           87187
         DC    X'DADBDCDDDEDF'                                   87187
         DC    X'E0'                   REVERSE SLANT             87187
         DC    X'E1'                                             87187
         DC    C'STUVWXYZ'             CAPITAL LETTERS           87187
         DC    X'EAEB'                                           87187
         DC    X'EC'                   CHAIR                     87187
         DC    X'EDEEEF'                                         87187
         DC    C'0123456789'                                     87187
         DC    X'FA'                   LONG VERTICAL LINE (NOT   87187
*                                       | OR VERTICAL LINE)      87187
         DC    X'FBFCFDFEFF'                                     87187
         POP   USING                                             87193
NETSOL70 CSECT ,             RETURN                              87193
         TITLE '*********  N E T S O L  -  SPECIAL LOGMODE ENTRY TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE APPLICATIONS WHICH DO NOT USE       *
*        THE DEFAULT LOGMODE ENTRY FOR THE DEVICE.                    *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             LOGMDAPP - THE APPLID OF THE APPLICATION USING A        *
*                        DIFFERENT LOGOMODE TABLE ENTRY.              *
*                                                                     *
*             LOGMDENT- THE ASSOCIATED LOGOMODE TABLE ENTRY NAME.     *
*                                                                     *
***********************************************************************
         SPACE 1
LOGMDAPP EQU   0,8                    APPLICATION NAME
LOGMDENT EQU   8,8                    ASSOCIATED LOGMODE TABLE ENTRY
LOGMDLEN EQU   16                     LENGTH OF A TABLE ENTRY
         SPACE 1
LOGMDTAB EQU   *                             START OF LOGMODE TABLE
*                 /APPLID  /    /LOGMODE /   FORMAT ENTRY
LOGMDRLY DC    CL8'R3270   ',CL8'RLY3767 '   RELAY/3270/GOLD     88248
LOGMDHCF DC    CL8'HCF     ',CL8'HCFPX   '   HCF
LOGMDNCF DC    CL8'NCCF    ',CL8'DSILGMOD'   NCCF
LOGMDEND DC    XL8'FFFFFFFFFFFFFFFF'         END OF LOGMODE TABLE
         TITLE '*********  N E T S O L  -  MESSAGE EQUATES/CONSTANTS'
*              EQUATES FOR ERROR MESSAGE NUMBERS AND REASON-CODES
MSG01    EQU   1                       INVALID LOGMODE TABLE ENTRY
MSG02    EQU   2                       LOGON DATA NOT IN INTRPRET TBLE.
MSG03    EQU   3                       NO INTRPRET TABLE
MSG04    EQU   4                       NO ROUTINE TO FIND APPL NAME
MSG05    EQU   5                       NOT AUTHORIZED FOR APPLICATION
MSG06    EQU   6                       APPLICATION NOT KNOWN
MSG07    EQU   7                       APPLICATION DEACTIVATED
MSG08    EQU   8                       APPLICATION INACTIVE
MSG09    EQU   9                       APPLICATION QUIESCING
MSG10    EQU   10                      APPLICATION NEVER ACCEPTS LOGONS
MSG11    EQU   11                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS.
MSG12    EQU   12                      THIS TERMINAL LOGGED ON
*                                      TO NETWORK SOLICITOR
MSG13    EQU   13            LOGON SCREEN / CENTER CLOSED        86065
MSG14    EQU   14            UNTIMELY REQUEST (SYSTEMS ONLY)     86065
MSG15    EQU   15            TERMINAL NOW UNLOCKED               86065
MSG16    EQU   16            TERMINAL NOW LOCKED                 86065
MSG17    EQU   17            UNLOCK REQUEST FAILED               86065
MSG18    EQU   18                      UNAUTHORIZED COMMAND      87187
MSG19    EQU   19            TEXT SUPPLIED IN DATAPTR            87187
MSG20    EQU   20            LOGON SCREEN                        88179
MSGMAX   EQU   20       **** HIGHEST DEFINED MESSAGE NUMBER **** 88220
         SPACE 1
***********************************************************************
*        LIST FORMS OF SOME MESSAGES                                  *
***********************************************************************
         SPACE 1
LISTWTO  WTO  'BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL DUE TOX
                I/O ERROR',                                            X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO1 WTO  'BCSC002 RC=42 ON NETSOL CLOSE ACB',                     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO6 WTO  'BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS PROX
               GRAM IS TERMINATED.',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
ERRORMSG WTO  'BCSC003 SYNAD/LERAD EXIT REQ=**,RTNCD=**,FDBK2=**,SSENSEX
               I=**,SSENSMI=**,SENSE=****,TERM=********',              X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LOSTMSG  WTO  'BCSC004 LOSTERM ENTRY CODE XX FOR TERM=********',       X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
RELRQMSG WTO  'BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST',  X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
RELFLMSG WTO  'BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT',     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO8 WTO  'BCSC008 TERM=******** IS AN UNSUPPORTED TERMINAL TYPE', X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LOGMENU  WTO  'BCSC009 TERM=******** MENU WRITTEN FROM ******',        X
               ROUTCDE=(11),DESC=(7),MF=L
         SPACE 2
MSG1003  WTO  'BCSC010 TERM=******** LOGMODE NOT COMPATIBLE WITH TERMINX
               AL',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
DCBMSG   WTO  'BCSC011 XXXXXX FILE WILL NOT OPEN. INITIALIZATION BYPASSX
               ED',ROUTCDE=(1,8),DESC=(7),MF=L
         SPACE 2
INITEMSG WTO 'BCSC012 ERRORS ON INITIALIZATION FILE. EXECUTION CONTINUEX
               S',ROUTCDE=(1,8),DESC=(7),MF=L
         SPACE 1                                                 88221
KICKBACK WTO   'BCSC013 XXXXXXXX REJECTED BY YYYYYYYY',ROUTCDE=(1,8),DE*
               SC=7,MF=L                                         88221
         TITLE '*********  N E T S O L  -  A C B'
         DS    0D
         DC    CL8'ACB'
         SPACE 1
ACB      ACB   AM=VTAM,                                                X
               APPLID=NSNAME,                                          X
               EXLST=EXLST,                                            X
               MACRF=LOGON
         TITLE '*********  N E T S O L  -  TERMINAL TABLE DSECT'
TERMTABL DSECT
TERMNAME DS    CL8                     TERMINAL LU NAME FROM LOGON
TERMNAM2 DS    0CL8          END-RANGE ENTRY FOR SETRANGE        88185
TERMCID  DS    XL4                     CID GOTTEN AFTER OPNDST
TERMCRPL DS    AL4                     A(ACTIVE RPL FOR THIS TTE)
TERMAPPL DS    CL8                     APPLID FOR LAST CLSDST(PASS)
TERMDAPL DS    CL8                     DEFAULT LOGON APPLID FOR TERM
TERMLOGC DS    H                       LOGON COUNTER
TERMDCNT DS    H                       AUTO LOGON LOOP COUNTER
TERMFLAG DS    XL1           FLAG BYTE FOR LOGON STATUS
LOGPROC  EQU   X'80'           LOGON PROCEEEDING
SENDSCED EQU   X'40'           SEND (POST=SCHED) ISSUED         DC18203
TERMCONS EQU   X'20'           TTE IS FOR OPERATOR CONSOLE       88192
LETMODE  EQU   X'10'           ALLOW LOGMODE IN CLSDST PASS      88207
FLIPFLOP EQU   X'08'           CONVERSATIONAL MODE DEVICE        90135
CONTENT  EQU   X'04'           CONTENTION MODE (3767)            90135
TERMFLG2 DS    XL1                     FLAG FOR TERMINAL'S NETSOL STAT
TOPEN    EQU   X'80'                   TERM LOGGED ON TO NETSOL
TPASSED  EQU   X'40'                   TERM SUCCESSFULLY TO APPLID
TREL     EQU   X'20'                   TERM RELEASED FOR SOME REASON
TINIT    EQU   X'10'                   DEFAULT APPLID SET AT INIT TIME
TERMFLG3 DS    XL1           AUTHORIZATION FLAGS                 86143
TFREQ    EQU   X'80'         USER MUST COMPLETE LOGON            88172
TFAUL    EQU   X'40'         USER WISHES AUTOMATIC LOGON         88172
TFLOF    EQU   X'10'         DEVICE FAULT - FORCE A LOGOFF       88188
TFAPL    EQU   X'08'         USER RESTRICTED TO ONE APPLICATION  88220
TFLON    EQU   X'04'         USER HAS LOGGED ON                  88172
TSYSP    EQU   X'02'         USER HAS SYSTEM PRIVILEGES          86065
TSUPP    EQU   X'01'         USER HAS SUPPORT PRIVILEGES         86065
TPRIVY   EQU   TSYSP+TSUPP     SOME PRIVILEGE                    86065
TERMMSGX DC    X'00'         INDEX OF LAST MESSAGE SENT          86160
TERMDDT  DS    A                       A(DDT FOR THIS TERMINAL)  86143
TERMDTIM DS    F                       TIME+60 SECS OF AUTO LOGON
TERMRUSZ DS    F             MAXIMUM SEND RU SIZE OR 0           86143
TERMLPAD DS    A             ADDRESS OF LOGON MESSAGE OR 0       87131
TERMLPLN DS    F             LENGTH OF LOGON MESSAGE OR ZERO     87131
TERMLOUD DS    F             ADDRESS OF LOCAL ON-LINE USER DATA  88179
*ERMMODE DS    CL8           LOGMODE NAME (FROM SESSIONS BIND)   88213
TERMETIM DS    F             TIME OF LAST (SERIES) OF ERRORS     91296
TERMERCT DS    F             NUMBER OF CONSECUTIVE ERRORS        91296
TERMELEN EQU   *-TERMNAME              LENGTH OF AN ENTRY
         TITLE '*********  N E T S O L  - DEVICE DEPENDENT TABLE DSECT'
DDT      DSECT
         SPACE 1
*        THE DEVICE DEPENDENT TABLE IDENTIFIES EDIT AND I/O ROUTINES
*        AND MESSAGES APPLICABLE TO A PARTICULAR DEVICE TYPE.
*        THE INQUIRE MACRO IS ISSUED IN THE LOGON EXIT TO OBTAIN
*        LOGMODE INFORMATION SO THAT THE DEVICE TYPE CAN BE DETERMINED.
*        TERMDDT POINTS TO THE DDT FOR A TERMINAL.
         SPACE 1
         DS    0D
DDTEDIT  DS    AL4                     A(INPUT EDIT ROUTINE)
DDTSEND  DS    AL4                     A(SEND ROUTINE)
DDTTERM  DS    AL4                     A(TERMINAL FIELD IN MSG 12)
DDTTERM3 DS    AL4                     MESSAGE 13                86065
DDTTERM2 DS    AL4                     MESSAGE 20                88179
DDTTIME  DS    AL4                     A(TIME FIELD IN MSG 12)
DDTTIME3 DS    AL4                                               86065
DDTTIME2 DS    AL4                                               88179
DDTM4OFS DS    AL4                     A(USABLE MSG BUFFER IN MSG4)
DDTMSGOF DS    AL2                     MSG OFFSET OF DATA FIELD
DDTM4L   DS    AL2                     LEN(USABLE MSG BUFFER IN MSG4)
DDTMSGTB DS    0F
DDTMSG01 DS    AL4                     A(MSG 01)
DDTMSG02 DS    AL4                     A(MSG 02)
DDTMSG03 DS    AL4                     A(MSG 03)
DDTMSG04 DS    AL4                     A(MSG 04)
DDTMSG05 DS    AL4                     A(MSG 05)
DDTMSG06 DS    AL4                     A(MSG 06)
DDTMSG07 DS    AL4                     A(MSG 07)
DDTMSG08 DS    AL4                     A(MSG 08)
DDTMSG09 DS    AL4                     A(MSG 09)
DDTMSG10 DS    AL4                     A(MSG 10)
DDTMSG11 DS    AL4                     A(MSG 11)
DDTMSG12 DS    AL4                     A(MSG 12)
DDTMSG13 DS    AL4                     A(MSG 13)                 86065
DDTMSG14 DS    AL4                     A(MSG 14)                 86065
DDTMSG15 DS    AL4                     A(MSG 15)                 86065
DDTMSG16 DS    AL4                     A(MSG 16)                 86065
DDTMSG17 DS    AL4                     A(MSG 17)                 86065
DDTMSG18 DS    AL4                                               87187
DDTMSG19 DS    AL4           FREE FORMAT MSG (A/L IN DATAPTR)    87187
DDTMSG20 DS    AL4           LOGON SCREEN                        88179
         SPACE 2                                                 90120
*        DCB FOR SYSIN FILE
NETSOL70 CSECT ,
         SPACE 1
         DCBD  DSORG=PS                                          92273
         PRINT NOGEN
         SPACE 2                                                 90120
         ISTDNIB
         TITLE '*********  N E T S O L  -  B I N D   DSECT'
         PRINT GEN
         ISTDBIND
         ORG   ,                                                 88213
BINDSIZE EQU   *-ISTDBIND    MODE TABLE ENTRY SIZE -8            88213
         PRINT NOGEN
         SPACE 2                                                 90120
IFGRPLX  DSECT
STSECT   DS    0D                  START DSECT ON D-WORD
         IFGRPL DSECT=NO,AM=VTAM
         TITLE '*********  N E T S O L  - NIB, RPL, ETC.'        90120
*********       END OF RPL DSECT AND START OF NIB       **************
         ORG
NIBDMPID DC    0D'0',CL8'DYNAMNIB'     NIB DUMP ID
NIBSTART DS    CL(NIBLNIB)             ASYNCHROUS NIB
*********       END OF NIB AND START OF RPL WORK AREA   **************
WORKSPAC DS    0D                      START OF RPL WORK AREA
CID      DS    F                       CID OF READ DEVICE
RPLSAVE  DS    18F                     SAVE AREA FOR RPL OPERATIONS
RPLERRSA DS    12F                     SAVE AREA FOR SYNAD EXIT
*                                      THAT ARE ASYNCHRONOUS
APPLID   DS    CL8                     NAME OF APPLICATION
MODENAM  DS    CL8                     NAME OF MODE TABLE ENTRY
GRPLTIME DS    CL8     (HHMMSSTH YYYDD) TIMESTAMP WHEN RPL GETMAINED
RECLEN   DS    F                       FOR READ RECLEN FIELD
SENDLEN  DS    F                       FOR SEND TO TERMINAL
DATAPTR  DS    AL4(0)                  A(LOGON SEQUENCE IN IOAREA)
GPPARM   DS    AL4(0)                  A(OPTION LIST PASSED TO GETPARM)
GPDATAP  DS    AL4(0)                  A(CURRENT PTR IN CMD BUFFER)
GPDATAL  DS    H                       LENGTH OF TEXT LEFT IN CMD BUF
MSGINDEX DS    X                       NUMBER OF ERROR MESSAGE WRITTEN
ERMDATA  DS    CL7                     COMBINED ERROR FIELD
REQ      EQU   ERMDATA,1               FOR RPL REQ FIELD
RTNCD    EQU   ERMDATA+1,1             FOR RPL RTNCD FIELD
FDBK2    EQU   ERMDATA+2,1             FOR RPL FDBK2 FIELD
SENSE    EQU   ERMDATA+3,2             SAVE SSENSEI + SSENSMI FIELDS
USENSE   EQU   ERMDATA+5,2             SAVE USSESEI (2 BYTES)
ERMTEMP  DS    CL7                     ERROR FIELD WORKAREA
ACTIONS  DS    2X                      SAVE AREA FOR ERROR
APPLSTAT DC    X'0'                    FOR RPL FDBK FIELD
*                                      ACTION CODES
*        INTERNAL FLAG BYTES
FLAGS    DS    X                       FLAG BYTE
*
LOGOFF   EQU   X'80'                   LOGOFF COMMAND ISSUED
RELOPND  EQU   X'40'                   RELEASE DEVICE, THEN
*                                      ATTEMPT TO RECONNECT
*                                      VIA OPNDST
BADEVICE EQU   X'20'                   PROBLEM WITH DEVICE
FIRSTSND EQU   X'08'                   FIRST SEND TO TERMINAL
CLEARSCR EQU   X'04'                   RECEND ISSUING CLEAR SCREEN
LUSTATE  EQU   X'02'                   LUSTAT PROCESSING FOR TERMINAL
SIMLOG   EQU   X'01'                   CLSDST(PASS) FAILED => MUST
*                                      ISSUE CLSDST(RELEASE) BEFORE
*                                      CONTINUING WITH SIMLOGON
         SPACE 1
EXITFLAG DS    X                       FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
LOGONEX  EQU   X'80'                   ENTERED THE LOGON EXIT
RECEX    EQU   X'40'                   ENTERED THE READEND EXIT
PASSEX   EQU   X'20'                   ENTERED THE CLSDST(PASS) EXIT
SENDEX   EQU   X'10'                   ENTERED THE WRITE EXIT
RELREQEX EQU   X'08'                   ENTERED THE RELREQ EXIT
LOSTEX   EQU   X'04'                   ENTERED THE LOSTERM EXIT
CLOSEX   EQU   X'02'                   ENTERED THE CLSDST(RELEASE)EXIT
OPENEX   EQU   X'01'                   ENTERED THE OPNDST EXIT
         SPACE 1
EXITFLG2 DS    X                       2ND FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
OPNACQX  EQU   X'80'                   ENTERED THE OPNDST(ACQUIRE) EXIT
         SPACE 1
MFLAGS   DS    X                       FLAG BYTE FOR CURRENT VTAM MACRO
OPNDSPEC EQU   X'80'                   OPNDST(SPEC) IN PROGRESS
INQAPPST EQU   X'40'                   INQUIRE(APPSTST) IN PROGRESS
SENDING  EQU   X'20'                   WRITE IN PROGRESS
RECA     EQU   X'10'                   READ(ANY) IN PROGRESS
SMLOGON  EQU   X'08'                   SIMLOGON ISSUED AFTER CLSDST
INTRPRT  EQU   X'04'                   INTRPRET IN PROGRESS
CLSDST   EQU   X'02'                   CLSDST IN PROGRESS
LUSEND   EQU   X'01'                   LUSTAT RESPONSE SENT
         SPACE 1
MFLAGS2  DS    X                      FLAG BYTE2 FOR CURRENT VTAM MACRO
INQSESS  EQU   X'80'                   INQUIRE(SESSPARM) IN PROGRESS
         SPACE 1
MACFLAGS DS    X                       INDICATE MACROS CALLED FLAG 1
CLSREL   EQU   X'80'                   WILL DO CLSDST(RELEASE)
OPNSPEC  EQU   X'40'                   WILL DO OPEN(SPEC)
SIMLGON  EQU   X'20'                   SIMLOGON AFTER CLSDST
INTAPPID EQU   X'10'                   WILL DO INTERP (APPLID)
INQAPPS  EQU   X'08'                   WILL DO INQUIRE(APPSTAT)
CLOSPASS EQU   X'04'                   WILL DO CLSDST(PASS)
SENDASY  EQU   X'02'                   WILL DO SEND ASY
OPNDACQ  EQU   X'01'                   WILL DO OPNDST(AQUIRE)
         SPACE 1
MACFLAG2 DS    X                       INDICATE MACROS CALLED FLAG 2
INQSES   EQU   X'80'                   WILL DO INQUIRE(SESSPARM)
         SPACE 1
DATASEQL DS    X                       X-LATED DATA SEQ-LENGTH
SPACWORK DS    0D            EXTRA SPACE                         92300
A$SAVE   DS    3F            SAVE AREA FOR SVC 249 CALL          88207
         PRINT GEN                                               88179
         AIF   ('&LOCAL' NE 'PID').NOSVCR0                       92300
A$SVCRB  A$SVCRB DSECT=NO                                        88179
         AGO   .NOSVCRB                                          91195
.NOSVCR0 ANOP  ,             DEFINE (MISSING) FLAG BITS          91195
A$USFCIC EQU   0               NO CICS RESTRICTION               91195
A$USFEXH EQU   0               NO EXHIBIT RESTRICTION            91195
A$USFNET EQU   0               NO NETWORK RESTRICTION            91195
A$USFOTH EQU   0               NO OTHER RESTRICTIONS             91195
A$USFTSO EQU   0               LET TSO LOGON HANDLE              91195
A$USFWYL EQU   0               NO WYLBUR RESTRICTIONS            91195
A$SERMSG DS    0F              ???                               91195
.NOSVCRB ORG   SPACWORK      RE-USE DURING COMPRESSION           92300
COMPPARM DS    8A            COMP3270 PARM LIST                  90140
CPOUTLEN DS    F             OUTPUT LENGTH                       90140
CPINLEN  DS    F             INPUT LENGTH                        90140
CPBUFLEN DS    F             BUFFER SIZE                         90140
OPFUN    DS    X             REQUESTED FUNCTIONS                 90140
OPFSF    EQU   X'80'           INSERT PROT. SF IF NO SF IN LINE 2
OFNCMP   EQU   X'40'           BYPASS BUFFER COMPRESSION, ETC.   90140
OFNCOL   EQU   X'20'           BYPASS COLOR SUBSTITUTION         90140
OFYESC   EQU   X'10'           BUFFER MAY CONTAIN ESCAPE (BTAM)  90140
OFYCCW   EQU   X'08'           BUFFER CONTAINS CCW               90140
OFYWCC   EQU   X'04'           BUFFER CONTAINS WCC/PCC           90140
OPADD    DS    X             ADDRESSING MODE                     90140
OPA16    EQU   X'02'           USE 16-BIT ADDRESSING ONLY        90140
OPA14    EQU   X'01'           14-BIT ADDRESSING SUPPORTED       90140
OPCOL    DS    X             COLOR MODE                          90140
OPSEVEN  EQU   X'07'           7-COLOR MODE                      90140
OPBACK   EQU   X'70'           BACKGROUND COLOR AVAILABLE        90140
OPHIGH   DS    X             EXTENDED HIGH-LIGHTING              90140
*PSEVEN  EQU   X'07'           ALL EXTENDED HIGH-LIGHTING        90140
OPMISC   DS    X             MISCELLANEOUS OPTIONS               90140
OPFVAL   EQU   X'80'           FIELD VALIDATION SUPPORTED        90140
OPFOUT   EQU   X'40'           FIELD OUTLINING                   90140
OPSEQLEN EQU   *-COMPPARM    LENGTH TO CLEAR                     90140
         ORG   ,             USE LARGER LENGTH                   90140
         PRINT NOGEN                                             88179
         SPACE 1
WORKRPLA EQU   *-WORKSPAC              USED TO CLEAR OUT WORKAREA
         TITLE '*********  N E T S O L  -  SYNCHRONOUS RPL + NIB + WA'
***********************************************************************
*        THE FOLLOWING RPL IS USED FOR ALL SYNCHRONOUS COMMANDS       *
***********************************************************************
         SPACE 1
NETSOL70 CSECT ,
         PRINT &PRTSYS                                           85234
         DS    0D
         DC    CL8'SYNCHRPL'
         SPACE 1
SYNCHRPL RPL  ACB=ACB,OPTCD=(SYN),                                     *
               AM=VTAM
         ORG   ,
***********************************************************************
*        THE FOLLOWING NIB IS USED FOR ALL SYNCHRONOUS OPERATIONS     *
*        REQUIRING A NIB.                                             *
***********************************************************************
         SPACE 1
         DC    0D'0',CL8'SYNCHNIB'
SYNCHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0,                     *
               RESPLIM=0     **IS THIS SAFE** ???                90199
         DS    0D
SYNWORK  DC    (WORKRPLA)X'00'         RPL WORK AREA
SYNARG   EQU   SYNCHRPL+RPLARG-IFGRPL  DISPLACEMENT TO THE ARG
*                                      WITHIN SYNCHRPL
SYNFDB3  EQU   SYNCHRPL+RPLFDB3-IFGRPL DISPLACEMENT TO FBD3
*                                      IN SYNCHRPL'S WORKAREA
SRPLEXT1 EQU   SYNCHRPL+RPLEXTD1-IFGRPL DISPLACEMENT TO 'NIB@
*                                      IN ARG FIELD' BIT
SYNUSFLD EQU   SYNCHRPL+RPLUSFLD-IFGRPL DISPLACEMENT TO RPL USER FIELD
*                                      FOR USE BY ERROR EXIT ROUTINE
         SPACE 2
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE SYNCHRONOUS  *
*        RPLS. IT IS NOT ITSELF USED IN ANY MACROS       DC18203      *
***********************************************************************
         SPACE 1
         DS    0D                                              DC18203
         DC    CL8'FRSYNRPL'                                   DC18203
FRSYNRPL RPL   ACB=ACB,AM=VTAM,OPTCD=(SYN)
FRSYNL   EQU   *-FRSYNRPL    LENGTH OF SYN RPL FOR REFRESH     DC18203
         SPACE 2                                                 90120
***********************************************************************
*        SETLOGON RPL - A SEPARATE RPL IS NECESSARY BECAUSE           *
*         THE LOGON EXIT CAN BE DRIVEN BEFORE THE SETLOGON            *
*         COMPLETES.                                                  *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'LOGONRPL'
         SPACE 1
SETLRPL  RPL   ACB=ACB,OPTCD=(SYN),                                    *
               AM=VTAM
SETNIB   DC    (8+NIBLNIB)X'00'        NIB IN IFGRPLX DSECT
SETWORKA DC    (WORKRPLA)X'00'         WORKAREA IN IFGRPLX DSECT
         SPACE 2                                                 87131
***********************************************************************
*        THE FOLLOWING NIB IS USED TO REFRESH THE NIB IN THE          *
*        ASYNCHROUS RPL. IT ITSELF IS NOT USED IN ANY MACRO.          *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'FRESHNIB'
         SPACE 1
FRESHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0,                     *
               RESPLIM=16    AVOID 14,44 ERRORS (?)              90199
         SPACE 2                                                 87131
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE ASYNC        *
*        RPLS IN THE RPL CSECT.  IT IS NOT ITSELF USED IN ANY         *
*        MACRO.                                                       *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'FRESHRPL'
         SPACE 1
FRESHRPL RPL   ACB=ACB,                                                X
               AM=VTAM,                                                X
               OPTCD=(ASY)
         TITLE '*********  N E T S O L  -  INITIALIZATION CODE'  86145
***********************************************************************
*        THIS CODE WILL MOVE THE CONTENTS OF NSNAME              86012
*        INTO MESSAGE 12 FOR EACH OF THE SUPPORTED DEVICES TO ALLOW   *
*        FOR EASY VISUAL IDENTIFICATION OF THE TEST VERSION OF NETSOL.*
***********************************************************************
         USING OPENIDS,R7    BASE SET BY CALLER                  86145
OPENIDS  L     R14,=AL4(S32NSN12)      3270 SCREEN START         86012
         L     R15,=AL4(S3ENSN12)      UPDATE 3270 EXTENDED      86012
         L     R1,=AL4(S37NSN12)       UPDATE 3767               86012
         L     R2,=A(MD5NSN12)         UPDATE MODEL 5 SCREEN     88206
         ICM   R3,15,PSAATCVT-PSA   ANY VTAM UP ?                86012
         BZ    NOATCVT       NO ?                                86012
         CLI   0(R3),C'V'    VERSION ID ?                        86012
         BNE   NOATCVT       NO                                  86012
         MVC   0(9,R14),=C'VTAM V?R?'                            86012
         CLI   1(R3),C'X'    NEW 'VX' PREFIX ?                   92363
         BE    OPENID24                                          92363
         CLI   1(R3),C'T'    OLD 'VT' PREFIX ?                   90094
         BE    OPENID24      YES; IS VT##                        90094
         BCTR  R3,0          ELSE IS V###                        90094
OPENID24 MVC   VTAMVERL,2(R3)  SAVE VERSION # FOR CODE TESTS     92221
         MVC   6(1,R14),2(R3)  COPY VERSION NUMBER               86012
         MVC   8(1,R14),3(R3)  COPY RELEASE NUMBER               86012
         MVC   0(9,R15),0(R14)  COPY TO OTHER TYPE SCREEN        86012
         MVC   0(9,R1),0(R14)  COPY TO 3767 LINE                 86012
         MVC   0(9,R2),0(R14)  MODEL 5                           88206
         LA    R0,12         SET INCREMENT                       88206
         AR    R14,R0        SKIP OVER IT                        86012
         AR    R15,R0                                            86012
         AR    R1,R0                                             86012
         AR    R2,R0         ADVANCE MODEL 5 POINTER             88206
NOATCVT  MVC   0(8,R14),NSNAME+1                   MSG 12        86012
         MVC   0(8,R15),NSNAME+1                   MSG 12        86012
         MVC   0(8,R1),NSNAME+1                   MSG 12
         MVC   0(8,R2),NSNAME+1                                  88206
         L     R14,=AL4(S32NSN12)      3270 SCREEN START         86065
         L     R15,=AL4(S3ENSN12)      UPDATE 3270 EXTENDED      86065
         L     R2,=AL4(MD5NSN12)       MODEL 5                   88206
         MVC   S32NSN13-S32NSN12(30,R14),0(R14)  COPY TO MSG 13  86065
         MVC   S3ENSN13-S3ENSN12(30,R15),0(R15)                  86065
         MVC   MD5NSN13-MD5NSN12(30,R2),0(R2)                    88206
         L     R14,=AL4(S32NSN13)      3270 SCREEN START         88179
         L     R15,=AL4(S3ENSN13)      UPDATE 3270 EXTENDED      88179
         L     R2,=AL4(MD5NSN13)                                 88206
         MVC   S32NSN20-S32NSN13(30,R14),0(R14)  COPY TO MSG 13  88179
         MVC   S3ENSN20-S3ENSN13(30,R15),0(R15)                  88179
         MVC   MD5NSN20-MD5NSN13(30,R2),0(R2)                    88206
         SPACE 1                                                 86012
         L     R3,CVTPTR     GET THE CVT                         86012
         L     R3,CVTSMCA-CVTMAP(,R3)  GET THE SMCA TABLE        86012
         L     R1,=A(S32SID12)                                   86012
         USING S32SID12,R1    DECLARE IT                         86012
         MVC   S32SID12(4),16(R3)  COPY THE SMCA ID              86012
         MVC   S32SID13(4),16(R3)                                86065
         L     R14,=A(S32SID20)                                  88179
         MVC   0(L'S32SID12,R14),S32SID12                        88179
         L     R1,=A(S3ESID12)                                   88172
         USING S3ESID12,R1                                       86065
         MVC   S3ESID12(4),16(R3)                                86012
         MVC   S3ESID13(4),16(R3)                                86065
         L     R14,=A(S3ESID20)                                  88179
         MVC   0(L'S3ESID12,R14),S3ESID12                        88179
         L     R1,=A(S37SMC12)                                   86065
         MVC   0(4,R1),16(R3)                                    86065
         MVC   S37SMC20-S37SMC12(4,R1),16(R3)                    88220
         L     R1,=A(MD5SID12)                                   88206
         USING MD5SID12,R1                                       88206
         MVC   MD5SID12(4),16(R3)                                88206
         MVC   MD5SID13(4),16(R3)                                88206
         L     R14,=A(MD5SID20)                                  88206
         MVC   0(L'MD5SID12,R14),MD5SID12                        88206
         DROP  R1                                                86012
         ICM   R0,15,@MODETAB  RECURSION ?                       88220
         BNZ   OPENIDNL      YES; KEEP OLD ONE                   88220
         LOAD  EP=ISTINCLM,ERRET=OPENIDNL                        88213
         ST    R0,@MODETAB   SAVE TABLE ADDRESS                  88213
OPENIDNL BR    R6            RETURN TO CALLER                    86145
         SPACE 1                                                 86145
         LTORG ,                                                 86145
         TITLE '*********  N E T S O L  - READ INITIALIZATION COMMANDS'
***********************************************************************
*                                                                     *
*    READINIT PROCESSES THE NETSOL COMMANDS IN THE SYSIN FILE.        *
*    COMMANDS WHICH MAY BE PLACED IN THIS FILE ARE FLAGGED            *
*    WITH 'CMDINIT' IN THEIR CMD TABLE ENTRY.                         *
*                                                                     *
*    TO ALLOW COMMAND PROCESSING ROUTINES TO BE INDEPENDENT OF THEIR  *
*    SOURCE, ALL COMMAND PROCESSORS ASSUME A DDT,TTE AND ASYNC RPL    *
*    AVAILABLE FOR THEIR USE. THEREFORE, THESE CONTROL BLOCKS HAVE    *
*    BEEN SET UP FOR READINIT.                                        *
*                                                                     *
*    INPUT : R5  - A(ASYNC RPL)                                       *
*            R13 - A(SAVE AREA)                                       *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : REGISTERS ARE UNCHANGED                                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                 85235
         USING READINIT,R8                                       88179
READINIT STM   R14,R12,12(R13)         SET
         ST    R13,RPLSAVE+4             UP
         LA    R1,RPLSAVE                  SAVE
         ST    R1,8(,R13)                    AREA
         LR    R13,R1                          CHAIN
         SPACE 1
*        OPEN SYSIN AND SYSOUT FILES. NETSOL WILL CONTINUE EXECUTION
*        EVEN WITH ERRORS IN THE INIT FILE.
         SPACE 1
         OPEN  (SYSINDCB,(INPUT),SYSOUDCB,(OUTPUT)) OPEN FILES
         TM    SYSINDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSIN OPEN?
         BZ    DCBOSYSI                           NO => ERROR MSG
         TM    SYSOUDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSOUT OPEN?
         BNZ   RIOPENOK                           YES => BR TO CONTINUE
         MVC   DCBMSG+12(6),=CL6'SYSOUT'  MOVE
         LA    R14,PUTDUMMY  GET DUMMY 'PUT' ROUTINE             88179
         STCM  R14,7,SYSOUDCB+DCBPUTA-IHADCB                     88179
         B     *+10                        DDNAME
DCBOSYSI MVC   DCBMSG+12(6),=CL6'SYSIN '      TO OPERATOR MSG
         WTO   MF=(E,DCBMSG)             LOG ERROR MESSAGE ON SYSLOG
         TM    SYSINDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSIN ?        88179
         BNZ   RIOPENOK      YES; READ IT ANYWAY                 88179
         B     HITEST        CHECK FOR NEWS DATA                 88179
         SPACE 1
*        SET UP RPL,TTE AND DDT LINKS FOR INIT
         SPACE 1
RIOPENOK OI    UFLAGS,INIT               FLAG PROCESSING INITIALIZATION
         LA    R3,TTEDUMMY               LOAD A(DUMMY TTE FOR INIT)
         ST    R3,RPLUSFLD               SET UP RPL USER PTR
         MVI   TERMFLG3,TFLON+TPRIVY  MAKE SYSIN PRIVILEGED      88179
         L     R9,=A(DDTSYSIN)           LOAD A(DDT FOR INIT)   85327
         ST    R9,TERMDDT                SAVE IN TTE
         USING DDT,R9         DECLARE IT                         88179
         SPACE 1
*        PROCESS NETSOL COMMANDS FROM THE SYSIN FILE
         SPACE 1
READLOOP LA    R6,IOAREA                 LOAD A(IO BUFFER)
         GET   SYSINDCB,(R6)             READ CMD FROM SYSIN FILE
READNEX2 PUT   SYSOUDCB,(R6)             ECHO CMD TO SYSOUT FILE
         SPACE 1                                                 90344
***********************************************************************
*                                                                     *
*        CONTROL CARDS MAY BE SELECTED BY CPU ID (SMCA ID) :          *
*                                                                     *
*        PLACE CPU= IN COLUMN 2                                       *
*              CPU= RESETS SELECTION AND ACCEPTS ALL CARDS            *
*              CPU=SYS1SYS2SYS3  SKIPS CARDS EXCEPT ON SYSTEMS 1-3    *
*              CPU=SYS5   SKIPS SUCCESSIVE CARDS EXCEPT ON SYSTEM 5   *
*                                                                     *
***********************************************************************
         SPACE 1                                                 90344
         CLC   =C'CPU=',1(R6)  CHECK FOR CPU SPECIFIC CARDS      90344
         BNE   READNCPU      NO; CONTINUE NORMALLY               90344
         CLI   5(R6),C'A'    CPU= NON-ALPHAMERIC ?               90344
         BL    READNCPU      YES; TREAT AS GENERAL MATCH         90344
         L     R14,CVTPTR    GET THE CVT                         90344
         LA    R15,5(,R6)    POINT TO FIRST CPU ID               90344
         LA    R0,8          SET FOR MAXIMUM SUPPORTED           90344
         L     R14,CVTSMCA-CVT(,R14)  POINT TO SMCA WORK AREA    90344
READTCPU CLC   0(4,R15),16(R14)   COMPARE CPU= TO SMCASID        90344
         BE    READNCPU      MATCH; PROCESS THIS AND FOLLOWING   90344
         LA    R15,4(,R15)   TRY NEXT ENTRY                      90344
         CLI   0(R15),C','   COMMA SEPARATOR ?                   90344
         BNE   *+8           NO                                  90344
         LA    R15,1(,R15)   SKIP IT, TOO                        90344
         BCT   R0,READTCPU                                       90344
READGCPU GET   SYSINDCB,(R6)     ELSE GET ANOTHER CARD           90344
         CLC   =C'CPU=',1(R6) ANOTHER SELECTION CARD ?           90344
         BE    READNEX2      YES; EXAMINE IT                     90344
         MVI   0(R6),C'¬'    SHOW CARD REJECTED                  90344
         PUT   SYSOUDCB,(R6)  ECHO THE CARD                      90344
         B     READGCPU      AND SKIP TO NEXT                    90344
         SPACE 1                                                 90344
READNCPU DS    0H            MATCHING CPU FOUND, OR NO CPU CARDS 90344
         CLI   0(R6),C'*'    COMMENTS CARD ONLY ?                86012
         BE    READLOOP      YES, SKIP (SUPPORT ZAP MAINTENANCE) 86012
         CLI   0(R6),C' '    POSSIBLY ALL BLANK ?                86012
         BNE   READLOON      NO                                  86012
         CLC   1(70,R6),0(R6)  MOSTLY BLANK ?                    86012
READLOON LA    R2,72           TEXT SANS SEQUENCE NUMBERS        87133
         B     INTRPRET                  BR TO EDIT COMMAND
         SPACE 1
*        RETURN FROM CMD PROCESSING.
*        R0 CONTAINS MSG INDEX FOR OUTPUT MSG
         SPACE 1
RIPUTMSG LR    R1,R0                   LOAD INDEX INTO R1
         SLL   R1,2                    4 * (INDEX - 1)
*                                      = DISPLACEMENT OF MESSAGE +4
         L     R2,DDTMSGTB-4(R1)       POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(,R2)               PICK UP MSG LENGTH
*        MOVE MESSAGE TO OUTPUT BUFFER AND WRITE TO SYSOUT
         MVI   IOAREA,X'40'            INITIALIZE BUFFER
         MVC   IOAREA+1(79),IOAREA       WITH BLANKS
         BCTR  R1,0                    MOVE MESSAGE
         EX    R1,RIEX1                  TO OUTPUT BUFFER
         PUT   SYSOUDCB,IOAREA         WRITE MESSAGE TO SYSOUT FILE
         B     READLOOP                BR TO GET NEXT CMD
         SPACE 1
*        END OF DATA REACHED ON SYSIN FILE
         SPACE 1
EODSYSIN TM    UFLAGS,INITERR          ERROR WHILE PROCESSING CMD FILE
         BNO   RICLOSE                 NO => CONTINUE
         WTO   MF=(E,INITEMSG)         YES => LOG ERROR TO OPERATOR
RICLOSE  CLOSE (SYSINDCB)    CLOSE SYSIN
         FREEPOOL SYSINDCB                                       88179
         NI    UFLAGS,X'FF'-INIT-INITERR  END OF INIT PROCESSING 90156
         SPACE 1
*        READ NEWS DATA
HITEST   DEVTYPE NEWSDCB+DCBDDNAM-IHADCB,IOAREA                  88179
         BXH   R15,R15,HIDONE                                    88179
         OPEN  (NEWSDCB,INPUT)  OPEN THE NEWS                    88179
         TM    NEWSDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?          88179
         BZ    HIDONE        NO; SKIP OUT                        88179
         L     R2,=A(NEWSTEXT)  POINT TO THE BUFFER              88179
         PUT   SYSOUDCB,(R2)  WRITE A BLANK LINE                 88179
         LA    R2,80(,R2)    POINT TO VARIABLE TEXT PROPER       88179
         PUT   SYSOUDCB,(R2)  WRITE THE HEADER                   88179
         LA    R3,23         NUMBER OF LINES                     88179
HILOOP   GET   NEWSDCB,(R2)  READ A NEWS LINE                    88179
         PUT   SYSOUDCB,(R2)  ECHO THE LINE                      88179
         CLI   75(R2),C'0'   SEQUENCE FIELD ?                    88179
         BL    HILOUP        NO                                  88179
         MVC   72(8,R2),=CL8' '  BLANK IT OUT                    88179
HILOUP   LA    R2,80(,R2)                                        88179
         BCT   R3,HILOOP                                         88179
HIFEND   CLOSE (NEWSDCB)                                         88179
         FREEPOOL NEWSDCB                                        88179
HIDONE   TM    SYSOUDCB+DCBOFLGS-IHADCB,DCBOFOPN                 88179
         BZ    RIEXIT                                            88179
         CLOSE (SYSOUDCB)                                        88179
         FREEPOOL SYSOUDCB                                       88179
         SPACE 1
RIEXIT   L     R13,4(,R13)             RESTORE
         LM    R14,R12,12(R13)           REGISTERS
PUTDUMMY BR    R14                         AND RETURN
         SPACE 2
RIEX1    MVC   IOAREA(0),2(R2)         MOVE MSG TO OUTPUT BUFFER 86012
         SPACE 1
SYSINDCB DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EODSYSIN,MACRF=GM     88179
         SPACE 1
NEWSDCB  DCB   DDNAME=NEWS,DSORG=PS,EODAD=HIFEND,MACRF=GM        88179
         SPACE 1
SYSOUDCB DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=(PM),LRECL=80,RECFM=F
         SPACE 1                                                 88179
         LTORG ,                                                 88179
         DROP  R8,R9                                             88179
         TITLE '*********  N E T S O L  - SETRANGE COMMAND'      88185
***********************************************************************
*                                                                     *
*    SETRANGE SETS UP THE AUTOMATIC LOGON DEFINITIONS FOR A RANGE     *
*    OF NODES.                                                        *
*                                                                     *
*    THE FORMAT OF THE COMMAND IS:                                    *
*                                                                     *
*        SETRANGE LOWNODE/HIGHNODE <LOGON> <UNLOCK> <APPLID text>     *
*                 APPLID - FORCES TERMINAL TO SPECIFIED APPLICATION   *
*                 LOGON  - REQUIRES USER LOGON BEFORE ACCESS     88185
*                 UNLOCK - UNLOCKS THE DEVICE (SYSTEMS PRIVIES)       *
*                                                                     *
*    INPUT : NO PARAMETERS                                            *
*                                                                     *
*   OUTPUT : R0  - INDEX INTO DDT MSG TABLE                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88185
SETRANGE ST    R8,20+8*4(,R13)  SAVE BASE REGISTER               88185
         BALR  R8,0          MAKE LOCAL BASE                     88185
         USING *,R8          DECLARE IT                          88185
         USING IFGRPL,PTRRPL           => R P L                  88185
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY   88185
         USING DDT,R9                  => DEVICE DEPENDENT TABLE 88185
         BAL   R14,INITMSG4       OBTAIN MSG4  BUFFER            88185
         SPACE 1                                                 88185
*        GET NODENAME OF LOW RANGE                               88185
         SPACE 1                                                 88185
         LA    R1,SLNODE          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET NODE NAME               88185
         B     *+12               +0 - FOUND IT                  88185
         B     SRXERR             +4 - NOT THERE                 88185
         B     SRXERR             +8 - ERROR IN NODENAME         88185
         MVC   NODENAME,=CL8' '   SAVE                           88185
         LA    R14,NODENAME                                      88185
         BCTR  R15,0                NODENAME                     88185
         EX    R15,SRMVC              FOR LATER                  88185
*        GET NODENAME OF HIGH RANGE                              88185
         SPACE 1                                                 88185
         LA    R1,SLNODE          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET NODE NAME               88185
         B     *+12               +0 - FOUND IT                  88185
         B     SRXERR             +4 - NOT THERE                 88185
         B     SRXERR             +8 - ERROR IN NODENAME         88185
         MVC   NODENAM2,=8C'9'  PRESET FOR RANGE END             88185
         LA    R14,NODENAM2                                      88185
         BCTR  R15,0                NODENAME                     88185
         EX    R15,SRMVC              FOR LATER                  88185
         SPACE 1                                                 88185
*        GET APPLID (OPTIONAL)                                   88185
         SPACE 1                                                 88185
         LA    R1,SLAPPL          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET APPLID                  88185
         B     *+12               +0 - FOUND APPLID              88185
         B     SRTABLOK           +4 - APPLID NOT SPECIFIED      88185
         B     SRXERR0            +8 - ERROR IN APPLID           86065
         MVC   DLOGAPPL,=CL8' '   SAVE                           88185
         LA    R14,DLOGAPPL                                      88185
         BCTR  R15,0                APPLID                       88185
         EX    R15,SRMVC              FOR LATER                  88185
         LA    R15,1(,R15)        RESTORE APPLID LENGTH          88185
         SPACE 1                                                 88185
*        SCAN TERM TABLE FOR NODENAME                            88185
         SPACE 1                                                 88185
SRTABLOK STM   R3,R5,12(R13)      SAVE REGS                      88185
         LM    R3,R5,TERMTEND  GET BXLE TABLE VALUES             88185
         CR    R3,R5                   CHECK FOR NULL TABLE      88185
         BH    SRENT1        NO ENTRIES AS R3 > R5 (INIT 0)      88185
         SPACE 1                                                 88185
SRTABLP  CLC   NODENAME(L'NODENAME+L'NODENAM2),TERMNAME COMPLETE MATCH?
         BE    SRFNDTAB                YES, ALREADY IN THE TABLE 88185
         TM    UFLAGS,INIT   INITIALIZATION PHASE ?              88185
         BNZ   SRTABLX       YES; PERMIT OVERLAP                 88185
         CLC   NODENAME,TERMNAME  RANGE OVERLAP ?                88185
         BL    SRTABLN       NO                                  88185
         CLC   NODENAME,TERMNAM2                                 88185
         BNH   SRXERR        NODENAME ERROR                      88185
SRTABLN  CLC   NODENAM2,TERMNAME  OTHER END OVERLAPS ?           88185
         BL    SRTABLX       NO                                  88185
         CLC   NODENAM2,TERMNAM2                                 88185
         BNH   SRXERR        YES; TOO BAD                        88185
SRTABLX  BXLE  R3,R4,SRTABLP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1                                                 88185
SRENT1   L     R3,TERMTEND   GET THE FIRST ENTRY BACK            88185
         SR    R3,R4         BACK-UP ONE                         88185
         C     R3,TERMTABE   CONFLICT WITH PRIOR TABLE ?         88185
         BH    SRNOENT       NO; ALLOCATE THIS ENTRY             88185
         BAL   R7,SNOCCUR              YES => SHOULD NOT OCCUR   88185
         SPACE 1                                                 88185
*        THERE IS NO TTE ENTRY FOR THIS RANGE.                   88185
         SPACE 1                                                 88185
SRNOENT  L     R5,20(,R13)             RESTORE A(RPL)            88185
         LTR   R15,R15                 APPLID SPECIFIED?         88185
         BNZ   SRADDENT                YES => ADD ENTRY          88185
         MVC   8(L'SLMSG1,R2),SLMSG1   NO  => MOVE ERROR MSG     86065
         MVC   0(8,R2),NODENAME               MOVE NODENAME TO MSG
         LM    R3,R5,12(R13)                  RESTORE REGS       88185
         B     SRXERR                         BR TO ERROR EXIT   88185
         SPACE 1                                                 88185
*        ADD TERM TABLE ENTRY FOR SPECIFIED NODE NAME            88185
*        IF NO APPLID WAS SPECIFIED, THEN THE LOGAPPL IS RESET IN TTE
         SPACE 1                                                 88185
SRADDENT ST    R3,TERMTEND   SAVE NEW TABLE START                88185
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY 88185
         MVC   TERMNAME(L'TERMNAME+L'TERMNAM2),NODENAME    COPY NAMES
         L     R8,=A(SLBASE) GET COMMON BASE                     88185
         B     SLADDAPL-SLBASE(,R8)      ADD APPLID TO ENTRY     88185
         SPACE 1                                                 88185
SRFNDTAB L     R8,=A(SLBASE)  GET COMMON BASE                    88185
         B     SLFNDTAB-SLBASE(,R8)  JOIN COMMON CODE            88185
         SPACE 1                                                 88185
SRXERR0  MVC   8(L'SRMSG0,R2),SRMSG0  INDICATE ERROR             86065
         MVC   0(8,R2),NODENAME                                  86065
SRXERR   TM    UFLAGS,INIT             CMD ISSUED DURING INITIALIZATION
         BZ    *+8                     NO  => BR TO CONTINUE     88185
         OI    UFLAGS,INITERR          YES => FLAG ERROR DURING INIT
         SPACE 1                                                 88185
SREXIT   LA    R0,MSG04                INDICATE MSG4  TO BE SENT 88185
         L     R8,20+8*4(,R13)  RESTORE BASE                     88185
         B     SENDMSG                 EXIT TO SEND MSG          88185
         SPACE 2                                                 88185
SRMVC    MVC   0(0,R14),0(R1)  SAVE PARAMETER                    88185
SRMSG0   DC    C' SETRANGE COMMAND SYNTAX ERROR'                 88185
         TITLE '*********  N E T S O L  - SETLOGON COMMAND'
***********************************************************************
*                                                                     *
*    SETLOGON SETS UP THE AUTOMATIC LOGON APPLICATION FOR A NODE.     *
*                                                                     *
*    THE FORMAT OF THE COMMAND IS:                                    *
*                                                                     *
*        SETLOGON NODENAME APPLID                                     *
*        SETLOGON NODENAME UNLOCK - TO MAKE TERMINAL PRIVILEGED  86065
*        SETLOGON NODENAME LOGON  - REQUIRE USERS TO LOG ON
*                                                                     *
*    IF THE APPLID IS OMITTED, THEN THE LOGAPPL RESET TO NOTHING.     *
*                                                                     *
*    INPUT : NO PARAMETERS                                            *
*                                                                     *
*   OUTPUT : R0  - INDEX INTO DDT MSG TABLE                           *
*                                                                     *
***********************************************************************
         SPACE 1
SETLOGON ST    R8,20+8*4(,R13)  SAVE LOCAL BASE
         BALR  R8,0          MAKE LOCAL BASE                     88185
         USING *,R8          DECLARE IT                          88185
SLBASE   BAL   R14,INITMSG4       OBTAIN MSG4  BUFFER
         SPACE 1
*        GET NODENAME
         SPACE 1
         LA    R1,SLNODE          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET NODE NAME
         B     *+12               +0 - FOUND IT
         B     SLXERR             +4 - NOT THERE
         B     SLXERR             +8 - ERROR IN NODENAME
         MVC   NODENAME,=CL8' '   SAVE
         BCTR  R15,0                NODENAME
         EX    R15,SLEX1              FOR LATER
         SPACE 1
*        GET APPLID (OPTIONAL)
         SPACE 1
         LA    R1,SLAPPL          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET APPLID
         B     *+12               +0 - FOUND APPLID
         B     SLTABLOK           +4 - APPLID NOT SPECIFIED
         B     SLXERR0            +8 - ERROR IN APPLID           86065
         MVC   DLOGAPPL,=CL8' '   SAVE
         BCTR  R15,0                APPLID
         EX    R15,SLEX2              FOR LATER
         LA    R15,1(,R15)        RESTORE APPLID LENGTH
         SPACE 1
*        SCAN TERM TABLE FOR NODENAME
         SPACE 1
SLTABLOK STM   R3,R5,12(R13)      SAVE REGS
         LA    R1,NODENAME             PT @ NODENAME
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    SLNOENT                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
SLTABLP  CLC   0(8,R1),TERMNAME        MATCH THE NAME ?
         BE    SLFNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,SLTABLP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BL    SLNOENT                 NO => NODENAME NOT IN TABLE
         BAL   R7,SNOCCUR              YES => SHOULD NOT OCCUR
         SPACE 1
*        THERE IS NO TTE ENTRY FOR THIS NODE.
*        NO APPLID WILL BE TREATED AS AN ERROR IN THIS CASE.
         SPACE 1
SLNOENT  L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDENT                YES => ADD ENTRY
         TM    UFLAGS,INIT   INITIALIZATION PROCESSING ?         88220
         BZ    SLNOENTM      NO; FAIL                            88220
         XC    DLOGAPPL,DLOGAPPL  CLEAR FOR SETRANGE OVERRIDE    88220
         LA    R15,1         SET FALSE LENGTH                    88220
         LA    R1,DLOGAPPL   SET FALSE LOCATION                  88220
         B     SLADDENT      ADD AN ENTRY                        88220
SLNOENTM MVC   8(L'SLMSG1,R2),SLMSG1   NO  => MOVE ERROR MSG     86065
         MVC   0(8,R2),NODENAME               MOVE NODENAME TO MSG
         LM    R3,R5,12(R13)                  RESTORE REGS
         B     SLXERR                         BR TO ERROR EXIT
         SPACE 1
*        ADD TERM TABLE ENTRY FOR SPECIFIED NODE NAME
*        IF NO APPLID WAS SPECIFIED, THEN THE LOGAPPL IS RESET IN TTE
         SPACE 1
SLADDENT ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),NODENAME    COPY NAME ACROSS
         B     SLADDAPL      ADD APPLID TO ENTRY
         SPACE 1
SLFNDTAB NI    TERMFLAG,255-LOGPROC    CLEAR LOGON STATUS FLAG   90135
         L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDAPL                YES => GO ADD APPLID
         XC    TERMDAPL,TERMDAPL       NO  => ZERO LOGON APPLID
         MVC   0(L'SLMSG2,R2),SLMSG2          MOVE MSG TO OUT BUF
         MVC   19(8,R2),NODENAME              ADD NODE NAME TO MSG
         B     SLNDTTE                        BR TO END OF TTE PROCESS
         SPACE 1
SLADDAPL CLC   =CL8'UNLOCK',DLOGAPPL  SPECIAL REQUEST ?          86065
         BE    SLADDUNL                                          88179
         CLC   =C'LOGON',DLOGAPPL                                88179
         BE    SLADDLON      SET LOGON REQUIRED                  88185
         CLC   =C'LOCK ',DLOGAPPL                                88185
         BE    SLADDLOK                                          88185
         CLC   =C'NOLOG',DLOGAPPL                                88185
         BNE   SLADDAPP      NO; NORMAL APPLICATION NAME         86065
         NI    TERMFLG3,255-TFREQ  RESET LOGON REQUIRED          88185
         B     SLCHANGE                                          88185
SLADDLOK NI    TERMFLG3,TFREQ  LOGOFF; LOCK                      88185
         B     SLCHANGE                                          88185
SLADDLON OI    TERMFLG3,TFREQ  SHOW LOGON REQUIRED               88179
SLCHANGE MVC   8(8,R2),=C' CHANGED'                              88179
         MVC   0(8,R2),NODENAME                                  88179
         B     SLNDTTE       MAKE MESSAGE                        88179
SLADDUNL OI    TERMFLG3,TPRIVY+TFLON  SET PRIVILEGED TERMINAL    88179
         MVC   8(L'SLMSG4,R2),SLMSG4  GET BASIC MESSAGE          86065
         MVC   0(8,R2),NODENAME  INDICATE WHO                    86065
         B     SLNDTTE
         SPACE 1                                                 86065
SLADDAPP MVC   TERMDAPL,DLOGAPPL       ADD LOGON APPLID TO TTE   86065
         MVC   8(L'SLMSG3,R2),SLMSG3   MOVE OK MSG TO OUT BUF    86065
         MVC   0(8,R2),TERMDAPL        ADD APPLID TO MSG
         OC    0(8,R2),=CL8' '  UPPER CASE HEX ZEROES            88220
         MVC   33(8,R2),TERMNAME       ADD NODE NAME TO MSG
         TM    UFLAGS,INIT   IN INITIALIZATION PROCESSING ?      87131
         BZ    SLNDTTE       NO; NO COMMAND CODE                 87131
         SLR   R6,R6                                             87131
         ICM   R6,3,GPDATAL  ANY MORE TEXT ?                     87131
         BZ    SLNDTTE       NO                                  87131
         L     R7,GPDATAP    GET TEXT START                      87131
SLLDEBL  CLI   0(R7),C' '    LEADING BLANK ?                     87131
         BNE   SLLDEBND      NO                                  87131
         LA    R7,1(,R7)                                         87131
         BCT   R6,SLLDEBL    GET RESIDUAL LENGTH                 87131
         B     SLNDTTE       NO MORE TEXT                        87131
SLLDEBND LA    R15,0(R6,R7)  GET END OF TEXT                     87131
SLRDEBL  BCTR  R15,0         BACKSPACE                           87131
         CLI   0(R15),C' '   TRAILING BLANK ?                    87131
         BNE   SLRDEBND      NO                                  87131
         BCT   R6,SLRDEBL    TRY AGAIN                           87131
         B     SLNDTTE                                           87131
SLPMSG   MVC   0(0,R1),0(R7) MOVE LOGON MESSAGE (PARM)           87131
SLRDEBND GETMAIN R,LV=255,SP=2    GET A BUFFER FOR THE TEXT      87131
         ST    R6,TERMLPLN   SET LOGON PARM LENGTH               87131
         BCTR  R6,0          LENGTH FOR EXECUTE                  87131
         ST    R1,TERMLPAD   SAVE MESSAGE ADDRESS                87131
         EX    R6,SLPMSG     SAVE MESSAGE                        87131
*        B     SLNDTTE       CONTINUE                            87131
         SPACE 1
SLNDTTE  LM    R3,R4,12(R13)           RESTORE REGS
         B     SLEXIT                  BR TO EXIT
         SPACE 1
SLXERR0  MVC   8(L'SLMSG0,R2),SLMSG0  INDICATE ERROR             86065
         MVC   0(8,R2),NODENAME                                  86065
SLXERR   TM    UFLAGS,INIT             CMD ISSUED DURING INITIALIZATION
         BZ    *+8                     NO  => BR TO CONTINUE
         OI    UFLAGS,INITERR          YES => FLAG ERROR DURING INIT
         SPACE 1
SLEXIT   LA    R0,MSG04                INDICATE MSG4  TO BE SENT
         L     R8,20+8*4(,R13)  RESTORE LOCAL BASE               88185
         B     SENDMSG                 EXIT TO SEND MSG
         SPACE 2
SLEX1    MVC   NODENAME(0),0(R1)       SAVE NODENAME PARM
SLEX2    MVC   DLOGAPPL(0),0(R1)       SAVE APPLID PARM
SLMSG0   DC    C' SETLOGON COMMAND SYNTAX ERROR'                 86065
SLMSG1   DC    C' NOT KNOWN TO NETSOL'                           86065
SLMSG2   DC    C'DEFAULT APPLID FOR XXXXXXXX RESET'
SLMSG3   DC    C' IS NOW LOGON APPLID FOR '                      86065
SLMSG4   DC    C' NOW UNLOCKED'                                  86065
         SPACE 1                                                 88185
         LTORG ,                                                 88185
         TITLE '*********  N E T S O L  -  SET/SHOW/KILL COMMANDS'
TESTMSG  ST    R8,20+8*4(,R13)  SAVE FOR LOCAL BASE              88220
         BALR  R8,0          MAKE LOCAL BASE                     88220
         USING *,R8          DECLARE BASE                        88220
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88220
         XC    A$SAVE(8),A$SAVE  CLEAR WORK SPACE                88220
         LA    R1,SLNUM      REQUEST MESSAGE NUMBER              88220
         BAL   R14,GETPARM                                       88220
         B     *+12          OK ?                                88220
         B     SKXERR        FAIL                                88220
         B     SKXERR        BAD                                 88220
         BCTR  R15,0                                             88220
         EX    R15,TTMPACK   PACK THE MESSAGE                    88220
         CVB   R0,A$SAVE     MAKE DECIMAL                        88220
         LTR   R0,R0         VALID ?                             88220
         BNP   TTMERR        NO                                  88220
         CH    R0,=Y(MSGMAX) VALID ?                             88220
         BNH   SKEXM#        NO                                  88220
TTMERR   MVC   0(14,R2),=C'INVALID NUMBER'                       88220
         B     SKXERR        FAIL                                88220
SLNUM    $GP   8,'MESSAGE NUMBER',GPNUM                          88220
TTMPACK  PACK  A$SAVE(8),0(0,R1)  PACK MESSAGE NUMBER            88220
         SPACE 1                                                 88220
SETSET   DS    0H                                                88206
SETSHOW  ST    R8,20+8*4(,R13)  SET LOCAL BASE                   88206
         BALR  R8,0          MAKE LOCAL BASE                     88206
         USING *,R8          DECLARE BASE                        88206
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88206
         MVC   0(4,R2),=C'OOPS'                                  88206
         B     SKEXIT        QUIT UNTIL CODE ADDED               88209
         SPACE 1                                                 88209
*        KILL USER ID,  KILL TERM ID, OR  KILL ID                88209
*                                                                88209
SETKILL  ST    R8,20+8*4(,R13)  SET LOCAL BASE                   88206
         BALR  R8,0          MAKE LOCAL BASE                     88206
         USING *,R8          DECLARE BASE                        88206
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88206
         LR    R4,R2         CHANGE GLOBAL REGISTER              88209
         MVC   NODENAME,=CL8' '  BLANK DESIRED NAME              88209
         MVC   NODENAM2,NODENAME  PROPAGATE                      88209
         STM   R3,R5,12(R13)   SAVE TTE AND RPL ADDRESSES        88209
SETKILL1 LA    R1,SLNAME     POINT TO OPTION ENTRY               88209
         BAL   R14,GETPARM   PARSE THE NEXT OPERAND              88209
         B     *+12          OK                                  88209
         B     SKXERR        MISSING                             88209
         B     SKXERR        TOO LONG ?                          88209
         BCTR  R15,0                                             88209
         EX    R15,SKEX1     MOVE TO FIELD                       88209
         SPACE 1                                                 88209
         CLI   NODENAM2,C' '   SECOND PASS THROUGH HERE ?        88209
         BNE   SETKILLB      NO; TEST WHICH                      88209
         CLC   =C'TERM',NODENAME   KILL A TERMINAL ?             88209
         BE    SETKILL2      YES; NEED SECOND OPERAND            88209
         CLC   =C'USER',NODENAME   KILL A USER ?                 88209
         BNE   SETKILLB      NO; TRY BOTH                        88209
SETKILL2 MVC   NODENAM2(1),NODENAME  PRESERVE THE REQUEST TYPE   88209
         B     SETKILL1      AND PARSE FOR NAME                  88209
SETKILLB CLI   NODENAM2,C'U' KILL USER ONLY ?                    88209
         BE    SETKILLU                                          88209
         LM    R1,R3,TERMTABS  GET THE TERMINAL TABLE            88209
         SR    R1,R2         RECOVER FROM EMPTY TABLE            88209
SETKILTL BXH   R1,R2,SETKILTN  TERMINAL NOT FOUND                88209
         CLC   NODENAME,TERMNAME-TERMTABL(R1)  SAME ID ?         88209
         BNE   SETKILTL      NO; TRY NEXT ENTRY                  88209
         LR    R3,R1         COPY DESIRED TTE                    88209
         BAL   R14,UTERMOF   RESET PRIVILEGES AND LOGON          88209
         AIF   ('&LOCAL' NE 'PID').NOKILL1                       92300
         ICM   R1,15,TERMLOUD   LOCAL USER DATA ?                88209
         BZ    SETKILTX      NO; DONE                            88209
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM ARE
         MVC   A$SID,=C'A$RB'                                    88209
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88209
*                            LOGOFF SESSIONS AND USER            88209
         ST    R1,A$SBUFR    SET LOUD                            88209
         LA    R1,A$SVCRB                                        88209
         SVC   249           CANCEL SESSIONS; KEEP USER          88209
.NOKILL1 ANOP  ,                                                 91195
SETKILTX MVC   0(24,R4),=C'Terminal XXXXXXXX killed'             88209
         MVC   9(8,R4),NODENAME                                  88209
         B     SKEX35        TAKE NORMAL EXIT                    88209
SETKILTN CLI   NODENAM2,C'T'  TERMINAL ONLY ?                    88209
         BNE   SETKILLU      NO; LOOK FOR USER                   88209
         MVC   0(27,R4),=C'Terminal XXXXXXXX not found'          88209
         MVC   9(8,R4),NODENAME   IDENTIFY                       88209
         B     SKEX35        AND QUIT                            88209
         SPACE 1                                                 88209
SETKILLU MVC   0(23,R4),=C'User XXXXXXXX not found'              88209
         MVC   5(8,R4),NODENAME  ADD USER ID                     88209
         AIF   ('&LOCAL' NE 'PID').NOKILL2                       92300
         L     R14,CVTPTR    GET THE CVT                         88209
         ICM   R14,15,CVTUSER-CVTMAP(R14)  LOCAL EXTENSION?      88209
         BZ    SKEX35        NO                                  88209
         LA    R9,UCLOUD-USERCVT-(A$LNEXT-A$LOUD)(R14) LINK-PTR  88209
SETKILUL ICM   R9,15,A$LNEXT-A$LOUD(R9)  ANOTHER ?               88209
         BZ    SKEX35        NO                                  88209
         CLC   NODENAME,A$UUID-A$LOUD(R9)  SAME ID ?             88209
         BNE   SETKILUL                                          88209
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM ARE
         MVC   A$SID,=C'A$RB'                                    88209
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88209
*                            LOGOFF SESSIONS AND USER            88209
         ST    R9,A$SBUFR    SET LOUD                            88209
         LA    R1,A$SVCRB                                        88209
         SVC   249           CANCEL SESSIONS; KEEP USER          88209
         MVC   14(9,R4),=C'killed   '                            88209
         B     SETKILUL      TRY FOR ANOTHER                     88209
.NOKILL2 B     SKEX35        NO CHAIN; NO MATCH                  91195
         SPACE 1                                                 88209
SKXERR   TM    UFLAGS,INIT                                       88209
         BZ    *+8                                               88209
         OI    UFLAGS,INITERR                                    88209
         B     SKEXIT        TAKE NORMAL EXIT                    88209
         SPACE 1                                                 88206
SKEX35   LM    R3,R5,12(R13) RESTORE TTE AND RPL                 88209
SKEXIT   LA    R0,MSG04      GET ERROR MESSAGE INDEX             88206
SKEXM#   L     R8,20+8*4(,R13)  RESTORE OLD BASE                 88206
         B     SENDMSG       SEND MESSAGE                        88206
SKEX1    MVC   NODENAME(0),0(R1)   MOVE TERM OR USER ID          88209
         SPACE 1                                                 88206
         LTORG ,                                                 88206
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES.    *
***********************************************************************
DDT3270  DS    0D
S32EDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S32SENDA DC    A(S32COMP)         A(3270 SEND/COMPRESSION ROUTINE)
S32TERMA DC    A(S32TID12,S32TID13,S32TID20)  TERM NAME FIELD ADDRESS
S32TIMEA DC    A(S32TIM12,S32TIM13,S32TIM20)  TIME FIELD ADDRESSES
S32M4OFS DC    A(S32M4OF)         A(USABLE BUFFER IN MSG 4)
S32OFFST DC    AL2(S32M4OF+6-S32MSG04)  MSG OFFSET FOR INSERTED DATA
S32M4L   DC    AL2(L'S32M4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S32MSGTB DS    0F
         DC    A(S32MSG01)
         DC    A(S32MSG02)
         DC    A(S32MSG03)
         DC    A(S32MSG04)
         DC    A(S32MSG05)
         DC    A(S32MSG06)
         DC    A(S32MSG07)
         DC    A(S32MSG08)
         DC    A(S32MSG09)
         DC    A(S32MSG10)
         DC    A(S32MSG11)
         DC    A(S32MSG12)
         DC    A(S32MSG13,S32MSG14,S32MSG15,S32MSG16,S32MSG17)   86065
         DC    A(S32MSG18,S32MSG01)  MSG 19 IS FAKE              87187
         DC    A(S32MSG20)   LOGON SCREEN                        88179
         SPACE 5                                                 90120
*              DEVICE DEPENDENT TABLE FOR 3270 EXTENDED FUNCTION'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES     *
*        THAT HAVE EXTENDED FUNCTION (I.E. COLOUR + SYMBOL SETS ).    *
***********************************************************************
DDT3270E DS    0D
S3EEDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S3ESENDA DC    A(S3ESEND)         A(3270-EDS SEND ROUTINE)       90140
S3ETERMA DC    A(S3ETID12,S3ETID13,S3ETID20) TERM NAME ADDRESSES 88179
S3ETIMEA DC    A(S3ETIM12,S3ETIM13,S3ETIM20) TIME/DATE ADDRESSES 88179
S3EM4OFS DC    A(S3EM4OF)         A(USABLE BUFFER IN MSG 4)
S3EOFFST DC    AL2(S3EM4OF+6-S3EMSG04)  MSG OFFSET FOR INSERTED DATA
S3EM4L   DC    AL2(L'S3EM4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S3EMSGTB DS    0F
         DC    A(S3EMSG01)
         DC    A(S3EMSG02)
         DC    A(S3EMSG03)
         DC    A(S3EMSG04)
         DC    A(S3EMSG05)
         DC    A(S3EMSG06)
         DC    A(S3EMSG07)
         DC    A(S3EMSG08)
         DC    A(S3EMSG09)
         DC    A(S3EMSG10)
         DC    A(S3EMSG11)
         DC    A(S3EMSG12)
         DC    A(S3EMSG13,S3EMSG14,S3EMSG15,S3EMSG16,S3EMSG17)   86065
         DC    A(S3EMSG18,S3EMSG01)  MSG 19 IS FAKE              87187
         DC    A(S3EMSG20)   LOGON SCREEN                        88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270 MODEL 5'                                      88206
*****************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND   88206
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES
*        RUNNING IN 27*132 FORMAT.  ( MODEL 5 )                  88206
*****************************************************************
DDTMDL5  DS    0D                                                88206
MD5EDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)     88206
MD5SENDA DC    A(S3ESEND)         A(3270-EDS SEND ROUTINE)       90140
MD5TERMA DC    A(MD5TID12,MD5TID13,MD5TID20)  TERM NAME FIELD ADD
MD5TIMEA DC    A(MD5TIM12,MD5TIM13,MD5TIM20)  TIME FIELD ADDRESSE
MD5M4OFS DC    A(MD5M4OF)         A(USABLE BUFFER IN MSG 4)      88206
MD5OFFST DC    AL2(MD5M4OF+6-MD5MSG04)  MSG OFFSET FOR INSERTED D
MD5M4L   DC    AL2(L'MD5M4OF)     L(USABLE BUFFER IN MSG 4)      88206
*****************************************************************
*        MESSAGE TABLE INDEX                                     88206
*****************************************************************
         SPACE 2                                                 88206
MD5MSGTB DS    0F                                                88206
         DC    A(MD5MSG01)                                       88206
         DC    A(MD5MSG02)                                       88206
         DC    A(MD5MSG03)                                       88206
         DC    A(MD5MSG04)                                       88206
         DC    A(MD5MSG05)                                       88206
         DC    A(MD5MSG06)                                       88206
         DC    A(MD5MSG07)                                       88206
         DC    A(MD5MSG08)                                       88206
         DC    A(MD5MSG09)                                       88206
         DC    A(MD5MSG10)                                       88206
         DC    A(MD5MSG11)                                       88206
         DC    A(MD5MSG12)                                       88206
         DC    A(MD5MSG13,MD5MSG14,MD5MSG15,MD5MSG16,MD5MSG17)   88206
         DC    A(MD5MSG18,MD5MSG01)  MSG 19 IS FAKE              88206
         DC    A(MD5MSG20)   LOGON SCREEN                        88206
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               767'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3767 TERMINALS.  *
***********************************************************************
DDT3767  DS    0D
S37EDITA DC    A(S37EDIT)         A(3767 INPUT EDIT ROUTINE)
S37SENDA DC    A(S37SEND)         A(3767 SEND ROUTINE)           86145
S37TERMA DC    A(S37TID12,0,S37TID20)  TERMINAL ID               88220
S37TIMEA DC    A(S37TIM12,0,0)    A(TIME FIELD IN MSG 12)        86065
S37M4OFS DC    A(S37M4OF)         A(USABLE BUFFER IN MSG 4)
S37OFFST DC    AL2(S37M4OF+6-S37MSG04)  MSG OFFSET FOR INSERTED DATA
S37M4L   DC    AL2(L'S37M4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S37MSGTB DS    0F
         DC    A(S37MSG01)
         DC    A(S37MSG02)
         DC    A(S37MSG03)
         DC    A(S37MSG04)
         DC    A(S37MSG05)
         DC    A(S37MSG06)
         DC    A(S37MSG07)
         DC    A(S37MSG08)
         DC    A(S37MSG09)
         DC    A(S37MSG10)
         DC    A(S37MSG11)
         DC    A(S37MSG12)
         DC    A(S37MSG13,S37MSG14,S37MSG15,S37MSG16,S37MSG17)   86065
         DC    A(S37MSG18,S37MSG01)  MSG 19 IS FAKE              87187
         DC    A(S37MSG20)   LOGON SOLICITATION                  88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR SX
               YSIN FILE'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN PROCESSING CMDS FROM THE SYSIN FILE.*
***********************************************************************
DDTSYSIN DS    0D
SINEDITA DC    A(0)               A(SYSIN INPUT EDIT ROUTINE)
SINSENDA DC    A(RIPUTMSG)        A(SYSIN SEND ROUTINE)
SINTERMA DC    A(0,0,0)           A(TERMINAL FIELD IN MSG 12)    86065
SINTIMEA DC    A(0,0,0)           A(TIME FIELD IN MSG 12)        86065
SINM4OFS DC    A(SINM4OF)         A(USABLE BUFFER IN MSG 4)
SINOFFST DC    AL2(SINM4OF+6-SINMSG04)  MSG OFFSET FOR INSERTED DATA
SINM4L   DC    AL2(L'SINM4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
SINMSGTB DS    0F
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG04)         RESPONSE FOR INITIALIZATION CMDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG07)         FOR INVALID COMMANDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    8A(SINMSG00)                                      88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR OX
               S CONSOLES'                                       88192
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN OS CONSOLE COMMUNICATIONS.          *
*            NOTE THAT 3767 MESSAGES ARE USED AS-IS.                  *
***********************************************************************
DDTCONS  DS    0D                                                88192
CONEDITA DC    A(0)          NO INPUT EDIT                       88192
CONSENDA DC    A(S37SEND)    A(CONSOLE WTO ROUTINE)              88192
CONTERMA DC    A(S37TID12,0,0)    A(TERMINAL FIELD IN MSG 12)    88192
CONTIMEA DC    A(S37TIM12,0,0)    A(TIME FIELD IN MSG 12)        88192
CONM4OFS DC    A(CONM4OF)         A(USABLE BUFFER IN MSG 4)      88192
CONOFFST DC    AL2(CONM4OF+6-CONMSG04)  MSG OFFSET FOR INSERTED DATA
CONM4L   DC    AL2(L'CONM4OF)     L(USABLE BUFFER IN MSG 4)      88192
         SPACE 1                                                 88192
CONMSGTB DC    A(CONMSG01)                                       88192
         DC    A(CONMSG02)                                       88192
         DC    A(CONMSG03)                                       88192
         DC    A(CONMSG04)                                       88192
         DC    A(CONMSG05)                                       88192
         DC    A(CONMSG06)                                       88192
         DC    A(CONMSG07)                                       88192
         DC    A(CONMSG08)                                       88192
         DC    A(CONMSG09)                                       88192
         DC    A(CONMSG10)                                       88192
         DC    A(CONMSG11)                                       88192
         DC    A(S37MSG12)                                       88192
         DC    A(CONMSG13,CONMSG14,CONMSG15,CONMSG16,CONMSG17)   88192
         DC    A(CONMSG18,CONMSG01)  MSG 19 IS FAKE              88192
         DC    A(S37MSG20)   LOGON SOLICITATION                  88192
         SPACE 1                                                 88192
CONMSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=CON
CONMSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE, REENTER'        88192
CONMSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
CONMSG04 DC    YL2(CONEND04-*)                                   88192
CONM4OF  DC    CL60' '
CONEND04 EQU   *
CONMSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88192
CONMSG06 $MSG  C'BCSC106 CONNECTING TO APPLICATION XXXXXXXX'     88192
CONMSG07 $MSG  C'BCSC107 XXXXXXXX NOT A VALID COMMAND'           88192
CONMSG08 $MSG  C'BCSC108          IS NOT AVAILABLE'  OR LOGMODE INVALID
CONMSG09 $MSG  C'BCSC109          NO LONGER ACCEPTING LOGONS'    88192
CONMSG10 $MSG  C'BCSC110          NEVER ACCEPTING LOGONS'        88192
CONMSG11 $MSG  C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
CONMSG13 $MSG  C'PID VTAM SERVICE IS CLOSED AT THIS TIME'        92300
CONMSG14 $MSG  C'CENTER CLOSED - ACCESS NOT PERMITTED NOW'       87187
CONMSG15 $MSG  C'BCSC115 TERMINAL NOW UNLOCKED'                  86065
CONMSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED'               86065
CONMSG17 $MSG  C'BCSC117 PASSWORD UNLOCK REQUEST FAILED'         86065
CONMSG18 $MSG  C'REQUEST IS NOT AUTHORIZED'                      87187
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3270'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 2
S32MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3270
S32MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
S32MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
S32MSG04 $MSG  CL60' ',ML=S32M4OF                                88206
S32MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1
S32MSG06 DC    YL2(S32END06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SF   (PROT)             SET ATTRIBUTE BYTE
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
S32M6APL DC    CL8'APPLID'                                       86012
S32END06 EQU   *
         SPACE 1
S32MSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
S32MSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
S32MSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'    88206
S32MSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
S32MSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S32MSG12 $SCRN 12            DEFINE APPLICATION MENU             88220
S32MSG13 $SCRN 13            SHOW CENTER CLOSED                  88220
         SPACE 1                                                 86065
S32MSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
S32MSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=
S32MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=          88206
S32MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED'                 88206
S32MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
S32MSG20 $SCRN 20            PROMPT FOR USER LOGON               88220
         SPACE 5                                                 90120
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 1
S3EMSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=327E
S3EMSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
S3EMSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
S3EMSG04 $MSG  CL60' ',ML=S3EM4OF                                88206
S3EMSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1
S3EMSG06 DC    YL2(S3EEND06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SFE  ATTR=PROT,COL=GREEN
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
S3EM6APL DC    CL8'APPLID'                                       86012
S3EEND06 EQU   *
         SPACE 1
S3EMSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
S3EMSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
S3EMSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'
S3EMSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
S3EMSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S3EMSG12 $SCRN 12            DEFINE APPLICATION MENU             88220
S3EMSG13 $SCRN 13            SHOW CENTER CLOSED                  88220
         SPACE 1                                                 86065
S3EMSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
S3EMSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=,CO*
               L=GREEN                                           88206
S3EMSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=,COL=YELLOW
S3EMSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED',COL=PINK        88206
S3EMSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              88206
         SPACE 1                                                 88179
S3EMSG20 $SCRN 20            PROMPT FOR USER LOGON               88220
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3270'    88206
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2                                                 88206
         $MODEL 5               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 2                                                 88206
MD5MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3270
MD5MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
MD5MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
MD5MSG04 $MSG  CL60' ',ML=MD5M4OF                                88206
MD5MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1                                                 88206
MD5MSG06 DC    YL2(MD5END06-*)                                   88206
         $IO   ERASE/ALT          SET 3270 COMMAND CODE          88206
         $WCC  (MDT)              SETUP WCC                      88206
         $SBA  (1,1)              SET BUFFER ADDRESS             88206
         $SF   (PROT)             SET ATTRIBUTE BYTE             88206
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
MD5M6APL DC    CL8'APPLID'                                       86012
MD5END06 EQU   *                                                 88206
         SPACE 1                                                 88206
MD5MSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
MD5MSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
MD5MSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'    88206
MD5MSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
MD5MSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1                                                 88206
MD5MSG12 $SCRN 12,IO=ERASE/ALT  DEFINE APPLICATION MENU          88220
MD5MSG13 $SCRN 13,IO=ERASE/ALT  SHOW CENTER CLOSED               88220
         SPACE 1                                                 86065
MD5MSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
MD5MSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=
MD5MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=          88206
MD5MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED'                 88206
MD5MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
MD5MSG20 $SCRN 20,IO=ERASE/ALT  PROMPT FOR USER LOGON            88220
         SPACE 1                                                 88179
NEWSTEXT DC    CL80'                             PID News   '    88179
         DC    CL80' '                                           88179
         DC    CL80' No news available (no news is good news?)'  88179
         DC    21CL80' '     DATA FROM 'NEWS' DD                 88179
         SPACE 1                                                 88179
HELPTEXT DC    CL40'                         VTAM Functions '    88179
         DC    CL40'                                        '  1 88179
         DC    CL40'   Simple commands:   HELP - displays th'    88179
         DC    CL40'is screen.                              '  2 88179
         DC    CL40'     STATUS - displays the system activi'    88179
         DC    CL40'ty screen.                              '  3 88179
         DC    CL40'     MSG text - sends a message to the o'    88179
         DC    CL40'perator (no reply possible).            '  4 88179
         DC    CL40'     NEWS - displays the current news bu'    88179
         DC    CL40'lletin (if any)                         '  5 88179
         DC    CL40'     PASSWORD userid/password - connect '    88179
         DC    CL40'(sign-on) to VTAM                       '  6 88179
         DC    CL40'     LOCK - sign-off only. Does not disc'    88179
         DC    CL40'onnect session.                         '  7 88179
         DC    CL40'     LOGOFF - sign-off and disconnect se'    88179
         DC    CL40'ssion on dial-up terminals.             '  8 88179
         DC    CL40'     OS text - issue an operator command'    88179
         DC    CL40' (privileged function).                 '  9 88179
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 10 88179
         DC    CL40'When your initial contact (dial-in or EN'    88179
         DC    CL40'TER key) results in a "SIGN-ON" screen,'  11 88179
         DC    CL40'you will not be able to use any sub-syst'    88179
         DC    CL40'em until you complete the logon process.' 12 88179
         DC    CL40'Supply your user-id, your password, and '    88179
         DC    CL40'an optional account number. When you use' 13 88179
         DC    CL40'an account number to sign on, you are pl'    88179
         DC    CL40'aced in global (automatic) LOGON mode.  ' 14 88179
         DC    CL40'Subsequent requests for TSO or WYLBUR wi'    88179
         DC    CL40'll bypass their LOGON screens.          ' 15 88179
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 16 88179
         DC    CL40'If you see a "PID Inc.  CLOSED" message '    88179
         DC    CL40'or screen, then either:                 ' 17 88179
         DC    CL40' a) your terminal is locked to a subsyst'    88179
         DC    CL40'em that is not currently running,  or   ' 18 88179
         DC    CL40' b) VTAM is restricted while system main'    88179
         DC    CL40'tenance is being performed.             ' 19 88179
         DC    CL40'We close for scheduled maintenance every'    88179
         DC    CL40' Sunday morning from midnight to 8 a.m.,' 20 88179
         DC    CL40'Monday midnight to 8 a.m. and Thursday 6'    90054
         DC    CL40' to 8 a.m.                              ' 21 90054
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 22 88179
         DC    CL40'For assistance, call:  (703) 931-9500 Te'    88179
         DC    CL40'chnical support Ext. 48  / Systems #50  ' 23 88179
         DC    CL40'                       (703) 931-9500 Co'    88179
         DC    CL40'mputer operations Ext. 43               ' 24 88179
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3767'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
S37MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3767
S37MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE, REENTER'        88192
S37MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
S37MSG04 DC    YL2(S37END04-*),X'0D25'                           88192
S37M4OF  DC    CL60' '
         DC    X'0D25'              CARRIAGE RETURN              86153
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END04 EQU   *
S37MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88192
S37MSG06 $MSG  C'BCSC106 CONNECTING TO APPLICATION'              88195
         ORG   *-10          OVERLAY CRLF/ENTER TEXT             88195
         DC    C' '          ONE SPACER                          88195
S37M6APL DC    CL8' ',C' '   APPLID IN MSG06                     88195
S37MSG07 $MSG  C'BCSC107          NOT DEFINED TO VTAM'           88192
S37MSG08 $MSG  C'BCSC108          IS NOT AVAILABLE'  OR LOGMODE INVALID
S37MSG09 $MSG  C'BCSC109          NO LONGER ACCEPTING LOGONS'    88192
S37MSG10 $MSG  C'BCSC110          NEVER ACCEPTING LOGONS'        88192
S37MSG11 $MSG  C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S37MSG12 DC    YL2(S37END12-*)
         DC    XL2'0D250D25'          DOUBLE CARRIAGE RETURN     86153
         DC    C'PID VTAM SERVICE '                              92300
S37NSN12 DC    CL20' '       VTAM AND PROGRAM VERSION            86145
***********************************************************************
*                                                                     *
*        TIME AND DATE STAMP                                          *
*                                                                     *
***********************************************************************
         SPACE 1
         DC    C'   System:'   SYSTEM ID                         86012
S37SMC12 DC    CL4' '        SMCA ID                             86012
         DC    C'   Terminal:'    TERM KEYWORD                   85328
S37TID12 DC    CL8' '             TERM NAME
         DC    XL2'0D250D25'          CARRIAGE RETURN            86153
***********************************************************************
*                                                                     *
*        APPLICATION SELECTION MENU                                   *
*                                                                     *
***********************************************************************
         SPACE 1
         DC    C'  APPLICATION  ENTER         EXIT'
         DC    CL3' '             FILLER
S37TIM12 DC    CL15' '            TIME STAMP
         DC    X'0D25'                                           86153
         DC    C'  TSO          LOGON         LOGOFF'
         DC    X'0D25'                                           86153
         DC    C'  KERMIT       KERMIT        QUIT/LOGOFF'       89338
         DC    X'0D25'                                           86153
         DC    C'  WYLBUR       WYLBUR        LOGOFF'            84142
         DC    X'0D25'                                           86153
         DC    C'  Comten menu  LOGOFF'                          86356
         DC    X'0D25'                                           86356
***********************************************************************
*                                                                     *
*        PROMPT FOR INPUT                                             *
*                                                                     *
***********************************************************************
         DC    C'ENTER ? '
S37END12 EQU   *
S37SIZ12 EQU   S37END12-S37MSG12
         SPACE 1                                                 86065
S37MSG13 $MSG  C'PID VTAM SERVICE IS CLOSED AT THIS TIME'        92300
S37MSG14 $MSG  C'CENTER CLOSED - ACCESS NOT PERMITTED NOW'       87187
S37MSG15 $MSG  C'BCSC115 TERMINAL NOW UNLOCKED'                  86065
S37MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED'               86065
S37MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK REQUEST FAILED'         86065
S37MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
S37MSG20 DC    YL2(S37END20-*),X'0D25'                           88179
         DC    C'Welcome to PID VTAM Services.'                  92300
         DC    C'   System:'   SYSTEM ID                         88220
S37SMC20 DC    CL4' '        SMCA ID                             88220
         DC    C'   Terminal:'    TERM KEYWORD                   88220
S37TID20 DC    CL8' ',X'0D25'     TERM NAME                      88220
 DC    C'Please issue a command (HELP, LOGOFF...) or sign on.',X'0D25'
         DC    C'To sign-on, enter your userid, a space, and your passw*
               ord. You may specify',X'0D25'                     88220
         DC    C'your account number after the password to bypass TSO/W*
               YLBUR logon prompts.',X'0D25'                     88220
         DC    C'Enter (id/pswdÝ/acct¨)>'   PROMPT FOR INPUT     88220
S37END20 EQU   *                                                 88179
         TITLE '*********  N E T S O L  -  MESSAGES FOR SYSIN'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
SINMSG00 $MSG  C'UNSUPPORTED MESSAGE FOR SYSIN CMDS',TYPE=SYN    88192
         SPACE 1
SINMSG04 DC    YL2(SINEND04-*-2)                                 86066
SINM4OF  DC    CL60' '
SINEND04 EQU   *
         ORG   SINM4OF       REDEFINE                            88199
ERRMSG   DC    XL125'0'      RDW/0/TEXT  FOR SVC 249 ERROR MESSAGES
         SPACE 1
SINMSG07 $MSG  C'BCSC107 INVALID COMMAND'                        88192
         SPACE 1                                                 85235
***********************************************************************
*    EXIT ROUTINES TO BE SCHEDULED IN RESPONSE TO VTAM EVENTS         *
*                                                                     *
*              * ERREXIT ENTERED FOR ERROR CONDITIONS.                *
*              * TPEND SCHEDULED WHEN VTAM SHUTS DOWN                 *
*              * LOGON SCHEDULED WHEN A TERMINAL LOGS ON              *
*              * LOSTERM SCHEDULED WHEN A TERMINAL IS LOST            *
*              * RELREQ SCHEDULED WHEN ANOTHER APPLICATION ACQUIRES   *
*                A TERMINAL CURRENTLY LOGGED ON TO NETSOL.            *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'EXITLIST'
         SPACE 1
EXLST    EXLST LERAD=ERREXIT,                                          X
               SYNAD=ERREXIT,                                          X
               TPEND=TPEND,                                            X
               RELREQ=RELREQ,                                          X
               LOGON=LOGON,                                            X
               LOSTERM=LOSTERM,                                        X
               AM=VTAM
         TITLE '*********  N E T S O L  -  R P L   DSECT CONTINUED'
IFGRPLX  DSECT
*        THE FOLLOWING SECTION OF THE WORK AREA IS NOT INITIALIZED BY
*        THE GETRPL FUNCTION SO NO DATA SHOULD BE PLACED IN THAT NEEDS
*        TO BE ZERO AT THE BEGINNING
         SPACE 1
*        THE FOLLOWING MANIPULATION RESERVES A MESSAGE BUFFER FOR
*        THE LARGEST EXISTING MESSAGE.
         DS    0F            ALIGN                               91195
IOBASE   DS    CL(S32SIZ12)            SPACE FOR 3270 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S3ESIZ12)            SPACE FOR 3270 EXTENDED MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(MD5SIZ12)  SPACE FOR 3270 MODEL 5              88206
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S37SIZ12)            SPACE FOR 3767 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S32SIZ13)            SPACE FOR 3270 MSG 13     86065
         ORG   IOBASE                  BACK TO START OF BUFFER   86065
         DS    CL(S3ESIZ13)            SPACE FOR 3270 EDS MSG 13 86065
         ORG   IOBASE                  BACK TO START OF BUFFER   86065
         DS    CL(MD5SIZ13)  SPACE FOR MODEL 5 SCREEN            88206
         ORG   IOBASE                                            88206
         DS    CL(S32SIZ20)  SPACE FOR LOGON SCREEN              88206
         ORG   IOBASE                                            88206
         DS    CL(S3ESIZ20)                                      88206
         ORG   IOBASE                                            88206
         DS    CL(MD5SIZ20)                                      88206
         ORG   IOBASE                                            88206
         DS    CL(PREFIXLN)  LEAVE ROOM FOR EXHIBIT SCREEN       87193
*OLD*    DS    24CL80                                            87193
         DS    27CL132       ROOM FOR MODEL 5                    88206
         DS    CL(SUFFIXLN)                                      87193
         ORG   ,                       GO TO END OF BUFFER
LMSG12   EQU   *-IOBASE                CALC MAX MSG 12 SIZE
         ORG   IOBASE BACK TO START OF BUFFER
IOAREA   DS    CL(LMSG12)              FOR MSG OUTPUT / INPUT FROM LU
         ORG   IOAREA+80               ORG OVER SYSIN BUFFER
NODENAME DS    CL8                     TEMP NODE NAME STORAGE
NODENAM2 DS    CL8           RANGE END NAME                      88185
DLOGAPPL DS    CL8                     TEMP APPLID STORAGE
TTEDUMMY DS    CL(TERMELEN)            DUMMY TTE USED BY SYSIN CMDS
         ORG   ,                       ORG BACK TO END OF BUFFER
*        OUTPUT BUFFER DEFINITION COMPLETE.
DATASEQ  DS    CL256                   TRANSLATED DATA SEQUENC DC18203
ENDSECT  DS    0D                      END DSECT ON D-WORD
LNIFGRPL EQU   WORKSPAC-STSECT         LENGTH OF ONE RPL AREA
IOBUFLEN EQU   ENDSECT-IOAREA          LENGTH OF THE IOAREA
*                                      WITHOUT THE WORKAREA
         PRINT NOGEN                                             86012
         SPACE 1                                                 86012
CVTDSECT DSECT ,                                                 86012
         CVT   DSECT=YES                                         90344
         IEESMCA ,                                               90344
         IHAPSA ,                                                86012
CIB      IEZCIB ,                                                86065
         IHAASVT ,           ADDRESS SPACE VECTOR TABLE          90120
         IHAASCB ,           ADDRESS SPACE CONTROL BLOCK         90120
UCM      DSECT ,                                                 87187
         IEECUCM ,                                               87187
         IKJTCB ,                                                87193
         IHACDE ,            REALLY WANT LPDE                    87193
         IEECHAIN ,          CSCB MAPPING                        90120
         SPACE 1                                                 93038
         IEFJESCT ,          JES VECTOR TABLE                    93038
         SPACE 1                                                 93038
         IEFJSCVT ,          EXHIBIT SSCT                        93038
         SPACE 1                                                 88179
         AIF   ('&LOCAL' NE 'PID').NOPID                         92300
         MAPEXR ,            MAP EXHIBIT CSA                     93038
         MAPEXK ,            MAP EXHIBIT SCREEN AREA             93038
         SPACE 1                                                 93038
USERCVT  USERCVT ,                                               88185
         SPACE 1                                                 88185
         PRINT GEN                                               88179
A$LOUD   A$LOUD ,                                                88179
.NOPID  END   ,                                                  92300
./ ADD NAME=NETSOLP
//NETSOL  PROC NAME=MONITOR,NETSOL=NETSOLB,INIT=NETSINIT
//*********************************************************************
//*********************************************************************
//*                                                                 ***
//*                                                                 ***
//*    PURPOSE:            VTAM NETWORK SOLICITOR.                  ***
//*                                                                 ***
//*    OWNER:              DISTRIBUTED SERVICES                     ***
//*                                                                 ***
//*    CONTACT:            ED PITKIN                                ***
//*                        BILL JACKSON                             ***
//*                                                                 ***
//*                                                                 ***
//*********************************************************************
//*********************************************************************
//*
//NETSOL  EXEC PGM=&NAME,DPRTY=(15,0),PERFORM=14,REGION=1028K,TIME=1440
//STEPLIB  DD DSN=SYS9.LOADLIB,DISP=SHR
//SYSIN    DD DSN=SYS1.PARMLIB(&INIT),DISP=SHR
//SYSOUT   DD SYSOUT=A
//SYSUDUMP DD SYSOUT=A
//SUBSYSTS DD DSN=SYS1.PARMLIB(&NETSOL),DISP=SHR
./ ADD NAME=NETSOL70 8002-04355-08125-1647-07942-07934-00000-GERHARD
NSOL     TITLE '*****************    N E T S O L'
         MACRO ,                                                 90141
&NM      XHEAD ,             EXIT CODE (IN NETSOLEX CSECT)       90141
NETSOLEX CSECT ,             GET EXIT CSECT                      90141
&NM      LR    R7,R15        MAKE LOCAL BASE                     90141
         DROP  ,                                                 90141
         USING &NM,R7        SET LOCAL BASE                      90141
         L     R12,EXMAIN    GET MAIN BASE                       90141
         USING NETSOL,R12,R11,R10  CHEAT A LITTLE                90141
         LM    R10,R11,RESTBASE  LOAD OTHERS                     90141
         ST    R14,RETVTAM@  SAVE RETURN ADDRESS                 90141
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
         MEND  ,                                                 90141
         SPACE 1                                                 90141
         MACRO ,                                                 90141
&NM      MHEAD ,             EXIT CODE (IN NETSOL CSECT)         90141
NETSOL70 CSECT ,             GET MAIN CSECT                      90141
         DROP  ,                                                 90141
         USING &NM,R15       SET LOCAL BASE                      90141
&NM      L     R12,=A(NETSOL)  GET MAIN BASE                     90141
         USING NETSOL,R12,R11,R10  CHEAT A LITTLE                90141
         LM    R10,R11,RESTBASE  LOAD OTHERS                     90141
         ST    R14,RETVTAM@  SAVE RETURN ADDRESS                 90141
         DROP  R15                                               90141
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
         MEND  ,                                                 90141
         SPACE 1                                                 90141
         MACRO ,                                                 87193
&NM      LPALOOK &NAME=INVOKE,&CDE=R5,&ERR=EXCXCB,&MLPA=YES      87193
.*       THIS MODULE PERFORMS SYSTEM DEPENDENT LOOKUP OF A       87193
.*       SPECIFIC MODULE IN THE LINK-PACK AREA                   87193
.*       NAME=  D(B) OR RELOC. MEMBER NAME                       87193
.*       CDE=      MAPPING REGISTER FOR RETURNED CDE             87193
.*       ERR=      BRANCH ADDRESS IF NOT FOUND                   87193
         GBLB  &SVS,&MVS                                         87193
         LCLA  &I                                                87193
&I       SETA  &SYSNDX                                           87193
         AIF   (&SVS OR &MVS).SUB                                87193
&NM      L     R14,CVTPTR    GET CVT                             87193
         USING CVTMAP,R14    DECLARE IT                          87193
         L     R14,CVTHEAD   FIRST TCB                           87193
         USING TCB,R14                                           87193
         L     R14,TCBOTC    GET MASTER SCHEDULER                87193
         LA    R14,TCBLLS    GET LOAD LIST                       87193
LPALOOP  LAT   R14,0(R14),&ERR  EXIT WITH UNAVAILABLE MESSAGE    87193
         LAT   &CDE,4(R14),LPALOOP  GET CDE OR OUT               87193
         USING CDENTRY,&CDE                                      87193
         TM    CDATTR,CDFLPRES+CDFRENT  RENT/LPA MODULE ?        87193
         BNO   LPALOOP       NO                                  87193
         CLC   CDENAME,&NAME   MATCHING ENTRY ?                  87193
         BNE   LPALOOP       NO                                  87193
         DROP  R14                                               87193
         MEXIT ,             RETURN WITH &CDE REGISTER SET       87193
.SUB     ANOP  ,                                                 87193
&NM      STM   R1,R15,12(R13)  SAVE ALL REGISTERS                87193
         L     R3,CVTPTR     GET CVT IN R3 FOR IEAVVMSR          87193
         LM    R0,R1,&NAME   LOAD MODULE NAME                    87193
         AIF   ('&MLPA' NE 'YES' AND '&MLPA' NE '').NOMLPA       87193
         L     R15,CVTQLPAQ-CVTMAP(R3)  GET MLPA CDE CHAIN       87193
         USING CDENTRY,R15                                       87193
LPL&I.M  ICM   R15,15,CDCHAIN   GET NEXT CDE; ELSE TRY PLPA      87193
         BZ    LPL&I.P                                           87193
         C     R1,CDNAME+4   MATCH ?                             87193
         BNE   LPL&I.M       NO; TRY NEXT                        87193
         C     R0,CDNAME     FULL MATCH ?                        87193
         BNE   LPL&I.M       NO; TRY NEXT                        87193
         LR    R0,R15        FINAGLE THE CDE ADDRESS             87193
         B     LPL&I.G       FOUND IT                            87193
         DROP  R15                                               87193
.NOMLPA  ANOP  ,                                                 87193
LPL&I.P  L     R7,CVTLPDSR-CVTMAP(,R3)   GET LOOKUP ENTRY        87193
         BALR  R14,R7    NOTE THAT R7-R9 ARE CLOBBERED           87193
         B     LPL&I.G-*(,R14)   MODULE FOUND                    87193
         LM    R1,R15,12(R13)  RESTORE REGS                      87193
         B     &ERR          TAKE ERROR EXIT                     87193
LPL&I.G  LM    R1,R15,12(R13)  RESTORE REGS                      87193
         LR    &CDE,R0       LOAD CDE (LPDE) BASE                87193
         USING CDENTRY,&CDE  DECLARE IT                          87193
         MEND  ,                                                 87193
         SPACE 1                                                 87193
         MACRO
&LABEL   $CMD  &VAPPL,&ROUT,&TEXT,&FLAG,&TYPE=0                  88185
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S COMMAND LOOK-UP TABLE.
.*
.*  INPUT    : &GAPPL   - GENERALIZED APPLICATION NAME.(DELETED) 88185
.*             &VAPPL   - ASSOCIATED VTAM APPLICATION NAME.
.*             &ROUT    - ROUTINE TO PROCESS THE COMMAND.
.*             &TEXT    - COMMAND ENTERED FROM TERMINAL.
.*             &FLAG    - COMMAND FLAG BYTE.
.*             &TYPE    - APPLICATION GROUP FLAG (TSO/CICS/WYL/EXH/OTH)
.*  OUTPUT   : AN ENTRY IN NETSOL'S COMMAND ENTRY TABLE IS GENERATED.
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : APR  15/81
.*
         LCLA  &L
&L       SETA  K'&TEXT-2                                         88185
&LABEL   DC    CL8'&VAPPL',CL8&TEXT,AL4(&ROUT),AL1(0,&L,&FLAG,&TYPE)
         MEND
         SPACE 1                                                 87193
         MACRO ,                                                 87193
&NM      $CMDN &VAPPL,&ROUT,&TEXT,&FLAG,&TYPE=0                  88185
         GBLC  &LCSTR,&OC                                        88172
&OC      SETC  '&SYSECT'     SAVE OLD CSECT                      88172
&NM      $CMD  &VAPPL,&ROUT,&TEXT,&FLAG,TYPE=&TYPE               88185
NETINTAB CSECT ,                                                 87193
         LOGCHAR APPLID=(APPLICID,&VAPPL),SEQNCE=&TEXT
         LCSTR &TEXT         CONVERT TO LOWER CASE               88185
         AIF   ('&TEXT' EQ '&LCSTR').NOTUP                       88185
         LOGCHAR APPLID=(APPLICID,&VAPPL),SEQNCE=&LCSTR          87193
.NOTUP   ANOP  ,                                                 87287
&OC      CSECT ,             RESTORE OLD CSECT                   88172
         MEND  ,                                                 87193
         SPACE 1                                                 87193
         MACRO
&LABEL   $GP   &GPLEN,&ERRTEXT,&GPFLAG
.*
.*  FUNCTION : GENERATE AN ENTRY FOR NETSOL'S GETPARM OPTION LIST.
.*
.*  INPUT    : &GPLEN   - MAXIMUM LENGTH OF PARAMETER.
.*             &ERRTEXT - TEXT FOR ERROR MSG FROM GETPARM ROUTINE.
.*             &GPFLAG  - OPTION BYTE FOR GETPARM.
.*
.*  OUTPUT   : A PARAMETER OPTION LIST
.*
.*  AUTHOR   : ED PITKIN, DISTRIBUTED SERVICES
.*
.*  DATE     : JUNE 19/81
.*
         LCLA  &L
&L       SETA  K'&ERRTEXT-2
&LABEL   DC    AL2(&GPLEN,&L),AL1(&GPFLAG),CL&L&ERRTEXT
         MEND
         SPACE 1                                                 84142
         MACRO ,                                                 84142
&NM      LOGO  &SBA=(12,19),&ML=                                 88220
         GBLC  &LOCAL                                            92222
         GBLA  &MDL70                                            88206
         LCLA  &W                                                88206
&W       SETA  40+(&MDL70/5)*52                                  88206
&NM      DC    CL39'                                        '    88220
         DC    CL&W'                                        '    84163
         AIF   ('&ML' EQ '').NOTIM                               88220
&ML      EQU   *-15,15,C'C'  TIME STAMP                          88220
.NOTIM   DC    CL40'                                        '    84163
         DC    CL&W'                                        '    84163
         AIF   ('&LOCAL' EQ 'DTS').DODIAL                        92222
         DC    CL40'   PPPPPPPPPPP     IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DD                                      '    92222
         DC    CL40'   PPPPPPPPPPPP    IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DDD          IIIIII NN   NN   CCCCC     '    92222
         DC    CL40'   PP        PP        II        DD     '    92222
         DC    CL&W'  DD           II   NNN  NN  CC   CC    '    92222
         DC    CL40'   PP        PP        II        DD     '    92222
         DC    CL&W'   DD          II   NNNN NN  CC         '    92222
         DC    CL40'   PPPPPPPPPPPP        II        DD     '    92222
         DC    CL&W'   DD          II   NN NNNN  CC         '    92222
         DC    CL40'   PPPPPPPPPPP         II        DD     '    92222
         DC    CL&W'   DD          II   NN  NNN  CC   CC    '    92222
         DC    CL40'   PP                  II        DD     '    92222
         DC    CL&W'  DD         IIIIII NN   NN   CCCCC     '    92222
         DC    CL40'   PP              IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DDD                                     '    92222
         DC    CL40'   PP              IIIIIIIIII    DDDDDDD'    92222
         DC    CL&W'DD                                      '    92222
         $SBA  &SBA                                              92222
         $SFE  ATTR=SKIP,COL=TURQ                                92222
         DC    C'Public Interest Data, Inc.'                     92222
         AGO   .COMOUT                                           92222
.DODIAL  DC    CL40'    DDDDDD   IIII     A     LL          '    84163
         DC    CL&W'   TTTTTTTT YY   YY M     M EEEEEEE     '    84163
         DC    CL40'    DD   DD   II     AAA    LL          '    84163
         DC    CL&W'      TT    YY   YY MM   MM EE          '    84163
         DC    CL40'    DD   DD   II    AA AA   LL          '    84163
         DC    CL&W'      TT    YY   YY MMM MMM EE          '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL          '    84163
         DC    CL&W'      TT     YY YY  MMMMMMM EEEEE       '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL      ===='    84163
         DC    CL&W'===   TT      YYY   MM M MM EE          '    84163
         DC    CL40'    DD   DD   II   AAAAAAA  LL          '    84163
         DC    CL&W'      TT      YY    MM   MM EE          '    84163
         DC    CL40'    DD   DD   II   AA   AA  LL          '    84163
         DC    CL&W'      TT      YY    MM   MM EE          '    84163
         DC    CL40'    DDDDDD   IIII  AA   AA  LLLLLLL     '    84163
         DC    CL&W'      TT      YY    MM   MM EEEEEEE     '    84163
         $SBA  &SBA                                              84142
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'Consumers Computer Services, Inc.'              84142
.COMOUT  MEND  ,                                                 84142
         SPACE 1                                                 86065
         MACRO ,                                                 86065
&NM      CLOGO ,                                                 86065
         GBLA  &MDL70                                            88206
         LCLA  &W                                                88206
&W       SETA  40+(&MDL70/5)*52                                  88206
&NM      DC    CL40'  CCCCC   LL       OOOOO    SSSSS   EEEE'    86065
         DC    CL&W'EEE DDDDDD    **                        '    86065
         DC    CL40' CC   CC  LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO  SS       EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO   SSSSS   EEEE'    86065
         DC    CL&W'E   DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO       SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC       LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD   **                        '    86065
         DC    CL40' CC   CC  LL      OO   OO  SS   SS  EE  '    86065
         DC    CL&W'    DD   DD                             '    86065
         DC    CL40'  CCCCC   LLLLLLL  OOOOO    SSSSS   EEEE'    86065
         DC    CL&W'EEE DDDDDD    **                        '    86065
         MEND  ,                                                 86065
         SPACE 1                                                 88192
         MACRO                                                   88192
&LABEL   $MSG  &TEXT,&TYPE=,&WCC=ALARM,&COL=RED,&ML=             88206
         GBLC  &@DEV@                                            88192
         GBLA  &MDL70                                            88220
         LCLC  &LE                                               88206
         LCLA  &L,&W                                             88192
&W       SETA  80+(&MDL70/5)*52                                  88220
&L       SETA  K'&TEXT-3                                         88192
&LE      SETC  '&LABEL'(1,3).'END'.'&LABEL'(7,2)                 88206
         AIF   ('&TYPE' EQ '').KEEP                              88192
&@DEV@   SETC  '&TYPE'                                           88192
.KEEP    AIF   ('&@DEV@' EQ '3767').DO67                         88192
         AIF   ('&@DEV@' EQ '3270').DO70                         88206
         AIF   ('&@DEV@' EQ '327E').DO7E                         88206
         AIF   ('&@DEV@' EQ 'CON').DOCON                         88192
         AIF   ('&@DEV@' EQ 'SYN').DOSYN                         88192
         MNOTE 4,'TYPE= REQUIRED'                                88192
.DO67    AIF   ('&ML' NE '').DO67L                               88206
&LABEL   DC    AL2(2+&L+2+2+8),X'0D25',&TEXT,X'0D25',C'Enter ? ' 88192
         MEXIT ,                                                 88192
.DO67L   ANOP  ,                                                 88206
&LABEL   DC    AL2(2+&L+2+2+8),X'0D25'                           88206
&ML      DC    &TEXT,X'0D25',C'Enter ? '                         88206
         MEXIT ,                                                 88192
.DOCON   AIF   ('&ML' NE '').DOCONL                              88206
&LABEL   DC    AL2(&L+2),&TEXT                                   88192
         MEXIT ,                                                 88192
.DOCONL  ANOP  ,                                                 88192
&LABEL   DC    AL2(&L+2)                                         88206
&ML      DC    &TEXT                                             88206
         MEXIT ,                                                 88192
.DOSYN   AIF   ('&ML' NE '').DOSYNL                              88206
&LABEL   DC    AL2(&L),&TEXT                                     88192
         MEXIT ,                                                 88206
.DOSYNL  ANOP  ,                                                 88206
&LABEL   DC    AL2(&L)                                           88206
&ML      DC    &TEXT                                             88206
         MEXIT ,                                                 88206
.DO70    ANOP  ,                                                 88206
&LABEL   DC    YL2(&LE-*)                                        88206
         $IO   WRITE                                             88206
         $WCC  (&WCC,RESETKBD,MDT)                               88206
         $SBA  (23,1)             CLEAR                          88206
         $EUA  (23,1)               OLD                          88206
         $IC   ,                      INPUT BUFFER               88206
         $SBA  (24,16)                                           88206
         $SF   (HI,PROT)                                         88206
&ML      DC    &TEXT                                             88206
         $RA   (24,&W,X'00')      CLEAR REST OF MSG BUFFER       88206
&LE      EQU   *                                                 88206
         MEXIT ,                                                 88206
.DO7E    ANOP  ,                                                 88206
&LABEL   DC    YL2(&LE-*)                                        88206
         $IO   WRITE                                             88206
         $WCC  (&WCC,RESETKBD,MDT)                               88206
         $SBA  (23,1)             CLEAR                          88206
         $EUA  (23,1)               OLD                          88206
         $IC   ,                      INPUT BUFFER               88206
         $SBA  (24,12)                                           88206
         $SFE  ATTR=PROT,COL=&COL                                88206
&ML      DC    &TEXT                                             88206
         $RA   (24,&W,X'00')      CLEAR REST OF MSG BUFFER       88206
&LE      EQU   *                                                 88206
.MEND    MEND                                                    88192
         SPACE 1                                                 88207
         MACRO ,                                                 88207
&NM      CHELP &R=17,&C=59,&COLOR=YELLOW                         88207
         GBLC  &@DEV@        PASSED THROUGH                      88207
         LCLA  &I                                                88207
         $SBA  (&R,&C)                                           88207
&I       SETA  &R+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'*------------------*'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|                  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|  For assistance  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|    type HELP     |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'|                  |'                           88207
         $SBA  (&I,&C)                                           88207
&I       SETA  &I+1                                              88207
         $SFE  ATTR=SKIP,COL=&COLOR                              88207
         DC    C'*------------------*'                           88207
         MEND  ,                                                 88207
         SPACE 1                                                 88220
         MACRO ,                                                 88220
&NM      $SCRN &N,&TYPE=,&IO=ERASE/WRITE                         88220
         GBLC  &@DEV@                                            88220
         GBLA  &MDL70                                            88220
         LCLA  &W                                                88220
         LCLC  &P                                                88220
&P       SETC  '&NM'(1,3)                                        88220
&W       SETA  80+(&MDL70/5)*52                                  88220
         AIF   ('&TYPE' EQ '').NOGTYP                            88220
&@DEV@   SETC  '&TYPE'                                           88220
.NOGTYP  ANOP  ,                                                 88220
&P.MSG&N DC    YL2(&P.END&N-*)                                   88220
         $IO   &IO           ERASE/WRITE OR ERASE/WRITE-ALT      88220
         $WCC  (RESETKBD,MDT)                                    88220
         $SBA  (1,1)              ADDRESS 1ST BYTE ON SCREEN     88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
&P.NSN&N LOGO  ML=&P.TIM&N   EXPAND THE LOGO                     88220
         $SBA  (12,&W)                                           88220
         $SFE  ATTR=(HI,SKIP),COL=PINK XHL=UNDER                 88220
&P.MUS&N DC    CL58' '       MESSAGE TO THE USER                 88220
         $SBA  (12,61)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  System: ' IDENTIFY THE RUNNING SYSTEM         88220
         $SBA  (12,71)                                           88220
         $SFE  ATTR=PROT,COL=TURQ                                88220
&P.SID&N DC    CL8' '        SMCA ID                             88220
         $SBA  (13,61)                                           88220
         $SFE  ATTR=SKIP,COL=RED                                 88220
         DC    C'Terminal: '      TELL USER THE NODE NAME        88220
         $SBA  (13,71)                                           88220
         $SFE  ATTR=PROT,COL=PINK,XHL=UNDER                      88220
&P.TID&N DC    CL13' '            TERM NAME                      88220
         $SBA  (14,1)             DEFINE END OF FIELD TO RESET BLINKING
         $SFE  ATTR=SKIP                                         88220
         AIF   ('&N' EQ '20').SCRN20                             88220
         AIF   ('&N' EQ '13').SCRN13                             88220
         SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        PF KEY SELECTION MENU - SCREEN 12                            *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88220
         $SBA  (15,6)                                            88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C'PFK  APPL          ENTER         EXIT'          88220
         $SBA  (17,6)                                            88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         DC    C'  1  TSO           LOGON         LOGOFF'        88220
         $SBA  (18,6)                                            88220
         $SFE  ATTR=SKIP,COL=PINK                                88220
         DC    C'  2  CICS          CICS          CSSF LOGOFF'   88220
         $SBA  (19,6)                                            88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'  3  SuperWYLBUR   SWYL          LOGOFF     '   88220
         $SBA  (20,6)                                            88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  4  WYLBUR        WYLBUR        LOGOFF'        88220
         $SBA  (21,6)                                            88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C'  5  EXHIBIT       EXH           LOGOFF'        88220
         AGO   .SCRNIN                                           88220
.SCRN13  SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        'CENTER CLOSED' MESSAGE - SCREEN 13                          *
*                                                                     *
***********************************************************************
         $SBA  (15,1)                                            88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         CLOGO ,             AND THE NASTY MESSAGE               88220
.SCRNIN  $SBA  (22,&W)                                           88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
         $IC   ,                                                 88220
         AGO   .SCRNEND                                          88220
.SCRN20  SPACE 1                                                 88220
***********************************************************************
*                                                                     *
*        USER ID / PASSWORD / ACCOUNT SOLICITATION - SCREEN 20        *
*                                                                     *
***********************************************************************
         $SBA  (15,1)                                            88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'> > > > > > > > > > > >'                        88220
         $SFE  ATTR=SKIP,COL=WHITE                               88220
         DC    C'VTAM'                                           88220
         $SFE  ATTR=SKIP,COL=YELLOW                              88220
         DC    C'Sign-on'                                        88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'< < < < < < < < < < < <'                        88220
         $SBA  (17,11)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         DC    C' User-Id'                                       88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
         $IC   ,                                                 88220
         $SBA  (17,29)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         $SBA  (18,11)                                           88220
         $SFE  ATTR=SKIP,COL=TURQ                                88220
         DC    C'Password'                                       88220
         $SF   (UNPROT,NONDISP)                                  88220
         $SBA  (18,29)                                           88220
         $SFE  ATTR=SKIP,COL=GREEN                               88220
         $SBA  (20,11)                                           88220
         $SFE  ATTR=SKIP,COL=PINK                                88220
         DC    C' Account'                                       88220
         $SFE  ATTR=UNPROT,COL=YELLOW                            88220
         $SBA  (20,29)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE      WAS =PROT                 88252
         DC    C' (optional - specify to set'                    88220
         $SBA  (21,29)                                           88220
         $SFE  ATTR=SKIP,COL=BLUE                                88220
         DC    C'  global TSO/WYLBUR logon)'                     88220
         $SBA  (22,&W)                                           88220
         $SFE  ATTR=UNPROT,COL=WHITE                             88220
.SCRNEND $SBA  (24,1)        DEFINE END OF INPUT FIELD           88220
         $SFE  ATTR=PROT,COL=YELLOW  END OF INPUT FIELD          88220
         $SBA  (24,17)                                           88220
         DC    C'Please issue LOGOFF when you are finished'      88220
         CHELP ,             ADD HELP PROMPT                     88220
&P.END&N EQU   *                                                 88220
&P.SIZ&N EQU   &P.END&N-&P.MSG&N                                 88220
         MEND  ,                                                 88220
         SPACE 1
         COPY $3270INT
         SPACE 1
         COPY  OPTIONGB                                          84141
         SPACE 1                                                 84141
         SYSPARM LIST=YES                                        84141
         AIF   ('&LOCAL' NE 'CCSI').TEMPFIX  *****TEMP FIX*****  92320
&LOCAL   SETC  'ESP'                         *****TEMP FIX*****  92320
.TEMPFIX ANOP  ,                             *****TEMP FIX*****  92320
         EJECT ,                                                 86012
***********************************************************************
*                                                                     *
*                  *****************                                  *
*                                                                     *
*                    N E T W O R K                                    *
*                                                                     *
*                  S O L I C I T O R                                  *
*                                                                     *
*                   ( N E T S O L )                                   *
*                                                                     *
*                                                                     *
*  ENTRY PARAMETERS:  R15  -  ENTRY POINT ADDRESS                     *
*                     R13  -  CALLER'S SAVE AREA (FROM ATTACH)        *
*                     R14  -  RETURN ADDRESS (POINTS TO SVC 3 IN CASE *
*                             OF ATTACH BY NET)                       *
*                     R0-R12  NOT USED                                *
*                                                                     *
*  EXIT PARAMETERS:   R0-R14  SAME AS ENTRY TO NETSOL                 *
*                     R15     ZERO                                    *
*                                                                     *
*  FUNCTION:  NETSOL IS USED TO HANDLE TERMINAL INITIATED LOGONS      *
*             AND AS SUCH SOLICITS LOGON DATA FROM THE TERMINALS      *
*             UNDER ITS CONTROL.                                      *
*                                                                     *
*             WITH THE ABOVE DATA, NETSOL CAN PASS CONTROL OF THE     *
*             LOGICAL UNIT FROM NETSOL'S CONTROL TO THAT OF THE       *
*             REQUESTED APPLICATION.                                  *
*                                                                     *
*             TO FACILITATE ENDUSER EASE OF USE, NETSOL HAS A TABLE   *
*             OF APPLICATIONS THAT USE NON-STANDARD LOGMODE TABLE     *
*             ENTRIES. WHEN THE USER REQUESTS ONE OF THESE            *
*             APPLICATIONS, NETSOL LOADS THE APPROPRIATE LOGMODE      *
*             NAME FROM THE TABLE AND PASSES THIS INFORMATION         *
*             TO THE APPLICATION DURING THE CLSDST(PASS). THE ENDUSER *
*             IS NOT REQUIRED TO KNOW ABOUT LOGMODE TABLES. THE       *
*             NAME OF THIS TABLE IS 'LOGMDTAB'.                       *
*                                                                     *
*             THE 'LOGOFF' COMMAND HAS BEEN ADDED TO NETSOL TO ALLOW  *
*             8100-ATTACHED TERMINALS TO DISCONNECT FROM NETSOL. 8100 *
*             TERMINALS ARE GENNED WITH A NULL 'LOGAPPL'. LOGOFF     .*
*             ENTERED AT A STANDARD 3270 TERMINAL, WILL HAVE NO       *
*             EFFECT SINCE LOGAPPL=NETSOL FOR THESE TERMINALS.        *
*                                                                     *
*             ERROR MESSAGES CAN BE ISSUED AT VARIOUS STAGES OF THIS  *
*             PROCESS IF THE APPLICATION IS INACTIVE, LOGON DATA      *
*             ENTERED IS INVALID, APPLICATION WON'T ACCEPT LOGONS,ETC.*
*             ALL ERROR MESSAGES ISSUED BY NETSOL ARE PREFIXED WITH   *
*             THE CHARACTER STRING 'BCSC'.                            *
*                                                                     *
*             TO AID IN DEBUGGING, NETSOL ALSO WRITES SOME MESSAGES   *
*             TO THE OPERATORS CONSOLE WHEN ERRORS AE DETECTED AS A   *
*             RESULT OF I/O ERRORS, INVALID LOGONS, ETC.              *
*                                                                     *
*             NETSOL SUPPORTS BISYNC AND SDLC 3270 DEVICES (3275,     *
*             3276, 3277, 3278, 3279 AND COMPATIBLES). ADDITIONAL     *
*             CODE WAS ADDED FOR TERMINALS (TTY, ETC.) RUNNING UNDER  *
*             THE NUTTY TERMINAL OPTION (NTO) AS IBM 3767 TYPES.      *
*                                                                     *
*             NETSOL USES RECORD MODE I/O TO TALK TO ITS TERMINALS    *
*             SO IT DOES NOT SUPPORT ANY TERMINALS THAT CAN BE        *
*             ACCESSED VIA BASIC MODE I/O ONLY.                       *
*                                                                     *
*             TO AID IN CONTROLLING THE TERMINALS LOGGED ON TO        *
*             NETSOL, NETSOL MAINTAINS A TERMINAL TABLE WHICH HAS     *
*             AN ENTRY FOR EACH TERMINAL THAT HAS BEEN LOGGED ON      *
*             AT ANY TIME SINCE NETSOL WAS FIRST BROUGHT UP. THESE    *
*             TERMINAL TABLE ENTRIES (TTE'S) ARE USED TO PROVIDE      *
*             A MEANS OF TRANSLATING A GIVEN CID TO THE LU NAME AND   *
*             WHEN THE RELEASE-REQUEUE (RELREQ) EXIT NEEDS TO KNOW    *
*             THE STATUS OF A GIVEN TERMINAL (I.E., IS IT TRYING TO   *
*             DO A LOGON). THE TTE HAS BEEN EXTENDED TO PRESERVE OTHER*
*             INFORMATION (AUTHORIZATION, ETC.).                      *
*                                                                     *
*             CODE WAS ADDED TO PROVIDE A HELP SCREEN, A NEWS SCREEN, *
*             AND MEANS OF PROVIDING ACCESS CONTROL (LOCK FOR SYSTEMS *
*             MAINTENANCE; GLOBAL LOGON CONTROL).                     *
*                                                                     *
*             MOST OF NETSOL'S FUNCTIONS ARE PERFORMED IN VARIOUS     *
*             EXITS AS FOLLOWS:                                       *
*                                                                     *
*             1) TPEND EXIT        - HANDLE 'Z NET' FUNCTION          *
*                                    WHERE NETSOL IS TO SHUT DOWN.    *
*                                                                     *
*             2) LOGON EXIT        - HANDLES TERMINALS BEING LOGGED   *
*                                    ON TO NETSOL. BUILDS OR UPDATES  *
*                                    TTE, DOES OPNDST(ACCEPT), AND    *
*                                    SENDS THE FORMATTED LOGON SCREEN *
*                                    TO THE TERMINAL.                 *
*                                                                     *
*             3) LOSTERM EXIT      - HANDLE 'LOST TERMINAL' CONDITIONS*
*                                    DUE TO LU/PU/LINK/NCP FAILURES.  *
*                                    DEPENDING ON THE CONDITION, MAY  *
*                                    ATTEMPT TO RECOVER THE TERMINAL. *
*                                                                     *
*             4) RELREQ EXIT       - HANDLE RELEASE-REQUEUE REQUESTS  *
*                                    WHERE ANOTHER VTAM APPLICATION   *
*                                    WANTS THE TERMINAL OWNED BY      *
*                                    NETSOL. UNLESS A LOGON IS TAKING *
*                                    PLACE, NETSOL RELEASES THE LU.   *
*                                                                     *
*             AS WELL, A NUMBER OF RPL EXITS ARE USED TO HANDLE       *
*             RPL COMMANDS THAT ARE DONE ASYNCHRONOUSLY VIA RPLS      *
*             THAT ARE GETMAINED WHEN NEEDED. THESE EXITS ARE:        *
*                                                                     *
*             1) OPNDST END EXIT   - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    OPDNST TO A SPECIFIC TERMINAL    *
*                                    COMPLETES.                       *
*                                                                     *
*             2) RECEIVE END EXIT  - ENTERED WHEN A RECEIVE(ANY) RPL  *
*                                    IS POSTED COMPLETE. EXAMINES THE *
*                                    DATA ENTERED FOR A LOGON REQUEST *
*                                    FROM THE TERMINAL USER.          *
*                                                                     *
*             3) END OF SEND EXIT  - ENTERED WHEN AN ASYNCHRONOUS     *
*                                    SEND TO THE TERMINAL COMPLETES.  *
*                                                                     *
*             4) CLSDST(PASS) END  - ENTERED WHEN THE CLSDST(PASS)    *
*                                    COMPLETES THAT PASSES CONTROL    *
*                                    TO THE APPLICATION REQUESTED.    *
*                                    NETSOL RE-ISSUES SIMLOGON TO     *
*                                    GAIN CONTROL BACK WHEN USER      *
*                                    LOGS OFF THE APPLICATION         *
*                                                                     *
*             5) CLSDST(RELEASE)   - ENTERED WHEN CLSDST(RELEASE)     *
*                                    COMPLETES. DONE DUE TO RELREQ    *
*                                    REQUEST OR I/O ERRORS.           *
*                                                                     *
*             AS WELL, NETSOL MAKES USE OF A NUMBER OF SUBROUTINES    *
*             AS FOLLOWS:                                             *
*                                                                     *
*             1) GETRPL            - OBTAIN DYNAMIC RPLS VIA A        *
*                                    GETMAIN FROM SUBPOOL 1           *
*                                                                     *
*             2) FREERPL           - FREEMAIN DYNAMIC RPLS            *
*                                                                     *
*             3) RECSUB            - ISSUE RECEIVE ANY'S              *
*                                                                     *
*             4) ERROR EXIT        - HANDLES ERRORS WHEN A CHECK      *
*                                    MACRO IS USED ON AN ASYNC RPL    *
*                                    OR A SYNC RPL COMPLETES. PASSES  *
*                                    BACK RETURN CODES AND A MODIFIER *
*                                    (USUALLY ERROR MESSAGE NUMBER)   *
*                                    TO CODE AFTER THE INSTRUCTION    *
*                                    THAT MADE THE MACRO CALL         *
*                                                                     *
*                                                                     *
*  REGISTER USAGE:                                                    *
*                                                                     *
*         R0  - ERROR MESSAGE NUMBER, PARAMETERS, SVCS, ETC           *
*         R1  - PARAMETERS TO MACROS, SVCS                            *
*         R2  - WORK                                                  *
*         R3  - -> TTE IN MOST CASES / WORK                           *
*         R4  - WORK                                                  *
*         R5  - -> DYNAMIC RPL / SYNCHRONOUS RPL                      *
*         R6  - WORK                                                  *
*         R7  - WORK  (ADDRESS OF ERROR SOMETIMES ON BAL R7,SNOCCUR)  *
*         R8  - -> ASYNCHRONOUS / SYNCHRONOUS NIB                     *
*         R9  - -> DDT WHEN DOING DEVICE DEP WORK / WORK              *
*         R10 - BASE REGISTER 3                                       *
*         R11 - BASE REGISTER 2                                       *
*         R12 - BASE REGISTER 1                                       *
*         R13 - ADDRESS OF SAVE AREA (USUALLY IN DYNAMIC RPL)         *
*         R14 - RETURN ADDRESS                                        *
*         R15 - ENTRY POINT, RETURN CODES                             *
*                                                                     *
*                                                                     *
*  ATTRIBUTES: SERIALLY REUSABLE , NON-AUTHORIZED, VTAM APPLICATION   *
*                                                                     *
*  CONTROL BLOCK DEPENDENCIES: RPL, ACB, NIB, EXIT PARAMETER LISTS    *
*                                                                     *
*  ROUTINES CALLED: NONE                                              *
*                                                                     *
*  ********* MACROS USED: DCLSW, GOIF, SET, RESET, EXECUTE            *
*                                                                     *
*  SYSTEM MACROS USED: SAVE, GETMAIN, FREEMAIN, STIMER, OPEN,         *
*                      WAIT, WTO, CLOSE, ABEND, POST, CHECK           *
*                                                                     *
*  VTAM MACROS USED:  SETLOGON, OPNDST, INTRPRET, INQUIRE,            *
*                     GENCB, CLSDST, SIMLOGON, SEND, RECEIVE          *
*                                                                     *
*  MESSAGES TO TERMINAL USER:                                         *
*                                                                     *
*             LOGON SCREEN WITH BCSC LOGO.                            *
*                                        ENTERED BY THE TERMINAL USER)*
*                                                                     *
*             BCSC101          LOGMODE ENTRY UNDEFINED                *
*                                                                     *
*             BCSC102 INVALID LOGON SEQUENCE , REENTER                *
*                                                                     *
*             BCSC103 NO INTERPRET TABLE SPECIFIED FOR LU             *
*                                                                     *
*             BCSC104 NO INTERPRET ROUTINE TO RECOGNIZE APPLICATION   *
*                                                                     *
*             BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION          *
*                                                                     *
*             BCSC106 LOGON IN PROGRESS                               *
*                                                                     *
*             BCSC107 XXXXXXXX NOT DEFINED TO VTAM                    *
*                                                                     *
*             BCSC108 XXXXXXXX IS NOT AVAILABLE (LOGMODE INVALID?)    *
*                                                                     *
*             BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS             *
*                                                                     *
*             BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS                 *
*                                                                     *
*             BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS       *
*                                                                     *
*                                                                     *
*  MESSAGES TO THE SYSTEM OPERATOR:                                   *
*                                                                     *
*             BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL       *
*                     DUE TO I/O ERROR                                *
*                                                                     *
*             BCSC002 RC=42 ON NETSOL CLOSE ACB                       *
*                                                                     *
*             BCSC003 SYNAD/LERAD EXIT REQ=**,FBDK2=**,SSENSEI=**,    *
*                     SSENSMI=**,SENSE=****,TERM=********             *
*                                                                     *
*             BCSC004 LOSTERM ENTRY CODE ** FOR TERM=********         *
*                                                                     *
*             BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST    *
*                                                                     *
*             BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS    *
*                     PROGRAM IS TERMINATED.                          *
*                                                                     *
*             BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT       *
*                                                                     *
*  USER ABEND CODES:  U0001 - PROBLEM WITH OPEN OF THE ACB            *
*                     U0002 - SETLOGON FAILED                         *
*                     U0004 - RETURN CODE/SENSE CODE NOT EXPECTED     *
*                     U0008 - PROBLEM WITH THE TERMINAL TABLE (TTE)   *
*                                                                     *
*                                                                     *
*  RESTRICTIONS:                                                      *
*                                                                     *
*        1) THE TERMINAL TABLE ONLY HAS ROOM FOR 1024 TERMINALS,      *
*           IF MORE ARE NEEDED, THE CONSTANT 'TERMLTAB' WILL HAVE TO  *
*           BE CHANGED WITH A ZAP OR BY RE-ASSEMBLY OF NETSOL.        *
*                                                                     *
*        2) ONLY RECORD MODE DEVICES ARE CURRENTLY SUPPORTED.         *
*                                                                     *
*        3) DEVICE SUPPORT IS RESTRICTED TO 3270 DATASTREAMS AND      *
*           NTO (IBM 3767) TYPES.                                     *
*                                                                     *
*        4) ANY FIELDS IN THE RPL WORK AREA THAT NEED TO BE ZERO      *
*           INITIALLY SHOULD BE PLACED AHEAD OF THE I/O AREAS AS      *
*           THESE ARE NOT INITIALIZED. IF THE AMOUNT TO BE            *
*           INITIALIZED EXCEEDS 256 BYTES, THE INITIALIZATION AND     *
*           COPY CODE IN GETRPL AND ERREXIT WILL HAVE TO BE CHANGED.  *
*                                                                     *
*        5) NETSOL ASSUMES THAT IT CAN ONLY HAVE ITS LOSTERM EXIT     *
*           ENTERED FOR TERMINALS WHOSE CID'S CAN BE FOUND IN THE     *
*           TERMINAL TABLE. A U0008 ABEND WILL OCCUR IF NOT FOUND.    *
*                                                                     *
*        6) NETSOL OBTAINS THE SYSTEM ID FOR CHANGING '***OLT**'      *
*           APPLICATION IDS USING SVC 253. IF THIS FUNCTION CHANGES,  *
*           NETSOL WILL NEED REVISION.     ???? BCSC GOODIE ????      *
*                                                                     *
*        7) BE CAREFUL OF CHANGING CODE THAT SETS BRACKET STATES AS   *
*           YOU MAY CAUSE ERRORS ON THE 3276 (MUST SEND BCSC106 WITH  *
*           AND END BRACKET BECAUSE IF THE CLSDST(PASS) FAILS AND WE  *
*           SEND AN ERROR MESSAGE (BCSC108) TO THE 3276, GET A X'0404'*
*           WITH A SENSE OF '081B' INDICATING BAD STATE).             *
*                                                                     *
*                                                                     *
*  VERSION:  *********  NETSOL   DC18202                              *
*                                                                     *
*  LAST UPDATE: FEB 27, 1979
*        MINOR FIXES AND CHANGES, 522 ABEND PREVENTION, ETC.     85234
*          BY G. POSTPISCHIL, EXPERT SYSTEM PROGRAMMING, INC.    85234
*        SNA AND NTO SUPPORT; MODULE MERGED WITH INTERPRET TABLE 87193
*        SUPPORT FOR GLOBAL LOGON AND REQUIRED NETSOL LOGON PRIOR TO
*        APPLICATION CONNECTION. NEWS AND HELP SCREENS ADDED.    88179
*        MODEL 5, AND USER SPECIFIABLE LOGMODE SUPPORT ADDED     88206
*        522 ABEND CODE CHANGED TO RUN UNDER SUBTASK IN ORDER TO FREE
*          STIMER FOR LOGON DELAY TO PREVENT VTAM GOING CPU BOUND AT
*          SYSTEM START-UP TIME.                                 89261
*                                                                     *
*                                                                     *
*        F O R   F U R T H E R   I N F O R M A T I O N   O N          *
*          T H I S   P R O D U C T   S E E   T H E                    *
*              N E T S O L   D O C U M E N T A T I O N                *
*                                                                     *
*   PROGRAM OBTAINED FROM THE CONNECTICUT BANK & TRUST TAPE, FILE 19  *
***********************************************************************
         TITLE '*********  N E T S O L  -  MAINLINE'
NETINTAB INTAB ,             INTEGRATED INTERPRET TABLE          87193
NETINLOG CSECT ,             IMMEDIATELY FOLLOWED BY LOGON CODE  90126
NETSOL70 CSECT ,
         ENTRY NETSOL        SOLICITOR ENTRY POINT               87193
         SPACE 1
***********************************************************************
*        NETSOL MAIN-LINE CODE INITIALIZATION                         *
*        REQUIRES OS/VS2 MVS RELEASE 3.7 + ACF/VTAM (SU 35+40)        *
***********************************************************************
         SPACE 1
         PRINT &PRTSOR                                           85234
NETSOL   B     STM-NETSOL(0,R15)  JUMP OVER APPL NAME            87193
NSNAME   DC    AL1(8),CL8'NETSOL70'    LOGON APPLID NAME FOR NETSOL
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'//&SYSTIME/'        ASSEMBLY TIME
STM      STM   14,12,12(13)            SAVE REGISTERS
         LR    R12,R15                 LOAD 1ST BASE REGISTER
         USING NETSOL,R12,R11,R10      TELL ASSEMBLER
         LM    R10,R11,RESTBASE        REST OF BASES
         ST    R13,MAINSAVE+4          CHAIN SAVE AREAS
         LR    R15,R13
         LA    R13,MAINSAVE            POINT R13 TO NS SAVE AREA
         ST    R13,8(,R15)             FORWARD SAVE AREA CHAIN
         LA    R9,0(,R1)     CLEAN THE PARM LIST POINTER         86065
         LTR   R9,R9         ANY PARM ?                          86065
         BZ    NOPARM                                            86065
         ICM   R9,15,0(R9)   ANY PARM ?                          86065
         BZ    NOPARM        NO                                  86065
         SLR   R8,R8                                             86065
         ICM   R8,3,0(R9)    TEST PARM LENGTH                    86065
         BNP   NOPARM                                            86065
         OI    UFLAGS,UFGSYS  ***TEMP***                         86065
NOPARM   EXTRACT COMMAD,FIELDS=(TIOT)  GET THE TIOT              88185
         L     R15,COMMAD    GET THE TIOT                        88185
         CLC   NSNAME+1(6),0(R15)  JOB(STC)NAME/PREFIX SAME ?    88185
         BNE   GETCOMM       NO                                  88185
         MVC   NSNAME+1(8),0(R15)  USE FULL JOBNAME AS APPLID    88185
GETCOMM  EXTRACT COMMAD,FIELDS=(COMM)  GET CSCB POINTER          86065
         L     R15,COMMAD    GET ECB POINTER                     86065
         MVC   WAITECBS(4),0(R15)  SAVE COMM. ECB ADDRESS        86065
         LA    R0,4(,R15)    POINT TO CIB ADDRESS FIELD          86065
         QEDIT ORIGIN=(0),CIBCTR=2  ALLOW ONE MODIFY AT A TIME   86065
         TESTAUTH FCTN=1     ARE WE AUTHORIZED ?                 88186
         BXH   R15,R15,NOTAUTH   NO                              88186
         SLR   R1,R1         CLEAR ECB ADDRESS                   88186
         SYSEVENT TRANSWAP   DO "DONTSWAP" THE ELEGANT WAY       88186
         BXLE  R15,R15,NOTAUTH  SKIP IF IT WORKED, ELSE          88186
         WTO   'BCSC195 SYSEVENT TRANSWAP FAILED',ROUTCDE=11     88186
         SLR   R1,R1                                             88186
         SYSEVENT DONTSWAP   TRY A NORMAL DONTSWAP               88186
         BXLE  R15,R15,NOTAUTH SKIP IF IT WORKED, ELSE           88186
         WTO   'BCSC195 SYSEVENT DONTSWAP FAILED'                88186
NOTAUTH  ICM   R0,15,A522TCB  RECURSION ?                        89264
         BNZ   NOTAGAIN      YES                                 89264
         IDENTIFY EPLOC=A522NAME,ENTRY=A522ER                    89261
         ATTACH EPLOC=A522NAME,ECB=A522DONE                      89261
         ST    R1,A522TCB       SAVE TCB ADDR FOR DETACH         89261
NOTAGAIN DS    0H                                                89264
         SPACE 1
         USING IFGRPL,PTRRPL           => R P L
         USING ISTDNIB,PTRNIB          => N I B
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY
         USING DDT,R9                  => DEVICE DEPENDENT TABLE
*        SPACE 1
***********************************************************************
*        OBTAIN SPACE FROM SUBPOOL 2 FOR THE TERMINAL TABLE. THIS     *
*        TABLE IS USED TO MAINTAIN THE TERMINAL NAME, CID, AND LOGON  *
*        STATUS FOR ALL TERMINALS CONNECTED TO NETSOL. BY USING THIS  *
*        TABLE AND PROVIDING ENTRY ADDRESS IN THE RPL USER FIELD, WE  *
*        SAVE ON HAVING TO DO CID TRANSLATES FOR NAMES.               *
***********************************************************************
GETTAB   L     R0,TERMLTAB             GET LENGTH FOR GETMAIN
         ICM   R0,8,=X'02'             ADD SUBPOOL=2 TO IT
         GETMAIN R,LV=(0)              GET SPACE FOR TABLE
         ST    R1,TERMTABS             SAVE STARTING ADDRESS
         A     R1,TERMLTAB             COMPUTE END ADDRESS
         ST    R1,TERMTEND             SAVE IT TOO
         S     R1,RANGEEND-4                                     88185
         ST    R1,RANGEEND   SET END OF HIGH RANGE               88185
         XC    TERMTABE,TERMTABE  RESTART TERMINAL LIST          87137
         XC    CONSRPL,CONSRPL  CLEAR CONSOLE RPL ADDRESS        88192
         SPACE 1
RTRYOPEN DS    0H
         SLR   R15,R15                 CLEAR RETURN-CODE REGISTER
         OPEN  ACB                     CONNECT NETSOL TO VTAM
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR OPEN ERROR.                            *
***********************************************************************
         CLI   ACB+X'31',X'52'         HALT IN PROGRESS ?
         BE    CLSOK                   YES, END THE TASK
         LTR   R15,R15                 SUCCESSFUL OPEN ?
         BZ    OPENOK                  YES, ALLOW LOGONS TO HAPPEN
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'58' WHICH CAN HAPPEN IF     *
*        THE OPERATOR HAS STARTED A SECOND COPY OF NETSOL. IN THIS
*        CASE, TELL THE OPERATOR ABOUT THE MISTAKE AND TERMINATE
*        EXECUTION.                                                   *
***********************************************************************
         CLI   ACB+X'31',X'58'         APPLID ALREADY IN USE?
         BNE   OPENA5A                 NO => CHECK NEXT ERROR
         WTO   MF=(E,LISTWTO6)         LET OPERATOR KNOW
         B     FREETTE                 FREE TTE TABLE AND END
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5A' WHICH CAN HAPPEN IF     *
*        VTAM IS JUST COMING UP AND NETSOL'S APPLID IS NOT YET        *
*        ACTIVE. IF THIS IS THE CASE, ISSUE A STIMER WAIT FOR
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
OPENA5A  CLI   ACB+X'31',X'5A'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'5C' WHICH CAN HAPPEN IF     *
*        VTAM IS DOWN. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         CLI   ACB+X'31',X'5C'         CAN'T OPEN ACB YET ?
         BE    OPENLOOP                NO, REAL OPEN ERROR
         SPACE 1
***********************************************************************
*        CHECK FOR AN ACB ERROR CODE OF X'70' WHICH CAN HAPPEN IF     *
*        NETSOL ABENDS AND IS RE-ATTACHED BY VTAM AND VTAM HAS NOT    *
*        YET SUCCESSFULLY FINISHED CLEANUP PROCESSING FOR             *
*        NETSOL'S ACB. IF THIS IS THE CASE ISSUE A STIMER WAIT FOR    *
*        ONE (1) SECOND AND RETRY THE OPEN ACB FUNCTION.              *
***********************************************************************
         CLI   ACB+X'31',X'70'         CAN'T OPEN ACB YET ?
         BNE   OPENFAIL                NO, REAL OPEN ERROR
OPENLOOP STIMER WAIT,BINTVL=WAIT1SEC   WAIT 1 SECOND, TRY AGAIN
         B     RTRYOPEN                GO AND RETRY OPERATION
         SPACE 1
OPENOK   L     R7,=A(OPENIDS)                                    86145
         BALR  R6,R7         INITIALIZE VERSION AND PROGRAM IDS  86145
         SPACE 1                                                 86012
***********************************************************************
*        READ THE INITIALIZATION FILE CONTAINING NETSOL COMMANDS      *
*        WHICH ESTABLISH AUTO LOGON,WTO MSG DEFAULTS,ETC.             *
*        AN ASYNC RPL WILL BE USED WHEN PROCESSING THESE INIT CMDS.   *
***********************************************************************
*                                                                87256
*        THIS INSERTION SETS A FLAG TO ENABLE DELAYS IN LOGON EXIT.
*        THIS PERMITS OTHER JOBS TO RUN WHILE NETSOL IS WRITING THE
*        INITIAL SCREENS TO A LARGE NUMBER OF CRTS               87256
*                                                                87256
         OI    UFLAGS,INITDLAY  SET FOR DELAY BETWEEN LOGONS     87256
         SLR   R0,R0                                             89261
         POST  A522CECB,(0)  POST CONTROL ECB                    89261
         BAL   R14,GETRPL              GET RPL FOR INIT CMD USE.
         L     R8,=A(READINIT)                                   88185
         BALR  R14,R8        PROCESS INIT CMDS
         BAL   R14,RECSUB              NOW REUSE RPL FOR RECEIVE
         SPACE 1                                                 90140
*        LOAD THE BUFFER COMPRESSION ROUTINE                     90140
         XC    COMP3270,COMP3270  CLEAR THE ADDRESS              90140
         DELETE EPLOC=NMCOMPR                                    90140
         LOAD  EPLOC=NMCOMPR,ERRET=NOTCMP70                      90140
         ST    R0,COMP3270   SET COMPRESSION ADDRESS             90140
NOTCMP70 DS    0H            BYPASS FOR COMPRESSION              90140
         EJECT
***********************************************************************
*        BEFORE ALLOWING LOGONS TO TAKE PLACE ISSUE 10 RECEIVE ANY'S  *
*        SO WE CAN HANDLE UP TO 10 LOGONS AT A TIME. WHEN THE RECEIVE *
*        EXIT IS SCHEDULED, IT WILL ALSO RE-ISSUE A RECEIVE ANY WITH  *
*        A NEW GOTTEN RPL.                                            *
***********************************************************************
         SPACE 1
         LA    R2,9                    # OF RPLS FOR RECEIVES
GETLOOP  BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE RECEIVE ANY
         BCT   R2,GETLOOP              LOOP TILL TEN DONE
         L     PTRRPL,=A(SETLRPL)  POINT TO RPL FOR WORKAREA     86065
         SPACE 1
***********************************************************************
*        ISSUE SETLOGON WITH START OPTION TO ALLOW LOGONS TO TAKE     *
*        PLACE. ANY LOGONS QUEUED FOR NETSOL WILL NOW DRIVE NETSOL'S  *
*        LOGON EXIT.                                                  *
***********************************************************************
         SPACE 1
SLOGON   SETLOGON RPL=(PTRRPL),        SYNCH OPERATION. ACT-           X
               OPTCD=START             IVATE LOGON EXIT.
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.  IF          *
*   ERREXIT WAS ENTERED, THE VTAM FEEDBACK CODE IN REG 0 WAS          *
*   PLACED IN REG 15 BEFORE RETURNING TO THE MAINLINE NSI.            *
*   ERREXIT DID NOT CHANGE THE RETURN CODES TO ACTION CODES.          *
***********************************************************************
         SPACE 1
         CH    R15,HEX8                NEED TO REISSUE?
         BE    SLOGON                  YES.  DO IT
         LTR   R15,R15                 SETLOGON ACCEPTED ?
         BNZ   SETLFAIL                NO, BRANCH
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*    ALL FURTHER WORK IN NETSOL IS PERFORMED VIA ASYNCHRONOUS EXIT    *
*    ROUTINES. THE MAINLINE CODE WAITS UPON AN ECB WHICH IS POSTED    *
*    BY THE TPEND EXIT WHEN VTAM SHUTS DOWN NETSOL.                   *
*        STIMER ADDED TO PREVENT 522 ABENDS                      85234
***********************************************************************
***********************************************************************
*    ACTION OF NETSOL NOW PROCEEDS BY USE OF EXIT ROUTINES.           *
*    THE FOLLOWING EXITS ARE SCHEDULED IN RESPONSE TO VTAM EVENTS:    *
*                                                                     *
*              TPEND   - VTAM SHUTS DOWN                              *
*              LOGON   - A TERMINAL IS SIMULATED LOGGED ON TO NETSOL, *
*                        OR IS PASSED TO NETSOL BY ANOTHER APPLICATION*
*              LOSTERM - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS DISCONNECTED (DIAL-LINE), OR 'VARY'ED TO  *
*                        ANOTHER APPLICATION                          *
*              RELREQ  - A TERMINAL CURRENTLY LOGGED ON TO NETSOL     *
*                        IS REQUESTED BY ANOTHER APPLICATION          *
*                                                                     *
*     RPL EXITS -                                                     *
*                                                                     *
*             READEND  - THE OUTSTANDING READ(ANY) HAS BEEN SATISFIED *
*             SENDEND  - A SEND HAS BEEN POSTED COMPLETE.             *
*             OPENEND  - AN OPNDST HAS COMPLETED.                     *
*             PASSEND  - CLSDST(PASS) HAS COMPLETED FOR A LOGON       *
*                        REQUEST MADE FROM A TERMINAL.                *
*             WRITEND  - END OF WRITE REQUEST.  WRITE WAS DUE         *
*                        TO INVALID LOGON FROM THE TERMINAL.          *
*             CDSTEND1 - CLSDST(RELEASE) COMPLETED.                   *
***********************************************************************
         SPACE 1
WAITLOOP MVI   TIMEECB,0     RESET STIMER ECB                    85235
         TM    UFLAGS,SHUTDOWN+UFGREST  CLOSE OR RESTART ?       86065
         BNZ   WAITDONE      YES; KICK OUT                       86065
*OLD*    STIMER REAL,EXITTIME,BINTVL==A(10*60*100)  WAIT 10 MINS 85234
         WAIT  ECBLIST=WAITECBS  WAIT FOR TIMER OR FINISH        85234
         TM    TIMEECB,X'40' TIMER EXPIRED ?                     85234
         BNZ   WAITTESS      YES                                 85234
         TTIMER CANCEL       ELSE CANCEL IT                      85234
         B     WAITTESX                                          87256
WAITTESS NI    UFLAGS,255-INITDLAY  RESET START-UP DELAY         87256
WAITTESX TM    FINISECB,X'40'  FINISH POSTED ?                   85234
         BNZ   WAITDONE      YES; GO TO FINISH UP                86065
*        IF WE GOT HERE, THE COMMUNICATIONS ECB WAS POSTED.      86065
*                                                                86065
         L     R1,WAITECBS   GET THE CSCB COMM. ECB ADDRESS      86065
         TM    0(R1),X'50'   WAS IT POSTED ?                     86065
         BZ    WAITLOOP      NO; WAIT SOME MORE                  86065
         BO    WAITDONE      STOP ISSUED                         86065
         ICM   R5,15,CONSRPL  GET THE CONSOLE I/O WORK AREA      88192
         BNZ   CONSGET       OK; INITIALIZED                     88192
         BAL   R14,GETRPL    ELSE GET ONE                        88192
         LA    R3,NIBDMPID   OVERLAY NIB FOR TTE                 88192
         ST    R3,RPLUSFLD   MAKE COMMON LINK                    88192
         XC    TERMTABL(TERMELEN),TERMTABL  CLEAR IT             88192
         ST    R5,CONSRPL    REMEMBER THE RPL ADDRESS            88192
         MVI   TERMFLAG,TERMCONS  FLAG THIS AS A CONSOLE TTE     88192
         MVI   TERMFLG3,TPRIVY  SET PRIVILEGED FOR ALL COMMANDS  88192
         L     R9,=A(DDTCONS)  POINT TO DEVICE DEPENDENT VECTOR TABLE
         ST    R9,TERMDDT    SAVE IT                             88192
         ST    R5,TERMCRPL   MAKE RPL POINTER                    88192
         MVC   TERMNAME,=CL8' CONSOLE'  FOR DEBUGGING, ETC.      88192
CONSGET  L     R2,COMMAD     GET ECB/CIB POINTER                 86065
         ICM   R1,15,4(R2)   IS THERE A CIB ?                    86065
         BZ    WAITLOOP      NO ?                                86065
         USING CIB,R1        DECLARE IT                          86065
         L     R9,TERMDDT    RELOAD DDT                          88192
         L     R3,RPLUSFLD   RELOAD TTE                          88192
         CLI   CIBVERB,CIBMODFY  MODIFY ?                        86065
         BE    DOCIB         YES                                 86065
         CLI   CIBVERB,CIBSTART  START ?                         86065
         BNE   TOSSCIB       NO; IGNORE IT                       86065
DOCIB    SLR   R15,R15                                           86065
         ICM   R15,3,CIBDATLN  GET LENGTH OF DATA                86065
         BNP   TOSSCIB       NONE ?                              86065
         LR    R2,R15        SAVE LENGTH FOR EDITING             88192
         LA    R14,CIBDATA   GET DATA                            88192
         ICM   R15,8,=C' '   SET FOR BLANK FILL                  88192
         LA    R0,IOAREA     POINT TO INPUT WORK AREA            88192
         LA    R1,L'IOAREA   MAX LENGTH                          88192
         LR    R6,R0         SAVE START FOR THE EDIT ROUTINE     88192
         MVCL  R0,R14        COPY TO RPL INPUT AREA              88192
         B     INTRPRET      GO TO COMMAND PARSE                 88192
         SPACE 2                                                 88192
***********************************************************************
*                                                                     *
*        MSG 'TEXT' - ADD A SHORT MESSAGE TO SCREENS 12, 13 AND 20    *
*                                                                     *
***********************************************************************
CONSMSG  L     R14,GPDATAP   GET DATA
         LH    R15,GPDATAL   GET LENGTH OF DATA
         LTR   R15,R15       ANY DATA ?                          88220
         BNP   CONSMSG2      NO; JUST CLEAR                      88220
CONSMSG1 CLI   0(R14),C' '   BLANK OR NULL ?                     88220
         BH    CONSMSG2      YES                                 88220
         LA    R14,1(,R14)                                       88220
         BCT   R15,CONSMSG1  SKIP LEADING BLANKS                 88220
CONSMSG2 ICM   R15,8,=CL8' '   SET BLANK FILL                    86066
         L     R0,=A(S32MUS12)                                   86066
         LA    R1,L'S32MUS12                                     86066
         MVCL  R0,R14        MAKE MESSAGE                        86066
         L     R14,=A(S32MUS12)                                  86066
         MVC   S32MUS13-S32MUS12(L'S32MUS12,R14),0(R14)          86068
         L     R1,=A(S32MUS20)                                   88179
         MVC   S32MUS20-S32MUS20(L'S32MUS12,R1),0(R14)           88179
         L     R15,=A(S3EMUS12)                                  86066
         MVC   0(L'S32MUS12,R15),0(R14)                          86066
         MVC   S3EMUS13-S3EMUS12(L'S3EMUS12,R15),0(R14)          86068
         L     R1,=A(S3EMUS20)                                   88179
         MVC   S3EMUS20-S3EMUS20(L'S32MUS12,R1),0(R14)           88179
         L     R15,=A(MD5MUS12)                                  88206
         MVC   0(L'S32MUS12,R15),0(R14)                          88206
         MVC   MD5MUS13-MD5MUS12(L'MD5MUS12,R15),0(R14)          88206
         L     R1,=A(MD5MUS20)                                   88206
         MVC   MD5MUS20-MD5MUS20(L'S32MUS12,R1),0(R14)           88206
         TM    UFLAGS,INIT   START-UP ?                          90054
         BNZ   SENDMSG4      RESPOND WITH GARBAGE MESSAGE        90054
         B     CONSREST      SET TO RESTART                      88192
         SPACE 1                                                 88192
*        SET UNRESTRICTED (EXCEPT LOGON SCREENS) RUNNING MODE    88192
CONSULOK TM    UFLAGS,UFGSYS  IN SYSTEMS MODE ?                  86065
         BZ    OKCIB         YES; NO CHANGE                      86065
         NI    UFLAGS,255-UFGSYS  RESET                          86065
*        RESTART THE NETSOL TERMINAL ACQUISITION (FOR FORCED APPLID
*          ROUTING AFTER AN APPLICATION STARTS UP - MODIFY COMMAND
*          GETS ISSUED BY TSSO COMMAND SYSTEM.                   88192
*                                                                88192
CONSREST OI    UFLAGS,UFGREST+UFGIGNER   RESTART                 86065
         B     OKCIB                                             86065
*        PERMIT USE OF VTAM BY SYSTEMS STAFF ONLY (MAINTENANCE, ETC.)
CONSLOCK TM    UFLAGS,UFGSYS  ALREADY IN SYSTEMS MODE ?          86065
         BNZ   OKCIB         YES; LEAVE IT ALONE                 86065
         OI    UFLAGS,UFGSYS+UFGREST+UFGIGNER   RESTART          86065
OKCIB    L     R2,COMMAD     GET COMM AREA BACK                  88192
         L     R1,4(,R2)     REGAIN CIB                          88192
         SLR   R0,R0                                             86065
         IC    R0,CIBCONID                                       86065
         WTO   'OK',MCSFLAG=REG0                                 86065
TOSSCIB  LA    R0,4(,R2)     ORIGIN                              86065
         L     R1,4(,R2)     CIB ADDRESS                         86065
         QEDIT ORIGIN=(0),BLOCK=(1)  FREE IT                     86065
         B     WAITLOOP      GO FOR MORE                         86065
         SPACE 1                                                 88192
CONSSEND L     R1,SENDLEN    GET TEXT LENGTH                     88192
         LA    R1,4(,R1)     PLUS RDW LENGTH                     88192
         STCM  R1,3,IOAREA   MAKE RDW LENGTH                     88192
         STCM  R1,12,IOAREA+2  ZERO FLAGS                        88192
         L     R2,COMMAD     GET COMM AREA BACK                  88192
         L     R1,4(,R2)     REGAIN CIB                          88192
         SLR   R0,R0                                             88192
         IC    R0,CIBCONID   GET CONSOLE ID                      88192
         WTO   ,MF=(E,IOAREA),MCSFLAG=REG0  RESPOND TO CONSOLE   88192
         B     TOSSCIB       FREE THE CIB                        88192
         SPACE 2                                                 89261
         PUSH  USING                                             89261
         DROP  ,                                                 89261
         USING NETSOL,R12,R11,R10      PASSED BY CALLER          89261
         USING A522ER,R12                                        89261
A522ER   STM   R14,R12,12(R13)                                   89261
         LR    R12,R15        LOAD NEW TEMPORARY BASE            89261
A522UP   STIMER REAL,A522EXIT,BINTVL=A522TIME   START THE CLOCK  89261
         WAIT  ECBLIST=A522ECBS  WAIT FOR SOMETHING              89261
         TM    A522TECB,X'40'  TIMER ECB POSTED ?                89261
         BNZ   A522TMUP      YES; RESET INITIALIZATION DELAY     89261
         TTIMER CANCEL       CANCEL TIME REQUEST                 89261
         B     A522CNTL      CHECK FOR ACTION                    89261
A522TMUP NI    UFLAGS,255-INITDLAY  NO MORE DELAYS IN STARTUP    89261
         MVI   A522TECB,0    RESET TIMER ECB                     89261
A522CNTL TM    A522CECB,X'40'  CONTROL ACTION REQUIRED ?         89261
         BZ    A522UP        NO; WAIT AGAIN                      89261
         TM    A522CECB,X'3F'  RESTART REQUEST ?                 89261
         BM    A522QUIT      NO                                  89261
         MVI   A522CECB,0    RESET                               89261
         B     A522UP        AND RESTART TIMER                   89261
         SPACE 1                                                 89263
A522QUIT LM    R14,R12,12(R13)  RETRIEVE REGISTERS               89261
         SLR   R15,R15                                           89261
         BR    R14           QUIT                                89261
         SPACE 1                                                 89261
         DROP  ,                                                 89261
         USING A522EXIT,R15  DECLARE TEMPORARY BASE              89261
A522EXIT POST  A522TECB,0    POST TIME INTERVAL COMPLETE         89261
         BR    R14           RETURN TO CALLER                    89261
         SPACE 1                                                 89261
A522ECBS DC    A(A522CECB),X'80',AL3(A522TECB)                   89261
A522CECB DC    F'0'          CONTROL ECB                         89261
A522TECB DC    F'0'          STIMER ECB                          89261
A522TCB  DC    A(0)              SUBTASK TCB ADDRESS             89261
A522DONE DC    A(0)              SUBTASK ECB                     89261
A522TIME DC    A(100*60*10)      A522 10 MINUTES                 89261
A522NAME DC    CL8'OMIT522S'                                     89261
         POP   USING                                             89261
         SPACE 1                                                 85234
         PUSH  USING                                             85234
         DROP  ,                                                 85234
         USING EXITTIME,R15  DECLARE TEMPORARY BASE              85234
EXITTIME POST  TIMEECB,0     POST TIME INTERVAL COMPLETE         85234
         BR    R14           RETURN TO CALLER                    85234
         POP   USING                                             85234
         SPACE 1                                                 85234
WAITECBS DC    A(0,TIMEECB),X'80',AL3(FINISECB)  ECB LIST        86065
TIMEECB  DC    F'0'          STIMER ECB                          85234
A522POST DC    F'0'          A522 SUBTASK COMPLETION ECB         89261
COMMAD   DC    A(0)          EXTRACT COMM RESULT                 86065
CONSRPL  DC    A(0)          ADDRESS OF RPL/TTE/DDT FOR CONSOLE I/O
         EJECT
***********************************************************************
*        EXECUTION CONTINUES HERE WHEN ECB IS POSTED BY TPEND EXIT.   *
***********************************************************************
         SPACE 1
WAITDONE SLR   R15,R15                 ZERO RC REG FOR CLOSE
         TM    UFLAGS,UFGREST  RESTART ?                         86065
         BNZ   *+8           YES; DON'T SET SHUTDOWN             86065
         OI    UFLAGS,SHUTDOWN+UFGIGNER  INHIBIT ERRORS          86065
         CLOSE ACB                     RELEASE CONNECTION WITH
         SPACE 1
***********************************************************************
*  THE VALUES IN REG 15 ARE RETURN CODES AS SET BY VTAM.              *
*   ERREXIT IS NOT ENTERED FOR CLSDSTERROR.                           *
***********************************************************************
         SPACE 1
         LTR   R15,R15                 DID THE CLOSE GO?
         BZ    CLSOK                   YES, EXIT
         CLI   ACB+X'31',0   WEIRD CLOSE COMPLETION ?            94031
         BE    CLSOK         YES; IGNORE                         94031
         CLI   ACB+X'31',X'42'         CLOSE COMPLETE?
         BE    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         WTO MF=(E,LISTWTO1)           INFORM OPERATOR
         SPACE 1
***********************************************************************
*        SINCE WE DON'T KNOW HOW MANY RPLS ARE OUTSTANDING (MAY BE    *
*        MORE THAN 10), WE FREE THE WHOLE SUBPOOL OF RPLS AND DO THE  *
*        SAME FOR THE TERMINAL TABLE AS WELL.                         *
***********************************************************************
         SPACE 1
CLSOK    FREEMAIN R,SP=1               FREE DYNAMIC RPL SPACE
         SPACE 1
FREETTE  FREEMAIN R,SP=2               FREE TERMINAL TABLE SPACE
         TM    UFLAGS,SHUTDOWN  FORCED DOWN ?                    86065
         BNZ   FREETERM      YES; QUIT                           86065
         TM    UFLAGS,UFGREST  RESTART WITH DIFFERENT MODE ?     86065
         BZ    FREETERM      NO                                  86065
         NI    UFLAGS,255-UFGREST-UFGIGNER   RESET               86065
         B     NOPARM        RESTART FROM BEGINNING              86065
         SPACE 1
         SPACE 1
FREETERM ICM   R2,15,A522TCB   DID WE ATTACH 522 SUBTASK ?       89261
         BZ    FREEMAIN      NO; TERMINATE MAIN TASK             89261
         ICM   R0,8,=X'01'   POST SUB-TASK TERMINATION           89261
         POST  A522CECB,(0)                                      89261
         WAIT  ECB=A522DONE  WAIT FOR RESPONSE                   89261
         DETACH A522TCB      GET RID OF SUBTASK                  89261
FREEMAIN L     R13,MAINSAVE+4          FIND INPUT SAVE AREA      89261
         SLR   R14,R14                 CLEAR FORWARD SAVE
         ST    R14,8(,R13)             AREA CHAIN PTR
         LM    R14,R12,12(R13)         LOAD INPUT REGS
         SLR   R15,R15                 RCODE=0 FOR NORMAL RTN
*        RETURN
         BR    14                      RETURN TO CALLER OR ATTACHER
         SPACE 2                                                 90120
***********************************************************************
*        THE FOLLOWING CODE IS BRANCHED TO FROM THE MAIN-LINE CODE,   *
*        EXIT CODE, AND FROM THE ERREXIT ROUTINE.  THE ONLY ACTION    *
*        TAKEN SINCE THE CASES ARE 'SHOULD NOT OCCUR' CONDITIONS, IS  *
*        TO ABNORMALLY TERMINATE NETSOL WITH A REASON CODE IN         *
*        DUMPFLAG AND CAUSE A DUMP TO BE TAKEN.                       *
***********************************************************************
         SPACE 1
OPENFAIL DS    0H                      OPEN-ACB IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,OPENCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SETLFAIL DS    0H                      SETLOGON IN MAIN-LINE FAILED
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         MVI   DUMPFLAG,SETLCODE       SAVE NETSOL DUMP CODE
         B     DUMP                    BRANCH
         SPACE 1
SNOCCUR  DS    0H                      REQUEST FAILED BECAUSE
*                                       OF AN INVALID CONTROL
*                                       BLOCK OR OTHER CON-
*                                       DITION WHICH SHOULD
*                                       NOT OCCUR
         STM   R0,R15,SNOREGS          REGS FOR DEBUGGING
         CLOSE ACB                     AVOID OPEN FAILURE ON
*                                      RE-DISPATCH OF SUBTASK
         MVI   DUMPFLAG,CBLKCODE       SAVE NETSOL DUMP CODE
         B     DUMP
         SPACE 1
TOOSMALL STM   R0,R15,SNOREGS          SAVE REGS
         MVI   DUMPFLAG,TABLTRBL       TROUBLE WITH TTE
*NEXT*   B     DUMP
         SPACE 1
DUMP     DS    0H                      TERMINATE WITH A DUMP
         LA    R6,SNOREGS    POINT TO SAVED REGISTERS            91170
         LA    R5,2          SET FOR TWO LINES                   91170
STABRLP  LA    R4,GENREG0    SET FIRST OUTPUT ADDRESS            91170
         LA    R3,2          SET FOR TWO GROUPS OF FOUR          91170
STABRLP2 LA    R2,4          SET FOR FOUR REGISTERS              91170
STABRLP3 UNPK  0(9,R4),0(5,R6)  UNPACK A REGISTER                91170
         TR    0(8,R4),HEXTAB-C'0'     MAKE EBCDIC               91170
         MVI   8(R4),C' '    SEPARATOR                           91170
         LA    R4,9(,R4)     NEXT OUTPUT ADDRESS                 91170
         LA    R6,4(,R6)     NEXT REGISTER                       91170
         BCT   R2,STABRLP3   DO NEXT REGISTER                    91170
         LA    R4,1(,R4)     INTERGROUP GAP                      91170
         BCT   R3,STABRLP2   DO NEXT GROUP                       91170
         WTO   MF=(E,GENREGS)   WRITE TO CONSOLE                 91170
         MVC   GENREGNM+3(3),=C'8-F'   IDENTIFY SECOND LINE      91170
         BCT   R5,STABRLP    DO SECOND LINE                      91170
         SLR   R1,R1                   PUT REASON CODE IN REG 1
         IC    R1,DUMPFLAG
         SPACE 1
         ABEND (1),DUMP
         SPACE 1                                                 85235
MAINSAVE DC    18F'0'                  SAVE AREA FOR MAINLINE
RESTBASE DC    A(NETSOL+8192,NETSOL+4096) REST OF BASE REG VALUES
WAIT1SEC DC    F'100'                  WAIT TIME OF 1.00 SECS
TERMTABS DC    A(0)                    START OF TERMINAL TABLE  FOR
TERMTABI DC    A(TERMELEN)             INDEX VALUE              BXLE
TERMTABE DC    A(0)                    LAST ENTRY USED ADDRESS  USE
TERMTEND DC    A(0,TERMELEN)           END OF TABLE + 1
RANGEEND DC    A(0)          END OF TABLES                       88185
TERMLTAB DC    A(1024*TERMELEN)        SIZE OF TABLE (ENTRIES*LENGTH)
@MODETAB DC    A(0)          ADDRESS OF MODE TABLE (ISTINCLM)    88213
NMCOMPR  DC    CL8'COMP3270'  COMPRESSION ROUTINE                90140
COMP3270 DC    A(0)          ADDRESS OF COMPRESSION ROUTINE      90140
HEXTAB   DC    C'0123456789ABCDEF'  HEX CONVERSION TABLE         91170
GENREGS  DC    Y(GENREGND-*,0)                                   91170
GENREGNM DC    C'GR 0-7  '                                       91170
GENREG0  DC    CL8' ',C' ',CL8' ',C' ',CL8' ',C' ',CL8' ',CL2' ' 91170
GENREG4  DC    CL8' ',C' ',CL8' ',C' ',CL8' ',C' ',CL8' '        91170
GENREGND DC    C' '          EXTRA FOR UNPACK                    91170
VTAMVERL DC    CL2' '        VTAM VERSION/RELEASE (CHAR)         92221
         TITLE '*********  N E T S O L  - GETPARM SUBROUTINE'
***********************************************************************
*                                                                     *
*    GETPARM LOCATES THE NEXT TEXT UNIT IN THE COMMAND BUFFER.        *
*                                                                     *
*    THIS TEXT UNIT IS VALIDATED FOR:                                 *
*         A) MAXIMUM LENGTH                                           *
*         B) REQUIRED PARAMETER                                       *
*                                                                     *
*    INPUT : R1  - A(PARAMETER OPTION LIST)                           *
*            R2  - A(OUTPUT MSG BUFFER)                               *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R1  - A(TEXT UNIT) OR GARBAGE IF ERROR                   *
*            R15 - LENGTH OF TEXT UNIT                                *
*                                                                     *
*   RETURN : 0(R14) - VALID TEXT UNIT FOUND                           *
*            4(R14) - NO TEXT UNIT FOUND (IF PARAMETER IS OPTIONAL)   *
*            8(R14) - ERROR DETECTED WHILE PROCESSING TEXT UNIT       *
*                                                                     *
***********************************************************************
GETPARM  DS    0H
         SPACE 1
         ST    R1,GPPARM          SAVE A(PARM OPTION LIST)
         SPACE 1
*        CHECK FOR NO DATA LEFT IN COMMAND BUFFER
         SPACE 1
         LH    R6,GPDATAL         GET LENGTH OF REMAINING DATA
         LTR   R6,R6              ANY DATA LEFT?
         BZ    GPNODATA           NO => BR TO HANDLE
         SPACE 1
*        FIND NEXT TEXT UNIT IN COMMAND BUFFER
         SPACE 1
         L     R7,GPDATAP         LOAD A(CURRENT OFFSET IN CMD BUFFER)
GRPLOOP1 CLI   0(R7),X'40'        FIND
         BE    GRPBUMP1             FIRST                        88179
         CLI   0(R7),C'/'    FUNNY FIELD SEPARATOR ?             88179
         BE    GRPBUMP1      YES; SKIP IT                        88179
         CLI   0(R7),C','    FUNNY FIELD SEPARATOR ?             88185
         BE    GRPBUMP1      YES; SKIP IT                        88185
         CLI   0(R7),X'11'   START FIELD ?                       88179
         BNE   GPNONBLK      NO; PROCESS AS PARAMETER            88179
         LA    R7,2(R7,0)    BUMP OVER ADDRESS                   88179
         SH    R6,*-2        ADJUST LENGTH                       88179
         BNP   GPNODATA      NOTHING LEFT                        88179
GRPBUMP1 LA    R7,1(,R7)              NON                        88179
         BCT   R6,GRPLOOP1              BLANK
         B     GPNODATA                   CHARACTER
         SPACE 1
*        FIND END OF TEXT UNIT
         SPACE 1
GPNONBLK LR    R1,R7              SET TEXT UNIT PTR
GPLOOP2  CLI   0(R7),X'40'        FIND
         BE    GPGOTIT              LAST
         CLI   0(R7),X'11'  ANOTHER START FIELD ?                88179
         BE    GPGOTIT       YES; END OF PRIOR FIELD             88179
         CLI   0(R7),C'/'    OTHER FIELD END ?                   88179
         BE    GPGOTIT                                           88179
         CLI   0(R7),C','    FUNNY FIELD SEPARATOR ?             88185
         BE    GPGOTIT       YES; SKIP IT                        88185
         LA    R7,1(,R7)              NON-BLANK
         BCT   R6,GPLOOP2               CHARACTER
         SPACE 1
*        NEXT TEXT UNIT HAS BEEN FOUND
         SPACE 1
GPGOTIT  ST    R7,GPDATAP         SAVE CURRENT OFFSET IN CMD BUFFER
         STH   R6,GPDATAL         SAVE LENGTH OF REMAINING DATA
         SR    R7,R1              CALC LENGTH OF THE TEXT UNIT
         LR    R15,R7               & MOVE TO REG 15
         SPACE 1
*        VALIDATE THE PARAMETER OPTIONS FOR THE TEXT UNIT
         SPACE 1
         L     R6,GPPARM          LOAD A(OPTION LIST)
         CLI   0(R1),C'*'    POSSIBLE COMMENT ?                  88220
         BNE   GPCHKOPT      NO                                  88220
         TM    GPFLAG(R6),GPCOM  COMMENT ALLOWED ?               88220
         BNZ   GPNODATA      YES; END OF INPUT                   88220
GPCHKOPT CH    R15,GPLEN(,R6)     TU > MAX ALLOWED?
         BNH   GPCHK10            NO => BR TO NEXT CHECK
         MVC   0(L'GPMSG1,R2),GPMSG1 MOVE ERR MSG TO BUFFER
         CH    R15,=H'8'          MOVE
         BNH   *+8                  MAX 8
         LA    R15,8                  CHARACTERS
         BCTR  R15,0                    OF TEXT UNIT
         EX    R15,GPEX1                  TO ERROR MSG
         LA    R1,L'GPMSG1(,R2)   POINT TO END OF ERROR MSG
         B     GPERRTXT           BR TO MOVE KEYWORD TO MSG
         SPACE 1
GPNODATA SLR   R15,R15            INDICATE NO TEXT UNIT
         L     R6,GPPARM          LOAD A(OPTION LIST)            88220
GPCHK10  LTR   R15,R15            WAS THERE A TEXT UNIT?
         BNZ   GPXTYP        YES; NOW CHECK TYPING RESTRICTIONS  88220
         TM    GPFLAG(R6),GPOPT   WAS PARAMETER OPTIONAL?
         BNZ   GPXZERO            YES => EXIT NO PARM
         MVC   0(L'GPMSG2,R2),GPMSG2 NO => MOVE ERR MSG
         LA    R1,L'GPMSG2(,R2)   POINT TO END OF ERROR MSG
         SPACE 1
GPERRTXT LH    R7,GPTEXTL(,R6)    GET LENGTH OF TEXT IN OPT LIST
         BCTR  R7,0               DECREMENT FOR MOVE
         EX    R7,GPEX2           ADD OPTION LIST TEXT TO ERR MSG
         SPACE 1
         B     8(,R14)            TAKE ERROR RETURN
         SPACE 1
GPXZERO  B     4(,R14)            RETURN WITH NO TEXT UNIT
         SPACE 1
GPXTYP   TM    GPFLAG(R6),GPNUM  NUMERIC ONLY ?                  88220
         BZ    GPXFND        NO; RETURN                          88220
         LR    R0,R15        COPY LENGTH                         88220
         LR    R7,R1         COPY TEXT START                     88220
GPXTYPN  CLI   0(R7),C'0'    DIGIT ?                             88220
         BL    GPNNUM        NO; FAIL                            88220
         CLI   0(R7),C'9'    IN RANGE ?                          88220
         BNH   GPXTYPNS                                          88220
GPNNUM   MVC   0(25,R2),=C'PARAMETER MUST BE NUMERIC'            88220
         LA    R1,25(,R2)    POINT TO END OF MESSAGE             88220
         B     8(,R14)       TAKE ERROR RETURN                   88220
GPXTYPNS LA    R7,1(,R7)                                         88220
         BCT   R0,GPXTYPN    TRY NEXT                            88220
GPXFND   BR    R14                RETURN WITH TEXT UNIT FOUND
         SPACE 2
GPEX1    MVC   0(0,R2),0(R1)      MOVE TEXT UNIT TO ERROR MSG
GPEX2    MVC   0(0,R1),GPTEXT(R6) MOVE OPT LIST TEXT TO ERROR MSG
GPMSG1   DC    C'XXXXXXXX IS TOO BIG FOR '
GPMSG2   DC    C'MISSING PARAMETER: '
         TITLE '*********  N E T S O L  - INIT MSG13 SUBROUTINE'
***********************************************************************
*                                                                     *
*    INITMSG4 LOCATES AND INITIALIZES THE MSG4 OUTPUT BUFFER.         *
*                                                                     *
*    INPUT : R9  - A(DDT)                                             *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : R2  - A(MSG04 OUTPUT BUFFER)                             *
*                                                                     *
***********************************************************************
INITMSG4 DS    0H
         SPACE 1
         L     R2,DDTM4OFS        GET A(MSG04)
         LH    R1,DDTM4L          LOAD LENGTH OF MSG04 BUFFER
         MVI   0(R2),X'40'        INSERT 1ST BLANK
         BCTR  R1,0               DECREMENT LENGTH
         BCTR  R1,0               DECREMENT LENGTH
         EX    R1,INITM4X         INIT REST OF BUFFER
         SPACE 1
         BR    R14
         SPACE 2
INITM4X  MVC   1(0,R2),0(R2)      PROPAGATE BLANK THROUGHOUT BUFFER
         SPACE 1                                                 86065
*        SYSTEMS RESTRICTION RELATED ROUTINES                    86065
*                                                                86065
SETPASON BAL   R14,UTERMOF   RESET PRIOR LOGON                   88179
         AIF   ('&LOCAL' NE 'PID').NOPASON                       92300
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR WORK AREA        88179
         MVC   A$SBUFR,TERMLOUD                                  88179
         MVC   A$SID,=C'A$RB'  IDENTIFY                          88179
         MVC   A$SFCTN(3),=AL1(A$SFLOUD,A$SONL,A$SAKEY)          88179
         BAL   R14,INITMSG4  GET MESSAGE BUFFER                  88179
         MVC   A$SERMSG,=A(ERRMSG)   STASH ERROR MESSAGE ADDRESS 88199
         MVC   A$SACCT,TERMNAME  COPY TERMINAL ID                88179
         ICM   R0,15,TERMLOUD  ALREADY HAVE A LOUD ?             88179
         BNZ   PONHLOUD      YES                                 88179
         LA    R1,A$SVCRB    GET PARM LIST                       88179
         SVC   249           CALL ACCOUNTING SVC                 88179
         BXH   R15,R15,POPERMSG  DO ERROR MESSAGE PROCESSING     88179
         MVC   TERMLOUD,A$SBUFR  SAVE THE LOUD ADDRESS           88179
PONHLOUD OI    A$SCNTL,A$SBUILD  SHOW LOUD ADDRESS PRESENT       88179
         L     R4,TERMLOUD   LOAD THE LOUD                       88179
         USING A$LOUD,R4     DECLARE IT                          88179
         MVC   A$SACCT,=CL8' '                                   88179
         MVC   A$SUID,=CL8' '                                    88179
         MVC   A$SPSWD,=CL8' '                                   88179
         LA    R1,PWUID      SET FOR USER-ID                     88179
         BAL   R14,GETPARM   GET IT                              88179
         B     *+12          FOUND                               88179
         B     BAREPSWD      MISSING OPERAND - ISSUE LOGON SCRN  89066
         B     POPPARM       INVALID PARM                        88179
         BCTR  R15,0         SET EXECUTE LENGTH                  88179
         LA    R14,A$SUID                                        88179
         EX    R15,POPMVC    MOVE PARAMETER                      88179
         MVC   A$SFCTN(3),=AL1(A$SFVALD,0,A$SUKEY+A$SBUILD)      88179
         LA    R1,PWPSWD     GET PASSWORD                        88179
         BAL   R14,GETPARM   LOOK FOR IT                         88179
         B     *+12          OK                                  88179
         B     POPPARM       INVALID                             88179
         B     POPPARM       INVALID                             88179
         BCTR  R15,0                                             88179
         LA    R14,A$SPSWD                                       88179
         EX    R15,POPMVC    MOVE PARM                           88179
         LA    R1,PWACCT     TEST FOR ACCOUNT                    88186
         BAL   R14,GETPARM   LOOK FOR IT                         88186
         B     *+12          OK                                  88186
         B     PONACSVC      MISSING; ISSUE SVC WITHOUT IT       88186
         B     POPPARM       INVALID                             88179
         BCTR  R15,0                                             88179
         LA    R14,A$SACCT                                       88179
         EX    R15,POPMVC    MOVE PARM                           88179
         OI    A$SCNTL,A$SAKEY  SHOW ACCOUNT SUPPLIED            88186
PONACSVC LA    R1,A$SVCRB                                        88179
         SVC   249                                               88179
         BXH   R15,R15,POPERMSG                                  88179
PONLON   BAL   R14,UTERM     SET AUTHORIZATION AND LOGON         88185
         TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88192
         BNZ   PONOPEN       YES                                 88192
         TM    UFLAGS,UFGSYS SYSTEMS ONLY ?                      88192
         BZ    PONOPEN       NO; PROCEED                         88192
         MVC   0(35,R2),=C'SIGN-ON restricted to systems staff'  88192
         B     PONERR4       JOIN COMMON                         88192
PONOPEN  TM    A$USUBFG,A$USFTSO+A$USFCIC+A$USFWYL+A$USFEXH+A$USFNET+A$*
               USFOTH        ALLOWED ON-LINE SERVICES ?          88192
         BNZ   PONTSUB       YES; SEE IF ONE ONLY                88179
         MVC   0(40,R2),=C'MSG772 USER NOT ALLOWED ON-LINE SERVICES'
PONERR4  BAL   R14,UTERMOF   RESET LOGON AGAIN                   88192
         B     SENDMSG4      WRITE ERROR MESSAGE TO USER         88185
         SPACE 1                                                 92320
PONTSUB  BAL   R14,UTERMAP   SEE IF APPLICATION IS FORCED        88179
         L     R7,=A(OPENEND)  SET BASE FOR AUTOTIME             90141
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   AUTOTIME-OPENEND(R7)  YES; INVOKE IT              88220
         SPACE 1                                                 88185
PONANY   LH    R2,GPDATAL    GET LENGTH OF BUFFER                88311
         LTR   R2,R2         ROOM FOR TEXT ?                     88311
         BNP   PONSCRN       NO                                  88311
         L     R6,GPDATAP    GET DATA BUFFER LEFT                88311
PONMORE  CLI   0(R6),C' '    ANY MORE TEXT ?                     88311
         BH    INTRPRET      YES; PARSE IT                       88311
         LA    R6,1(,R6)                                         88311
         BCT   R2,PONMORE    TRY AGAIN                           88311
.NOPASON SPACE 1                                                 91195
PONSCRN  TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BNZ   RESEND        YES; REWRITE FULL SCREEN            88179
         LA    R0,MSG15      SHOW UNLOCKED                       86065
         B     SENDMSG                                           86065
POPMVC   MVC   0(0,R14),0(R1)  MOVE PARM                         88179
POPERMSG L     R15,A$SERMSG  GET ERROR MESSAGE ADDRESS           88199
         OC    0(L'SINM4OF,R2),4(R15)  MOVE MESSAGE TEXT         88199
POPPARM  B     SENDMSG4      WRITE ERROR MESSAGE TO USER         88185
         SPACE 1                                                 88179
PWUID    $GP   8,'USER-ID',GPNULL+GPOPT  (REWRITE IF MISSING)    89066
PWPSWD   $GP   8,'PASSWORD',GPNULL                               88179
PWACCT   $GP   8,'ACCOUNT',GPOPT+GPCOM                           88179
PWAUTO   $GP   6,'AUTO LOGON',GPOPT+GPCOM                        88179
         SPACE 1                                                 88185
UTERMAP  DS    0H                                                91195
         AIF   ('&LOCAL' NE 'PID').NOUTRMN                       92300
         LA    R15,PONAPTAB  GET TABLE OF FORCED APPLICATIONS    88179
         LA    R0,(PONAPEND-PONAPTAB)/(PONAPTA2-PONAPTAB) # TO CHECK
PONAPLUP CLC   A$USUBFG,0(R15)  MATCH ?                          88179
         BE    PONAPFOR      YES; FORCED APPLICATION LOGON       88179
         LA    R15,PONAPTA2-PONAPTAB(R15)  NEXT ENTRY            88179
         BCT   R0,PONAPLUP   TRY IT                              88179
         BR    R14           RETURN WITHOUT A MATCH              88179
PONAPTAB DC    AL1(A$USFTSO),CL8'TSO'  FORCED LOGON TABLE        88179
PONAPTA2 DC    AL1(A$USFWYL),CL8'WYLBUR'                         88179
         DC    AL1(A$USFEXH),CL8'EXHI'                           88179
         DC    AL1(A$USFCIC),CL8'CICS'                           88179
PONAPEND EQU   *                                                 88179
         SPACE 1                                                 88179
PONAPFOR CLI   A$USUBFG,A$USFCIC  CICS LOGON ?                   88179
         BE    PONAPCIC      YES; CHECK FURTHER                  88179
         MVC   TERMAPPL,1(R15)  MOVE THE APPLICATION NAME        88179
         OI    TERMFLG3,TFAPL  SET FORCED APPLICATION            88220
         BR    R14           RETURN WITH APPLID SET              88179
PONAPCIC CLI   A$UCICNM,C' ' FORCED NAME ?                       88179
         BNHR  R14           NO                                  88179
         CLI   A$UCICNM+8,C' '  MORE THAN ONE ?                  88179
         BH    R14           YES; LET USER SPECIFY               88179
         LA    R0,8                                              88179
         LA    R15,A$UCICNM                                      88179
PONACLUP CLI   0(R15),C' '   BIGGER THAN A BLANK ?               88179
         BNH   PONACLOK      NO; END OF NAME                     88179
         CLI   0(R15),C'*'   MATCH ANY RESIDUAL ?                88186
         BER   R14           YES; NO SPECIFIC NAME               88186
         CLI   0(R15),C'?'   SPECIAL CHARACTER ?                 88186
         BER   R14           YES; NO SPECIFIC NAME               88186
         LA    R15,1(,R15)                                       88179
         BCT   R0,PONACLUP   TRY AGAIN                           88179
PONACLOK MVC   TERMAPPL,A$UCICNM  MAKE NAME                      88179
         OI    TERMFLG3,TFAPL  SET FORCED APPLICATION            88220
.NOUTRMN BR    R14           RETURN WITH APPLID SET              88179
         SPACE 1                                                 88185
UTERM    OI    TERMFLG3,TFLON  SHOW USER LOGGED ON               88179
         AIF   ('&LOCAL' NE 'PID').NOUTER1                       92300
         TM    A$UPRIVY,A$UPFSYS  SYSTEMS PRIVILEGE ?            88179
         BZ    *+8           NO                                  88179
.NOUTER1 OI    TERMFLG3,TPRIVY  YES; FULL AUTHORIZATION          88179
         AIF   ('&LOCAL' NE 'PID').NOUTER2                       92300
         TM    A$UPRIVY,A$UPFACT+A$UPFOPE  SUPPORT ?             88179
         BNO   *+8           NO                                  88179
         OI    TERMFLG3,TSUPP  SET TECHNICAL SUPPORT             88179
.NOUTER2 BR    R14           RETURN TO CALLER                    88185
         SPACE 1                                                 86065
UTERMOF  XC    TERMAPPL,TERMAPPL  RESET PRIOR APPLICATION        88185
         XC    TERMDCNT,TERMDCNT  RESET APPL RETRY COUNT         88185
         XC    TERMDTIM,TERMDTIM  RESET APPL RETRY TIME          88185
         NI    TERMFLG3,TFREQ     RESET LOGON/PRIVY FLAGS        88185
         BR    R14           RETURN TO CALLER                    88185
         SPACE 1                                                 88185
SETPASOF BAL   R14,UTERMOF   RESET LOGON/PRIVIES                 88179
         AIF   ('&LOCAL' NE 'PID').NOPASOF                       92300
         ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    POFFLOUD      NO                                  88179
         XC    A$SVCRB(A$SLENRB),A$SVCRB  USE AS ACCT SVC PARM   88179
         MVC   A$SID,=C'A$RB'                                    88179
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88179
         LA    R1,A$SVCRB                                        88179
         SVC   249           CANCEL SESSIONS AND USER LOGON      88179
.NOPASOF  ANOP  ,                                                91195
POFFLOUD LA    R0,MSG16      SHOW LOCKED                         86065
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    SENDMSG       NO                                  86065
BAREPSWD LA    R0,MSG20      SET FOR LOGON SCREEN                88179
         B     SENDMSG                                           88179
         SPACE 1                                                 88172
*        MSG TEXT - SEND NON-DELETABLE MESSAGE TO OPERATOR       88172
*                                                                88172
SETWTO   L     R0,GPDATAP    POINT TO COMMAND TEXT               88172
         SLR   R2,R2                                             88172
         ICM   R2,3,GPDATAL  LOAD AND TEST LENGTH                88172
         BNP   BADINPUT      ERROR                               88172
         LR    R1,R2         COPY LENGTH FROM MVC                88179
         LA    R14,IOBASE+4+4+1+8  FIRST BYTE AFTER TERM         88179
         LA    R15,150-4-4-1-8  MAX LENGTH SUPPORTED             88179
         MVC   IOBASE+4(5),=C'FROM '                             88172
         MVC   IOBASE+4+4+1(8),TERMNAME  TERM ID                 88172
         MVI   IOBASE+4+4+1+8,C' '                               88172
         MVCL  R14,R0        MOVE TEXT TO BUFFER (NULL FILL)     88172
         LA    R2,4+4+1+8(,R2)                                   88172
         LA    R1,IOBASE(R2) POINT TO END OF TEXT                88172
         MVC   0(4,R1),=X'40008000'  ROUTCDE=1,DESC=2            88172
         STCM  R2,3,IOBASE   SET RDW LENGTH                      88172
         MVC   IOBASE+2(2),=X'8000'  SET ROUT/DESC PRESENT       88172
         SLR   R0,R0         CLEAR FOR UCMID                     88172
         WTO   MF=(E,IOBASE)  WRITE TO OPERATOR                  88172
         BAL   R14,INITMSG4  CLEAR VARIABLE MESSAGE AREA         88172
         MVC   0(12,R2),=C'MESSAGE SENT'                         88172
         B     SENDMSG4      SEND MESSAGE 4                      88185
         SPACE 1                                                 87187
*        OS TEXT - IF PRIVILEGED USER, ISSUES OS COMMAND (TEXT)  87187
*                                                                87187
SETOSCMD TESTAUTH FCTN=1     AUTHORIZED FOR OS COMMANDS ?        87187
         BXH   R15,R15,CMDNAUTH  NO; FAIL REQUEST                87187
         L     R6,GPDATAP    POINT TO COMMAND TEXT               87187
         SLR   R2,R2                                             87187
         ICM   R2,3,GPDATAL  LOAD AND TEST LENGTH                87187
         BNP   BADINPUT      ERROR                               87187
         MVC   IOBASE+4(256),0(R6)  COPY PARM +                  87187
         LA    R2,4(,R2)                                         87187
         SLL   R2,16                                             87187
         ST    R2,IOBASE     COMPLETE V-FORMAT ENTRY             87187
         SLR   R0,R0         CLEAR FOR UCMID                     87187
         L     R2,CVTPTR     GET THE CVT                         87187
         USING CVTMAP,R2                                         87187
         ICM   R2,15,CVTCUCB  GET CONSOLE CONTROL BLOCK          87187
         BZ    SETOSNCN      NO CONSOLE ?                        87187
         USING UCM,R2                                            87187
         LM    R1,R3,UCMVEA  LOAD CONSOLE BXLE WORDS             87187
         DROP  R2                                                87187
         USING UCMLIST,R1    DECLARE SINGLE ENTRY                87187
SETOSCLP TM    UCMDISP,UCMDISPA  MASTER CONSOLE ?                87187
         BZ    SETOSCBM      NO                                  87187
         IC    R0,UCMID      INSERT ID                           87187
         OI    IOBASE+2,X'40'  SET UCM ID PRESENT                87187
         B     SETOSNCN      PROCEED WITH NEW ID                 87187
SETOSCBM BXLE  R1,R2,SETOSCLP  LOOP THROUGH CONSOLES             87187
         DROP  R1                                                87187
SETOSNCN MODESET KEY=ZERO,MODE=SUP  GET PRIVILEGED               87193
         MGCR  IOBASE        ISSUE COMMAND                       87193
         MODESET KEY=NZERO,MODE=PROB  GET LOW                    87193
         BAL   R14,INITMSG4  CLEAR MESSAGE BUFFER                87187
         LH    R3,DDTM4L     GET MAXIMUM LENGTH                  87187
         LA    R0,IOBASE+4                                       87187
         LH    R1,IOBASE     GET LENGTH+4                        87187
         SH    R1,=H'4'                                          87187
         MVCL  R2,R0         MOVE RESPONSE OR ORIGINAL COMMAND   87187
         B     SENDMSG4      SEND MESSAGE 4                      88185
         SPACE 2                                                 87193
***********************************************************************
*                                                                     *
*        SETNEWS - DISPLAY THE CURRENT GOSSIP FROM DD CARD NEWS       *
*        SETSTATS - (LOCAL ONLY) DISPLAY THE EXHIBIT SYSTEM SCREEN    *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88179
SETSTATS DS    0H            DISPLAY STATUS SCREEN FROM EXHIBIT  87193
         AIF   ('&LOCAL' NE 'ESP').NOSTATS                       92300
         MODESET KEY=ZERO                                        93038
         L     R2,CVTPTR     GET THE CVT                         93038
         ICM   R2,15,CVTJESCT-CVTMAP(R2)  GET JES TABLE          93038
         BZ    NOT24         OR OUT                              93038
         LA    R2,JESSSCT-JESCT-(SSCTSCTA-SSCT)(,R2)  SSCT CHAIN 93038
         USING SSCT,R2       DECLARE IT                          93038
LOOPSSCT ICM   R2,15,SSCTSCTA  GET NEXT ENTRY                    93038
         BZ    NOT24         TOO BAD                             93038
         AM31  ,             GET HIGH - ALL DATA ABOVE THE LINE  93038
         CLC   =C'EXHI',SSCTSNAM  MY SUBSYSTEM NAME ?            93038
         BNE   LOOPSSCT      NO                                  93038
         ICM   R2,15,SSCTSUSE  LOAD CSA GLOBAL ADDRESS           93038
         BZ    NOT24         NOT BUILT YET ?                     93038
         USING EXRBASE,R2    DECLARE CSA                         93038
         SLR   R3,R3         SAVE BACKUP POINTER                 93038
         LA    R4,EXRSCRIN-(EXKCHAIN-EXKBASE)  HEAD OF SCREENS   93038
         USING EXKBASE,R4                                        93038
         L     R0,=Y(24,80)  SET PREFERRED ENTRY                 93038
         L     R1,=C'JES2'   SET PREFERRED SUBSYSTEM (LATER DO *)
LOOPEXK  ICM   R4,15,EXKCHAIN  GET NEXT ELEMENT                  93038
         BNZ   TESTEXK       TEST IT                             93038
         LTR   R4,R3         DID WE FIND AN ALTERNATE ?          93038
         BZ    NOT24         NO ?                                93038
         B     HAVEEXK       YES; USE ALTERNATE SIZE             93038
TESTEXK  CLM   R1,15,EXKJESNM  SAME SUBSYSTEM ?                  93038
         BNE   LOOPEXK       NO; IGNORE                          93038
         CLM   R0,15,EXKSCRSZ  SAME SIZE ?                       93038
         BE    HAVEEXK       YES; USE IT                         93038
         CLM   R0,3,EXKSCRSZ  AT LEAST SOMETHING BY 80 ?         93038
         BNE   LOOPEXK       NO; IGNORE IT                       93038
         LR    R3,R4         SAVE AS ALTERNATE                   93038
         B     LOOPEXK       TRY AGAIN                           93038
         SPACE 1                                                 93038
HAVEEXK  LA    R0,EXKSCRN    LOAD SCREEN START ADDRESS           93038
         DROP  R4                                                93038
         B     COMSCRIN                                          88179
.NOSTATS SPACE 1                                                 88179
SETHELP  L     R0,=A(HELPTEXT)   FOR 'HELP' SCREEN               88179
         B     COMSCRIN      MOVE IT                             88179
         SPACE 1                                                 87193
SETNEWS  L     R0,=A(NEWSTEXT)  LOAD NEWS SCREEN ADDRESS         88179
COMSCRIN LA    R1,24*80      SET SCREEN SIZE                     87193
         LA    R14,IOBASE                                        87193
         ST    R14,GPDATAP   SAVE POINTER                        87193
         C     R9,=A(DDT3767)  NTO DEVICE ?                      88179
         BE    COMNSCR       YES; FORMAT LINE BY LINE            88179
         C     R9,=A(DDTMDL5)  MODEL 5 ?                         88206
         BE    COMMDL5       YES; SPECIAL PROCESSING             88206
         LR    R15,R1        COPY LENGTH                         87193
         MVC   0(PREFIXLN,R14),PREFIX  MOVE 3270 PREFIX ORDERS   87193
         LA    R14,PREFIXLN(,R14)  ADJUST                        87193
         MVCL  R14,R0        MOVE SCREEN BUFFER                  87193
         MVC   IOBASE+PREFIXLN+24*80(SUFFIXLN),SUFFIX  TRAILER   87193
         LA    R15,PREFIXLN+24*80+SUFFIXLN                       87193
         B     COMSTLEN      JOIN COMMON                         88206
         SPACE 1                                                 88206
COMMDL5  LR    R1,R0         COPY START ADDRESS                  88206
         LA    R0,24         NUMBER OF LINES TO DO               88206
         MVC   0(PREFIXLN,R14),PREFIX   MOVE PREFIX ORDERS       88206
COMMDL5L MVI   PREFIXLN(R14),C' '                                88206
         MVC   PREFIXLN+1(131,R14),PREFIXLN(R14)  CLEAR THE LINE 88206
         MVC   PREFIXLN+27(80,R14),0(R1)  MOVE ONE LINE OF TEXT  90010
         LA    R14,132(,R14)   ADVANCE ONE LINE OF OUTPUT        88206
         LA    R1,80(,R1)    ADVANCE ONE LINE OF INPUT           88206
         BCT   R0,COMMDL5L   DO FOR ALL LINES                    88206
         MVC   PREFIXLN(SUFFIXLN,R14),SUFFIX  TRAILER            88206
         LA    R15,PREFIXLN+SUFFIXLN+24*132  SCREEN SIZE         88206
         B     COMSTLEN      JOIN COMMON                         88206
         SPACE 1                                                 88179
COMNSCR  LA    R14,IOBASE+1  SET INPUT BUFFER ADDRESS            88179
         ST    R14,GPDATAP   SET BUFFER START                    88179
         LR    R1,R0         STARTING ADDRESS                    88179
         MVI   IOBASE,X'FF'  SET SCAN STOPPER                    88179
         LA    R0,24         NUMBER OF LINES TO DO               88179
         LA    R2,80         SET LINE LENGTH                     88179
COMNSLUP MVC   0(80,R14),0(R1)  MOVE ONE LINE                    88179
         AR    R1,R2         NEXT INPUT LINE                     88179
         CLC   0(79,R14),1(R14)  ALL BLANK (OR SOMETHING?)       88179
         BE    COMNSLIP      YES; SKIP IT                        88179
         AR    R14,R2        NEXT LINE                           88179
COMNSLED BCTR  R14,0         BACKSPACE 1                         88179
         CLI   0(R14),C' '   TRAILING BLANK ?                    88179
         BE    COMNSLED      YES; DO IT AGAIN                    88179
         MVC   1(2,R14),=X'0D25'  MAKE CR/LF                     88179
         LA    R14,3(,R14)   NEXT AVAILABLE POSITION             88179
COMNSLIP BCT   R0,COMNSLUP   DO NEXT LINE                        88179
         AIF   (NOT &MVSXA OR '&LOCAL' NE 'PID').NOBROAD         93038
         LTR   R3,R3         STATUS DISPLAY ?                    93038
         BZ    COMNENTR      NO; MAKE PROMPT                     93038
         LR    R2,R14        JUST IN CASE                        93038
         AM31  ,             GET HIGH AGAIN                      93038
         MVC   4(73,R2),EXRBROAD+2  MOVE BROADCAST MESSAGE       93038
         CLI   4(R2),C' '    ANY TEXT, EVER ?                    93038
         BL    COMNENTR      NO; GET OUT                         93038
         MVC   0(4,R2),=C'==> '  NOTE BLANK AT +3                93038
         CLC   3(73,R2),4(R2)  ALL BLANK ?                       93038
         BE    COMNENTR      YES; GET OUT                        93038
         SLR   R3,R3         ONLY ONCE                           93038
         LA    R0,1          SET FOR ONE MORE                    93038
         LA    R14,73(,R2)   POINT TO END OF LINE                93038
         B     COMNSLED      DELETE TRAILING BLANKS              93038
.NOBROAD SPACE 1                                                 93038
COMNENTR MVC   0(8,R14),=C'ENTER ? '                             88179
         LA    R15,8(,R14)                                       88179
         S     R15,GPDATAP   LESS START OF BUFFER                88179
COMSTLEN STH   R15,GPDATAL   SET BUFFER LENGTH                   88179
         AM24  ,             RESET POSSIBLE 31-BIT MODE          93038
         MODESET KEY=NZERO   RESET KEY ZERO                      93038
         LA    R0,MSG19                                          88179
         B     SENDMSG       SEND CONVERTED SCREEN               88179
         SPACE 1                                                 88172
NOT24    AM24  ,             GET DOWN                            93038
         MODESET KEY=NZERO                                       93038
NOTFOUND BAL   R14,INITMSG4  CLEAR MESSAGE LINE                  87193
         MVC   0(22,R2),=C'SUBCOMMAND UNAVAILABLE'               87193
SENDMSG4 LA    R0,MSG04      REQUEST MESSAGE 4                   88185
         B     SENDMSG       AND GET OUT                         88185
         SPACE 1                                                 87193
EXRESMOD DC    0D'0',CL8'EXHRDFL3'  WORD ALIGNMENT THE HARD WAY  87193
PREFIX   $IO   ERASE/WRITE                                       87193
         $WCC  (RESETKBD,MDT)                                    87193
         $SBA  (1,1)                                             87193
PREFIXLN EQU   *-PREFIX                                          87193
SUFFIX   $SBA  (1,1)         FUNNY WRAP-AROUND                   87193
         $SF   (UNPROT)                                          87193
         $IC                                                     87193
         DC    CL8' '        USER INPUT                          87193
         $SF   (PROT)                                            87193
SUFFIXLN EQU   *-SUFFIX                                          87193
         TITLE '*********  N E T S O L  -  TPEND EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * VTAM IS CLOSING DOWN                                 *
*                                                                     *
*              * OPERATOR ISSUED A HALT COMMAND                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - REASON CODE FOR SHUTDOWN                      *
*                                                                     *
*        THIS PARAMETER LIST IS NOT USED BY NETSOL                    *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
TPEND    XHEAD ,                                                 90141
         OI    UFLAGS,SHUTDOWN+UFGIGNER  TELL OTHER EXITS OF SHUTDOWN
         SPACE 1
         POST  FINISECB                POST MAINLINE'S ECB
         SPACE 1
         SLR   R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN FROM IRB
         TITLE '*********  N E T S O L  -  LOGON EXIT ROUTINE'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN:                             *
*                                                                     *
*              * A TERMINAL IS LOGGED ON VIA VARY TO NETSOL           *
*                                                                     *
*              * A TERMINAL IS RETURNED TO NETSOL BY AN APPLICATION.  *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE FOLLOWING:  *
*                                                                     *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - POINTER TO SYMBOLIC TERMINAL NAME             *
*              WORD 2 - RESERVED                                      *
*              WORD 3 - LENGTH OF LOGON DATA.                         *
*              WORD 4 - READ-ONLY RPL POINTING TO LOGON CINIT.        *
*              WORD 5 - CID OF PENDING SESSION.                       *
*                                                                     *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
LOGON    MHEAD ,                                                 90141
         L     R6,20(,R1)    GET THE CID                         88188
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
***********************************************************************
*        NOW ADD THE TERMINAL NAME TO THE TERMINAL TABLE AND RETURN   *
*        THE ENTRY'S ADDRESS SO IT CAN BE PLACED IN THE NIB USER      *
*        FIELD. SUBSEQUENT OPERATIONS USING AN RPL WILL HAVE THE      *
*        RPLUSFLD UPDATED WITH THE TERMINAL TABLE ADDRESS FROM THE    *
*        NIB. IF ENTRY ALREADY EXISTS IN TABLE (SECOND LOGON, ETC.),  *
*        THEN WE RESET THE TERMINALS STATUS. A COUNT IS MAINTAINED    *
*        OF THE NUMBER OF LOGONS FOR A GIVEN TERMINAL. THE TERMINAL   *
*        TABLE CAN BE EXPANDED IF NEEDED TO PROVIDE ADDITIONAL STATS. *
***********************************************************************
         SPACE 1
         L     R2,4(,R1)               -> TERMINAL NAME PASSED BY LOGON
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    NOTABLE                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
TABLOOP  CLC   0(8,R2),TERMNAME        MATCH THE NAME ?
         BE    FOUNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,TABLOOP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BNL   TOOSMALL                YES, ABEND USER 0008
         SPACE 1
NOTABLE  ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),0(R2)       COPY NAME ACROSS
TESTRANG LM    R15,R1,TERMTEND  GET RANGE ENTRIES                88185
         SR    R15,R0        BACK-UP ONE                         88185
LOOKRANG BXH   R15,R0,FOUNDTAB  PATTERN ENTRY NOT LOCATED        88185
         CLC   TERMNAME,TERMNAME-TERMTABL(R15)  IN RANGE ?       88185
         BL    LOOKRANG      NO                                  88185
         CLC   TERMNAME,TERMNAM2-TERMTABL(R15) NOT TOO HIGH ?    88185
         BH    LOOKRANG      NO; TRY AGAIN                       88185
         MVC   TERMDAPL,TERMDAPL-TERMTABL(R15)  COPY APPLICATION 88185
         MVC   TERMFLG3,TERMFLG3-TERMTABL(R15)  LOGON FLAGS      88185
         MVC   TERMLPAD(L'TERMLPAD+L'TERMLPLN),TERMLPAD-TERMTABL(R15)
         SPACE 1
FOUNDTAB LA    R4,1                    GET LOGON COUNT           86127
         AH    R4,TERMLOGC             ADD 1 TO IT               86127
         STH   R4,TERMLOGC             SAVE IT BACK
         MVI   TERMFLAG,0              CLEAR LOGON STATUS FLAG
*        CLC   TERMCID,TERMNAME  PRE-ACF VTAM ?                  84142
*        BE    *+8           YES; LEAVE CID FIELD ZERO           84142
         ST    R6,TERMCID    SAVE PENDING CID FOR INQUIRE        88188
         SPACE 1
***********************************************************************
*        OBTAIN AN ASYNC RPL/NIB AND PREPARE FOR OPNDST               *
***********************************************************************
         SPACE 1
         BAL   R14,GETRPL              OBTAIN AN RPL
         LA    PTRNIB,NIBSTART         -> NIB WITHIN RPL
         OI    EXITFLAG,LOGONEX        MARK LOGON EXIT ENTERED
         MVC   NIBSYM(8),TERMNAME      MOVE IN SYMBOLIC NAME
         MVC   NIBCID,TERMCID  ALSO SET PENDING ID               89121
         XC    NIBLMODE,NIBLMODE  KILL LOGMODE                   89121
*DO NOT  CLI   VTAMVERL,C'2'  VTAM 3 OR HIGHER ?                 92221
*NEED    BNH   INQUMODE      NO                                  92221
*THIS    MVC   NIBLMODE,=CL8' '  USE BLANKS INSTEAD OF ZEROES    92221
INQUMODE MVC   MODENAM,NIBLMODE  SAVE FOR USER OVERRIDE          92221
         ST    R3,NIBUSER              NIB USER -> TERM TABLE ADDRESS
         ST    R3,RPLUSFLD             SAVE FOR ERROR ON OPNDST
         ST    PTRRPL,TERMCRPL         SAVE A(RPL) IN TTE
         SPACE 1
***********************************************************************
*        OBTAIN THE SESSION PARAMETERS WITH THE INQUIRE MACRO         *
***********************************************************************
         SPACE 1
INQUIRSE L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         XC    SESSPARM,SESSPARM       ZERO SESSION PARM WORK AREA
         ST    R3,SYNUSFLD             SAVE A(TTE) IN RPL USER FLD
         L     R2,TERMCID              LOAD CID FOR INQUIRE
         OI    MACFLAG2,INQSES         INDICATE INQUIRE(SESSPARM)
         OI    MFLAGS2,INQSESS
         AIF   (&MVSSP OR &MVSXA).NEWINQ                         84142
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=SESSPARM,                                         X
               NIB=(PTRNIB),                                           X
               AREA=SESSPARM,                                          X
               AREALEN=L'SESSPARM                                84142
         AGO   .COMINQ                                           84142
.NEWINQ  INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=SESSPARM,                                         X
               ARG=(R2),                                               X
               AREA=SESSPARM,                                          X
               AREALEN=L'SESSPARM
.COMINQ  NI    MFLAGS2,255-(INQSESS)   RESET ERREXIT FLAG
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(SESSPARM)                                *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO CINIT QUEUED                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABC(R15)            CHECK VALID ACTIONS
ERRTABC  B     R0CHKC               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         BAL   R7,SNOCCUR           C
         B     INQUIRSE            10  REISSUE.  NO NEED TO
         B     FREERPL             14  TERMINAL GONE. END REQUEST
         SPACE 1
R0CHKC   DS    0H
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*        USE BIND PARAMETERS JUST OBTAINED TO DETERMINE TERMINAL TYPE *
***********************************************************************
         SPACE 1
         LA    R2,SESSPARM             ESTABLISH ADDRESSABILITY
         USING ISTDBIND,R2               TO BIND PARAMETERS
         ICM   R7,15,@MODETAB  IS THERE A MODE TABLE ?           88213
         BZ    LOGNOMOD      NO                                  88213
*KILL*   CLI   TERMMODE,C' ' PRIOR MODE FOUND ?                  88220
*KILL*   BH    LOGNOMOD      YES; DON'T SEARCH AGAIN             88220
*KILL*   SLR   R15,R15       ZERO IC                             88213
*KILL*   LA    R14,8(,R7)    POINT TO FIRST ENTRY                88213
*KILL*   LH    R0,2(,R7)     LOAD NUMBER OF ENTRIES (AT LEAST ONE!)
*OGDOMOD CLC   ISTDBIND(BINTSU-ISTDBIND),8(R14)  MATCH ?         88311
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   CLC   BINSRUSZ(2),8+BINSRUSZ-ISTDBIND(R14)  SAME SIZE ? 88220
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   CLC   BINLUP(BINRSV15+1-BINLUP),8+BINLUP-ISTDBIND(R14)  88220
*KILL*   BNE   LOGUPMOD      NO; BUMP AGAIN                      88213
*KILL*   MVC   TERMMODE,0(R14)  COPY LOGMODE NAME                88213
*KILL*   B     LOGNOMOD                                          88213
*OGUPMOD IC    R15,BINUSEL-ISTDBIND+8(,R14)  GET USER LENGTH     88213
*KILL*   LA    R14,8+BINDSIZE(R14,R15)  NEXT ENTRY               88213
*KILL*   BCT   R0,LOGDOMOD   TRY AGAIN                           88213
LOGNOMOD CLI   BINLUP,BINLUP2C         LU TYPE 2 (3270) ?
         BE    LU3270                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP1C         LU TYPE 1 (3767) ?
         BE    LU3767                    YES - BR TO PROCESS
         CLI   BINLUP,BINLUP0C   IF NOT LU TYPE 0
         BNE   BADLU                     THEN ASSUME UNSUPPORTED DEVICE
         CLI   BINFM,X'02'               ELSE IF FM=02
         BE    LU3270                         THEN ASSUME 3270
         CLI   BINFM,X'03'                    IF FM=03
         BE    LU3767                         THEN ASSUME 3767
         B     BADLU                          ELSE DEVICE NOT SUPPORTED
LU3270   CLI   BINBDESC,BINBFSZF  CHECK BUFFER SIZE              88206
         BNL   LU70PRI       TEST PRIMARY SCREEN SIZE            88206
         CLI   BINBDESC,5    MODEL 5 OR SMALLER ?                88206
         BE    LUMDL5        GO TO 27*132                        88206
         BH    BADLU         INVALID                             88206
         CLI   BINBDESC,1    12*80 (OR 24*40) ???                88206
         BE    BADLU         YES; NOT SUPPORTED                  88206
*        NOTE THAT =0 AND =2 BOTH MAY APPEAR FOR 24*80           88206
         B     LU3270N       SET FOR 'NORMAL' SCREEN             88206
LU70PRI  OI    TERMFLAG,LETMODE ALLOW USER LOGMODE MODIFICATION  88207
         CLI   BINBFRAR,27   27*132 ALTERNATE ?                  88206
         BNE   LU3270N       NO; USE NORMAL SCREENS              88206
LUMDL5   L     R1,=A(DDTMDL5)  SET FOR NORMAL MODE               88206
         B     STORDDT       STASH IT                            88206
LU3270N  L     R1,=A(DDT3270)  SET FOR BASIC MODE                88206
         AIF   (NOT &MVSSP AND NOT &MVSXA).NOTSEDS               84142
         TM    BINDFLAG,BINSEDS        3270 WITH EXTENDED FUNCTION?
         BZ    STORDDT       NO; USE BASIC MODE                  88206
         AGO   .NOTSEDT                                          84141
.NOTSEDS ANOP  ,                                                 84141
         TM    BINDFLAG,X'80'    EXTENDED DATASTREAM OPTION ?    88206
         BZ    STORDDT       NO                                  88206
.NOTSEDT L     R1,=A(DDT3270E)         PT AT DDT3270E           85327
         B     STORDDT                 BR TO STORE IN TTE
LU3767   L     R1,=A(DDT3767)          PT AT DDT FOR 3767       85327
         MVI   BINCMNP2,X'80'  SET HALF-DUPLEX FLIP-FLOP         86168
         MVI   BINPRIP,BINPCHN+BINPCHNR+BINPSEB                  86168
         MVI   BINSECP,BINSCHN+X'10'   EXC. RESP. ONLY, NO END   86168
         MVI   BINCMNP,BINBRAK+BINBKTR                           86168
         MVI   BINUSEL,4     SET USER DATA LENGTH                86168
         MVC   BINUSE(4),=X'FF000020'  NTO INST. MANUAL, APP. D  86168
STORDDT  ST    R1,TERMDDT              STORE A(DDT) IN TTE
         TM    BINCMNP2,BINHDXFF  CONVERSATIONAL DEVICE ?        90135
         BZ    *+8           NO                                  90135
         OI    TERMFLAG,FLIPFLOP  YES; SET IT                    90135
         TM    BINCMNP2,BINHDXC  CONTENTION MODE ?               90135
         BZ    *+8           NO                                  90135
         OI    TERMFLAG,CONTENT  YES; SET IT                     90135
         IC    R14,BINPRUSZ  GET PRIMARY RU SIZE                 86143
         LR    R1,R14        SAVE                                86143
         LA    R0,BINRUSZM   GET MANTISSA MASK                   86143
         NR    R14,R0                                            86143
         SRL   R14,4         MAKE MANTISSA                       86143
         LA    R0,BINRUSZE   GET EXPONENT MASK                   86143
         NR    R1,R0         ISOLATE EXPONENT                    86143
         LA    R15,1         MAKE BASE                           86143
         SLL   R15,0(R1)     MAKE 2**E                           86143
         MR    R14,R14       M*2**E                              86143
         ST    R15,TERMRUSZ  STASH RU SIZE MAXIMUM               86143
         DROP  R2
*        RESET LOCAL OPTIONS                                     88179
*TSSO*   CLC   TERMDDT,=A(DDT3767)  NTO DEVICE ?                 88199
*TSSO*   BNE   *+8           NO                                  88199
*TSSO*   OI    TERMFLG3,TFLOF  UNTIL LATER - FORCE LOGOFF        88199
         TM    TERMFLG3,TFLOF  FORCED USER LOGOFF ?              88188
         BZ    LOGOTONE      NO; CHECK FOR SINGLE FORCED APPLID  88188
         BAL   R14,UTERMOF   LOG THE USER OFF                    88188
         OI    TERMFLG3,TFLOF  RESET THE LOGOFF                  88188
LOGOTONE TM    TERMFLG3,TFAPL  FORCED APPLICATION LOGON ?        88220
         BZ    LOGORHEA      NO                                  88220
*CONSIDR NI    TERMFLG3,TFREQ  RESET USER'S PRIVIES              88179
LOGORHEA L     R14,CVTPTR    GET THE CVT                         88185
         AIF   ('&LOCAL' NE 'PID').NOLOGEX                       92300
         ICM   R14,15,CVTUSER-CVTMAP(R14)  LOCAL EXTENSION?      88185
         BZ    LOGOLOGY      NO                                  88185
         LA    R4,UCLOUD-USERCVT-(A$LNEXT-A$LOUD)(R14) LINK-PTR  88185
LOGOLEGO ICM   R4,15,A$LNEXT-A$LOUD(R4)  ANOTHER ?               88185
         BZ    LOGOLOGY      NO                                  88185
         CLC   TERMNAME,A$LTERM-A$LOUD(R4)  SAME ID ?            88185
         BNE   LOGOLEGO                                          88185
         ST    R4,TERMLOUD   SAVE IT                             88185
         NI    TERMFLG3,TFREQ+TFLOF  RESET LOGON AND PRIVIES     88197
         TM    TERMFLG3,TFLOF  IS LOGOFF FORCED ?                88197
         BNZ   LOGOLOGY      YES; KILL LOUD                      88197
         TM    A$LFLG1-A$LOUD(R4),A$LFGOK  VALID USER ?          88185
         BZ    LOGOLOGY                                          88185
         BAL   R14,UTERM     SET USER'S PRIVILEGES               88185
         CLI   TERMAPPL,0    BACK FROM OTHER APPLICATION ?       88185
         BH    LOGOLOGY      YES; LEAVE AS IS                    88185
         BAL   R14,UTERMAP   TEST FOR FORCED APPLICATION AND SET IT
LOGOLOGY ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    LOGOLOUD      NO                                  88179
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM AREA
         MVC   A$SID,=C'A$RB'                                    88207
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,A$SONL,A$SAKEY+A$SBUILD) 88207
*                            LOGOFF SESSIONS, NOT USER           88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88207
         LA    R1,A$SVCRB                                        88207
         SVC   249           CANCEL SESSIONS; KEEP USER          88179
         TM    TERMFLG3,TFLOF  FORCED LOGOFF ?                   88188
         BZ    LOGOLOUD      NO                                  88188
         BAL   R14,UTERMOF   RESET EVERYTHING AGAIN              88188
         MVI   A$SFCTN,A$SFVALD  VALIDATE USER                   88207
         MVI   A$SCNTL,A$SUKEY+A$SBUILD                          88207
         XC    A$SUID(L'A$SUID+L'A$SACCT),A$SUID  KILL USER AND ACCT
         LA    R1,A$SVCRB    ...BUT USERID IS GARBAGE            88207
         SVC   249           ...SO THIS CALL KILLS THE DATA      88188
.NOLOGEX ANOP  ,                                                 91195
LOGOLOUD NI    TERMFLG3,255-TFLOF  LOGOFF REQUEST PROCESSED      88179
         SPACE 1
***********************************************************************
*    ISSUE AN OPNDST TO CONNECT NETSOL TO LOGGED-ON TERMINAL.         *
***********************************************************************
         SPACE 1
OPENDST  OI    MACFLAGS,OPNSPEC        INDICATE DOING AN OPNDST(SP)
         OI    MFLAGS,OPNDSPEC
         L     R7,=A(OPENEND)  GET EXIT ADDRESS                  90141
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(ACCEPT,SPEC,NQ),                                 X
               EXIT=(R7),    OPENEND                                   *
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST                                           *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    OPENDST                 YES. REISSUE
         LTR   R15,R15                 CLSDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1                                                 84142
         CLC   TERMNAME(4),TERMCID  PRE-ACF VTAM ?               84142
         BNE   RETURN        NO; ASSUME THE BEST                 84142
         MVC   TERMCID,RPLARG-IFGRPL(PTRRPL)  GET CID            84142
         MVC   NIBCID-NIBST+NIBSTART(4),TERMCID                  84142
         CLC   TERMCID,TERMNAME  CRUD ?                          84142
         BNE   RETURN        NO; WAIT FOR EXIT TO BE SCHEDULED   86012
         BAL   R7,SNOCCUR                                        84142
         TITLE '*********  N E T S O L  -  OPNDST END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE LOGON EXIT.                  *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
OPENEND  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(ACCEPT,SPEC)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15 R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    09    NODE DEACTIVATED                     14  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    01    OPNDST FAILED                        14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    05    PERMANENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   10    11    SDT FAILED                           14  00           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         OI    EXITFLAG,OPENEX         INDICATE IN OPNDST EXIT
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB1(R15)            CHECK VALID ACTIONS
ERRTAB1  B     R0CHK1               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         BAL   R7,SNOCCUR           C  CAN'T WRITE MSG IF NOT
*                                      CONNECTED
         B     OPENDST             10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK1   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    RETURN                  RETURN IF SO
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*        CID OF DEVICE JUST OPNDST'ED IS NOW IN ASYNC RPL.            *
*        SOLICIT THE DEVICE JUST CONNECTED.                           *
***********************************************************************
         SPACE 1
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         MVC   CID(4),RPLARG           SAVE CID IN RPL WORKAREA
         LA    PTRNIB,NIBSTART         ADDRESS NIB
         L     R3,NIBUSER              -> TERM TABLE ENTRY
*LOSE*   MVC   TERMCID,RPLARG          COPY THE CID TO TTE
         MVC   NIBCID,TERMCID  THIS GETS LOST?                   91105
         ST    R3,RPLUSFLD             SAVE A(TTE) IN RPL FOR MSG
         MVI   TERMFLG2,TOPEN          MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND          FIRST SEND TO THE DEVICE
         NI    SRPLEXT1,FF-RPLNIB      RESET SYNCHRPL
         SPACE 1                                                 90008
         AIF   ('&LOCAL' NE 'PID').NOLAUTF                       92300
***********************************************************************
*                                                                     *
*        LOCAL - IF L.O.U.D. LOGOFF FLAG IS SET, DISCONNECT USER      *
*                                                                     *
***********************************************************************
         ICM   R2,15,TERMLOUD  IS THERE A LOUD ?                 90008
         BZ    AUTLOOK       NO                                  90008
         TM    A$LFLG2-A$LOUD(R2),A$LFLOG  FORCED LOGOFF ?       90008
         BNZ   LOGOFCMD      YES; DO NASTY DISCONNECT            90008
.NOLAUTF SPACE 1
***********************************************************************
*        DO AUTOMATIC LOGON FOR THOSE TERMINALS THAT HAD A            *
*        DEFAULT LOGON SPECIFIED IN THE INITIALIZATION DATA SET.      *
***********************************************************************
         SPACE 1
AUTLOOK  TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88220
         BZ    AUTONTIM      NO; OLD CODE                        88221
         TIME  BIN           GET THE TIME                        88220
         C     R0,TERMDTIM   MORE THAN 1 MINUTE ELAPSED ?        88220
         BH    OPNDSTC       YES; GIVE USER CHANCE TO LOG OFF    88220
         B     AUTOTIME      ELSE TRY APPLICATION AGAIN          88179
AUTONTIM OC    TERMDAPL,TERMDAPL       IS THERE A DEFAULT APPL?  88179
         BZ    OPNDSTC                 NO  => GO WRITE MSG TO DEVICE
         TM    TERMFLG3,TFREQ  PRIOR LOGON REQUIRED ?            88179
         BZ    AUTOTIME      NO; CONNECT                         88179
         TM    TERMFLG3,TFLON  LOGGED ON ?                       88179
         BZ    OPNDSTC       NO; FORCE LOGON SCREEN              88179
         SPACE 1
***********************************************************************
*        TO PREVENT LOOPING IN AUTOMATIC LOGON, AUTO LOGON WILL       *
*        BE TERMINATED IF MORE THAN 3 LOGONS FOR A TERMINAL ARE       *
*        PROCESSED IN A 60 SECOND TIME PERIOD.                        *
***********************************************************************
         SPACE 1
AUTOTIME TIME  BIN                     GET TIME IN .01 SECS      88179
         C     R0,TERMDTIM             < 60 SECS SINCE LAST LOGON?
         BH    AUTONEW                 NO  => ASSUME NEW AUTO LOGON
         LH    R1,TERMDCNT             YES => INCR
         LA    R1,1(,R1)                        LOOP
         STH   R1,TERMDCNT                        COUNTER
         CH    R1,HEX2                 MORE THAN 3 TIMES IN 60 SECS?
         BNH   AUTOINQR                NO  => GO INQUIRE RE APPL STATUS
         MVC   KICKBACK+12(8),TERMNAME  SHOW TERMID              88221
         LA    R14,TERMAPPL  POINT TO FORCED APPLICATION ID      88224
         TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88224
         BNZ   *+8           YES; SHOW IT                        88224
         LA    R14,TERMDAPL   ELSE POINT TO FORCED TERM'S APPL   88224
         MVC   KICKBACK+33(8),0(R14)  SHOW REJECTING APPLID      88224
         WTO   MF=(E,KICKBACK)  LET OPSIE KNOW                   88221
         B     OPNDSTC                 YES => SKIP AUTO LOGON
AUTONEW  A     R0,=AL4(100*60)         ADD 60 SECS TO CURRENT TIME
         ST    R0,TERMDTIM  AND STORE FOR LATER
         XC    TERMDCNT,TERMDCNT       ZERO LOOP COUNTER
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE DEFAULT LOGON APPLICATION FOR THIS TERMINAL.              *
*                                                                     *
***********************************************************************
         SPACE 1
AUTOINQR LA    R14,TERMAPPL  POINT TO FORCED APPLICATION ID      88222
         TM    TERMFLG3,TFAPL  USER LOCKED TO APPLICATION ?      88222
         BNZ   AUTOINQS      YES; TRY IT                         88222
         LA    R14,TERMDAPL   ELSE POINT TO FORCED TERM'S APPL   88222
AUTOINQS MVC   APPLID,0(R14) SET DESIRED APPLICATION NAME        88222
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 1
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREA OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         ST    R3,SYNUSFLD             SAVE A(TTE) IN SYNCHRPL USRFLD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14     HIGHEST POSSIBLE ACTION?            88185
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R15,R15       ERROR CODE ?                        87186
         BZ    ERRTAB3       NO                                  87186
         TM    UFLAGS,SHUTDOWN+UFGIGNER  RECYCLING ?             87186
         BNZ   OPNDSTC       SKIP AUTO LOGON                     87186
         B     ERRTAB3(R15)            CHECK VALID ACTIONS
ERRTAB3  B     R0CHK3               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     OPNDSTC              C  DEFAULT APPL IS UNKNOWN SO
*                                      SKIP AUTO LOGON
         B     INQUIREA            10  REISSUE.  NO NEED TO
*        B     INQBADAP      14  NETSOL/INTAB/VTAMLST OUT OF SYNCH
         SPACE 1                                                 88185
INQBADAP MVC   INQBADWO+4+17(8),TERMNAME                         88185
         MVC   INQBADWO+4+34(8),APPLID                           88185
INQBADWO WTO   'BCSC197 TERM=********, APPLID=******** UNDEFINED',     *
               ROUTCDE=(8),DESC=(7)                              88185
         B     OPNDSTC       WRITE 'CLOSED' SCREEN               88185
         SPACE 1
R0CHK3   CH    R0,=H'10'     APPLICATION IS PEEVED ?             93169
         BE    OPNDSTC       YES; MAKE 'CLOSED' SCREEN           93169
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2                                                 90120
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 2
         SLR   R15,R15                 CLEAR  REG 15
         ICM   R15,1,SYNFDB3 LOAD AND TEST FEED-BACK             88186
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
*OLD*    B     STATUS3(R15)            BRANCH IN TABLE
*OLD*S3  B     DAPACTIV             0  DO AUTO LOGON
*OLD*    B     OPNDSTC              4  SKIP AUTO LOGON
*OLD*    B     OPNDSTC              8  SKIP AUTO LOGON
*OLD*    B     OPNDSTC             12  SKIP AUTP LOGON
*OLD*    B     OPNDSTC             16  SKIP AUTO LOGON
         BNZ   OPNDSTC       SKIP AUTO LOGON                     88186
         SPACE 1
DAPACTIV L     R4,TERMLPAD   SET A(LOGON DATA)                   87131
         L     R2,TERMLPLN   SET L(LOGON DATA)                   87131
         TM    UFLAGS,SHUTDOWN+UFGIGNER  RECYCLING ?             87187
         BNZ   OPNDSTC       YES; BYPASS AUTO LOGON              87187
         TM    TERMFLG3,TPRIVY  PRIVILEGED TERMINAL ?            87187
         BNZ   FILLNIB       YES; PROCEED WITH LOGON             87187
         TM    UFLAGS,UFGSYS  RUNNING IN LOCKED MODE ?           87187
         BZ    FILLNIB       BRANCH INTO LOGON PROCESSING        87187
         SPACE 1
***********************************************************************
*        NO AUTO LOGON IS BEING DONE FOR THIS TERMINAL SO             *
*        GO SOLICIT LOGON INFORMATION FROM THE TERMINAL USER.         *
***********************************************************************
         SPACE 1
OPNDSTC  TM    UFLAGS,INITDLAY  DELAY DURING START-UP ?          87256
         BZ    NINITDLY      NO                                  87256
         STIMER WAIT,BINTVL==A(10)  WAIT 0.1 SECONDS             87256
NINITDLY B     OPSEND        JOIN RESEND COMMON CODE             86160
         TITLE '*********  N E T S O L  -  RECEIVE ANY EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN THE OUTSTANDING REC-ANY      *
*    COMPLETES.                                                       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL USED FOR THE READ-ANY (IGFRPL)      *
*                                                                     *
*               THE CID FIELD OF THIS RPL HAS CID OF DEVICE           *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
RECEND   MHEAD ,                                                 90141
         LA    R13,GENSAVE             POINT TO SAVE-AREA
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
***********************************************************************
*        ISSUE NEW READ SO WE CAN HANDLE MORE THAN 1 LOGON AT A TIME. *
***********************************************************************
         SPACE 1
         LR    R7,R1                   SAVE R7 AROUND THE REC ANY CODE
         BAL   R14,GETRPL              GET AN RPL FOR THE RECEIVE
         BAL   R14,RECSUB              ISSUE A RECEIVE (ANY)
         SPACE 1
         LR    PTRRPL,R7               RESTORE THE INPUT RPL @
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         ICM   R3,15,RPLUSFLD          -> TTE                    92273
         BZ    RETURN        SHOULD NOT HAVE HAPPENED            92273
         ST    R5,TERMCRPL             SAVE A(RPL)
         OI    EXITFLAG,RECEX
         SPACE 1
***********************************************************************
*        SAVE CID OF DEVICE FROM RPL ARG FIELD.                       *
*        GET LENGTH OF RECORD READ. THIS WILL BE DECREMENTED          *
*        IF DEVICE CONTROL CHARACTERS ARE REMOVED BEFORE INTRPRET.    *
*                                                                     *
*        NOTE: INFO IN RPL MAY NOT BE VALID IF CHECK RETURNS          *
*              AN ERROR.                                              *
***********************************************************************
         SPACE 1
         MVC   CID(4),RPLARG           GET CID FROM RPL
         MVC   RECLEN(4),RPLRLEN       GET RPL RECORD LENGTH
         SPACE 1
         OI    MFLAGS,RECA             TELL ERREXIT THAT ERRORS
*                                       ARE FOR REC(ANY)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
         NI    MFLAGS,255-(RECA)       RESET READ INDICATOR
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CHECK OF READ (ANY)                              *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. CONDITION ON INCOMING MESSAGE                   *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     03        FUNCTION ¬ SUPPORTED08  00          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    I/O ERROR.  DEVICE NOT USABLE         08  00          *
*   0C    02    TEST REQUEST SET (LOSTTERM)           14  00          *
*   0C    07    CONNECT REC. IN PROGRESS              14  00          *
*   0C    08    LU RESTARTED (LOSTTERM)               14  00          *
*   0C    0A    REQU. CANCEL. BY RESETR               SNOCCUR         *
*   0C    0B    CANCELED BY CLSDST                    14  00          *
*   0C    0C    REQUEST CANCEL. BY CLEAR              08  04          *
*   10    05    PERMANENT PATH FAILURE                08  00          *
*   10    07    REQUEST CANCEL BY VARY (LOSTTERM)     14  00          *
*   10    09    TERMINATE SELF OR LOGOFF (LOSTTERM)   14  00          *
*   10    0F    BUFFERS FILLED (LOSTTERM)             14  00          *
*   10    10    TERMINATE SELF COMMAND                08  04          *
*   10    0C    DIAL-IN DISCONNECT                    08  00          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    32    REQUEST INVALID FOR SPECIFIED DEVICE  08  00          *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX18               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB2(R15)            CHECK VALID ACTIONS
ERRTAB2  B     R0CHK2               0  VALID DATA FROM READ?
         BAL   R7,SNOCCUR           4
         B     RELOPNB              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     RESEND               10 REISSUE
         B     FREERPL              14
         B     RESEND               18
         SPACE 1
RELOPNB  LTR   R0,R0                   DO OPNDST AFTER CLSDST ?
         BZ    RELEASE
RELOPNS  OI    FLAGS,RELOPND           SAY WE WANT TO REOPEN AFTER RELS
         B     RELEASE
         SPACE 1
R0CHK2   DS    0H
         LTR   R0,R0
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         TM    RPLCNTDC,RPLLUS         DID WE RECEIVE LUSTAT ?
         BO    LUSTATUS                YES, GO HANDLE IT
         TM    RPLCNTDC,RPLSIGNL  USER HIT ATTENTION ?           88304
         BNZ   RESENDSG      YES; SEND AGAIN                     89338
         ICM   R2,15,RECLEN  ANY INPUT AT ALL ?                  86159
         BNZ   R0CHK2L1      YES                                 86159
         CLC   =A(DDT3767),TERMDDT  NTO DEVICE ?                 86159
         BE    FREERPL       YES; IGNORE, AND DON'T SET LOGPROC  86159
         SPACE 1
R0CHK2L1 TM    TERMFLAG,LOGPROC        HAS IMPATIENT USER ISSUED
*                                      A SECOND LOGON SEQUENCE WHILE
*                                      THE FIRST IS IN PROGRESS?
         BO    FREERPL                 YES => IGNORE THIS REQUEST
         OI    TERMFLAG,LOGPROC        NO  => SET LOGON BEING PROCESSED
         SPACE 1
         LA    R6,IOAREA               POINT TO DATA RECEIVED
         LTR   R2,R2         ANY TEXT RECEIVED ?
         BZ    RESENDAP      NO; SEND INVITATION AGAIN           88179
         LA    R3,L'IOAREA             COMPARE THE RECLEN WITH
         CR    R2,R3                    THE READ BUFFER LENGTH.
         BNH   GOEDIT                  BUFFER LENGTH GREATER
*                                       THAN INPUT RECORD.
         LR    R2,R3                   ONLY THE FIRST 80 BYTES
*                                       WILL BE READ IN.
         SPACE 1
***********************************************************************
*        BRANCH TO INPUT EDIT ROUTINE FOR THE APPROPRIATE DEVICE TYPE.*
***********************************************************************
         SPACE 1
GOEDIT   DS    0H
         L     R3,RPLUSFLD             LOAD A(TTE)
         L     R9,TERMDDT              LOAD A(DDT FOR DEVICE)
         L     R15,DDTEDIT             LOAD A(DEVICE EDIT ROUTINE)
         BR    R15                     GO EDIT INPUT
         TITLE '*********  N E T S O L  -  INPUT EDIT ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*        S32EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3270       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
S32EDIT  DS    0H
         CLI   0(R6),CLEARKEY          IS IT 'CLEAR' KEY ?
         BE    RESENDAP      YES; ASK FOR INPUT AGAIN            88179
         CLI   0(R6),PA1KEY  PA1 - LOGOFF REQUEST ?              88220
         BE    LOGOFCMD      YES; DO IT                          88220
         SPACE 1
***********************************************************************
*        NOT 'CLEAR' KEY, CHECK FOR OTHER FUNCTION KEY DEPRESS.  IF   *
*        IT IS A FUNCTION KEY THE DATA WILL BE PASSED DIRECTLY TO     *
*        INTERPRET, OTHERWISE THE DATA POINTER WILL BE UPDATED TO     *
*        SKIP THE 3270 DEVICE CONTROL SEQUENCE.                       *
***********************************************************************
         SPACE 1
S32PFK   DS    0H
         MVI   1(R6),C' '    CLEAR CURSOR ADDRESS                85328
         MVI   2(R6),C' '    DITTO                               85328
         SLR   R0,R0                                             85328
         IC    R0,0(,R6)     LOAD COMPARE BYTE                   85328
         LA    R14,S32AIDS   LOAD AIDS TABLE                     85328
         LA    R15,S32AIDN   GET NUMBER OF ENTRIES               85328
S32PFKLP CLM   R0,1,0(R14)   MATCH ?                             85328
         BL    S32PFKUP      NO                                  85328
         CLM   R0,1,1(R14)   IN RANGE ?                          85328
         BH    S32PFKUP      NO                                  85328
         IC    R15,0(,R14)   GET START OF RANGE                  85328
         SR    R0,R15        GET OFFSET FROM START OF RANGE      85328
         IC    R15,2(,R14)   GET DESIRED VALUE                   85328
         AR    R0,R15        MAKE PFK NUMBER                     85328
         MVC   0(6,R6),=CL8' '  CLEAR CURSOR, ATB BYTES          87362
         C     R0,=F'10'     ONE OR MORE ?                       85328
         BNL   S32PFK10      MORE                                85328
         STC   R0,0(,R6)     STASH BACK                          85328
         B     S32PFK00      MAKE NUMERIC                        85328
S32PFK10 SRDA  R0,32         PREPARE FOR DIVIDE                  85328
         D     R0,=F'10'     DIVIDE                              85328
         STC   R0,1(,R6)                                         85328
         STC   R1,0(,R6)                                         85328
         OI    1(R6),C'0'    MAKE UNITS NUMERIC                  85328
S32PFK00 OI    0(R6),C'0'    MAKE TENS OR UNITS NUMERIC          85328
         B     INTRPRET      GO TO PFK LOOKUP                    85328
S32PFKUP LA    R14,3(,R14)   BUMP TO NEXT TABLE ENTRY            85328
         BCT   R15,S32PFKLP  TRY IT                              85328
         SPACE 1
S32ENTER DS    0H
         CLI   0(R6),ENTERKEY          IS IT THE ENTER KEY?
         BNE   BADINPUT
         LA    R3,3                    USER MIGHT HAVE HIT
         CR    R2,R3                   ENTER KEY ONLY BUT NO LOGON
         BNH   RESENDAP                IF SO, REWRITE THE SCREEN 88179
         SPACE 1
         LA    R1,6
         AR    R6,R1                   BYPASS SBA 3270 CONTROL + ORDER
         SR    R2,R1                   ALLOW FOR DECREASE
         BNP   BADINPUT      INVALID IF NOTHING LEFT
         B     INTRPRET                GO INTERPRET LOGON SEQ
         SPACE 1                                                 85328
S32AIDS  DC    X'F1,F9,01'   PFK1-9 => 1 TO 9                    85328
         DC    X'7A,7C,0A'   PFK10-12                            85328
         DC    X'C1,C9,0D'   PFK13-21 (NO LONGER FOLDED)         87225
         DC    X'4A,4C,16'   PFK22-24 (NO LONGER FOLDED)         87225
S32AIDN  EQU   (*-S32AIDS)/3   NUMBER OF ENTRIES                 85328
         SPACE 1                                                 85328
***********************************************************************
*                                                                     *
*        S37EDIT PROCESSES THE INPUT DATA STREAM TO REMOVE 3767       *
*        DEVICE CONTROL CHARACTERS.                                   *
*                                                                     *
***********************************************************************
         SPACE 1
S37EDIT  LTR   R0,R2         ANY INPUT ?                         86152
         BNP   RESENDAP      HUH ?                               88179
         LR    R14,R6        GET TEXT START                      86152
         LR    R15,R6        DITTO                               86152
         SLR   R3,R3         CLEAR FOR CR                        86152
         LA    R1,X'40'      CONSTANT BLANK                      86152
S37EDLUP IC    R3,0(,R14)    GET NEXT CHARACTER FOR INSPECTION   86152
         CR    R3,R1         PRINTABLE CHARACTER ?               86152
         BNL   S37EDPUT      YES; PROCESS IT                     86152
         CLI   0(R14),X'16'  BACKSPACE ?                         86152
         LR    R3,R1         BUT REPLACE BY BLANK                86152
         BNE   S37EDPUT      NO; JUST PROCESS AS BLANK           86152
         STC   R1,0(,R14)    CLEAR IT OUT                        86152
         CR    R15,R6        POSSIBLE TO BACK-UP ?               86152
         BNH   S37EDB14      NO; JUST BUMP 14                    86152
         BCTR  R15,0         BACK-UP ONE SPACE                   86152
         STC   R1,0(,R15)    CLEAR OLD BYTE                      86166
         B     S37EDB14      AND AVOID R15 INCREMENTATION        86166
S37EDPUT STC   R1,0(,R14)    CLEAR THE SOURCE LOCATION           86152
         STC   R3,0(,R15)    STORE THE NEW BYTE                  86152
         LA    R15,1(,R15)   SET NEW OUTPUT LOCATION             86152
S37EDB14 LA    R14,1(,R14)   SET NEW INPUT                       86152
         BCT   R0,S37EDLUP   REPEAT FOR ALL                      86152
         B     INTRPRET      PROCESS                             86152
         TITLE '*********  N E T S O L  -  COMMAND LOOKUP'
***********************************************************************
*                                                                     *
*    SCAN NETSOL'S COMMAND TABLE FOR AN ENTRY MATCHING THE LOGON DATA *
*    ENTERED FROM THE TERMINAL.  IF A MATCH IS FOUND, THE SPECIFIED   *
*    CMD ROUTINE IS BRANCHED TO. OTHERWISE, AN ERROR MESSAGE IS       *
*    WRITTEN TO THE TERMINAL INDICATING INVALID LOGON DATA.           *
*                                                                     *
*    THE COMMAND CAN BE EITHER:                                       *
*           - A REQUEST FOR LOGON TO A VTAM APPLICATION PROGRAM, OR   *
*           - A REQUEST FOR A SERVICE FROM NETSOL, SUCH AS, LOGOFF    *
*                                                                     *
*    INPUT :                                                          *
*        R2 - LENGTH OF LOGON DATA                                    *
*        R6 - A(LOGON DATA IN DATA BUFFER)                            *
*                                                                     *
*    OUTPUT:                                                          *
*        R0 - ERROR MSG # IF NO ENTRY FOUND                           *
*        R1 - A(MATCHING COMMAND TABLE ENTRY)                         *
*                                                                     *
***********************************************************************
         SPACE 1
BADINPUT LA    R0,MSG02                INPUT NOT RECOGNISED
         B     SENDMSG
         SPACE 1
INTRPRET LTR   R2,R2         ANY INPUT ?                         86146
         BNP   RESENDAP      NO; TRY AGAIN                       88179
         CLI   0(R6),C' '    LEADING NON-BLANK ?                 86152
         BH    INTRNBLK      YES                                 86152
         LA    R6,1(,R6)                                         86152
         BCTR  R2,0                                              86152
         B     INTRPRET      KEEP SPACING                        86152
INTRNBLK STC   R2,DATASEQL             SAVE LOGON DATA LENGTH    86152
         ST    R6,DATAPTR              SAVE A(LOGON DATA)
*        CONVERT LOGON DATA TO UPPER CASE
LOWTOUP  CLI   0(R6),X'11'   SBA ?                               88179
         BE    *+8           YES; LEAVE IT                       88179
         OI    0(R6),X'40'             MAKE CURRENT CHAR UPPER CASE
         LA    R6,1(R6)                GET
         BCT   R2,LOWTOUP                  NEXT CHAR
         SPACE 1                                                 88206
         IC    R2,DATASEQL   RELOAD LENGTH                       88206
         L     R6,DATAPTR    AND ADDRESS                         88206
         LR    R15,R6        COPY START                          88206
         LR    R0,R2         COPY LENGTH                         88206
         SH    R0,=H'8'      LENGTH OF 'LOGMODE()' MINUS 1       88206
         BNP   INTLOGMX      SKIP                                88206
INTLOGMD CLC   =C'LOGMODE(',0(R15)  LOGMODE REQUEST ?            88206
         BNE   INTLOGMN      NO                                  88206
         L     R3,RPLUSFLD   GET TERM ENTRY                      88207
         TM    TERMFLAG,LETMODE ALLOWED TO CHANGE LOGMODE ?      88207
         BZ    BADINPUT      NO; FAIL                            88207
         MVI   0(R15),C' '   WIPE IT                             88206
         MVC   1(7,R15),0(R15)  CLEAR ALL                        88206
         MVC   MODENAM,0(R15)  CLEAR NAME                        88206
         LA    R14,MODENAM   SET DESTINATION                     88206
         LA    R1,8          MAKE SURE OF TRAILING ')'           88206
INTLOGMF CLI   8(R15),C')'   END OF NAME ?                       88206
         BE    INTLOGMR      YES; BLANK AND RESTART              88206
         MVC   0(1,R14),8(R15)  COPY IT                          88206
         MVI   8(R15),C' '   CLEAR IT                            90127
         LA    R14,1(,R14)                                       88206
         LA    R15,1(,R15)                                       88206
         BCT   R0,*+8        OK IF MORE                          88206
         B     BADINPUT      SYNTAX ERROR (MSG 02)               88206
         BCT   R1,INTLOGMF   DO UNTIL )                          88206
INTLOGMR CLI   8(R15),C')'   TRAILING PARENTHESIS ?              88206
         BNE   BADINPUT      NO; ERROR                           88206
         MVI   8(R15),C' '   CLEAR IT                            88206
*DEFER*  CLC   TERMMODE(6),MODENAM  SAME MAJOR TYPE ?            88213
*DEFER*  BE    INTRPRET      YES; HONOR IT                       88213
*DEFER*  TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88213
*DEFER*  BZ    BADINPUT      NO; REJECT THE REQUEST              88213
         B     INTRPRET      GO TO SKIP TRAILING BLANKS          88206
INTLOGMN LA    R15,1(,R15)                                       88206
         SH    R0,=H'1'                                          88206
         BP    INTLOGMD      TRY AGAIN                           88206
INTLOGMX DS    0H            END OF LOGMODE INSERTION            88206
*        SAVE DATA FOR USE IN CLSDST(PASS)
         LA    R14,DATASEQ   MOVE INPUT TO WORK AREA             88311
         LA    R15,L'DATASEQ                                     88311
         LR    R0,R6         'FROM' ADDRESS                      88311
         LR    R1,R2         'FROM' LENGTH                       88311
         MVCL  R14,R0        COPY (OR LEFT-ADJUST)               88311
         SPACE 1
*        SEARCH COMMND TABLE FOR MATCHING COMMAND TEXT
         SPACE 1
         L     R1,=A(PRELOGON)  GET PRE-LOGON COMMANDS           88179
         L     R3,RPLUSFLD   GET TERM ENTRY                      88179
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    CMDSCAN1      NO                                  88179
         TM    TERMFLG3,TFLON  LOGON COMPLETED ?                 88179
         BZ    CMDTABLP      NO; RESTRICT TO LOCAL COMMANDS      88179
CMDSCAN1 L     R1,=A(PRECMDTB)  SET FOR VTAM LOGON APPLID SCAN   88172
         B     CMDTABLP      AND DO NORMAL SCAN                  87186
CMDSCAN2 L     R1,=A(CMDTAB)                                     88172
CMDTABLP C     R1,=A(CMDTABND)  END OF TABLE ?                   88172
         BL    CMDTABL1      NO                                  88172
         LA    R0,MSG07                YES => LOAD ERROR MSG #
         L     R3,RPLUSFLD   GET TERM ENTRY                      88179
         CLI   TERMMSGX,MSG20  LOGON REQUEST LAST WRITE ?        89066
         BE    FAKEPSWD      YES; FAKE PASSWORD COMMAND          89066
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    SENDMSG       NO; SEND ERROR MESSAGE              88179
         TM    TERMFLG3,TFLON  LOGON COMPLETED ?                 88179
         BNZ   SENDMSG       YES; SEND MESSAGE                   88179
FAKEPSWD L     R1,=A(PSWCMD) SET FOR FAKE MATCH                  89066
         LA    R6,DATASEQ    POINT TO LOGON DATA AGAIN           88193
         SLR   R2,R2                                             88193
         IC    R2,DATASEQL   RESTORE THE LENGTH                  88193
         B     CMDSETUP      AND PROCESS LOGON                   88179
CMDTABL1 SLR   R2,R2         CLEAR FOR IC                        88185
         IC    R2,CMDTEXTL(R1)         LOAD LENGTH OF CMDTEXT    88185
         LA    R4,CMDTEXT(,R1)         PT @ CMDTEXT
         LA    R6,DATASEQ              PT @ LOGON DATA
CMDTABL2 CLC   0(1,R4),0(R6)           DOES THIS CHAR MATCH?
         BNE   CMDTABL3                NO => GET NEXT ENTRY
         LA    R4,1(,R4)               YES => COMPARE
         LA    R6,1(,R6)                        NEXT
         BCT   R2,CMDTABL2                        CHARACTER PAIR
*        TO ENSURE UNIQUENESS OF CMDS, COMMAND TEXT MUST
*        END WITH A BLANK OR BE AT THE END OF THE CMD BUFFER.
         CLI   0(R6),X'40'             IS NEXT CHAR A BLANK?
         BNH   CMDFOUND                YES => CMD IS A MATCH     86146
         BCTR  R6,0                                              92320
         CLI   0(R6),C'('    APPLID ?                            92320
         BE    CMDFOUND      YES; ACCEPT AS TERMINATOR           87186
CMDTABL3 LA    R1,CMDTABL(,R1)         NO => GET
         B     CMDTABLP                          NEXT ENTRY
         SPACE 1
*        MATCHING CMD HAS BEEN FOUND
         SPACE 1
*        CHECK IF CMD IS VALID FOR THE SOURCE OF THE CMD
CMDFOUND L     R3,RPLUSFLD   RELOAD TERM ENTRY                   86127
         TM    UFLAGS,INIT             CMD ISSUED DURING NETSOL INIT?
         BZ    CMDCKTRM                NO  => CHECK IF CMD OK FROM TERM
         TM    CMDFLAG(R1),CMDINIT     CMD VALID FROM SYSIN?
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
         B     CMDSETUP      SKIP SYSTEMS ONLY CHECK AND DO      86125
CMDCKTRM TM    TERMFLAG,TERMCONS  IS THIS A CONSOLE ?            88192
         BNZ   CMDCKCON      YES; CHECK CONSOLE                  88192
         TM    CMDFLAG(R1),CMDTERM  VALID FROM TERMINAL ?        88192
         BNZ   CMDCKCKD      YES; PROCEED                        88192
         B     CMDTABL3      LOOK FOR ALTERNATIVE ENTRY          88192
CMDCKCON TM    CMDFLAG(R1),CMDCONS  VALID FROM CONSOLE ?         88192
         BZ    CMDTABL3                NO  => CHECK FOR CMD THAT'S OK
*        SET UP PARAMETERS FOR GETPARM SUBROUTINE
CMDCKCKD TM    TERMFLG3,TFREQ  LOGON REQUESTED ?                 88185
         BZ    CMDSETGP      NO; USE CODE FOR OPEN TERMINALS     88185
         CLI   CMDAPPF(R1),0  APPLICATION GROUP RESTRICTION ?    88185
         BE    CMDSETGP      NO                                  88185
         TM    TERMFLG3,TFLON  USER LOGGED ON ?                  88185
         BZ    CMDNAUTH      NO; UNAUTHORIZED                    88185
         AIF   ('&LOCAL' NE 'PID').NOCMDEX                       92300
         L     R14,TERMLOUD  GET USER'S DATA                     88185
         SLR   R0,R0                                             88185
         IC    R0,A$USUBFG-A$LOUD(,R14)  LOAD AUTHORIZED SYSTEMS 88185
         SLR   R15,R15                                           88185
         IC    R15,CMDAPPF(,R1)  LOAD THE CURRENT GROUP          88185
         NR    R0,R15        IS THE USER AUTHORIZED ?            88185
         BZ    CMDNAPPL      NO                                  88185
         CLI   CMDAPPF(R1),A$USFCIC  CICS ?                      88185
         BNE   CMDSETGP      CONTINUE WITH OLD CHECKS            88185
         LA    R15,A$UCICNM-A$LOUD(,R14) POINT TO MASK           88185
         LA    R0,CMDVAPPL(,R1)  POINT TO TEST VALUE             88185
         BAL   R14,MASKTEST  CHECK FOR (MASKED) COMPARE          88185
           B   CMDSETGP      MATCH; PROCEED                      88185
         LA    R15,8(,R15)   TRY OTHER VALUE                     88185
         BAL   R14,MASKTEST                                      88185
           B   CMDSETGP      MATCH; ALLOW                        88185
         TM    TERMFLG3,TPRIVY  PRIVILEGED ?                     88185
         BZ    CMDNAPPL      NO; FAIL                            88185
.NOCMDEX ANOP  ,                                                 91195
CMDSETGP TM    TERMFLG3,TPRIVY    PRIVILEGED USER ?              86065
         BNZ   CMDSETUP      YES                                 86065
         L     R0,=A(CMDUNTAB)  POINT TO UNPRIVILEGED TABLE      88172
         TM    TERMFLG3,TFAPL  FORCED USER APPLID ?              88220
         BNZ   CMDSETUA      YES                                 88220
         CLI   TERMDAPL,0    ANY FORCED APPLICATION ?            87137
         BNH   CMDSETOP      NO; CHECK FOR LOCKED MODE           87137
CMDSETUA CR    R1,R0         PRIVILEGED COMMAND ?                88192
         BNL   CMDSETUP      NO; ALLOW                           88192
         LA    R0,MSG08      XXX IS NOT ACTIVE                   87137
         MVC   APPLID,TERMAPPL  COPY FORCED APPLICATION ID       88222
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   SENDMSG       YES; SEND FALSE MESSAGE             88220
         MVC   APPLID,TERMDAPL  SHOW UNAVAILABLE APPLICATION     88220
         B     SENDMSG       SEND FALSE MESSAGE                  87137
CMDSETOP TM    UFLAGS,UFGSYS   SYSTEMS ONLY ?                    86065
         BZ    CMDSETUP      NO; PROCEED                         86065
         CR    R1,R0         PRIVILEGED COMMAND ?                88192
         BNL   CMDSETUP      NO; ALLOW (PRIVY CMDS CHECK AGAIN)  88192
CMDNTNOW LA    R0,MSG14      SET FOR UNTIMELY REQUEST            87187
         B     SENDMSG       AND FAIL THIS REQUEST               86065
CMDNAPPL LA    R0,MSG05      SET UNAUTHORIZED REQUEST            88192
         B     SENDMSG       AND FAIL                            88192
CMDNAUTH LA    R0,MSG18      SET UNAUTHORIZED REQUEST            87187
         B     SENDMSG                                           87187
CMDSETUP TM    TERMFLG3,TPRIVY  PRIVILEGED USER ?                88192
         BNZ   CMDSETGO      YES; PROCEED                        88192
         TM    CMDFLAG(R1),CMDAUTH  RESTRICTED COMMAND ?         88192
         BNZ   CMDNAUTH      YES; FAIL                           88192
CMDSETGO ST    R6,GPDATAP    SAVE CURRENT CMD BUFFER PTR         88192
         LA    R2,DATASEQ              CALCULATE
         SR    R6,R2                     LENGTH OF CMD
         SLR   R2,R2                   CALCULATE
         IC    R2,DATASEQL               LENGTH OF TEXT
         SR    R2,R6                       REMAINING IN CMD BUFFER
         STH   R2,GPDATAL              SAVE FOR USE BY GETPARM
*        BRANCH TO CMD PROCESSING ROUTINE
         L     R3,RPLUSFLD   ENSURE CORRECT TTE ADDRESS          88192
         L     R2,CMDROUTA(,R1)        LOAD A(CMD ROUTINE)
         BR    R2                        AND BR TO IT
         SPACE 1                                                 87186
*        BUFFER BEGINS WITH 'LOGON' - SCAN FOR APPLID (AND OUR SHORTER
*        APPL().  IF FOUND, USE CONTENTS OF () AS NAME, AND SCAN 87186
*        FOR DATA(). IGNORE LOGMODE() AND OTHER STUFF)           87186
*                                                                87186
PRETEST  L     R6,DATAPTR    POINT TO INPUT                      87186
         SLR   R4,R4                                             87186
         IC    R4,DATASEQL   GET LENGTH OF INPUT                 87186
         LA    R0,4+1        SET LENGTH FOR 'APPL' AND '('       87186
PRETELP  CLC   =C'APPLID(',0(R6)  NON-TSO ENTRY ?                87186
         BE    PRETE6        MAYBE                               87186
         CLC   =C'APPL(',0(R6)  ALTERNATE FORM ?                 87186
         BE    PRETE4        YES                                 87186
         LA    R6,1(,R6)     UP, UP                              87186
         BCT   R4,PRETELP    . . . AND AWAY                      87186
         B     CMDSCAN2      NO; REAL TSO (?)                    87186
PRETE6   LA    R0,2+4+1      SET FOR 'APPLID(' LENGTH            87186
PRETE4   AR    R6,R0         SKIP FOR 'APPL' AND '('             87186
         SR    R4,R0         ADJUST RESIDUAL LENGTH              87186
         SLR   R2,R2                                             87186
         SLR   R3,R3                                             87186
PRETEAP  LTR   R4,R4         ANY MORE ?                          87186
         BNP   PRETEAD       NO; DONE                            87186
         CLI   0(R6),C')'    END ?                               87186
         BE    PRETEAD       YES                                 87186
         SLDL  R2,8          MAKE ROOM FOR ANOTHER               87186
         IC    R3,0(,R6)     LOAD IT                             87186
         LA    R6,1(,R6)                                         87186
         BCT   R4,PRETEAP                                        87186
         B     APPLBAD       BAD/UNKNOWN APPL                    87186
PRETEAD  L     R6,DATAPTR    RESTART AT BEGINNING                87186
         SLR   R4,R4                                             87186
         IC    R4,DATASEQL   GET LENGTH AGAIN                    87186
PRETEDAL CLC   =C'DATA(',0(R6)  DATA ?                           87186
         MVI   0(R6),C' '    CLEAR IT ANYWAY                     87186
         BE    PRETEDAD      YES                                 87186
         LA    R6,1(,R6)                                         87186
         BCT   R4,PRETEDAL   KEEP IT UP                          87186
         B     PRETEDAA      PUT THE APPLICATION NAME IN         87186
PRETEDAD MVC   1(4,R6),0(R6)  BLANK IT                           87186
         LA    R0,5          SET INCREMENT                       87186
         AR    R6,R0         BUMP OVER                           87186
         SR    R4,R0         ADJUST RESIDUAL LENGTH              87186
PRETEDDL CLI   0(R6),C')'    END ?                               87186
         BE    PRETEDAL      YES; START BLANKING AGAIN           87186
         LA    R0,1          SET INCREMENT                       87186
         AR    R6,R0                                             87186
         SR    R4,R0                                             87186
         BP    PRETEDDL      TRY AGAIN                           87186
PRETEDAA L     R6,DATAPTR    SET RESCAN START                    87186
         STM   R2,R3,0(R6)   STASH DESIRED APPLICATION NAME      87186
         SLR   R2,R2                                             87186
         IC    R2,DATASEQL   GET ORIGINAL LENGTH BACK            87186
         B     INTRPRET      AND RESCAN                          87186
         SPACE 1                                                 88185
*        MASKED COMPARISON                                       88185
*        R0 - VALUE  R15 - MASK    R14 RETURN                    88185
*                                                                88185
MASKTEST STM   R14,R1,12(R13)   SAVE                             88185
         LR    R1,R0         COPY VALUE OVER                     88185
         LA    R0,8          NUMBER TO SCAN                      88185
         LA    R14,1         INCREMENT                           88185
MASKTESL CLI   0(R15),C'*'   GENERAL COMPLETE MATCH ?            88185
         BE    MASKTESX      YES; RETURN MATCHED                 88185
         CLI   0(R15),C'?'   CHARACTER MATCH ?                   88185
         BE    MASKTESB      YES; BUMP                           88185
         CLC   0(1,R15),0(R1)  MATCH ?                           88185
         BE    MASKTESB      YES; BUMP                           88185
         LM    R14,R1,12(R13)   RESTORE                          88185
         B     4(,R14)       RETURN NO MATCH                     88185
MASKTESB AR    R1,R14                                            88185
         AR    R15,R14                                           88185
         BCT   R0,MASKTESL   TRY NEXT ENTRY                      88185
MASKTESX LM    R14,R1,12(R13)                                    88185
         BR    R14           RETURN MATCHED                      88185
         SPACE 1                                                 90141
         LTORG ,                                                 90141
         TITLE '*********  N E T S O L  -  CHECK APPLICATION STATUS'
***********************************************************************
*                                                                     *
*    USE THE INQUIRE MACRO IN DETERMINING THE CURRENT STATUS          *
*    OF THE VTAM APPLICATION ASSOCIATED WITH THE LOGON DATA.          *
*                                                                     *
***********************************************************************
         SPACE 1
CHKAPPL  MVC   APPLID(8),CMDVAPPL(R1)  SAVE APPLID FROM CMD TABLE ENTRY
         LA    PTRNIB,SYNCHNIB         PUT THE APPLICATION
         MVC   NIBSYM(8),APPLID        NAME INTO NIB SYMBOLIC NAME SLOT
         SPACE 1
***********************************************************************
*    INQUIRE FOR THE APPLICATION STATUS                               *
***********************************************************************
         SPACE 1
INQUIREB OI    MACFLAGS,INQAPPS        TELL ABOUT INQUIRE FOR APPSTAT
         OI    MFLAGS,INQAPPST
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         L     R3,RPLUSFLD             -> TTE
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         INQUIRE RPL=SYNCHRPL,                                         X
               OPTCD=APPSTAT,                                          X
               NIB=SYNCHNIB
         NI    MFLAGS,255-(INQAPPST)   RESET ERREXIT FLAG
         NI    SRPLEXT1,FF-RPLNIB      NIB NO LONGER NEEDED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR INQUIRE(APPSTAT)                                 *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    0A    VTAM ERROR                           SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    4C    NO APPLICATION NAME                  0C  06           *
*   14    53    INVALID SYMBOLIC (APPLICATION) NAME  0C  06           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION   86127
         BNH   ERRTAB4B      JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
ERRTAB4B B     ERRTAB4(R15)            CHECK VALID ACTIONS       86127
ERRTAB4  B     R0CHK4               0  PROBABLY WORKED OK
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CONNECTION TO DEVICE IS
*                                      IRRELEVANT
         B     APPLBAD              C  THIS IS NORMAL CASE FOR
*                                      APPLICATION UNKNOWN
         B     INQUIREB            10  REISSUE.  NO NEED TO
         B     APPLBAD       14 - NETSOL/INTTAB/VTAMLST OUT OF SYNCH
         SPACE 1
R0CHK4   CH    R0,=H'10'     NOT ACCEPTING LOGONS ?              93169
         BE    APPINACT      YES; SAY SO                         93169
         LTR   R0,R0                   INQUIRE AREA TOO SMALL?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 2                                                 90120
***********************************************************************
*    TEST RPL FEEDBACK (FDBK) FOR INDICATION OF APPLICATION STATUS.   *
*    CODES ARE:                                                       *
*                                                                     *
*        0 - ACTIVE AND AVAILABLE                                     *
*        4 - INACTIVE                                                 *
*        8 - NEVER ACCEPTS A LOGON                                    *
*       12 - TEMPORARILY NOT ACCEPTING LOGONS                         *
*       16 - APPLICATION IS QUIESCING (CLOSED ITS LOGON QUEUE)        *
***********************************************************************
         SPACE 2
         SLR   R15,R15                 CLEAR  REG 15
         IC    R15,SYNFDB3             EXTRACT FEEDBACK INFO.
         STC   R15,APPLSTAT            SAVE FOR DEBUGGING.
         B     STATUS(R15)             BRANCH IN TABLE
STATUS   B     APPACTIV             0
         B     APPINACT             4
         B     APPNEVER             8
         B     APPTEMP             12
         B     APPCLOSE            16
         SPACE 1
APPTEMP  DS    0H                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS
         LA    R0,MSG11                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPNEVER DS    0H                      APPLICATION NEVER ACCEPTS LOGONS
         LA    R0,MSG10                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPINACT DS    0H                      APPLICATION INACTIVE
         LA    R0,MSG08                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPCLOSE DS    0H                      APPLICATION QUIESCING
         LA    R0,MSG09                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         SPACE 1
APPLBAD  DS    0H                      BAD APPLICATION NAME
         LA    R0,MSG07                SET MESSAGE CODE
         B     SENDMSG                 TELL TERMINAL USER
         TITLE '*********  N E T S O L  -  CLSDST(PASS) FUNCTION'
***********************************************************************
*    THE APPLICATION IS ACTIVE AND AVAILABLE. PASS THE TERMINAL PLUS  *
*    LOGON DATA TO THE DESIRED APPLICATION.                           *
***********************************************************************
         SPACE 2
APPACTIV OI    FLAGS,CLEARSCR          MUST ISSUE CLEAR SCREEN
         L     R15,=A(S32M6APL)                                  86012
         USING S32M6APL,R15                                      86012
         MVC   S32M6APL,APPLID  SHOW CONNECTING ID               86012
         L     R15,=A(S3EM6APL)                                  88172
         USING S3EM6APL,R15                                      88172
         MVC   S3EM6APL,APPLID  DITTO FOR 3270 WITH EDS          86012
         L     R15,=A(S37M6APL)                                  86065
         USING S37M6APL,R15                                      86065
         MVC   S37M6APL,APPLID  DITTO FOR 3767/TTY               86012
         L     R15,=A(MD5M6APL)                                  90042
         USING MD5M6APL,R15                                      90042
         MVC   MD5M6APL,APPLID  DITTO FOR MODEL 5 327X           90042
         DROP  R15                                               86012
         LA    R0,MSG06                SEND LOGON IN PROGRESS
         B     SENDMSG                 GO ISSUE SEND
         SPACE 1
CONTPASS NI    FLAGS,255-(CLEARSCR)    TURN OFF FLAG TO INDICATE RETURN
         SLR   R2,R2                   CLEAR
         IC    R2,DATASEQL             GET DATA SEQUENCE LENGTH PASSED
*                                       FROM INTRPRET
         LA    R4,DATASEQ              ADDRESS OF DATA TO PASS
         SPACE 1
FINDBLNK CLI   0(R4),X'40'             IS IT A BLANK?
         BE    FINDDATA                YES SEE IF ANY DATA FIELD
         LA    R4,1(R4)                OVERWISE GO TO NEXT BYTE
         BCT   R2,FINDBLNK             DECREASE COUNT TRY NEXT
         SPACE 1
NODATA   SLR   R4,R4                   CLEAR REG TO SAY NO DATA
         B     FILLNIB                 GO ISSUE PASS WITH NO DAT
         SPACE 1
FINDDATA LA    R4,1(R4)                POINT TO NEXT CHARACTER
         CLI   0(R4),X'40'             IS IT STILL A BLANK?
         BNE   DATAFOND                NO SO WE HAVE DATA
         BCT   R2,FINDDATA             TRY AND FIND MORE DATA
         B     NODATA                  ISSUE PASS WITH NO DATA
         SPACE 1
DATAFOND BCTR  R2,0                    END OF LOGON BUT NO DATA
         LTR   R2,R2                   NO MORE DATA?
         BZ    NODATA                  ISSUE CLSDST WITH NO DATA
         SPACE 1
***********************************************************************
* THIS CODE WILL CHECK IF THE REQUESTED APPLICATION IS ONE THAT NEEDS *
* A SPECIAL LOGMODE ENTRY. IF SO, THE ASSOCIATED LOGMODE ENTRY IN THE *
* TABLE WILL BE ADDED TO THE NIB PRIOR TO THE CLSDST(PASS).           *
***********************************************************************
         SPACE 1
FILLNIB  LA    PTRNIB,NIBSTART         USE NIB CONTAINED IN RPL.
         MVC   NIBLMODE,MODENAM  ZERO OR LOGMODE TABLE NAME      88206
         LA    R1,LOGMDTAB             PT @ LOGMODE TABLE
LOGMDLP  CLC   LOGMDAPP(8,R1),=XL8'FFFFFFFFFFFFFFFF' END OF TABLE?
         BE    SKIPLOGM                YES => USE DEFAULT ENTRY
         CLC   APPLID(8),LOGMDAPP(R1)  DOES APPLID MATCH TABLE ENTRY?
         BE    INSRTLGM                YES => GO INSERT LOGMODE NAME
         LA    R1,LOGMDLEN(,R1)        NO  => GET NEXT TABLE ENTRY
         B     LOGMDLP                        & PROCESS IT
INSRTLGM MVC   NIBLMODE,LOGMDENT(R1)  MOVE LOGMODE NAME INTO NIB
         SPACE 1
SKIPLOGM L     R3,RPLUSFLD             -> TTE
         MVC   NIBSYM(8),TERMNAME      COPY TERMINAL NAME TO NIB
         SPACE 1
PASS     OI    MFLAGS,CLSDST           CLSDST(PASS) BEING DONE
         OI    MACFLAGS,CLOSPASS
         SPACE 1
         CLSDST  RPL=(PTRRPL),NIB=(PTRNIB),OPTCD=(ASY,PASS),           *
               AAREA=APPLID,AREA=(R4),RECLEN=(R2),EXIT=PASSEND   90120
         NI    MFLAGS,255-(CLSDST)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    PASS                    YES. REISSUE
         LTR   R15,R15                 CLOSE(PASS) ACCEPTED
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  RETURN TO VTAM
         TITLE '*********  N E T S O L  -  CLSDST(PASS) EXIT RTN'
***********************************************************************
*                                                                     *
*        CHECK THAT THE CLSDST(PASS) WORKED CORRECTLY                 *
*                                                                     *
*        THIS EXIT ROUTINE IS SCHEDULED WHEN A CLSDST (PASS)          *
*        IS ISSUED.  THE CLSDST IS ISSUED WHEN A VALID LOGON          *
*        SEQUENCE HAS BEEN RECEIVED FROM THE TERMINAL AND             *
*        THE DESIRED APPLICATION IS RECEIVING LOGON'S.                *
*                                                                     *
*        REGISTER 5 CONTAINS THE ADDRESS OF THE RPL USED              *
*            IN THE CLSDST.                                           *
*                                                                     *
***********************************************************************
         SPACE 2
PASSEND  MHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         LR    PTRRPL,R1               GET THE RPL PASSED
         LA    R13,RPLSAVE             R13 -> RPL SAVE AREA
         SPACE 1
         OI    MFLAGS,CLSDST           INDICATE IN PASSEND
         OI    EXITFLAG,PASSEX
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(PASS)                                     *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   00    08    QUEUED SESSION ALREADY EXISTS        00  08           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    00    APPLICATION UNAVAILABLE              0C  08           *
*   10    02    TARGET APPLICATION UNACCEPTABLE      0C  09           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0D    VTAM INACTIVE TO YOUR ACB            SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    13    CID INVALID                          14  00           *
*   14    4B    INVALID LOGMODE ENTRY SPECIFIED      0C  01           *
*   14    53    TERMINAL NOT DEFINED CROSS DOMAIN    0C  03           *
*   14    55    NO OPNDST AUTHORIZATION              0C  05           *
*   14    5D    OPNDST INVALID (TERM NOT CONNECTED)  14  00           *
*   14    5F    RESOURCE NOT OWNED                   14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB5(R15)            CHECK VALID ACTIONS
ERRTAB5  B     R0CHK5               0  PROBABLY PASSED DEVICE
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8
         B     SENDMSG              C  NORMAL CASE IF APPLI-
*                                       CATION STOPPED ACCEPT-
*                                       ING LOGONS SINCE THE
*                                       INQUIRE
         B     RESEND              10  LET USER TRY AGAIN LATER
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       FREED BY RELREQ AFTER
*                                       THE READEND EXIT WAS
*                                       SCHEDULED.
R0CHK5   DS    0H
         CH    R0,HEX8             08  QUEUED SESSION EXISTS
         BE    QSESSION                 => ISSUE CLSDST RELEASE
         LTR   R0,R0                   ANYTHING BUT FDBK2=08
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TITLE '*********  N E T S O L  -  SIMLOGON FUNCTION'
SIMLOGON LA    PTRNIB,SYNCHNIB         GET ADDRESS OF NIB
         L     R15,=A(FRSYNRPL)  GET FRESH SYNCHRONOUS RPL       86065
         MVC   SYNCHRPL(FRSYNL),0(R15)  AND RE-INITIALIZE        86065
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TPASSED        MARK TERM NOT ON NETSOL
         MVC   TERMAPPL,APPLID         REMEMBER APPL FROM CLSDST(PASS)
         ST    R3,NIBUSER              SAVE IN THE USER FIELD
         ST    R3,SYNUSFLD             SAVE IN SYNCHRPL USER FIELD
         MVC   NIBSYM(8),TERMNAME      TERMINAL NAME TO NIB
         SPACE 1                                                 88185
         AIF   ('&LOCAL' NE 'PID').NOSIMEX                       92300
         ICM   R0,15,TERMLOUD  IS THERE A LOUD ?                 88185
         BZ    SIMLOGOL      NO; SKIP                            88185
         CLC   =C'TS',TERMAPPL  TSO ?                            88185
         BE    SIMLOGOL      YES; LET TSO DO IT                  88185
         CLC   =C'WY',TERMAPPL  WYLBUR ?                         88185
         BE    SIMLOGOL      DITTO                               88185
         CLC   =C'EX',TERMAPPL  EXHIBIT ?                        88185
         BE    SIMLOGOL                                          88185
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT PARM        88185
         MVC   A$SID,=C'A$RB'                                    88185
         MVC   A$SFCTN(3),=AL1(A$SFLOGN,0,A$SAKEY+A$SBUILD) LOGON
         MVC   A$SACCT,TERMAPPL  PASS THE NAME                   88192
         ST    R0,A$SBUFR    SET LOUD ADDRESS                    88185
         LA    R1,A$SVCRB                                        88185
         SVC   249           BEGIN A SESSION                     88185
.NOSIMEX SPACE 1                                                 91195
         SPACE 1
SIMLOGOL OI    MFLAGS,SMLOGON          INDICATE SIMLOGON
         OI    MACFLAGS,SIMLGON
         SIMLOGON RPL=SYNCHRPL,                                        X
               NIB=SYNCHNIB,                                           X
               OPTCD=(Q,NRELRQ)
         NI    MFLAGS,255-(SMLOGON)
         XC    NIBUSER,NIBUSER         CLEAR NIB USER FIELD OUT
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SIMLOGON                                         *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    TERMINAL UNAVAILABLE                 14  00           *
*   10    03    VTAM IS HALTING                      14  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    13    CID INVALID                          14  00           *
*   10    4B    INVALID LOGON                        0C  02           *
*   14    53    TERMINAL NOT FOUND                   SNOCCUR          *
*   14    54    INVALID TERMINAL NAME                14  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB6(R15)            CHECK VALID ACTIONS
ERRTAB6  B     R0CHK6               0  CHECK IF TERM ACCEPTED
         BAL   R7,SNOCCUR           4
         B     FREERPL              8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         B     FREERPL              C  CAN'T SEND MSG IF NOT CONNECTED
*                                      CONNECTED
         B     SIMLOGON            10  REISSUE. CHECK FOR RESET
         B     FREERPL             14  CAN'T CONNECT DEVICE
         SPACE 1
R0CHK6   DS    0H
         CH    R0,HEX9                 TERM UNAVAILABLE
         BE    FREERPL                 RETURN IF SO
         CH    R0,HEX8                 X'0008' THAT WE SHOULD NOT GET ?
         BE    FREERPL                 YES, IGNORE IT FOR NOW
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     FREERPL                 FREE RPL GO BACK TO VTAM
         TITLE '*********  N E T S O L  -  SEND MESSAGES ROUTINE'
***********************************************************************
*                                                                     *
*          BRANCH TO DEVICE DEPENDENT SEND ROUTINE TO WRITE           *
*          A MESSAGE TO THE LOGICAL UNIT.                             *
*                                                                     *
***********************************************************************
         SPACE 2
         SPACE 2
SENDMSG  DS    0H
         L     R3,RPLUSFLD             -> TTE
         L     R9,TERMDDT              -> DDT FOR TERMINAL
         L     R15,DDTSEND             -> SEND ROUTINE FOR TERMINAL
         BR    R15                     GO SEND MESSAGE
         SPACE 5                                                 90140
*---------------------------------------------------------------------*
*                                                                     *
*        FOR COLOR AND WIDE SCREEN, ATTEMPT BUFFER COMPRESSION        *
*                                                                     *
*              ERROR RECOVERY WORKS BETTER WHEN BUFFER <= R.U. SIZE   *
*                                                                     *
*---------------------------------------------------------------------*
S32COMP  DS    0H            NORMAL 3270 COMPRESSION ROUTINE     90141
S3ESEND  ICM   R15,15,COMP3270  COMPRESS ROUTINE LOADED ?        90140
         BZ    S32SEND       NO; NORMAL CRT SEND                 90140
         CLM   R0,1,=AL1(12) MENU SCREEN ?                       90140
         BE    S3ESEND2      YES; PROCESS                        90140
         CLM   R0,1,=AL1(13) CLOSED ?                            90140
         BE    S3ESEND2      YES; PROCESS                        90140
         CLM   R0,1,=AL1(20) PASSWORD SCREEN ?                   90140
         BNE   S32SEND       NO; DO NORMALLY                     90140
S3ESEND2 XC    COMPPARM(OPSEQLEN),COMPPARM  CLEAR WORK AREA      90140
         L     R7,=A(SENDEND)  SEND END EXIT                     90141
         TM    TERMFLAG,SENDSCED   IS THERE A SEND (POST=SCHED)  90140
         BO    MISSSEND-SENDEND(R7)   IF SO, DO NOT ISSUE A NEW ONE
         NI    TERMFLAG,255-(LOGPROC) INDICATE NOT IN LOGON FUNCTION
         TM    RPLRH3,RPLEB  END BRACKET DUE TO MSG 6 ?          90140
         BNO   S3EMSG2       NO, STILL IN BRACKET                90140
         NI    RPLRH3,X'FF'-RPLEB      CLEAR END BRACKET STATE   90140
         OI    RPLRH3,RPLBB  3276 MIGHT LIKE TO KNOW             90140
S3EMSG2  STC   R0,MSGINDEX   SAVE MESSAGE INDEX                  90140
         STC   R0,TERMMSGX   ALSO SAVE IN TERMINAL BLOCK         90140
         TM    FLAGS,FIRSTSND   IS THIS FIRST SEND AFTER OPNDST  90140
         BZ    S3EMSGOK                                          90140
         OI    RPLRH3,RPLBB  INDICATE BEGIN BRACKET              90140
         NI    FLAGS,255-(FIRSTSND)    NEXT SEND WITHOUT BRACKET 90140
S3EMSGOK SLR   R1,R1         CLEAR OUT REG                       90140
         IC    R1,MSGINDEX   GET THE INDEX                       90140
         LA    R2,X'FF'-X'80'   TURN OFF POSSIBLE RESET          90140
         NR    R1,R2         INDICATOR PRIOR TO INDEXING         90140
         SLL   R1,2          4 * (INDEX)                         90140
         L     R2,DDTMSGTB-4(R1)  POINT TO MSG. ENTRY IN TABLE   90140
         LH    R1,0(,R2)     GET MESSAGE LENGTH                  90140
         S     R1,=F'2'      REDUCE BY LENGTH FIELD AT FRONT     90140
         LA    R2,2(R2)      POINT TO ACTUAL MSG.                90140
         ST    R2,COMPPARM+8 SET INPUT ADDRESS                   90140
         ST    R1,CPINLEN    SET INPUT LENGTH                    90140
         LA    R14,24*80                                         90140
         C     R9,=A(DDTMDL5)  MODEL 5 SIZE ?                    90140
         BNE   *+8           NO                                  90140
         LA    R14,27*132    LOAD LARGER SIZE                    90140
         ST    R14,CPBUFLEN  STASH IT                            90140
         MVI   OPFUN,OFYCCW  CCW PRESENT                         90140
         MVI   OPADD,OPA14   14-BIT ADDRESSING AVAILABLE         90140
         MVI   OPCOL,OPSEVEN 7-COLOR AVAILABLE (MAY BE A LIE)    90140
         MVI   OPHIGH,OPSEVEN  HIGH-LIGHTING AVAILABLE (FAIRLY SURE)
         LA    R6,IOAREA               POINT TO OUTPUT AREA      90140
         ST    R6,COMPPARM   SET OUTPUT BUFFER ADDRESS           90140
         LA    R14,LMSG12    SET MAXIMUM OUTPUT AREA             90140
         ST    R14,CPOUTLEN  STASH IN PARM LIST                  90140
         LA    R14,CPOUTLEN  GET POINTER TO OUTPUT LENGTH        90140
         ST    R14,COMPPARM+4  STASH IT                          90140
         LA    R14,CPINLEN   POINT TO INPUT LENGTH               90140
         ST    R14,COMPPARM+12  STASH IN LIST                    90140
         LA    R14,CPBUFLEN  GET BUFFER LENGTH                   90140
         ST    R14,COMPPARM+16  STASH                            90140
         LA    R14,OPFUN     POINT TO OPTION LIST                90140
         ST    R14,COMPPARM+20  STASH IN LIST                    90140
         CLI   MSGINDEX,MSG12  IS IT MSG12?                      90140
         BNE   S3ECONT       NO                                  90140
         BAL   R14,TIMETERM  ADD NODE NAME & TIME TO MSG         90140
         B     S3ECONT2                                          90140
S3ECONT  CLI   MSGINDEX,MSG13  NEW MESSAGE 13 ?                  90140
         BNE   S3ECONT3      NO                                  90140
         AH    R9,=Y(DDTTERM3-DDTTERM)  FINAGLE DDT BASE         90140
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          90140
         SH    R9,=Y(DDTTERM3-DDTTERM)  RESTORE R9               86065
         B     S3ECONT2      JOIN COMMON                         90140
S3ECONT3 CLI   MSGINDEX,MSG20  NEW MESSAGE 20                    88179
         BNE   S32SEND       MAJOR BOOBOO ?                      90140
         AH    R9,=Y(DDTTERM2-DDTTERM)  FINAGLE DDT BASE         90140
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          90140
         SH    R9,=Y(DDTTERM2-DDTTERM)  RESTORE R9               90140
S3ECONT2 LA    R1,COMPPARM   GET PARM LIST                       90140
         L     R15,COMP3270  GET COMPRESSION ROUTINE ADDRESS     90140
         BALR  R14,R15       CALL IT                             90140
         CH    R15,=H'8'     DID WE MAKE A BOOBOO ?              90140
         BNL   S32SEND       NO; DO THE SLOW WAY                 90140
         L     R0,CPOUTLEN   GET NEW OUTPUT LENGTH               90140
         ST    R0,SENDLEN    SAVE LENGTH OF SEND                 90140
         B     SEND          JOIN COMMON SEND PROCESSING         90140
         TITLE '*********  N E T S O L  -  SEND ROUTINE FOR 3270'
***********************************************************************
*                                                                     *
*          S32SEND EDITS AND SENDS NETSOL MESSAGES TO 3270 DEVICES.   *
*                                                                     *
*          ALL MESSAGES SENT ARE ASYNCHRONOUS USING THE RPL PASSED    *
*          IN R5.                                                     *
*                                                                     *
*               ON ENTRY:                                             *
*                  REG. 0 CONTAINS MESSAGE NUMBER                     *
*                  REG. 3 POINTS TO TTE OF ACTIVE TERMINAL            *
*                  REG. 5 POINTS TO RPL BEING USED                    *
*                  REG. 9 POINTS TO DDT FOR TERMINAL                  *
*                                                                     *
***********************************************************************
         SPACE 2
S37SEND  DS    0H                                                86145
S32SEND  DS    0H                                                86153
         CLM   R0,1,=AL1(MSG06)        LOGON MESSAGE ?
         BNE   S32MSG1                 NO, THEN DON'T SEND MSG WITH EB
         OI    TERMFLAG,LOGPROC        SINCE SENDING MSG IS LOGON
         OI    RPLRH3,RPLEB            SEND WITH END BRACKET ON
*                                      AS 3276 MAY GET UPSET ON CLSDST
         B     S32MSG2                 SKIP CHECK FOR EB SEND
         SPACE 1
S32MSG1  L     R7,=A(SENDEND)  SEND END EXIT                     90141
         TM    TERMFLAG,SENDSCED   IS THERE A SEND (POST=SCHED) DC18203
*                                   ALREADY ISSUED FOR THIS LU  DC18203
         BO  MISSSEND-SENDEND(R7)  IF SO DO NOT ISSUE A NEW ONE DC18203
         NI  TERMFLAG,255-(LOGPROC) INDICAT NOT IN LOGON FUNCTION
         TM    RPLRH3,RPLEB            END BRACKET DUE TO MSG 6 ?
         BNO   S32MSG2                 NO, OKAY STILL IN BRACKET
         NI    RPLRH3,X'FF'-RPLEB      CLEAR END BRACKET STATE
         OI    RPLRH3,RPLBB            3276 MIGHT LIKE TO KNOW
         SPACE 1
S32MSG2  DS    0H
         STC   R0,MSGINDEX             SAVE MESSAGE INDEX
         STC   R0,TERMMSGX   ALSO SAVE IN TERMINAL BLOCK         86160
         TM    FLAGS,FIRSTSND          IS THIS FIRST SEND AFTER OPNDST
         BZ    S32MSGOK
         OI    RPLRH3,RPLBB            INDICATE BEGIN BRACKET
         NI    FLAGS,255-(FIRSTSND)    NEXT SEND WITHOUT BRACKET
         SPACE 1
***********************************************************************
*        FIND OUTPUT MESSAGE AND LENGTH                               *
***********************************************************************
         SPACE 1
S32MSGOK DS    0H
         SLR   R1,R1                   CLEAR OUT REG
         IC    R1,MSGINDEX             GET THE INDEX
         LA    R2,X'FF'-X'80'          TURN OFF POSSIBLE RESET
         NR    R1,R2                    INDICATOR PRIOR TO INDEXING
         SLL   R1,2                    4 * (INDEX)
*                                      = DISPLACEMENT OF MESSAGE +4
         L     R2,DDTMSGTB-4(R1)       POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(,R2)               GET MESSAGE LENGTH
         S     R1,=F'2'                REDUCE BY LENGTH FIELD AT FRONT
         LA    R2,2(R2)                POINT TO ACTUAL MSG.
         LA    R6,IOAREA               POINT TO OUTPUT AREA
         C     R9,=A(DDTCONS)  CONSOLE REQUEST ?                 88192
         BNE   *+8           NO                                  88192
         LA    R6,4(,R6)     LEAVE ROOM FOR RDW                  88192
         LR    R7,R2                   POINT TO MESSAGE AREA
         AH    R7,DDTMSGOF              WHERE DATA ARE TO BE MOVED
         CLI   MSGINDEX,MSG19  VARIABLE TEXT MESSAGE ?           87193
         BNE   *+4+4+4       NO                                  87193
         LH    R1,GPDATAL    GET OUTPUT LENGTH                   87193
         L     R2,GPDATAP    AND ADDRESS                         87193
         SPACE 1
***********************************************************************
*        REGISTER 1 CONTAINS MESSAGE LENGTH                           *
*        REGISTER 2 POINTS TO MESSAGE                                 *
*        REGISTER 6 POINTS TO OUTPUT AREA                             *
*        REGISTER 7 POINTS TO MESSAGE AREA FOR VARIABLE DATA          *
***********************************************************************
         SPACE 1
***********************************************************************
*        EDIT MESSAGE 01                                              *
***********************************************************************
         CLI   MSGINDEX,MSG01          IS THIS MESSAGE 01?       88192
         BNE   S32CKM7                 NO SO CARRY ON
         LA    R8,NIBSTART             YES => POINT AT NIB
         MVC   0(8,R7),NIBLMODE               ADD LOGMODE ENTRY TO MSG
         B     S32CONT
***********************************************************************
*        EDIT MESSAGE 07                                              *
***********************************************************************
S32CKM7  DS    0H
         CLI   MSGINDEX,MSG07          IS THIS MESSAGE 07?       88192
         BNE   S32CKM8                 NO SO CARRY ON
         MVC   0(8,R7),=CL8' '         BLANK OUT USER DATA FIELD
         LR    R0,R1                   SAVE CONTENTS OF R1
         SLR   R1,R1                   LOAD LENGTH
         IC    R1,DATASEQL              OF USER DATA
         CH    R1,=AL2(8)              IF LENGTH
         BNH   *+8                      GREATER THAN 8
         LA    R1,8                      THEN SET TO 8
         BCTR  R1,0                    DECREMENT FOR MVC
         EX    R1,S32MVAPP             MOVE APPLICATION ID TO MSG.
         LR    R1,R0                   RESTORE R1
         B     S32CONT                 SKIP FURTHER EDITS
S32MVAPP MVC   0(0,R7),DATASEQ         *** EXECUTED ***
***********************************************************************
*        EDIT MESSAGE 8,9,10,11                                       *
***********************************************************************
S32CKM8  DS    0H
         CLI   MSGINDEX,MSG08          IS MSG # LESS THAN 8?     88192
         BL    S32CONT                 YES => BYPASS FURTHER CHECKING
         CLI   MSGINDEX,MSG11          IS MSG # GREATER THAN 11? 88192
         BH    S32CKM12                YES => CONTINUE MESSAGE CHECKING
         MVC   0(8,R7),APPLID          MOVE APPLID TO MESSAGE
         B     S32CONT                 SKIP FURTHER EDITS
***********************************************************************
*        EDIT MESSAGE 12                                              *
***********************************************************************
S32CKM12 CLI   MSGINDEX,MSG12          IS IT MSG12?              88192
         BNE   S32CONT                 NO
         BAL   R14,TIMETERM            ADD NODE NAME & TIME TO MSG
         SPACE 1
*        ALL BCSC MENUS WRITTEN FOR LOGABAX TERMINALS ARE
*        TRACKED BY WRITING A MESSAGE TO SYSLOG.
         SPACE 1
*DTS*    C     R9,=AL4(DDT3767)        IF THIS IS A LOGABAX TERMINAL
*DTS*    BNE   S32CONT                   NO  => BYPASS LOG MSG
*DTS*    MVC   LOGMENU+17(8),TERMNAME    YES => ADD NODE NAME TO MSG
*DTS*    MVC   LOGMENU+44(6),=CL6'LOGON'        ASSUME FROM LOGON EXIT
*DTS*    TM    EXITFLAG,LOGONEX                 IF FROM LOGON EXIT
*DTS*    BO    *+10                               YES=> BYPASS
*DTS*    MVC   LOGMENU+44(6),=CL6'RESEND'         NO => MARK AS RESEND
*DTS*    STM   R0,R1,RPLERRSA                   SAVE REGS
*DTS*    WTO   MF=(E,LOGMENU)                   WRITE MSG TO LOG
*DTS*    LM    R0,R1,RPLERRSA                   RESTORE REGS
***********************************************************************
*        MOVE MESSAGE TO OUTPUT AREA                                  *
***********************************************************************
S32CONT  CLI   MSGINDEX,MSG13  NEW MESSAGE 13                    86065
         BNE   S32CONT3      NO                                  86065
         AH    R9,=Y(DDTTERM3-DDTTERM)  FINAGLE DDT BASE         86065
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          86065
         SH    R9,=Y(DDTTERM3-DDTTERM)  RESTORE R9               86065
S32CONT3 CLI   MSGINDEX,MSG20  NEW MESSAGE 20                    88179
         BNE   S32CONT2      NO                                  88179
         AH    R9,=Y(DDTTERM2-DDTTERM)  FINAGLE DDT BASE         88179
         BAL   R14,TIMETERM  ADD TERMINAL NAME AND TIME          88179
         SH    R9,=Y(DDTTERM2-DDTTERM)  RESTORE R9               88179
S32CONT2 LR    R3,R1                   LOAD MESSAGE LENGTH TO ODD REG
         LR    R7,R1                   LOAD MESSAGE LENGTH TO ODD REG
         MVCL  R6,R2                   MOVE MESSAGE TO OUTPUT BUFFER
         L     R3,RPLUSFLD             RESTORE TTE POINTER
         LA    R1,IOAREA               CALCULATE
         SR    R6,R1                     THE MESSAGE LENGTH
         ST    R6,SENDLEN              SAVE LENGTH OF SEND
         SPACE 1
SEND     OI    MFLAGS,SENDING          TELL ERREXIT ASY. SEND
         OI    MACFLAGS,SENDASY
         AIF   (NOT &MVSXA).NRPLO7A                             GP04234
         L     R2,SENDLEN              LENGTH TO SEND TO TERM
         NI    RPLO7,255-RPLLMPEO  TURN LARGE MESSAGE OPTION OFF 86143
         ICM   R0,15,TERMRUSZ  GET TERMINAL RU SIZE MAXIMUM      86143
         BZ    SENDRUMX      NONE; SKIP                          86143
         CR    R2,R0         LARGER THAN LIMIT ?                 86143
         BNH   SENDRUMX      NO; USE IT                          86143
         OI    RPLO7,RPLLMPEO  SET FOR DATA EXCEEDING RU SIZE    86143
.NRPLO7A  SPACE 1                                               GP04234
SENDRUMX L     R4,CID                  TERMINAL ADDRESS          86143
         ST    R4,NIBCID-NIBST+NIBSTART  MAKE SURE               91105
         C     R9,=A(DDTCONS)  CONSOLE REQUEST ?                 88192
         BE    CONSSEND      YES; GO THERE                       88192
         SPACE 1
***********************************************************************
*        CHECK TO SEE IF SEND IS FOR MESSAGE 6 (LOGON IN PROGRESS)    *
*        AND IF SO, SEND REQUESTING A POSITIVE RESPONSE SO THAT THE   *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
         SPACE 1
         L     R7,=A(SENDEND)  SET EXIT ADDRESS                  90141
         CLI   MSGINDEX,MSG06          LOGON IN PROGRESS MSG ?   88192
         BE    S32SEND6                YES, DO ELSEWHERE
         OI    TERMFLAG,SENDSCED    INDICATE A SEND TO BE ISSUEDDC18203
         SPACE 1
         TM    TERMFLAG,CONTENT   HALF-DUPLEX MODE ?             90135
         BZ    S32SES32      NO; USE 3270-TYPE SEND              90135
         NI    RPLRH3,255-RPLCMD-RPLCHREQ  NO CHG                86159
         SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         *
               EXIT=(R7),RPL=(PTRRPL),POST=SCHED,                      *
               CHNGDIR=(NCMD,NREQ),ARG=(R4),                           *
               OPTCD=(ASY,CA),RESPOND=(NEX,FME,NRRN)             86153
         B     S32CHKSD                                          86153
         SPACE 1                                                 86153
S32SES32 TM    TERMFLAG,FLIPFLOP  CONVERSATIONAL MODE ?          90135
         BNZ   S32SEND6      YES; FORCE RESPONSE                 90135
         SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         *
               EXIT=(R7),RPL=(PTRRPL),POST=SCHED,                      X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(EX,FME,NRRN)
         B     S32CHKSD                HANDLE LIKE REST OF SENDS
         SPACE 1
***********************************************************************
*        SEND MESSAGE 6 REQUESTING A POSITIVE RESPONSE SO THAT THE    *
*        CLSDST(PASS) DOESN'T DELETE IT (WILL IF DONE WHEN STILL IN   *
*        THE BUFFER AT THE TIME CLSDST IS ISSUED).                    *
***********************************************************************
S32SEND6 SEND  STYPE=REQ,CONTROL=DATA,AREA=IOAREA,RECLEN=(R2),         X
               EXIT=(R7),RPL=(PTRRPL),POST=RESP,                       X
               CHNGDIR=(CMD,NREQ),ARG=(R4),                            X
               OPTCD=(ASY,CA),RESPOND=(NEX,FME,NRRN)
S32CHKSD NI    MFLAGS,255-(SENDING)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    SEND                    YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  RETURN TO VTAM
         TITLE '*********  N E T S O L  -  SEND EXIT'
***********************************************************************
*                                                                     *
*         SENDEND IS ENTERED WHEN THE EXIT HAS BEEN SCHEDULED         *
*         FOR THE SEND DONE ABOVE.                                    *
*                                                                     *
*         REGISTER 1 POINTS TO THE ASYNCH RPL BEING USED              *
*         REGISTER 15 =A(SENDEND)                                     *
*                                                                     *
***********************************************************************
         SPACE 2
SENDEND  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN RPL
         L     R3,RPLUSFLD                                      DC18203
         NI    TERMFLAG,X'FF'-SENDSCED INDICATE SEND COMPLETE   DC18203
         OI    MFLAGS,SENDING          TELL ERREXIT THAT ERROR
*                                      ARE FOR SEND
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                      IS ENTERED IF ERRORS HAVE
*                                      OCCURRED
         NI    MFLAGS,255-(SENDING)
         AIF   (NOT &MVSXA).NRPLO7B
         NI    RPLO7,255-RPLLMPEO  RESET BIG MSG BIT             86145
.NRPLO7B TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     88039
         BO    RETURN                                            88039
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                                     *
*                                                    ACTION           *
*  RTNCD FDBK2                                       CODE(S)          *
*  CODE  CODE         MEANING                        RETURNED         *
*                                                   (R15  R0)         *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                 00  00          *
*   04    04    EXCP. INCOMING MESSAGE                                *
*               REC  RESP HANDLES 0404 FOR 'SEND POST=SCHED'          *
*               SEND EXIT HANDLES 0404 FOR 'SEND POST=RESP'           *
*                                                                     *
*             SSENSEI/SSENSMI                                         *
*                80     XX        PATH ERRORS         14  00          *
*                80     05        NO SESSION COND.    08  04          *
*                40     XX        RH   ERRORS         SNOCCUR         *
*                20     XX        STATE ERRORS        08  04          *
*                10     XX        REQUEST ERRORS      SNOCCUR         *
*                08     00        BRACKET ERROR       18  00          *
*                08     01        REQUEST REJECT      08  00          *
*                08     02        INTV REQ            14  00          *
*                08     13        BRACKET ERROR       18  00          *
*                08     2B        PRES. SPACE INT. LO 18  00          *
*                08     2D        SLU BUSY            14  00          *
*                                                                     *
*   08    00    TEMP STORAGE ALLOCATION FAILURE       10  00          *
*   0C    01    LU NOT AVAILABLE (POWERED OFF)        08  00          *
*   0C    02    REQUEST CANCELLED TEST REQ (LOSTTERM) 14  00          *
*   0C    07    CONNECTION RECOVERY        (LOSTTERM) 14  00          *
*   0C    08    LU RESTARTED               (LOSTTERM) 14  00          *
*   0C    0B    REQUEST CANCELLED BY CLSDST           14  00          *
*   0C    0C    REQUEST CANCELLED BY CLEAR            08  04          *
*   10    03    QUICK HALT (TPEND)                    SNOCCUR         *
*   10    05    PERMANENT CHANNEL OR LINK FAILURE     08  00          *
*   10    07    VARY DEACTIVATE IMMEDIATE  (LOSTTERM) 14  00          *
*   10    09    TERMINATE SELF OR LOGOFF   (LOSTTERM) 14  00          *
*   10    0A    ACF/VTAM ERROR                        SNOCCUR         *
*   10    0D    ACF/VTAM INACTIVE FOR ACB             SNOCCUR         *
*   10    0E    ABEND FOR PROGRAMS TCB                SNOCCUR         *
*   10    0F    BUFFERS FULL               (LOSTTERM) 14  00          *
*   10    10    TERMINATE SELF RECEIVED               08  04          *
*   14    12    CLSDST IN PROGRESS                    14  00          *
*   14    13    CID INVALID                           14  00          *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLAG,SENDEX         INDICATE WRITE EXIT
         CH    R15,HEX18               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTABB(R15)            CHECK VALID ACTION
ERRTABB  B     ROCHKB               0  CHECK IF WRITE WENT
         BAL   R7,SNOCCUR           4
         B     RELOPNA              8  CHECK IF WE WANT TO REOPEN
         BAL   R7,SNOCCUR           C
         B     WHATSEND            10  FIND OUT WHAT KIND OF SEND
         B     FREERPL             14  LOST DEVICE
         B     RESENDM             18  RESEND MSG
         SPACE 1
RELOPNA  LTR   R0,R0                   OPNDST AFTER CLSDST ?
         BZ    RELEASE                 NO SO JUST GO CLSDST
         OI    FLAGS,RELOPND           INDICATE WE WANT RE-OPEN
         B     RELEASE                 CLSDST FIRST
         SPACE 1
WHATSEND TM    FLAGS,LUSTATE           LUSTAT SEND ?
         BO    SENDLU
         B     SEND                    NO, NORMAL SEND, CONTINUE IT
         SPACE 1
RESENDM  DS    0H                      RESEND MESSAGE
         NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB TERMINAL MIGHT
*                                      HAVE STARTED FIRST
         IC    R0,MSGINDEX             RETRIEVE SAVED MSG #
         B     SENDMSG
         SPACE 1
ROCHKB   DS    0H
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
*ISSSEND NI    FLAGS,255-(LOOPONCE)     TURN OFF RETRY INDIC
MISSSEND TM    FLAGS,LUSTATE           CONTINUE LUSTAT PROC ?
         BO    CONTLU
         TM    FLAGS,CLEARSCR          CLEAR OF SCREEN FROM RECEND?
         BO    CONTPASS
         B     FREERPL                 WAIT FOR ACITIVITY FROM LU
         TITLE '*********  N E T S O L  -  RELREQ EXIT'
***********************************************************************
*                                                                     *
*    THIS EXIT ROUTINE IS SCHEDULED WHEN AN APPLICATION ISSUES        *
*    OPNDST (ACQUIRE) FOR A TERMINAL CURRENTLY OWNED BY NETSOL.       *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*         FOLLOWING;                                                  *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - ADDRESS OF SYMBOLIC NAME OF TERMINAL          *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
RELREQ   XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN        YES; REFUSE AND EXIT                90141
         SPACE 1
***********************************************************************
*        NOW SCAN THE TERMINAL TABLE ENTRIES TO SEE IF WE CAN FIND A  *
*        MATCH ON THE TERMINAL NAME (ERROR IF DON'T). WHEN FOUND,     *
*        SEE IF A LOGON IS IN PROGRESS (VIA LOGPROC FLAG). IF THIS IS *
*        THE CASE, WE WON'T RELEASE THE TERMINAL, OTHERWISE RELEASE   *
*        TO THE APPLICATION REQUESTING IT.                            *
***********************************************************************
         SPACE 1
         LM    R3,R5,TERMTABS          SET UP FOR THE BXLE THRU TABLE
         CR    R3,R5                   NULL TABLE ?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         L     R6,4(,R1)               ADDRESS OF RELREQ NAME OF TERM
         SPACE 1
FINDNAME CLC   0(8,R6),TERMNAME        MATCH ON THE NAME
         BE    FNDNAME                 YES, FOUND ITS TTE
         BXLE  R3,R4,FINDNAME          CONTINUE
         BAL   R7,SNOCCUR              ERROR, SHOULD NEVER GET HERE
         SPACE 1
FNDNAME  TM    TERMFLAG,LOGPROC        LOGON ? YES, DON'T FREE TERMINAL
         BO    RRFAIL                  YES => WRITE REL REQ FAILED MSG
         SPACE 1
         OI    EXITFLAG,RELREQEX       INDICATE IN RELREQ EXIT
         BAL   R14,GETRPL              GET AN RPL
         LA    R13,RPLSAVE             R13 -> SAVE IN THE RPL
         ST    R3,RPLUSFLD             SAVE ADDRESS OF TTE IN THE RPL
         ST    R5,TERMCRPL             SAVE ADDRESS OF RPL IN THE TTE
         LA    PTRNIB,SYNCHNIB
         MVC   NIBSYM(8),TERMNAME      PLACE SYMBOLIC TERMINAL
*                                      SET INDICATOR TO
         OI    FLAGS,RELOPND           RELEASE THE DEVICE AND
*                                      TRY TO REOPEN IT
         MVC   CID,TERMCID             GET CID INTO ASYNCH RPL
         SPACE 1
         MVC   RELRQMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELRQMSG)         INFORM WORLD OF REQUEST
         SPACE 1
         B     RELEASE                 GO DO THE RELEASE
         SPACE 1
RRFAIL   MVC   RELFLMSG+17(8),TERMNAME NAME FROM THE TTE TO MSG
         WTO   MF=(E,RELFLMSG)         INFORM WORLD OF REQUEST FAILURE
         SPACE 1
         B     RETURN                  REFUSE RELEASE REQUEST
         TITLE '*********  N E T S O L  -  LOSTERM EXIT'
***********************************************************************
*                                                                     *
*   THIS EXIT ROUTINE IS SCHEDULED BY VTAM WHEN :                     *
*                                                                     *
*                * WHEN CONTACT WITH AN LU IS LOST                    *
*                * WHEN A LU REQUESTED A LOGOFF                       *
*                * WHEN CERTAIN ERRORS DETECTED IN TRANSMISSION       *
*                * WHEN A LU IS TEMPORARILY UNAVAILABLE               *
*                                                                     *
*        ON ENTRY:                                                    *
*                                                                     *
*    REGISTER 1 POINTS AT A PARAMETER LIST CONTAINING THE             *
*            FOLLOWING;                                               *
*              WORD 0 - ACB ADDRESS.                                  *
*              WORD 1 - CID OF LOST TERMINAL                          *
*              WORD 2 - USER FIELD FROM NIB                           *
*              WORD 3 - REASON CODE, AS FOLLOWS:                      *
*                                                                     *
*  0 - DIAL-LINE DISCONNECT (DIAL-IN)            RELEASE (CLSDST)     *
*  4 - DIAL-LINE DISCONNECT (DIAL-OUT)           RELEASE (CLSDST)     *
*  8 - RESERVED                                                       *
*  C - CONTACT WITH LU PERMANENTLY LOST          PROBDEV (CLSDST)     *
* 10 - LU SUCCESSFULLY RECONTACTED               RELEASE + REAQUIRE   *
* 14 - UNCONDITIONAL TERMINATE COMMAND           RELEASE (CLSDST)     *
*    -       "       CHARACTER CODED LOGOFF         "        "        *
*    -       "       TERMSESS                       "        "        *
* 18 - CONTACT WITH LU LOST                      RETURN TO VTAM       *
* 1C - RESERVED                                                       *
* 20 - CONDITIONAL TERMINATE SELF                RELEASE + REACQUIRE  *
*    -     "       CHARACTER CODED LOGOFF           "        "        *
*    -     "       TERMSESS                         "        "        *
* 24 - BUFFER LIMIT DEFINED FOR LU EXCEEDED         "        "        *
* 28 - TEST REQUEST SET                             "        "        *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS                              *
*                                                                     *
*    REGISTER 15 CONTAINS ENTRY ADDRESS                               *
*                                                                     *
***********************************************************************
         SPACE 2
LOSTERM  MHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO    RETURN
         SPACE 1
         LR    R7,R1                   SAVE ACROSS GETRPL
         BAL   R14,GETRPL              GET AN RPL FOR WORK
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         MVC   RPLUSFLD(4),8(R7)       COPY TTE ADDRESS TO RPL
         OI    EXITFLAG,LOSTEX         INDICATE IN LOSTERM EXIT
         MVC   CID,4(R7)               SAVE CID IN RPL/WORKQREA
         MVC   PACKWORK(1),15(R7)      COPY LOSTERM CODE TO WORK AREA
         UNPK  PACKWORK+2(3),PACKWORK(2) UNPACK TO PRINT
         MVC   LOSTMSG+31(2),PACKWORK+2  TO MSG AREA
         TR    LOSTMSG+31(2),TRTAB     MAKE IT PRINTABLE
         L     R3,RPLUSFLD             GET TTE POINTER
         OI    TERMFLG3,TFLOF  FORCE A USER LOGOFF               88188
         ST    R5,TERMCRPL             SAVE A(RPL) IN TTE
         MVC   LOSTMSG+43(8),TERMNAME  TERMINAL LU NAME
         WTO   MF=(E,LOSTMSG)          ISSUE ERROR MSG.
         SPACE 1
***********************************************************************
*        NOW CHECK TO MAKE SURE THAT THE NIB USER FIELD IS CORRECT.   *
*        WOULD NOT BE IF OPNDST DONE WITH WRONG NIBUSER VALUE.        *
***********************************************************************
         SPACE 1
         CLC   CID,TERMCID             CHECK THAT CID'S ARE CORRECT
         BE    LOSTCODE                YES SO GO CHECK CODE     DC18203
         OC    TERMCID,TERMCID         IS IT ZERO (THIS HAPPENS  88179
*                                      WHEN AN OPNDST FAILS FOR DC18203
*                                      FIRST LOGON PRIOR TO     DC18203
*                                      LOSTERM SCHEDULED )      DC18203
         BZ    *+8           JUMP OVER THE BAL                   88179
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
LOSTCODE L     R4,12(R7)               GET LOSTERM ENTRY CODE
         CH    R4,HEX8                 IS IT 0,4 OR 8 ?
         BNH   RELEASE                 YES SO JUST CLSDST DEVICE
         CH    R4,HEXC                 IS IT 12 ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX10                IS IT X'10' ?
         BE    REAQUIRE                YES SO LETS RELEASE + REOPEN
         CH    R4,HEX14                IS IT X'14' ?
         BE    PROBDEV                 YES SO WTO AND CLSDST
         CH    R4,HEX20                IS IT GREATER THAN X'20' ?
         BNL   REAQUIRE                YES SO LETS RELEASE + REOPEN
         B     FREERPL                 X'18' CODE (24), IGNORE, WAIT
*                                       FOR REENTRY WITH X'0C' OR X'10'
         SPACE 1
REAQUIRE OI    FLAGS,RELOPND           INDICATE TO RELEASE
         B     RELEASE
         TITLE '*********  N E T S O L  -  RELEASE TERMINAL SUBRTN'
***********************************************************************
*                                                                     *
*        RELEASE THE TERMINAL, AND PERHAPS RE-ACQUIRE IT.             *
*                                                                     *
*        THERE ARE THREE ENTRY POINTS TO THIS ROUTINE.                *
*                                                                     *
*        'LOGOFF' IS USED WHEN THE USER ISSUES A LOGOFF COMMAND TO    *
*        NETSOL. THE TERMINAL IS RELEASED.                            *
*                                                                     *
*        'QSESSION' IS USED WHEN A CLSDST(PASS) FAILS BECAUSE A QUEUED*
*        SESSION REQUEST IS OUTSTANDING FOR THIS TERMINAL FROM THE    *
*        REQUESTED APPLICATION. THE TERMINAL IS RELEASED AND THEN     *
*        A SIMLOGON IS ISSUED TO REACQUIRE THE TERMINAL WHEN IT       *
*        IS RELEASED BY THE APPLICATION.                              *
*                                                                     *
*        'PROBDEV' WILL WTO AND RELEASE THE DEVICE BECAUSE OF AN I/O  *
*        PROBLEM.                                                     *
*                                                                     *
*        'RELEASE' WILL RELEASE THE DEVICE AND, IF THERE IS A TEST    *
*        REQUEST SET, 'RELEASE' WILL REACQUIRE THE DEVICE.            *
*                                                                     *
*        REGISTER 5 (PTRRPL) WILL POINT TO AN RPL.                    *
*                                                                     *
***********************************************************************
         SPACE 2
LOGOFCMD L     R3,RPLUSFLD   RELOAD TTE POINTER FOR PA1 ENTRY    88220
         BAL   R14,UTERMOF   RESET LOGON/PRIVIES                 88179
         AIF   ('&LOCAL' NE 'PID').NOLOFEX                       92300
         ICM   R4,15,TERMLOUD  PRIOR LOGON ?                     88179
         BZ    LOGFLOUD      NO                                  88179
         MODESET KEY=ZERO    GET PRIVILEGED                      90008
         NI    A$LFLG2-A$LOUD(R4),255-A$LFLOG  RESET FORCE REQ.  90008
         MODESET KEY=NZERO   GET NORMAL                          90008
         XC    A$SVCRB(A$SLENRB),A$SVCRB  USE AS ACCT SVC PARM   88179
         MVC   A$SID,=C'A$RB'                                    88179
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88179
         MVC   A$SBUFR,TERMLOUD  COPY LOUD                       88179
         LA    R1,A$SVCRB                                        88179
         SVC   249           CANCEL SESSIONS AND USER LOGON      88179
.NOLOFEX SPACE 1                                                 91195
LOGFLOUD CLC   =C'NT',TERMNAME  ONE OF OUR NTO TERMINALS ?       86356
         BE    LOGOFOK       YES; MEANINGFUL REQUEST             86356
         CLC   =C'PA',TERMNAME  PROTOCOL CONVERTER SYSTEM A?     89338
         BE    LOGOF71       YES                                 88311
         CLC   =C'PB',TERMNAME  PROTOCOL CONVERTER SYSTEM B?     89338
         BE    LOGOF71       YES                                 88311
         CLI   TERMNAME,C'D' DIAL-UP CONNECTION ?                88311
         BE    LOGOFOK       YES; DON'T RECONNECT (FREE PU)      88311
   B SETPASOF  *****DEBUG***** TREAT AS LOCK                     92317
         OI    FLAGS,RELOPND  CLOSE AND RE-ACQUIRE THE DEVICE    88192
         B     RELEASE       RELEASE THE DEVICE                  88192
LOGOF71  LA    R0,L'HANG7171   GET CX-80/IBM 7171/HYDRA DISCONNECT
         LA    R1,HANG7171                                       88311
         STH   R0,GPDATAL    STASH LENGTH                        88311
         ST    R1,GPDATAP    AND ADDRESS                         88311
         LA    R0,MSG19      IDENTIFY POT-LUCK MESSAGE           88311
         B     SENDMSG       JOIN COMMON                         88311
HANG7171 DC    X'F1C370C2A8852B5B4B'  DISCONNECT REQUEST         88311
         SPACE 1                                                 88311
LOGOFOK  OI    FLAGS,LOGOFF            INDICATE CLSDST TO RELEASE THE
*                                      TERMINAL.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
QSESSION OI    FLAGS,SIMLOG            INDICATE CLSDST THEN SIMLOGON
*                                      THE CLSDST RELEASE MUST BE DONE
*                                      SINCE THE CLSDST PASS FAILED.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
PROBDEV  OI    FLAGS,BADEVICE          TURN ON  FLAG FOR WTO.
         B     RELCODE                 GOTO RELEASE CODE
         SPACE 1
BADLU    MVC   LISTWTO8+17(8),TERMNAME ADD TERMNAME TO ERROR MSG
         WTO   MF=(E,LISTWTO8)         WRITE ERROR MSG
         MVC   CID,TERMCID             MOVE CID INTO RPL FOR LATER USE
         B     RELCODE                 GO TO RELEASE CODE
         SPACE 1
RELEASE  TM    FLAGS,RELOPND           IS RELEASE A PRELUDE TO
         BO    CLOSEREL                 REOPEN?
*                                      NO. SIMPLY RELEASE IT
*                                      YES. MUST SAVE SYMBOLIC
*                                       NAME FOR LATER REOPEN
*                                      NOTE: THIS CAN OCCUR
*                                       FOR READ(ANY)/CHECK
*                                       ERROR HANDLING.
RELCODE  L     R3,RPLUSFLD             -> TTE FROM RPL
         SPACE 1
         TM    FLAGS,BADEVICE          IS WTO BIT ON ? NO, DON'T WTO
         BZ    CLOSEREL
         NI    FLAGS,255-(BADEVICE)    YES WTO BIT ON THEN
*                                       TURN WTO FLAG OFF.
         MVC   LISTWTO+17(8),TERMNAME  MOVE DEVICE NAME INTO
*                                      THE MESSAGE AREA OF
*                                      THE LIST FORM OF WTO.
         WTO   MF=(E,LISTWTO)          EXECUTE FORM OF WTO
         SPACE 1
CLOSEREL OI    MACFLAGS,CLSREL         INDICATE DOING CLOSE(REL
***********************************************************************
*        CLSDST RELEASE WILL BE DONE FOR THE TERMINAL BY SPECIFYING   *
*        THE TERMINAL NAME IN THE NIB. THE NIB IS USED BECAUSE THE    *
*        CLSDST(RELEASE) CAN BE DONE FROM THE LOGON EXIT BEFORE A     *
*        SESSION HAS BEEN ESTABLISHED. IN THIS CASE, THE CID WOULD BE *
*        REJECTED BY VTAM IF USED IN THE CLSDST(RELEASE).             *
***********************************************************************
         L     R15,=A(FRESHNIB)  GET FRESH ASYNCH NIB            87131
         MVC   NIBSTART(NIBLNIB),0(R15)   INITIALIZE NIB         87131
         LA    PTRNIB,NIBSTART         -> NIB
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              SAVE A(TTE) IN NIB
         MVC   NIBSYM(8),TERMNAME      MOVE TERMINAL NAME TO NIB
CLOSERET OI    MFLAGS,CLSDST   SET FLAG - CLSDST IN PROGRESS     90127
         L     R7,=A(CDSTEND1)  SET EXIT ADDRESS                 90141
         CLSDST RPL=(PTRRPL),                                          X
               EXIT=(R7),    CDSTEND1                                  *
               OPTCD=RELEASE,                                          X
               NIB=NIBSTART
         SPACE 1
         NI    MFLAGS,255-(CLSDST)     INDICATE CLOSE DONE
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    CLOSERET                YES. REISSUE              90127
         LTR   R15,R15                 CLSDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  CLSDST(RELEASE) END EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE CLSDST(RELEASE)                        *
*        ENTRY IS FROM THE CLSDST(RELEASE) IN THE RELEASE RTN.        *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
CDSTEND1 XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,CLSDST           TELL ERREXIT THAT ERROR
*                                       IS FOR CLSDST(RELEASE)
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(CLSDST)
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR CLSDST(RELEASE)                                  *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   0C    0B    REQUEST CANCELLED BY CLSDST          14  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    52    NIB INVALID                          SNOCCUR          *
*   14    60    INVALID LU NAME                      14  00           *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLAG,CLOSEX         INDICATE IN CLOSE REL EX
         CH    R15,HEX14               HIGHEST POSSIBLE ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB9(R15)            CHECK VALID ACTIONS
ERRTAB9  B     R0CHK9               0  PROBABLY RELEASED IT
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  ALREADY RELEASING, NEW
*                                       RELEASE WON'T HELP
         BAL   R7,SNOCCUR           C  NO MSG TO WRITE AND
*                                       PROBABLY COULDN'T
*                                       ANYWAY
         B     CLOSEREL            10  REISSUE.
         B     FREERPL             14  IT COULD BE THAT NETSOL
*                                       NO LONGER HAS THE
*                                       DEVICE SINCE IT WAS
*                                       ALREADY FREED BY A LOSTERM,
*                                       RELREQ OR READEND
*                                       REQUEST.
         SPACE 1
R0CHK9   DS    0H
         LTR   R0,R0                   VALID COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         EJECT
***********************************************************************
*                                                                     *
*  AFTER RELEASING THE TERMINAL, IT MAY BE NECESSARY TO               *
*  RE-ACQUIRE IT, OR AT LEAST ATTEMPT TO RE-ACQUIRE IT, FOR THE       *
*  FOLLOWING REASONS:                                                 *
*                                                                     *
*    THE OTHER APPLICATION MAY CANCEL ITS REQUEST FOR THE             *
*    TERMINAL AFTER NETSOL'S RELREQ EXIT HAS ISSUED THE               *
*    CLSDST(RELEASE), BUT BEFORE LOGGING ONTO THE TERMINAL.           *
*    IN THIS CASE NETSOL WISHES TO RE-ACQUIRE THE TERMINAL.           *
*    THE TERMINAL WILL ONLY BE ACQUIRED BY NETSOL IF THE              *
*    OTHER APPLICATION HAS NOT ALREADY LOGGED ON THE TERMINAL.        *
*                                                                     *
*    THE TERMINAL MAY HAVE BEEN RELEASED BECAUSE IT WAS LOGGED        *
*    ON TO NETSOL WHEN THE TEST REQUEST KEY WAS SET.  THIS            *
*    BLOCKS ALL FURTHER I/O TO THE DEVICE, INCLUDING ENTRY OF         *
*    A LOGON SEQUENCE NECESSARY TO PASS THE DEVICE TO TOLTEP.         *
*    NETSOL MUST RELEASE, THEN RE-ACQUIRE THE DEVICE SO THAT          *
*    I/O IS NO LONGER BLOCKED.                                        *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVI   TERMFLG2,TREL           MARK TERM RELEASED
         TM    FLAGS,LOGOFF            LOGOFF COMMAND ISSUED?
         BO    FREERPL                  YES => FINISHED
         TM    FLAGS,SIMLOG            NOW DO SIMLOGON?
         BO    SIMLOGON                 YES => BR TO SIMLOGON CODE
         TM    FLAGS,RELOPND           RELEASE DEVICE ONLY ?
         BZ    FREERPL
         NI    FLAGS,255-(RELOPND)
         LA    PTRNIB,NIBSTART         POINT TO THE NIB
         L     R3,RPLUSFLD             -> TTE FOR THE NAME
         MVC   NIBSYM(8),TERMNAME      GET THE SYMBOLIC NAME
         SPACE 1
***********************************************************************
*  MUST USE NIB WITH SYMBOLIC TERMINAL NAME BECAUSE THE CID IS        *
*  NO LONGER VALID AFTER DEVICE IS RELEASED.  OPNDST(SPEC)            *
*  MUST HAVE A SYMBOLIC TERMINAL NAME SUPPLIED.                       *
***********************************************************************
         SPACE 1
REOPEN   DS    0H                      USE THIS LABEL FOR ERREXIT
         L     R3,RPLUSFLD             -> TTE
         ST    R3,NIBUSER              -> TTE IN NIB FOR FUTURE RPLS
         OI    MACFLAGS,OPNDACQ        SET OPNDST ISSUED
         OI    MFLAGS,OPNDSPEC         SET OPNDST IS CURRENTLY ACTIVE
         OPNDST RPL=(PTRRPL),                                          X
               OPTCD=(SPEC,ACQUIRE),                                   X
               EXIT=OPNAQRX,                                           X
               NIB=NIBSTART
         NI    MFLAGS,255-(OPNDSPEC)   OPNDST(SPEC) COMPLETED
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    REOPEN                  YES. REISSUE
         LTR   R15,R15                 OPNDST ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RETURN                  GO BACK TO VTAM AND
*                                      WAIT FOR EXIT TO BE SCHEDULED
         TITLE '*********  N E T S O L  -  OPNDST (SPEC,ACQUIRE) EXIT'
***********************************************************************
*                                                                     *
*        CHECK VALIDITY OF THE OPNDST                                 *
*        ENTRY IS FROM THE OPNDST IN THE CLSDST END EXIT.             *
*                                                                     *
*        REGISTER 1 - POINTS TO THE RPL USED.                         *
*        REGISTER 15 - BASE REGISTER                                  *
*                                                                     *
***********************************************************************
         SPACE 2
OPNAQRX  XHEAD ,                                                 90141
         TM    UFLAGS,UFGIGNER         SHUTDOWN IN PROGRESS?     86065
         BO     RETURN
         LR    PTRRPL,R1               POINT TO THE INPUT RPL
         LA    R13,RPLSAVE             R13 -> SAVE AREA IN THE RPL
         OI    MFLAGS,OPNDSPEC         TELL ERREXIT THAT ERROR
*                                       IS FOR OPNDST
         CHECK RPL=(PTRRPL)            CHECK FOR ERROR, ERREXIT
*                                       IS ENTERED IF ERRORS HAVE
*                                       OCCURRED
         NI    MFLAGS,255-(OPNDSPEC)    RESET ERROR EXIT INFO
         SPACE 2                                                 90120
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR OPNDST(SPEC,ACQUIRE)                             *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*   10    00    DEVICE UNAVAILABLE                   14  00           *
*   10    03    VTAM IS HALTING                      SNOCCUR          *
*   10    05    PERMANENT FAILURE IN PATH            08  00           *
*   10    06    AUTO NETWORK SHUTDOWN                08  00           *
*   10    0A    APPARENT VTAM ERROR                  SNOCCUR          *
*   10    0E    ABEND IN VTAM                        SNOCCUR          *
*   14    12    CLSDST IN PROGRESS                   14  00           *
*   14    53    NODE UNKNOWN TO VTAM                 14  00           *
*   14    55    NO OPNDST AUTHORIZATION              SNOCCUR          *
*                                                                     *
***********************************************************************
         SPACE 2
         OI    EXITFLG2,OPNACQX        INDICATE OPNDST EXIT ENTERED
         CH    R15,HEX14               HIGHEST VALID ACTION
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     ERRTAB7(R15)            CHECK VALID ACTIONS
ERRTAB7  B     R0CHK7               0  CHECK IF DEVICE ACCEPTED
         BAL   R7,SNOCCUR           4
         BAL   R7,SNOCCUR           8  CAN'T RELEASE IF CAN'T
*                                       GET IT
         B     FREERPL              C  CAN'T WRITE MSG IF NOT    88304
*                                      CONNECTED (WAS SNOCCUR)
         B     OPNAROPN            10  REISSUE. NO NEED TO       90141
*                                       CHECK FOR RESET
         B     FREERPL             14  A NORMAL CASE.  FAILED
*                                       TO RECONNECT DEVICE.
         SPACE 1
R0CHK7   DS    0H
         CH    R0,HEX8                 TERMINAL RECONNECTED?
         BE    FREERPL                 NO. THIS IS WHAT IS
*                                       WANTED.  CONTINUE
*                                       WITH OTHER DEVICES.
         LTR   R0,R0                   SUCCESSFUL COMPLETION?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R3,RPLUSFLD             -> TTE
         MVI   TERMFLG2,TOPEN             MARK TERM ON NETSOL
         OI    FLAGS,FIRSTSND
         B     RESEND
         SPACE 1                                                 90141
OPNAROPN L     R7,=A(CDSTEND1)  SET BASE FOR REOPEN              90141
         B     REOPEN-CDSTEND1(R7)  RE-ISSUE SEND                90141
         SPACE 1                                                 90141
***********************************************************************
*                                                                     *
*        CONSTANTS FOR NETSOLEX CSECT ADDRESSABILITY                  *
*                                                                     *
***********************************************************************
EXMAIN   DC    A(NETSOL70)   MAIN BASE ADDRESS                   90141
         TITLE '*********  N E T S O L  -  RESEND ROUTINE'
***********************************************************************
*                                                                     *
*        RESEND (REISSUE A SEND)                                      *
*                                                                     *
*   THIS ROUTINE IS USER BY THE SENDEND EXIT , RECEND EXIT ,          *
*   RELEASE EXIT TO REISSUE THE 'GOOD MORNING ' MESSAGE               *
*   AFTER RECEIVING A BAD LOGON OR RECOVERING AN LU                   *
*                                                                     *
***********************************************************************
NETSOL70 CSECT ,             COMMON SUBROUTINES                  90141
         SPACE 2
RESENDSG NI    RPLOPT12,FF-RPLFMHDR CLEAR FM HDR BIT             89338
         OI    FLAGS,FIRSTSND  TRY NEW BRACKET                   89338
RESENDAP L     R3,RPLUSFLD   GET THE TTE BACK                    88179
         TM    TERMFLG3,TFAPL  FORCED LOGON ?                    88220
         BNZ   RESENDAC      YES                                 88179
         OC    TERMDAPL,TERMDAPL  ALTERNATE FORCED ID ?          88179
         BZ    RESEND        NO; JUST REFRESH THE DISPLAY        88179
RESENDAC XC    GPDATAL,GPDATAL  CLEAR OPTIONAL DATA              88179
         L     R7,=A(OPENEND)  SET BASE FOR AUTOTIME             90141
         B     AUTOTIME-OPENEND(R7)  RETRY APPLICATION CONNECT   88179
RESEND   NI    RPLRH3,X'FF'-RPLBB      SWITCH OFF BB             86160
OPSEND   SLR   R0,R0                                             86160
         L     R3,RPLUSFLD   GET TTE PTR BACK                    86160
         ICM   R0,1,TERMMSGX  REPEAT PRIOR MESSAGE ?             86160
         BNM   OPSEND2       NO                                  86160
         MVI   TERMMSGX,0    CLEAR OUT                           86160
         B     SENDMSG       GO TO SEND IT                       86160
OPSEND2  TM    UFLAGS,UFGSYS SYSTEMS ONLY ?                      88220
         BZ    OPSEND20      NO                                  88220
         TM    TERMFLG3,TPRIVY  SYSTEMS UNLOCK ?                 88220
         BZ    OPSEND13      NO; SEND 'CLOSED'                   88220
OPSEND20 LA    R0,MSG20      SET FOR LOGON SCREEN                88179
         TM    TERMFLG3,TFREQ  LOGON REQUIRED ?                  88179
         BZ    OPSEND12      NO                                  88179
         TM    TERMFLG3,TFLON  LOGON PERFORMED ?                 88179
         BZ    OPSENDCM      NO; SOLICIT LOGON                   88179
OPSEND12 LA    R0,MSG12      REGULAR APPLICATION MENU            88179
         TM    TERMFLG3,TFAPL  FORCED APPLICATION ?              88220
         BNZ   OPSEND13      YES                                 88220
         CLI   TERMDAPL,0    DEDICATED APPLICATION ?             87137
         BE    OPSENDCM      NO; ISSUE NORMAL MENU               88220
OPSEND13 LA    R0,MSG13      ELSE USE NASTIER SCREEN             86065
OPSENDCM B     SENDMSG
         TITLE '*********  N E T S O L  -  ADD TIME AND NODE NAME TO MEX
               SSAGE'
*        A LITTLE SUBROUTINE TO PUT NODE AND TIME IN MESSAGE 12
*          ***** RETURNS TO REG 14 ******
         SPACE 1
TIMETERM STM   R0,R1,TIMESAVE          SAVE REGS
         ICM   R1,15,DDTTERM   -> TERM FIELD IN MSG 12           86065
         BZ    TIMETERN      SKIP NAME INSERTION                 86065
         MVC   0(8,R1),TERMNAME        INSERT NODE NAME
         SPACE 1
*        PLACE TIME IN MESSAGE 12
         SPACE 1
TIMETERN TIME  DEC           * DONE BEFORE TEST - SAVE R1 *
         SRL   R0,12         MAKE 000HHMMS                       88220
         STM   R0,R1,TIMEWORK  TIME STASHED AS 000HHMMS DDYYY    88220
         OI    TIMEWORK+3,X'0F'  CLOBBER SECONDS BY SIGN         88220
         ICM   R1,15,DDTTIME  -> TIME FIELD IN MSG 12            86065
         BZ    TIMETERT      SKIP IF NO ROOM                     86065
         MVC   7(7,R1),=X'402120204B2020'  0HH.MM MASK           88220
         ED    7(7,R1),TIMEWORK+1   MAKE TIME                    88220
         MVC   0(7,R1),=X'F021204B202020'  YY.DDD                88220
         ED    0(7,R1),TIMEWORK+5  MAKE DATE                     88220
         MVI   0(R1),C' '    CLEAR HUNDREDS                      88220
         TM    TERMFLG3,TPRIVY  UNLOCKED TERMINAL ?              87187
         BNZ   *+8           YES; LEAVE PERIOD                   87187
         MVI   7+4(R1),C':'  ELSE INDICATE LOCKED (:)            88220
TIMETERT LM    R0,R1,TIMESAVE          RESTORE THE WORKERS
         BR    R14                     RETURN TO REQUESTOR
TIMEWORK DC    F'0'
TIMESAVE DC    2F'0'                    SAVE R0 + R1 HERE
         TITLE '*********  N E T S O L  -  GET/FREE AN RPL ROUTINES'
***********************************************************************
*                                                                     *
*        THE GETRPL SUBROUTINE GETS A NEW RPL VIA A GETMAIN MACRO     *
*        FOR 'LNGTHRPL' IN SUBPOOL 1. IT THEN INITIALIZES IT AND      *
*        RETURNS TO THE CALLER WITH THE RPL ADDRESS IN R5.            *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 10-12 - BASE REGISTERS                             *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*        OUTPUT REGISTERS:                                            *
*                                                                     *
*              REG 0-1 - UNPREDICTABLE                                *
*              REG 5   - ADDRESS OF AN INITIALIZED RPL/NIB/WORKAREA   *
*                                                                     *
***********************************************************************
         SPACE 2
GETRPL   DS    0H
         L     R0,LNGTHRPL             LENGTH OF RPL + SUBPOOL
         GETMAIN R,LV=(0)              G E T M A I N    R P L
         MVC   0(8,R1),=CL8'DYNAMRPL'  IDENTIFY THE RPL AS DYNAMIC
         LA    PTRRPL,8(,R1)           R5 -> R P L
         L     R15,=A(FRESHNIB)  POINT TO ASYNCH NIB/RPL         87131
         MVC   IFGRPL(LNIFGRPL),FRESHRPL-FRESHNIB(R15)  COPY RPL 87131
*                                      NOTE: THIS MAKES RPL ASYNCH
         MVC   NIBDMPID(8),=CL8'DYNAMNIB' SET NIB DUMP ID
         MVC   NIBSTART(NIBLNIB),0(R15) INITITIALIZE NIB         87131
         XC    WORKSPAC(WORKRPLA),WORKSPAC ZERO OUT KEY WORK AREA STUFF
         STM   R0,R1,TIMESAVE          SAVE WORK REGS
         TIME  DEC                      SAVE TIMESTAMP
         STM   R0,R1,GRPLTIME            IN RPL WORKAREA
         LM    R0,R1,TIMESAVE             RESTORE WORK REGS
         BR    R14                     RETURN TO CALLER
         SPACE 3                                                 90120
***********************************************************************
*                                                                     *
*        FREERPL IS ENTERED WHEN AN RPL/WORKAREA IS NOLONGER          *
*        NEEDED BY THE EXIT ROUTINES.  IT ISSUES A FREEMAIN           *
*        MACRO FOR THE RPL ADDRESS IN REGISTER 5.                     *
*        IF THE FIRST 8 CHARACTERS OF THE WORKAREA ARE NOT 'DYNAMRPL' *
*        THEN THIS SUBROUTINE BRANCHES TO INDICATE A USER 0008 ABEND. *
*                                                                     *
*        AT EXIT FROM FREERPL, CONTROL IS RETURNED TO VTAM.           *
*                                                                     *
*        INPUT REGISTERS                                              *
*          R5  - POINTS TO RPL/WORKAREA TO BE FREED                   *
*          R10-R12 - BASE REGISTERS                                   *
*          R13 - ADDRESS OF REGISTER SAVE AREA                        *
*                                                                     *
***********************************************************************
         SPACE 2
FREERPL  ICM   R3,15,RPLUSFLD  LOAD AND TEST TTE ADDRESS         88185
         BZ    *+10                      THEN
         XC    TERMCRPL,TERMCRPL              RESET A(RPL) IN TTE
         L     R0,LNGTHRPL             LENGTH OF RPL TO BE FREED
         S     R5,=F'8'                REDUCE FOR INDENTITY AT FRONT
         CLC   0(8,R5),=CL8'DYNAMRPL'  IS IT A DYNAMIC RPL ?
         BNE   TOOSMALL                NO, ISSUE U0008 ABEND
         SPACE 1
         FREEMAIN R,LV=(0),A=(5)       F R E E   R P L  -> R5
         SPACE 1
RETURN   DS    0H
         L     R14,RETVTAM@            RESTORE EXIT RETURN ADDRESS
         BR    R14                     RETURN
         SPACE 1
LNGTHRPL DC    0F'0',AL1(1),AL3(ENDSECT-STSECT+8)  RPL SUBPOOL/LENGTH
         TITLE '*********  N E T S O L  -  RECEIVE(ANY) SUBROUTINE'
***********************************************************************
*                                                                     *
*                   RECEIVE (ANY)                                     *
*                                                                     *
*        THIS SUBROUTINE IS ENTERED ONLY WHEN A REC (ANY) IS TO       *
*        BE ISSUED.                                                   *
*                                                                     *
*        INPUT REGISTERS:                                             *
*                                                                     *
*              REG 5     - POINTS TO AN ASYNCHRONOUS RPL PLUS         *
*                          ITS WORKAREA                               *
*              REG 14    - CALLER'S RETURN ADDRESS                    *
*                                                                     *
*         OUTPUT REGISTERS:                                           *
*                                                                     *
*               REG 0-1   - UNPREDICTABLE                             *
*               REG 2-14  - VALUE AT INPUT                            *
*               REG 15    - UNPREDICTABLE                             *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
RECSUB   DS    0H
         ST    R14,SUBSAV14            SAVE RETURN ADDR
RECANY   OI    MFLAGS,RECA             INDICATE READ(ANY) IN PROGRESS
         RECEIVE RPL=(PTRRPL),OPTCD=(ASY,ANY,TRUNC,Q),                 X
               AREA=IOAREA,AREALEN=L'IOAREA,EXIT=RECEND,               X
               RTYPE=(DFSYN,RESP,DFASY)  ALLOW ATTENTIONS        89335
         NI    MFLAGS,255-(RECA)
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR RECEIVE(ANY):                                    *
*                                                                     *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
*                                       (ONLY POSSIBLE ERROR)
         BE    RECANY                  YES. REISSUE
         LTR   R15,R15                 READ-ANY ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND TEST)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
         L     R14,SUBSAV14            RESTORE THE RETURN ADDR
         BR    R14                     RETURN TO CALLER
         TITLE '********* N E T S O L  -  LUSTAT ROUTINE'
***********************************************************************
*       ROUTINE TO HANDLE LOGICAL UNIT STATUS RECEIVED                *
*                                                                     *
*    SSENEEI  SSENSMI                                                 *
*      00        02       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      00        02          SNOCCUR                                  *
*      08        1C       DEVICE NOW AVAILABLE  SEND +VE RESPONSE     *
*      08        2B         "     "     "        "    "    "  (RESEND)*
*      08        31       DEVICE POWERED OFF     "    "    "          *
*      08        01          SNOCCUR                                  *
*                                                                     *
***********************************************************************
         SPACE 1
LUSTATUS DS    0H
         OI    FLAGS,LUSTATE           SEND +VE RESPONSE
         OI    MFLAGS,LUSEND
         MVC   SENSE(2),RPLSSEI   SAVE SSENSEI + SSENSMI
         MVC   USENSE(2),RPLUSNSI SAVE USSESEI(2 BYTES)
         NI    RPLOPT12,FF-RPLFMHDR CLEAR FM HDR BIT
         SPACE 1
SENDLU   L     R7,=A(SENDEND)                                    90141
         SEND  STYPE=RESP,CONTROL=LUS,RESPOND=(NEX,FME,NRRN),          *
               RPL=(PTRRPL),POST=SCHED,OPTCD=(ASY,CA),EXIT=(R7)  90141
         NI    MFLAGS,255-(LUSEND)     SEND DONE
         SPACE 1
***********************************************************************
*                                                                     *
*  ERROR ACTIONS FOR SEND                                             *
*                                                   ACTION            *
*  RTNCD FDBK2                                      CODE(S)           *
*  CODE  CODE         MEANING                       RETURNED          *
*                                                  (R15  R0)          *
*                                                                     *
*   00    00    SUCCESSFUL COMPLETION                00  00           *
*   08    00    TEMP STORAGE ALLOCATION FAILURE      10  00           *
*                                                                     *
***********************************************************************
         SPACE 1
         CH    R15,HEX10               VTAM BUFFERS FULL?
         BE    SENDLU                  YES. REISSUE
         LTR   R15,R15                 WRITE ACCEPTED?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LTR   R0,R0                   ACCEPTED? (2ND CHK)?
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B    RETURN                   RETURN TO VTAM
         SPACE 1
CONTLU   NI    FLAGS,255-(LUSTATE)     LUSTAT SEND DONE
         CLC   SENSE,LUS0001           IS DEVICE NOW AVAILABLE
         BE    RESEND                  YES SO SEND LOGON MSG.
         CLC   SENSE,LUS082B           IS DEVICE NOW AVAILABLE
         BE    RESEND
*LOOPS*  CLC   SENSE,LUS0831 POWERED OFF ?                       89344
*LOOPS*  BE    RESEND        YES; BETTER ERROR RECOVERY ON INT.REQ.
         B     FREERPL
         SPACE 1                                                 90141
         LTORG ,                                                 90141
         TITLE '*********  N E T S O L  -  ERROR EXIT RTN'
***********************************************************************
*                                                                     *
*    THIS ROUTINE IS ENTERED IF AN ERROR IS DETECTED.                 *
*                                                                     *
*        INPUT REGS:                                                  *
*                                                                     *
*    REGISTER 0 CONTAINS A RTNCD CODE (4, 8, C, 10, 14, 18)           *
*                                                                     *
*    REGISTER 1 POINTS TO THE RPL OF THE REQUEST                      *
*                                                                     *
*           THE FDBK2 FIELD OF THIS RPL CONTAINS A REASON             *
*           CODE WHICH IS A SUBCODE OF THE RTNCD CODE IN              *
*           REGISTER 0.                                               *
*                                                                     *
*    REGISTER 2 - 12 UNMODIFIED BY VTAM                               *
*                                                                     *
*    REGISTER 13 POINTS TO THE SAVE AREA IN USE                       *
*                                                                     *
*    REGISTER 14 CONTAINS RETURN ADDRESS TO VTAM                      *
*                                                                     *
*    REGISTER 15 ERREXIT ROUTINE ADDRESS                              *
*                                                                     *
*                                                                     *
*                                                                     *
*    EXIT FROM ERREXIT IS AS FOLLOWS:                                 *
*                                                                     *
*           THRU ERRETURN TO VTAM, WHICH WILL RETURN TO THE           *
*           MAINLINE OR EXIT ROUTINE NSI.                             *
*                                                                     *
*           TO SNOCCUR, WHICH WILL ABNORMALLY TERMINATE               *
*           NETSOL.                                                   *
*                                                                     *
*           TO PROBDEV.                                               *
*                                                                     *
*                                                                     *
*        OUTPUT REGS:                                                 *
*                                                                     *
*    REGISTER  1-9  UNPREDICTABLE                                     *
*                                                                     *
*    REGISTER 10-12 NETSOL BASE REGISTERS                             *
*                                                                     *
*    REGISTER 13    SAVE AREA UPON ENTRY                              *
*                                                                     *
*    REGISTER 14    UNPREDICTABLE IF EXIT TO SNOCCUR OR               *
*                    RETURN.                                          *
*                   VALUE AT INPUT IF RETURN TO VTAM.                 *
*                                                                     *
*    REGISTER 15    THE INPUT RTNCD CODE IF ERREXIT WAS               *
*                   ENTERED FROM MAINLINE NETSOL.                     *
*                   AN ACTION CODE IF ENTERED FROM AN EXIT            *
*                    ROUTINE.                                         *
*                                                                     *
*    REGISTER  0    UNPREDICTABLE IF ENTERED FROM MAINLINE            *
*                    NETSOL.                                          *
*                   AN ACTION CODE MODIFIER IF ENTERED FROM AN        *
*                    EXIT ROUTINE.                                    *
*                                                                     *
*        NOTE: REGISTERS 0 AND 15 WILL BE RETURNED THRU VTAM          *
*              TO MAINLINE OR EXIT ROUTINE NSI.                       *
*    DESCRIPTION OF ACTION CODES AND FLAGS                            *
*                                                                     *
*                                                                     *
*        THE ERREXIT ROUTINE COMMUNICATES TO THE ERROR EXIT NSI       *
*        VIA AN ACTION CODE SET IN REG 15 AND, IN SOME CASES,         *
*        AN ACTION CODE MODIFIER SET IN REG 0. IN SOME SPECIAL        *
*        CASES, FLAGS ARE SET TO PASS INFORMATION TOO.                *
*                                                                     *
*        THE ACTION CODES AND MODIFIERS INDICATE APPROPRIATE          *
*        ACTIONS TO BE TAKEN BY THE EXIT ROUTINE. THE EXIT            *
*        ROUTINE MAY, HOWEVER, HANDLE THE ERROR ACTION                *
*        DIFFERENTLY FROM WHAT ERREXIT INDICATES BY ITS ACTION        *
*        CODE, IF IT SO CHOOSES.                                      *
*                                                                     *
*        ACTION CODES AND MODIFIERS ARE AS FOLLOWS:                   *
*                                                                     *
*            00 MACRO COMPLETED SUCCESSFULLY                          *
*               REG 0 MODIFIER=0                                      *
*                                                                     *
*            04 THIS IS A SNO (SHOULD NOT OCCUR) WHICH WILL NOT       *
*               BE SET BY THE ERROR EXIT. IF THIS IS SET AT           *
*               NSI, THE NETWORK SOLICITOR SHOULD ABNORMALLY          *
*               TERMINATE.                                            *
*                                                                     *
*TORELES     08 BRANCH TO RELEASE                                     *
*RELONLY        REG 0 MODIFIER=0 CLSDST                               *
*REL1ST                        4 CLSDST + OPNDST (AQUIRE)             *
*                                                                     *
*TOSEND     0C BRANCH TO SENDMSG                                      *
*               REG 0 MODIFIER=MESSAGE NUMBER                         *
*                                                                     *
*REISSU        10     REISSUE THE REQUEST                             *
*                                                                     *
*TOENDREQ    14 BRANCH TO FREERPL                                     *
*                                                                     *
*TORESEND    18 RESEND                                                *
*RSETSOL     1C SNOCCUR                                               *
*                                                                     *
*TOPROBDV    20 BRANCH TO PROBDEV                                     *
*                                                                     *
*    SINCE NETSOL DOES NOT ISSUE ALL API MACROS, NOT ALL              *
*    RTNCD CODES AND REASON CODES ARE POSSIBLE. THOSE                 *
*    FDBK3 CODES WHICH CAN OCCUR FOR THE MACROS ISSUED ARE            *
*    LISTED WITHIN THE SUBSECTIONS OF ERREXIT FOR EACH                *
*    RTNCD CODE. THIS LIST INCLUDES ANY WHICH MAY BE                  *
*    IMPOSSIBLE BECAUSE OF CURRENT NETSOL LOGIC.  THOSE WHICH         *
*    ARE POSSIBLE ARE INDICATED WITH AN '*'.  BASIC ONLY              *
*    CODES ARE NOT LISTED.                                            *
*                                                                     *
*                                                                     *
*    THE FLAGS SET ARE:                                               *
*                                                                     *
*          LOOPONCE - REISSUE I/O COMMAND ONE MORE TIME. IF           *
*                     THE REISSUED COMMAND IS SUCCESSFUL, THE         *
*                     FLAG MUST BE TURNED OFF BY THE MAINLINE         *
*                     OR EXIT ROUTINE. IF UNSUCCESSFUL,               *
*                     ERREXIT TURNS OFF THE FLAG ON ENTRY TO          *
*                     HANDLE THE FAILURE.                             *
*                                                                     *
*            RELOPND - RELEASE THE DEVICE THEN OPNDST(ACQUIRE)        *
*                      IT, THUS RE-ESTABLISHING A SESSION FOR         *
*                      THAT DEVICE.                                   *
*                                                                     *
*           SHUTDOWN - NETSOL SHUTDOWN IN PROGRESS. IF THIS           *
*                      BIT IS ON AT ENTRY TO AN EXIT ROUTINE          *
*                      OTHER THAN TPEND, NO PROCESSING IS DONE        *
*                      WITHIN THE ROUTINE. THIS WILL RAPIDLY          *
*                      FLUSH EXITS REQUESTS ALREADY SCHEDULED         *
*                      AT THE TIME A NEED FOR SHUTDOWN IS             *
*                      DETECTED.                                      *
*                      NOTE: THIS BIT IS ALSO SET BY THE TPEND        *
*                            EXIT, WHICH HAS BEEN SCHEDULED           *
*                            PRIOR TO ENTRY TO ERREXIT FOR A          *
*                            SHUTDOWN CONDITION.                      *
*                                                                     *
***********************************************************************
         SPACE 2
NETSOLER CSECT ,             SPLIT OFF FOR ADDRESSABILITY        87186
ERREXIT  DS    0H
         BALR  R9,0                                              87186
         USING *,R9          LOCAL BASE                          87186
         SPACE 1
***********************************************************************
*        NO NEED TO ESTABLISH ADDRESSABILITY, SINCE BASE REGISTERS    *
*        HAVE NOT BEEN MODIFIED.  NOTE THAT ALSO PTRRPL POINTS TO RPL *
*        USED IN EXIT ROUTINE, ALTHOUGH IT IS NOT NECESSARILY THE RPL *
*        IN USE WHEN ERREXIT WAS ENTERED, I. E. SYNCHRPL MAY          *
*        HAVE BEEN IN USE FOR INQUIRE (APPSTAT).                      *
***********************************************************************
         SPACE 1
         LR    R7,R0                   SAVE RTNCD CODE TO
*                                       USE AS RETURN CODE IF
*                                       ENTRY FROM MAINLINE.
         SPACE 1
         DROP  R5
         USING IFGRPL,R1               => R P L
         SPACE 1
         LR    R8,R1                   SAVE RPL ADRESS
         LR    R6,R14                  SAVE RETURN ADDRESS
         SPACE 1
***********************************************************************
*        FORMAT THE RPL ERROR FIELDS INTO A READABLE MESSAGE AND      *
*        WRITE THE MESSAGE TO THE OPERATOR. NOTE THAT SOME ERRORS     *
*        WILL NOT BE LOGGED TO THE SYSTEM LOG AS THEY ARE CONSIDERED  *
*        UNIMPORTANT. THE DATA IN ERMDATA ARE AVAILABLE FOR           *
*        DEBUGGING PURPOSES.                                          *
***********************************************************************
         SPACE 1
***********************************************************************
*        BYPASS THOSE ERROR COMBINATIONS DEFINED IN 'ERMSGTAB'        *
***********************************************************************
         SPACE 1
         STM   R3,R5,RPLERRSA     SAVE WORK REGS DURING TABLE SCAN
         TM    UFLAGS,SHUTDOWN+UFGIGNER+UFGREST  SHUTTING DOWN ? 89338
         BNZ   ERMBYPAS      YES, DON'T FLOOD CONSOLE            89338
         MVC   ERMDATA(1),RPLREQ  BUILD                  REQ
         MVC   ERMDATA+1(2),RPLFDBK   ERROR COMPARISON  /RTNCD/FDBK2
         MVC   ERMDATA+3(4),RPLSSEI     FIELD           /SSEI/SSMI/USER
         LM    R3,R5,ERMBXLE      LOAD BXLE REGS
         TM    UFLAGS,INITDLAY  STILL IN START-UP MODE ?         89338
         BZ    *+8           NO                                  89338
         LA    R3,ERMINIT    USE LONGER EXCLUSION LIST           89338
         CR    R3,R5              NULL TABLE?
         BH    ERMSG              YES => DISPLAY ERROR MSG
         SPACE 1
ERMLOOP  MVC   ERMTEMP,ERMDATA    COPY COMPARISON FIELD TO WORKAREA
         NC    ERMTEMP,ERMAND(R3) ZERO IRRELEVANT FIELDS FOR COMPARE
         CLC   ERMTEMP,ERMCODE(R3) A NON-DISPLAY ERROR?
         BE    ERMBYPAS             YES => DON'T DISPLAY ERROR MSG
         BXLE  R3,R4,ERMLOOP        NO  => LOOK AT NEXT TABLE ENTRY
         SPACE 1
***********************************************************************
*        FORMAT AND DISPLAY ERROR MESSAGE                             *
***********************************************************************
         SPACE 1
ERMSG    UNPK  PACKWORK(3),RPLREQ(2)   UNPACK REQUEST CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+33(2),PACKWORK PUT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLRTNCD(2) UNPACK RETURN CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+42(2),PACKWORK PUT IT IN THE MESSAGE
         UNPK  PACKWORK(3),RPLFDB2(2)  UNPACK FEEDBACK 2 CODE
         TR    PACKWORK(2),TRTAB       MAKE IT PRETTY
         MVC   ERRORMSG+51(2),PACKWORK PLACE IN MESSAGE
         UNPK  PACKWORK(9),RPLSSEI(5)  UNPACK SYSTEM SENSE CODES
         TR    PACKWORK(8),TRTAB       PRETTY IT UP
         MVC   ERRORMSG+62(2),PACKWORK TO MESSAGE
         MVC   ERRORMSG+73(2),PACKWORK+2  RPLSSMI CODES TOO
         MVC   ERRORMSG+82(4),PACKWORK+4  RPLUSNSI CODES ALSO
         L     R3,RPLUSFLD             -> TTE FOR TERMINAL NAME
         MVC   ERRORMSG+92(8),TERMNAME TO ERROR MESSAGE AREA
ERMWTO   WTO   MF=(E,ERRORMSG)              WRITE ERROR MSG.
ERMBYPAS LR    R15,R7                  RESTORE R0 RETURN CODE
         LR    R1,R8                   RESTORE RPL ADDRESS
         LR    R14,R6                  RESTORE RETURN ADDRESS
         LM    R3,R5,RPLERRSA          RESTORE WORK REGS
         SPACE 1
***********************************************************************
*        CHECK IF ERREXIT HAS BEEN ENTERED FROM MAIN LINE OR          *
*        EXIT ROUTINE . IF ERROR IN MAIN LINE THEN RETURN VIA         *
*        REGISTER 14, AND UPON RETURN TO MAIN-LINE CODE               *
*        APPROPRIATE ACTION WILL BE TAKEN.                            *
***********************************************************************
         SPACE 1
         LR    R3,R14                  SAVE RETURN ADDR
         C     R1,=A(SETLRPL)  IS THIS A SETLOGON REQUEST ?      88210
         BER   R14                     YES.  IN MAINLINE
*                                       AND RETURN TO VTAM.
         CH    R15,HEX18           18  RPL ECB/EXIT PROBLEM?
         BL    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*                                       OCCUR SINCE SHUTDOWN
*                                       SWITCH STOPS EXITS'
*                                       ACTION PRIOR TO THE
*                                       CLSDSTACB.
*                                      NOTE. CODES HIGHER
*                                       THAN 18 DO NOT EXIST
         SPACE 1
***********************************************************************
*        UPON ENTRY IF R1 IS NOT EQUAL TO R5 (R1 = A(SYNCHRPL) )      *
*        THEN R1'S AND R5'S INFORMATION MUST BE COMBINED.             *
*        THE COMMAND THAT CAUSED THE ERROR WAS                        *
*        ISSUED USING SYNCHRPL AND R5 IS POINTING TO AN               *
*        ASYNCH RPL.  FOR THIS RTN WE NEED SOME INFO IN BOTH.         *
***********************************************************************
         SPACE 1
         CR    R1,R5                   ARE WE USING ONE RPL
         BE    ERRPLOK                 YES, BRANCH
*              MOVE THE NECESSARY INFORMATION FROM THE R5 RPL TO
*              SYNCHRONOUS RPL (R1). THIS IS THE SWITCHES, SAVE AREAS
*              ETC. PRIOR TO THE WORK AREAS.
         L     R14,=A(SYNWORK)  GET WORK AREA                    86145
         MVC   0(WORKRPLA,R14),LNIFGRPL(R5)                      86145
         SPACE 1
***********************************************************************
*        GET THE FDBK2 FIELD FROM THE RPL.                            *
*        PREPARE TO BRANCH BASED ON 'RTNCD'.                          *
***********************************************************************
         SPACE 1
ERRPLOK  DS    0H
         SLR   R6,R6                   CLEAR REG 6  .
         IC    R6,RPLFDB2              PICK UP REASON CODE
         LR    R7,R6                   START TO INITIALIZE R7
*                                       WHICH WILL BE USED AS
*                                       AN INDEX FOR BRANCH
*                                       TABLES
         SLR   R0,R0                   SET UP DEFAULT ACTION CODE
         SPACE 1
***********************************************************************
* TRANSLATE RTNCD CODE AND FDBK2 CODE INTO ACTION CODE                *
*                                                                     *
*   RTNCD CODES HAVE A GENERAL MEANING AS FOLLOWS:                    *
*                                                                     *
*          04   EXTRAORDINARY COMPLETION                              *
*                 FUNCTION COMPLETED. ADDITIONAL INFORMATION          *
*                 AVAILABLE. PROBABLY HANDLED OUT OF LINE.            *
*                 CONDITION SHOULD BE HANDLED BEFORE MAKING           *
*                 FURTHER REQUESTS TO THE DEVICE.                     *
*                                                                     *
*          08   REISSUE                                               *
*                 TEMPORARY ENVIRONMENT CONDITION CAUSED              *
*                 REQUEST TO BE REJECTED.                             *
*                                                                     *
*          0C   DAMAGE                                                *
*                 INTEGRITY OF THE REQUEST OR DEVICE HAS BEEN         *
*                 DISTURBED.                                          *
*                                                                     *
*          10   ENVIRONMENT ERROR                                     *
*                 REQUEST INCOMPLETE DUE TO ENVIRONMENTAL             *
*                 CONDITION. ENVIRONMENT MUST BE ALTERED              *
*                 BEFORE RECOVERY CAN BE ATTEMPTED.                   *
*                                                                     *
*          14   USER LOGIC ERROR                                      *
*                 USER ERROR ON THE REQUEST. REQUEST REJECTED         *
*                 OR INCOMPLETE. NOT EXECUTABLE IN THE                *
*                 PRESENT FORM.                                       *
*                                                                     *
*          18   RPL NOT AN RPL   OR   RPL IS ALREADY ACTIVE.          *
***********************************************************************
         SPACE 1
         B     FEEDTAB(R15)            GO TO FEEDBACK CODE
*                                       HANDLING ROUTINE
FEEDTAB  BAL   R7,SNOCCUR           0  FEEDBACK OF 00 DOESN'T
*                                       ENTER LERAD OR SYNAD
         B     EXTRAORD             4  EXTRAORDINARY COM-
*                                       PLETION
         B     REISSUE              8  REISSUE
         B     DAMAGE               C  DAMAGE
         B     ENVIRON             10  ENVIRONMENT ERROR
         B     LOGIC               14  LOGIC ERROR
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 04 - EXTRAORDINARY COMPLETION                           *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*    03        *  RECEIVE    /   "     "          "     MESSAGE       *
*    04        *  RECEIVE    / EXCP CONDITION INCOMING RESPONSE       *
*                                                                     *
***********************************************************************
         SPACE 2
EXTRAORD DS    0H
         CH    R6,HEX3                 IS IS VALID FDBK2
         BE    VALFDBK2                YES SO HANDLE IT
         CH    R6,HEX4                 IS IT ONLY VALID REASON CODE
         BE    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
* BSC DEVICES UNDER VTAM2 RESPOND WITH ZERO SENSE IN SOME CASES
* TO RECORD MODE MACROS I.E.
* WHEN USER SENSE INCLUDED THE SSENSEI + SSENSMI FIELDS ARE 0
***********************************************************************
         SPACE 1
VALFDBK2 IC    R7,SENSE                SAVE SSENSEI FOR BRANCHING
         LTR   R7,R7                   DO WE HAVE ZERO STATUS?
         BZ    STAT3270                MUST BE STATUS FROM 3270
***********************************************************************
*        CONVERT SENSE CODE INTO BRANCH TABLE OFFSET                  *
***********************************************************************
         SRL   R7,3                    ASSUME X'04' IS INDEX = 0
         SLR   R6,R6                   ZERO INDEX REG
CINDEX4  LTR   R7,R7                   INDEX DONE?
         BZ    BRTAB4                  YES => GO BRANCH
         SRL   R7,1                    NO  => SHIFT NEXT BIT OUT
         LA    R6,4(,R6)                      BUMP INDEX BY 4
         B     CINDEX4                        GET NEXT BIT
BRTAB4   CH    R6,HEX14                INDEX TOO BIG?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         B     RSNTAB4(R6)             GO TO HANDLE SSENSMI
RSNTAB4  BAL   R7,SNOCCUR        <08 (00)  SHOULD NOT OCCUR
         B     REQREJ             08 (04)  REQUEST REJECT
         B     REQERR             10 (08)  REQUEST ERROR
*OLD*    B     STATERR            20 (0C)  STATE ERROR
         B     DORELON            20 (0C)  STATE ERROR - RELEASE 94104
         B     RHERROR            40 (10)  RH ERROR
         B     PATHERR            80 (14)  PATH ERROR
         SPACE 1
***********************************************************************
*                                                                     *
*        08 - REQUEST REJECT                                          *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       08      00                  REISSUE SEND (IN BRACKET)         *
*       08      01                  RELEASE LU                        *
*       08      02                  IGNORE (CONTINUE)                 *
*       08      11                  REISSUE SEND (USER ATTN)     87054
*       08      13                  REISSUE SEND (IN BRACKET)         *
*       08      18           LINK CONNECT/DISCONNECT (RETRY)     86131
*       08      1B                  IGNORE (WAIT FOR LU TO ENTER DATA)*
*       08      1C                  IGNORE                  DC18203   *
*       08      27                  INTERMITTENT ERROR - RETRY   88304
*       08      2B                  REISSUE SEND                      *
*       08      2D                  IGNORE (CONTINUE)                 *
*       08      31                     "       "                      *
*                                                                     *
***********************************************************************
         SPACE 1
REQREJ   IC    R7,SENSE+1              GET SSENSMI
         CH    R7,HEX2                 IS IT POSSIBLE
         BH    TRYHIGH                 >2 TRY FOR HIGH RANGE
         SLL   R7,2          CONVERT INDEX TO OFFSET
         B     RSNTAB5(R7)             HANDLE SSENSMI
         SPACE 1
RSNTAB5  B     DORESEND      0  REISSUE SEND WITHOUT BB          86160
         B     DORELON       1  RELEASE                          86160
         B     DOENDREQ      2  CONTINUE REQUEST (IGNORE)        86160
         SPACE 1
TRYHIGH  CH    R7,HEX13            13  REISSUE SEND
         BE    DORESEND                                          86160
         CH    R7,HEX11      ATTENTION DURING WRITE ?            87054
         BE    DORESEND      YES; RESTART THE WRITE (NASTY)      87054
         SPACE 1                                                 86131
CHK18X   CH    R7,HEX18      LINK DISCONNECT/RECONNECT ?         86131
         BNE   CHK1BX        NO; LOOK FOR OTHERS                 86160
         L     R15,RPLUSFLD  GET TERMINAL BLOCK                  86160
         CLI   TERMMSGX-TERMTABL(R15),X'06'  LOGON MESSAGE ?     86160
         BE    CONTPASS      YES; COMPLETE RELEASE               86160
         OI    TERMMSGX-TERMTABL(R15),X'80' ACTIVATE THE MESSAGE 86160
         B     STATERR       AND TREAT AS STATE ERROR            86160
         SPACE 1
CHK1BX   CH    R7,HEX1B                KEY PRESSED ON TERMINAL ?
         BE    DOENDREQ      YES; IGNORE FOR NOW                 86160
         SPACE 1
CHK1CX   EQU   *                                               DC18203
         CH    R7,HEX1C                                        DC18203
         BE    DOENDREQ      IGNORE FOR NOW                      86160
         SPACE 1                                               DC18203
CHK2BX   CH    R7,HEX2B
         BE    DORESEND      INEGRITY LOST - RETRY               88304
         CH    R7,=Y(X'27')  INTERMITTENT ERROR ?                88304
         BNE   CHK2DX
DORESEND LA    R15,TORESEND        2B  WE SHOULD TRY AGAIN
         B     ERRETURN
         SPACE 1
CHK2DX   CH    R7,HEX2D
         BE    DORELON       TAKE TERM OUT OF SERVICE (ELSE LOOPS)
CHK31X   CH    R7,HEX31            31  DEVICE POWERED OFF       DC18203
         BE    DOENDREQ      YES; IGNORE FOR NOW                 86160
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*                                                                     *
*        10 - REQUEST ERROR                                           *
*                                                                     *
*     SSENSEI/SSENSMI                                                 *
*       10      03                  RELEASE TERMINAL                  *
*       10      XX                  SHOULD NOT OCCUR                  *
*                                                                     *
***********************************************************************
         SPACE 1
REQERR   CLI   SENSE+1,X'03'           FUNCTION NOT SUPPORTED?
***      BE    *+8                          JUMP OVER THE BAL    86012
***      BAL   R7,SNOCCUR                   TELL WHERE WE CAME FROM
         SPACE 1
         STM   R1,R3,RPLERRSA-IFGRPL(R5)  SAVE REG 1 - 3         86160
         L     R3,RPLUSFLD             LOAD A(TTE)
         MVC   MSG1003+17(8),TERMNAME  MOVE NODE NAME TO MSG
         WTO   MF=(E,MSG1003)          WTO ERROR MSG
         L     R1,=A(DDT3270E)  EDS TYPE DEVICE ?                89263
         C     R1,TERMDDT    OR DID SOMEONE GOOF ?               89263
         BNE   NOTEDS03      ?                                   89263
*KILL*   XC    TERMMODE,TERMMODE  KILL LOGON MODE                89263
         L     R1,=A(DDT3270)   TRY AS A DUMB DEVICE             89263
         ST    R1,TERMDDT    UPDATE WITH PLAIN DEVICE            89263
         LM    R1,R3,RPLERRSA-IFGRPL(R5)  RESTORE                89263
         B     DORESEND      TRY RESENDING THIS MESSAGE SANS SFE 89263
NOTEDS03 DS    0H                                                89263
         SPACE 1
         LM    R1,R3,RPLERRSA-IFGRPL(R5)  RESTORE REG 1 - 3      86160
DORELON  LA    R15,TORELES         03  FUNCTION NOT SUPPORTED
         LA    R0,RELONLY              RELEASE TERMINAL
         B     ERRETURN
         SPACE 1
STATERR  LA    R15,TORELES         20  STATE ERROR
         LA    R0,REL1ST               RELEASE AND REOPEN
         B     ERRETURN
         SPACE 1
RHERROR  BAL   R7,SNOCCUR
         ORG   RHERROR                                           87131
         B     STATERR       HAPPENED WHILE INSTALLING LOCAL SNA 87131
*                            CONTROLLER AND CONNECTING/DISCONNECTING
*                            CRTS.                               87131
         SPACE 1
***********************************************************************
*                                                                     *
*          80 - PATH ERRORS                                           *
*                                                                     *
*           SSENSEI/SSENSMI                                           *
*             80      05           NO SESSION CONDITION               *
*                                                                     *
***********************************************************************
         SPACE 1
PATHERR  IC    R7,SENSE+1              GET   SSENSMI
         CH    R7,HEX5                 IS IT ONE WE CAN HANDLE
         BE    STATERR       HANDLE 'NO SESSION' BY RE-OPENING   86160
         B     DOENDREQ      ELSE IGNORE                         86160
         SPACE 1
STAT3270 DS    0H                      HANDLE 2 BYT OF USER SENSE CODES
*                                       RETURNED FROM 3270
         CLC   =X'0001',USENSE  PLAIN OLD I/O ERROR ?            92073
         BNE   STAT3272      NO                                  92073
         L     R15,RPLUSFLD  GET TERM BASE                       92073
         L     R0,=A(DDT3270E)  GET EDS BASE                     92073
         C     R0,TERMDDT-TERMTABL(R15)  TRYING AS EDS DEVICE ?  92073
         BE    REQERR        YES; TRY AS NON-EDS                 92073
STAT3272 LA    R15,TORELES             ASSUME DEVICE UNUSABLE
         CLC   USENSE,SNAS0200         WAS SDLC STATUS RETURNED FOR DE
*                                       WHICH SHOWS POWER ON
         BE    INTRREQ1                YES CHECK MORE
         CLC   USENSE,=X'0A0A'  OUR PROTOCOL CONVERTER CODE ?    88185
         BE    STATERR       RELEASE AND RE-ACQUIRE              88185
         CLC   USENSE,SNAS0010         NO CHECK IF INTV. REQ. (DEVICE
*                                       POWERED OFF )
         BNE   ERRETURN                RELEASE DEVICE
*        B     DOENDREQ      WAIT FOR DEVICE POWER-UP
         SPACE 1
INTRREQ1 DS    0H                      DEVICE IS NOW AVAILABLE. JUST
DOENDREQ LA    R15,TOENDREQ  IGNORE BECAUSE LOSTERM WILL GET CALLED
         B     ERRETURN                SCHEDULED
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 08 - REISSUE                                            *
*                                                                     *
*   FDBK2 CODE   MACRO(S)         MEANING                             *
*                                                                     *
*      00      * ALL API MACROS   TEMPORARY STORAGE                   *
*                (NOT CHECK,       ALLOCATION FAILURE                 *
*                 OPEN, OR CLOSE)                                     *
*                                                                     *
***********************************************************************
         SPACE 2
REISSUE  DS    0H
         LTR   R6,R6                   ONLY VALID REASON CODE
*                                       IS 0
         BZ    *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         LA    R15,REISSU           0  ACTION IS TO REISSUE
*                                      REG 0 IS ALREADY SET FOR
*                                       REISSUE ONLY
         B     ERRETURN                RETURN TO EXIT ROUTINE
         SPACE 3                                                 90120
***********************************************************************
*                                                                     *
*  FEEDBACK CODE 0C - DAMAGE                                          *
*                                                                     *
*   REASON CODE   MACROS         MEANING          ACTION              *
*    00              *           BASIC ONLY          *                *
*    01          RECEIVE      LU NOT AVAILABLE     RELEASE 08         *
*                 SEND         "    "   "            "     08         *
*    02          REC/SEND     REQUEST CANCELLED    FREERPL 14 00      *
*                             BY TEST REQUEST                         *
*    03              *         BASIC ONLY             *               *
*    04              *         BASIC ONLY             *               *
*    05              *         BASIC ONLY             *               *
*    06              *         BASIC ONLY             *               *
*    07          REC/SEND     CONNECTION RECOVERY  FREERPL 14 00      *
*                               IN PROGRESS                           *
*    08          REC/SEND     LU RESTARTED         FREERPL 14 00      *
*    09          OPNDST       NODE DEACTIVATED     FREERPL 14 00      *
*    0A          RECEIVE      SNOCCUR                SNOCCUR          *
*    0B         RE/SEND/CLSDST REQUEST CANCELLED   FREERPL 14 00      *
*                                BY CLSDST                            *
*    0C          REC/ SEND     REQUEST CANCELLED   RELEASE 14 04      *
*                                BY CLEAR                             *
*    0D          SEND          REQ CANCEL BY EXCP.  RELEASE/REACQ     *
*                                                                     *
***********************************************************************
         SPACE 2
DAMAGE   DS    0H
         CH    R6,HEXD                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SLL   R7,2                    INDEXING
         B     RSNTABC(R7)             GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTABC  BAL   R7,SNOCCUR          0   BASIC MODE ONLY           86160
         B     DORELON             1   LU NOT AVAILABLE          86160
         B     DOENDREQ            2   REQUEST CANCELLED BY TEST REQ.
         BAL   R7,SNOCCUR          3   BASIC ONLY                86160
         BAL   R7,SNOCCUR          4   BASIC ONLY                86160
         BAL   R7,SNOCCUR          5   BASIC ONLY                86160
         BAL   R7,SNOCCUR          6   BASIC ONLY                86160
         B     DOENDREQ            7   CONNECTION RECOVERY       86160
         B     DOENDREQ            8   LU  RESTARTED             86160
         B     DOENDREQ            9   NODE DEACTIVATED          86160
         BAL   R7,SNOCCUR          A   SNOCCUR                   86160
         B     DOENDREQ            B   REQUEST CANCELLED BY CLSDST
         B     STATERR             C   RELEASE WITH OPNDST       86160
         B     STATERR             D   RELEASE AND RE-ACQUIRE    87103
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 10 - ENVIRONMENT                                        *
*                                                                     *
*   FDBK2 CODE   MACRO(S)      MEANING                  ACTION        *
*                                                                     *
*     00        OPNDST/CLSDST  TERM,LU,APPL NOT ACTIVE  CLSDST  0C 08 *
*                                              (OPNDST) FREERPL 14 00 *
*     01        OPNDST         OPNDST FAILED           FREERPL  14 00 *
*                                                                     *
*     02        CLSDST (PASS)  TARGET APPL. UNACCEPTABLE MSG.   0C 09 *
*                                                                     *
*     03        OPNDST/SEND/REC  HALT QUICK                   SNOCCUR *
*                                                                     *
*     05         "      "     "   CHANNEL/LINK FAILURE RELEASE  08 00 *
*                                                                     *
*     06        OPNDST          ANS                    RELEASE  08 00 *
*                                                                     *
*     07        SEND/REC        CANCELLED BY VARY      RELEASE  08 00 *
*                                                                     *
*     09         "    "         TERMINATE SELF/LOGOFF  FREERPL  14 00 *
*                                                                     *
*     0A        ALL MACROS      ACF/VTAM ERROR         RELEASE  08 00 *
*                                                                     *
*     0D        ALL MACROS      ACF/VTAM INACTIVE TO ACB       SNOCCUR*
*                                                                     *
*     0E        ALL MACROS      TCB ABENDED            FREERPL  14 00 *
*                                                                     *
*     0F        SEND/REC        BUFFERS FILLED         FREERPL  14 00 *
*                                                                     *
*     10         "   "          TERMINATE SELF COMMAND RELEASE  08 04 *
*                                                                     *
*     11        OPNDST          SDT FAILED             FREERPL  14 00 *
*                                                                     *
***********************************************************************
         SPACE 2
ENVIRON  DS    0H
         CH    R6,HEX11                IS RSN COD11VALID SIZE?
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         SPACE 1
***********************************************************************
*   HANDLE FIRST THREE REASON CODES WITHOUT BRANCH TABLE.             *
***********************************************************************
         SPACE 1
         LTR   R6,R6                   CHECK FOR TERMINAL OR
*                                       APPLICATION NOT
*                                       AVAILABLE.
         BNZ   CHKQUIES            ¬0  IF NOT, NEXT CHECK
*
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
         BO    TERMUNAV
         LA    R15,TOSEND              NO. APPLICATION UNAVAIL-
         LA    R0,MSG08                ABLE WRITE ERROR MSG
         B     ERRETURN
TERMUNAV DS    0H
         LA    R15,TOENDREQ            TERMINAL UNAVAILABLE FOR
         B     ERRETURN                 OPNDST(SPEC) AFTER
*                                       CLSDST(PASS) BECAUSE
*                                       CLSDST(PASS) FAILED
*                                       AND THE NETWORK OPER-
*                                       ATOR VARRIED OFF THE
*                                       TERMINAL.
CHKQUIES DS    0H
         LA    R15,TORELES             PREPARE ACTION CODE
         SLL   R7,2                     AND BRANCH TABLE INDEX
*                                       IN CASE REASON CODE
*                                       GREATER THAN 2
         CH    R6,HEX2                 CHECK FOR 1 OR 2
*
         BL    TERMUNAV             1  OPNDST FAILED FREERPL
*
         BH    RSNTAB10(R7)        >2  GO TO REASON CODE
*                                       HANDLING ROUTINE
*
         LA    R15,TOSEND           2  APPLICATION IS QUIESCING
         LA    R0,MSG09                 OR NEVER ACCEPTS LOGONS
*                                       BUT QUIESCE IS MORE
*                                       LIKELY SINCE 'NEVER
*                                       ACCEPTS WOULD PROBABLY
*                                       HAVE BEEN FOUND ON THE
*                                       INQUIRE.  EITHER CAN
*                                       HAPPEN IF THE OTHER
*                                       APPLICATION CHANGES ITS
*                                       STATUS AFTER NETSOL'S
*                                       INQUIRE(APPSTAT) BUT
*                                       PRIOR TO THE LATER
*                                       CLSDST(PASS).
         B     ERRETURN                WRITE ERROR MESSAGE
RSNTAB10 EQU   *-(3*4)                 START TABLE AT R6=3
*
         B     QUIKHALT             3  VTAM IS HALTING.
*                                      NETSOL CAN NO LONGER
*                                       COMMUNICATE WITH
*                                       DEVICES. TPEND NOTIFIED
*
         BAL   R7,SNOCCUR           4  BASIC MODE ONLY
         B     ERRETURN             5  PERMANENT PATH FAILURE
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             6  AUTO NETWORK SHUTDOWN
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         B     ERRETURN             7  VARY DEACT. IMMEDIATE
*                                       LOSTERM WAS SCHEDULED
*                                      ACTION CODE ALREADY SET
*                                       UP TO RELEASE DEVICE
*
         BAL   R7,SNOCCUR           8  DIAL BASIC MODE ONLY
         B     IGNORERR             9  TERMINATE SELF OR LOGOFF
*
         B     VTAMERR              A  VTAM ERROR FOR DEVICE
*
         BAL   R7,SNOCCUR           B  DIAL-OUT ONLY
*
         BAL   R7,SNOCCUR           C  DIAL IN BASIC MODE ONLY
         B     QUIKHALT             D  VTAM INACTIVE TO YOUR     89129
*                                      ACB.  SHOULD NOT OCCUR
*
         B     QUIKHALT             E  TCB ABENDED               89129
         B     IGNORERR             F  BUFFERS FILLED
         B     ERR1010             10  TERMINATE SELF
         B     IGNORERR            11  SDT FAILED
*
QUIKHALT DS    0H
         LA    R15,TOENDREQ            INDICATE RETURN TO VTAM
         OI    UFLAGS,SHUTDOWN+UFGIGNER  BEGIN SHUTDOWN          86065
         B     ERRETURN
*
VTAMERR  DS    0H                      ON 100A RTNCD  JUST
         LA    R15,TOPROBDV             RELEASE THE TERMINAL.
         B     ERRETURN
         SPACE 1
IGNORERR DS    0H
         LA    R15,TOENDREQ            END REQUEST
         B     ERRETURN
         SPACE 1
ERR1010  DS    0H
         LA    R15,TORELES
         LA    R0,REL1ST
         B     ERRETURN
         EJECT
***********************************************************************
*                                                                     *
*  RTNCD CODE 14 - LOGIC
*                                                                     *
*   FDBK2 CODE      MACRO(S)     MEANING                    ACTION    *
*                                                                     *
*       00        REC/SEND    NON-VTAM REQUEST CDE         SNOCCUR    *
*                                                                     *
*       02         "    "     EXIT ADDRESS ZERO            SNOCCUR    *
*                                                                     *
*       03         "    "     ECB ADDRESS ZERO             SNOCCUR    *
*                                                                     *
*       04         CHECK      RPL IS NOT ACTIVE            SNOCCUR    *
*                                                                     *
*       10         REC/SEND   INVALID ACB                  SNOCCUR    *
*                                                                     *
*       11          "    "                                            *
*                                                                     *
*       12          "    "    CLSDST IN PROGRESS (FREERPL)  14 00     *
*                                                                     *
*       13      REC/SEND/INT  RPL ARG + NIB CID INVALID     14 00     *
*                                                                     *
*       1E      REC/SEND      INVALID DATA ARE OR LENGTH   SNOCCUR    *
*                                                                     *
*       23        "   "       INVALID MACRO REQUEST TYPE   SNOCCUR    *
*                                                                     *
*         3C    SEND (POST=SCHED)   TRIED TO ISSUE 2ND SEND14 00DC18203
*       3B-47     "   "                                    SNOCCUR    *
*                                                                     *
*       4A                                                 SNOCCUR    *
*                                                                     *
*       4B          "         INVALID LOGON         (MSG)   0C 07     *
*                                                                     *
*       4C       INQUIRE(APPLSTAT) NO APPL NAME     (MSG)   0C 07     *
*                INQUIRE(SESSPARM) NO QUEUED CINIT(FREERPL) 14 00     *
*                CLSDST(PASS)      NO CDRSC FOR TERM(MSG)   0C 03     *
*                                                                     *
*       4D                                                 SNOCCUR    *
*                                                                     *
*       4E-51                                              SNOCCUR    *
*                                                                     *
*       52      INVALID NIB                                SNOCCUR    *
*                                                                     *
*       53      INQUIRE       INVALID SYM. NAME     (MSG)   0C 06     *
*               OPNDST(SPEC)  INVALID SYM. NAME   (FREERPL) 14 00     *
*                                                                     *
*       54      OPNDST        DEST. UNOPENABLE    (FREERPL) 14 00     *
*                                                                     *
*       55      OPNDST(AQUIRE) APPL NOT AUTHORIZED         SNOCCUR    *
*               CLSDST(PASS)   ????????????????????   (MSG) 0C 05     *
*                                                                     *
*       56-5C                                              SNOCCUR    *
*                                                                     *
*       5D      CLSDST        DEST, NOT OPENED    (FREERPL) 14 00     *
*                                                                     *
*       5E                                                            *
*                                                                     *
*       5F      CLSDST        RESOURCE NOT OWNED  (FREERPL) 14 00     *
*                                                                     *
*       60      CLSDST           "      "  CLOSABL   "     14 00      *
*                                                                     *
*        62     REC/SEND                                   SNOCCUR    *
*                                                                     *
***********************************************************************
         SPACE 2
LOGIC    DS    0H
         CH    R6,HEX60                 IS REASON CODE WITHIN
*                                       LIMITS OF POSSIBILITY?
*                                       X'60' IS HIGHEST VALID
*                                       VALUE TO BE EXPECTED.
         BNH   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         CH    R6,HEX4A                IF REASON CODE AT LEAST
         BNL   CHK56X            >=4A   X'4A', DO SEPARATELY
         LA    R15,TOENDREQ            PREPARE ACTION FOR
*                                       REASON CODES OF 12 & 13
         CH    R6,HEX12                CLSDST IN PROGRESS?
         BE    ERRETURN            12  YES, ACTION CODE
*                                        ALREADY SET
         CH    R6,HEX13                IS REASON CODE 13?
         BNE   CHK3CX        *****DEBUG - FREE DEVICE WHICH OTHERWISE
         OI    UFLAGS,UFGREST+UFGIGNER  FORCE RESTART *****DEBUG*****
         STM   R15,R1,A$SAVE-IFGRPL(R5) SAVE *****DEBUG*****     89344
         ABEND 666,DUMP      ****DEBUG*****                      90127
*DEBUG*  BAL   R7,SNOCCUR    HANGS ON 'PNFY1' STATUS *****DEBUG  89338
         LM    R15,R1,A$SAVE-IFGRPL(R5) RESTORE *****DEBUG*****  89344
         CR    R15,R15       SET CODE FOR NEXT TEST   *****DEBUG*****
         BE    ERRETURN            13  CID INVALID
*                                      PROBABLY ALREADY
*                                       RELEASED THE TERMINAL.
*                                       IGNORE.
CHK3CX   CH    R6,HEX3C             3C  TRY TO ISSUE 2ND SEND   DC18203
         BE    ERRETURN                 YES SO IGNORE           DC18203
         BAL   R7,SNOCCUR        16
CHK56X   DS    0H
         CH    R6,HEX56                IF REASON CODE MORE THAN
         BH    CHK5DX             >56   X'56', DO SEPARATELY
         LA    R15,TOSEND              PREPARE DEFAULT ACTION
         SLL   R7,3                     AND BRANCH TABLE INDEX
         B     RSNTAB14(R7)            GO TO REASON CODE
*                                       HANDLING ROUTINE
RSNTAB14 EQU   *-(8*(X'4A'))           START TABLE W/ R6=X'4A'
*
         BAL   R7,SNOCCUR          4A
         NOP   0
*
         LA    R0,MSG07            4B  UNKNOWN LOGOMODE TABLE ENTRY
         B     ER144B                  OR UNIDENTIFIED APPLICATION
*
         LA    R0,MSG07            4C  INQUIRE(APPSTAT)..NO SYMBOLIC
         B     TSTINQA                  NAME FOR APPLICATION
*                                     OR INQUIRE(SESSPARM)..NO QUEUED
*                                       CINIT
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         BAL   R7,SNOCCUR          4D
         NOP   0
*
         BAL   R7,SNOCCUR          4E
         NOP   0
*
         BAL   R7,SNOCCUR          4F
         NOP   0
*
         BAL   R7,SNOCCUR          50
         NOP   0
*
         BAL   R7,SNOCCUR          51  APPLICATION NEVER
         NOP   0                        ACCEPTS LOGONS
*                                      MEANS NETSOL NEVER
*                                       ACCEPTS LOGON.
*
         BAL   R7,SNOCCUR          52
         NOP   0
*
         LA    R0,MSG07            53  SYMBOLIC (APPL OR TERM)
         B     TSTINQA                  NAME NOT KNOWN
*                                      ASSUME INQUIRE(APPSTAT)
*                                       THEN CHECK FOR IT
*
         LA    R15,TOENDREQ                   54
         B     ERRETURN
*
         LA    R0,MSG05            55  APPLICATION NOT AUTHORIZED
         B     OPNDSPC                  FOR OPNDST(ACQUIRE)
*                                      OR
*                                      CLSDST FAILURE.
*
         BAL   R7,SNOCCUR          56  CONFLICT BETWEEN MODE
         NOP   0                        AND DEVICE TYPE.
*                                      TRIED TO OPNDST FOR
*                                       A RECORD DEVICE.
*                                       NETSOL ONLY SUPPORTS
*                                       BASIC DEVICES.
*                                      CAN NOT OCCUR IN NETSOL
CHK5DX   DS    0H
         CH    R6,HEX5D                CLSDST INVALID (TERMINAL
*                                       NOT CONNECTED)
         BNE   CHK5FX             ¬5D  NOT X'5D', CHECK FURTHER
         LA    R15,TOENDREQ        5D  ACTION, RELEASE RPL AND
         B     ERRETURN                 RETURN TO VTAM
CHK5FX   DS    0H
         CH    R6,HEX5F                LESS THAN X'5F' NOT
         BNL   *+8           JUMP OVER THE BAL                   86012
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
*
         LA    R15,TOENDREQ     5F 60  REASON CODES OF 5F
         B     ERRETURN                 AND 60 ARE POSSIBLE IF
*                                       A RELREQ OR READEND
*                                       EXIT IS PROCESSED
*                                       AFTER THE DEVICE WAS
*                                       PASSED TO ANOTHER
*                                       APPLICATION.  THIS CAN
*                                       HAPPEN BECAUSE THE
*                                       CLSDST(PASS) WILL NOT
*                                       PURGE AN ALREADY
*                                       SCHEDULED EXIT.
TSTINQA  DS    0H
         TM    MFLAGS,INQAPPST         INQUIRE(APPSTAT) MEANS THE
         BO    ERRETURN                 APPLICATION WAS UNKNOWN TO
*                                       VTAM.
*                                       => PUT OUT ERROR MESSAGE
         LA    R0,MSG03                ASSUME CLSDST(PASS)
         TM    MFLAGS,CLSDST           CLSDST FAILURE MEANS THERE
         BO    ERRETURN                 IS NO CDRSC FOR THE TERMINAL
*                                       IN A CROSS-DOMAIN SESSION.
*                                       => PUT OUT ERROR MESSAGE
         LA    R15,TOENDREQ            ASSUME INQUIRE(SESSPARM)
*                                       FAILURE IMPLIES THAT THERE
         TM    MFLAGS2,INQSESS          IS NO QUEUED CINIT FOR LOGON
         BO    ERRETURN                 PROCESSING FOR THE TERMINAL.
*                                       => END THE REQUEST
         LA    R15,TOENDREQ            ASSUME OPNDST(SPEC)
         TM    MFLAGS,OPNDSPEC         OPNDST FAILURE MEANS THE
         BO    ERRETURN                 NODE IS UNKNOWN TO VTAM.
*                                       POSSIBLY DUE TO MAJOR NODE
*                                       BEING DEACTIVATED.
*                                       => END THE REQUEST
         BAL   R7,SNOCCUR              ANY OTHER CAUSE OF
*                                       ERROR IS IMPOSSIBLE
ER144B   DS    0H
         TM    MFLAGS,CLSDST           ERROR ON CLSDST(PASS)
         BZ    ERRETURN                NO => WRITE UNKNOWN APPL'N
         LA    R0,MSG01                YES. WRITE THE MESSAGE
*                                       'XXXXXXXX UNKNOWN LOGOMODE'
         B     ERRETURN
OPNDSPC  DS    0H
         TM    MFLAGS,OPNDSPEC         ERROR ON OPNDST(SPEC)?
         BNO   *+8           JUMP OVER THE BAL
         BAL   R7,SNOCCUR    TELL US WHERE WE CAME FROM
         TM    MFLAGS,CLSDST           WAS THIS A CLOSE
         BO    ERRETURN                 CLDST(PASS).  OR
*                                       APPLICATION CAN'T BE
*                                       CONNECTED AS REQUESTED
*                                       IN RELREQ OR READEND.
*                                       ISSUE ALREADY PREPARED
*                                       ERROR MESSAGE.
         BAL   R7,SNOCCUR              NO, ANY OTHER CAUSE
*                                       IS IMPOSSIBLE
         TITLE '*********  N E T S O L  -  SCAN FOR LOGON SUBROUTINE'
ERRETURN DS    0H
         STC   R15,ACTIONS             SAVE ACTION CODES FOR
         STC   R0,ACTIONS+1             DEBUGGING
         CR    R1,R5                   DO WE HAVE BOTH A SYNCH
*                                      RPL AND A ASYNCH RPL
         BE    ERROUT                  NO, SKIP THE MOVE OF THE
*                                      RPL WORKAREA
         L     R14,=A(SYNWORK)  GET WORK AREA                    86145
         MVC   LNIFGRPL(WORKRPLA,R5),0(R14)   RESTORE WORKAREA   86145
         SPACE 1
         DROP  R1
         USING IFGRPL,R5
         SPACE 1
         PUSH  USING         SAVE R3 AND ?                       91296
         DROP  R3            R3 HAS RETURN ADDRESS, NOT TERM     91296
ERROUT   ICM   R2,15,RPLUSFLD  ANY TTE POINTER ?                 91296
         BZ    ERROUTNS      NO                                  91296
*    FOR RETRY AND RE-ISSUE STYLE RECOVERY, KEEP TRACK OF NUMBER AND
*    TIME OF RETRIES. IF TOO MANY, JUST QUIT - DON'T LOOP        93266
         CH    R15,=Y(TOPROBDV)  LARGER THAN MAX?                93266
         BH    ERROUTNS                                          93266
         B     *+4(R15)      BRANCH ACCORDING TO CODE            93266
         B     ERROUTNS      0 - RELEASE; DON'T RE-ACQUIRE       93266
         B     ERROUTLP      4 - RELEASE AND RE-ACQUIRE          93266
         B     ERROUTNS      8 - RELEASE                         93266
         B     ERROUTLP     12 - SEND (AGAIN?)                   93266
         B     ERROUTLP     16 - RE-ISSUE REQUEST                93266
         B     ERROUTNS     20 - END REQUEST                     93266
         B     ERROUTLP     24 - RESEND                          93266
         B     ERROUTNS     28 -   OPEN                          93266
         B     ERROUTNS     32 - PROBLEM DEVICE                  93266
ERROUTLP STM   R15,R1,A$SAVE   SAVE REGISTERS                    91296
         TIME  BIN           GET CURRENT TIME                    91296
         USING TERMTABL,R2                                       91296
         LR    R1,R0         COPY TIME                           91296
         S     R1,TERMETIM   SUBTRACT TIME OF LAST ERROR         91296
         CH    R1,=Y(60*100)  MORE THAN ONE MINUTE ?             91296
         BH    ERROUTNW      YES; SET NEW                        91296
         INC   TERMERCT,WORK=R15  INCREASE CONSECUTIVE ERRORS    91296
         CH    R15,=H'10'    10 ERRORS IN ONE MINUTE ?           91296
         BL    ERROUTNR      NO; JUST RESTORE                    91296
         LM    R15,R1,A$SAVE  RESTORE                            91296
         SLR   R15,R15       BUT CHANGE REQUEST TO RELEASE, NO ACQ
         B     ERROUTNS                                          91296
ERROUTNW ST    R0,TERMETIM   SAVE ERROR TIME                     91296
         LA    R0,1                                              91296
         ST    R0,TERMERCT   INITIALIZE ERROR COUNT              91296
ERROUTNR LM    R15,R1,A$SAVE  RESTORE                            91296
ERROUTNS CH    R15,=Y(TOPROBDV)  LARGER THAN MAX?
         BH    ERROUTR                                           88188
         B     *+4(R15)      BRANCH ACCORDING TO CODE            88188
         B     ERROUTR       0 - RELEASE; DON'T RE-ACQUIRE       88188
         B     ERROUTR       4 - RELEASE AND RE-ACQUIRE          88188
         B     ERROUTR       8 - RELEASE                         88188
         B     ERROUTS      12 - SEND (AGAIN?)                   88188
         B     ERROUTS      16 - RE-ISSUE REQUEST                88188
         B     ERROUTR      20 - END REQUEST                     88188
         B     ERROUTS      24 - RESEND                          88188
         B     ERROUTS      28 -   OPEN                          88188
*        B     ERROUTR      32 - PROBLEM DEVICE                  88188
ERROUTR  ICM   R2,15,RPLUSFLD  LOAD AND TEST TTE POINTER         88188
         BZ    ERROUTS       NONE; SKIP                          88188
         NI    TERMFLG3,TFREQ  FORCE LOGOFF                      91296
         OI    TERMFLG3,TFLOF  SET FORCED USER LOGOFF            91296
         AIF   ('&LOCAL' NE 'PID').NOERROF                       92300
         ICM   R2,15,TERMLOUD  ANY LOUD ?                        91296
         BZ    ERROUTS       NO                                  88207
         STM   R15,R1,A$SAVE   SAVE REGISTERS                    88207
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM AREA
         MVC   A$SID,=C'A$RB'                                    88207
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,A$SONL,A$SAKEY+A$SBUILD) 88207
*                            LOGOFF SESSIONS, NOT USER           88207
         ST    R2,A$SBUFR    COPY LOUD                           88207
         LA    R1,A$SVCRB                                        88207
         SVC   249           CANCEL SESSIONS; KEEP USER          88207
         LM    R15,R1,A$SAVE   RESTORE REGISTERS                 88207
.NOERROF SPACE 1                                                 91195
ERROUTS  LR    R14,R3                  RESTORE ADDR AND RETURN
         BR    R14                      VTAM WHICH WILL RETURN
*                                       TO THE NSI AFTER THE
*                                       COMMAND WHICH CAUSED
*                                       ERREXIT TO BE ENTERED.
         POP   USING         RESTORE R3                          91296
NETSOL70 CSECT ,             RESTORE MAIN CSECT                  87186
         TITLE '*********  N E T S O L  -  EQUATES AND CONSTANTS'
R0       EQU   0                       MACRO WORK REGISTER, AND
*                                      CONTAINS REASON CODE UPON
*                                      ABNORMAL TERMINATION
R1       EQU   1                       PARAMETER REGISTER,
*                                      CORRUPTED BY API MACROS
R2       EQU   2                       WORK REGISTER
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       POINTER TO CURRENT RPL, IT
*                                      IS NOT USED FOR ANY OTHER
*                                      PURPOSE
PTRRPL   EQU   R5                      AS ABOVE
R6       EQU   6                       WORK REGISTER
R7       EQU   7                       WORK REG
R8       EQU   8                       NIB POINTER
PTRNIB   EQU   8                        EXCEPT IN STD LOGON.
R9       EQU   9                       WORK REG
R10      EQU   10                      THIRD BASE REGISTER
R11      EQU   11                      SECOND BASE REGISTER
R12      EQU   12                      FIRST BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN REGISTER
R15      EQU   15                      RETURN CODE AND EXIT ENTRY PTR
         SPACE 1
***********************************************************************
*        FLAGS INDEPENDENT OF A SPECIFIC REQUEST                      *
***********************************************************************
         SPACE 1
UFLAGS   DC    X'00'                   MAIN NETSOL FLAGS
SHUTDOWN EQU   X'80'                   SHUTDOWN IN PROGRESS
INIT     EQU   X'40'                   INITIALIZATION IN PROGRESS
INITERR  EQU   X'20'                   ERROR DURING INITIALIZATION
INITDLAY EQU   X'10'         TIME DELAY BETWEEN START-UPS        87256
UFGSYS   EQU   X'08'         SYSTEM RESERVED FOR SYSTEMS GROUP   86065
UFGREST  EQU   X'04'         SYSTEM IS BEING RECYCLED            86065
UFGIGNER EQU   X'02'         IGNORE ERRORS; SHUTDOWN OR RECYCLE  86065
         SPACE 1
DUMPFLAG DC    X'00'                   REASON CODE FOR DUMPING
OPENCODE EQU   1                       OPEN ACB FAILURE
SETLCODE EQU   2                       SETLOGON FAILURE
CBLKCODE EQU   4                       CONTROL BLOCK FAILURE
TABLTRBL EQU   8                       TROUBLE WITH THE TTE'S
         SPACE 1
TRTAB1   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6' HEX->CHAR TR TABLE
TRTAB    EQU   TRTAB1-X'F0'            USE ONLY LAST 16 OF TRTAB
         SPACE 1
PACKWORK DS    XL16                    UNPACK WORK AREA
         SPACE 1
SESSPARM DS    XL120                   INQUIRE(SESSPARM) WORK AREA
*                                      MAX SIZE ENCOUNTERED IS 88
         SPACE 1
SYSTEMID DC    X'00'                   SYSTEM ID FOR SOME APPLIDS
         SPACE 1
         DC    C'SAVED REGISTERS FOR USER ABENDS HERE'
SNOREGS  DC    16F'0'                  REGS FOR SNO CONDITIONS
         SPACE 1
RETVTAM@ DS    F                       SAVE AREA FOR EXIT RETURN ADDR
         SPACE 1
GENSAVE  DS    18F                     SAVE AREA FOR SOME EXIT RTNS
         SPACE 1
SUBSAV14 DC    F'0'                    SAVE AREA FOR REG 14
*                                       USED BY SUBROUTINES
FINISECB DC    F'0'                    ECB THAT MAIN-LINE CODE WAITS
*                                      ON, IT IS POST'ED BY TPEND EXIT
         SPACE 1                                                 85235
*              MISCELLANEOUS CONSTANTS AND MASKS.
SBA      EQU   X'11'                   3270 SET BUFFER @ FIELD
CLEARKEY EQU   X'6D'                   3270 CLEAR KEY
PA1KEY   EQU   X'6C'         3270 PA1 KEY (LOGOFF REQUEST)       88220
ENTERKEY EQU   X'7D'                   3270 ENTER KEY
HEX50    EQU   X'50'                   3270 BUFFER ADDRESS
HEXD3    EQU   X'D3'                     "    "       "
HEXD5    EQU   X'D5'                     "     "       "
CR       EQU   X'0D'                   3767 CARRIAGE RETURN
FF       EQU   X'FF'                   USED TO TURN OFF SWITCHES
         SPACE 1
*              EQUATES FOR ACTION CODES AND MODIFIERS
TORELES  EQU   8                       BRANCH TO RELEASE
TOSEND   EQU   X'0C'                   BRANCH TO WRITE
REISSU   EQU   X'10'                   REISSUE COMMAND
RELONLY  EQU   0                       RELEASE ONLY DONT REAQUIRE
REL1ST   EQU   4                       RELEASE AND ACQUIRE
TOENDREQ EQU   X'14'                   BRANCH TO FREERPL
TORESEND EQU   X'18'                   TAKE ACTION ACCORDING TO RTN
TOPROBDV EQU   X'20'                   BRANCH TO PROBDEV
         SPACE 2                                                 90120
*              HEX VALUES FOR FEEDBACK AND RETURN CODE COMPARES
         SPACE 1
         DS    0H
HEX2     DC    XL2'2'
HEX3     DC    XL2'3'
HEX4     DC    XL2'4'
HEX5     DC    XL2'5'
HEX8     DC    XL2'8'
HEX9     DC    XL2'9'
HEXC     DC    XL2'C'
HEXD     DC    XL2'D'
HEX10    DC    XL2'10'
HEX11    DC    XL2'11'
HEX12    DC    XL2'12'
HEX13    DC    XL2'13'
HEX14    DC    XL2'14'
HEX18    DC    XL2'18'
HEX1B    DC    XL2'1B'
HEX1C    DC    XL2'1C'                                      DC18203
HEX20    DC    XL2'20'
HEX2B    DC    XL2'2B'
HEX2D    DC    XL2'2D'
HEX31    DC    XL2'31'
HEX3C    DC    XL2'3C'
HEX4A    DC    XL2'4A'
HEX56    DC    XL2'56'
HEX5D    DC    XL2'5D'
HEX5F    DC    XL2'5F'
HEX60    DC    XL2'60'
         EJECT
*              BISYNCH STATUS ERROR MESSAGE CODES
         DS    0H
SNAS0010 DC    XL2'0010'               3270 -- INTERRUPTION
*                                       REQUIRED BECAUSE DEVICE
*                                       POWERED OFF.
SNAS0200 DC    XL2'0200'                3270 -- DEVICE END
*                                       (ALONE), MEANING THAT
*                                       THE DEVICE IS POWERED
*                                       ON AND OK TO USE.
         SPACE 1
*              LOGICAL UNIT STATUS FOR 3276/3278/3287/ETC.
         SPACE 1
LUS0001  DC    XL2'0001'               DEVICE AVAILABLE
LUS082B  DC    XL2'082B'               DEVICE AVAILABLE
LUS0831  DC    XL2'0831'     LUSTAT - DEVICE POWERED OFF         89344
         SPACE 1
@EXEC2   MVC   0(0,R4),2(R7)
@EXEC3   MVC   0(0,R4),0(R6)
         SPACE 2
         LTORG
         TITLE '*********  N E T S O L  -  ERROR BYPASS TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE RPL-BASED MACRO ERRORS WHICH        *
*        ARE NOT TO BE WRITTEN TO THE OPERATOR'S CONSOLE.             *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OFTHE FOLLOWING FIELDS:            *
*                                                                     *
*             ERMCODE - THE ERROR COMBINATION TO BE BYPASSED.         *
*                       THE FORMAT OF THIS FIELD IS:                  *
*                     RPLREQ/RPLRTNCD/RPLFDB2/RPLSSEI/RPLSSMI/RPLUSNSI*
*                       ANY FIELD WHICH DOESN'T MATTER SHOULD BE SET  *
*                       TO ZERO.                                      *
*                                                                     *
*             ERMAND  - THE MASK TO ZERO IRRELEVANT FIELDS IN THE     *
*                       CONSTRUCTED ERROR COMBINATION FIELD PRIOR     *
*                       TO COMPARISON WITH ERMCODE. EACH BYTE HERE    *
*                       HAS A CORRESPONDING BYTE IN ERMCODE AND SHOULD*
*                       BE SET TO:                                    *
*                         X'FF' - IF THE FIELD IN ERRCODE IS NON-ZERO.*
*                         X'00' - IF THE FIELD IN ERRCODE IS ZERO.    *
*                                                                     *
***********************************************************************
         SPACE 1
ERMCODE  EQU   0,7                    ERROR COMBINATION TO BE COMPARED
ERMAND   EQU   7,7                    MASK TO ZERO IRRELEVANT FIELDS
ERMSGL   EQU   14                     LENGTH OF A TABLE ENTRY
         SPACE 1                                                 89338
ERMINIT  DC    X'00040400000010'       START-UP; IGNORE UNREADY  89339
         DC    X'00FFFF0000FFFF'       2/2                       89339
         SPACE 1
ERMSGTAB EQU   *                      START OF ERROR MSG TABLE
ERM1CODE DC    XL7'1B144B00000000'      BAD APPLID
ERM1AND  DC    XL7'FFFFFF00000000'        KEYED IN AT TERMINAL
ERMSGEND EQU   *-ERMSGL               LAST ENTRY IN TABLE
         SPACE 1
ERMBXLE  DC    A(ERMSGTAB)            BXLE (TABLE START)
         DC    A(ERMSGL)                REGS   (ENTRY LENGTH)
         DC    A(ERMSGEND)                FOR TABLE SEARCH  (TABLE END)
         TITLE '*********  N E T S O L  -  NETSOL GETPARM OPTIONS'
***********************************************************************
*        THIS TABLE DEFINES THE OPTIONS WHICH CAN BE SPECIFIED        *
*        WHEN SEARCHING THE INPUT CMD STRING FOR AN OPTION.           *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 1
GPAMECT  EQU   0                      START OF OPTION LIST
GPLEN    EQU   0,2                    MAX LENGTH OF PARAMETER
GPTEXTL  EQU   2,2                    LEN OF PARM ERROR TEXT
GPFLAG   EQU   4,1                    OPTION FLAGS
GPOPT    EQU   X'80'                  PARAMETER IS OPTIONAL
GPNUM    EQU   X'40'         NUMERIC PARAMETER ONLY              88220
GPCOM    EQU   X'01'         * STARTS COMMENTS                   88220
GPNULL   EQU   X'00'                  NO OPTIONS FOR THIS PARAMTER
GPTEXT   EQU   5                      TEXT INSERTED INTO GP ERR MSG
         SPACE 1
         PRINT NOGEN
*
*        APPLICATION LOGON SEQUENCES
*
SLNODE   $GP    8,'NODENAME',GPNULL
SLAPPL   $GP    8,'LOGON APPLID',GPOPT+GPCOM
SLNAME   $GP   8,'NODE OR USER NAME',GPNULL                      88209
        TITLE '*********  N E T S O L  -  VTAM COMMAND/INTERPRET TABLE'
***********************************************************************
*                                                                     *
*        purpose: define interpret table used by NETSOL70.            *
*                 (refer to acf/vtam system programmers guide)        *
*                                                                     *
*        note:    1) valid logon sequences are defined in upper       *
*                    and lower case.                                  *
*                 2) the logon sequences are compared with the        *
*                    passed string for a length equal to the          *
*                    logon sequence. therefore, any logon sequence    *
*                    containing another logon sequence as a           *
*                    substring (as 'imstest' contains 'ims') must     *
*                    appear in the interpret table before the         *
*                    sequence contained as a substring does.          *
*                                                                     *
*        date:    August 21, 1985          Updated by G.P.            *
*                                                                     *
*                                                                     *
***********************************************************************
         PRINT NOGEN                                             85328
NETINTAB CSECT ,                                                 87193
         LOGCHAR APPLID=(ROUTINE,NETINLOG),SEQNCE='LOGON'        87193
         LOGCHAR APPLID=(ROUTINE,NETINLOG),SEQNCE='logon'        87193
*        ALL OTHER SEQUENCES ARE EXPANDED BY $CMDN MACRO         87193
         SPACE 1                                                 87193
NETSOLCM CSECT ,             BEGIN NEW CSECT FOR COMMANDS        88172
***********************************************************************
*        THIS TABLE DEFINES THE COMMANDS WHICH MAY BE ENTERED FROM    *
*        THE TERMINAL.                                                *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             CMDGAPPL - THE GENERIC NAME OF THE VTAM APPLICATION.    *
*                        THIS IDENTIFIES APPLICATIONS WHICH HAVE      *
*                        MULTIPLE LOGON SEQUENCES.                    *
*                                                                     *
*             CMDVAPPL-  THE ACTUAL VTAM APPLICATION NAME ASSOCIATED  *
*                        WITH CMDGAPPL                                *
*                                                                     *
*             CMDTEXT -  THE LOGON SEQUENCE OF COMMAND ENTERED AT THE *
*                        TERMINAL TO SELECT THIS APPLICATION OR CMD.  *
*                                                                     *
*             CMDROUTA-  ADDRESS OF THE ROUTINE WHICH PROCESSES THIS  *
*                        COMMAND.                                     *
*                                                                     *
***********************************************************************
         SPACE 1
CMDGAPPL EQU   0,8,C'C'      OBSOLETE GENERIC APPLICATION NAME   88185
CMDVAPPL EQU   0,8,C'C'      VTAM APPLICATION NAME               88185
CMDTEXT  EQU   8,8,C'C'      LOGON SEQUENCE OR COMMAND           88185
CMDROUTA EQU   16,4,C'A'     A(CMD PROCESSING ROUTINE)           88185
CMDTEXTL EQU   21,1,C'F'     LENGTH OF CMDTEXT                   88185
CMDFLAG  EQU   22,1,C'B'     COMMAND FLAG                        88185
CMDINIT  EQU   X'80'           ALLOWED FROM SYSIN FILE           88185
CMDTERM  EQU   X'40'           ALLOWED FROM TERMINAL             88185
CMDCONS  EQU   X'20'           ALLOWED FROM CONSOLE              88192
CMDAUTH  EQU   X'01'           USER MUST BE AUTHORIZED           88185
CMDAPPF  EQU   23,1,C'B'     0 OR APPLICATION GROUP FLAG         88185
CMDTABL  EQU   24            LENGTH OF CMD TABLE ENTRY           88185
         SPACE 1
         PRINT NOGEN
PRECMDTB $CMD  TSO,PRETEST,'LOGON',CMDTERM  SCAN APPLID()        87186
         $CMD  TSO,PRETEST,'APPLID(',CMDTERM  APPLID             87186
CMDTAB   DS    0X                            START OF COMMAND TABLE
*
*        APPLICATION LOGON SEQUENCES
*
         $CMDN TSOA,CHKAPPL,'TSOA',CMDTERM,TYPE=A$USFTSO  CDRSC  87187
         $CMDN TSOB,CHKAPPL,'TSOB',CMDTERM,TYPE=A$USFTSO  CDRSC  87187
*        NOTE THAT WE HAVE ONLY ONE TSO/E LICENSE; ALL 'TSO' REQUESTS
*        ARE ROUTED TO SYSTEM B.                                 88311
         $CMDN TSO,CHKAPPL,'TSO',CMDTERM,TYPE=A$USFTSO           84142
         $CMDN TSO,CHKAPPL,'LOGON',CMDTERM,TYPE=A$USFTSO         84142
         $CMDN TSO,CHKAPPL,'1',CMDTERM,TYPE=A$USFTSO             84142
         SPACE 1                                                 87287
CCICS    $CMDN CICSPROD,CHKAPPL,'CICSPROD',CMDTERM,TYPE=A$USFCIC 92335
         $CMDN CICSPROD,CHKAPPL,'CICS',CMDTERM,TYPE=A$USFCIC     92335
         $CMDN CICSPROD,CHKAPPL,'2',CMDTERM,TYPE=A$USFCIC        92335
CCICT    $CMDN CICSTEST,CHKAPPL,'CICSTEST',CMDTERM,TYPE=A$USFCIC 87225
         $CMDN CICSTEST,CHKAPPL,'14',CMDTERM,TYPE=A$USFCIC       87225
         SPACE 1                                                 87287
CSWYL  $CMDN SUPWYL,CHKAPPL,'SUPWYL',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SUPWYL,CHKAPPL,'SUPER',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SWYA,CHKAPPL,'SUPA',CMDTERM+CMDAUTH,TYPE=A$USFWYL   90113
       $CMDN SWYA,CHKAPPL,'SWYA',CMDTERM+CMDAUTH,TYPE=A$USFWYL   93002
       $CMDN SUPWYL,CHKAPPL,'SWYL',CMDTERM+CMDAUTH,TYPE=A$USFWYL 92335
       $CMDN SWYB,CHKAPPL,'SUPB',CMDTERM+CMDAUTH,TYPE=A$USFWYL   90343
       $CMDN SWYB,CHKAPPL,'SWYB',CMDTERM+CMDAUTH,TYPE=A$USFWYL   93002
       $CMDN SUPWYL,CHKAPPL,'3',CMDTERM+CMDAUTH,TYPE=A$USFWYL    90113
       $CMDN SWYLTEST,CHKAPPL,'SWYLTEST',CMDTERM+CMDAUTH,TYPE=A$USFWYL
       $CMDN SWYLTEST,CHKAPPL,'15',CMDTERM+CMDAUTH,TYPE=A$USFWYL 92222
         SPACE 1                                                 87287
CWYL     $CMDN WYLBUR,CHKAPPL,'WYLBUR',CMDTERM,TYPE=A$USFWYL     84142
         $CMDN WYLA,CHKAPPL,'WYLA',CMDTERM,TYPE=A$USFWYL CDRSC   87187
         $CMDN WYLB,CHKAPPL,'WYLB',CMDTERM,TYPE=A$USFWYL CDRSC   87187
*TEST*   $CMDN WYLC,CHKAPPL,'WYLC',CMDTERM,TYPE=A$USFWYL CDRSC   90343
         $CMDN WYLBUR,CHKAPPL,'WYL',CMDTERM,TYPE=A$USFWYL        84142
         $CMDN WYLBUR,CHKAPPL,'4',CMDTERM,TYPE=A$USFWYL          84142
         $CMDN WYLTEST,CHKAPPL,'WYLTEST',CMDTERM+CMDAUTH,TYPE=A$USFWYL
         $CMDN WYLTEST,CHKAPPL,'16',CMDTERM+CMDAUTH,TYPE=A$USFWYL
         SPACE 1                                                 87287
         $CMDN EXHI,CHKAPPL,'EXHIBIT',CMDTERM,TYPE=A$USFEXH      84142
         $CMDN EXHA,CHKAPPL,'EXHA',CMDTERM,TYPE=A$USFEXH CDRSC   87187
         $CMDN EXHB,CHKAPPL,'EXHB',CMDTERM,TYPE=A$USFEXH CDRSC   87187
*TEST*   $CMDN EXHC,CHKAPPL,'EXHC',CMDTERM,TYPE=A$USFEXH CDRSC   90330
         $CMDN EXHI,CHKAPPL,'EXHI',CMDTERM,TYPE=A$USFEXH         86356
         $CMDN EXHI,CHKAPPL,'EXH',CMDTERM,TYPE=A$USFEXH          84142
         $CMDN EXHI,CHKAPPL,'5',CMDTERM,TYPE=A$USFEXH            84142
CEXOR   $CMDN EXORCIST,CHKAPPL,'EXORCIST',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORCIST,CHKAPPL,'17',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORA,CHKAPPL,'EXORA',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         $CMDN EXORB,CHKAPPL,'EXORB',CMDTERM+CMDAUTH,TYPE=A$USFEXH
         SPACE 1                                                 87287
CJRPA    $CMDN CJRPA,CHKAPPL,'CJRPA',CMDTERM,TYPE=A$USFOTH       85328
         $CMDN CJRPA,CHKAPPL,'CJRP',CMDTERM,TYPE=A$USFOTH        85328
         $CMDN CJRPA,CHKAPPL,'JRP',CMDTERM,TYPE=A$USFOTH         85328
         $CMDN CJRPA,CHKAPPL,'10',CMDTERM,TYPE=A$USFOTH          85328
         SPACE 1                                                 85245
         $CMDN NETOP,CHKAPPL,'NETOP',CMDTERM,TYPE=A$USFNET       85245
         $CMDN NETOP,CHKAPPL,'OPERATOR',CMDTERM,TYPE=A$USFNET    85245
         $CMDN NETOP,CHKAPPL,'11',CMDTERM,TYPE=A$USFNET          85245
         SPACE 1                                                 88245
*DEFUNCT RELAY GOLD (PC <=> NTO <=> 3270 MODE)                   88245
*DEFUNCT                                                         88245
*DEFUNCT $CMDN R3270,CHKAPPL,'R3270',CMDTERM  RELAY/3270         88245
*DEFUNCT $CMDN R3270,CHKAPPL,'GOLD',CMDTERM                      88245
*DEFUNCT $CMDN R3270,CHKAPPL,'RELAY',CMDTERM                     88245
         SPACE 1                                                 89328
CKERM    $CMDN KERMIT,CHKAPPL,'KERMIT',CMDTERM  UNRESTRICTED KERMIT
         $CMDN KERMIT,CHKAPPL,'KERM',CMDTERM                     89328
         $CMDN KERB,CHKAPPL,'KERB',CMDTERM   B-SYSTEM ONLY       89328
         $CMDN KERA,CHKAPPL,'KERA',CMDTERM   A-SYS / DEBUG       89328
         $CMDN COMM,CHKAPPL,'COMM',CMDTERM  CPU/CPU COMMUNICATIONS
         $CMDN COMM,CHKAPPL,'8',CMDTERM                          93263
         $CMDN COMA,CHKAPPL,'COMA',CMDTERM  CPU A                93263
         $CMDN COMB,CHKAPPL,'COMB',CMDTERM  CPU B                93263
         SPACE 1                                                 87287
         $CMDN PFK9,CHKAPPL,'9',CMDTERM       **ERROR            85245
         $CMDN PFK12,CHKAPPL,'12',CMDTERM  **FOR SPARES          85328
         $CMDN PFK13,CHKAPPL,'13',CMDTERM  **FOR SPARES          85328
         $CMDN PFK20,CHKAPPL,'20',CMDTERM  **FOR SPARES          85328
         $CMDN PFK21,CHKAPPL,'21',CMDTERM  **FOR SPARES          85328
         $CMDN PFK22,CHKAPPL,'22',CMDTERM  **FOR SPARES          85328
*OLD*    $CMDN SWITCH,CHKAPPL,'SWITCH',CMDTERM  MACKINNEY SWITCH 92040
         $CMDN SWITCH,CHKAPPL,'23',CMDTERM            DITTO      92040
         $CMDN MORE,CHKAPPL,'MORE',CMDTERM  LOCAL SWITCH         93333
         $CMDN MORE,CHKAPPL,'24',CMDTERM                         93333
         $CMDN MORA,CHKAPPL,'MORA',CMDTERM  CPU A                93333
         $CMDN MORB,CHKAPPL,'MORB',CMDTERM  CPU B                93333
         SPACE 1                                                 90147
        $CMDN NETSOLGP,CHKAPPL,'NETSOLGP',CMDTERM+CMDAUTH,TYPE=A$USFNET
         $CMDN NETA,CHKAPPL,'NETA',CMDTERM   CDRSC (DEBUG)       88223
         $CMDN NETB,CHKAPPL,'NETB',CMDTERM   CDRSC (DEBUG)       88223
*TEST*   $CMDN NETC,CHKAPPL,'NETC',CMDTERM   CDRSC (DEBUG)       90330
         SPACE 1                                                 90147
         $CMDN JES2A,CHKAPPL,'JES2A',CMDTERM+CMDAUTH (DEBUG)     89116
         $CMDN JES2B,CHKAPPL,'JES2B',CMDTERM+CMDAUTH (DEBUG)     89116
         $CMDN JES2,CHKAPPL,'JES2',CMDTERM+CMDAUTH (DEBUG)       89116
         SPACE 1                                                 90147
*OLD*    $CMDN TMON8CSM,CHKAPPL,'TMON8CSM',CMDTERM+CMDAUTH   TMON
*OLD*    $CMDN TMON8CSM,CHKAPPL,'TMON',CMDTERM+CMDAUTH   TMON    90147
         SPACE 1                                                 87287
***********************************************************************
*                                                                     *
*        COMMANDS VALID PRIOR TO NETSOL LOGON                         *
*                                                                     *
***********************************************************************
PRELOGON DS    0X            START OF LOCAL FUNCTIONS            88179
         $CMD  SETSTATS,SETSTATS,'STATUS',CMDTERM                87193
         $CMD  SETSTATS,SETSTATS,'STAT',CMDTERM                  87193
CSLOGON  $CMD  SETLOGON,SETLOGON,'SETLOGON',CMDTERM+CMDINIT+CMDCONS
         $CMD  SETRANGE,SETRANGE,'SETRANGE',CMDTERM+CMDINIT+CMDCONS
         $CMD  EODSYSIN,EODSYSIN,'END',CMDINIT  LOG.EOF          87137
         SPACE 1                                                 86065
CMDUNTAB $CMD  SETPASON,SETPASON,'PASSWORD',CMDTERM              86065
         $CMD  SETPASON,SETPASON,'PASS',CMDTERM                  88192
         $CMD  SETPASON,SETPASON,'PAS',CMDTERM                   89076
         $CMD  SETPASON,SETPASON,'UNLOCK',CMDTERM                86065
         $CMD  SETPASON,SETPASON,'SIGNON',CMDTERM                88192
PSWCMD   $CMD  SETPASON,SETPASON,'LOGON',CMDTERM                 88179
         $CMD  SETPASOF,SETPASOF,'LOCK',CMDTERM                  86065
         $CMD  SETOSCMD,SETOSCMD,'OS',CMDTERM+CMDAUTH            87187
         $CMD  SETWTO,SETWTO,'MESSAGE',CMDTERM                   88172
         $CMD  SETWTO,SETWTO,'MSG',CMDTERM                       88172
         $CMD  SETHELP,SETHELP,'HELP',CMDTERM                    88172
         $CMD  SETHELP,SETHELP,'?',CMDTERM                       88172
         $CMD  SETNEWS,SETNEWS,'NEWS',CMDTERM                    88179
CLOGOFF  $CMD  LOGOFF,LOGOFCMD,'LOGOFF',CMDTERM
         $CMD  LOGOFF,LOGOFCMD,'SIGNOFF',CMDTERM                 88192
         $CMD  SETSHOW,SETSHOW,'SHOW',CMDTERM+CMDCONS  SHOW STUFF
         $CMD  SETSET,SETSET,'SET',CMDTERM+CMDCONS   SET THINGS  88206
         $CMD  SETKILL,SETKILL,'KILL',CMDTERM+CMDCONS+CMDAUTH    88206
         SPACE 1                                                 88192
         $CMD  CONSREST,CONSREST,'RESTART',CMDCONS               88192
         $CMD  CONSREST,CONSREST,'RESHOW',CMDCONS                88192
         $CMD  CONSREST,CONSREST,'REPEAT',CMDCONS                88192
         $CMD  CONSLOCK,CONSLOCK,'LOCK',CMDCONS                  88192
         $CMD  CONSULOK,CONSULOK,'UNLOCK',CMDCONS                88192
         $CMD  SETWTO,CONSMSG,'MESSAGE',CMDCONS                  88192
         $CMD  SETWTO,CONSMSG,'MSG',CMDCONS                      88192
         $CMD  SETWTO,CONSMSG,'MSG',CMDINIT ALLOW IN CONFIG FILE 90054
         $CMD TESTMSG,TESTMSG,'TESTMSG',CMDAUTH+CMDCONS+CMDTERM+CMDINIT
         SPACE 1
CMDTABND DC    CL8'ENDOFTAB'                 END OF COMMAND TABLE
NETINTAB CSECT ,             PUT END IN PROPER CSECT             90126
         PRINT &PRTSYS                                           85234
         ENDINTAB                                                87193
         TITLE 'MVS/SP SYSTEM IPO SUPPLIED INTERPRET TABLE'      87187
*/* LIB: IPO1.COM.SAMPLIB(INTTAB)                                87187
*/* GDE: SYSTEM IPO COMMUNICATIONS GUIDE                         87187
*/* DOC: THIS IS THE MVS/SP SYSTEM IPO SAMPLE INTERPRET TABLE    87187
*/*      FOR VTAM LOGONS.  IT HAS THE UPPER AND LOWER            87187
*/*      CASE ENTRIES FOR 'LOGON' (ROUTINE OF NETINLOG)          87187
*/*                                                              87187
         SPACE 2                                                 87187
***************************************************************  87187
*                                                                87187
*    SCAN INPUT FOR STANDARD LOGON SEQUENCE                      87187
*                                                                87187
*    STANDARD LOGON SEQUENCE IS AS FOLLOWS:                      87187
*      ANY NUMBER OF BLANKS                                      87187
*      'LOGON ' OR 'LOGON,'                                      87187
*      OPTIONAL OTHER DATA ENDING IN ' ' OR ','                  87187
*      'APPLID('                                                 87187
*      ONE TO EIGHT ALPHANUMERIC CHARACTERS SIGNIFYING           87187
*       THE APPLICATION NAME                                     87187
*      ')'                                                       87187
*      AN OPTIONAL ' ' OR ',' FOLLOWED BY OTHER DATA             87187
*                                                                87187
*    NOTE:                                                       87187
*      'LOGON' OR 'LOGON ' OR 'LOGON,'                           87187
*      IS SUFFICIENT TO LOGON TO TSO.                            87187
*                                                                87187
*    NOTE:                                                       87187
*      IF 'APPLID(NAME)' IS NOT FOUND,                           87187
*      THEN TSO IS ASSUMED.                                      87187
*                                                                87187
***************************************************************  87187
         PUSH  USING                                             87193
         DROP  ,             MAKE SURE                           90126
NETINLOG CSECT ,                                                 87187
         STM   R14,R12,12(R13)                                   87187
         BALR  R12,0                                             87187
         USING *,R12                                             87187
*                                                                87187
         LTR   R2,R0                   LENGTH OF LOGON MESSAGE   87187
         BNP   VS2DFLT       MAKE DEFAULT SUBSYSTEM              90120
         BCTR  R2,0                    DECREMENT TO              87187
         EX    R2,TRANS                 EXECUTE TRANSLATE        87187
         LR    R2,R0                   LENGTH OF LOGON MESSAGE   87187
         LR    R3,R1                   POINT TO LOGON MESSAGE    87187
         LR    R4,R3                   POINT BEYOND END OF       87187
         AR    R4,R2                    LOGON MESSAGE            87187
         BCTR  R3,0                    BACKSPACE 1 FOR LOOP      87187
*                                       ACTION                   87187
*                                       BELOW                    87187
         SPACE 2                                                 87187
NEXTCHAR DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHARACTER            87187
         CLI   0(R3),C' '              IGNORE LEADING BLANKS     87187
         BNE   FOUNDLOG                NON BLANK CONTINUE        87187
         BCT   R2,NEXTCHAR             ALL BLANKS?               87187
         B     VS2DFLT                 YES. SET DEFAULT          90120
         SPACE 2                                                 87187
FOUNDLOG DS    0H                                                87187
         LA    R5,L'CLOGON+L'CAPPLID+3(,R3) MINIMUM END          87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
*       'LOGON' HAS BEEN FOUND.SEARCH FOR APPLID(NAME)           87187
         SPACE 2                                                 87187
         LA    R3,L'CLOGON(,R3)        NEXT CHAR BEYOND LOGON    87187
         CLI   0(R3),C' '              NEXT CHAR MUST BE         87187
         BE    APPLSCAN                  EITHER BLANK OR A       87187
         CLI   0(R3),C','                COMMA                   87187
         BNE   VS2DFLT                 NO. MUST BE DEFAULT       90120
APPLSCAN LA    R7,L'CAPPLID  MAXIMUM LENGTH                      87187
         SPACE 2                                                 87187
APPLSCAM DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               NEXT CHAR                 87187
         LA    R5,2(R7,R3)   LENGTH FOR STD. SEQUENCE            87187
         CR    R5,R4         WILL IT FIT ?                       87187
         BH    VS2NTSO       NO; ASSUME TSO                      87187
         LA    R5,L'CAPPLID+2(,R3)     MINIMUM END               87187
         CR    R5,R4                   CAN STANDARD SEQUENCE     87187
*                                       FIT IN DATA AREA?        87187
         BH    VS2NTSO                 NO. MUST BE TSO           87187
         SPACE 2                                                 87187
         CLC   CAPPLID,0(R3)           IS THIS APPLID(?          87187
         BNE   APPLSCAM                                          87187
         SPACE 2                                                 87187
*       APPLID( FOUND--ENSURE THAT BLANK OR COMMA PRECEDES IT    87187
*       AND THAT IT'S WITHIN BOUNDS OF MESSAGE                   87187
         SPACE 2                                                 87187
COMAPPL  BCTR  R3,0                    BACKSPACE ONE             87187
         CLI   0(R3),C' '              IS IT A BLANK?            87187
         BE STARTSOK                   CONTINUE IF SO            87187
         SPACE 2                                                 87187
         CLI 0(R3),C','                IS IT A COMMA?            87187
         BE    STARTSOK                CONTINUE IF SO            87187
         SPACE 2                                                 87187
         LA    R3,1(R7,R3)         NEXT CHAR PAST APPLID(        87187
         B     APPLSCAN                CONTINUE SCAN FOR APPLID( 87187
         SPACE 2                                                 87187
STARTSOK DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(R7,R3)   GO PAST APPLID(                     87187
NEXT     CLI   0(R3),C' '              IS IT A BLANK?            87187
         BNE   RIGHT                   NO.CHECK FOR RIGHT PAREN  87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL   VS2NTSO                 YES. MUST BE TSO          87187
         B     NEXT                    NO. GO TO NEXT CHAR       87187
RIGHT    CLI   0(R3),C')'              NULL APPL NAME?           87187
         BE    APPLSCAN                YES. LOOK FOR VALID       87187
*                                       APPLID(                  87187
         SPACE 2                                                 87187
*       FIND RIGHT PARENTHESIS                                   87187
         SPACE 2                                                 87187
         LR    R6,R3                   ADDRESS POTENTIAL APPLID NAME
         SPACE 2                                                 87187
FNDPAREN DS    0H                                                87187
         SPACE 2                                                 87187
         LA    R3,1(,R3)               POINT TO NEXT CHAR        87187
         CR    R3,R4                   END REACHED?              87187
         BNL VS2NTSO                   YES. MUST BE TSO          87187
         SPACE 2                                                 87187
         CLI   0(R3),C')'              IS THIS RIGHT PAREN.?     87187
         BNE   FNDPAREN                NO,CONTINUE SCAN          87187
         LA    R5,1(,R3)               MINIMUM END               87187
         CR    R5,R4                   END OF DATA               87187
         BE    NAMELENG                YES. CAN CHECK FOR        87187
*                                       APPL NAME                87187
         SPACE 2                                                 87187
         CLI   1(R3),C' '              NO. NEXT CHARACTER MUST   87187
         BE    NAMELENG                 BE BLANK OR COMMA,       87187
         CLI   1(R3),C','               ELSE CONTINUE SCAN FOR   87187
         BNE   APPLSCAN                 VALID APPLID             87187
         SPACE 2                                                 87187
NAMELENG DS    0H                                                87187
         SPACE 2                                                 87187
*       IF THIS POINT REACHED APPLID WITH LEFT AND RT. PAREN FOUND
*        AND IT IS FOLLOWED BY A BLANK OR A COMMA OR NO MORE DATA
         SPACE 2                                                 87187
         SR    R3,R6                   LENGTH OF APPL NAME IN R3 87187
         CH    R3,LAPPLID              IS NAME TOO BIG?          87187
         BNH   EXTRAPPL                NO. EXTRACT APPL NAME     87187
         LR    R3,R6                   YES. CONTINUE SCAN FOR    87187
         B     APPLSCAN                 VALID APPLID(            87187
EXTRAPPL DS    0H                                                87187
         SPACE 2                                                 87187
         BCTR  R3,0                    DECREMENT FOR EXECUTE     87187
         MVC   20(8,R13),BLANK8        CLEAR OUT TO MOVE NAME    87187
         EX    R3,MVCNAME              EXEC MVC WITH CORRECT LENGTH
         B     VS2ISOK                 GO SET GOOD CODE          87187
         SPACE 2                                                 87187
*        USER TO BE CONNECTED TO DEFAULT SUBSYSTEM (NETWORK SOLICITOR)
*        WHEN NETSOL IS NOT AVAILABLE, THIS DEFAULT CAUSES AN 0C6 ABEND
*        IN VTAM!!!  THE INSERTED CODE SCANS THE ASCB CHAIN TO MAKE
*        SURE NETSOL IS THERE - IF NOT, THE REQUEST IS REJECTED. 90120
VS2DFLT  L     R3,CVTPTR                                         90120
         USING CVTMAP,R3                                         90120
         L     R15,CVTASVT   GET THE ASCB VECTOR TABLE           90120
         USING ASVT,R15                                          90120
         L     R0,ASVTMAXU   GET HIGHEST VALID ASID              90120
         SLL   R0,2          *4 FOR FAST CHECK                   90120
         SLR   R1,R1         SET INDEX FOR NEXT ASID             90120
GTIAASID LA    R1,4(,R1)     GET NEXT ASID INDEX                 90120
         CR    R1,R0         VALID ?                             90120
         BH    VS2FAIL       NO; QUIT                            90120
GTIAACOM LA    R5,ASVTFRST(R1)  POINT TO ASCB POINTER            90120
         ICM   R5,15,0(R5)   LOAD AND TEST                       90120
         BNP   GTIAASID      SKIP UNUSED/FREE SLOT               90120
         USING ASCB,R5                                           90120
         LA    R14,8         SET DIFFERENTIAL OFFSET - FAKE CSCB 90120
         ICM   R2,15,ASCBJBNI  JOB CSCB ?                        90120
         BNZ   GTIAAJOB      YES; SKIP                           90120
         SLR   R14,14        RESET CSCB ORIGIN OFFSET            90120
         ICM   R2,15,ASCBCSCB  GET THE CSCB                      90120
         BZ    GTIAASID                                          90120
         USING CHAIN,R2      DECLARE THE CSCB                    90120
         CLI   CHVCD,X'04'   START TASK/INIT ?                   90120
         BNE   GTIAASID      NO                                  90120
GTIAAJOB SLR   R2,R14        MAKE FAKE CSCB ORIGIN               90120
         CLC   CTSO,CHCLS    MATCHING NAME ?                     90120
         BNE   GTIAASID      NO                                  90120
         SPACE 1                                                 90120
*  LOGON IS FOR INSTALLATION DEFAULT (IBM IS TSO)                87187
VS2NTSO  MVC   20(8,R13),CTSO          MOVE TSO NAME INTO SAVE AREA
         B     VS2ISOK       YES; ACCEPT IT                      90121
         SPACE 2                                                 87187
VS2FAIL  LA    R15,4         FAIL THIS REQUEST                   90120
         B     VS2EXCOM      GET OUT                             90120
*  VS2 LOGON SEQUENCE O.K.                                       87187
VS2ISOK  SLR   R15,R15                 INDICATE THAT LOGON SEQ   87187
VS2EXCOM LM    R0,R12,20(R13)           WAS INTERPRETED OK       87187
         BR    R14                     RETURN TO CALLER          87187
         SPACE 3                                                 87187
BLANK8   DC    CL8' '                  BLANKS FOR NAME           87187
CLOGON   DC    C'LOGON'                                          87187
*OLD*CTSO     DC    CL8'TSO'                                     87187
CTSO     DC    CL8'NETSOL70'  THIS MODULE IS INSTALLATION DFLT.  90080
CAPPLID  DC    C'APPLID('                                        87187
LAPPLID  DC    H'8'                    LENGTH OF APPLID NAME     87187
MVCNAME  MVC   20(0,R13),0(R6)                                   87187
TRANS    TR    0(0,R1),TRTAB2                                    87187
         SPACE 3                                                 87187
TRTAB2   EQU   *                                                 87187
         DC    74C' '         00-49    BLANK OUT CONTROL CHARS   87187
         DC    X'4A'                   CENT OR LEFT ARROW        87187
         DC    C'.<(+|'                                          87187
         DC    X'50'                   AMPERSAND                 87187
         DC    X'515253545556575859'                             87187
         DC    X'5A'                   EXCLAMATION POINT         87187
         DC    C'$*);¬-/'                                        87187
         DC    X'6263646566676869'                               87187
         DC    X'6A'                   VERTICAL LINE (NOT |)     87187
         DC    C',%_>?'                                          87187
         DC    X'707172737475767778'                             87187
         DC    X'79'                   GRAVE ACCENT              87187
         DC    C':#@'                                            87187
         DC    X'7D'                   SINGLE QUOTE              87187
         DC    C'="'                                             87187
         DC    X'80'                                             87187
         DC    C'ABCDEFGHI'            SMALL LETTERS             87187
         DC    X'8A8B8C8D8E8F90'                                 87187
         DC    C'JKLMNOPQR'            SMALL LETTERS             87187
         DC    X'9A9B9C9D9E9FA0'                                 87187
         DC    X'A1'                   TILDE                     87187
         DC    C'STUVWXYZ'             SMALL LETTERS             87187
         DC    X'AAABACADAEAF'                                   87187
         DC    X'B0B1B2B3B4B5B6B7B8B9'                           87187
         DC    X'BABBBCBDBEBF'                                   87187
         DC    X'C0'                   LEFT BRACE                87187
         DC    C'ABCDEFGHI'            CAPITAL LETTERS           87187
         DC    X'CACB'                                           87187
         DC    X'CC'                   HOOK                      87187
         DC    X'CD'                                             87187
         DC    X'CE'                   FORK                      87187
         DC    X'CF'                                             87187
         DC    X'D0'                   RIGHT BRACE               87187
         DC    C'JKLMNOPQR'            CAPITAL LETTERS           87187
         DC    X'DADBDCDDDEDF'                                   87187
         DC    X'E0'                   REVERSE SLANT             87187
         DC    X'E1'                                             87187
         DC    C'STUVWXYZ'             CAPITAL LETTERS           87187
         DC    X'EAEB'                                           87187
         DC    X'EC'                   CHAIR                     87187
         DC    X'EDEEEF'                                         87187
         DC    C'0123456789'                                     87187
         DC    X'FA'                   LONG VERTICAL LINE (NOT   87187
*                                       | OR VERTICAL LINE)      87187
         DC    X'FBFCFDFEFF'                                     87187
         POP   USING                                             87193
NETSOL70 CSECT ,             RETURN                              87193
         TITLE '*********  N E T S O L  -  SPECIAL LOGMODE ENTRY TABLE'
***********************************************************************
*        THIS TABLE DEFINES THOSE APPLICATIONS WHICH DO NOT USE       *
*        THE DEFAULT LOGMODE ENTRY FOR THE DEVICE.                    *
*                                                                     *
*        EACH TABLE ENTRY CONSISTS OF THE FOLLOWING FIELDS:           *
*                                                                     *
*             LOGMDAPP - THE APPLID OF THE APPLICATION USING A        *
*                        DIFFERENT LOGOMODE TABLE ENTRY.              *
*                                                                     *
*             LOGMDENT- THE ASSOCIATED LOGOMODE TABLE ENTRY NAME.     *
*                                                                     *
***********************************************************************
         SPACE 1
LOGMDAPP EQU   0,8                    APPLICATION NAME
LOGMDENT EQU   8,8                    ASSOCIATED LOGMODE TABLE ENTRY
LOGMDLEN EQU   16                     LENGTH OF A TABLE ENTRY
         SPACE 1
LOGMDTAB EQU   *                             START OF LOGMODE TABLE
*                 /APPLID  /    /LOGMODE /   FORMAT ENTRY
LOGMDRLY DC    CL8'R3270   ',CL8'RLY3767 '   RELAY/3270/GOLD     88248
LOGMDHCF DC    CL8'HCF     ',CL8'HCFPX   '   HCF
LOGMDNCF DC    CL8'NCCF    ',CL8'DSILGMOD'   NCCF
LOGMDEND DC    XL8'FFFFFFFFFFFFFFFF'         END OF LOGMODE TABLE
         TITLE '*********  N E T S O L  -  MESSAGE EQUATES/CONSTANTS'
*              EQUATES FOR ERROR MESSAGE NUMBERS AND REASON-CODES
MSG01    EQU   1                       INVALID LOGMODE TABLE ENTRY
MSG02    EQU   2                       LOGON DATA NOT IN INTRPRET TBLE.
MSG03    EQU   3                       NO INTRPRET TABLE
MSG04    EQU   4                       NO ROUTINE TO FIND APPL NAME
MSG05    EQU   5                       NOT AUTHORIZED FOR APPLICATION
MSG06    EQU   6                       APPLICATION NOT KNOWN
MSG07    EQU   7                       APPLICATION DEACTIVATED
MSG08    EQU   8                       APPLICATION INACTIVE
MSG09    EQU   9                       APPLICATION QUIESCING
MSG10    EQU   10                      APPLICATION NEVER ACCEPTS LOGONS
MSG11    EQU   11                      APPLICATION TEMPORARILY NOT
*                                      ACCEPTING LOGONS.
MSG12    EQU   12                      THIS TERMINAL LOGGED ON
*                                      TO NETWORK SOLICITOR
MSG13    EQU   13            LOGON SCREEN / CENTER CLOSED        86065
MSG14    EQU   14            UNTIMELY REQUEST (SYSTEMS ONLY)     86065
MSG15    EQU   15            TERMINAL NOW UNLOCKED               86065
MSG16    EQU   16            TERMINAL NOW LOCKED                 86065
MSG17    EQU   17            UNLOCK REQUEST FAILED               86065
MSG18    EQU   18                      UNAUTHORIZED COMMAND      87187
MSG19    EQU   19            TEXT SUPPLIED IN DATAPTR            87187
MSG20    EQU   20            LOGON SCREEN                        88179
MSGMAX   EQU   20       **** HIGHEST DEFINED MESSAGE NUMBER **** 88220
         SPACE 1
***********************************************************************
*        LIST FORMS OF SOME MESSAGES                                  *
***********************************************************************
         SPACE 1
LISTWTO  WTO  'BCSC001 TERM=******** HAS BEEN RELEASED BY NETSOL DUE TOX
                I/O ERROR',                                            X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO1 WTO  'BCSC002 RC=42 ON NETSOL CLOSE ACB',                     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO6 WTO  'BCSC006 NETSOL IS ALREADY RUNNING. EXECUTION OF THIS PROX
               GRAM IS TERMINATED.',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
ERRORMSG WTO  'BCSC003 SYNAD/LERAD EXIT REQ=**,RTNCD=**,FDBK2=**,SSENSEX
               I=**,SSENSMI=**,SENSE=****,TERM=********',              X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LOSTMSG  WTO  'BCSC004 LOSTERM ENTRY CODE XX FOR TERM=********',       X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
RELRQMSG WTO  'BCSC005 TERM=******** RELEASED DUE TO RELREQ REQUEST',  X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
RELFLMSG WTO  'BCSC007 TERM=******** NOT RELEASED BY RELREQ EXIT',     X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LISTWTO8 WTO  'BCSC008 TERM=******** IS AN UNSUPPORTED TERMINAL TYPE', X
               ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
LOGMENU  WTO  'BCSC009 TERM=******** MENU WRITTEN FROM ******',        X
               ROUTCDE=(11),DESC=(7),MF=L
         SPACE 2
MSG1003  WTO  'BCSC010 TERM=******** LOGMODE NOT COMPATIBLE WITH TERMINX
               AL',ROUTCDE=(8),DESC=(7),MF=L
         SPACE 2
DCBMSG   WTO  'BCSC011 XXXXXX FILE WILL NOT OPEN. INITIALIZATION BYPASSX
               ED',ROUTCDE=(1,8),DESC=(7),MF=L
         SPACE 2
INITEMSG WTO 'BCSC012 ERRORS ON INITIALIZATION FILE. EXECUTION CONTINUEX
               S',ROUTCDE=(1,8),DESC=(7),MF=L
         SPACE 1                                                 88221
KICKBACK WTO   'BCSC013 XXXXXXXX REJECTED BY YYYYYYYY',ROUTCDE=(1,8),DE*
               SC=7,MF=L                                         88221
         TITLE '*********  N E T S O L  -  A C B'
         DS    0D
         DC    CL8'ACB'
         SPACE 1
ACB      ACB   AM=VTAM,                                                X
               APPLID=NSNAME,                                          X
               EXLST=EXLST,                                            X
               MACRF=LOGON
         TITLE '*********  N E T S O L  -  TERMINAL TABLE DSECT'
TERMTABL DSECT
TERMNAME DS    CL8                     TERMINAL LU NAME FROM LOGON
TERMNAM2 DS    0CL8          END-RANGE ENTRY FOR SETRANGE        88185
TERMCID  DS    XL4                     CID GOTTEN AFTER OPNDST
TERMCRPL DS    AL4                     A(ACTIVE RPL FOR THIS TTE)
TERMAPPL DS    CL8                     APPLID FOR LAST CLSDST(PASS)
TERMDAPL DS    CL8                     DEFAULT LOGON APPLID FOR TERM
TERMLOGC DS    H                       LOGON COUNTER
TERMDCNT DS    H                       AUTO LOGON LOOP COUNTER
TERMFLAG DS    XL1           FLAG BYTE FOR LOGON STATUS
LOGPROC  EQU   X'80'           LOGON PROCEEEDING
SENDSCED EQU   X'40'           SEND (POST=SCHED) ISSUED         DC18203
TERMCONS EQU   X'20'           TTE IS FOR OPERATOR CONSOLE       88192
LETMODE  EQU   X'10'           ALLOW LOGMODE IN CLSDST PASS      88207
FLIPFLOP EQU   X'08'           CONVERSATIONAL MODE DEVICE        90135
CONTENT  EQU   X'04'           CONTENTION MODE (3767)            90135
TERMFLG2 DS    XL1                     FLAG FOR TERMINAL'S NETSOL STAT
TOPEN    EQU   X'80'                   TERM LOGGED ON TO NETSOL
TPASSED  EQU   X'40'                   TERM SUCCESSFULLY TO APPLID
TREL     EQU   X'20'                   TERM RELEASED FOR SOME REASON
TINIT    EQU   X'10'                   DEFAULT APPLID SET AT INIT TIME
TERMFLG3 DS    XL1           AUTHORIZATION FLAGS                 86143
TFREQ    EQU   X'80'         USER MUST COMPLETE LOGON            88172
TFAUL    EQU   X'40'         USER WISHES AUTOMATIC LOGON         88172
TFLOF    EQU   X'10'         DEVICE FAULT - FORCE A LOGOFF       88188
TFAPL    EQU   X'08'         USER RESTRICTED TO ONE APPLICATION  88220
TFLON    EQU   X'04'         USER HAS LOGGED ON                  88172
TSYSP    EQU   X'02'         USER HAS SYSTEM PRIVILEGES          86065
TSUPP    EQU   X'01'         USER HAS SUPPORT PRIVILEGES         86065
TPRIVY   EQU   TSYSP+TSUPP     SOME PRIVILEGE                    86065
TERMMSGX DC    X'00'         INDEX OF LAST MESSAGE SENT          86160
TERMDDT  DS    A                       A(DDT FOR THIS TERMINAL)  86143
TERMDTIM DS    F                       TIME+60 SECS OF AUTO LOGON
TERMRUSZ DS    F             MAXIMUM SEND RU SIZE OR 0           86143
TERMLPAD DS    A             ADDRESS OF LOGON MESSAGE OR 0       87131
TERMLPLN DS    F             LENGTH OF LOGON MESSAGE OR ZERO     87131
TERMLOUD DS    F             ADDRESS OF LOCAL ON-LINE USER DATA  88179
*ERMMODE DS    CL8           LOGMODE NAME (FROM SESSIONS BIND)   88213
TERMETIM DS    F             TIME OF LAST (SERIES) OF ERRORS     91296
TERMERCT DS    F             NUMBER OF CONSECUTIVE ERRORS        91296
TERMELEN EQU   *-TERMNAME              LENGTH OF AN ENTRY
         TITLE '*********  N E T S O L  - DEVICE DEPENDENT TABLE DSECT'
DDT      DSECT
         SPACE 1
*        THE DEVICE DEPENDENT TABLE IDENTIFIES EDIT AND I/O ROUTINES
*        AND MESSAGES APPLICABLE TO A PARTICULAR DEVICE TYPE.
*        THE INQUIRE MACRO IS ISSUED IN THE LOGON EXIT TO OBTAIN
*        LOGMODE INFORMATION SO THAT THE DEVICE TYPE CAN BE DETERMINED.
*        TERMDDT POINTS TO THE DDT FOR A TERMINAL.
         SPACE 1
         DS    0D
DDTEDIT  DS    AL4                     A(INPUT EDIT ROUTINE)
DDTSEND  DS    AL4                     A(SEND ROUTINE)
DDTTERM  DS    AL4                     A(TERMINAL FIELD IN MSG 12)
DDTTERM3 DS    AL4                     MESSAGE 13                86065
DDTTERM2 DS    AL4                     MESSAGE 20                88179
DDTTIME  DS    AL4                     A(TIME FIELD IN MSG 12)
DDTTIME3 DS    AL4                                               86065
DDTTIME2 DS    AL4                                               88179
DDTM4OFS DS    AL4                     A(USABLE MSG BUFFER IN MSG4)
DDTMSGOF DS    AL2                     MSG OFFSET OF DATA FIELD
DDTM4L   DS    AL2                     LEN(USABLE MSG BUFFER IN MSG4)
DDTMSGTB DS    0F
DDTMSG01 DS    AL4                     A(MSG 01)
DDTMSG02 DS    AL4                     A(MSG 02)
DDTMSG03 DS    AL4                     A(MSG 03)
DDTMSG04 DS    AL4                     A(MSG 04)
DDTMSG05 DS    AL4                     A(MSG 05)
DDTMSG06 DS    AL4                     A(MSG 06)
DDTMSG07 DS    AL4                     A(MSG 07)
DDTMSG08 DS    AL4                     A(MSG 08)
DDTMSG09 DS    AL4                     A(MSG 09)
DDTMSG10 DS    AL4                     A(MSG 10)
DDTMSG11 DS    AL4                     A(MSG 11)
DDTMSG12 DS    AL4                     A(MSG 12)
DDTMSG13 DS    AL4                     A(MSG 13)                 86065
DDTMSG14 DS    AL4                     A(MSG 14)                 86065
DDTMSG15 DS    AL4                     A(MSG 15)                 86065
DDTMSG16 DS    AL4                     A(MSG 16)                 86065
DDTMSG17 DS    AL4                     A(MSG 17)                 86065
DDTMSG18 DS    AL4                                               87187
DDTMSG19 DS    AL4           FREE FORMAT MSG (A/L IN DATAPTR)    87187
DDTMSG20 DS    AL4           LOGON SCREEN                        88179
         SPACE 2                                                 90120
*        DCB FOR SYSIN FILE
NETSOL70 CSECT ,
         SPACE 1
         DCBD  DSORG=PS                                          92273
         PRINT NOGEN
         SPACE 2                                                 90120
         ISTDNIB
         TITLE '*********  N E T S O L  -  B I N D   DSECT'
         PRINT GEN
         ISTDBIND
         AIF   (&MVSXA).NOBINAT                                 GP04234
BINLUP0C EQU   0                                                GP04234
BINDFLAG EQU   BINLUP+1,1,C'X'  OPTION FLAGS                    GP04234
BINSEDS  EQU   X'80'         DEVICE ACCEPTS EXTENDED DATA STREAMS
BINSPRIR EQU   BINLUP+6,1,C'X'  PRIMARY SIZE - ROWS
BINSPRIC EQU   BINLUP+7,1,C'X'  PRIMARY SIZE - COLUMNS
BINSALTR EQU   BINLUP+8,1,C'X'  ALTERNATE SIZE - ROWS
BINSALTC EQU   BINLUP+9,1,C'X'  ALTERNATE SIZE - COLUMNS
BINPSFX  EQU   X'7E'         FIXED SCREEN SIZE
BINPSZRC EQU   X'7F'         VARIABLE SCREEN SIZE
         ORG   BINPSCHR+4                                       GP08125
BINBFRSZ DS    0XL4          PRIMARY/ALTERNATE SCREEN SIZE      GP08125
BINBFRDR DS    X             PRI ROWS                           GP08125
BINBFRDC DS    X             PRI COLS                           GP08125
BINBFRAR DS    X             ALT ROWS                           GP08125
BINBFRAC DS    X             ALT COLS                           GP08125
BINBDESC DS    X             MODEL DESCRIPTOR                   GP08125
BINBFSIZ EQU   X'7F'           FIXED SIZE                       GP08125
BINBFSZF EQU   X'7E'           TWO SIZES                        GP08125
.NOBINAT ORG   ,                                                 88213
BINDSIZE EQU   *-ISTDBIND    MODE TABLE ENTRY SIZE -8            88213
         PRINT NOGEN
         SPACE 2                                                 90120
IFGRPLX  DSECT
STSECT   DS    0D                  START DSECT ON D-WORD
         IFGRPL DSECT=NO,AM=VTAM
         TITLE '*********  N E T S O L  - NIB, RPL, ETC.'        90120
*********       END OF RPL DSECT AND START OF NIB       **************
         ORG
NIBDMPID DC    0D'0',CL8'DYNAMNIB'     NIB DUMP ID
NIBSTART DS    CL(NIBLNIB)             ASYNCHROUS NIB
*********       END OF NIB AND START OF RPL WORK AREA   **************
WORKSPAC DS    0D                      START OF RPL WORK AREA
CID      DS    F                       CID OF READ DEVICE
RPLSAVE  DS    18F                     SAVE AREA FOR RPL OPERATIONS
RPLERRSA DS    12F                     SAVE AREA FOR SYNAD EXIT
*                                      THAT ARE ASYNCHRONOUS
APPLID   DS    CL8                     NAME OF APPLICATION
MODENAM  DS    CL8                     NAME OF MODE TABLE ENTRY
GRPLTIME DS    CL8     (HHMMSSTH YYYDD) TIMESTAMP WHEN RPL GETMAINED
RECLEN   DS    F                       FOR READ RECLEN FIELD
SENDLEN  DS    F                       FOR SEND TO TERMINAL
DATAPTR  DS    AL4(0)                  A(LOGON SEQUENCE IN IOAREA)
GPPARM   DS    AL4(0)                  A(OPTION LIST PASSED TO GETPARM)
GPDATAP  DS    AL4(0)                  A(CURRENT PTR IN CMD BUFFER)
GPDATAL  DS    H                       LENGTH OF TEXT LEFT IN CMD BUF
MSGINDEX DS    X                       NUMBER OF ERROR MESSAGE WRITTEN
ERMDATA  DS    CL7                     COMBINED ERROR FIELD
REQ      EQU   ERMDATA,1               FOR RPL REQ FIELD
RTNCD    EQU   ERMDATA+1,1             FOR RPL RTNCD FIELD
FDBK2    EQU   ERMDATA+2,1             FOR RPL FDBK2 FIELD
SENSE    EQU   ERMDATA+3,2             SAVE SSENSEI + SSENSMI FIELDS
USENSE   EQU   ERMDATA+5,2             SAVE USSESEI (2 BYTES)
ERMTEMP  DS    CL7                     ERROR FIELD WORKAREA
ACTIONS  DS    2X                      SAVE AREA FOR ERROR
APPLSTAT DC    X'0'                    FOR RPL FDBK FIELD
*                                      ACTION CODES
*        INTERNAL FLAG BYTES
FLAGS    DS    X                       FLAG BYTE
*
LOGOFF   EQU   X'80'                   LOGOFF COMMAND ISSUED
RELOPND  EQU   X'40'                   RELEASE DEVICE, THEN
*                                      ATTEMPT TO RECONNECT
*                                      VIA OPNDST
BADEVICE EQU   X'20'                   PROBLEM WITH DEVICE
FIRSTSND EQU   X'08'                   FIRST SEND TO TERMINAL
CLEARSCR EQU   X'04'                   RECEND ISSUING CLEAR SCREEN
LUSTATE  EQU   X'02'                   LUSTAT PROCESSING FOR TERMINAL
SIMLOG   EQU   X'01'                   CLSDST(PASS) FAILED => MUST
*                                      ISSUE CLSDST(RELEASE) BEFORE
*                                      CONTINUING WITH SIMLOGON
         SPACE 1
EXITFLAG DS    X                       FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
LOGONEX  EQU   X'80'                   ENTERED THE LOGON EXIT
RECEX    EQU   X'40'                   ENTERED THE READEND EXIT
PASSEX   EQU   X'20'                   ENTERED THE CLSDST(PASS) EXIT
SENDEX   EQU   X'10'                   ENTERED THE WRITE EXIT
RELREQEX EQU   X'08'                   ENTERED THE RELREQ EXIT
LOSTEX   EQU   X'04'                   ENTERED THE LOSTERM EXIT
CLOSEX   EQU   X'02'                   ENTERED THE CLSDST(RELEASE)EXIT
OPENEX   EQU   X'01'                   ENTERED THE OPNDST EXIT
         SPACE 1
EXITFLG2 DS    X                       2ND FLAG INDICATING WHICH EXITS
*                                      HAVE BEEN ENTERED.
OPNACQX  EQU   X'80'                   ENTERED THE OPNDST(ACQUIRE) EXIT
         SPACE 1
MFLAGS   DS    X                       FLAG BYTE FOR CURRENT VTAM MACRO
OPNDSPEC EQU   X'80'                   OPNDST(SPEC) IN PROGRESS
INQAPPST EQU   X'40'                   INQUIRE(APPSTST) IN PROGRESS
SENDING  EQU   X'20'                   WRITE IN PROGRESS
RECA     EQU   X'10'                   READ(ANY) IN PROGRESS
SMLOGON  EQU   X'08'                   SIMLOGON ISSUED AFTER CLSDST
INTRPRT  EQU   X'04'                   INTRPRET IN PROGRESS
CLSDST   EQU   X'02'                   CLSDST IN PROGRESS
LUSEND   EQU   X'01'                   LUSTAT RESPONSE SENT
         SPACE 1
MFLAGS2  DS    X                      FLAG BYTE2 FOR CURRENT VTAM MACRO
INQSESS  EQU   X'80'                   INQUIRE(SESSPARM) IN PROGRESS
         SPACE 1
MACFLAGS DS    X                       INDICATE MACROS CALLED FLAG 1
CLSREL   EQU   X'80'                   WILL DO CLSDST(RELEASE)
OPNSPEC  EQU   X'40'                   WILL DO OPEN(SPEC)
SIMLGON  EQU   X'20'                   SIMLOGON AFTER CLSDST
INTAPPID EQU   X'10'                   WILL DO INTERP (APPLID)
INQAPPS  EQU   X'08'                   WILL DO INQUIRE(APPSTAT)
CLOSPASS EQU   X'04'                   WILL DO CLSDST(PASS)
SENDASY  EQU   X'02'                   WILL DO SEND ASY
OPNDACQ  EQU   X'01'                   WILL DO OPNDST(AQUIRE)
         SPACE 1
MACFLAG2 DS    X                       INDICATE MACROS CALLED FLAG 2
INQSES   EQU   X'80'                   WILL DO INQUIRE(SESSPARM)
         SPACE 1
DATASEQL DS    X                       X-LATED DATA SEQ-LENGTH
SPACWORK DS    0D            EXTRA SPACE                         92300
A$SAVE   DS    3F            SAVE AREA FOR SVC 249 CALL          88207
         PRINT GEN                                               88179
         AIF   ('&LOCAL' NE 'PID').NOSVCR0                       92300
A$SVCRB  A$SVCRB DSECT=NO                                        88179
         AGO   .NOSVCRB                                          91195
.NOSVCR0 ANOP  ,             DEFINE (MISSING) FLAG BITS          91195
A$USFCIC EQU   0               NO CICS RESTRICTION               91195
A$USFEXH EQU   0               NO EXHIBIT RESTRICTION            91195
A$USFNET EQU   0               NO NETWORK RESTRICTION            91195
A$USFOTH EQU   0               NO OTHER RESTRICTIONS             91195
A$USFTSO EQU   0               LET TSO LOGON HANDLE              91195
A$USFWYL EQU   0               NO WYLBUR RESTRICTIONS            91195
A$SERMSG DS    0F              ???                               91195
.NOSVCRB ORG   SPACWORK      RE-USE DURING COMPRESSION           92300
COMPPARM DS    8A            COMP3270 PARM LIST                  90140
CPOUTLEN DS    F             OUTPUT LENGTH                       90140
CPINLEN  DS    F             INPUT LENGTH                        90140
CPBUFLEN DS    F             BUFFER SIZE                         90140
OPFUN    DS    X             REQUESTED FUNCTIONS                 90140
OPFSF    EQU   X'80'           INSERT PROT. SF IF NO SF IN LINE 2
OFNCMP   EQU   X'40'           BYPASS BUFFER COMPRESSION, ETC.   90140
OFNCOL   EQU   X'20'           BYPASS COLOR SUBSTITUTION         90140
OFYESC   EQU   X'10'           BUFFER MAY CONTAIN ESCAPE (BTAM)  90140
OFYCCW   EQU   X'08'           BUFFER CONTAINS CCW               90140
OFYWCC   EQU   X'04'           BUFFER CONTAINS WCC/PCC           90140
OPADD    DS    X             ADDRESSING MODE                     90140
OPA16    EQU   X'02'           USE 16-BIT ADDRESSING ONLY        90140
OPA14    EQU   X'01'           14-BIT ADDRESSING SUPPORTED       90140
OPCOL    DS    X             COLOR MODE                          90140
OPSEVEN  EQU   X'07'           7-COLOR MODE                      90140
OPBACK   EQU   X'70'           BACKGROUND COLOR AVAILABLE        90140
OPHIGH   DS    X             EXTENDED HIGH-LIGHTING              90140
*PSEVEN  EQU   X'07'           ALL EXTENDED HIGH-LIGHTING        90140
OPMISC   DS    X             MISCELLANEOUS OPTIONS               90140
OPFVAL   EQU   X'80'           FIELD VALIDATION SUPPORTED        90140
OPFOUT   EQU   X'40'           FIELD OUTLINING                   90140
OPSEQLEN EQU   *-COMPPARM    LENGTH TO CLEAR                     90140
         ORG   ,             USE LARGER LENGTH                   90140
         PRINT NOGEN                                             88179
         SPACE 1
WORKRPLA EQU   *-WORKSPAC              USED TO CLEAR OUT WORKAREA
         TITLE '*********  N E T S O L  -  SYNCHRONOUS RPL + NIB + WA'
***********************************************************************
*        THE FOLLOWING RPL IS USED FOR ALL SYNCHRONOUS COMMANDS       *
***********************************************************************
         SPACE 1
NETSOL70 CSECT ,
         PRINT &PRTSYS                                           85234
         DS    0D
         DC    CL8'SYNCHRPL'
         SPACE 1
SYNCHRPL RPL  ACB=ACB,OPTCD=(SYN),                                     *
               AM=VTAM
         ORG   ,
***********************************************************************
*        THE FOLLOWING NIB IS USED FOR ALL SYNCHRONOUS OPERATIONS     *
*        REQUIRING A NIB.                                             *
***********************************************************************
         SPACE 1
         DC    0D'0',CL8'SYNCHNIB'
SYNCHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0,                     *
               RESPLIM=0     **IS THIS SAFE** ???                90199
         DS    0D
SYNWORK  DC    (WORKRPLA)X'00'         RPL WORK AREA
SYNARG   EQU   SYNCHRPL+RPLARG-IFGRPL  DISPLACEMENT TO THE ARG
*                                      WITHIN SYNCHRPL
SYNFDB3  EQU   SYNCHRPL+RPLFDB3-IFGRPL DISPLACEMENT TO FBD3
*                                      IN SYNCHRPL'S WORKAREA
SRPLEXT1 EQU   SYNCHRPL+RPLEXTD1-IFGRPL DISPLACEMENT TO 'NIB@
*                                      IN ARG FIELD' BIT
SYNUSFLD EQU   SYNCHRPL+RPLUSFLD-IFGRPL DISPLACEMENT TO RPL USER FIELD
*                                      FOR USE BY ERROR EXIT ROUTINE
         SPACE 2
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE SYNCHRONOUS  *
*        RPLS. IT IS NOT ITSELF USED IN ANY MACROS       DC18203      *
***********************************************************************
         SPACE 1
         DS    0D                                              DC18203
         DC    CL8'FRSYNRPL'                                   DC18203
FRSYNRPL RPL   ACB=ACB,AM=VTAM,OPTCD=(SYN)
FRSYNL   EQU   *-FRSYNRPL    LENGTH OF SYN RPL FOR REFRESH     DC18203
         SPACE 2                                                 90120
***********************************************************************
*        SETLOGON RPL - A SEPARATE RPL IS NECESSARY BECAUSE           *
*         THE LOGON EXIT CAN BE DRIVEN BEFORE THE SETLOGON            *
*         COMPLETES.                                                  *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'LOGONRPL'
         SPACE 1
SETLRPL  RPL   ACB=ACB,OPTCD=(SYN),                                    *
               AM=VTAM
SETNIB   DC    (8+NIBLNIB)X'00'        NIB IN IFGRPLX DSECT
SETWORKA DC    (WORKRPLA)X'00'         WORKAREA IN IFGRPLX DSECT
         SPACE 2                                                 87131
***********************************************************************
*        THE FOLLOWING NIB IS USED TO REFRESH THE NIB IN THE          *
*        ASYNCHROUS RPL. IT ITSELF IS NOT USED IN ANY MACRO.          *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'FRESHNIB'
         SPACE 1
FRESHNIB NIB  MODE=RECORD,PROC=TRUNC,                                  X
               LISTEND=YES,LOGMODE=C' ',BNDAREA=0,                     *
               RESPLIM=16    AVOID 14,44 ERRORS (?)              90199
         SPACE 2                                                 87131
***********************************************************************
*        THIS RPL IS USED EXCLUSIVELY FOR REFRESHING THE ASYNC        *
*        RPLS IN THE RPL CSECT.  IT IS NOT ITSELF USED IN ANY         *
*        MACRO.                                                       *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'FRESHRPL'
         SPACE 1
FRESHRPL RPL   ACB=ACB,                                                X
               AM=VTAM,                                                X
               OPTCD=(ASY)
         TITLE '*********  N E T S O L  -  INITIALIZATION CODE'  86145
***********************************************************************
*        THIS CODE WILL MOVE THE CONTENTS OF NSNAME              86012
*        INTO MESSAGE 12 FOR EACH OF THE SUPPORTED DEVICES TO ALLOW   *
*        FOR EASY VISUAL IDENTIFICATION OF THE TEST VERSION OF NETSOL.*
***********************************************************************
         USING OPENIDS,R7    BASE SET BY CALLER                  86145
OPENIDS  L     R14,=AL4(S32NSN12)      3270 SCREEN START         86012
         L     R15,=AL4(S3ENSN12)      UPDATE 3270 EXTENDED      86012
         L     R1,=AL4(S37NSN12)       UPDATE 3767               86012
         L     R2,=A(MD5NSN12)         UPDATE MODEL 5 SCREEN     88206
         ICM   R3,15,PSAATCVT-PSA   ANY VTAM UP ?                86012
         BZ    NOATCVT       NO ?                                86012
         CLI   0(R3),C'V'    VERSION ID ?                        86012
         BNE   NOATCVT       NO                                  86012
         MVC   0(9,R14),=C'VTAM V?R?'                            86012
         CLI   1(R3),C'X'    NEW 'VX' PREFIX ?                   92363
         BE    OPENID24                                          92363
         CLI   1(R3),C'T'    OLD 'VT' PREFIX ?                   90094
         BE    OPENID24      YES; IS VT##                        90094
         BCTR  R3,0          ELSE IS V###                        90094
OPENID24 MVC   VTAMVERL,2(R3)  SAVE VERSION # FOR CODE TESTS     92221
         MVC   6(1,R14),2(R3)  COPY VERSION NUMBER               86012
         MVC   8(1,R14),3(R3)  COPY RELEASE NUMBER               86012
         MVC   0(9,R15),0(R14)  COPY TO OTHER TYPE SCREEN        86012
         MVC   0(9,R1),0(R14)  COPY TO 3767 LINE                 86012
         MVC   0(9,R2),0(R14)  MODEL 5                           88206
         LA    R0,12         SET INCREMENT                       88206
         AR    R14,R0        SKIP OVER IT                        86012
         AR    R15,R0                                            86012
         AR    R1,R0                                             86012
         AR    R2,R0         ADVANCE MODEL 5 POINTER             88206
NOATCVT  MVC   0(8,R14),NSNAME+1                   MSG 12        86012
         MVC   0(8,R15),NSNAME+1                   MSG 12        86012
         MVC   0(8,R1),NSNAME+1                   MSG 12
         MVC   0(8,R2),NSNAME+1                                  88206
         L     R14,=AL4(S32NSN12)      3270 SCREEN START         86065
         L     R15,=AL4(S3ENSN12)      UPDATE 3270 EXTENDED      86065
         L     R2,=AL4(MD5NSN12)       MODEL 5                   88206
         MVC   S32NSN13-S32NSN12(30,R14),0(R14)  COPY TO MSG 13  86065
         MVC   S3ENSN13-S3ENSN12(30,R15),0(R15)                  86065
         MVC   MD5NSN13-MD5NSN12(30,R2),0(R2)                    88206
         L     R14,=AL4(S32NSN13)      3270 SCREEN START         88179
         L     R15,=AL4(S3ENSN13)      UPDATE 3270 EXTENDED      88179
         L     R2,=AL4(MD5NSN13)                                 88206
         MVC   S32NSN20-S32NSN13(30,R14),0(R14)  COPY TO MSG 13  88179
         MVC   S3ENSN20-S3ENSN13(30,R15),0(R15)                  88179
         MVC   MD5NSN20-MD5NSN13(30,R2),0(R2)                    88206
         SPACE 1                                                 86012
         L     R3,CVTPTR     GET THE CVT                         86012
         L     R3,CVTSMCA-CVTMAP(,R3)  GET THE SMCA TABLE        86012
         L     R1,=A(S32SID12)                                   86012
         USING S32SID12,R1    DECLARE IT                         86012
         MVC   S32SID12(4),16(R3)  COPY THE SMCA ID              86012
         MVC   S32SID13(4),16(R3)                                86065
         L     R14,=A(S32SID20)                                  88179
         MVC   0(L'S32SID12,R14),S32SID12                        88179
         L     R1,=A(S3ESID12)                                   88172
         USING S3ESID12,R1                                       86065
         MVC   S3ESID12(4),16(R3)                                86012
         MVC   S3ESID13(4),16(R3)                                86065
         L     R14,=A(S3ESID20)                                  88179
         MVC   0(L'S3ESID12,R14),S3ESID12                        88179
         L     R1,=A(S37SMC12)                                   86065
         MVC   0(4,R1),16(R3)                                    86065
         MVC   S37SMC20-S37SMC12(4,R1),16(R3)                    88220
         L     R1,=A(MD5SID12)                                   88206
         USING MD5SID12,R1                                       88206
         MVC   MD5SID12(4),16(R3)                                88206
         MVC   MD5SID13(4),16(R3)                                88206
         L     R14,=A(MD5SID20)                                  88206
         MVC   0(L'MD5SID12,R14),MD5SID12                        88206
         DROP  R1                                                86012
         ICM   R0,15,@MODETAB  RECURSION ?                       88220
         BNZ   OPENIDNL      YES; KEEP OLD ONE                   88220
         LOAD  EP=ISTINCLM,ERRET=OPENIDNL                        88213
         ST    R0,@MODETAB   SAVE TABLE ADDRESS                  88213
OPENIDNL BR    R6            RETURN TO CALLER                    86145
         SPACE 1                                                 86145
         LTORG ,                                                 86145
         TITLE '*********  N E T S O L  - READ INITIALIZATION COMMANDS'
***********************************************************************
*                                                                     *
*    READINIT PROCESSES THE NETSOL COMMANDS IN THE SYSIN FILE.        *
*    COMMANDS WHICH MAY BE PLACED IN THIS FILE ARE FLAGGED            *
*    WITH 'CMDINIT' IN THEIR CMD TABLE ENTRY.                         *
*                                                                     *
*    TO ALLOW COMMAND PROCESSING ROUTINES TO BE INDEPENDENT OF THEIR  *
*    SOURCE, ALL COMMAND PROCESSORS ASSUME A DDT,TTE AND ASYNC RPL    *
*    AVAILABLE FOR THEIR USE. THEREFORE, THESE CONTROL BLOCKS HAVE    *
*    BEEN SET UP FOR READINIT.                                        *
*                                                                     *
*    INPUT : R5  - A(ASYNC RPL)                                       *
*            R13 - A(SAVE AREA)                                       *
*            R14 - RETURN ADDRESS                                     *
*                                                                     *
*   OUTPUT : REGISTERS ARE UNCHANGED                                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                 85235
         USING READINIT,R8                                       88179
READINIT STM   R14,R12,12(R13)         SET
         ST    R13,RPLSAVE+4             UP
         LA    R1,RPLSAVE                  SAVE
         ST    R1,8(,R13)                    AREA
         LR    R13,R1                          CHAIN
         SPACE 1
*        OPEN SYSIN AND SYSOUT FILES. NETSOL WILL CONTINUE EXECUTION
*        EVEN WITH ERRORS IN THE INIT FILE.
         SPACE 1
         OPEN  (SYSINDCB,(INPUT),SYSOUDCB,(OUTPUT)) OPEN FILES
         TM    SYSINDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSIN OPEN?
         BZ    DCBOSYSI                           NO => ERROR MSG
         TM    SYSOUDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSOUT OPEN?
         BNZ   RIOPENOK                           YES => BR TO CONTINUE
         MVC   DCBMSG+12(6),=CL6'SYSOUT'  MOVE
         LA    R14,PUTDUMMY  GET DUMMY 'PUT' ROUTINE             88179
         STCM  R14,7,SYSOUDCB+DCBPUTA-IHADCB                     88179
         B     *+10                        DDNAME
DCBOSYSI MVC   DCBMSG+12(6),=CL6'SYSIN '      TO OPERATOR MSG
         WTO   MF=(E,DCBMSG)             LOG ERROR MESSAGE ON SYSLOG
         TM    SYSINDCB+DCBOFLGS-IHADCB,DCBOFOPN  SYSIN ?        88179
         BNZ   RIOPENOK      YES; READ IT ANYWAY                 88179
         B     HITEST        CHECK FOR NEWS DATA                 88179
         SPACE 1
*        SET UP RPL,TTE AND DDT LINKS FOR INIT
         SPACE 1
RIOPENOK OI    UFLAGS,INIT               FLAG PROCESSING INITIALIZATION
         LA    R3,TTEDUMMY               LOAD A(DUMMY TTE FOR INIT)
         ST    R3,RPLUSFLD               SET UP RPL USER PTR
         MVI   TERMFLG3,TFLON+TPRIVY  MAKE SYSIN PRIVILEGED      88179
         L     R9,=A(DDTSYSIN)           LOAD A(DDT FOR INIT)   85327
         ST    R9,TERMDDT                SAVE IN TTE
         USING DDT,R9         DECLARE IT                         88179
         SPACE 1
*        PROCESS NETSOL COMMANDS FROM THE SYSIN FILE
         SPACE 1
READLOOP LA    R6,IOAREA                 LOAD A(IO BUFFER)
         GET   SYSINDCB,(R6)             READ CMD FROM SYSIN FILE
READNEX2 PUT   SYSOUDCB,(R6)             ECHO CMD TO SYSOUT FILE
         SPACE 1                                                 90344
***********************************************************************
*                                                                     *
*        CONTROL CARDS MAY BE SELECTED BY CPU ID (SMCA ID) :          *
*                                                                     *
*        PLACE CPU= IN COLUMN 2                                       *
*              CPU= RESETS SELECTION AND ACCEPTS ALL CARDS            *
*              CPU=SYS1SYS2SYS3  SKIPS CARDS EXCEPT ON SYSTEMS 1-3    *
*              CPU=SYS5   SKIPS SUCCESSIVE CARDS EXCEPT ON SYSTEM 5   *
*                                                                     *
***********************************************************************
         SPACE 1                                                 90344
         CLC   =C'CPU=',1(R6)  CHECK FOR CPU SPECIFIC CARDS      90344
         BNE   READNCPU      NO; CONTINUE NORMALLY               90344
         CLI   5(R6),C'A'    CPU= NON-ALPHAMERIC ?               90344
         BL    READNCPU      YES; TREAT AS GENERAL MATCH         90344
         L     R14,CVTPTR    GET THE CVT                         90344
         LA    R15,5(,R6)    POINT TO FIRST CPU ID               90344
         LA    R0,8          SET FOR MAXIMUM SUPPORTED           90344
         L     R14,CVTSMCA-CVT(,R14)  POINT TO SMCA WORK AREA    90344
READTCPU CLC   0(4,R15),16(R14)   COMPARE CPU= TO SMCASID        90344
         BE    READNCPU      MATCH; PROCESS THIS AND FOLLOWING   90344
         LA    R15,4(,R15)   TRY NEXT ENTRY                      90344
         CLI   0(R15),C','   COMMA SEPARATOR ?                   90344
         BNE   *+8           NO                                  90344
         LA    R15,1(,R15)   SKIP IT, TOO                        90344
         BCT   R0,READTCPU                                       90344
READGCPU GET   SYSINDCB,(R6)     ELSE GET ANOTHER CARD           90344
         CLC   =C'CPU=',1(R6) ANOTHER SELECTION CARD ?           90344
         BE    READNEX2      YES; EXAMINE IT                     90344
         MVI   0(R6),C'¬'    SHOW CARD REJECTED                  90344
         PUT   SYSOUDCB,(R6)  ECHO THE CARD                      90344
         B     READGCPU      AND SKIP TO NEXT                    90344
         SPACE 1                                                 90344
READNCPU DS    0H            MATCHING CPU FOUND, OR NO CPU CARDS 90344
         CLI   0(R6),C'*'    COMMENTS CARD ONLY ?                86012
         BE    READLOOP      YES, SKIP (SUPPORT ZAP MAINTENANCE) 86012
         CLI   0(R6),C' '    POSSIBLY ALL BLANK ?                86012
         BNE   READLOON      NO                                  86012
         CLC   1(70,R6),0(R6)  MOSTLY BLANK ?                    86012
READLOON LA    R2,72           TEXT SANS SEQUENCE NUMBERS        87133
         B     INTRPRET                  BR TO EDIT COMMAND
         SPACE 1
*        RETURN FROM CMD PROCESSING.
*        R0 CONTAINS MSG INDEX FOR OUTPUT MSG
         SPACE 1
RIPUTMSG LR    R1,R0                   LOAD INDEX INTO R1
         SLL   R1,2                    4 * (INDEX - 1)
*                                      = DISPLACEMENT OF MESSAGE +4
         L     R2,DDTMSGTB-4(R1)       POINT TO MSG. ENTRY IN TABLE
         LH    R1,0(,R2)               PICK UP MSG LENGTH
*        MOVE MESSAGE TO OUTPUT BUFFER AND WRITE TO SYSOUT
         MVI   IOAREA,X'40'            INITIALIZE BUFFER
         MVC   IOAREA+1(79),IOAREA       WITH BLANKS
         BCTR  R1,0                    MOVE MESSAGE
         EX    R1,RIEX1                  TO OUTPUT BUFFER
         PUT   SYSOUDCB,IOAREA         WRITE MESSAGE TO SYSOUT FILE
         B     READLOOP                BR TO GET NEXT CMD
         SPACE 1
*        END OF DATA REACHED ON SYSIN FILE
         SPACE 1
EODSYSIN TM    UFLAGS,INITERR          ERROR WHILE PROCESSING CMD FILE
         BNO   RICLOSE                 NO => CONTINUE
         WTO   MF=(E,INITEMSG)         YES => LOG ERROR TO OPERATOR
RICLOSE  CLOSE (SYSINDCB)    CLOSE SYSIN
         FREEPOOL SYSINDCB                                       88179
         NI    UFLAGS,X'FF'-INIT-INITERR  END OF INIT PROCESSING 90156
         SPACE 1
*        READ NEWS DATA
HITEST   DEVTYPE NEWSDCB+DCBDDNAM-IHADCB,IOAREA                  88179
         BXH   R15,R15,HIDONE                                    88179
         OPEN  (NEWSDCB,INPUT)  OPEN THE NEWS                    88179
         TM    NEWSDCB+DCBOFLGS-IHADCB,DCBOFOPN  OPEN ?          88179
         BZ    HIDONE        NO; SKIP OUT                        88179
         L     R2,=A(NEWSTEXT)  POINT TO THE BUFFER              88179
         PUT   SYSOUDCB,(R2)  WRITE A BLANK LINE                 88179
         LA    R2,80(,R2)    POINT TO VARIABLE TEXT PROPER       88179
         PUT   SYSOUDCB,(R2)  WRITE THE HEADER                   88179
         LA    R3,23         NUMBER OF LINES                     88179
HILOOP   GET   NEWSDCB,(R2)  READ A NEWS LINE                    88179
         PUT   SYSOUDCB,(R2)  ECHO THE LINE                      88179
         CLI   75(R2),C'0'   SEQUENCE FIELD ?                    88179
         BL    HILOUP        NO                                  88179
         MVC   72(8,R2),=CL8' '  BLANK IT OUT                    88179
HILOUP   LA    R2,80(,R2)                                        88179
         BCT   R3,HILOOP                                         88179
HIFEND   CLOSE (NEWSDCB)                                         88179
         FREEPOOL NEWSDCB                                        88179
HIDONE   TM    SYSOUDCB+DCBOFLGS-IHADCB,DCBOFOPN                 88179
         BZ    RIEXIT                                            88179
         CLOSE (SYSOUDCB)                                        88179
         FREEPOOL SYSOUDCB                                       88179
         SPACE 1
RIEXIT   L     R13,4(,R13)             RESTORE
         LM    R14,R12,12(R13)           REGISTERS
PUTDUMMY BR    R14                         AND RETURN
         SPACE 2
RIEX1    MVC   IOAREA(0),2(R2)         MOVE MSG TO OUTPUT BUFFER 86012
         SPACE 1
SYSINDCB DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EODSYSIN,MACRF=GM     88179
         SPACE 1
NEWSDCB  DCB   DDNAME=NEWS,DSORG=PS,EODAD=HIFEND,MACRF=GM        88179
         SPACE 1
SYSOUDCB DCB   DDNAME=SYSOUT,DSORG=PS,MACRF=(PM),LRECL=80,RECFM=F
         SPACE 1                                                 88179
         LTORG ,                                                 88179
         DROP  R8,R9                                             88179
         TITLE '*********  N E T S O L  - SETRANGE COMMAND'      88185
***********************************************************************
*                                                                     *
*    SETRANGE SETS UP THE AUTOMATIC LOGON DEFINITIONS FOR A RANGE     *
*    OF NODES.                                                        *
*                                                                     *
*    THE FORMAT OF THE COMMAND IS:                                    *
*                                                                     *
*        SETRANGE LOWNODE/HIGHNODE <LOGON> <UNLOCK> <APPLID text>     *
*                 APPLID - FORCES TERMINAL TO SPECIFIED APPLICATION   *
*                 LOGON  - REQUIRES USER LOGON BEFORE ACCESS     88185
*                 UNLOCK - UNLOCKS THE DEVICE (SYSTEMS PRIVIES)       *
*                                                                     *
*    INPUT : NO PARAMETERS                                            *
*                                                                     *
*   OUTPUT : R0  - INDEX INTO DDT MSG TABLE                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                 88185
SETRANGE ST    R8,20+8*4(,R13)  SAVE BASE REGISTER               88185
         BALR  R8,0          MAKE LOCAL BASE                     88185
         USING *,R8          DECLARE IT                          88185
         USING IFGRPL,PTRRPL           => R P L                  88185
         USING TERMTABL,R3             => TERMINAL TABLE ENTRY   88185
         USING DDT,R9                  => DEVICE DEPENDENT TABLE 88185
         BAL   R14,INITMSG4       OBTAIN MSG4  BUFFER            88185
         SPACE 1                                                 88185
*        GET NODENAME OF LOW RANGE                               88185
         SPACE 1                                                 88185
         LA    R1,SLNODE          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET NODE NAME               88185
         B     *+12               +0 - FOUND IT                  88185
         B     SRXERR             +4 - NOT THERE                 88185
         B     SRXERR             +8 - ERROR IN NODENAME         88185
         MVC   NODENAME,=CL8' '   SAVE                           88185
         LA    R14,NODENAME                                      88185
         BCTR  R15,0                NODENAME                     88185
         EX    R15,SRMVC              FOR LATER                  88185
*        GET NODENAME OF HIGH RANGE                              88185
         SPACE 1                                                 88185
         LA    R1,SLNODE          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET NODE NAME               88185
         B     *+12               +0 - FOUND IT                  88185
         B     SRXERR             +4 - NOT THERE                 88185
         B     SRXERR             +8 - ERROR IN NODENAME         88185
         MVC   NODENAM2,=8C'9'  PRESET FOR RANGE END             88185
         LA    R14,NODENAM2                                      88185
         BCTR  R15,0                NODENAME                     88185
         EX    R15,SRMVC              FOR LATER                  88185
         SPACE 1                                                 88185
*        GET APPLID (OPTIONAL)                                   88185
         SPACE 1                                                 88185
         LA    R1,SLAPPL          LOAD A(OPTION LIST)            88185
         BAL   R14,GETPARM        GO GET APPLID                  88185
         B     *+12               +0 - FOUND APPLID              88185
         B     SRTABLOK           +4 - APPLID NOT SPECIFIED      88185
         B     SRXERR0            +8 - ERROR IN APPLID           86065
         MVC   DLOGAPPL,=CL8' '   SAVE                           88185
         LA    R14,DLOGAPPL                                      88185
         BCTR  R15,0                APPLID                       88185
         EX    R15,SRMVC              FOR LATER                  88185
         LA    R15,1(,R15)        RESTORE APPLID LENGTH          88185
         SPACE 1                                                 88185
*        SCAN TERM TABLE FOR NODENAME                            88185
         SPACE 1                                                 88185
SRTABLOK STM   R3,R5,12(R13)      SAVE REGS                      88185
         LM    R3,R5,TERMTEND  GET BXLE TABLE VALUES             88185
         CR    R3,R5                   CHECK FOR NULL TABLE      88185
         BH    SRENT1        NO ENTRIES AS R3 > R5 (INIT 0)      88185
         SPACE 1                                                 88185
SRTABLP  CLC   NODENAME(L'NODENAME+L'NODENAM2),TERMNAME COMPLETE MATCH?
         BE    SRFNDTAB                YES, ALREADY IN THE TABLE 88185
         TM    UFLAGS,INIT   INITIALIZATION PHASE ?              88185
         BNZ   SRTABLX       YES; PERMIT OVERLAP                 88185
         CLC   NODENAME,TERMNAME  RANGE OVERLAP ?                88185
         BL    SRTABLN       NO                                  88185
         CLC   NODENAME,TERMNAM2                                 88185
         BNH   SRXERR        NODENAME ERROR                      88185
SRTABLN  CLC   NODENAM2,TERMNAME  OTHER END OVERLAPS ?           88185
         BL    SRTABLX       NO                                  88185
         CLC   NODENAM2,TERMNAM2                                 88185
         BNH   SRXERR        YES; TOO BAD                        88185
SRTABLX  BXLE  R3,R4,SRTABLP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1                                                 88185
SRENT1   L     R3,TERMTEND   GET THE FIRST ENTRY BACK            88185
         SR    R3,R4         BACK-UP ONE                         88185
         C     R3,TERMTABE   CONFLICT WITH PRIOR TABLE ?         88185
         BH    SRNOENT       NO; ALLOCATE THIS ENTRY             88185
         BAL   R7,SNOCCUR              YES => SHOULD NOT OCCUR   88185
         SPACE 1                                                 88185
*        THERE IS NO TTE ENTRY FOR THIS RANGE.                   88185
         SPACE 1                                                 88185
SRNOENT  L     R5,20(,R13)             RESTORE A(RPL)            88185
         LTR   R15,R15                 APPLID SPECIFIED?         88185
         BNZ   SRADDENT                YES => ADD ENTRY          88185
         MVC   8(L'SLMSG1,R2),SLMSG1   NO  => MOVE ERROR MSG     86065
         MVC   0(8,R2),NODENAME               MOVE NODENAME TO MSG
         LM    R3,R5,12(R13)                  RESTORE REGS       88185
         B     SRXERR                         BR TO ERROR EXIT   88185
         SPACE 1                                                 88185
*        ADD TERM TABLE ENTRY FOR SPECIFIED NODE NAME            88185
*        IF NO APPLID WAS SPECIFIED, THEN THE LOGAPPL IS RESET IN TTE
         SPACE 1                                                 88185
SRADDENT ST    R3,TERMTEND   SAVE NEW TABLE START                88185
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY 88185
         MVC   TERMNAME(L'TERMNAME+L'TERMNAM2),NODENAME    COPY NAMES
         L     R8,=A(SLBASE) GET COMMON BASE                     88185
         B     SLADDAPL-SLBASE(,R8)      ADD APPLID TO ENTRY     88185
         SPACE 1                                                 88185
SRFNDTAB L     R8,=A(SLBASE)  GET COMMON BASE                    88185
         B     SLFNDTAB-SLBASE(,R8)  JOIN COMMON CODE            88185
         SPACE 1                                                 88185
SRXERR0  MVC   8(L'SRMSG0,R2),SRMSG0  INDICATE ERROR             86065
         MVC   0(8,R2),NODENAME                                  86065
SRXERR   TM    UFLAGS,INIT             CMD ISSUED DURING INITIALIZATION
         BZ    *+8                     NO  => BR TO CONTINUE     88185
         OI    UFLAGS,INITERR          YES => FLAG ERROR DURING INIT
         SPACE 1                                                 88185
SREXIT   LA    R0,MSG04                INDICATE MSG4  TO BE SENT 88185
         L     R8,20+8*4(,R13)  RESTORE BASE                     88185
         B     SENDMSG                 EXIT TO SEND MSG          88185
         SPACE 2                                                 88185
SRMVC    MVC   0(0,R14),0(R1)  SAVE PARAMETER                    88185
SRMSG0   DC    C' SETRANGE COMMAND SYNTAX ERROR'                 88185
         TITLE '*********  N E T S O L  - SETLOGON COMMAND'
***********************************************************************
*                                                                     *
*    SETLOGON SETS UP THE AUTOMATIC LOGON APPLICATION FOR A NODE.     *
*                                                                     *
*    THE FORMAT OF THE COMMAND IS:                                    *
*                                                                     *
*        SETLOGON NODENAME APPLID                                     *
*        SETLOGON NODENAME UNLOCK - TO MAKE TERMINAL PRIVILEGED  86065
*        SETLOGON NODENAME LOGON  - REQUIRE USERS TO LOG ON
*                                                                     *
*    IF THE APPLID IS OMITTED, THEN THE LOGAPPL RESET TO NOTHING.     *
*                                                                     *
*    INPUT : NO PARAMETERS                                            *
*                                                                     *
*   OUTPUT : R0  - INDEX INTO DDT MSG TABLE                           *
*                                                                     *
***********************************************************************
         SPACE 1
SETLOGON ST    R8,20+8*4(,R13)  SAVE LOCAL BASE
         BALR  R8,0          MAKE LOCAL BASE                     88185
         USING *,R8          DECLARE IT                          88185
SLBASE   BAL   R14,INITMSG4       OBTAIN MSG4  BUFFER
         SPACE 1
*        GET NODENAME
         SPACE 1
         LA    R1,SLNODE          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET NODE NAME
         B     *+12               +0 - FOUND IT
         B     SLXERR             +4 - NOT THERE
         B     SLXERR             +8 - ERROR IN NODENAME
         MVC   NODENAME,=CL8' '   SAVE
         BCTR  R15,0                NODENAME
         EX    R15,SLEX1              FOR LATER
         SPACE 1
*        GET APPLID (OPTIONAL)
         SPACE 1
         LA    R1,SLAPPL          LOAD A(OPTION LIST)
         BAL   R14,GETPARM        GO GET APPLID
         B     *+12               +0 - FOUND APPLID
         B     SLTABLOK           +4 - APPLID NOT SPECIFIED
         B     SLXERR0            +8 - ERROR IN APPLID           86065
         MVC   DLOGAPPL,=CL8' '   SAVE
         BCTR  R15,0                APPLID
         EX    R15,SLEX2              FOR LATER
         LA    R15,1(,R15)        RESTORE APPLID LENGTH
         SPACE 1
*        SCAN TERM TABLE FOR NODENAME
         SPACE 1
SLTABLOK STM   R3,R5,12(R13)      SAVE REGS
         LA    R1,NODENAME             PT @ NODENAME
         LM    R3,R5,TERMTABS          GET BXLE TABLE VALUES
         CR    R3,R5                   CHECK FOR NULL TABLE
         BH    SLNOENT                 NO ENTRIES AS R3 > R5 (INIT 0)
         SPACE 1
SLTABLP  CLC   0(8,R1),TERMNAME        MATCH THE NAME ?
         BE    SLFNDTAB                YES, ALREADY IN THE TABLE
         BXLE  R3,R4,SLTABLP           CONTINUE THE SCAN FOR A WHILE
         SPACE 1
         C     R3,TERMTEND             PASSED MAXIMUM TABLE SIZE ?
         BL    SLNOENT                 NO => NODENAME NOT IN TABLE
         BAL   R7,SNOCCUR              YES => SHOULD NOT OCCUR
         SPACE 1
*        THERE IS NO TTE ENTRY FOR THIS NODE.
*        NO APPLID WILL BE TREATED AS AN ERROR IN THIS CASE.
         SPACE 1
SLNOENT  L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDENT                YES => ADD ENTRY
         TM    UFLAGS,INIT   INITIALIZATION PROCESSING ?         88220
         BZ    SLNOENTM      NO; FAIL                            88220
         XC    DLOGAPPL,DLOGAPPL  CLEAR FOR SETRANGE OVERRIDE    88220
         LA    R15,1         SET FALSE LENGTH                    88220
         LA    R1,DLOGAPPL   SET FALSE LOCATION                  88220
         B     SLADDENT      ADD AN ENTRY                        88220
SLNOENTM MVC   8(L'SLMSG1,R2),SLMSG1   NO  => MOVE ERROR MSG     86065
         MVC   0(8,R2),NODENAME               MOVE NODENAME TO MSG
         LM    R3,R5,12(R13)                  RESTORE REGS
         B     SLXERR                         BR TO ERROR EXIT
         SPACE 1
*        ADD TERM TABLE ENTRY FOR SPECIFIED NODE NAME
*        IF NO APPLID WAS SPECIFIED, THEN THE LOGAPPL IS RESET IN TTE
         SPACE 1
SLADDENT ST    R3,TERMTABE             SAVE NEW TABLE END
         XC    0(TERMELEN,R3),0(R3)    CLEAR OUT THE TABLE ENTRY
         MVC   TERMNAME(8),NODENAME    COPY NAME ACROSS
         B     SLADDAPL      ADD APPLID TO ENTRY
         SPACE 1
SLFNDTAB NI    TERMFLAG,255-LOGPROC    CLEAR LOGON STATUS FLAG   90135
         L     R5,20(,R13)             RESTORE A(RPL)
         LTR   R15,R15                 APPLID SPECIFIED?
         BNZ   SLADDAPL                YES => GO ADD APPLID
         XC    TERMDAPL,TERMDAPL       NO  => ZERO LOGON APPLID
         MVC   0(L'SLMSG2,R2),SLMSG2          MOVE MSG TO OUT BUF
         MVC   19(8,R2),NODENAME              ADD NODE NAME TO MSG
         B     SLNDTTE                        BR TO END OF TTE PROCESS
         SPACE 1
SLADDAPL CLC   =CL8'UNLOCK',DLOGAPPL  SPECIAL REQUEST ?          86065
         BE    SLADDUNL                                          88179
         CLC   =C'LOGON',DLOGAPPL                                88179
         BE    SLADDLON      SET LOGON REQUIRED                  88185
         CLC   =C'LOCK ',DLOGAPPL                                88185
         BE    SLADDLOK                                          88185
         CLC   =C'NOLOG',DLOGAPPL                                88185
         BNE   SLADDAPP      NO; NORMAL APPLICATION NAME         86065
         NI    TERMFLG3,255-TFREQ  RESET LOGON REQUIRED          88185
         B     SLCHANGE                                          88185
SLADDLOK NI    TERMFLG3,TFREQ  LOGOFF; LOCK                      88185
         B     SLCHANGE                                          88185
SLADDLON OI    TERMFLG3,TFREQ  SHOW LOGON REQUIRED               88179
SLCHANGE MVC   8(8,R2),=C' CHANGED'                              88179
         MVC   0(8,R2),NODENAME                                  88179
         B     SLNDTTE       MAKE MESSAGE                        88179
SLADDUNL OI    TERMFLG3,TPRIVY+TFLON  SET PRIVILEGED TERMINAL    88179
         MVC   8(L'SLMSG4,R2),SLMSG4  GET BASIC MESSAGE          86065
         MVC   0(8,R2),NODENAME  INDICATE WHO                    86065
         B     SLNDTTE
         SPACE 1                                                 86065
SLADDAPP MVC   TERMDAPL,DLOGAPPL       ADD LOGON APPLID TO TTE   86065
         MVC   8(L'SLMSG3,R2),SLMSG3   MOVE OK MSG TO OUT BUF    86065
         MVC   0(8,R2),TERMDAPL        ADD APPLID TO MSG
         OC    0(8,R2),=CL8' '  UPPER CASE HEX ZEROES            88220
         MVC   33(8,R2),TERMNAME       ADD NODE NAME TO MSG
         TM    UFLAGS,INIT   IN INITIALIZATION PROCESSING ?      87131
         BZ    SLNDTTE       NO; NO COMMAND CODE                 87131
         SLR   R6,R6                                             87131
         ICM   R6,3,GPDATAL  ANY MORE TEXT ?                     87131
         BZ    SLNDTTE       NO                                  87131
         L     R7,GPDATAP    GET TEXT START                      87131
SLLDEBL  CLI   0(R7),C' '    LEADING BLANK ?                     87131
         BNE   SLLDEBND      NO                                  87131
         LA    R7,1(,R7)                                         87131
         BCT   R6,SLLDEBL    GET RESIDUAL LENGTH                 87131
         B     SLNDTTE       NO MORE TEXT                        87131
SLLDEBND LA    R15,0(R6,R7)  GET END OF TEXT                     87131
SLRDEBL  BCTR  R15,0         BACKSPACE                           87131
         CLI   0(R15),C' '   TRAILING BLANK ?                    87131
         BNE   SLRDEBND      NO                                  87131
         BCT   R6,SLRDEBL    TRY AGAIN                           87131
         B     SLNDTTE                                           87131
SLPMSG   MVC   0(0,R1),0(R7) MOVE LOGON MESSAGE (PARM)           87131
SLRDEBND GETMAIN R,LV=255,SP=2    GET A BUFFER FOR THE TEXT      87131
         ST    R6,TERMLPLN   SET LOGON PARM LENGTH               87131
         BCTR  R6,0          LENGTH FOR EXECUTE                  87131
         ST    R1,TERMLPAD   SAVE MESSAGE ADDRESS                87131
         EX    R6,SLPMSG     SAVE MESSAGE                        87131
*        B     SLNDTTE       CONTINUE                            87131
         SPACE 1
SLNDTTE  LM    R3,R4,12(R13)           RESTORE REGS
         B     SLEXIT                  BR TO EXIT
         SPACE 1
SLXERR0  MVC   8(L'SLMSG0,R2),SLMSG0  INDICATE ERROR             86065
         MVC   0(8,R2),NODENAME                                  86065
SLXERR   TM    UFLAGS,INIT             CMD ISSUED DURING INITIALIZATION
         BZ    *+8                     NO  => BR TO CONTINUE
         OI    UFLAGS,INITERR          YES => FLAG ERROR DURING INIT
         SPACE 1
SLEXIT   LA    R0,MSG04                INDICATE MSG4  TO BE SENT
         L     R8,20+8*4(,R13)  RESTORE LOCAL BASE               88185
         B     SENDMSG                 EXIT TO SEND MSG
         SPACE 2
SLEX1    MVC   NODENAME(0),0(R1)       SAVE NODENAME PARM
SLEX2    MVC   DLOGAPPL(0),0(R1)       SAVE APPLID PARM
SLMSG0   DC    C' SETLOGON COMMAND SYNTAX ERROR'                 86065
SLMSG1   DC    C' NOT KNOWN TO NETSOL'                           86065
SLMSG2   DC    C'DEFAULT APPLID FOR XXXXXXXX RESET'
SLMSG3   DC    C' IS NOW LOGON APPLID FOR '                      86065
SLMSG4   DC    C' NOW UNLOCKED'                                  86065
         SPACE 1                                                 88185
         LTORG ,                                                 88185
         TITLE '*********  N E T S O L  -  SET/SHOW/KILL COMMANDS'
TESTMSG  ST    R8,20+8*4(,R13)  SAVE FOR LOCAL BASE              88220
         BALR  R8,0          MAKE LOCAL BASE                     88220
         USING *,R8          DECLARE BASE                        88220
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88220
         XC    A$SAVE(8),A$SAVE  CLEAR WORK SPACE                88220
         LA    R1,SLNUM      REQUEST MESSAGE NUMBER              88220
         BAL   R14,GETPARM                                       88220
         B     *+12          OK ?                                88220
         B     SKXERR        FAIL                                88220
         B     SKXERR        BAD                                 88220
         BCTR  R15,0                                             88220
         EX    R15,TTMPACK   PACK THE MESSAGE                    88220
         CVB   R0,A$SAVE     MAKE DECIMAL                        88220
         LTR   R0,R0         VALID ?                             88220
         BNP   TTMERR        NO                                  88220
         CH    R0,=Y(MSGMAX) VALID ?                             88220
         BNH   SKEXM#        NO                                  88220
TTMERR   MVC   0(14,R2),=C'INVALID NUMBER'                       88220
         B     SKXERR        FAIL                                88220
SLNUM    $GP   8,'MESSAGE NUMBER',GPNUM                          88220
TTMPACK  PACK  A$SAVE(8),0(0,R1)  PACK MESSAGE NUMBER            88220
         SPACE 1                                                 88220
SETSET   DS    0H                                                88206
SETSHOW  ST    R8,20+8*4(,R13)  SET LOCAL BASE                   88206
         BALR  R8,0          MAKE LOCAL BASE                     88206
         USING *,R8          DECLARE BASE                        88206
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88206
         MVC   0(4,R2),=C'OOPS'                                  88206
         B     SKEXIT        QUIT UNTIL CODE ADDED               88209
         SPACE 1                                                 88209
*        KILL USER ID,  KILL TERM ID, OR  KILL ID                88209
*                                                                88209
SETKILL  ST    R8,20+8*4(,R13)  SET LOCAL BASE                   88206
         BALR  R8,0          MAKE LOCAL BASE                     88206
         USING *,R8          DECLARE BASE                        88206
         BAL   R14,INITMSG4  GET ERROR MESSAGE                   88206
         LR    R4,R2         CHANGE GLOBAL REGISTER              88209
         MVC   NODENAME,=CL8' '  BLANK DESIRED NAME              88209
         MVC   NODENAM2,NODENAME  PROPAGATE                      88209
         STM   R3,R5,12(R13)   SAVE TTE AND RPL ADDRESSES        88209
SETKILL1 LA    R1,SLNAME     POINT TO OPTION ENTRY               88209
         BAL   R14,GETPARM   PARSE THE NEXT OPERAND              88209
         B     *+12          OK                                  88209
         B     SKXERR        MISSING                             88209
         B     SKXERR        TOO LONG ?                          88209
         BCTR  R15,0                                             88209
         EX    R15,SKEX1     MOVE TO FIELD                       88209
         SPACE 1                                                 88209
         CLI   NODENAM2,C' '   SECOND PASS THROUGH HERE ?        88209
         BNE   SETKILLB      NO; TEST WHICH                      88209
         CLC   =C'TERM',NODENAME   KILL A TERMINAL ?             88209
         BE    SETKILL2      YES; NEED SECOND OPERAND            88209
         CLC   =C'USER',NODENAME   KILL A USER ?                 88209
         BNE   SETKILLB      NO; TRY BOTH                        88209
SETKILL2 MVC   NODENAM2(1),NODENAME  PRESERVE THE REQUEST TYPE   88209
         B     SETKILL1      AND PARSE FOR NAME                  88209
SETKILLB CLI   NODENAM2,C'U' KILL USER ONLY ?                    88209
         BE    SETKILLU                                          88209
         LM    R1,R3,TERMTABS  GET THE TERMINAL TABLE            88209
         SR    R1,R2         RECOVER FROM EMPTY TABLE            88209
SETKILTL BXH   R1,R2,SETKILTN  TERMINAL NOT FOUND                88209
         CLC   NODENAME,TERMNAME-TERMTABL(R1)  SAME ID ?         88209
         BNE   SETKILTL      NO; TRY NEXT ENTRY                  88209
         LR    R3,R1         COPY DESIRED TTE                    88209
         BAL   R14,UTERMOF   RESET PRIVILEGES AND LOGON          88209
         AIF   ('&LOCAL' NE 'PID').NOKILL1                       92300
         ICM   R1,15,TERMLOUD   LOCAL USER DATA ?                88209
         BZ    SETKILTX      NO; DONE                            88209
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM ARE
         MVC   A$SID,=C'A$RB'                                    88209
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88209
*                            LOGOFF SESSIONS AND USER            88209
         ST    R1,A$SBUFR    SET LOUD                            88209
         LA    R1,A$SVCRB                                        88209
         SVC   249           CANCEL SESSIONS; KEEP USER          88209
.NOKILL1 ANOP  ,                                                 91195
SETKILTX MVC   0(24,R4),=C'Terminal XXXXXXXX killed'             88209
         MVC   9(8,R4),NODENAME                                  88209
         B     SKEX35        TAKE NORMAL EXIT                    88209
SETKILTN CLI   NODENAM2,C'T'  TERMINAL ONLY ?                    88209
         BNE   SETKILLU      NO; LOOK FOR USER                   88209
         MVC   0(27,R4),=C'Terminal XXXXXXXX not found'          88209
         MVC   9(8,R4),NODENAME   IDENTIFY                       88209
         B     SKEX35        AND QUIT                            88209
         SPACE 1                                                 88209
SETKILLU MVC   0(23,R4),=C'User XXXXXXXX not found'              88209
         MVC   5(8,R4),NODENAME  ADD USER ID                     88209
         AIF   ('&LOCAL' NE 'PID').NOKILL2                       92300
         L     R14,CVTPTR    GET THE CVT                         88209
         ICM   R14,15,CVTUSER-CVTMAP(R14)  LOCAL EXTENSION?      88209
         BZ    SKEX35        NO                                  88209
         LA    R9,UCLOUD-USERCVT-(A$LNEXT-A$LOUD)(R14) LINK-PTR  88209
SETKILUL ICM   R9,15,A$LNEXT-A$LOUD(R9)  ANOTHER ?               88209
         BZ    SKEX35        NO                                  88209
         CLC   NODENAME,A$UUID-A$LOUD(R9)  SAME ID ?             88209
         BNE   SETKILUL                                          88209
         XC    A$SVCRB(A$SLENRB),A$SVCRB  CLEAR ACCT SVC PARM ARE
         MVC   A$SID,=C'A$RB'                                    88209
         MVC   A$SFCTN(3),=AL1(A$SFLOGF,0,A$SAKEY+A$SBUILD)      88209
*                            LOGOFF SESSIONS AND USER            88209
         ST    R9,A$SBUFR    SET LOUD                            88209
         LA    R1,A$SVCRB                                        88209
         SVC   249           CANCEL SESSIONS; KEEP USER          88209
         MVC   14(9,R4),=C'killed   '                            88209
         B     SETKILUL      TRY FOR ANOTHER                     88209
.NOKILL2 B     SKEX35        NO CHAIN; NO MATCH                  91195
         SPACE 1                                                 88209
SKXERR   TM    UFLAGS,INIT                                       88209
         BZ    *+8                                               88209
         OI    UFLAGS,INITERR                                    88209
         B     SKEXIT        TAKE NORMAL EXIT                    88209
         SPACE 1                                                 88206
SKEX35   LM    R3,R5,12(R13) RESTORE TTE AND RPL                 88209
SKEXIT   LA    R0,MSG04      GET ERROR MESSAGE INDEX             88206
SKEXM#   L     R8,20+8*4(,R13)  RESTORE OLD BASE                 88206
         B     SENDMSG       SEND MESSAGE                        88206
SKEX1    MVC   NODENAME(0),0(R1)   MOVE TERM OR USER ID          88209
         SPACE 1                                                 88206
         LTORG ,                                                 88206
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES.    *
***********************************************************************
DDT3270  DS    0D
S32EDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S32SENDA DC    A(S32COMP)         A(3270 SEND/COMPRESSION ROUTINE)
S32TERMA DC    A(S32TID12,S32TID13,S32TID20)  TERM NAME FIELD ADDRESS
S32TIMEA DC    A(S32TIM12,S32TIM13,S32TIM20)  TIME FIELD ADDRESSES
S32M4OFS DC    A(S32M4OF)         A(USABLE BUFFER IN MSG 4)
S32OFFST DC    AL2(S32M4OF+6-S32MSG04)  MSG OFFSET FOR INSERTED DATA
S32M4L   DC    AL2(L'S32M4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S32MSGTB DS    0F
         DC    A(S32MSG01)
         DC    A(S32MSG02)
         DC    A(S32MSG03)
         DC    A(S32MSG04)
         DC    A(S32MSG05)
         DC    A(S32MSG06)
         DC    A(S32MSG07)
         DC    A(S32MSG08)
         DC    A(S32MSG09)
         DC    A(S32MSG10)
         DC    A(S32MSG11)
         DC    A(S32MSG12)
         DC    A(S32MSG13,S32MSG14,S32MSG15,S32MSG16,S32MSG17)   86065
         DC    A(S32MSG18,S32MSG01)  MSG 19 IS FAKE              87187
         DC    A(S32MSG20)   LOGON SCREEN                        88179
         SPACE 5                                                 90120
*              DEVICE DEPENDENT TABLE FOR 3270 EXTENDED FUNCTION'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES     *
*        THAT HAVE EXTENDED FUNCTION (I.E. COLOUR + SYMBOL SETS ).    *
***********************************************************************
DDT3270E DS    0D
S3EEDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)
S3ESENDA DC    A(S3ESEND)         A(3270-EDS SEND ROUTINE)       90140
S3ETERMA DC    A(S3ETID12,S3ETID13,S3ETID20) TERM NAME ADDRESSES 88179
S3ETIMEA DC    A(S3ETIM12,S3ETIM13,S3ETIM20) TIME/DATE ADDRESSES 88179
S3EM4OFS DC    A(S3EM4OF)         A(USABLE BUFFER IN MSG 4)
S3EOFFST DC    AL2(S3EM4OF+6-S3EMSG04)  MSG OFFSET FOR INSERTED DATA
S3EM4L   DC    AL2(L'S3EM4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S3EMSGTB DS    0F
         DC    A(S3EMSG01)
         DC    A(S3EMSG02)
         DC    A(S3EMSG03)
         DC    A(S3EMSG04)
         DC    A(S3EMSG05)
         DC    A(S3EMSG06)
         DC    A(S3EMSG07)
         DC    A(S3EMSG08)
         DC    A(S3EMSG09)
         DC    A(S3EMSG10)
         DC    A(S3EMSG11)
         DC    A(S3EMSG12)
         DC    A(S3EMSG13,S3EMSG14,S3EMSG15,S3EMSG16,S3EMSG17)   86065
         DC    A(S3EMSG18,S3EMSG01)  MSG 19 IS FAKE              87187
         DC    A(S3EMSG20)   LOGON SCREEN                        88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               270 MODEL 5'                                      88206
*****************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND   88206
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3270 DEVICES
*        RUNNING IN 27*132 FORMAT.  ( MODEL 5 )                  88206
*****************************************************************
DDTMDL5  DS    0D                                                88206
MD5EDITA DC    A(S32EDIT)         A(3270 INPUT EDIT ROUTINE)     88206
MD5SENDA DC    A(S3ESEND)         A(3270-EDS SEND ROUTINE)       90140
MD5TERMA DC    A(MD5TID12,MD5TID13,MD5TID20)  TERM NAME FIELD ADD
MD5TIMEA DC    A(MD5TIM12,MD5TIM13,MD5TIM20)  TIME FIELD ADDRESSE
MD5M4OFS DC    A(MD5M4OF)         A(USABLE BUFFER IN MSG 4)      88206
MD5OFFST DC    AL2(MD5M4OF+6-MD5MSG04)  MSG OFFSET FOR INSERTED D
MD5M4L   DC    AL2(L'MD5M4OF)     L(USABLE BUFFER IN MSG 4)      88206
*****************************************************************
*        MESSAGE TABLE INDEX                                     88206
*****************************************************************
         SPACE 2                                                 88206
MD5MSGTB DS    0F                                                88206
         DC    A(MD5MSG01)                                       88206
         DC    A(MD5MSG02)                                       88206
         DC    A(MD5MSG03)                                       88206
         DC    A(MD5MSG04)                                       88206
         DC    A(MD5MSG05)                                       88206
         DC    A(MD5MSG06)                                       88206
         DC    A(MD5MSG07)                                       88206
         DC    A(MD5MSG08)                                       88206
         DC    A(MD5MSG09)                                       88206
         DC    A(MD5MSG10)                                       88206
         DC    A(MD5MSG11)                                       88206
         DC    A(MD5MSG12)                                       88206
         DC    A(MD5MSG13,MD5MSG14,MD5MSG15,MD5MSG16,MD5MSG17)   88206
         DC    A(MD5MSG18,MD5MSG01)  MSG 19 IS FAKE              88206
         DC    A(MD5MSG20)   LOGON SCREEN                        88206
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR 3X
               767'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN COMMUNICATING WITH 3767 TERMINALS.  *
***********************************************************************
DDT3767  DS    0D
S37EDITA DC    A(S37EDIT)         A(3767 INPUT EDIT ROUTINE)
S37SENDA DC    A(S37SEND)         A(3767 SEND ROUTINE)           86145
S37TERMA DC    A(S37TID12,0,S37TID20)  TERMINAL ID               88220
S37TIMEA DC    A(S37TIM12,0,0)    A(TIME FIELD IN MSG 12)        86065
S37M4OFS DC    A(S37M4OF)         A(USABLE BUFFER IN MSG 4)
S37OFFST DC    AL2(S37M4OF+6-S37MSG04)  MSG OFFSET FOR INSERTED DATA
S37M4L   DC    AL2(L'S37M4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
S37MSGTB DS    0F
         DC    A(S37MSG01)
         DC    A(S37MSG02)
         DC    A(S37MSG03)
         DC    A(S37MSG04)
         DC    A(S37MSG05)
         DC    A(S37MSG06)
         DC    A(S37MSG07)
         DC    A(S37MSG08)
         DC    A(S37MSG09)
         DC    A(S37MSG10)
         DC    A(S37MSG11)
         DC    A(S37MSG12)
         DC    A(S37MSG13,S37MSG14,S37MSG15,S37MSG16,S37MSG17)   86065
         DC    A(S37MSG18,S37MSG01)  MSG 19 IS FAKE              87187
         DC    A(S37MSG20)   LOGON SOLICITATION                  88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR SX
               YSIN FILE'
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN PROCESSING CMDS FROM THE SYSIN FILE.*
***********************************************************************
DDTSYSIN DS    0D
SINEDITA DC    A(0)               A(SYSIN INPUT EDIT ROUTINE)
SINSENDA DC    A(RIPUTMSG)        A(SYSIN SEND ROUTINE)
SINTERMA DC    A(0,0,0)           A(TERMINAL FIELD IN MSG 12)    86065
SINTIMEA DC    A(0,0,0)           A(TIME FIELD IN MSG 12)        86065
SINM4OFS DC    A(SINM4OF)         A(USABLE BUFFER IN MSG 4)
SINOFFST DC    AL2(SINM4OF+6-SINMSG04)  MSG OFFSET FOR INSERTED DATA
SINM4L   DC    AL2(L'SINM4OF)     L(USABLE BUFFER IN MSG 4)
***********************************************************************
*        MESSAGE TABLE INDEX                                          *
***********************************************************************
         SPACE 2
SINMSGTB DS    0F
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG04)         RESPONSE FOR INITIALIZATION CMDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG07)         FOR INVALID COMMANDS
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    A(SINMSG00)
         DC    8A(SINMSG00)                                      88179
         TITLE '*********  N E T S O L  -  DEVICE DEPENDENT TABLE FOR OX
               S CONSOLES'                                       88192
***********************************************************************
*        THIS DDT DEFINES THE INPUT EDIT AND SEND ROUTINES AND        *
*        THE MESSAGE TEXT USED IN OS CONSOLE COMMUNICATIONS.          *
*            NOTE THAT 3767 MESSAGES ARE USED AS-IS.                  *
***********************************************************************
DDTCONS  DS    0D                                                88192
CONEDITA DC    A(0)          NO INPUT EDIT                       88192
CONSENDA DC    A(S37SEND)    A(CONSOLE WTO ROUTINE)              88192
CONTERMA DC    A(S37TID12,0,0)    A(TERMINAL FIELD IN MSG 12)    88192
CONTIMEA DC    A(S37TIM12,0,0)    A(TIME FIELD IN MSG 12)        88192
CONM4OFS DC    A(CONM4OF)         A(USABLE BUFFER IN MSG 4)      88192
CONOFFST DC    AL2(CONM4OF+6-CONMSG04)  MSG OFFSET FOR INSERTED DATA
CONM4L   DC    AL2(L'CONM4OF)     L(USABLE BUFFER IN MSG 4)      88192
         SPACE 1                                                 88192
CONMSGTB DC    A(CONMSG01)                                       88192
         DC    A(CONMSG02)                                       88192
         DC    A(CONMSG03)                                       88192
         DC    A(CONMSG04)                                       88192
         DC    A(CONMSG05)                                       88192
         DC    A(CONMSG06)                                       88192
         DC    A(CONMSG07)                                       88192
         DC    A(CONMSG08)                                       88192
         DC    A(CONMSG09)                                       88192
         DC    A(CONMSG10)                                       88192
         DC    A(CONMSG11)                                       88192
         DC    A(S37MSG12)                                       88192
         DC    A(CONMSG13,CONMSG14,CONMSG15,CONMSG16,CONMSG17)   88192
         DC    A(CONMSG18,CONMSG01)  MSG 19 IS FAKE              88192
         DC    A(S37MSG20)   LOGON SOLICITATION                  88192
         SPACE 1                                                 88192
CONMSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=CON
CONMSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE, REENTER'        88192
CONMSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
CONMSG04 DC    YL2(CONEND04-*)                                   88192
CONM4OF  DC    CL60' '
CONEND04 EQU   *
CONMSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88192
CONMSG06 $MSG  C'BCSC106 CONNECTING TO APPLICATION XXXXXXXX'     88192
CONMSG07 $MSG  C'BCSC107 XXXXXXXX NOT A VALID COMMAND'           88192
CONMSG08 $MSG  C'BCSC108          IS NOT AVAILABLE'  OR LOGMODE INVALID
CONMSG09 $MSG  C'BCSC109          NO LONGER ACCEPTING LOGONS'    88192
CONMSG10 $MSG  C'BCSC110          NEVER ACCEPTING LOGONS'        88192
CONMSG11 $MSG  C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
CONMSG13 $MSG  C'ESP VTAM SERVICE IS CLOSED AT THIS TIME'        92300
CONMSG14 $MSG  C'CENTER CLOSED - ACCESS NOT PERMITTED NOW'       87187
CONMSG15 $MSG  C'BCSC115 TERMINAL NOW UNLOCKED'                  86065
CONMSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED'               86065
CONMSG17 $MSG  C'BCSC117 PASSWORD UNLOCK REQUEST FAILED'         86065
CONMSG18 $MSG  C'REQUEST IS NOT AUTHORIZED'                      87187
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3270'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 2
S32MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3270
S32MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
S32MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
S32MSG04 $MSG  CL60' ',ML=S32M4OF                                88206
S32MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1
S32MSG06 DC    YL2(S32END06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SF   (PROT)             SET ATTRIBUTE BYTE
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
S32M6APL DC    CL8'APPLID'                                       86012
S32END06 EQU   *
         SPACE 1
S32MSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
S32MSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
S32MSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'    88206
S32MSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
S32MSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S32MSG12 $SCRN 12            DEFINE APPLICATION MENU             88220
S32MSG13 $SCRN 13            SHOW CENTER CLOSED                  88220
         SPACE 1                                                 86065
S32MSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
S32MSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=
S32MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=          88206
S32MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED'                 88206
S32MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
S32MSG20 $SCRN 20            PROMPT FOR USER LOGON               88220
         SPACE 5                                                 90120
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
         $MODEL 2               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 1
S3EMSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=327E
S3EMSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
S3EMSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
S3EMSG04 $MSG  CL60' ',ML=S3EM4OF                                88206
S3EMSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1
S3EMSG06 DC    YL2(S3EEND06-*)
         $IO   ERASE/WRITE        SET 3270 COMMAND CODE
         $WCC  (MDT)              SETUP WCC
         $SBA  (1,1)              SET BUFFER ADDRESS
         $SFE  ATTR=PROT,COL=GREEN
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
S3EM6APL DC    CL8'APPLID'                                       86012
S3EEND06 EQU   *
         SPACE 1
S3EMSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
S3EMSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
S3EMSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'
S3EMSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
S3EMSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S3EMSG12 $SCRN 12            DEFINE APPLICATION MENU             88220
S3EMSG13 $SCRN 13            SHOW CENTER CLOSED                  88220
         SPACE 1                                                 86065
S3EMSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
S3EMSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=,CO*
               L=GREEN                                           88206
S3EMSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=,COL=YELLOW
S3EMSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED',COL=PINK        88206
S3EMSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              88206
         SPACE 1                                                 88179
S3EMSG20 $SCRN 20            PROMPT FOR USER LOGON               88220
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3270'    88206
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2                                                 88206
         $MODEL 5               SET 3270 MODEL NUMBER FOR 3270 MACROS
         PRINT &PRTSYS                                           85234
         SPACE 2                                                 88206
MD5MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3270
MD5MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE; REENTER'        88206
MD5MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS-DOMAIN RESOURCE'
MD5MSG04 $MSG  CL60' ',ML=MD5M4OF                                88206
MD5MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88206
         SPACE 1                                                 88206
MD5MSG06 DC    YL2(MD5END06-*)                                   88206
         $IO   ERASE/ALT          SET 3270 COMMAND CODE          88206
         $WCC  (MDT)              SETUP WCC                      88206
         $SBA  (1,1)              SET BUFFER ADDRESS             88206
         $SF   (PROT)             SET ATTRIBUTE BYTE             88206
         DC    C'BCSC106 CONNECTING TO APPLICATION '             86012
MD5M6APL DC    CL8'APPLID'                                       86012
MD5END06 EQU   *                                                 88206
         SPACE 1                                                 88206
MD5MSG07 $MSG  C'BCSC107 XXXXXXXX NOT DEFINED TO VTAM'           88206
MD5MSG08 $MSG  C'BCSC108 XXXXXXXX IS NOT AVAILABLE'  OR LOGMODE INVALID
MD5MSG09 $MSG  C'BCSC109 XXXXXXXX NO LONGER ACCEPTING LOGONS'    88206
MD5MSG10 $MSG  C'BCSC110 XXXXXXXX NEVER ACCEPTING LOGONS'        88206
MD5MSG11 $MSG  C'BCSC111 XXXXXXXX TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1                                                 88206
MD5MSG12 $SCRN 12,IO=ERASE/ALT  DEFINE APPLICATION MENU          88220
MD5MSG13 $SCRN 13,IO=ERASE/ALT  SHOW CENTER CLOSED               88220
         SPACE 1                                                 86065
MD5MSG14 $MSG  C'BCSC114 CENTER CLOSED - ACCESS NOT PERMITTED NOW'
MD5MSG15 $MSG  C'BCSC115 PASSWORD ACCEPTED - TERMINAL UNLOCKED',WCC=
MD5MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED',WCC=          88206
MD5MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK FAILED'                 88206
MD5MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
MD5MSG20 $SCRN 20,IO=ERASE/ALT  PROMPT FOR USER LOGON            88220
         SPACE 1                                                 88179
NEWSTEXT DC    CL80'                             ESP News   '    88179
         DC    CL80' '                                           88179
         DC    CL80' No news available (no news is good news?)'  88179
         DC    21CL80' '     DATA FROM 'NEWS' DD                 88179
         SPACE 1                                                 88179
HELPTEXT DC    CL40'                         VTAM Functions '    88179
         DC    CL40'                                        '  1 88179
         DC    CL40'   Simple commands:   HELP - displays th'    88179
         DC    CL40'is screen.                              '  2 88179
         DC    CL40'     STATUS - displays the system activi'    88179
         DC    CL40'ty screen.                              '  3 88179
         DC    CL40'     MSG text - sends a message to the o'    88179
         DC    CL40'perator (no reply possible).            '  4 88179
         DC    CL40'     NEWS - displays the current news bu'    88179
         DC    CL40'lletin (if any)                         '  5 88179
         DC    CL40'     PASSWORD userid/password - connect '    88179
         DC    CL40'(sign-on) to VTAM                       '  6 88179
         DC    CL40'     LOCK - sign-off only. Does not disc'    88179
         DC    CL40'onnect session.                         '  7 88179
         DC    CL40'     LOGOFF - sign-off and disconnect se'    88179
         DC    CL40'ssion on dial-up terminals.             '  8 88179
         DC    CL40'     OS text - issue an operator command'    88179
         DC    CL40' (privileged function).                 '  9 88179
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 10 88179
         DC    CL40'When your initial contact (dial-in or EN'    88179
         DC    CL40'TER key) results in a "SIGN-ON" screen,'  11 88179
         DC    CL40'you will not be able to use any sub-syst'    88179
         DC    CL40'em until you complete the logon process.' 12 88179
         DC    CL40'Supply your user-id, your password, and '    88179
         DC    CL40'an optional account number. When you use' 13 88179
         DC    CL40'an account number to sign on, you are pl'    88179
         DC    CL40'aced in global (automatic) LOGON mode.  ' 14 88179
         DC    CL40'Subsequent requests for TSO or WYLBUR wi'    88179
         DC    CL40'll bypass their LOGON screens.          ' 15 88179
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 16 88179
         DC    CL40'If you see a "ESP Inc.  CLOSED" message '    88179
         DC    CL40'or screen, then either:                 ' 17 88179
         DC    CL40' a) your terminal is locked to a subsyst'    88179
         DC    CL40'em that is not currently running,  or   ' 18 88179
         DC    CL40' b) VTAM is restricted while system main'    88179
         DC    CL40'tenance is being performed.             ' 19 88179
         DC    CL40'We close for scheduled maintenance every'    88179
         DC    CL40' Sunday morning from midnight to 8 a.m.,' 20 88179
         DC    CL40'Monday midnight to 8 a.m. and Thursday 6'    90054
         DC    CL40' to 8 a.m.                              ' 21 90054
         DC    CL40'                                        '    88179
         DC    CL40'                                        ' 22 88179
         DC    CL40'For assistance, call:  (703) 931-9500 Te'    88179
         DC    CL40'chnical support Ext. 48  / Systems #50  ' 23 88179
         DC    CL40'                       (703) 931-9500 Co'    88179
         DC    CL40'mputer operations Ext. 43               ' 24 88179
         TITLE '*********  N E T S O L  -  MESSAGES FOR 3767'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
S37MSG01 $MSG  C'BCSC101 XXXXXXXX LOGMODE ENTRY UNDEFINED',TYPE=3767
S37MSG02 $MSG  C'BCSC102 INVALID LOGON SEQUENCE, REENTER'        88192
S37MSG03 $MSG  C'BCSC103 TERMINAL NOT DEFINED AS CROSS DOMAIN RESOURCE'
S37MSG04 DC    YL2(S37END04-*),X'0D25'                           88192
S37M4OF  DC    CL60' '
         DC    X'0D25'              CARRIAGE RETURN              86153
         DC    C'ENTER ? '        PROMPT FOR INPUT
S37END04 EQU   *
S37MSG05 $MSG  C'BCSC105 USER UNAUTHORIZED FOR THIS APPLICATION' 88192
S37MSG06 $MSG  C'BCSC106 CONNECTING TO APPLICATION'              88195
         ORG   *-10          OVERLAY CRLF/ENTER TEXT             88195
         DC    C' '          ONE SPACER                          88195
S37M6APL DC    CL8' ',C' '   APPLID IN MSG06                     88195
S37MSG07 $MSG  C'BCSC107          NOT DEFINED TO VTAM'           88192
S37MSG08 $MSG  C'BCSC108          IS NOT AVAILABLE'  OR LOGMODE INVALID
S37MSG09 $MSG  C'BCSC109          NO LONGER ACCEPTING LOGONS'    88192
S37MSG10 $MSG  C'BCSC110          NEVER ACCEPTING LOGONS'        88192
S37MSG11 $MSG  C'BCSC111          TEMPORARILY NOT ACCEPTING LOGONS'
         SPACE 1
S37MSG12 DC    YL2(S37END12-*)
         DC    XL2'0D250D25'          DOUBLE CARRIAGE RETURN     86153
         DC    C'ESP VTAM SERVICE '                              92300
S37NSN12 DC    CL20' '       VTAM AND PROGRAM VERSION            86145
***********************************************************************
*                                                                     *
*        TIME AND DATE STAMP                                          *
*                                                                     *
***********************************************************************
         SPACE 1
         DC    C'   System:'   SYSTEM ID                         86012
S37SMC12 DC    CL4' '        SMCA ID                             86012
         DC    C'   Terminal:'    TERM KEYWORD                   85328
S37TID12 DC    CL8' '             TERM NAME
         DC    XL2'0D250D25'          CARRIAGE RETURN            86153
***********************************************************************
*                                                                     *
*        APPLICATION SELECTION MENU                                   *
*                                                                     *
***********************************************************************
         SPACE 1
         DC    C'  APPLICATION  ENTER         EXIT'
         DC    CL3' '             FILLER
S37TIM12 DC    CL15' '            TIME STAMP
         DC    X'0D25'                                           86153
         DC    C'  TSO          LOGON         LOGOFF'
         DC    X'0D25'                                           86153
         DC    C'  KERMIT       KERMIT        QUIT/LOGOFF'       89338
         DC    X'0D25'                                           86153
         DC    C'  WYLBUR       WYLBUR        LOGOFF'            84142
         DC    X'0D25'                                           86153
         DC    C'  Comten menu  LOGOFF'                          86356
         DC    X'0D25'                                           86356
***********************************************************************
*                                                                     *
*        PROMPT FOR INPUT                                             *
*                                                                     *
***********************************************************************
         DC    C'ENTER ? '
S37END12 EQU   *
S37SIZ12 EQU   S37END12-S37MSG12
         SPACE 1                                                 86065
S37MSG13 $MSG  C'ESP VTAM SERVICE IS CLOSED AT THIS TIME'        92300
S37MSG14 $MSG  C'CENTER CLOSED - ACCESS NOT PERMITTED NOW'       87187
S37MSG15 $MSG  C'BCSC115 TERMINAL NOW UNLOCKED'                  86065
S37MSG16 $MSG  C'BCSC116 TERMINAL HAS BEEN LOCKED'               86065
S37MSG17 $MSG  C'BCSC117 PASSWORD UNLOCK REQUEST FAILED'         86065
S37MSG18 $MSG  C'BCSC118 REQUEST IS NOT AUTHORIZED'              87187
         SPACE 1                                                 88179
S37MSG20 DC    YL2(S37END20-*),X'0D25'                           88179
         DC    C'Welcome to ESP VTAM Services.'                  92300
         DC    C'   System:'   SYSTEM ID                         88220
S37SMC20 DC    CL4' '        SMCA ID                             88220
         DC    C'   Terminal:'    TERM KEYWORD                   88220
S37TID20 DC    CL8' ',X'0D25'     TERM NAME                      88220
 DC    C'Please issue a command (HELP, LOGOFF...) or sign on.',X'0D25'
         DC    C'To sign-on, enter your userid, a space, and your passw*
               ord. You may specify',X'0D25'                     88220
         DC    C'your account number after the password to bypass TSO/W*
               YLBUR logon prompts.',X'0D25'                     88220
         DC    C'Enter (id/pswdÝ/acct¨)>'   PROMPT FOR INPUT     88220
S37END20 EQU   *                                                 88179
         TITLE '*********  N E T S O L  -  MESSAGES FOR SYSIN'
***********************************************************************
*        MESSAGE TEXTS                                                *
***********************************************************************
         SPACE 2
SINMSG00 $MSG  C'UNSUPPORTED MESSAGE FOR SYSIN CMDS',TYPE=SYN    88192
         SPACE 1
SINMSG04 DC    YL2(SINEND04-*-2)                                 86066
SINM4OF  DC    CL60' '
SINEND04 EQU   *
         ORG   SINM4OF       REDEFINE                            88199
ERRMSG   DC    XL125'0'      RDW/0/TEXT  FOR SVC 249 ERROR MESSAGES
         SPACE 1
SINMSG07 $MSG  C'BCSC107 INVALID COMMAND'                        88192
         SPACE 1                                                 85235
***********************************************************************
*    EXIT ROUTINES TO BE SCHEDULED IN RESPONSE TO VTAM EVENTS         *
*                                                                     *
*              * ERREXIT ENTERED FOR ERROR CONDITIONS.                *
*              * TPEND SCHEDULED WHEN VTAM SHUTS DOWN                 *
*              * LOGON SCHEDULED WHEN A TERMINAL LOGS ON              *
*              * LOSTERM SCHEDULED WHEN A TERMINAL IS LOST            *
*              * RELREQ SCHEDULED WHEN ANOTHER APPLICATION ACQUIRES   *
*                A TERMINAL CURRENTLY LOGGED ON TO NETSOL.            *
***********************************************************************
         SPACE 2
         DS    0D
         DC    CL8'EXITLIST'
         SPACE 1
EXLST    EXLST LERAD=ERREXIT,                                          X
               SYNAD=ERREXIT,                                          X
               TPEND=TPEND,                                            X
               RELREQ=RELREQ,                                          X
               LOGON=LOGON,                                            X
               LOSTERM=LOSTERM,                                        X
               AM=VTAM
         TITLE '*********  N E T S O L  -  R P L   DSECT CONTINUED'
IFGRPLX  DSECT
*        THE FOLLOWING SECTION OF THE WORK AREA IS NOT INITIALIZED BY
*        THE GETRPL FUNCTION SO NO DATA SHOULD BE PLACED IN THAT NEEDS
*        TO BE ZERO AT THE BEGINNING
         SPACE 1
*        THE FOLLOWING MANIPULATION RESERVES A MESSAGE BUFFER FOR
*        THE LARGEST EXISTING MESSAGE.
         DS    0F            ALIGN                               91195
IOBASE   DS    CL(S32SIZ12)            SPACE FOR 3270 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S3ESIZ12)            SPACE FOR 3270 EXTENDED MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(MD5SIZ12)  SPACE FOR 3270 MODEL 5              88206
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S37SIZ12)            SPACE FOR 3767 MSG 12
         ORG   IOBASE                  BACK TO START OF BUFFER
         DS    CL(S32SIZ13)            SPACE FOR 3270 MSG 13     86065
         ORG   IOBASE                  BACK TO START OF BUFFER   86065
         DS    CL(S3ESIZ13)            SPACE FOR 3270 EDS MSG 13 86065
         ORG   IOBASE                  BACK TO START OF BUFFER   86065
         DS    CL(MD5SIZ13)  SPACE FOR MODEL 5 SCREEN            88206
         ORG   IOBASE                                            88206
         DS    CL(S32SIZ20)  SPACE FOR LOGON SCREEN              88206
         ORG   IOBASE                                            88206
         DS    CL(S3ESIZ20)                                      88206
         ORG   IOBASE                                            88206
         DS    CL(MD5SIZ20)                                      88206
         ORG   IOBASE                                            88206
         DS    CL(PREFIXLN)  LEAVE ROOM FOR EXHIBIT SCREEN       87193
*OLD*    DS    24CL80                                            87193
         DS    27CL132       ROOM FOR MODEL 5                    88206
         DS    CL(SUFFIXLN)                                      87193
         ORG   ,                       GO TO END OF BUFFER
LMSG12   EQU   *-IOBASE                CALC MAX MSG 12 SIZE
         ORG   IOBASE BACK TO START OF BUFFER
IOAREA   DS    CL(LMSG12)              FOR MSG OUTPUT / INPUT FROM LU
         ORG   IOAREA+80               ORG OVER SYSIN BUFFER
NODENAME DS    CL8                     TEMP NODE NAME STORAGE
NODENAM2 DS    CL8           RANGE END NAME                      88185
DLOGAPPL DS    CL8                     TEMP APPLID STORAGE
TTEDUMMY DS    CL(TERMELEN)            DUMMY TTE USED BY SYSIN CMDS
         ORG   ,                       ORG BACK TO END OF BUFFER
*        OUTPUT BUFFER DEFINITION COMPLETE.
DATASEQ  DS    CL256                   TRANSLATED DATA SEQUENC DC18203
ENDSECT  DS    0D                      END DSECT ON D-WORD
LNIFGRPL EQU   WORKSPAC-STSECT         LENGTH OF ONE RPL AREA
IOBUFLEN EQU   ENDSECT-IOAREA          LENGTH OF THE IOAREA
*                                      WITHOUT THE WORKAREA
         PRINT NOGEN                                             86012
         SPACE 1                                                 86012
CVTDSECT DSECT ,                                                 86012
         CVT   DSECT=YES                                         90344
         IEESMCA ,                                               90344
         IHAPSA ,                                                86012
CIB      IEZCIB ,                                                86065
         IHAASVT ,           ADDRESS SPACE VECTOR TABLE          90120
         IHAASCB ,           ADDRESS SPACE CONTROL BLOCK         90120
UCM      DSECT ,                                                 87187
         IEECUCM ,                                               87187
         IKJTCB ,                                                87193
         IHACDE ,            REALLY WANT LPDE                    87193
         IEECHAIN ,          CSCB MAPPING                        90120
         SPACE 1                                                 93038
         IEFJESCT ,          JES VECTOR TABLE                    93038
         SPACE 1                                                 93038
         IEFJSCVT ,          EXHIBIT SSCT                        93038
         SPACE 1                                                 88179
         AIF   ('&LOCAL' NE 'ESP').NOESP                         92300
         MAPEXR ,            MAP EXHIBIT CSA                     93038
         MAPEXK ,            MAP EXHIBIT SCREEN AREA             93038
         SPACE 1                                                 93038
USERCVT  USERCVT ,                                               88185
         SPACE 1                                                 88185
         PRINT GEN                                               88179
A$LOUD   A$LOUD ,                                                88179
.NOESP  END   ,                                                  92300
