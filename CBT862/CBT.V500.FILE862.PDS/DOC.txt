./ ADD NAME=SYSGUIDE 0100-13237-13237-1202-09779-09779-00000-GERHARD
1                                    Start on third or fourth print line


 Ð×××¯
 |   |
 ¿×××]                              Right edge should be at or over perforation






















 Ð×××¯
 |   |
 |   |
 ¿×××]






















 Ð×××¯
 |   |
 ¿×××]

1                                    Start on third or fourth print line


 Ð×××¯
 |   |
 ¿×××]                              Right edge should be at or over perforation






















 Ð×××¯
 |   |
 |   |
 ¿×××]






















 Ð×××¯
 |   |
 ¿×××]

1
-
0
-
-
-
-                                    Technical Guide
0                                           to
0                             Operating System Modifications
0                                  and System Utilities
-
0                                   ******************
                                   *                  *
                                   * ****   ***  ***  *
                                   * *     *     *  * *
                                   * ***    **   ***  *
                                   * *        *  *    *
                                   * ****  ***   *    *
                                   *                  *
                                   ********************
                                  *.::::::::::::::::::.*
                                 ************************
-
-
                                     Copyright -7 by
                             Expert System Programming, Inc.
                                    347 Orchard Street
                                    Vienna, Va. 22180
0                                     (703) 938-1928
-
                                  Printed on May 5, 1991
1
-
0                                 INTRODUCTION
+                                 INTRODUCTION
-    This manual describes the system modifications  that have been made by
     ESP  at  the  Dial-Tyme computer  facility  (DTS),   and  additionally
     describes the procedures,  macros,  subroutines  and programs used for
     maintenance.
0    The  installation  instructions  refer  to  a  tape  labelled  ESPDTR,
     available from  ESP,  which is distributed  subject to the  same rules
     used by SHARE, Inc. for program and modifications exchange.
0    The programs and this manual contain proprietary material, and may not
     be copied without the consent of Expert System Programming,  Inc.,  as
     described in member $$RIGHTS contained in the primary source and macro
     files.
-
-
-
-
-
-
-
-
-
-
-
-
-    ii
1                        Technical Guide to System Modifications
          Installation and Maintenance
-
                                        Section 1
+                                       Section 1
0                              INSTALLATION AND MAINTENANCE
+                              INSTALLATION AND MAINTENANCE
-         The programs,  macros and system changes  described in this manual are
          available  to any  requesting  installation.    Note that  distributed
          load-module   libraries   contain  programs   assembled   with   local
          dependencies,   and may  need  to be  re-assembled.   Before any  such
          re-assembly, you must update member SYSPARM in the macro library.  Set
+                          must
          the defaults to suit your installation.
0         Distribution  is  made  on  a requestor's  tape;   the  tape  will  be
          accompanied by  the listing of the  job that produced  it.   Formatted
          documentation is included in duplex mode  (intended to be printed on a
          printer producing both sides of a page);   if you have no such access,
          you  need to  restore the  Waterloo SCRIPT  files and  use SCRIPTW  to
          produce documentation (remove "SIDES=BOTH" from the SYSPUB invokations
          and change ".et" and ".eb" titles/footers as desired).
0         With the exception of the formatted print files,  all other tape files
          are in  IEBCOPY format  and generally  have blocksizes  appropriate to
          3380s.
0         ESP continually improves and fixes this code, but has no provision for
          automatic distribution of  updates.  Should you want  an update,  just
          complete the USER REGISTRATION form in  back of this manual and return
          it with a 2400-foot 9-track tape.
0         ESP makes no warranties,  assumed or  implied,  for the correctness or
+         ESP makes no warranties   assumed or  implied   for the correctness or
          validity of the distributed code.
+         validity of the distributed code
-
-
-
-
-
-
-
-                                                                              1
1                   Technical Guide to System Modifications
     Program Services
-
                                   Section 2
+                                  Section 2
0                               PROGRAM SERVICES
+                               PROGRAM SERVICES
-    2.1   PROGRAM ORGANIZATION
+    2.1   PROGRAM ORGANIZATION
+          _______ ____________
0    The  utility routines  consist  of a  set  of  common subroutines  and
     subprograms,  and the utility programs  proper.  Also included in this
     description are routines  which are maintained,  but not  used by ESP,
     such as the RANDU random number subroutine for FORTRAN users.
0    With the exception of big letter  routine IEFSD095,  which is based on
     the OS Writer subroutine of the same name, all subprograms have a name
     starting with an at sign, "@".  The newer routines are re-entrant, and
     may be  placed in  the Pageable  Link-Pack area.   The basic  @SERVICE
     routine has an optional SVC entry point,  as determined by the setting
     of &SVC@SVC  in macro SYSPARM.  When  the SVC number is  set non-zero,
     then the @SERVICE routine  must be added to LPA (either  PLPA or MLPA)
     along with its SVC entry name alias.
0    When the ESP macro library is installed, the contents of macro library
     members OPTIONGB and SYSPARM should be reviewed.  COPY member OPTIONGB
     contains global SET definitions; SYSPARM assigns values to these based
     on the SYSPARM,  if any,  and its  own defaults.   It is required that
     variable &LOCAL be changed;   it should be set to your  SHARE or GUIDE
     installation code,   else to a five  to eight character  string.   The
     values ESP and CCSI are reserved.
-
     2.2   UTILITY PROGRAMS
+    2.2   UTILITY PROGRAMS
+          _______ ________
-
-
-
-
-
-
-
0    2
1                        Technical Guide to System Modifications
          Utility Programs                                              ALTTRACK
-         2.2.1   Alternate Track List .................................ALTTRACK
+         2.2.1   Alternate Track List                                  ALTTRACK
+                 _________ _____ ____                                  ________
0         The ALTTRACK program has four functions.
0            1.  With  PARM=QUICK,  it  prints a  listing  of used  alternate
                 tracks, as read from the alternate track area on disk.
0            2.  With a  null PARM,  it  reads each  track on the  disk,  and
                 prints alternate track assignments.
0            3.  With PARM=SKIP, valid for modulo devices only, it reads each
                 track and prints non-standard skip offsets. This mode may be
                 used to help anticipate failing tracks.
0            4.  When  invoked as  PGM=FIXTRACK,   with a  PARM  of the  form
                 "cccchhhh",  it reads the specified  track,  and invokes the
                 ATLAS SVC to assign an alternate track and copy any readable
                 data to the new track.
-                Note that  correct execution of  FIXTRACK requires a  ZAP to
                 the ATLAS SVC (see member MVSATLAS for details),  to prevent
                 ATLAS from assigning excessive alternate tracks.
-         JCL required:
           //      EXEC  PGM=ALTTRACK,REGION=128K,PARM= none QUICK or SKIP
           //      EXEC  PGM=FIXTRACK,REGION=128K,PARM=cccchhhh
           //SYSPRINT DD SYSOUT=A
           //SYSUT1   DD UNIT=...,VOL=SER=...,DISP=OLD
           //SYSUTnnn DD ... for ALTTRACK, but not FIXTRACK, additional DDs.
-
-
-
-
-
-
-
-
                                                                               3
1                   Technical Guide to System Modifications
     ASMANY                                                Utility Programs
-    2.2.2   Multiple Assembler ...................................ASMANY
+    2.2.2   Multiple Assembler                                    ASMANY
+            ________ _________                                    ______
0    The ASMANY utility program is used to maintain all local modules.   It
     invokes the  assemblers (G,  H and  XF)  and the  linkage-editor,  and
     assembles modules from diverse partitioned datasets. Multiple assembly
     and link requests  may be satisfied in  one step.  The program  may be
     used either to assemble, (and assemble...), then link-edit one module,
     or it may be used to run  multiple assemblies,  followed by a discrete
     link-edit  step (normally  with a  condition-code test)   to link  all
     assembled members into one or more modules.
0    Required JCL:
      //      EXEC  PGM=ASMANY,REGION=...,TIME=...,PARM=asm-options
                     the region should be set according to the assembler
                     and the time should be set depending on the work load
      //MSGPRINT DD SYSOUT=A      optional processing message file
      //ASMTERM, //ASMLIB, //ASMUT1, //ASMUT2, //ASMUT3, //ASMPRINT,
      //ASMPUNCH, //ASMGO all like the ASM PROC's SYSxxxxx files.
      //ASMIN    DD DISP=SHR,DSN=...  partitioned dataset
      //SYSIN    DD *             ASMANY control cards
      //LNKLMOD  DD               like LKED SYSLMOD
      //LNKLIB   DD               like LKED SYSLIB
-    The PGM name may be ASMANY (defaults to IFOX00, the XF Assembler),  or
     ASMANYG for the U.  of Waterloo assembler,  or ASMANYH for the H-level
     assembler.
0    Control cards:
     Any unrecognized character string beginning in  column 1 is treated as
     a member  name.  The  card scan  is limited  to columns  1-72,  and  a
     trailing plus or minus sign may be used as a continuation indicator.
0        member
         member sub1 sub2 sub3
         member: module
         member: module sub1 sub2
0    The first  of the above  forms would  cause ASMANY to  assembly source
     module  "member",  and  create link-edit  information for  load-module
     "member".  The second form assembles source modules "member",  "sub1",
     "sub2" and "sub3",  and creates  link-edit information for load-module
     "member".  The third form would  assemble source member "module",  and
     create link-edit information for load-module "member". The fourth form
     assembles "module", "sub1" and "sub2",  and creates link-edit controls
     for load-module "member".
0    When the LNKLIB and LNKLMOD DD cards are provided,  additional options
     may be used:
          %LINK   memberÝ:¨ module...
          %RELINK memberÝ:¨ module...
          %NEWLINK memberÝ:¨ module...
-
     4
1                        Technical Guide to System Modifications
          Utility Programs                                                ASMANY
-         The form %LINK causes assembly and link-edit controls as described for
          the plain "member" cards,  but the link-edit control information (SSI,
          PAGE, AC, RENT,  REFR,  REUS,  OVLY,  TEST,  etc.)  are taken from the
          existing load-module  "member" in LNKLMOD,   if found there,   or from
          LNKLIB. Processing ceases if the module is not found. The form %RELINK
          works like %LINK, but also copies all ALIAS entries.  Note that due to
          local conventions for SSI (the form is 000yyddd),  when the old member
          has an SSI of this form,  the new SSI will not be copied,  but changed
          to  the current  date.   %NEWLINK  works  as %RELINK  for an  existing
          member,   but uses  current  link-edit options  for  new members  (see
          %LKEDPARM).
-         Processing control options:
          * in column 1 causes a WTOR to be generated. The operator is given the
          opportunity to respond to the WTOR  to cause program termination after
          the next assembly. This is mainly used for attended job execution, not
          operator intervention. Note that ASMANY responds to OS MODIFY commands
          (F jobname,?   to solicit  the current member  name,  STOP  jobname to
          quit).
0         DSN=datasetname causes the subsequent assemblies  to run from the JFCB
          determined by the DD card in control (ASMIN by default),  with the DSN
          altered. It may be used to change PDSs that reside on the same volume.
0         DDN=ddname causes all  assemblies to be run from the  PDS specified on
          the DD card with the specified name.
0         DDLMOD=ddname causes subsequent assemblies to use the specified DD for
          load-module output.   The special form  DDLMOD=DYNALLOC may be used to
          request dynamic allocation (creation) of a DD for the library in which
          %LINK,  %NEWLINK or  %RELINK located the member,  or  the first LNKLIB
          concatenated library when %NEWLINK is requested for a new member.
0         % in column 1, with no operands,  causes generation of SSI and NAME(R)
          cards for "member"  assemblies (i.e.,  when the  %LINK/%RELINK options
          are not used).  This mode is the default,  and the generated SSI is of
          the form 000yyddd.
0         %OFF     in column 1 suppresses generation  of the SSI and NAME cards.
          This form must be used when a module consists of subroutines that need
          to be assembled from different libraries. For instance:
                   DSN=SYS1.SUBRTNE
                   %OFF
                   sub1
                   sub2
                   DSN=SYS1.MAINSRC
                   %
                   main
0         The above sequence would assemble subroutines "sub1" and "sub2" from a
          PDS  named  SYS1.SUBRTNE,   then  assemble   member  "main"  from  PDS
          SYS1.MAINSRC, and generate an SSI and NAME main(R) control cards.   In
-                                                                              5
1                   Technical Guide to System Modifications
     ASMANY                                                Utility Programs
-    the above case, an ORDER and ENTRY card would be strongly recommended.
     %LKEDPARM  sets   common  link-edit   options  (unaffected   by  other
     modifications).  Default is  TERM,LET,LIST,MAP,SIZE=(400K,100K).   The
     default is  used when no  operands appear;  otherwise,   the specified
     string is moved into the PARM field as is.
0    %LKEDDFLT specifies  options to  be appended to  the LKEDPARM  for new
     members processed with the %NEWLINK option.   Permissible operands are
     RENT, TEST, LOAD, OLAY, SCTR, OVLY,  REFR,  RENT,  REUS,  OL,  and DC.
     Specified options must be separated only by blanks.  With no operands,
     the card nullifies all options.
0    %LKEDON  specifies options  (as  above for  LKEDDFLT)   for %LINK  and
     %RELINK members.  The  specified options are ORed  against those found
     for the member.
0    %LKEDOFF specifies options (as described for LKEDDFLT)  that are to be
     turned  off in  %LINK  and %RELINK  members.    Typical  use might  be
     %LKEDOFF OLAY to relink IEBCOPY (or some other IBM utilities)  without
     the Overlay option.
0    %XEROX or  %9700 specifies that  this output will  go to a  XEROX 9700
     family LASER printer,  and that slightly different EJECT processing is
     needed at  the beginning of each  member (sheet feed).    This options
     requires co-requisite  changes in module  @PRINTER.   The  form %XEROX
     AUXILIARY TRAY causes separator pages to  be picked from the alternate
     feed tray.
0    blank or hex '02' in column 1  is used for link-edit input and control
     cards.  In the above sequence,  a card  with a blank in column 1,  and
     text of  "ENTRY MAIN",   could have  been used  anywhere prior  to the
     "main" card. This option also supports inclusion of object decks.
0    + in column 1  indicates a control card which is  written to the ASMGO
     file after the current assembly completes, but before the SSI and NAME
     cards are generated.  The  plus is changed to a blank.   Up to sixteen
     cards may be stacked.
0    %NOSVC inhibits name conversion.  By default, the trailing zero in the
     source  member name  IGCnnnn0 is  converted  to hex  'C0',  under  the
     assumption that the name is that of an SVC.
0    SSI=blanks suppresses generation of SSI cards, but not of NAME cards.
0    SSI=value causes all SSI cards to be punched with the indicated value.
0    %SEP causes  a two-page  separator to  be written  between assemblies.
     The separator  is suppressed  when the  ASMPRINT file  is a  PDS.  The
     separator is written  by default.  Contents are the  date,  the module
     name, and the abbreviated datasetname.
0    %NOSEP inhibits separator production.
0    SEP=2 causes production of a two-line separator, the default at CCSI.
0    6
1                        Technical Guide to System Modifications
          Utility Programs                                                ASMANY
-         SEP=3 causes production of a three-line separator, the standard mode.
0         SEP=NO and SEP=YES are alternate forms of %SEP and %NOSEP.
0         ID=data  may be  used  to set  the  data  for the  third  line of  the
          separator page, and is specified as one to eight characters.  The DDN=
          and DSN= options reset the name.
0         %PAGE causes generation of a "  PAGE member" control card whenever the
          NAME card is written.
0         %NOPAGE inhibits production of the PAGE card.
0         COND=value  or   CODE=value  may  be   used  to   control  consecutive
          assemblies.   The  value specified is  the lowest  unacceptable return
          code.  There  is no  default.  Note that  an abend  in an  assembly is
          reported as a return code of 4095.
0         COND=RESET may  be used  to clear the  current condition  code.   This
          request does not change the eventual step completion code,  which will
          be  the  highest  code encountered.    It  solely  affects  subsequent
          assembly/link tests.   This  option is used when  errors are expected,
          and continued processing is required; as for instance when a link-edit
          yields  a  return  code  of   four  due  to  intentionally  unresolved
          references.   Note that this option also requires that the appropriate
          COND and LKEDCOND vaues be set to prevent program termination prior to
          reaching the RESET request.  For example:
                   COND=12             expect assembly rc of 8
                   BADASM              assemble bad module
                   COND=RESET          ignore the error
                   COND=0              reset of assemblies must be good
0         LKEDCOND=value  or  LKEDCODE=value  may  be used  to  set  the  lowest
          unacceptable  return  code   that  will  inhibit  invokation   of  the
          linkage-editor. The default is 4.
0         Note that the MSGPRINT DD card may be replaced by a DD named CONPRINT.
          The  presence of  CONPRINT causes  all messages  to be  echoed to  the
          console, as well as written to the CONPRINT file.
0         The ASMPRINT and ASMPUNCH datasets may be partitioned.  When they are,
          separators are not written, and the output is stowed with the member's
          source name.  The PDS option requires that the MODJFCB SVC (by default
          SVC 240)  be installed in the system,  and that the &SVCJFCB parameter
          in macro SYSPARM be set accordingly.
0         The  ASMIN dataset  specifies  the PDS  containing  the  member to  be
          assembled.  In order to make maintenance and testing easier,  any step
          assembling only  a single module may  use a sequential  ASMIN dataset,
          including a DD * or DD DATA.
-
-                                                                              7
1                   Technical Guide to System Modifications
     BLOCKPRT                                              Utility Programs
-    2.2.3   Tape Print ...........................................BLOCKPRT
+    2.2.3   Tape Print                                            BLOCKPRT
+            ____ _____                                            ________
0    The BLOCKPRT  program prints tape  or disk  resident print files  on a
     dedicated  printer.  Options  for  restart,   backspacing and  forward
     spacing are available on a run and page basis, providing the user uses
     channel 1 (or other channel skips) that may be used for page counting.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0    8
1                        Technical Guide to System Modifications
          Utility Programs                                              CAPACITY
-         2.2.4   DASD Capacity ........................................CAPACITY
+         2.2.4   DASD Capacity                                         CAPACITY
+                 ____ ________                                         ________
0         The CAPACITY program requires a SYSPRINT  DD card,  and produces track
          capacity  listings  for all  DASD  devices  supported by  the  current
          system.  The information is produced for keyed and unkeyed blocks, and
          for different key lengths for modulo devices.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                              9
1                   Technical Guide to System Modifications
     CATCLEAN                                              Utility Programs
-    2.2.5   Catalog Clean-up .....................................CATCLEAN
+    2.2.5   Catalog Clean-up                                      CATCLEAN
+            _______ ________                                      ________
0    CATCLEAN  is used  in  the weekly  clean-up  of  the system  catalogs.
     Non-VSAM entries in the master catalog (on each system) are restricted
     to CVOL pointers  and the associated index alias  entries.  Entries in
     the WYLBUR  catalog are restricted  to existing WYLBUR  datasets,  and
     entries on the  TSO and LIBPAK volumes are  similarly restricted.  The
     program reads through  all catalogs specified on  //CATALOGn DD cards,
     sends the result to be sorted by volume serial,  and then verifies the
     existence of  each dataset.  Entries  for volumes  not in the  TMC are
     deleted unconditionally.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    10
1                        Technical Guide to System Modifications
          Utility Programs                                               CATEDIT
-         2.2.6   Catalog Clean-up .....................................CATEDIT
+         2.2.6   Catalog Clean-up                                      CATEDIT
+                 _______ ________                                      _______
0         The CATEDIT program is used as necessary to update non-VSAM entries in
          the master catalog. The default invokation searches the master catalog
          and all  connected CVOLs.  With  PARM=QUICK,  only the  master catalog
          search is performed.  Datasets that  are not located are uncatalogued.
          For the  master catalog,  entries are  recatalogued when the  DSCB TTR
          field is zero or incorrect.
0         Suggested JCL:
           //     EXEC  PGM=CATEDIT,REGION=2048K,PARM=QUICK
           //SYSPRINT DD SYSOUT=A
           //SYSUT1   DD UNIT=VIO,SPACE=(CYL,(8,2)),DCB=BLKSIZE=3120
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              11
1                   Technical Guide to System Modifications
     CATLIST                                               Utility Programs
-    2.2.7   VSAM Catalog Lister ..................................CATLIST
+    2.2.7   VSAM Catalog Lister                                   CATLIST
+            ____ _______ ______                                   _______
0    Program CATLIST  provies a summary listing  of VSAM and  ICF catalogs.
     Catalogs other than  the master catalog,  the default,   may be listed
     using a STEPCAT DD with the correct catalog DSN.
-    Suggested JCL:
      //      EXEC  PGM=CATLIST,PARM=volser  default PARM is master
      //SYSPRINT DD SYSOUT=A
      //STEPCAT DD DISP=SHR,DSN=catalog.dsn   Ýnon-master catalogs only¨
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    12
1                        Technical Guide to System Modifications
          Utility Programs                                               CDSLIST
-         2.2.8   SMP Lister ...........................................CDSLIST
+         2.2.8   SMP Lister                                            CDSLIST
+                 ___ ______                                            _______
0         This program  lists SMP Version 4  CDS information,  and has  not been
          upgraded for SMP/E
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              13
1                   Technical Guide to System Modifications
     CLEARDSN                                              Utility Programs
-    2.2.9   Dataset Initialization ...............................CLEARDSN
+    2.2.9   Dataset Initialization                                CLEARDSN
+            _______ ______________                                ________
0    Entry CLEARDA initializes Direct Access datasets.    It may be used to
     initialize FORTRAN Direct files (faster).
0    Entry CLEARDSN of this program erases all tracks of a dataset.   Entry
     CLEAREOF locates the last record in a pre-cleared dataset, and adds an
     end-file (and updates LSTAR)  as necessary.   In combination,  the two
     functions may be used to maintain sequential datasets over system/line
     crashes.
0       1.  Allocate  the dataset  with a  unique  DD name  of the  form
            SYSUTnnn.
0       2.  Run  CLEARDSN to  initialize all  allocated SYSUT  datasets;
            CLEARDSN will write an end-file on each track, and erase the
            remainder of the track.
0       3.  Using DISP=MOD or OLD, add new records.
0       4.  Prior to next use (before or after a crash), allocate SYSUTs
            and run CLEAREOF to ensure correct LSTAR and DISP=MOD usage.
0    Note that  the SPACE for  these datasets  should not include  the RLSE
     parameter,  and should be sufficiently large so that normal processing
     will not allocate additional extents.  When CLEAREOF is run against an
     uninitialized secondary extent,  it will examine the blocksizes of any
     records found.   If the sizes are  plausible for the DCB  values,  the
     records will be considered part of the data;  i.e.,  CLEAREOF may fail
     to detect  the true end  of the dataset and  include a portion  of the
     uninitialized section.
0    CLEARDA  initializes DSORG=DA  datasets specified  with a  DD name  of
+    CLEARDA
     SYSUTnnn (as above). Multiple datasets may be processed in one program
     invokation,  but  the fill character  will be  the same for  all.   By
     default,  the program uses hex zero for padding.   This may be changed
     by specifying PARM='FILLc',  where 'c' is a character other than blank
     or a comma, or PARM=FILLxx,  where 'xx' is the hexadecimal code of the
     fill character (e.g., PARM=FILL40 for blank fill).
-
-
-
-
-
0    14
1                        Technical Guide to System Modifications
          Utility Programs                                              CLEARPDS
-         2.2.10   Partitioned Dataset Initialization ..................CLEARPDS
+         2.2.10   Partitioned Dataset Initialization                   CLEARPDS
+                  ___________ _______ ______________                   ________
0         This  program physically  re-initializes  the  directory blocks  of  a
          partitioned dataset, and logically erases the contents.  Use EXPDIR to
+                                            erases                    EXPDIR
          change the  number of  directory blocks  in a  PDS without  losing the
+                                                            without
          contents.
0            1.  The program  may be used to  change the number  of directory
                 blocks in a  PDS by specifying the new number  as PARM=nn on
                 the EXEC card, and the dataset as SYSLIB.
0            2.  Multiple  datasets  may be  initialized  (without  directory
                 block change) using unique SYSLIBnn DD cards.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              15
1                   Technical Guide to System Modifications
     COMMENT                                               Utility Programs
-    2.2.11   Operator Communication ..............................COMMENT
+    2.2.11   Operator Communication                               COMMENT
+             ________ _____________                               _______
0    This program  may be  used to send  messages to  the operator  from an
     executing job. It may also solicit one response.
0    Suggested JCL is:
      //      EXEC  PGM=COMMENT
      //SYSPRINT DD SYSOUT=A      optional
      //SYSIN    DD               required
-    The input data  may consist of free  form comments in columns  1-72 of
     each card image.  An  asterisk in column 1 will cause  the contents of
     that card to be  issued as a WTOR;  after the  operator responds,  the
     program terminates.
0    Because the cards read are written to the console as DOMable messages,
     no more than 10 lines should be used to avoid locking up the console.
-
-
-
-
-
-
-
-
-
-
-
-
0    16
1                        Technical Guide to System Modifications
          Utility Programs                                               CONVERT
-         2.2.12   Code Conversion .....................................CONVERT
+         2.2.12   Code Conversion                                      CONVERT
+                  ____ __________                                      _______
0         This program converts card images produced  on an IBM 026 keypunch (or
          with an equivalent character set)  to their IBM 029 equivalents.   The
          input file is specified on a SYSIN DD, and the output as SYSOUT.  Only
          record  lengths  up   to  80  bytes  are  supported,    and  full  DCB
          specifications must be provided from external sources.
0         The program converts the left and right parentheses, plus sign,  equal
          sign and apostrophe.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              17
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-    2.2.13   Catalog Copy ........................................COPYCAT
+    2.2.13   Catalog Copy                                         COPYCAT
+             _______ ____                                         _______
0    This utility copies, merges or splits OS CVOL catalogs.  It originated
     at Argonne  National Lab,  and has  since been corrected to  run under
     MVS.
-
0                     COPYCAT - OS CATALOG UTILITY PROGRAM
                                       BY
                               DOUGLAS E. ENGERT
                          APPLIED MATHEMATICS DIVISION
                          ARGONNE NATIONAL LABORATORY
                             9700 SOUTH CASS AVENUE
                            ARGONNE, ILLINOIS 60439
-     THIS 12-77 VERSION CONTAINS SEVERAL MINOR FIXES FROM ARGONNE
      ("F00001" & "F00003") AND A MAJOR SPEED ENHANCEMENT TO THIS
      ALREADY FAST PROGRAM IN THAT THE CATALOG I/O IS NOW DONE AT
      EXCP LEVEL ("EXCP01").  A FIX FROM UCLA FOR A LITTLE MORE
      SPEED YET IS ALSO INCLUDED ("CCN").  THE HARDCODED BLKSIZES
      FOR SYSIN AND SYSPRINT HAVE BEEN CHANGED TO 3200 AND 605.
                                F. PAJERSKI   NASA/GSFC   01DEC77
-                              TABLE OF CONTENTS
0       ABSTRACT
0       1.0 INTRODUCTION
0       2.0 USER MANUAL
0         2.1 FUNCTIONS
0           2.1.1 REDISTRIBUTION
            2.1.2 RESTRUCTURING
            2.2.3 MASTER AND SECONDARY CATALOGS
            2.1.4 MASTER MODE
            2.1.5 SECONDARY MODE
            2.1.6 MODEL GENERATION DATA GROUP DSCBS
            2.1.7 ADDITIONAL CVOL PROCESSING
            2.1.8 ALIAS PROCESSING
            2.1.9 MULTIPLE INPUTS
0         2.2 CONTROL CARDS
0           2.2.1 CONTROL
            2.2.2 INPUT
            2.2.3 OUTPUT
            2.2.4 CVOL
            2.2.5 LEVEL
0    18
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-              2.3 JOB CONTROL STATEMENTS
0              2.4 MESSAGES AND CODES
0              2.5 EXAMPLES
0                2.5.1 COPY A CATALOG FROM ONE VOLUME TO ANOTHER
                 2.5.2 BACK UP A CATALOG
                 2.5.3 REDISTRIBUTE A CATALOG
0            3.0 PROGRAM LOGIC
-                      COPYCAT IS AN  OS  UTILITY  PROGRAM  DESIGNED  TO
                  IMPROVE   PERFORMANCE  OF  OS  CATALOG  MANAGEMENT  BY
                  PRODUCING A RESTRUCTURED COPY OF A CATALOG IN ORDER TO
                  USE  THE  EXISTING  ACCESS  METHODS  MOST EFFECTIVELY.
                  MULTIPLE INPUT AND OUTPUT CATALOGS ARE  PROCESSED  AND
                  THE  REDISTRIBUTION  OF  THE  ENTRIES  IS  UNDER  USER
                  CONTROL. MODEL DSCBS FOR GENERATION  DATA  GROUPS  AND
                  ALIAS  ENTRIES  ARE  ALSO  PROCESSED.  CATALOGS ON ALL
                  DIRECT  ACCESS  DEVICES,  INCLUDING  DATA  CELLS,  ARE
                  SUPPORTED. BACKUP COPIES MAY ALSO BE MADE.
-            1.0 INTRODUCTION
0                 COPYCAT IS AN OS UTILITY PROGRAM  DESIGNED  TO  PRODUCE  AN
             EFFICENT  SYSTEM  WIDE CATALOG WHICH MAY RESIDE ON MANY VOLUMES.
             SUBSTANTIAL IMPROVEMENT IN PERFORMANCE MAY ALSO BE OBTAINED ON A
             SYSTEM  WITH  ONLY  A  SINGLE CATALOG. THIS IS ACCOMPLISHED IN A
             NUMBER OF WAYS.  FIRST,  CATALOG  ENTRIES  FROM  MANY  DIFFERENT
             CATALOGS  MAY  BE  REDISTRIBUTED  TO  EQUALIZE  THE LOAD ON EACH
             INDIVIDUAL  CATALOG.  SECOND,   EACH   INDIVIDUAL   CATALOG   IS
             RESTRUCTURED IN A WAY DESIGNED TO MINIMIZE THE I/O TIME REQUIRED
             BOTH  FOR  SEARCHING  AND  UPDATING.  THE   REDISTRIBUTION   AND
             RESTRUCTURING  PARAMETERS  ARE UNDER THE CONTROL OF THE USER WHO
             SHOULD HAVE SOME KNOWLEDGE OF OS CATALOG MANAGEMENT.
0                 OUR INSTALLATION AT ARGONNE CONSISTS OF A 370/195, USED FOR
             BATCH  PROCESSING,  AND A 360/75 USED FOR TIME SHARING. THE TIME
             SHARING SYSTEM, TSO, SHARES ALL ITS ONLINE DEVICES WITH THE 195.
             SINCE  ALL  DATASETS  USED  BY  TSO  MUST BE CATALOGED, THEY ARE
             CATALOGED ON THE RESIDENT VOLUME FOR THE 75 TO ALLOW BATCH  JOBS
             TO  ACCESS TSO DATASETS. THIS HAS PLACED AN EXTREMELY HEAVY LOAD
             ON THIS SHARED CATALOG, WHICH OCCUPIES ABOUT 20 CYLINDERS  ON  A
             2314.  AFTER  SOME  STUDY OF THE SITUATION IT WAS FOUND THAT THE
             ORGANIZATION OF THE  SHARED  CATALOG  WAS  ONE  OF  OUR  BIGGEST
             BOTTLENECKS.  AFTER  RUNNING COPYCAT, SOFTWARE MONITORING SHOWED
             THE PERCENT OF UNIT BUSY TIME OF THE SYSTEM RESIDENT VOLUME  FOR
             THE  75  DROPPED  FROM  ABOUT  80%  TO ABOUT 20%, THE PERCENT OF
             ENQUEUE WAIT FOR THE CATALOG DROPPED FROM  ABOUT  10%  TO  ABOUT
             .1%,  AND  THE  NUMBER OF EXCPS REQUIRED TO LOGON TO TSO DROPPED
             FROM ABOUT 120 TO 70.
0                                                                             19
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-       2.0 USER MANUAL
0       2.1 FUNCTIONS
0            TWO DIFFERENT TYPES OF CATALOG SYSTEMS CAN BE PROCESSED  BY
        COPYCAT.  THE FIRST IS THE STANDARD OS CATALOG SYSTEM CONSISTING
        OF THE MASTER CATALOG ON THE SYSTEM RESIDENT VOLUME AND ZERO  OR
        MORE  CATALOGS  ON  OTHER  VOLUMES.  THE  SECOND TYPE OF CATALOG
        SYSTEM DOES NOT HAVE A MASTER CATALOG, BUT INSTEAD HAS  A  TABLE
        BUILT  INTO  THE  CATALOG MANAGEMENT ROUTINES USED TO SELECT THE
        FIRST CATALOG TO BE SEARCHED. THE CHANGES NEEDED FOR  THIS  TYPE
        OF CATALOG SYSTEM MUST BE LOCALLY WRITTEN.
-       2.1.1 REDISTRIBUTION
0            WHEN MORE THAN ONE CATALOG IS BEING CREATED, REDISTRIBUTION
        PARAMETERS  ARE  REQUIRED.  THESE PARAMETERS ARE SUPPLIED ON THE
        OUTPUT CARDS IN THE FORM OF A RANGE OF NAMES. THE UPPER BOUND IS
        DEFINED  ON  EACH  OUTPUT  CARD,  AND THE RANGE EXTENDS FROM THE
        UPPER BOUND OF THE PREVIOUS CARD TO THIS UPPER BOUND. AN  EBCDIC
        COLLATING SEQUENCE IS USED.
0       2.1.2 RESTRUCTURING
0            THE MAIN FUNCTION OF COPYCAT IS TO RESTRUCTURE A CATALOG SO
        AS  TO TAKE ADVANTAGE OF THE CATALOG MANAGEMENT I/O ROUTINES. TO
        DO THIS THREE PARAMETERS MAY BE SPECIFIED FOR EACH INDEX  LEVEL.
        THE  FIRST  IS  THE  NUMBER  OF BYTES TO LEAVE IN EACH BLOCK FOR
        EXPANSION.  BY  LEAVING  ENOUGH  ROOM,  THE  CATALOG  MANAGEMENT
        ROUTINES  WILL  BE ABLE TO ADD ENTRIES WITHOUT HAVING TO ADD NEW
        BLOCKS. EACH CVOL  POINTER  TAKES  TWENTY-TWO  (22)  BYTES,  AND
        SINGLE  VOLUME  DATASET  ENTRIES  TAKE  TWENTY-SIX  (26)  BYTES.
        SECOND, THE NUMBER OF DUMMY BLOCKS TO BE LEFT AFTER AN INDEX MAY
        BE SPECIFIED SO THE INDEX CAN EXPAND AND NEW LOWER LEVEL INDEXES
        CAN BE ADDED IN CLOSE PROXIMITY. THIRD,  THE  NUMBER  OF  BLOCKS
        THAT  MUST  BE  ON A TRACK BEFORE STARTING THE NEXT INDEX MAY BE
        GIVEN. SINCE INDEXES MAY REQUIRE MORE THEN  ONE  BLOCK,  AND  AN
        INDEX  CAN  BE  SEARCHED  IN  ONE  I/O OPERATION IF IT IS ON ONE
        TRACK, THIS NUMBER SHOULD BE SET LARGE ENOUGH SO MOST INDEXES AT
        A PARTICULAR LEVEL CAN FIT ON ONE TRACK.
0       2.1.3 MASTER AND SECONDARY CATALOGS
0            WHEN MORE THEN ONE  OUTPUT  CATALOG  IS  PRODUCED,  ONE  IS
        USUALLY  DEFINED  AS  THE  MASTER  CATALOG,  AND  THE  OTHERS AS
        SECONDARY CATALOGS. IN THE CASE OF ONLY ONE OUTPUT  CATALOG,  IT
        IS  ALWAYS A MASTER CATALOG. COPYCAT MUST BE RUN ONCE TO PRODUCE
        THE MASTER CATALOG IN MASTER MODE, AND IF  THERE  ARE  SECONDARY
        CATALOGS, ONCE IN SECONDARY MODE.
0       2.1.4 MASTER MODE
0            WHEN COPYCAT IS OPERATING IN MASTER MODE, ONLY  THE  MASTER
0    20
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-            CATALOG  IS  PRODUCED  BASED  ON THE OUTPUT MASTER CARD(S). CVOL
             POINTERS FOR INDEXES COVERED BY THE OUTPUT SECONDARY  CARDS,  IF
             ANY, ARE ALSO ADDED TO THE MASTER CATALOG.
0            2.1.5 SECONDARY MODE
0                 SECONDARY MODE IS USED TO PRODUCE THE  SECONDARY  CATALOGS.
             THE  CHOICE  OF  WHICH  INDEXES ARE PLACED ON WHICH CATALOGS ARE
             DEFINED ON THE OUTPUT CARDS.
0            2.1.6 MODEL GENERATION DATA GROUP DSCBS
0                 MODEL DSCBS FOR GENERATION DATA GROUPS  ARE  ALSO  HANDLED.
             SINCE THE MODEL DSCB MUST RESIDE ON THE VOLUME THAT CONTAINS THE
             GENERATION INDEX, COPYCAT WILL MOVE OR  COPY  THESE  DSCBS.  THE
             CHOICE  OF  WHETHER TO MOVE OR COPY THE DSCBS SHOULD BE BASED ON
             THE APPLICATION. WHEN A SINGLE CATALOG IS BEING REBUILT  ON  THE
             SAME PHYSICAL VOLUME, NOTHING NEED BE DONE, SINCE THE DSCBS WILL
             STILL BE ON THE VOLUME. WHEN A CATALOG  IS  BEING  COPIED  TO  A
             REPLACEMENT  VOLUME, SUCH AS A NEW RELEASE OF A SYSTEM, THEN THE
             DSCBS SHOULD BE COPIED. WHEN THE WHOLE CATALOG SYSTEM  IS  BEING
             REORGINIZED, THEN THE DSCBS SHOULD BE MOVED.
0            2.1.7 ADDITIONAL CVOL PROCESSING
0                 SINCE EVERY DIRECT ACCESS VOLUME CAN HAVE A CATALOG, OR ONE
             SYSTEM MAY HAVE ACCESS TO ANOTHER SYSTEMS CATALOG, IT MAY BECOME
             NECESSARY TO CHANGE MANY CVOL POINTERS  ON  ONE  SYSTEM  IF  THE
             OTHER SYSTEMS CATALOG IS REDISTRIBULED. THE CVOL CARDS HAVE BEEN
             PROVIDED TO ACCOMPLISH THIS.
0            2.1.8 ALIAS PROCESSING
0                 SPECIAL HANDLING OF ALIAS  ENTRIES  HAS  BEEN  INCLUDED  IN
             COPYCAT.  IN  A  MULTIPLE  CATALOG SYSTEM, AN ALIAS NAME AND ITS
             TRUE NAME SOMETIMES RESIDE IN DIFFERENT CATALOGS. CVOL  POINTERS
             WITH  THE  ALIAS  NAME ARE PLACED IN THE MASTER CATALOG DURING A
             MASTER OPERATION AND IN A SECONDARY CATALOG DURING  A  SECONDARY
             OPERATION, POINTING AT THE TRUE NAMES VOLUME. THE ALIAS ENTRY IS
             THEN PLACED IN THE TRUE NAMES CATALOG.
0            2.1.9 MULTIPLE INPUTS
0                 THIRTY-TWO (32) CATALOGS MAY BE DEFINED AS  INPUT.  COPYCAT
             HAS BEEN DESIGNED TO WORK ON A CATALOG SYSTEM WHERE A HIGH LEVEL
             INDEX NAME, OTHER THAN A CVOL POINTER, MAY ONLY  APPEAR  IN  ONE
             CATALOG.  WHEN  A  CONFLICT  IS  FOUND, THE ENTRY FROM THE FIRST
             DEFINED INPUT CATALOG IS USED. AN EXAMPLE OF THIS WOULD BE IN  A
             TWO  CPU  SYSTEM,  AND  BOTH SYSTEM RESIDENT VOLUME CATALOGS ARE
             DEFINED AS INPUT TO COPYCAT. IF BOTH CATALOGS HAVE  ENTRIES  FOR
             SYS1, THEN ONLY THE ENTRIES FROM THE FIRST DEFINED CATALOG WOULD
             BE USED.
0            2.2 CONTROL CARDS
0                                                                             21
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-            THE FORMAT FOR ALL CONTROL CARDS IS:
0         ÝNAME¨ OPERATION OPERANDS COMMENTS
0            THE NAME FIELD, IF PRESENT, MUST BEGIN IN COLUMN  ONE.  THE
        OPERATION  MUST  BE  SEPARATED  FROM THE NAME AND OPERANDS BY AT
        LEAST ONE BLANK, AND MAY START ANYWHERE AFTER  COLUMN  ONE.  THE
        OPERANDS MUST BE SEPARATED BY COMMAS WITH NO INTERVENING BLANKS.
        A NULL OPERAND MUST BE DELIMITED BY COMMAS UNLESS IT IS THE LAST
        OPERAND.  THE  COMMENTS  ARE  SEPARATED  FROM THE OPERANDS BY AT
        LEAST ONE BLANK, AND ANY CARD WITH AN ASTERISK '*' IN COLUMN ONE
        IS TREATED AS A COMMENT CARD.
0       2.2.1 CONTROL
0            THE  CONTROL  CARD  SPECIFIES  THE  MAIN  FUNCTIONS  TO  BE
        PERFORMED, AND MUST BE THE FIRST NON-COMMENT CARD.
0         ÝNAME¨ CONTROL »MASTER|SECONDARYº,»GDGMOVE|GDGCOPYº,
                  »KEEP|SPLIT|UNCATLGº
0            MASTER|SECONDARY - COPYCAT IS TO BE EXECUTED IN THE  MASTER
                       MODE  TO  PRODUCE  THE  MASTER CATALOG, OR IN THE
                       SECONDARY MODE TO PRODUCE THE SECONDARY CATALOGS.
0            GDGMOVE|GDGCOPY - GENERATION DATA GROUP MODEL DSCBS ARE  TO
                       BE  MOVED OR COPIED. IF THIS OPERAND IS NULL THEN
                       THEY ARE NOT PROCESSED.
0            KEEP|SPLIT|UNCATLG - THE FUNCTION TO BE PERFORMED ON SINGLE
                       NAME  DATASETS.  THEY  MAY  BE KEPT IN THE MASTER
                       CATALOG (KEEP),  THEY  MAY  BE  REDISTRIBUTED  TO
                       SECONDARY   CATALOGS  (SPLIT),  OR  THEY  MAY  BE
                       UNCATALOGED (UNCATLG).
0            WHEN  COPYCAT  IS  RUN  TWICE  FOR  A  MASTER  CATALOG  AND
        SECONDARY  CATALOGS,  THESE LAST TWO OPERANDS SHOULD BE THE SAME
        FOR BOTH RUNS. IF LOCAL MODIFICATIONS TO THE CATALOG  MANAGEMENT
        ROUTINES  HAVE  BEEN  ADDED SO A MASTER CATALOG IS NOT REQUIRED,
        COPYCAT NEED ONLY BE RUN ONCE IN SECONDARY MODE, AND  THE  THIRD
        CONTROL CARD PARAMETER MUST BE SPLIT.
0       2.2.2 INPUT
0            THE INPUT CARD DEFINES AN INPUT CATALOG  TO  BE  PROCESSED.
        THERE  MUST BE AT LEAST ONE AND AS MANY AS THIRTY-TWO (32) INPUT
        CARDS. THE INPUT DATASETS  DEFINED  BY  THESE  CARDS  ARE  NEVER
        CHANGED  BY THE PROGRAM. THEY MUST NOT BE THE SAME DATASETS USED
        FOR OUTPUT. THE INPUT CARD(S) MUST FOLLOW THE CONTROL CARD.
0         ÝNAME¨ INPUT DDNAME,VOLID
0            DDNAME - THE NAME OF A DD STATEMENT THAT DEFINES THIS INPUT
                       DATASET.
0    22
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-                 VOLID - THE VOLUME NAME ON WHICH THIS CATALOG RESIDES  WHEN
                            USED  BY  THE SYSTEM. THIS VOLUME NEED NOT BE THE
                            SAME AS THAT DEFINED BY DDNAME.
0            2.2.3 OUTPUT
0                 THE  OUTPUT  CARDS  DEFINE  THE  OUTPUT  DATASETS  AND  THE
             REDISTRIBUTION TABLE. THESE CARDS MUST FOLLOW THE INPUT CARDS.
0              ÝNAME¨ OUTPUT »MASTER|SECONDARYº,DDNAME,VOLIDÝ,MAXNAME¨
0                 MASTER - THIS CARD DEFINES THE MASTER CATALOG, OR THE  ONLY
                            CATALOG IF ONLY ONE IS BEING PRODUCED.
0                 SECONDARY - THIS CARD DEFINES A SECONDARY CATALOG.
0                 DDNAME - THE NAME OF A DD STATEMENT THAT DEFINES THE OUTPUT
                            DATASET.
0                 VOLID - THE VOLUME NAME ON WHICH THIS CATALOG WILL BE  USED
                            BY  THE SYSTEM. THE CATALOG MAY BE PLACED ON SOME
                            OTHER   VOLUME   TEMPORARILY   FOR   BACKUP    OR
                            CONVENIENCE.
0                 MAXNAME - THE HIGHEST NAME IN EBCDIC COLLATING SEQUENCE  TO
                            WHICH THIS OUTPUT CARD APPLIES. THIS MAXNAME MUST
                            BE GREATER  THEN  THE  MAXNAME  ON  THE  PREVIOUS
                            OUTPUT  CARD, AND ON THE LAST OUTPUT CARD IT MUST
                            BE NULL.
0                 EACH OUTPUT CARD DEFINES A RANGE OF INDEX NAMES THAT ARE TO
             BE  PLACED  IN ITS CATALOG. THIS RANGE EXTENDS FROM THE PREVIOUS
             MAXNAME UP TO AND INCLUDING THE CURRENT MAXNAME. THE SAME DDNAME
             AND  VOLID  PAIR  MAY  APPEAR ON MORE THEN ONE CARD. THIS ALLOWS
             MORE THEN ONE RANGE OF INDEX NAMES TO BE PLACED ON ONE  CATALOG.
             ALL MASTER CARDS MUST HAVE THE SAME DDNAME AND VOLID SINCE THERE
             CAN ONLY BE ONE MASTER CATALOG. THE LAST OUTPUT CARD MUST HAVE A
             NULL MAXNAME.
0            2.2.4 CVOL
0                 THE CVOL CARD MAY BE USED TO ALTER CONTROL  VOLUME  POINTER
             ENTRIES THAT POINT TO CATALOGS OUTSIDE THE CURRENT SYSTEM.
0              ÝNAME¨ CVOL ÝVOLID¨,NEWVOL,ÝMAXNAME¨,DDNAME
0                 VOLID - THE VOLUME NAME THAT IS BEING CHANGED.
0                 NEWVOL - THE NEW VOLUME NAME FOR THE CVOL ENTRY.
0                 MAXNAME - THE HIGHEST NAME IN  THE  RANGE  OF  INDEX  NAMES
                            COVERED  BY THIS CVOL CARD. ALL THE CVOL POINTERS
                            THAT POINT AT THIS VOLUME, WHOSE NAME IS  GREATER
                            THAN  THE PREVIOUS MAXNAME AND LESS THEN OR EQUAL
0                                                                             23
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-                      TO THIS MAXNAME, WILL  BE  CHANGED  TO  POINT  AT
                       NEWVOL.  THE  LAST CVOL CARD IN A SET MUST HAVE A
                       NULL VALUE FOR MAXNAME, WHICH IS THE  HIGHEST  IN
                       THE COLLATING SEQUENCE.
0            DDNAME - THE NAME OF A DD STATEMENT USED  FOR  DEVICE  TYPE
                       INFORMATION. THIS DD STATEMENT MUST DEFINE A UNIT
                       OF THE SAME TYPE AS NEWVOL.
0            MANY SETS OF CVOL CARDS MAY BE DEFINED. EACH SET MUST  HAVE
        VOLID  SPECIFIED  ON THE FIRST CARD, AND MAXNAME MUST BE NULL ON
        THE LAST. CVOL CARDS MUST FOLLOW THE OUTPUT CARDS.
0       2.2.5 LEVEL
0            THE  LEVEL  CARD  IS  USED  TO  SPECIFY  THE  RESTRUCTURING
        INFORMATION.  THE GREATEST PERFORMANCE IMPROVEMENTS DERIVED FROM
        RUNNING COPYCAT DEPEND ON PROPERLY CHOOSING THESE PARAMETERS. UP
        TO TWENTY-TWO LEVEL CARDS MAY BE DEFINED.
0         ÝNAME¨ LEVEL LEVEL,BYTES,DUMMIES,BLOCKS
0            LEVEL - THE INDEX LEVEL BETWEEN ONE AND TWENTY-TWO TO WHICH
                       THIS CARD APPLIES.
0            BTYES - THE NUMBER OF BYTES TO  LEAVE  IN  EACH  BLOCK  FOR
                       FUTURE EXPANSION, BETWEEN 0 AND 200.
0            DUMMIES - THE NUMBER OF DUMMY BLOCKS TO  LEAVE  AFTER  THIS
                       INDEX FOR FUTURE EXPANSION.
0            BLOCKS - THE NUMBER OF BLOCKS THAT MUST BE ON  THE  CURRENT
                       OUTPUT TRACK BEFORE STARTING THIS INDEX.
0            THE LEVEL CARDS MUST FOLLOW  THE  CVOL  CARDS,  IF  ANY.  A
        DEFAULT VALUE OF ZERO IS APPLIED FOR ANY NULL OR MISSING VALUES.
0       2.3 JOB CONTROL STATEMENTS
0            A JOB CARD AND AN EXEC CARD ARE  REQUIRED.  A  SYSPRINT  DD
        STATEMENT  IS REQUIRED FOR A LISTING OF THE INPUT, INFORMATIONAL
        MESSAGES AND ERROR MESSAGES. THE DCB  PARAMETERS  ARE  FIXED  AT
        RECFM=FBA,LRECL=605,BLKSIZE=121. THE CONTROL CARDS ARE READ FROM
        THE   SYSIN   FILE   WHICH   HAS   FIXED   DCB   PARAMETERS   OF
        RECFM=FB,LRECL=80,BLKSIZE=3200.  ADDITIONAL  DD  STATEMENTS  ARE
        REQUIRED AS SPECIFIED BY THE INPUT, OUTPUT AND CVOL  CARDS.  THE
        DATASETS  DEFINED  BY  THESE  DD  STATEMENTS  NEED  NOT BE NAMED
        SYSCTLG, BUT THEY MUST BE  ON  A  DIRECT  ACCESS  VOLUME.  IF  A
        CATALOG  IS  CREATED  ON A VOLUME OTHER THEN THE ONE ON WHICH IT
        WILL BE USED BY THE SYSTEM, THE TEMPORARY VOLUME  SHOULD  BE  OF
        THE SAME DEVICE TYPE AS THE FINAL VOLUME.
-       2.4 MESSAGES AND CODES
0    24
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-                 AFTER A SUCCESSFUL RUN OF COPYCAT CERTAIN STATISTICS  ABOUT
             EACH  OUTPUT  DATASET  ARE  LISTED. THE LAST TTR PLUS ONE IN THE
             DATASET AND THE TTR OF THE LAST USED BLOCK PLUS ONE  ARE  LISTED
             IN  HEXADECIMAL.  THE  NUMBER OF CONTROL VOLUME POINTER ENTRIES,
             DUMMY BLOCKS,  BLOCKS  AT  LEVELS  ONE  AND  TWO,  AND  DATASETS
             CATALOGED ARE LISTED IN DECIMAL.
0                 THE FOLLOWING IS A LIST OF ERROR  MESSAGES  AND  COMPLETION
             CODES. THE MAXIMUM COMPLETION CODE FOUND DURING EXECUTION OF THE
             PROGRAM IS RETURNED TO OS.
0            ERR01 ERROR FOUND IN PARAMETER AT '$'
0                 AN ERROR WAS FOUND IN A PARAMETER OR A  REQUIRED  PARAMETER
                  WAS MISSING. THE PREVIOUS LINE WILL CONTAIN A '$' UNDER THE
                  ERROR.
                  (COMPLETION CODE = 8)
0            ERR02 ERROR PROCESSING DDNAME='DDNAME'
0                 A PROBLEM WAS FOUND WITH A DD STATEMENT. EITHER IT WAS  NOT
                  FOUND,  COULD  NOT BE OPENED, OR WAS NOT ON A DIRECT ACCESS
                  VOLUME.
                  (COMPLETION CODE = 8)
0            ERR03 UNEXPECTED END OF FILE ON SYSIN
0                 MORE CONTROL CARDS WERE EXPECTED, BUT WERE NOT FOUND.
                  (COMPLETION CODE = 8)
0            ERR04 NAME=TRUENAME NOT FOUND FOR ALIAS=ALIASNAME
0                 WHILE PROCESSING AN ALIAS ENTRY,  THE  TRUE  NAME  FOR  THE
                  ALIAS COULD NOT BE FOUND.
                  (COMPLETION CODE = 12)
0            ERR05 ALIAS COUNT ERROR FOUND FOR NAME=TRUENAME
0                 THE ALIAS COUNT FIELD IN THE NAMED INDEX IS  NOT  EQUAL  TO
                  THE NUMBER OF ALIASES FOUND FOR THE NAME.
                  (COMPLETION CODE = 12)
0            ERR06 TOO MANY INPUT DATASETS
0                 MORE THEN 32 INPUT CARDS WERE FOUND.
                  (COMPLETION CODE = 8)
0            ERR07 INDEX=INDEX FOUND ON VOLS=(X,Y) THE ENTRY  ON  X  WILL  BE
             USED
0                 THE SAME HIGH  LEVEL  INDEX  WAS  FOUND  ON  TWO  DIFFERENT
                  CATALOGS. THE ONE ON THE X VOLUME WILL BE USED.
                  (COMPLETION CODE = 4)
-                                                                             25
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-       ERR08 NO INPUT CARDS FOUND
0            NO INPUT CARDS WERE FOUND,  OR  THEY  DID  NOT  FOLLOW  THE
             CONTROL CARD.
             (COMPLETION CODE = 8)
0       ERR09 FUNCTION FAILED  WITH  (CODE)  ON  VOLUME  FOR  GDG  MODEL
        DSCB=NAME
0            WHILE MOVING OR COPYING MODEL DSCBS, AN OBTAIN, ALLOCATE OR
             SCRATCH  OPERATION  FAILED  WITH  THE RETURN CODE OF 'CODE'
             (DECIMAL).
             (COMPLETION CODE = 4)
0       ERR10 MODEL DSCB FOR GDG DOES NOT HAVE ZERO EXTENTS DSN=NAME
0            THE NAMED MODEL DSCB IS NOT COPIED BECAUSE IT DOES NOT HAVE
             ZERO EXTENTS.
             (COMPLETION CODE = 4)
0       ERR11 MODEL DSCB FOR GDG EXISTS ON OUTPUT VOLUME WITH  DIFFERENT
        ATTRIBUTES FOR DSN=NAME
0            WHILE MOVING OR COPYING MODEL DSCBS A DSCB  WITH  THE  SAME
             NAME  WAS  FOUND  ON  THE OUTPUT VOLUME, BUT THE ATTRIBUTES
             DEFINED BY THE TWELVE  BYTES  IN  THE  DSCB  AT  OFFSET  82
             (DECIMAL)  ARE  NOT  THE  SAME.  THE  DSCB  IS NOT MOVED OR
             COPIED.
             (COMPLETION CODE = 4)
0       ERR12 ABEND - NNN - OCCURED. SEE SYSMSG. CURRENT OR LAST NAME IS
        NAME
0            A D37, B37 OR 213 ABEND OCCURED. THE LAST  INDEX  STRUCTURE
             BEING PROCESSED IS GIVEN.
             (COMPLETION CODE = 16)
0       ERR13 I/O ERROR - SYNAD MESSAGE
        ERR13 I/O ERROR CURRENT OR LAST NAME IS NAME
0            AN I/O ERROR OCCURED. THE STANDARD MESSAGE  PRODUCED  BY  A
             SYNAD  MACRO  IS GIVEN, ALONG WITH THE LAST INDEX STRUCTURE
             PROCESSED.
             (COMPLETION CODE = 16)
0       ERR14 NO OUTPUT MASTER CARD WAS FOUND
0            WHEN IN MASTER MODE, AT LEAST ONE OUTPUT MASTER  CARD  MUST
             BE DEFINED.
             (COMPLETION CODE = 8)
0       THE COMPLETION CODES ARE AS FOLLOWS:
0           0 - NO ERRORS.
0    26
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-                4 - ALL CATALOGS ARE USEABLE, BUT DUPLICATE INDEXES HAVE
                     BEEN  LEFT  OUT  OR  MODEL  DSCBS HAVE NOT BEEN MOVED OR
                     COPIED.
0                8 - ERRORS IN PROCESSING CONTROL CARDS. THE OUTPUT DATASETS
                     HAVE NOT BEEN CHANGED.
0         12 - ALL CATALOGS ARE USEABLE, BUT PROBLEMS EXIST WITH ALIAS
                     ENTRIES.
0         16 - OUTPUT CATALOGS HAVE BEEN PARTLY BUILT, AND ARE NOT
                     USEABLE.
0            2.5 EXAMPLES
0            2.5.1 COPY A CATALOG FROM ONE VOLUME TO ANOTHER
0                 THIS FIRST EXAMPLE  ILLUSTRATES  THE  MOST  COMMON  USE  OF
             COPYCAT.  A  CATALOG  ON  ONE  VOLUME IS TO BE COPIED TO ANOTHER
             VOLUME, SUCH AS WHEN A NEW SYSTEM IS BEING INSTALLED.  THIS  JOB
             WOULD  BE RUN UNDER THE OLD SYSTEM TO COPY THE CATALOG ON SYSRES
             TO THE NEW SYSTEM PACK, NEWRES, WHICH WILL  LATER  BE  RELABELED
             SYSRES.
0            //EX1    JOB   XXX
             //       EXEC  PGM=COPYCAT,REGION=60K
             //SYSPRINT DD  SYSOUT=A
             //OLDRES DD    DSN=SYSCTLG,VOL=SER=SYSRES,
             //             DISP=OLD,UNIT=DISK
             //NEWRES DD    DSN=SYSCTLG,VOL=SER=NEWRES,
             //             DISP=OLD,UNIT=DISK
             //SYSIN  DD    *
             *              EXAMPLE ONE
                      CONTROL MASTER,GDGCOPY,KEEP
                      INPUT OLDRES,SYSRES
                      OUTPUT MASTER,NEWRES,SYSRES
                      LEVEL 1,26,100
                      LEVEL 2,52,5,5
0                 IN THIS EXAMPLE MODEL DSCBS FOR GENERATION DATA GROUPS  ARE
             COPIED. 100 DUMMY BLOCKS ARE LEFT AFTER THE HIGHEST LEVEL INDEX,
             WITH 26 BYTES LEFT IN EACH BLOCK FOR FUTURE EXPANSION. 52  BYTES
             ARE  LEFT  IN  EACH  SECOND LEVEL INDEX BLOCK, 5 BLOCKS ARE LEFT
             AFTER EACH INDEX, AND A SECOND LEVEL INDEX WILL NOT  BE  STARTED
             ON A TRACK WITHIN 5 BLOCKS OF THE END.
0            2.5.2 BACK UP A CATALOG
0                 THIS EXAMPLE DEMONSTRATES THE USE OF COPYCAT FOR BACKING UP
             A  CATALOG.  NOTE  THAT  THE  BACKUP DATASET DOES NOT NEED TO BE
             CALLED SYSCTLG, THUS MANY CATALOGS COULD BE  BACKED  UP  ON  THE
             SAME VOLUME.
0            //EX2    JOB   XXX,REGION=60K
0                                                                             27
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-       //       EXEC  PGM=COPYCAT
        //SYSPRINT DD  SYSOUT=A
        //CATALOG DD   DSNAME=SYSCTLG,VOL=SER=PACK01,
        //             UNIT=DISK,DISP=OLD
        //BACKUP DD    DSNAME=CAT.PACK01,VOL=SER=BACKUP,
        //             UNIT=DISK,SPACE=(CYL,(3,2)),DISP=(NEW,KEEP)
        //SYSIN  DD    *
        *              EXAMPLE 2
                 CONTROL MASTER,GDGCOPY,KEEP
                 INPUT CATALOG,PACK01
                 OUTPUT MASTER,BACKUP,PACK01
        /*
0       2.5.3 REDISTRIBUTE A CATALOG
0            IN THIS EXAMPLE A SINGLE CATALOG IS TO  BE  SPLIT  UP  INTO
        FOUR  SEPARATE  CATALOGS.  THE FIRST STEP PRODUCES THE SECONDARY
        CATALOGS, AND THE SECOND STEP PRODUCES THE MASTER  CATALOG.  THE
        LAST  STEP IS EXECUTED ONLY IF THE FIRST TWO STEPS RAN PROPERLY,
        AND IT RENAMES THE DATASET ON RES075.
0       //EX3    JOB   XXX
        //STEP1  EXEC  PGM=COPYCAT,REGION=60K
        //SYSPRINT DD  SYSOUT=A
        //INPUT  DD    VOL=SER=RES075,UNIT=DISK,DISP=OLD,
        //             DSNAME=SYSCTLG
        //OLDRES DD    VOL=SER=RES075,UNIT=DISK,
        //             DSNAME=NEWCAT,DISP=(NEW,KEEP),
        //             SPACE=(CYL,(5,2))
        //P87    DD    UNIT=DISK,VOL=SER=PACK87,
        //             DSNAME=SYSCTLG,DISP=(NEW,KEEP),
        //             SPACE=(CYL,(5,2))
        //P88    DD    UNIT=DISK,VOL=SER=PACK88,
        //             DSNAME=SYSCTLG,DISP=(NEW,KEEP),
        //             SPACE=(CYL,(5,2))
        //P89    DD    UNIT=DISK,VOL=SER=PACK89,
        //             DSNAME=SYSCTLG,DISP=(NEW,KEEP),
        //             SPACE=(CYL,(5,2))
        //SYSIN  DD    *
        *              EXAMPLE 3
        *              PRODUCE THE SECONDARY CATALOGS
                 CONTROL SECONDARY,GDGMOVE,KEEP
                 INPUT INPUT,RES075
                 OUTPUT SECONDARY,P87,PACK87,B9999999
                 OUTPUT SECONDARY,P88,PACK88,H9999999
                 OUTPUT MASTER,OLDRES,RES075,K9999999
                 OUTPUT SECONDARY,P89,PACK89,R9999999
                 OUTPUT MASTER,OLDRES,RES075,S9999999
                 OUTPUT SECONDARY,P88,PACK88
                 LEVEL 1,26,100
                 LEVEL 2,54,5,5
                 LEVEL 3,,2,2
        /*
        //STEP2  EXEC  PGM=COPYCAT,REGION=60K
0    28
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYCAT
-            //SYSPRINT DD  SYSOUT=A
             //INPUT  DD    VOL=SER=RES075,UNIT=DISK,DISP=OLD,
                            DSNAME=SYSCTLG
             //OLDRES DD    VOL=SER=RES075,UNIT=DISK,
                            DSNAME=NEWCAT,DISP=OLD
             //P87    DD    UNIT=DISK,VOL=SER=PACK87,
                            DSNAME=SYSCTLG,DISP=OLD
             //P88    DD    UNIT=DISK,VOL=SER=PACK88,
                            DSNAME=SYSCTLG,DISP=OLD
             //P89    DD    UNIT=DISK,VOL=SER=PACK89,
                            DSNAME=SYSCTLG,DISP=OLD
             //SYSIN  DD    *
             *              EXAMPLE 3
             *              PRODUCE THE MASTER CATALOG
                      CONTROL MASTER,GDGMOVE,KEEP
                      INPUT INPUT,RES075
                      OUTPUT SECONDARY,P87,PACK87,B9999999
                      OUTPUT SECONDARY,P88,PACK88,H9999999
                      OUTPUT MASTER,OLDRES,RES075,K9999999
                      OUTPUT SECONDARY,P89,PACK89,R9999999
                      OUTPUT MASTER,OLDRES,RES075,S9999999
                      OUTPUT SECONDARY,P88,PACK88
                      LEVEL 1,26,50
                      LEVEL 2,54,10,10
             /*
             //STEP3  EXEC  PGM=IEHPROGM,COND=(5,LT)
             //SYSPRINT DD  SYSOUT=A
             //OLDRES DD    UNIT=DISK,VOL=SER=RES075,DISP=OLD
             //SYSIN  DD    *
                      RENAME VOL=2314=RES075,DSNAME=SYSCTLG,
                            NEWNAME=OLDCATLG
                      RENAME VOL=2314=RES075,DSNAME=NEWCAT,
                            NEWNAME=SYSCTLG
             /*
0                 ALL INDEXES UP TO C WILL BE ON PACK87, INDEXES FROM C TO  I
             AND FROM T UPWARDS WILL BE ON PACK88, AND FROM L TO S WILL BE ON
             PACK89. CVOL POINTERS FOR THESE INDEXES WILL BE PLACED ON RES075
             ALONG  WITH  ALL  THE  OTHER INDEXES. STEP 3 WILL BE EXECUTED IF
             THERE ARE NO SEVERE ERRORS.
0            3.0 PROGRAM LOGIC
0                 COPYCAT IS WRITTEN ENTIRELY IN ASSEMBLER LANGUAGE. QSAM  IS
             USED FOR SYSPRINT AND SYSIN, WHILE BSAM IN THE LOAD MODE IS USED
             FOR THE OUTPUT DATASETS. BDAM IS  USED  FOR  THE  INPUT  AND  TO
             ACCESS PREVIOUSLY WRITTEN OUTPUT BLOCKS.
0                 THE HEART OF THE PROGRAM CONSISTS OF  A  RECURSIVE  ROUTINE
             CALLED  RR, WHICH IS CALLED FOR EACH LEVEL. THE TTR OF THE FIRST
             BLOCK OF THE LEVEL IS PASSED TO RR. AFTER AN  INDEX  IS  WRITTEN
             WITH  THE OLD TTRS, IT IS REREAD AND FOR EACH ENTRY WITH A LOWER
             LEVEL, RR IS RECURSIVELY CALLED. UPON RETURN,  THE  NEW  TTR  IS
             PLACED IN THE ENTRY AND THE BLOCK IS REWRITTEN.
0                                                                             29
1                   Technical Guide to System Modifications
     COPYCAT                                               Utility Programs
-            WHEN PROCESSING THE HIGHEST  LEVEL  INDEX,  THE  ADDITIONAL
        INFORMATION  OF  WHICH  INPUT  DATASET THIS ENTRY CAME FROM MUST
        ALSO BE SAVED. THIS IS DONE BY CHANGING THE COUNT FIELD  OF  THE
        INDEX.  ONLY THREE TYPES OF ENTRIES NEED THIS INFORMATION SAVED:
        THE INDEX POINTER ENTRY, THE VOLUME CONTROL BLOCK POINTER ENTRY,
        AND THE GENERATION INDEX POINTER ENTRY. BY MAKING THE LAST THREE
        BITS OF THE VOLUME CONTROL BLOCK POINTER ENTRY '110',  ONLY  THE
        ENTRIES  WITH  A LAST BIT OF '0' CONTAIN ADDITIONAL INFORMATION.
        TWO BITS ARE USED TO DISTINGUISH  BETWEEN  THE  THREE  TYPES  OF
        ENTRIES,  AND  THE  OTHER FIVE BITS IN THE LENGTH FIELD ARE THEN
        USED TO LOCATE THE PROPER INPUT DATASET.
0            WHEN PROCESSING  MODEL  DSCBS,  THE  OBTAIN,  ALLOCATE  AND
        SCRATCH   SVCS   ARE   USED.   BEFORE   RUNNING  COPYCAT,  LOCAL
        RESTRICTIONS ON ALLOCATING AND  SCRATCHING  DATASETS  SHOULD  BE
        CONSIDERED.  THESE  SVCS  ARE  ONLY  USED  IN THE ROUTINE CALLED
        GDSPROC.
0            TWO OTHER IMPORTANT ROUTINES ARE INR AND  PUTC.  INR  FINDS
        THE  NEXT NAME IN THE HIGHEST LEVEL INDEXES TO BE PROCESSED FROM
        AMONG ALL THE INPUTS. IT IS CALLED BY  RR  AND  IT  HANDLES  THE
        PROBLEM  OF DUPLICATE INDEX NAMES. PUTC IS ALSO CALLED BY RR AND
        IT TAKES AN INDEX AND ADDS IT TO THE NEXT BLOCK FOR OUTPUT. PUTC
        PROCESSES THE PARAMETERS OF THE LEVEL CARDS.
-
-
-
-
-
-
-
-
-
-
0    30
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYJES
-         2.2.14   HASP Print/Punch ....................................COPYJES
+         2.2.14   HASP Print/Punch                                     COPYJES
+                  ____ ___________                                     _______
0         This program copies a card file from SYSIN to SYSPRINT, and forces the
          output unblocked. The program was used with the HASP batched execution
          facility  to provide  quick card-to-print  and card-to-punch  services
          (using job classes L and K, respectively).
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                             31
1                   Technical Guide to System Modifications
     COPYTAPE                                              Utility Programs
-    2.2.15   Tape Copy ...........................................COPYTAPE
+    2.2.15   Tape Copy                                            COPYTAPE
+             ____ ____                                            ________
0    COPYTAPE  copies  single tape  files,   with  support for  64K  blocks
     produced by FDR, and skipping of bad blocks.
0    This program is based on one written by Dick Oxley,  as distributed by
     Share,  Inc.   This version written from scratch for VS.  EXCP is used
     with BSAM OPEN/CLOSE/EOV because it makes a few things easier (reading
     64K blocks  on FDR  tapes).  EXCP is  not used  to due  differences in
     OPEN/CLOSE processing  (RDJFCB with OPENJ will  not quite do  the same
     thing).
0    Input: Tape file (normal sequential specification) on SYSUT1
     Output:  SYSUT2.   DCB attributes copied  from input unless explicitly
     specified.
-
-
-
-
-
-
-
-
-
-
-
-
-
0    32
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYVOL
-         2.2.16   DASD Copy ...........................................COPYVOL
+         2.2.16   DASD Copy                                            COPYVOL
+                  ____ ____                                            _______
0         Program COPYVOL is from Bell Tel Labs/Karl Barnhardt (SQUISH utility).
          Modified by G.  Postpischil for RPS, 3350 support, extent checking and
          compression.   Other changes suggested by S.  Metz and various members
          of Share, Inc.
0         Further modified by Jacob Unger,  Technion,  Haifa,  Israel:   IEBCOPY
          interface added;  SVS supported;   deleted IGG019WA appendage.   Again
          modified by G. Postpischil.   PARM field processing extended; DSN/mask
          processing added..   Extent  compression option put back  in following
          IEBCOPY.  Support for multiple format 5 DSCBs completed.
0         In February 1981, the program was rewritten and restructured (by G.P.)
          to add  VSAM and MVS support,   and to drop MFT/MVT  support.   Rename
          facility was extended,  up to eight input volumes (to be merged to one
          output volume) are permitted, and error message handling was improved.
0         Additions:  VTOC= SYSIN card support added
0         Entry CLEARVOL added - clobbers VTOC (re-initializes)
-         DESCRIPTION
0         THE COPYVOL (SQUISH) UTILITY COPIES DIRECT ACCESS VOLUMES.  THE SOURCE
          AND TARGET DISKS MUST BE COMPATIBLE TYPES.
0         ENTRY POINT CLEARVOL CLEARS THE VTOC (FASTER THAN IEHPROGM).
           IT REQUIRES AN OUTPUT DD CARD (SYSUT2/OUTDISK/DISKOUT).
           THE VTOC=/EXTENT SYSIN CARD IS MEANINGFUL. ALL OTHER OPTIONS ARE
             IGNORED.
           DEFAULT  PROCESSING :    VSAM DATASETS  -  DSCB COPIED  TO SAME  VTOC
          LOCATION (WHEN FREE)
           DATA COPIED TO SAME VOLUME LOCATION (ABSTRK)
           ISAM/TCAM -     DATA COPIED TO SAME VOLUME LOCATION
           SAM (PO & PS) - UNUSED EXTENTS ARE RELEASED AFTER COPY
                           CONTIGUOUS EXTENTS ARE MERGED
           OTHER -         COPIED TO AVAILABLE SPACE RESTRICTIONS :
0          SPLIT CYLINDER/SUBALLOCATION CONVERTED TO SEQUENTIAL DATASETS.
           END-FILE RECORDS WITH KEYS ARE COPIED WITHOUT KEYS.
           ALTERNATE TRACK ASSIGNMENTS ON THE OUTPUT VOLUME ARE NOT TESTED;
             THEY MAY BE HONORED FOR DATA TRACKS. FOR ALTERNATE TRACKS IN
             THE OUTPUT VTOC, PERMANENT I/O ERRORS ARE POSSIBLE.
0         MAJOR OPTIONS :
0          UNUSED TRACKS OF PS DATASETS MAY BE RELEASED (FREE)
           IEBCOPY MAY BE USED TO COMPRESS PO DATASETS (COMP), OR
           IEBCOPY MAY BE USED FOR ALTERED PO DATASETS (CHGD).
0          THE CATALOG AND PASSWORD DATASETS ARE COPIED NORMALLY FOLLOWING THE
           COPIES OF ISAM AND OTHER UNMOVABLE DATASETS.  IF THE CATALOG IS TO
0                                                                             33
1                   Technical Guide to System Modifications
     COPYVOL                                               Utility Programs
-     BE PLACED IMMEDIATELY FOLLOWING THE VTOC, A CODE CHANGE IS REQUIRED-
      SEE LABEL SPCLOK1 AND EXPAND THE COMMENTED CODE.
      THE VOLUME MUST BE ANALYZED/FORMATTED AT LEAST ONCE PRIOR TO USE;
      THE VTOC CONTENTS IS IRRELEVANT. THE VTOC WILL BE OVERWRITTEN IN
      ITS ENTIRETY BY COPYVOL.
0     COPYVOL PERFORMS NO ERROR RECOVERY AT ALL. WHEN AN ERROR OCCURS,
       DIAGNOSTIC INFORMATION IS PRINTED, AND THE PROGRAM ABENDED.
      RUNNING TIME FOR THIS PROGRAM FOR A 3330-11 IS ABOUT 25 MINUTES
       UNDER SVS ON A 158 (4 MEG, NO PAGING).  THE COMP/CHGD OPTIONS
       WILL INCREASE THIS TIME DEPENDING ON THE AMOUNT OF PDS DATA COPIED.
      WHEN IEBCOPY FAILS FOR ANY REASON, THE DATASET IS COPIED NORMALLY.
      THE PROGRAM SHOULD NOT BE USED TO COPY A DISK CONTAINING SYSTEM
       DATASETS THAT WERE CAREFULLY ALLOCATED TO OPTIMIZE DISK PERFORMANCE
       UNLESS THESE DATASETS ARE FLAGGED NOT MOVABLE (EITHER VIA DSORG,
       BY SPECIFICATION OF PARM=ASIS OR PARM=SYSU, OR BY INCLUDING A SYSIN
       OPTION 'U' CARD FOR THE APPROPRIATE DATASETS).
      WHEN USING THE COMPRESS FUNCTION, AN OPEN IS PERFORMED 4 TIMES FOR
       EACH LIBRARY COPIED BY IEBCOPY. IF THE DATASET IS PASSWORD PROTECTED
       THE OPERATOR MAY HAVE TO ENTER THE PASSWORD OF THE PROTECTED
       DATASET FOUR TIMES. IN THIS VERSION THE JSCBPASS BIT IS SET IN THE
       JSCB (AND LOCALLY IN TCBUSER).
      THESE TWO BITS WILL NOT PREVENT THE PASSWORD PROMPTING UNLESS THE
       CORRECT MODIFICATION IS MADE TO BYPASS PASSWORD PROTECTION FOR THIS
       PROGRAM (JSCBPASS IS ORIGINALLY EFFECTIVE ONLY FOR TSO TASKS).
        RUN A SUPERZAP DUMP FOR IFG0195T. AT OFFSET 26 HEX (MVT/SVS) LOOK
        FOR TM TCBTSFLG-TCB(15),TCBTSTSK
            BZ *+16             *** CHANGE TO NOP ***
            L  15,TCBJSCB-TCB(15)
            TM JSCBSWT1-IEZJSCB(15),JSCBPASS
       THE USERTCB BIT SETTING HAS BEEN SKIPPED VIA AIF, DEPENDING ON THE
       INSTALLATION NAME IN &LOCAL.
0    REQUIREMENTS
0     THE PROGRAM USES THE 370 INSTRUCTION SET AND BYTE ALIGNMENT FEATURE.
      TO RUN UNDER VS, THE MODULE MUST BE APF AUTHORIZED AND MUST RESIDE
       IN AN AUTHORIZED LIBRARY.
0    STORAGE:
0     FOR NORMAL COPY, WITH 'NUMBUFFS' 5 OR LESS, 128K SUFFICE FOR MOST
       INPUT VOLUMES. SPACE FOR THE FORMAT 5 TABLE, AND THE INPUT DSCBS
       IS ACQUIRED DYNAMICALLY; HENCE THE REGION MAY NEED TO BE INCREASED.
       196K IS SUFFICIENT FOR TYPICAL RUNS. THIS SIZE WILL NOT SUFFICE FOR
       3380 PACKS (NOT TESTED YET).
      WHEN THE COMPRESS OPTION IS SPECIFIED, THE REGION SIZE MUST BE LARGE
       ENOUGH TO LET IEBCOPY WORK EFFICIENTLY. A REGION SIZE OF 512K IS
       RECOMMENDED; THIS SUFFICES FOR ALL EXCEPT VERY LARGE DATASETS
        (E.G. THE SMP DATASET SYS1.CDS AND SIMILAR KLUNKERS).
0     DDNAMES:
       SYSUT1 - THE INPUT VOLUME, SPECIFIES UNIT AND VOLSER. DISP=OLD
       SYSUT2 - THE OUTPUT VOLUME, SPECIFIES UNIT AND VOLSER. DISP=OLD
0    34
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYVOL
-                  THIS VOLUME MUST BE MOUNTED PRIVATE, OR MUST HAVE PRIVATE
                   ON THE DD CARD. PERM.RESIDENT ATTRIBUTE CAUSES ERROR FOR
                   MOUNTABLE DRIVES, BUT IS PERMITTED FOR 3350, 3375 AND 3380.
0           FOR USERS WHO DISLIKE SYSUT DD NAMES, THERE ARE ALTERNATE PAIRS:
                   DISKIN/DISKOUT
                   INDISK/OUTDISK
                   DISKIN1/DISKOUT
                   INDISK1/OUTDISK
              WHEN ONE OF THESE PAIRS IS SPECIFIED, UP TO SEVEN ADDITIONAL
                   INPUT VOLUMES MAY BE SPECIFIED (USING THE SAME PREFIX)
                   AS DISKIN2-DISKIN8 OR INDISK2-INDISK8.
0           COMPIN - IEBCOPY SYSIN - MUST BE DD DUMMY
            COMPOUT - IEBCOPY SYSPRINT FILE. SHOULD BE DD DUMMY.
            SYSUT3/4 - MAY BE USED FOR IEBCOPY WORK FILES WHEN THE SUPPLIED
                       STORAGE IS NOT ENOUGH.
            SYSUDUMP - OPTIONAL, RECOMMENDED TO ANALYZE I/O ERRORS.
            SYSPRINT - VBA FORMAT PRINT FILE; REQUIRED - MUST NOT BE DUMMY
            SYSIN    - OPTIONAL INPUT SPECIFICATIONS, ONE DSN PER CARD
           PARM OPTIONS (DEFAULT  - COPY,LIST,RLSE) :
            NONE OR MORE VALUES, OPTIONALLY SEPARATED BY COMMAS :
0          COPY - (DEFAULT) NORMAL COPYVOL PROCESSING (NO IEBCOPY)
           COMP - USE IEBCOPY TO COMPRESS PARTITIONED DATASETS.
                    NOTE THAT LIBRARIES WITH DSORG=POU ARE NOT
                    PROCESSED BY IEBCOPY, BUT ARE COPIED AS IS.
           CHGD - USE IEBCOPY ONLY FOR PDSS WITH THE DS1DSCHA BIT IN    79325
                DS1DSIND ON (MVS SU/SVS LOCAL MOD - MEMBER OPENDATE)    79325
                IF USED, AND LOCAL=CCSI, DS1DSCHA IS TURNED OFF IN ALL
                  DATASETS THAT ARE COPIED.
           CONV - (CCSI ONLY); CONVERT AMS/RAND/OSI WYLBUR LINE NUMBERS TO
                     OBS WYLBUR FORMAT.  MUTUALLY EXCLUSIVE WITH 'COMP'.
           VTOC - USE INPUT VTOC EXTENTS ON OUTPUT VOLUME
           EVEN - CONTINUE PROCESSING EVEN WITH I/O ERRORS. GENERALLY WILL
                     COPY A TRACK, SKIPPING RECORDS WITH DATACHECKS (THOSE ARE
                     COPIED AS READ). MORE SEVERE ERRORS CAUSE THE TRACK TO
                     BE SKIPPED (TREATED AS EMPTY) OR TRUNCATED TO THE LAST
                     PROCESSED RECORD.
           LIST - (DEFAULT) LIST ALL MESSAGES
           TERS (OR MSGS) - LIST INDICATIVE, WARNING AND ERROR MESSAGES ONLY
                   SUPPRESSES 'SUCCESSFULLY COPIED' MESSAGES
           LOTS - PRINTS NORMALLY UNWANTED MESSAGES; E.G. SKIP OF TEMP FILES
           ASIS - TREAT ALL DATASETS ON THE PACK AS UNMOVABLE
           SYSU - TREAT ALL SYS1. DATASETS AS UNMOVABLE
           SYSP - COPY ALL SYS1. DATASETS PRIOR TO OTHERS OF SAME TYPE
                 (I.E. CYLINDER ALIGNED DATASETS COPIED AFTER ISAM, UNMOVABLE
                 AND CATLG/PASSWORD, BUT PRIOR TO OTHER CYLINDER/TRACK ALIGNED
                 DATA; TRACK ALIGNED ONES COPIED PRIOR TO OTHER TRACK ALIGNED)
           RLSE - (DEFAULT) RELEASE UNUSED EXTENTS FROM PS/PO DATASETS
           KEEP - KEEP ALL EXTENTS (ALSO PREVENTS MERGING CONTIGUOUS EXTENTS)
           FREE (OR TREL) - RELEASE ALL UNUSED TRACKS FOR P.S. DATASETS
           IPLT (OR TRK0) - COPY IPL TRACK ALSO (EXCEPT RECORD 3).
           SWAP - FOLLOWING PACK COPY, EXCHANGE VOLUME LABELS BETWEEN PACKS.
0                                                                             35
1                   Technical Guide to System Modifications
     COPYVOL                                               Utility Programs
-            EASIER WHEN INPUT AND OUTPUT ARE ON SAME BANK AND ONLY PLUGS
             NEED TO BE SWITCHED. SUPPORTED ONLY FOR REMOVABLE DISK TYPES
             FOR SINGLE INPUT VOLUME. AN EARLIER RESTRICTION THAT INPUT
             AND OUTPUT VTOC START ADDRESSES BE EQUAL HAS BEEN REMOVED.
      >YYDDD - COPY IF ACCESS DATE HIGHER THAN OR EQUAL YYDDD
      <YYDDD - COPY IF ACCESS DATE < THAN YYDDD
           ACCESS DATE IS DEFINED AS MAX(DS1EXPDT,DS1CREDT,DS1REFD)
      DUMP - PRODUCE DUMP AFTER ABNORMAL TERMINATION
                 THIS OPTION IS FORCED FOR AN I/O ERROR.
      DBUG - PRODUCE DUMP ON ANY TERMINATION (INCLUDING NORMAL)
0    PLUG : IF YOUR INSTALLATION HAS 'FDR', LOOK INTO THE 'COMPAKTOR'.
      IT IS NOT QUITE AS CHEAP, BUT IT DOES SOME COPYVOL FUNCTIONS
      FASTER AND BETTER.
0     SYSIN CARDS (FREE FORMAT, COLUMNS 1-80)
           SPECIAL PURPOSE CARDS :
0          VTOC=ABSTRK,EXTENT=TRACKS  SPECIFIES OUTPUT VTOC LOC/SIZE
             WHERE ABSTRK IS THE TRACK NUMBER RELATIVE TO ZERO
             (AND GREATER THAN ZERO); TRACKS SPECIFIES THE NUMBER
              OF TRACKS IN THE NEW VTOC.
0          COND=VALUE    OR CODE=VALUE   - SET AN ERROR CODE AT AND
             ABOVE WHICH EXECUTION WILL TERMINATE, AND SWAP REQUESTS
             WILL NOT BE HONORED. NO DEFAULT EXISTS.
0     GENERAL FORMAT:
       FIRST NON-BLANK FIELD - OPTIONS
       SECOND NON-BLANK FIELD - DATASET NAME, DSN PREFIX, OR MASK
       THIRD NON-BLANK FIELD - RENAME OPTION REPLACEMENT STRING
0     OPTIONS BYTES :
       * - COMMENTS CARD - PRINTED AS READ
       S - SELECT DSN   (ALTERNATE FORM)
       I - INCLUDE DATASET
       X - EXCLUDE DSN  (ALTERNATE FORM)
       E - EXCLUDE DATASET
       R - RENAME DATASET
       U - TREAT DSN AS UNMOVABLE
       K - KEEP UNUSED EXTENTS (EXTENTS STILL COMPRESSED)
       F - FREE ALL UNUSED TRACKS FOR P.S. DATASETS
       P - PRIORITY COPY (IF CYL BOUND, PRIOR TO OTHER CYL; IF TRK BOUND,
                          PRIOR TO OTHERS ON TRK BOUNDARY)
       N - NORMAL COPY; TURNS OFF PRIORITY AND UNMOVABLE BITS.
             ALSO RESETS UNMOVABLE RESULTING FROM DSORG=POU
             BUT DOES NOT INVOKE IEBCOPY TO BE USED FOR DSORG=U
       A - COPY BY ALLOCATION/ACCESS DATE (IF < OR > OPTION USED)
       B - BYPASS/RESET DATE CHECK
           A AND B ARE VALID ONLY ON INCLUDE/EXCLUDE CARDS
       O - PLACE DSCB IN LOWEST FREE VTOC POSITION (AFTER VSAM DONE)
       1-8 - ONE OR MORE DIGITS - THE CARD APPLIES ONLY TO THE DD
             CARD(S) SPECIFIED. IF OMITTED, CARD APPLIES TO ALL PACKS.
-    36
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYVOL
-          MASK FIELD
            1 TO 44 CHARACTERS.  EITHER A QUESTION MARK OR A QUOTE (")
               REQUEST BYPASS OF CHECK IN THAT POSITION (GENERAL MATCH).
               COMPARE STARTS WITH LEFT-MOST BYTE FOR DATASETS WHOSE NAME
               LENGTH IS NO LESS THAN THE MASK LENGTH.
                A QUOTE SPECIFIES A GENERAL MATCH CHARACTER WHICH WILL BE
                COPIED TO THE CORRESPONDING MATCH CHARACTER IN THE RENAME
                OUTPUT STRING. QUESTION MARKS ARE FOR INPUT SCANNING ONLY,
                AND ARE NOT VALID IN RENAME OUTPUT STRINGS.
               EITHER A SEMI-COLON OR AN EXCLAMATION POINT MAY BE USED
                AS A TERMINAL CHARACTER TO INDICATE A PRECISE NAME;
                EITHER IS REPLACED BY A BLANK FOR MASK TESTING.
0          REPLACEMENT STRING
            1 TO 44 CHARACTERS TO REPLACE MATCHING ONES IN THE MASK FIELD.
               TRUNCATION OF A NAME DOES NOT RESULT IN AN ERROR.  QUOTES
               MAY BE USED TO INDICATE REPLACEMENT FROM OLD NAME, AND ARE
               LIMITED TO THE NUMBER OF QUOTES IN THE INPUT STRING.
                QUESTION MARKS, SEMI-COLONS AND EXCLAMATION MARKS ARE
                NOT VALID FOR REPLACEMENT NAMES.
0         PROCESSING :
0         INCLUDES/EXCLUDES ARE HANDLED SEPARATELY FOR EACH PACK.
           FOR EACH PACK, AS DETERMINED BY EXPLICIT DIGITS (ALL IF NONE),
           GLOBAL PROCESSING MODE IS SET BY THE FIRST INCLUDE/EXCLUDE CARD
           FOUND.  IF FIRST IS INCLUDE, ONLY DATASETS WHICH MATCH ONE OF
           THE REQUESTS ARE COPIED.  IF FIRST ONE IS EXCLUDE, DATASETS WILL
           BE COPIED UNLESS AN EXCLUDE IS FOUND TO MATCH.
           BOTH INCLUDES AND EXCLUDES MAY BE SUPPLIED IN THE SAME RUN.
           WHEN A MATCH IS FOUND, COMPARISON CONTINUES UNTIL END OF INPUT.
           E.G. IF GLOBAL OPTION IS INCLUDE, AND ONLY A MATCH ON INCLUDE IS
           FOUND, THE DATASET IS COPIED.  IF FOLLOWING THE INCLUDE MATCH
           ANOTHER MATCH OCCURS ON AN EXCLUDE, THE DATASET WILL BE SKIPPED,
           BUT COMPARISON CONTINUES; IF THERE IS ANOTHER INCLUDE MATCH, IT
           WOULD GET COPIED.
0         EXAMPLES :
0          PI  SYS?.   INCLUDE SYSA./SYSB./.../SYS9. DATASETS WITH PRIORITY
             X  SYS#.   BUT EXCLUDE SYS#. DATASETS
           IU  SYS#.COPY  BUT INCLUDE SYS#.COPY; TREAT AS UNMOVABLE
0           RU    SYS1.  OLDSYS1.
            * ABOVE RENAMES ALL SYS1. DATASETS TO OLDSYS1. AND TREATS
            *    THEM AS UNMOVABLE.
            R SYS".   OLD".
            * ABOVE RENAMES ALL DATASETS STARTING WITH 'SYS' HAVING A FOUR
            * BYTE INDEX LENGTH TO OLD, AND COPIES THE FOURTH BYTE, E.G.
            * SYS1.SVCLIB IS RENAMED OLD1.LPALIB; SYS2.PROCLIB TO
            * OLD2.PROCLIB, ETC.
            R1 SYS". NEW".       RENAMES ALL SYS DATASETS TO NEW
            R2345678 SYS". OLD". EXCEPT ON SECOND THROUGH EIGHTH PACK
-                                                                             37
1                   Technical Guide to System Modifications
     COPYVOL                                               Utility Programs
-    DEPENDENCIES:
0     SUBROUTINES @SERVICE, @DCBEXIT, @PRINTER AND @INPREAD
      MACROS : AS DISTRIBUTED WITH TSMDTR AND DTSDTR.
        COPY MEMBER SYSPARM SHOULD BE SET CORRECTLY FOR YOUR
        INSTALLATION (&SYSTEM, &LOCAL, &MVS/&SVS SETB)             82271
0    UNBELIEVABLY UNSURPASSABLE ERROR MESSAGES :
0     ABEND USER 1  (PRECEDED BY DIAGNOSTIC MESSAGES)
        ERROR IN PARM FIELD    (NO DUMP)
        ERROR IN SYSIN CARDS   (NO DUMP)
        SYNSIZE VALUE TOO SMALL FOR INPUT (TABLE OVERFLOW)
        INPUT/OUTPUT VOLUMES NOT COMPATIBLE
        INPUT/OUTPUT VOLUME NOT SUPPORTED
        OUTPUT VOLUME IS PERM. RESIDENT OR NOT PRIVATE
        OPERATOR DENIED COPY REQUEST
        FREE EXTENT LIST PROCESSING ERROR IN IEBCOPY PORTION OF CODE
        MORE THAN MAXFREE EXTENTS REQUIRED (SEE NUMDSCB5)
        LOGIC OR PROCESSING ERROR ALLOCATING DATASET OR IN FREE
          EXTENT TABLE
0     ABEND USER 2             (DUMP FORCED)
        UNRECOVERABLE I/O ERROR ON INPUT OR OUTPUT VOLUME
0     ABEND USER 8
        CONDITION CODE REACHED/EXCEEDED USER'S REQUESTED STOP CODE
0     ABEND USER 666
        TAKEN AT END OF PROGRAM WHEN DBUG OPTION IS CHOSEN
0     ABEND USER 1403
        SYSPRINT DD MISSING OR DUMMY
0    COMPLETION CODES
0     CODE 0 - EVERYTHING WORKED ?
      CODE 1 - ERROR WRITING FMT 5 DSCBS; PACK USABLE BUT NOT PERFECT
                 OR ALTERNATE TRACK USED FOR DATA.
      CODE 2 - ANY ERROR IN IEBCOPY; DATASET COPIED ASIS
      CODE 4 - AT LEAST ONE DATASET WITH BAD OR SPLIT EXTENTS UNCOPIED
      CODE 8 - UNMOVABLE/ISAM DATASET NOT COPIED - UNABLE TO ALLOCATE
                 OR ALTERNATE TRACK USED IN OUTPUT VTOC.
       ANY OF THE ABOVE ARE OR'ED TOGETHER
      CODE 16 - I/O ERROR DURING SWAP LABEL REWRITE.
-    ASSEMBLY OPTIONS
      SYNSIZE - GETMAIN SIZE OF THE CONTROL CARD TABLE.
                DEFAULT IS 4K, WHICH IS MORE THAN ENOUGH FOR
                MOST APPLICATIONS.  MAY BE ZAPPED.
0     NUMCCWS - THIS IS THE MAXIMUM NUMBER OF DATA RECORDS
                WHICH WILL OCCUR ON ANY ONE TRACK. FOR CURRENTLY
0    38
1                        Technical Guide to System Modifications
          Utility Programs                                               COPYVOL
-                    SUPPORTED DEVICES, THIS IS THE NUMBER OF UNKEYED
                     BLOCKS OF LENGTH 1 (!) WHICH FIT ON THE TRACK.
                     NOT ZAPPABLE.
0          NUMBUFFS - NUMBER OF FULL-TRACK I/O BUFFERS.  THIS VALUE
                      MUST BE AT LEAST TWO, AND SHOULD NOT BE SET TOO
                      HIGH. IF YOU HAVE MANY LARGE DATASETS, AND NO
                      OR EXTREMELY LOW PAGING, THE VALUE MAY BE UPPED.
                      NOT ZAPPABLE.
0          NUMDSCB5 - NUMBER OF FORMAT 5 DSCBS MAINTAINED IN STORAGE.
                      MINIMUM IS 1, MAXIMUM IS 157.
0          WYLBLOCK/WYLRECL - USED BY DTS FOR OBS WYLBUR SUPPORT.
           VTOC RELOCATION OPTION:
              VTOC=ABSTRK,EXTENT=TRACKS
0          COND= / CODE= TASK TERMINATION OPTION
              VALUE SPECIFIES LOWEST ERROR CODE CAUSING TERMINATION.
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              39
1                   Technical Guide to System Modifications
     CRTNASTY                                              Utility Programs
-    2.2.17   3270 Message Facility ...............................CRTNASTY
+    2.2.17   3270 Message Facility                                CRTNASTY
+             ____ _______ ________                                ________
0    This program is used as a start task, and as the final step in certain
     3270 programs,  to  clear the screen.  Some  applications normally may
     leave  sensitive data  displayed when  they  are shut  down or  crash.
     CRTNASTY writes a  message,  consisting of up  to 23 lines of  80 byte
     data supplied on a SYSIN DD,  to every 3277,  3278 and 3279 defined as
     local non-SNA CRTs in the system.  The write is bypassed if the CRT is
+          non SNA
     allocated,   has  pending  interrupts  or   any  other  control  block
     information  that might  indicate  it is  being used  by  a task  that
     bypassed allocation.   The top  line of the  screen indicates  the CRT
     address and the current time.
0    The program may also be used to identify stray CRTs.
0    An  optional SYSPRINT  DD  will  receive status  messages,   including
     unallocated CRTs that  were bypassed because of UCB  flags,  and error
     results encountered on WRITE completion.
-
-
-
-
-
-
-
-
-
-
-
-
0    40
1                        Technical Guide to System Modifications
          Utility Programs                                              DATEEDIT
-         2.2.18   Date Insertion ......................................DATEEDIT
+         2.2.18   Date Insertion                                       DATEEDIT
+                  ____ _________                                       ________
0         DATEEDIT is  a filter for inserting  dates into a card-format  data or
          JCL  stream.   Input  is  read  from  SYSUT1(SYSIN)   and  written  to
          SYSUT2(SYSOUT).
-         The following strings are replaced:
0          ##/##/## or ##/#D/##    replaced by current date
           ##/#P/##                replaced by previous day's date
           ##/#B/##                replaced by last preceding business day
           #M/##/##                replaced by first day of the current month
           #M/31/##                replaced by last day of current month
           #P/##/##                replaced by first day of the prior month
           #P/31/##                replaced by last day of the prior month
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              41
1                   Technical Guide to System Modifications
     DEFORMAT                                              Utility Programs
-    2.2.19   FORMAT to SCRIPT conversion .........................DEFORMAT
+    2.2.19   FORMAT to SCRIPT conversion                          DEFORMAT
+             ______ __ ______ __________                          ________
0    This program reads text written for the FORMAT text formatter (see IBM
     Washington Scientific Center Report 320-3501) on SYSIN and converts it
     to (Waterloo)  SCRIPT format on SYSPUNCH,   with an optional input and
     output listing on SYSPRINT.
0    The  conversion is  not completely  correct,   but generally  produces
     output that requires only minor massaging to produce usable output.
0    By default,   all input data  are converted  from upper case  to lower
     case.   The program  detects  SPECIAL PUNCH  and  PARAGRAPH INDENT  IS
     control cards, but ignores others (e.g., TABS).
0    The  )F control  word does  not produce  correct output  (there is  no
     direct SCRIPT equivalent)
-
-
-
-
-
-
-
-
-
-
-
-
-
     42
1                        Technical Guide to System Modifications
          Utility Programs                                               DELINK0
-         2.2.20   De-Link Edit ........................................DELINK0
+         2.2.20   De-Link Edit                                         DELINK0
+                  _______ ____                                         _______
0         This program  is offered  as-is.   Input is  a load-module  library as
          SYSLIB,  the object  deck output specification (SYSPUNCH)   and a list
          file (SYSPRINT).
0         Sample JCL:
0          //DELINK JOB ...
           //UNDO EXEC PGM=DELINK0,REGION=80K
           //SYSPRINT DD SYSOUT=A
           //SYSPUNCH DD DSN=&&DECK,UNIT=SYSDA,DISP=(,PASS),
           // SPACE=(CYL,(1,1),RLSE,CONTIG),DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
           //SYSLIB DD DSN=SYS1.LPALIB,DISP=SHR
            IFG0196W IFG0196W
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                             43
1                   Technical Guide to System Modifications
     DEVTABLE                                              Utility Programs
-    2.2.21   Device Mask Table Lister ............................DEVTABLE
+    2.2.21   Device Mask Table Lister                             DEVTABLE
+             ______ ____ _____ ______                             ________
0    UNTDEVTB -- SYMBOLIC SUPERZAP OF DEVICE  NAME AND MASK TABLES SUPPLIED
     TO THE SHARE OS PROJECT BY THE UNIV. OF TENNESSEE
0    For  listing/modification  of  the  Elegible  Device  Table  refer  to
     DYNALIST/DYNAMASK.
0    DEVTABLE - Preliminary User's Guide
0    DEVTABLE is a program which can be  used to list and modify the Device
     Name Table and the Device Mask Table.   The current version is capable
     only of modifying the mask bits in the Mask Table.  Modifying of names
     or device types still requires the use of SUPERZAP.
0    The following JCL is required to run DEVTABLE:
0       //  EXEC  PGM=DEVTABLE
0    The program does not  accept any PARM information and will  run in the
     default of 64K.
0       //DEVPRINT  DD  SYSOUT=A
0    The output file from the program typically is directed to the printer.
     The DCB is  device independent and specifies  RECFM=FBA and LRECL=121.
     BLKSIZE may specified on the DD card  as any integral multiple of 121.
     If not specifed on the DD card, 121 is assumed.
0       //SYSPRINT  DD DUMMY
0    The output file  from SUPERZAP is normally not  printed.  SYSOUT=A (or
     whatever) may be specified if desired.   This card is only required if
     the  mask table  is to  be modified;    it  is not  required for  list
     functions.
0       //SYSLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR
0    The SUPERZAP  SYSLIB card is required  for both list  and modification
     functions.   Even  when SUPERZAP  is not  invoked,  DEVTABLE  uses the
     SYSLIB DD card to LOAD the tables.    It will not accept a module from
     link pack, nor from logical LINKLIB nor from STEPLIB.   The tables are
     reloaded for  every list  or modification  function and  thus listings
     reflect modifications immediately.
0       //SYSIN  DD  UNIT=SYSDA,SPACE=(TRK,(10,10))
0    The SUPERZAP input file  is a temporary and is required  only if table
     modifications are made.   The DCB  specifies RECFM=FB and LRECL=80.  A
     BLKSIZE will be accepted from either the data set label or from the DD
     If unavailable from any other source, a value of 800 will be assumed.
0       //DEVIN  DD  *
-    44
1                        Technical Guide to System Modifications
          Utility Programs                                              DEVTABLE
-         The DEVTABLE input file is optional.   If omitted, DUMMY,  or null,  a
          listing of the  entire table is printed.   The  DCB specifies RECFM=FB
          and LRECL=80.   The BLKSIZE is normally taken from either the data set
          label or the DD card. If BLKSIZE is unavailable from any source (e.g.,
          the input is an unlabeled tape),  a value of 80 is assumed.   DEVTABLE
          control cards have an operation field in  columns 1-7 and zero or more
          operand fields beginning in colums 8, 16,  24 and so on through column
          64.    Both  operations  and  operands are  left  justified  in  their
          respective fields.   Continuations are failed,   but as many UCB cards
          (see below) as are necessary may be specified.
0         EJECT card.  An EJECT card may appear at any point in the input stream
          to  cause a  page  eject in  the  output listing.    The  card has  no
          operands.
0         LIST card. The LIST card may be used to list the UCB's associated with
          one or more device  names.   The operands are the names  to be listed.
          If no operands are  specifed,  all the names in the  table are listed.
          Example:
0          LIST
0         The entire table is listed.
0          LIST   TAPE    2400    3400-4  TAPE9
0         The entries for TAPE, 2400, 3400-4, and TAPE9 are listed.
0         ZAP card.   The ZAP card is used to specify the device names for which
          new UCB's will be  set.   The format is the same as  for the LIST card
          except that there must be at least one operand.   The ZAP card must be
          followed by one or more UCB card which specify the new values.
0         UCB card.  The UCB card is used to specify the values for a preceeding
          ZAP card.   The operands are  either UCB addresses  or a range  of UCB
          addresses.   A UCB range consists of a beginning address and an ending
          address separated by commas.
0         Examples:
0          LIST   SYSDA   WORK
           ZAP    SYSDA   WORK
           UCB    150     153-154
           LIST   SYSDA   WORK
           LIST   TAPE    2400    TAPE9   3400-4
           ZAP    TAPE    2400    TAPE9   3400-4
           UCB    380-383
           LIST   TAPE    2400    TAPE9   3400-4
           LIST   2314
           ZAP    2314
           UCB    230
           UCB    231
           UCB    232
           UCB    233     234-237
0                                                                             45
1                   Technical Guide to System Modifications
     DEVTABLE                                              Utility Programs
-     LIST   2314
0    A proc called DEVTABLE may be used to invoke the program.  It contains
     the  cards  described  above  execpt that  the  DEVIN  card  specifies
     DDNAME=DEVIN.
0            Local modifications (G.P.)
0            A CARD WITH '*' IN COLUMN ONE WILL BE TREATED AS COMMENTS
                   AND IS PRINTED WHEN READ.
0            A DD CARD TO DEFINE AN ALTERNATE NUCLEUS MAY BE USED.
             //NUCLEUS DD DSN=SYS1.NUCLEUS(MEMBER),VOL=SER=...
0            IF THIS CARD IS OMITTED OR DUMMY, THE RUNNING NUCLEUS IS
             REFERENCED.
-
-
-
-
-
-
-
-
-
-
-
-
-
     46
1                        Technical Guide to System Modifications
          Utility Programs                                              DIPLOMAT
-         2.2.22   Diplomacy Game ......................................DIPLOMAT
+         2.2.22   Diplomacy Game                                       DIPLOMAT
+                  _________ ____                                       ________
0         This program is a computerized adjunct  to the game of DIPLOMACY.   It
          validates moves,  supplies defaults as required,  and produces updated
          maps and order sheets.
0         The program  is DIPLOMAT,  and  uses subroutines  DIPLINIT,  DIPLMAPS,
          DIPLPRNT and DIPLPROV
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                                                             47
1                   Technical Guide to System Modifications
     DISASM                                                Utility Programs
-    2.2.23   Disassembler ........................................DISASM
+    2.2.23   Disassembler                                         DISASM
+             ____________                                         ______
0    The DISASM program creates an assembler language source program from a
     Load-Module PDS member.   DD cards required are  SYSPRINT for messages
     and diagnostics (BLKSIZE is a multiple of 121),  SYSLIB specifying the
     PDS containing the member (PDS  concatenation is supported),  SYSPUNCH
     for the produced  assembler source code (card format,   with BLKSIZE a
     multiple of 80),  and SYSIN for the control card input.  Control input
     may optionally  be entered  via the  PARM on  the EXEC  card.  Control
     information includes the member and CSECT name to be disassembled.  If
     the CSECT name is omitted, the CSECT for ESD-ID 0001 will be used.
-    Files:
0     DDNAME SYSLIB: RECFM=U. INPUT LOAD MODULE LIBRARY.
0     DDNAME SYSPUNCH: RECFM=FB,LRECL=80. OUTPUT FILE CONTAINING
                      DISASSEMBLED TEXT. (MAXBLK=18,960)
0     DDNAME SYSPRINT: RECFM=FBA,LRECL=121.  PRINTED OUTPUT CONTAINING A
                     LIST OF THE ESD TABLE, RLD TABLE, AND TEXT.
                     (MAXBLK=18997)
      DDNAME LOADLIB: (OPTIONAL) NAMES A PDS CONTAINING THE
                      MODULES OF DISASM IF DIFFERENT FROM
                      THE STEPLIB. USED PRIMARILY FOR TSO.
0     DDNAME SYSIN: RECFM=FB, LRECL=80. CONTROL CARD INPUT.
-    The control card provides the member and  CSECT name of the program to
     be disassembled.   The member  name is  required,  the  CSECT name  is
     optional and  defaults to the first  CSECT in the module.    Note that
     specification of  a CSECT  which originally was  part of  an assembly,
     rather than the  only CSECT,  may produce  erroneous results.  Control
     card contents is free format, and the CSECT may be separated by blanks
     or one comma from the member name.
0    The EXEC card  PARM may be used  to include additional code  points as
     instructions rather than data.  When specified, the optional code sets
     will be interpreted as instructions:
          PARM=(SUPVR)      PRIVILEGED INSTRUCTIONS
          PARM=(FLTPT)      FLOATING POINT INSTRUCTIONS
          PARM=(SUPVR,FLTPT) BOTH
-    PROCESSING FLOW:
      1. PROCESS THE CONTROL INFORMATION TO OBTAIN THE MEMBER
         AND CSECT NAMES.
      2. ISSUE BLDL AGAINST SYSLIB TO OBTAIN DIRECTORY INFO FOR
         THE MEMBER SPECIFIED. IF THE SPECIFIED MEMBER IS AN
         ALIAS, RE-ISSUE A BLDL FOR THE REAL MEMBER. PRINT
         DIRECTORY INFORMATION.
      3. POINT TO THE MEMBER IN THE SYSLIB PDS, AND PROCESS THE
0    48
1                        Technical Guide to System Modifications
          Utility Programs                                                DISASM
-             MEMBER. LOAD MODULES CONTAIN AN EXTERNAL SYMBOL DICTIONARY
              FOLLOWED BY TEXT AND RELOCATION DICTIONARY INFORMATION.
              ALL ESD INFO FOR THE MODULE PRECEDES THE FIRST CONTROL
              RECORD. A CONTROL RECORD PRECEDES EACH BLOCK OF TEXT.
              RLD INFO FOR THE TEXT FOLLOWS EACH TEXT BLOCK. PROCESSING
              OF LOAD MODULE INFORMATION IS AS FOLLOWS:
              A. BUILD AN EXTERNAL SYMBOL TABLE, USING THE CESD BLOCKS.
              B. SEARCH FOR THE DESIRED CSECT AS THE TABLE IS BEING
                 BUILT. THIS CSECT MUST BE FOUND BEFORE THE FIRST
                 CONTROL RECORD.
              C. READ BLOCKS UNTIL A CONTROL RECORD FOR THE DESIRED
                 CSECT IS FOUND (BY ESD-ID). WHEN FOUND, SAVE THE
                 TEXT FOR DISASSEMBLY, AND USE THE FOLLOWING RLD
                 INFORMATION TO BUILD A RELOCATION DICTIONARY TO BE USED
                 DURING DISASSEMBLY.
           4. DISASSEMBLY USES THE EXTERNAL SYMBOL TABLE, RELOCATION
              DICTIONARY, AND TEXT BUILT BY THE PREVIOUS STEPS.
-          AUTHOR R THORNTON - NOV 1977
0          UPDATES BY G. POSTPISCHIL
             MINOR  ERRORS FIXED;   OUTPUT  FORMAT  FLIPPED TO  MATCH  ASSEMBLER
          LISTING
             HORRIBLE ERROR FIXED - HAD POINT RATHER THAN FIND
                    IN ORIGINAL CODE - FAILS FOR CONCATENATION.
             GETMAIN SIZES INCREASED FOR MVS/SP1.3 NUCLEUS
-
-
-
-
-
-
-
-
-
0                                                                             49
1                   Technical Guide to System Modifications
     DISASTER                                              Utility Programs
-    2.2.24   Distribution Tape Catalog Builder ...................DISASTER
+    2.2.24   Distribution Tape Catalog Builder                    DISASTER
+             ____________ ____ _______ _______                    ________
0    This PL/I  routine,  supplied  by Seymour  Metz,  reads  multiple file
     IEBUPDTE format input  tapes and builds a module  directory later used
     by DIST.   This program requires MODJFCB  support (SVC 240 at E.S.P.).
     Member DISTBLD  contains the PL/I  program;  member  DISASTER includes
     (now obsolete) JCL and control cards.   Input cards specify the volume
     serial (IBM distribution tapes are unlabelled)  and the maximum number
     of files, separated by blanks.  The output file consists of the member
     name, volume serial,  and file number on the volume.  After the output
     file is  sorted by member  name,  it  becomes a "permanent"  disk file
     (kept on the DLIB pack) for that system.
0    Note that  some files on  each tape  contain only macros;   at E.S.P.,
     these are copied  to SYS1.PVTMACS,  a library  established for release
     dependent system macros.
-
-
-
-
-
-
-
-
-
-
-
-
-
     50
1                        Technical Guide to System Modifications
          Utility Programs                                                  DIST
-         2.2.25   Distribution Tape Retrieval .........................DIST
+         2.2.25   Distribution Tape Retrieval                          DIST
+                  ____________ ____ _________                          ____
0         This  assembler module  has  been written  based  on  an earlier  PL/I
          routine  of the  same name  supplied  by Seymour  Metz.   The  program
          retrieves members from tape files in  IEBUPDTE format.   It is used in
          combination with  DISTBLD and  DISTFIND to  build an  IBM distribution
          tape member directory, and to retrieve and assemble these members.
0         OUTPUT APPEARS ON SYSPRINT  (REQUIRED)  AND SYSUT2/SYSPUNCH (OPTIONAL;
          DD DUMMY IF NOT WANTED).   THE IBM  INPUT TAPES ARE SUPPLIED ON SYSUT1
          WITH DISP=PASS FOR ANY ONE VALID  FILE.  ADDITIONAL FILES WILL BE READ
          BY JFCB MODIFICATION.
0         SYSIN CONTROL CARDS:
0         DSN=DATASET NAME              REQUIRED FOR SL TAPES
0         VOLSER FILESEQ (MEMBER)
                OTHER CARDS SPECIFY THE VOLUME SERIAL IN COLUMN 1
                OR * FOR THE PREVIOUS VOLUME
                THE SECOND OPERAND SPECIFIES THE FILE NUMBER
                THE OPTIONAL THIRD OPERAND SPECIFIES THE MEMBER TO BE
                COPIED. OMISSION OF THE MEMBER NAME RESULTS IN A LIST
                OF MEMBERS PASSED OVER.
0         Sample JCL:
0          //ASMIBM  JOB ...
           //SYSADIST PROC CC=0,DUMMY='DUMMY,',SYS=S13
           //LOC     EXEC PGM=DISTFIND,REGION=128K,COND=(&CC,LT)
           //STEPLIB  DD  DSN=SYS1.DTSLIB,DISP=SHR
           //SYSPRINT DD  &DUMMY.SYSOUT=*
           //DISTOUT  DD  DSN=&&DISTIN,DISP=(,PASS),UNIT=VIO,
           //             SPACE=(6447,(10,10),RLSE,CONTIG),
           //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
           //ASMOUT   DD  DSN=&&ASMIN,DISP=(,PASS),UNIT=VIO,
           //             SPACE=(6447,(10,10),RLSE,CONTIG),
           //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
           //INDEX    DD  DSN=SYS1.&SYS.INDEX,DISP=SHR(Sorted DISTBLD output)
           //*
           //DIST    EXEC PGM=DIST,REGION=150K,COND=(&CC,LT)
           //STEPLIB  DD  DSN=SYS1.DTSLIB,DISP=SHR
           //SYSUT1   DD  UNIT=(3400-6,,DEFER),VOL=SER=IBMS,DSN=MVSTAP,DISP=OLD,
           //   LABEL=(,NL),DCB=(EROPT=SKP,RECFM=FB,LRECL=80,BLKSIZE=14400)
           //SYSUT2   DD  UNIT=VIO,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),
           //             SPACE=(CYL,(5,5),RLSE,CONTIG),DSN=&&TEMP,DISP=(,PASS)
           //SYSPRINT DD  SYSOUT=*
           //SYSIN    DD  DSN=&&DISTIN,DISP=(OLD,DELETE)
           //         PEND
           //*
           //SYSTUC   PROC WORK=VIO,CC=0,LIB='Z904.GPPSRC',DUMMY='DUMMY,',US=2,
           //             BLK=12960,LOAD=,DECK=NO,LIST=,TEST=NO,XREF=,LCT=55,
           //             RENT=NO,TERM=,NUM=NO,PB=605,PS=10,ESD=,
           //             RLD=NO,SPRM='MVS/SP',REF=SHORT,ASMPRM=,ASMREG=450K,
0                                                                             51
1                   Technical Guide to System Modifications
     DIST                                                  Utility Programs
-     //             TS='TERM=TS,'
      //*
      //*            FOR UPDATE COMPILE - TESTING
      //*
      //UP      EXEC PGM=IEBUPDTE,COND=(&CC,LT)
      //SYSPRINT DD  &DUMMY.SYSOUT=*,SPACE=(CYL,(&US,&US))
      //SYSUT1   DD  DSN=&LIB,DISP=SHR
      //*
      //SYSUT2   DD  DSN=&&UPSET,DISP=(,PASS),UNIT=&WORK,DCB=(RECFM=FB,
      //             LRECL=80,BLKSIZE=&BLK),
      //             SPACE=(CYL,(&US,&US,17),RLSE,CONTIG)
      //*
      //ASM     EXEC PGM=ASMANY,COND=(&CC,LT),TIME=120,REGION=&ASMREG,
      //             PARM=(&LOAD.OBJ,&DECK.DECK,&LIST.LIST,&TEST.TEST,
      //             '&XREF.XREF(&REF)','LINECOUNT(&LCT)',&RENT.RENT,
      //             &ESD.ESD,&TERM.TERM,&TERM.STMT,
      //             &NUM.NUM,&RLD.RLD&ASMPRM,
      //             'SYSPARM(&SPRM)')
      //CONPRINT DD  &TS.SYSOUT=*
      //ASMTERM  DD  &TS.SYSOUT=*
      //ASMLIB   DD  DSN=*.UP.SYSUT2,VOL=REF=*.UP.SYSUT2,DISP=(OLD,PASS)
      //         DD  DISP=SHR,DSN=SYS1.AMODGEN
      //         DD  DISP=SHR,DSN=SYS1.PVTMACS
      //         DD  DISP=SHR,DSN=Z904.GPPMAC
      //         DD  DISP=SHR,DSN=SYS1.JES2SRC
      //         DD  DISP=SHR,DSN=SYS1.MACLIB
      //ASMUT1   DD  UNIT=(&WORK,SEP=ASMLIB),SPACE=(1700,(800,100))
      //ASMUT2   DD  UNIT=(&WORK,SEP=ASMUT1),SPACE=(1700,(800,100))
      //ASMUT3   DD  UNIT=(&WORK,SEP=(ASMUT2,ASMUT1,ASMLIB)),
      //             SPACE=(1700,(800,100))
      //ASMPRINT DD  SYSOUT=*,DCB=(RECFM=FBM,LRECL=121,BLKSIZE=&PB,
      //             BUFNO=5),SPACE=(CYL,(&PS,&PS),,CONTIG)
      //ASMPUNCH DD  SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=3)
      //ASMGO    DD  DSN=&&LOADSET,SPACE=(80,(400,400)),DISP=(MOD,PASS),
      //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=3),
      //             UNIT=(&WORK,SEP=(ASMUT3,ASMUT2,ASMUT1,ASMLIB))
      //ASMIN    DD  DSN=*.UP.SYSUT2,VOL=REF=*.UP.SYSUT2,DISP=(OLD,PASS)
      //OLDLIB   DD  DSN=&LIB,DISP=SHR
      //         PEND
      //*
      /*SETUP       LOTS OF TAPES; MVS00X, SYSD8J - ALL READ ONLY
      //A EXEC SYSADIST,DUMMY=
      member name to be retrieved/assembled; one per card image (col. 1-8)
        (see specifications for ASMANY input for other options)
      //B EXEC SYSTUC,CC=0,DUMMY='DUMMY,'
      //SYSIN DD DSN=&&TEMP,DISP=(OLD,DELETE)
      //ASM.SYSIN DD DSN=&&ASMIN,DISP=(OLD,DELETE)
-
-
-    52
1                        Technical Guide to System Modifications
          Utility Programs                                               DISTBLD
-         2.2.26   Distribution Tape Catalog Builder ...................DISTBLD
+         2.2.26   Distribution Tape Catalog Builder                    DISTBLD
+                  ____________ ____ _______ _______                    _______
0         This PL/I  routine,  supplied  by Seymour  Metz,  reads  multiple file
          IEBUPDTE format input  tapes and builds a module  directory later used
          by DIST.   This program requires MODJFCB  support (SVC 240 at E.S.P.).
          Member DISTBLD  contains the PL/I  program;  member  DISASTER includes
          (now obsolete) JCL and control cards.   Input cards specify the volume
          serial (IBM distribution tapes are unlabelled)  and the maximum number
          of files, separated by blanks.  The output file consists of the member
          name, volume serial,  and file number on the volume.  After the output
          file is  sorted by member  name,  it  becomes a "permanent"  disk file
          (kept on the DLIB pack) for that system.
0         Note that  some files on  each tape  contain only macros;   at E.S.P.,
          these are copied  to SYS1.PVTMACS,  a library  established for release
          dependent system macros.
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              53
1                   Technical Guide to System Modifications
     DISTFIND                                              Utility Programs
-    2.2.27   Distribution Tape Lookup ............................DISTFIND
+    2.2.27   Distribution Tape Lookup                             DISTFIND
+             ____________ ____ ______                             ________
0    This program accepts input in 'ASMANY' input format.   Input is copied
     as-is to  temporary file &&ASMIN for  ASMANY input;  member  names are
     extracted and sorted  in storage.   The sorted names  are then checked
     against  the sorted  index of  the  OS optional  source tapes,   built
     earlier by program DISTBLD (or see DISASTER).  The resulting output is
     sorted  again on  volume and  file,   then written  to temporary  file
     &&DISTIN for subsequent input to 'DIST'.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0    54
1                        Technical Guide to System Modifications
          Utility Programs                                              DOSUPDTE
-         2.2.28   DOS Tape to OS PDS Conversion .......................DOSUPDTE
+         2.2.28   DOS Tape to OS PDS Conversion                        DOSUPDTE
+                  ___ ____ __ __ ___ __________                        ________
0         This program reads DOS and DOS/VSE format source dump tapes.   The DOS
          "CATAL C." cards  are read from SYSUT1  (or SYSIN),  and  converted to
          IEBUPDTE "./ ADD"  cards on SYSUT2  (or SYSOUT).   " BKEND"  cards are
          suppressed (end of member); other cards are copied as-is.
0         A SYSPRINT or SYSTERM  DD may be specified to obtain  a listing of the
          output.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                             55
1                   Technical Guide to System Modifications
     DOWNDATE                                              Utility Programs
-    2.2.29   Builds IEBUPDTE Deck ................................DOWNDATE
+    2.2.29   Builds IEBUPDTE Deck                                 DOWNDATE
+             ______ ________ ____                                 ________
0    This program was  contributed by the University of  Waterloo under the
     name UNUPDATE.   For card decks maintained by sequence number (columns
     73-80),  it will reconstruct the update deck used to go from a version
     of the deck  to a later one;  this  is used when the  update packet is
     unavailable.
0    The original data are specified by a SYSUT1 DD, the current (modified)
     file by a SYSUT2 DD.  Either file may  be in record format F,  V or in
     Wylbur Edit  (RECFM=U)  form,   but whichever  form is  supplied,  the
     sequence numbers must  be available (i.e.,  CLISTs  with left sequence
     numbers are not supported).
0    Either or both a SYSPRINT and SYSPUNCH  DD may be supplied for printed
     and punched output of the update deck.
-
-
-
-
-
-
-
-
-
-
-
-
-
     56
1                        Technical Guide to System Modifications
          Utility Programs                                              DRIPCLIP
-         2.2.30   Stand-alone DASD Label List/Change ..................DRIPCLIP
+         2.2.30   Stand-alone DASD Label List/Change                   DRIPCLIP
+                  ___________ ____ _____ ___________                   ________
0         This stand-alone  utility program  is used  to display  and alter  the
+              stand alone
          volume serial of DASD devices without assistance from an IBM operating
          system.   It  has been tested  only on  processors running in  360 and
          early 370 mode; it will run on a 43xx in MVS (pre-XA) mode.
0         After this program is assembled, the object deck must be preceded by a
          three card  stand-alone loader.   The loader  code can be  copied from
          module DRIPLOAD,   which contains  three REPRO  cards paired  with the
          loader text.
0         After loading from  a card reader or  tape,  hit ENTER on  the desired
          console.
0         To the response of INPUT= reply with four characters (xyyy), where "x"
          is "T" for tape input, "R" for card reader, and "C" for console input.
0         Type HELP to get a list of options.
0         Altering a label requires two lines of input:
0          DISK=cuu    (specifies the DASD address)
           LABEL=SER=volser,NAME='owner id'
-
-
-
-
-
-
-
-
-
-
0                                                                             57
1                   Technical Guide to System Modifications
     DRIPFREN                                              Utility Programs
-    2.2.31   Stand-alone I/O Tester ..............................DRIPFREN
+    2.2.31   Stand-alone I/O Tester                               DRIPFREN
+             ___________ ___ ______                               ________
0    This stand-alone program was disassembled  from a Memorex utility (now
+         stand alone
     obsolete) used to perform device testing.  Our use is to check devices
     when the  machine is (mostly)   down after changing  device addresses,
     re-arranging channel cables, and the like.
0    After tape or card-reader IPL (copy  REPRO text from DRIPLOAD prior to
     the  DRIPFREN  object  deck)   the program  loops  until  it  gets  an
     attention.   The device  issuing the  attention  will be  used as  the
     console.
0    Enter DEV=cuu to specify the device to be tested.
0    Enter TIO to get  a Test I/O performed.  Use Attention  and type-in of
     "I" to interrupt repeated tests.
0    Instead of TIO, you may enter requests (e.g., SEEK,  READ,  etc.)   to
     build a CCW chain. Input of GO then starts the test.
0    The program supports  "variables" with a dollar-sign prefix  and a one
     character name (e.g.,  $Q).  These may be used to contain data as they
     are read, and may later be displayed.
-
-
-
-
-
-
-
-
-
-
-    58
1                        Technical Guide to System Modifications
          Utility Programs                                              DRIPLOAD
-         2.2.32   Stand-alone Loader ..................................DRIPLOAD
+         2.2.32   Stand-alone Loader                                   DRIPLOAD
+                  ___________ ______                                   ________
0         THIS  PROGRAM  IS INTENDED  TO  EASE  THE  PAINS OF  RUNNING  PROGRAMS
          DESIGNED FOR CARD-READER OR TAPE IPL.
0         REQUIREMENTS :
0         ALLOCATE  A SINGLE  EXTENT PDS  NAMED  SYS1.IPLDECKS ON  ANY DISK  NOT
          HAVING IPL  TEXT.   FORMAT  IS FIXED  BLOCKED,  RECORD  LENGTH OF  80,
          BLOCKSIZE TO OPTIMIZE (3520 ON 2314, OR 3120 ON 3330;  LARGER SIZES UP
          TO TRACK CAPACITY ARE FULLY SUPPORTED).    MEMBERS OF THIS PDS WILL BE
          ALL DECKS TO BE IPL'D;  NAMES SHOULD BE MNEMONIC AND MEANINGFUL TO THE
          OPERATORS.   DECKS ARE PLACED IN THE  PDS USING NORMAL OS BPAM/QSAM IN
          THE FORM  OF OBJECT DECKS FROM  ASSEMBLIES,  OR EXISTING DECKS  MAY BE
          USED.
0         EXISTING DECKS :  SEREP
                THE SEREP DECKS REQUIRES SPECIAL PREPARATION
                USE IEBGENER TO PLACE AN UNBLOCKED COPY OF SEREP ON A
                DISK DATASET.  USE IEHDASDR TO SYSPRINT TO DUMP THE
                DATA. (OR USE THE PRINTALL PROGRAM ALSO ON THIS TAPE).
                UNLESS YOUR VERSION IS RADICALLY DIFFERENT, NOTE THAT
                THE NEXT TO THE LAST CARD IS AN 'END' CARD CONTAINING
                TWO LOW CORE ADDRESSES (IN OUR DECK, A030 AND 0850);
                THE SECOND ADDRESS IS IN COLUMNS 30/31 - THIS IS THE
                PROGRAM ENTRY POINT ADDRESS.  AFTER YOU HAVE COPIED
                SEREP AS IS TO SYS1.IPLDECKS(SEREPXXX), SUPERZAP THE END
                CARD COLUMNS 4-7 TO THIS ADDRESS (LEADING ZEROES).
                NOTE THAT THE LAST CARD IN THE DECK CONTAINS EBCDIC
                DATA; THE FIRST FOUR BYTES ARE THE PRINTER ADDRESS.
                IN OUR DECK, THIS CARD IMAGE MUST BE ZAPPED INTO THE
                TEXT CARDS LOADING ADDRESSES 0800-084F.  IF THESE
                ADDRESSES ARE NOT CORRECT, THEY MAY BE FOUND BY UNDOING
                THE ZAP, AND RUNNING DRIP REQUESTING SEREP.  SEREP WILL
                BOMB DOING AN IPL READ FROM THE IPL DISK - CHECK THE
                CAW IN LOW CORE TO GET THE CCW AND THE CORRESPONDING
                INPUT ADDRESSES.  YOU MAY WISH TO MAKE MULTIPLE COPIES
                OF THE SEREP DECK FOR EACH PRINTER (IN CASE YOUR PRIMARY
                PRINTER IS DOWN) - JUST ZAP THE ADDRESS AFTER RENAMING
                AN ADDITIONAL COPY.  NO DRIP SUPPORT FOR THIS IS PLANNED
             SEREP NAMES ARE OBTAINED DYNAMICALLY - A STORE CPU ID
                INSTRUCTION IS ISSUED - IF IT FAILS, INPUT OF 'SEREP'
                IS TREATED AS SEREP360; ELSE THE CPU MODEL IS
                USED IN PLACE OF 360, E.G. SEREP165.
0         CLIP,  DEBE,  STAND-ALONE DUMP/RESTORE AND DASDR CONTAIN IPL BOOTSTRAP
          CARDS,  A BPS LOADER DECK AND THE  PROGRAM DECK.   REMOVE ALL CARDS UP
          TO,  BUT NOT  INCLUDING THE FIRST PROGRAM TEXT CARD.    THE 'END' CARD
          MUST BE PRESENT AND SHOULD BE THE LAST IN THE DECK;  IF NECESSARY,  AN
          ENTRY ADDRESS MUST BE ZAPPED IN.  FOR MOST PROGRAMS, THIS ADDRESS WILL
          BE HEX 1000.
                IF FINISHED WHEN THIS TAPE IS PREPARED, A VERSION OF
                CLIP AND IMDSADMP WILL BE INCLUDED UNDER THE NAMES
                DRIPCLIP AND DRIPDUMP.  THIS VERSION OF CLIP WILL
0                                                                             59
1                   Technical Guide to System Modifications
     DRIPLOAD                                              Utility Programs
-          PROVIDE 3270 CONSOLE SUPPORT, UPPER CASE TRANSLATE ON
           ALL INPUT, AND HOPEFULLY OTHER IMPROVEMENTS.
-    FOR ASSEMBLY DECKS, 'START ADDR' MUST BE USED IN PLACE OF 'CSECT'; THE
     'ADDR' BEING THE ABSOLUTE LOAD ADDRESS.  THIS ADDRESS, AND NONE OF THE
     PROGRAM,  MAY BE  HIGHER THAN 236K IN CORE.   THE  ASSEMBLY 'END' CARD
     MUST SPECIFY AN ENTRY POINT NAME.    THE DRIP PROGRAM WILL NOT PERFORM
     LINKAGE-EDITOR  NOR LOADER  FUNCTIONS;  ALL  TEXT IS  LOADED INTO  THE
     ADDRESSES SPECIFIED ON  TEXT CARDS,  AND CONTROL WILL BE  GIVEN TO THE
     ENTRY  POINT ON  THE  END  CARD.   NO  RELOCATION  OF  RLD RECORDS  IS
     PERFORMED.
0    OPERATION :   THIS PROGRAM  IS LOADED AT 236K IN CORE;   MEMORY IS NOT
     CLEARED.   THE OPERATOR IS PROMPTED FOR THE  NAME OF THE PROGRAM TO BE
     RUN  DATASET 'SYS1.DRIPLOAD'  IS LOCATED  ON  THE IPL  VOLUME AND  THE
     REQUESTED MEMBER IS SCANNED FOR.   IF FOUND,  TEXT CARDS ARE READ INTO
     CORE UNTIL AN  END CARD IS ENCOUNTERED.    LOW CORE IS SET  TO THE IPL
     UNIT ADDRESS (LOC 2-3), THE ENTRY POINT (LOC 5-7), THE TIMER IS SET TO
     FFFFFFFF TO  DISABLE IT,   AND TIMER+4  IS USED  TO STORE  THE CONSOLE
     ADDRESS/TYPE;  THE REMAINDER  OF CORE OUTSIDE THE DRIP  PROGRAM IS NOT
     CHANGED.   CONTROL  IS GIVEN TO THE  ENTRY POINT SPECIFIED ON  THE END
     CARD.  IF 'WAIT' WAS SPECIFIED, CONTROL TRANSFER WILL BE DELAYED UNTIL
     AN EXTERNAL INTERRUPT IS ISSUED.
0    PREPARATION :   ASSEMBLE THIS PROGRAM,  OVERRIDING LOCAL OPTIONS WHERE
     DESIRED.   THE  OBJECT DECK FROM  THIS ASSEMBLY  MAY BE PLACED  INTO A
     CARD- READER AND IPL'ED.  IPL TEXT AND A COPY OF THIS PROGRAM ARE THEN
     WRITTEN  TO THE  IPL DISK.    THE DISK  ADDRESS MUST  BE SPECIFIED  IN
     VARIABLE &IPL;   THIS  ADDRESS IS USED ONLY FOR  IPL TEXT PREPARATION;
     ONCE THIS PREPARATION IS  COMPLETE,  THE DISK PACK MAY BE  USED ON ANY
     ADDRESS.  THIS  SECTION OF  CODE HAS BEEN  LIFTED FROM  IBM'S IMDSADMP
     PROGRAM, WHICH IS DESCRIBED IN THE 'SERVICE AIDS' MANUAL.  MOST OF THE
     CODE HAS BEEN LIFTED FROM THE OS IPL PROGRAM IEAIPL.   WARNING :  THIS
     PROGRAM IS LIMITED TO A MAXIMUM SIZE OF HEX 'E29' TO FIT ON A 2311 IPL
     TRACK, AND SHOULD NOT EXCEED THIS SIZE ON OTHER DEVICES UNLESS CHECKED
     BEFORE CLOBBERING A GOOD DISK.
0    THE  PROGRAM SUPPORTS  UP TO  THREE  CONSOLES;  THE  BASIC TYPES  ALSO
     SUPPORTED  BY  IMDSADMP  (1052/3215 AND  3066/5450),   AND  THE  ADDED
     3272/3277 MOD 2 CRT.  CONSOLES WILL BE USED IN THE ORDER IN WHICH THEY
     ARE DEFINED IN &CONS;  A NOT-READY  OR PROLONGED 'BUSY' CONDITION WILL
     CAUSE ANOTHER CONSOLE TO BE USED.
0    A CONSOLE TYPE OF '4341' SHOULD BE USED  FOR A 20-LINE 3278 OR 3279 ON
     A 43XX PROCESSOR.
0     EXITS  -ERROR-    ERROR CONDITIONS RESULT IN A WAIT PSW BEING LOADED
          WITH THE FOLLOWING ERROR CODES STORED IN THE ADDRESS FIELD OF THE
          PSW FOR DISPLAY IN THE CONSOLE LIGHTS-
        ERROR CODE-  1  (0001)    I/O IS NOT OPERATIONAL.
            2  (0010)    I/O OPERATION IS NOT INITIATED. CSW IS
                         STORED BUT UNIT IS NOT BUSY.
            3  (0011)    I/O OPERATION IS NOT INITIATED. CSW IS
0    60
1                        Technical Guide to System Modifications
          Utility Programs                                              DRIPLOAD
-                             NOT STORED AND THE CHANNEL IS NOT BUSY.
                 4  (0100)    CHANNEL IS NOT BUSY AND CSW IS NOT STORED
                 5  (0101)    UNIT CHECK CONDITION IS INDICATED.
                 6  (0110)    ANY OF THE FOLLOWING CONDITIONS -
                                PROGRAM CHECK
                                CHANNEL DATA CHECK
                                CHANNEL CONTROL CHECK
                                CHANNEL CHAINING CHECK
                                INTERFACE CONTROL CHECK
                18  (00011000) AVAILABLE SPACE FOR RLD RCDS HAS BEEN
                              EXCEEDED.
              C0XX  (NNNNNNNN) UNEXPECTED PGM CHK INTERRUPT, IPL
                              CONTAMINATED.
0             FFFF     NO CONSOLE OPERATIONAL
0         NUMBERED MESSAGES
0         'ERROR CODE X'  X=
0               2 - TEXT ADDRESS OVERLAPS DRIP CORE
                3 - NO VALID TEXT CARD WAS READ
                4 - END CARD NOT FOUND OR END CONTAINS NO ENTRY ADDRESS
0         IPL TRACK CREATION WAIT STATE CODES - C900XX
0               01 - NORMAL COMPLETION
                04 - VTOC OVERLAPS IPL TRACK(S)
                08 - INSUFFICIENT TRACK SPACE TO WRITE
              F0F0 - I/O ERROR
-
-
-
-
-
-
-
-
0                                                                             61
1                   Technical Guide to System Modifications
     EDTPRINT                                              Utility Programs
-    2.2.33   Elegible Device Table Listing .......................EDTPRINT
+    2.2.33   Elegible Device Table Listing                        EDTPRINT
+             ________ ______ _____ _______                        ________
0    EDTPRINT formats  the contents  of the Elegible  Device table  for the
     current system on SYSPRINT.
0    For alternate formatting,  and EDT  alteration,  refer to DYNALIST and
     DYNAMASK.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     62
1                        Technical Guide to System Modifications
          Utility Programs                                                EXPDIR
-         2.2.34   Expand PDS Directory ................................EXPDIR
+         2.2.34   Expand PDS Directory                                 EXPDIR
+                  ______ ___ _________                                 ______
0         EXPDIR  is a  program  used  to change  the  number  of entries  in  a
          Partitioned Data Set directory without  losing any data.  Use CLEARPDS
+                                        without
          to clear and re-initialize a PDS.
0         EXPDIR produces output on SYSPRINT showing action(s)  taken.   The PDS
          to be operated on is specified on a PDS DD card;  the disposition must
          be OLD.
0         The action to be taken is specified by the EXEC card PARM field, which
          is of the form PARM=nn,  PARM='+nn',  PARM='-nn' or PARM='=nn'.   "nn"
          may be a one to eight digit integer.
0         The  form  PARM=nn  and  PARM='=nn'  specify  the  desired  number  of
          directory blocks£ If this number is  larger than the current directory
          size,  then the program attempts to  move any programs residing in the
          required space to  the end of the  used space (this requires  that the
          dataset have free space; however, more work may have to be done if the
          dataset is compressed before running EXPDIR, since then any free space
          adjacent to the directory will be filled). The SYSPRINT file will show
          which members were moved.
0         The form PARM='+nn'  is used to request the addition  of the specified
          number of  blocks to  the current  directory.   The  program works  as
          described in the paragraph above,  by relocating members residing next
          to the directory.
0         The form PARM='-nn' is used to decrease the directory by the number of
          blocks specified.  Reduction is also  performed with the forms PARM=nn
          and PARM='=nn'  when the  specified count  is lower  than the  current
          size.   For directory decrease,  the program simply replaces the first
          unused directory block by an end-file record, and rewrites any data on
          that  track.  Dataset  compression is  recommended  after a  directory
          decrease.
-
-
-
-
0         --------------------
-         £One  block  may  contain  from  three  to  twenty-one  member  names,
           dependent on PDS use.  A typical  load-module library might have five
           members per block, a source library twenty-one.
0                                                                             63
1                   Technical Guide to System Modifications
     EXSTATIC                                              Utility Programs
-    2.2.35   PDS Concordance .....................................EXSTATIC
+    2.2.35   PDS Concordance                                      EXSTATIC
+             ___ ___________                                      ________
0    This module produces collated information for libraries.  Each library
     presented  by a  DD is  scanned  for member  information.  For  source
     libraries,  a date is obtained either for ISPF/PDF and IEBUPDTX files,
     the last change date;  for other files (WYLBUR, local), SSI is assumed
     to be in 000yyddd or 00yydddf  form.   For object libraries,  the date
     extracted from the ESD card is used.   For load-module libraries,  the
     link-edit  date and  the  assembly/compile dates  for  each CSECT  are
     extracted. The SSI (if in date format) is used as by default.   Output
     is produced to the SYSPRINT DD.
0    Up  to twelve  libraries  may be  specified in  one  step,  using  any
     non-reserved DD name.  Names beginning with SYS0, SORT, STEP,  JOB are
     reserved, as are SYSxDUMP and SYSABEND, SYSPRINT and SYSPUNCH.
0    Source libraries should precede object libraries, and object libraries
     should, but need not precede load-module libraries.
0    For any matching name (source name=object name=module name), the dates
     are listed  and compared.   When the  source module has a  higher date
     than the corresponding object or load entry,  the "back-level" entries
     are flagged with a less-than ("<") sign.
0    For load-modules,   CSECTs and  alias entries  are processed.    Alias
     entries are shown with an asterisk  preceding the name,  CSECTs with a
     period preceding the name.
0    Macro libraries may be  included when it is desired to  have a list of
     change dates (also see IEBPDS for this).
0    The program invokes  the SORT,  and requires SORTWK01  to SORTWK03 (at
     least)  word files,  SYSOUT for SORT  messages,  and a SORTLIB for the
     SORT program proper (may not be needed;   omit if SORT in LPA).   Also
     required are SORTIN/SORTOUT temporary SYSDA or VIO files.
0    A sample job to compare a simple set of libraries:
0     //STATUS  JOB ...
      //STATUS EXEC PGM=EXSTATIC,REGION=250K
      //STEPLIB   DD DISP=SHR,DSN=SYS1.SORTLIB
      //SYSPRINT DD  SYSOUT=*
      //SOURCE   DD  DISP=SHR,DSN=source library (precedes obj/link)
      //OBJECT   DD  DISP=SHR,DSN=object library (optional)
      //LOAD     DD  DISP=SHR,DSN=load-module library
      //SORTIN   DD  UNIT=SYSDA,SPACE=(CYL,(10,10))
      //SORTOUT  DD  UNIT=SYSDA,SPACE=(CYL,(10,10)),
      //             DCB=(RECFM=FB,LRECL=27,BLKSIZE=0)
      //SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
      //SYSOUT   DD  SYSOUT=Z
      //SORTWK01 DD  UNIT=SYSDA,SPACE=(CYL,15)
      //SORTWK02 DD  UNIT=SYSDA,SPACE=(CYL,15)
      //SORTWK03 DD  UNIT=SYSDA,SPACE=(CYL,15)
-    64
1                        Technical Guide to System Modifications
          Utility Programs                                              EXTRACTS
-         2.2.36   Distribution Tape Update Extraction .................EXTRACTS
+         2.2.36   Distribution Tape Update Extraction                  EXTRACTS
+                  ____________ ____ ______ __________                  ________
0         This  program  is used  to  compare  different  versions of  the  same
          libraries solely by  change date.   To compare  libraries by contents,
+                   solely by  change date
          see YALECOMP.
0         For source libraries,  this process requires  strict use of change and
          add dates in  the SSI (either ISPF/PDF or IEBUPDTX  format,  or WYLBUR
          and our local 000yyddd form).
0         Each library  additionally contains a member  named "$" having  an SSI
          with the date of distribution of that library.  This member allows the
          program to  check for modules changed  after the distribution  date by
          the receiving installation.
0         Multiple libraries  may be processed  in one  step only for  the basic
          Exhibit package, due to built-in DD names and special functions.
0         For general use:
           //     EXEC PGM=EXTRACTS,REGION=150K,TIME=5
           //STEPLIB DD DISP=SHR,DSN= LOAD MODULE LIBRARY (if not in a linklib)
           //SYSPRINT DD SYSOUT=A                  PROCESSING MESSAGES
           //TAPE     DD UNIT=3400-n,VOL=SER=serial,LABEL=(n,SL,EXPDT=98000),
           //           DSN=new.source,DISP=(OLD,PASS)  DISTRIBUTION FILE
           //PDS      DD DISP=SHR,DSN=your.source
           //*    TEMPORARY FILES FOR SUBSEQUENT IEBUPDTE RUNS
           //UPPDS    DD DISP=(,PASS),UNIT=SYSDA,DSN=&&PDS,
           //             SPACE=(CYL,(5,5),,CONTIG)
           //*    FILES TO CONTAIN UPDATED SOURCE FOR USER MODIFIED CODE
           //*     THESE SHOULD BE RUN AS IEBUPDTE JOBS ALSO AND APPLIED
           //*     AS NECESSARY
           //REPDS    DD DISP=(,KEEP),DSN=tempsave.source,VOL=SER=...
           //           SPACE=(CYL,(1,5),RLSE,CONTIG)
           //*          IF ONLY THE FIRST STEP IS RUN (WITH PARM=TEST)
           //*          THEN ADDITIONAL CARDS MAY BE INSERTED TO PRINT OUT
           //*          THE MODIFIED INFORMATION (INSTEAD OF THE IEBUPDTE
           //*          SYSPRINT LISTING)
           //PRPDS    DD SYSOUT=A      status listing
           //*      COMPRESSION OF FILES TO MINIMIZE X37 ABENDS
           //     EXEC PGM=IEBCOPY,REGION=300K,TIME=15
           //SYSPRINT DD SYSOUT=A
           //SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,3)
           //SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,3)
           //PDS      DD DISP=OLD,DSN=your.source
             COPY I=PDS,O=PDS
           //*     PDS UPDATE RUNS
           //UPPDS    EXEC PGM=IEBUPDTE,PARM=NEW
           //SYSPRINT DD SYSOUT=A
           //SYSUT2  DD DISP=OLD,DSN=your.source,SPACE=(CYL,(5,5,57),,CONTIG)
           //SYSIN  DD DSN=&&PDS,DISP=(OLD,DELETE)
           //*    LAST STEP TO BE EXECUTED ONLY IF EVERYTHING WORKED
           //FINAL  EXEC PGM=IEHPROGM
           //DISK DD VOL=REF=your.source,DISP=OLD
           //SYSPRINT DD SYSOUT=A
0                                                                             65
1                   Technical Guide to System Modifications
     EXTRACTS                                              Utility Programs
-       SCRATCH MEMBER=$,DSNAME=your.source,VOL=unit=serial
        RENAME MEMBER=$$,DSNAME=your.source,VOL=unit=serial,NEWNAME=$
0    At  the   conclusion  of  this  job,    all  members  on   the  update
     (distribution) file will be in "your.source",  and members with change
     dates higher than  the distribution date will have been  copied to the
     REPDS file for manual processing.
0    The processing is arranged so as  to allow restart without JCL changes
     on  any error  that  does not  occur  in  the middle  of  a STOW;   in
     particular,  x37 abends may be recovered  from by increasing space for
     temporary and intermediary  files or by just rerunning the  job if the
     error occurred on "your.source".
0    Listings from all jobs should be saved.
-
-
-
-
-
-
-
-
-
-
-
-
-
0    66
1                        Technical Guide to System Modifications
          Utility Programs                                               FCBLIST
-         2.2.37   FCB Lister ..........................................FCBLIST
+         2.2.37   FCB Lister                                           FCBLIST
+                  ___ ______                                           _______
0         This program, written by Art Brown at Southern California Edison,  was
          modified from the version distributed on the MVS Mods tape.
0         It lists  carriage tape "punches"  for 3211,   3203 and 3800  line and
          LASER printers, and shows physical spacing.
0         By default,  all FCBs are listed;   selection may be made by including
          the name of the desired FCBs in the PARM field, separated by commas.
0         The program requires a SYSUT1 DD pointing to the SYS1.IMAGELIB dataset
          to be listed, and a SYSPRINT DD for the output.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              67
1                   Technical Guide to System Modifications
     HOB                                                   Utility Programs
-    2.2.38   Canned Job Submission ...............................HOB
+    2.2.38   Canned Job Submission                                HOB
+             ______ ___ __________                                ___
0    This program  reads JCL  and control  cards from  sequential and  VSAM
     files, and from PDS members, for batch job submission.  Submission may
     be modified by date,   and may be set to prevent  duplicates (prior to
     purging  earlier jobs  from  the system).    We use  it  to allow  the
     operator an easy way to run ancillary jobs.
-    Operator job submission is started with 'START HOB,NAME=xxxx'
0    JCL brought in from disk is subject to modification :
          account may be ????,???? to request operator supplied
               values (account field begins with parenthesis)
         jobs should not be mixed unless each terminates with a null
         job card within a DD DATA will start a new job
0        PARM options :
0        RESTART=jobname     locate specified job in member, and submit
               it and following jobs (subject to //*PICK & //*SKIP)
         PICK=jobname        locate and submit the single named job
               only.  //*PICK and //*SKIP are ignored.
         DATE=yyddd          process input using the specified, rather
               than the current date.
         TEST=ANY            look for job on any JES queue, suppress
                             duplicates
         TEST=INP            look for job on in/exec/jcl-scan queues
               (default)     only, and suppress duplicates.
         TEST=NONE           bypass job-queue checking
0        Control cards in input member :
0        //*PICK      options
               submit following jobs if match in all specified
               categories.
         //*SKIP      options
               submit unless match in all specified categories
         //*SKIPANY   options
               submit unless match in any option value
0        Note that successive //*PICK and //*SKIP cards (without
               intervening //, /* and data cards) form a cluster.
               In a cluster, a PICK card following a matched PICK
               is ignored; a SKIP following a matched SKIP is ignored;
               a matched card of opposite type resets the match type;
               and an unmatched card of the opposite type is ignored.
0        //*EDIT  scan for scan character (hex E0), replace it and
               next letter/digit by replacement string (default)
         //*ASIS  do not perform edit replacement
         //*SET   X=TEXT  Y='DON''T'  Z="DON'T"
               set variable (X, Y, Z) to specified string
         //*PRESET X= ...    set the variable only if not previously
0    68
1                        Technical Guide to System Modifications
          Utility Programs                                                   HOB
-                   defined (e.g., default for PARM override)
              //*RUN  dsn(member),volser  '' x=text ...
              //*SUB  dsn(member),volser  '' x=text ...
                    open the dataset specified by 'dsn' (member and volser
                    are optional), and process like SYSIN until EOF, then
                    resume. Note that these cards should be followed by
                    PICK or SKIP, because they may invoke undesirable PICK
                    and SKIP requests.  Note that a doubled scan character
                    may appear as a separator for optional //*SET text.
              //*NAME jobname
                    trigger same processing as though //xxx JOB card present
0             //*CMD text... (until column 72)
                    this card is honored except when a PICK/SKIP fails.
                    The text is issued as a 'master console' command
              //*MSG text... (until column 72)
                    this card is honored except when a PICK/SKIP fails.
                    The text is issued as a WTO with DESC=2, ROUT=1
0             //*SUBMIT dsn(member),volser '' x=text ...
                    SUBMIT functions similar to //*SUB, but is processed only
                    within a job, i.e., a PARM=PICK=job request will not
                    read it before finding the named job. Jobs contained
                    in it will not be submitted after the PARM request is
                    matched.
              //*WTO text... (until column 72)
                    this card is honored within a job only; it issues the
                    specified text to the operator with ROUT=1,DESC=2.
0             Options are :
0             CPU selection:  CPU=syst  where 'syst' is the SMCASID
                   (CL4) field.  More than one id may be specified
                   on a card. Any match results in the appropriate
                   PICK or SKIP option. CPU=, cancels selction.
              Day of week:  name of day, or three letter abreviation
              Day of month:  day+number, e.g., day1, day01, day11...
                   special - last day of month  dayl
              Week of month:  month1, month2,...month5
                   special- last week of month  monthl
              Week of year:   week1, week2, ... week53
                Note that week starts with first day of period, not
              Sunday or Monday.  Also, year has fractional week 53.
0             Examples :
              run on tuesdays only   //*PICK TUESDAY
              run on first monday of month   //*PICK MONDAY MONTH1
              run on last friday of month    //*PICK FRI MONTHL
              run on specific system    //*PICK CPU=(155A,158B)
                  Selection criteria may be negated (limited to once per
                    type (one occurrence of day/week/month/etc.)
              run mon-sat       //*PICK SUN   or  //*SKIP ¬SUN
                Note that //*PICK ¬TUE ¬THU is meaningful, but fails.
-                                                                             69
1                   Technical Guide to System Modifications
     HOB                                                   Utility Programs
-    Input dataset SYSUT1 may be in card format, variable, WYLBUR edit,  or
     a VSAM file.  For SAM files (PDS member, sequential,  WYLBUR),  SYSUT1
     may  be concatenated  (including unlike  concatenation).   The  output
     dataset SYSPRINT (or SYSTERM)  is  optional.   All JES2 dependent code
     funnels through  the @SERVICE  routines,  and  is then  routed to  the
     @SRVxxxx modules  for the  JES2 subsystem  "xxxx" under  which HOB  is
     executing.
0        Sample procedure JCL:
0      //HOB PROC PDS='sys1.jobjcl',NAME=help,RESTART=,PICK=,DAY=,TEST=IN,
       //             SET=,LIST='DUMMY,',U=,V=
       //*      use:  START HOB,NAME=member   to submit canned job(s)
       //*
       //*      use:  START HOB,NAME=member,PICK=jobname   to submit a
       //*                          single job in the member
       //*      use:  START HOB,NAME=member,RESTART=jobname   to submit
       //*                          the specified and all following jobs.
       //*            use DAY=yyddd to force date specific processing.
       //*            use TEST=NO to bypass jobqueue tests; TEST=ANY to
       //*              suppress submission of jobs already on 'any' queue
       //*              default is TEST=IN, suppresses for dupe on input
       //*    If a start hob does not read anything, check the member for
       //*      //*PICK and //*SKIP cards - some jobs will be submitted
       //*      on specific days (weeks, etc.) only, and will not work
       //*      when started at the wrong time.
       //*
       //IEFPROC EXEC PGM=HOB,PARM='R=&RESTART,P=&PICK,D=&DAY,
       //             T=&TEST &SET'    (hex E0 separator)
       //SYSPRINT DD  &LIST.SYSOUT=A
       //SYSUT1   DD  DDNAME=IEFRDER
       //IEFRDER  DD  DISP=SHR,DSN=&PDS.(&NAME),UNIT=&U,VOL=SER=&V
       //SYSUDUMP DD  SYSOUT=A
       //SYSUT2   DD  SYSOUT=(A,INTRDR)   pre-MVS: UNIT=INTRDR
-
-
-
-
-
-
-
     70
1                        Technical Guide to System Modifications
          Utility Programs                                              HSPMERGE
-         2.2.39   NIH Merge ...........................................HSPMERGE
+         2.2.39   NIH Merge                                            HSPMERGE
+                  ___ _____                                            ________
0         Program  HSPMERGE,  alias  HASPMERG,  allows  for  source (and  MACRO)
          maintenance of multiple change decks against  the same member.   It is
          generally used  for change library  maintenance for  large components,
          e.g., JES2 and WYLBUR.
0         The program was recently modified to update  MACROs in the same run as
          source members by addition of SYSUT3/4  DDs and MACR= instead of NAME=
          on the ./ control cards.
0         The HASP 3.98  Merge program was developed jointly  by Jim Oberthaler,
          National  Institutes of  Health Computer  Center,   and Roger  Fajman,
          WYLBUR Systems Incorporated.
0         Modifications (by G. Postpischil) :
0          LEVEL INSERTION INTO CARDS CORRECTED - NO LONGER INSERTS
                LEVEL INTO WTO STRINGS, ETC.
                ADDS COMMA ON VERY BLANK CARDS (END, MACRO, ETC.)
           ./ SKIP CARDS WITH LEVELS OMITTED SUPERCEDE LOWER LEVELS ONLY
0          NEW FACILITY ADDED :  ./ COPY NAME=
                REQUESTED MEMBERS (INPUT TYPE) ARE ADDED FROM THE
                PDS(S) DEFINED BY INPDS.     EACH MEMBER MUST BE
                COMPLETE IN ITSELF (LEVEL, LOG, CHANGE, ETC.)
                COPY STATEMENTS MAY BE INCLUDED IN OTHER MEMBERS
                PRIOR TO THE FIRST LEVEL/ADD/CHANGE CARD, OR MAY BE
                ADDED ELSEWHERE IF THE SEQUENCE NUMBER IS CORRECT.
0          PGM=HASPMRGE   :   LEVELS PROCESSED IN THE ORDER SUPPLIED
           PGM=HSPMERGE   :   LEVELS PROCESSED IN COLLATING SEQUENCE
0          JCL :
0           // EXEC PGM=HSPMERGE,REGION=512K
            //SYSPRINT DD SYSOUT=A        MERGED OUTPUT LISTING
            //ERRORS   DD SYSOUT=A        ERROR AND MESSAGE LOG
            //SYSUT1 DD DSN=SYS1.HASPSRC,DISP=SHR   LIBRARY TO BE UPDATED
            //SYSUT2 DD DSN=SYS1.HASPNEW,DISP=(,KEEP)...  NEW LIBRARY
            //WORK  DD UNIT=SYSDA,SPACE=(CYL,(1,1),RLSE,CONTIG) INPUT COPY
            //INPDS DD DSN=SYS1.HASPMODS,DISP=SHR LIBRARY OF MODIFICATIONS
            //SYSIN DD          ONE OR MORE SEQUENTIAL DISK DATASETS
                                MAY BE UNLIKE, CONCATENATED, ETC.
                              WILL BE COPIED TO 'WORK' FOR PROCESSING
            ./    COPY  NAME=HASPMODS  USE CHANGES IN MEMBER HASPMODS
                          IN INPDS DATASET (MAY CONTAIN OTHER COPY STMTS)
            ./    LEVEL NEWSTUFF    TEMPORARY MODS
            ./    ADD/CHANGE      CONTROL/UPDATE CARDS PROPERLY SEQUENCED
0           A SUCCESSFUL RUN SHOULD BE FOLLOWED BY AN IEBCOPY FROM THE
                OLD PDS TO THE NEW PDS IF SYSUT2 IS TO BE USED FOR
                ASSEMBLIES - IT'S EASIER THAN TRYING TO CONCATENATE
                MACLIBS AND SWITCHING BETWEEN TWO SYSINS ON SUBSEQUENT
0                                                                             71
1                   Technical Guide to System Modifications
     HSPMERGE                                              Utility Programs
-          ASSEMBLIES.
0      ./    NUMBER NEW1=SEQ,INCR=NUM   HEADER FOR UNNUMBERED CARDS
       ./    INSERT SEQ1=SEQ,NEW1=SEQ,INCR=NUM   DITTO
0    UNNUMBERED CARDS MAY BE USED FOLLOWING  A SKIP AND DELETE CARD,  (WITH
     DEFAULT INCR OF 1),  OR AN EXPLICIT  NUMBER OR INSERT CARD NEW1,  SEQ1
     MAY BE OMITTED (DEFAULT TO 73/80 SEQ  - 1);  INCR DEFAULTS TO 1.   ALL
     SEQUENCES  MAY BE  ALPHAMERIC,  BUT  INCREMENTED  POSITIONS SHOULD  BE
     NUMERIC (NOT CHECKED).
0    SUPPORT FOR MACRO LIBRARY ADDED (SYSUT3=>SYSUT4; USE ADD/CHG
           MACR= INSTEAD OF NAME=).  THIS CHANGE ALLOWS PARALLEL
           MACRO AND SOURCE CHANGES IN THE SAME UPDATES.
-
-
-
-
-
-
-
-
-
-
-
-
-
-    72
1                        Technical Guide to System Modifications
          Utility Programs                                                IEBPDS
-         2.2.40   PDS Directory Lister ................................IEBPDS
+         2.2.40   PDS Directory Lister                                 IEBPDS
+                  ___ _________ ______                                 ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              73
1                   Technical Guide to System Modifications
     IEHVTOC                                               Utility Programs
-    2.2.41   VTOC and PDS Lister .................................IEHVTOC
+    2.2.41   VTOC and PDS Lister                                  IEHVTOC
+             ____ ___ ___ ______                                  _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     74
1                        Technical Guide to System Modifications
          Utility Programs                                                JOBWTR
-         2.2.42   MVT External Writer .................................JOBWTR
+         2.2.42   MVT External Writer                                  JOBWTR
+                  ___ ________ ______                                  ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              75
1                   Technical Guide to System Modifications
     LOADFIX                                               Utility Programs
-    2.2.43   EXEC and Page-fix ...................................LOADFIX
+    2.2.43   EXEC and Page-fix                                    LOADFIX
+             ____ ___ ________                                    _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     76
1                        Technical Guide to System Modifications
          Utility Programs                                              LOADMAPS
-         2.2.44   Build LKED Control Cards ............................LOADMAPS
+         2.2.44   Build LKED Control Cards                             LOADMAPS
+                  _____ ____ _______ _____                             ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              77
1                   Technical Guide to System Modifications
     LOADZAP                                               Utility Programs
-    2.2.45   ZAP and EXEC Program ................................LOADZAP
+    2.2.45   ZAP and EXEC Program                                 LOADZAP
+             ___ ___ ____ _______                                 _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     78
1                        Technical Guide to System Modifications
          Utility Programs                                               MAPDISK
-         2.2.46   VTOC Lister .........................................MAPDISK
+         2.2.46   VTOC Lister                                          MAPDISK
+                  ____ ______                                          _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              79
1                   Technical Guide to System Modifications
     MCPINIT                                               Utility Programs
-    2.2.47   WYLBUR Initialization ...............................MCPINIT
+    2.2.47   WYLBUR Initialization                                MCPINIT
+             ______ ______________                                _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     80
1                        Technical Guide to System Modifications
          Utility Programs                                                 MICRO
-         2.2.48   Microfiche Writer ...................................MICRO
+         2.2.48   Microfiche Writer                                    MICRO
+                  __________ ______                                    _____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              81
1                   Technical Guide to System Modifications
     MICROJOB                                              Utility Programs
-    2.2.49   Microfiche External Writer ..........................MICROJOB
+    2.2.49   Microfiche External Writer                           MICROJOB
+             __________ ________ ______                           ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     82
1                        Technical Guide to System Modifications
          Utility Programs                                              MICROSUB
-         2.2.50   Microfiche Subroutine ...............................MICROSUB
+         2.2.50   Microfiche Subroutine                                MICROSUB
+                  __________ __________                                ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              83
1                   Technical Guide to System Modifications
     MIGRATE                                               Utility Programs
-    2.2.51   Move Dataset Groups .................................MIGRATE
+    2.2.51   Move Dataset Groups                                  MIGRATE
+             ____ _______ ______                                  _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     84
1                        Technical Guide to System Modifications
          Utility Programs                                               MIMSTOW
-         2.2.52   Process Michigan Mods Tape ..........................MIMSTOW
+         2.2.52   Process Michigan Mods Tape                           MIMSTOW
+                  _______ ________ ____ ____                           _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              85
1                   Technical Guide to System Modifications
     MVTDEBE                                               Utility Programs
-    2.2.53   Operator Print/Copy Functions .......................MVTDEBE
+    2.2.53   Operator Print/Copy Functions                        MVTDEBE
+             ________ __________ _________                        _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     86
1                        Technical Guide to System Modifications
          Utility Programs                                              NISRELSE
-         2.2.54   Sequential Job Release ..............................NISRELSE
+         2.2.54   Sequential Job Release                               NISRELSE
+                  __________ ___ _______                               ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              87
1                   Technical Guide to System Modifications
     NIS0HALT                                              Utility Programs
-    2.2.55   Automatic System Shut-down ..........................NIS0HALT
+    2.2.55   Automatic System Shut-down                           NIS0HALT
+             _________ ______ _________                           ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     88
1                        Technical Guide to System Modifications
          Utility Programs                                              NIS0UJVT
-         2.2.56   IEFUJV Tester .......................................NIS0UJVT
+         2.2.56   IEFUJV Tester                                        NIS0UJVT
+                  ______ ______                                        ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              89
1                   Technical Guide to System Modifications
     OSRIPPLE                                              Utility Programs
-    2.2.57   On-line Printer Exerciser ...........................OSRIPPLE
+    2.2.57   On-line Printer Exerciser                            OSRIPPLE
+             _______ _______ _________                            ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     90
1                        Technical Guide to System Modifications
          Utility Programs                                              OVLYTREE
-         2.2.58   Overlay Control Card Builder ........................OVLYTREE
+         2.2.58   Overlay Control Card Builder                         OVLYTREE
+                  _______ _______ ____ _______                         ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              91
1                   Technical Guide to System Modifications
     POD                                                   Utility Programs
-    2.2.59   PDS Print/Punch .....................................POD
+    2.2.59   PDS Print/Punch                                      POD
+             ___ ___________                                      ___
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     92
1                        Technical Guide to System Modifications
          Utility Programs                                               PODHELP
-         2.2.60   PDS Print/Punch .....................................PODHELP
+         2.2.60   PDS Print/Punch                                      PODHELP
+                  ___ ___________                                      _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              93
1                   Technical Guide to System Modifications
     PRINTALL                                              Utility Programs
-    2.2.61   Dataset Lister ......................................PRINTALL
+    2.2.61   Dataset Lister                                       PRINTALL
+             _______ ______                                       ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     94
1                        Technical Guide to System Modifications
          Utility Programs                                                PROCUP
-         2.2.62   PROCLIB Update ......................................PROCUP
+         2.2.62   PROCLIB Update                                       PROCUP
+                  _______ ______                                       ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              95
1                   Technical Guide to System Modifications
     PUNK                                                  Utility Programs
-    2.2.63   PDS & DS Print/Punch ................................PUNK
+    2.2.63   PDS & DS Print/Punch                                 PUNK
+             ___ _ __ ___________                                 ____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     96
1                        Technical Guide to System Modifications
          Utility Programs                                               RELEASE
-         2.2.64   DASD Space Release ..................................RELEASE
+         2.2.64   DASD Space Release                                   RELEASE
+                  ____ _____ _______                                   _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              97
1                   Technical Guide to System Modifications
     SAMSGREF                                              Utility Programs
-    2.2.65   Message Cross-Reference .............................SAMSGREF
+    2.2.65   Message Cross-Reference                              SAMSGREF
+             _______ _______________                              ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     98
1                        Technical Guide to System Modifications
          Utility Programs                                              SAVETAPE
-         2.2.66   Tape Copy ...........................................SAVETAPE
+         2.2.66   Tape Copy                                            SAVETAPE
+                  ____ ____                                            ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                              99
1                   Technical Guide to System Modifications
     SCRATCHS                                              Utility Programs
-    2.2.67   DASD Scratch ........................................SCRATCHS
+    2.2.67   DASD Scratch                                         SCRATCHS
+             ____ _______                                         ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     100
1                        Technical Guide to System Modifications
          Utility Programs                                               SEEKMON
-         2.2.68   DASD Access Monitor .................................SEEKMON
+         2.2.68   DASD Access Monitor                                  SEEKMON
+                  ____ ______ _______                                  _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             101
1                   Technical Guide to System Modifications
     SERIAL                                                Utility Programs
-    2.2.69   Serialize Decks .....................................SERIAL
+    2.2.69   Serialize Decks                                      SERIAL
+             _________ _____                                      ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     102
1                        Technical Guide to System Modifications
          Utility Programs                                              SLANALYZ
-         2.2.70   Tape Label Analysis/Copy ............................SLANALYZ
+         2.2.70   Tape Label Analysis/Copy                             SLANALYZ
+                  ____ _____ _____________                             ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             103
1                   Technical Guide to System Modifications
     SMFDUMP                                               Utility Programs
-    2.2.71   SMF Dump & Switch ...................................SMFDUMP
+    2.2.71   SMF Dump & Switch                                    SMFDUMP
+             ___ ____ _ ______                                    _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     104
1                        Technical Guide to System Modifications
          Utility Programs                                              SMFMERGE
-         2.2.72   SMF Merge ...........................................SMFMERGE
+         2.2.72   SMF Merge                                            SMFMERGE
+                  ___ _____                                            ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             105
1                   Technical Guide to System Modifications
     SMFSELCT                                              Utility Programs
-    2.2.73   SMF Extraction ......................................SMFSELCT
+    2.2.73   SMF Extraction                                       SMFSELCT
+             ___ __________                                       ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     106
1                        Technical Guide to System Modifications
          Utility Programs                                              SMFSTATS
-         2.2.74   SMF Statistics ......................................SMFSTATS
+         2.2.74   SMF Statistics                                       SMFSTATS
+                  ___ __________                                       ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             107
1                   Technical Guide to System Modifications
     SMFTERMS                                              Utility Programs
-    2.2.75   SMF Terminal Statistics .............................SMFTERMS
+    2.2.75   SMF Terminal Statistics                              SMFTERMS
+             ___ ________ __________                              ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     108
1                        Technical Guide to System Modifications
          Utility Programs                                              SMFXTRCT
-         2.2.76   SMF Extraction ......................................SMFXTRCT
+         2.2.76   SMF Extraction                                       SMFXTRCT
+                  ___ __________                                       ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             109
1                   Technical Guide to System Modifications
     STEPSEP                                               Utility Programs
-    2.2.77   Big Letters on JCL ..................................STEPSEP
+    2.2.77   Big Letters on JCL                                   STEPSEP
+             ___ _______ __ ___                                   _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     110
1                        Technical Guide to System Modifications
          Utility Programs                                              TAGCOBOL
-         2.2.78   COBOL Resequencing ..................................TAGCOBOL
+         2.2.78   COBOL Resequencing                                   TAGCOBOL
+                  _____ ____________                                   ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             111
1                   Technical Guide to System Modifications
     TAPEMARK                                              Utility Programs
-    2.2.79   Operator WTM ........................................TAPEMARK
+    2.2.79   Operator WTM                                         TAPEMARK
+             ________ ___                                         ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     112
1                        Technical Guide to System Modifications
          Utility Programs                                              TESTSD95
-         2.2.80   IEFSD095 Tester .....................................TESTSD95
+         2.2.80   IEFSD095 Tester                                      TESTSD95
+                  ________ ______                                      ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             113
1                   Technical Guide to System Modifications
     TMSBACKS                                              Utility Programs
-    2.2.81   CCSI TMS DASD Lister ................................TMSBACKS
+    2.2.81   CCSI TMS DASD Lister                                 TMSBACKS
+             ____ ___ ____ ______                                 ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     114
1                        Technical Guide to System Modifications
          Utility Programs                                              TMSULIST
-         2.2.82   CCSI TMS Lister .....................................TMSULIST
+         2.2.82   CCSI TMS Lister                                      TMSULIST
+                  ____ ___ ______                                      ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             115
1                   Technical Guide to System Modifications
     UCBPRINT                                              Utility Programs
-    2.2.83   UCB Lister ..........................................UCBPRINT
+    2.2.83   UCB Lister                                           UCBPRINT
+             ___ ______                                           ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     116
1                        Technical Guide to System Modifications
          Utility Programs                                               VARLINK
-         2.2.84   Variable Link-Edit ..................................VARLINK
+         2.2.84   Variable Link-Edit                                   VARLINK
+                  ________ _________                                   _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             117
1                   Technical Guide to System Modifications
     WYLCLEAN                                              Utility Programs
-    2.2.85   WYLBUR DASD Maintenance .............................WYLCLEAN
+    2.2.85   WYLBUR DASD Maintenance                              WYLCLEAN
+             ______ ____ ___________                              ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     118
1                        Technical Guide to System Modifications
          Utility Programs                                               WYLCOMP
-         2.2.86   WYLBUR Compress .....................................WYLCOMP
+         2.2.86   WYLBUR Compress                                      WYLCOMP
+                  ______ ________                                      _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             119
1                   Technical Guide to System Modifications
     WYLDCOMP                                              Utility Programs
-    2.2.87   WYLBUR Decompression ................................WYLDCOMP
+    2.2.87   WYLBUR Decompression                                 WYLDCOMP
+             ______ _____________                                 ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     120
1                        Technical Guide to System Modifications
          Utility Programs                                              WYLPASWD
-         2.2.88   WYLBUR Password Lister ..............................WYLPASWD
+         2.2.88   WYLBUR Password Lister                               WYLPASWD
+                  ______ ________ ______                               ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             121
1                   Technical Guide to System Modifications
     WYLVTOC                                               Utility Programs
-    2.2.89   WYLBUR VTOC & PDS Lister ............................WYLVTOC
+    2.2.89   WYLBUR VTOC & PDS Lister                             WYLVTOC
+             ______ ____ _ ___ ______                             _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     122
1                        Technical Guide to System Modifications
          Utility Programs                                              YALECOMP
-         2.2.90   Deck Compare Program ................................YALECOMP
+         2.2.90   Deck Compare Program                                 YALECOMP
+                  ____ _______ _______                                 ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             123
1                   Technical Guide to System Modifications
     YALECOMP                                              Utility Programs
-    2.3   SERVICE ROUTINES
+    2.3   SERVICE ROUTINES
+          _______ ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     124
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-         2.3.1   Service Routines .....................................@SERVICE
+         2.3.1   Service Routines                                      @SERVICE
+                 _______ ________                                      ________
0         To use  the @SERVICE  routine in any  environment,  providing  the SVC
          interface  is available,   code  a SERVICE  macro  for the  applicable
          function.  This  method is less efficient  than calling @SERVICE  as a
          subroutine, hence should be used only when mandated by the environment
          (see the  reference to  TCBFSA later  on in  this section).    For the
          routine task,  macro SERVINIT is used  to initialize the interface and
          to  include  appropriate  mapping  code (see  SERVFLAG  in  the  MACRO
          section).  The inclusion  of mapping equates is optional,   and may be
          suppressed;  when the mapping is not suppressed, then SERVINIT must be
          used prior to other SERVCALL macros.  Any module containing a SERVxxxx
          type macro  must be  logically and physically  preceded by  a SERVINIT
          macro.   A  program using SERVINIT should  be terminated by  using the
          SERVTERM  macro.   SERVTERM  closes files  opened  through  controlled
          facilities (routines  starting with @);   causes gotten storage  to be
          freed;   and results  in deletion  of loaded  modules.   For  programs
          terminating with explicit ABENDs,  SERVTERM or PRTCLOSE should be used
          to get  print buffers processed;   otherwise a critical  error message
          might be overlooked in the dump, or not appear at all if no dump DD is
          supplied.
0         To use the SERVCALL macros, you need to define a full-word field named
          @SERVICE in your program.  This value is set by using a SERVINIT macro
          (no  operands).  SERVINIT  loads  the @SERVICE  routine  and sets  its
          address into @SERVICE. The macro also forces expansion of the SERVFLAG
          definitions used by SERVCALL.  If @SERVICE is not available as an SVC,
          then the program  must include a macro  expansion for the CVT  and the
          CDE:
                   CVT   DSECT=YES
                   IHACDE ,
0         Use of  the @SERVICE  routine is terminated  with the  SERVTERM macro.
          See the CLOSE operand for further details.
0         The @SERVICE routine,  and many  related programs (e.g.,  the @PRINTER
          routine) avoid GETMAINs.  This is accomplished by doing a GETMAIN once
          when  the function  is initialized,   and  using the  gotten area  for
          subsequent calls.  Areas  gotten in this fashion  are chained together
          using the high word of the task's save area pointed to by TCBFSA.
0         For tasks  where TCBFSA  is not  available or  may not  be used,   the
          SERVICE macro may be used.  SERVICE invokes the @SERVICE routine as an
          SVC,  providing that the global parameter &SVC@SVC has been set to the
          SVC number (255 on CCSI's MVS system). Note that a number of functions
          return pointers to return areas (e.g.,  DSABB);  when the SVC is used,
          the area  pointed to  is freed,  and  attempts to  use the  result may
          result  in abends.   The  detailed discussion  of  the functions  will
          describe those that may not be called as an SVC.
0         The general CALL convention is:
0            name SERVCALL function,parmÝ,LEN=¨,ÝERR=|CC0=|CC4=|CC8=¨
-                                                                            125
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-    where the function  name is always five characters;   the parameter or
     its address will be loaded into register 1.   LEN= defines an optional
     length to be loaded into the high  byte of register 1;  the value must
     be valid inside an AL1().  Registers 14, 15 and 0 are used to pass the
     function code  with a  standard OS subroutine  call;  for  the SERVICE
     call, only R0 is used to pass the function code.   ERR= may be used to
     set and  reset an assembly-time global  error exit,  invoked by  a BXH
+                                    ______
     generated as part of the macro expansion.  When ERR= is not used, CC0,
     CC4, and CC8 may be used as local branch addresses. When none of these
     are used, the condition code is not defined.
0    In general, @SERVICE sets a return code in register 15, and may return
     other values in  registers 0 and 1.   Register 15 is generally  set to
     zero when the request completed satisfactorily,   to four when a minor
     problem occurred,  an eight or twelve  for more severe errors,  and to
     sixteen when a major error is detected (e.g., failed GETMAIN,  invalid
     parameter address).
0    The calling parameters for the SVC are similar,  except that the macro
     name  is SERVICE,   and the  CLOSE function  is used  to initialize  a
     permanent work area as though SERVINIT  had been used.  Note that this
     does not cause inclusion of required COPY and MACRO code that SERVINIT
     handles. The INITG function is useless with the SVC entry.
0    The @SERVICE routine is normally resident in PLPA,  and is re-entrant.
     When variable &SVC@SVC in macro SYSPARM is set non-zero, @SERVICE will
     contain an additional entry point for a type 4 SVC, e.g.,  if &SVC@SVC
     is set to 255, entry name IGC0025E would be expanded.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | CLOSE                                           |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This entry frees  storage obtained within @SERVICE,   and issues CLOSE
     (or other termination  calls)  to any known  (related)  modules loaded
     with the LPALD function.
0
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | CLOSE                                           |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     When  CLOSE is  used  with the  SVC  entry,  it  is  a special  signal
     'closing' SVC use;  it returns the  address of the @SERVICE routine in
     R0.   The user is expected to store this value in a full-word labelled
     @SERVICE,   addressable from  all SERVxxxx  expansions,   and use  the
     SERVCALL macro for subsequent calls, not the SVC. The work area is not
     freed by the SVC, and TCBFSA availability is required.
-
-
-    126
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | FREEM                                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This entry acts  as an expensive NOP  for the SVC;  for  @SERVICE,  it
          frees storage  and closes and  deletes everything except  the @PRINTER
          service routine.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | INITG                                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This entry  loads the @PROTECS  subroutine,  and  GETMAINs substantial
          storage (100K to 800K).  The entire  WYLBUR PASSWORD dataset is placed
          into storage for extremely rapid access for batched validity checking.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | LPALD,name-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This entry causes a search for the requested module in the MLPA,  then
          the PLPA.  If not found,  a LOAD is issued.  At DTS,  the addresses of
          IGPACCT and IGPVOLT are obtained from the User CVT extension.
0         R1 points to the  CL8 name of a module to be  loaded.  For modules not
          known to be special, LPALD returns the load address, but does not keep
          track of the module. For special modules, currently including IGPACCT,
          IGPVOLT, @PROTECS, @CATREAD, @DCBEXIT, @INPREAD,  @OBTAINS,  @TMSREAD,
          @VOLREAD and @PRINTER,  a module responsibility count is kept.  Unlike
          OS,  @SERVICE supports only a maximum of 127 per module.   The current
          version of  the code does  not check  for excession.   Note  that this
          function may  result in  an abend when  invoked for  a missing  or bad
          module.  R15 is returned as 0 unless  the pointer was zero or @SERVICE
          initialization failed. R0 is set to zero if the LOAD failed. If a LOAD
          was issued,  R0 returns the LOAD address;  for an LPA resident module,
          the X'80' bit is set on in the high byte to indicate LPA residence.
0         Note that this function, if invoked using SERVICE, will load a module;
          however,  the corresponding  control information is lost  upon return,
          and the LPADL function will not  DELETE the module.   An explicit (OS)
          DELETE would need to be issued for modules not in the LPA.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | LPADL,name-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          For modules not known to the program, a DELETE is issued.  For modules
          known to be special,  the responsibility count is decremented for each
          LPADL  call.   When  the  count reaches  zero,   then  any  applicable
          termination calls are issued,  then the  module is DELETEd.  For the @
          modules listed above,   termination includes closing of  all open data
          control blocks, and freeing of all gotten storage.  LPADL is used with
          R1 pointing to the CL8 module name. No return code is set.
-
                                                                             127
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | UCBUM,0|ucb-addr                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | UCBUM,0|ucb-addr                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     Entry UCBUM provides sequential UCB lookup.   When register 1 contains
     zero,  lookup  begins with the  first (lowest named)   UCB;  otherwise
     register 1 is assumed to contain a valid UCB address, and the next UCB
     address in the system is returned.  A  value of zero is returned after
     the last  UCB.   The UCB  address is returned  in register 0  when the
     return code in  register 15 is 0;  the  last UCB is signalled  by 0 in
     register  zero and  8 in  register 15.   A value  of 16  is passed  in
     register 15 when the supplied address is not a valid UCB (e.g.,  a VIO
     UCB).    The subsequent  UCB  lookup routines  use  the same  register
     convention.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | UCBNM,ucbname-addr                              |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | UCBNM,ucbname-addr                              |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     For this function, R1 should point to the name of a UCB to be located.
     When a match is found,  R15 is  returned as zero,  R0 contains the UCB
     address.  If the name is not found,   R15 will contain 8,  and R0 will
     contain 0. If R1 is zero, R15 will return 16 and R0 is undefined.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | UCBVS,volser-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | UCBVS,volser-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     Register  1 should  point to  a  six-byte volume  serial.  UCBVS  then
     returns zero for no match,  or the UCB address of the tape or DASD UCB
     with that serial. Offline devices are not considered.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | UCBDK,volser-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | UCBDK,volser-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     UCBDK performs the  same functions as UCBVS,  but  considers only DASD
     UCBs for processing.
-
-
     128
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | UCBGN,ucb-addr                                  |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | UCBGN,ucb-addr                                  |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          UCBGN returns in  register 1 the address of an  eight-byte string that
          describes the device type corresponding to  the passed address.  R1 on
          entry need not contain a valid UCB address; only the UCBTBYT1-4 fields
          are inspected. Assuming a field
           TYPE DC X'3050200D'  and a SERVCALL UCBGN,TYPE-(UCBTBYT1-UCBOB)
           then the return would  be R1 pointing to CL8'3330-1  ',   the value a
          user would specify on JCL.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | TIOLP,tioentry-addr|0                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | TIOLP,tioentry-addr|0                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function does a TIOT entry lookup.   When it is called with R1=0,
          the first  TIOT entry address  is returned in R0,   and R15 is  set to
          zero.  When R1 is non-zero, it must be a valid TIOT entry address, and
          the next entry  address is returned in  R0,  R15 is set  to zero.   If
          there is no other entry, R15 and R0 are both returned as zero.
0         The returned  address may be copied  to another register,  and  may be
          mapped with USING TIOELNGH,Rx. Macro IEFTIOT1 must be requested.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | TIOLK,tioentry-addr|0                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | TIOLK,tioentry-addr|0                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function  ignores special TIOT  entries,  and otherwise  works as
          TIOLP.  An entry is skipped if the DDNAME is blank (concatenation), if
          it is PGM=*., if it is SYSABEND, SYSUDUMP,  JOBLIB,  STEPLIB,  JOBCAT,
          STEPCAT, xxxPRINT, xxxPUNCH, or SYSTERM. Entries for DD DUMMY, SYSOUT,
          TERM=TS, and dynamically allocated catalogs are returned.
+                                                     ___
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | TIODD,ddname-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | TIODD,ddname-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This entry searches for the requested DDNAME (passed via R1); the name
          must be  defined as  an eight-byte string.   R15 is set  to 16  for an
          invalid parameter address,  else R15 is set to zero and R0 returns the
-                                                                            129
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-    TIOT entry address, or zero if it is not found. Note that an all-blank
     DDNAME is not  treated as an invalid request,  but  may give incorrect
     results.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | TIOUA,ucb-addr                                  |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | TIOUA,ucb-addr                                  |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This  function  searches for  a  TIOT  entry  for the  requested  UCB.
     Entries considered for a match must determine only a single UCB,  must
     not  be concatenated,   and  must not  have a  special  DD name  (same
     considerations as the  TIOLK function).   Return codes  and conditions
     are as for TIODD above.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | SORTB,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | SORTB,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This entry performs a bubble (triangular)  sort of the in-storage data
     described by the  sort parameter block passed via R1.   Note that this
     sort is  slow and  inefficient,  and should  be used  only when  it is
     required to keep equal key entries in their original sequence.
0    The sort parameter block may be  mapped or generated with the SERVSORT
     macro.  The first word of the block  contains the address of the first
     entry to be sorted,  the second word contains the number of entries to
     be sorted if it is positive,  else it contains the address of the last
     entry to be sorted  and the X'80' bit on in the  high byte.  The third
     word is  treated as  single byte entries;   the first  byte must  be a
     character C'A' or C'D' for ascending or descending sorting, the second
     byte specifies the  (binary)  offset of the  key from the start  of an
     entry,  the third byte specifies the  key length,  and the fourth byte
     specifies  the entry  length  (<256 bytes).    For  the binary  lookup
     routine  described below,   the user  must add  one more  word to  the
     expansion to pass the address of the key to be located.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | SORTH,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | SORTH,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     The  SORTH function  performs an  in-storage sort  using the  Heapsort
     algorithm discovered by Williams and Floyd,  as adapted from Nijenhuis
     and Wilf in 'Combinatorial Algorithms' (Acad.  Press).
-
     130
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-         This sort should be used whenever the sequence of equal key entries is
          not critical. For a table with more than a thousand entries, SORTH can
          be several hundred times as fast as SORTB.
0         Please note that no provision exists (yet) for multiple key sorts.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | BINLK,parm-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | BINLK,parm-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function performs a binary table  lookup.  The table is specified
          with the  SERVSORT macro,  augmented by  one more word  specifying the
          address of the key  to be located.  Return codes are:    R15=16 for an
          invalid parameter address, R15=4 and R0=0 when no match is found,  and
          R15=0 and R0=entry address for a match.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DVTBL,dcb-addr|calc-addr                        |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DVTBL,dcb-addr|calc-addr                        |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function locates the  device table entry for either a  DCB or the
          unit specified by a TRKCALC (SERVCALC)  control block expansion.  When
          the X'80' bit in  R1 is on,  the address is taken to  be a DCB address
          for an open DCB  (no check is made);  otherwise the  address should be
          for a parameter  list matching that defined for  the TRKCALC function.
          An invalid parameter  address results in a  return code of 16  in R15,
          otherwise the device table entry address is  passed in R0,  and R15 is
          set to 0 if the address was obtained from the system table (IECZDTAB),
          or to  4 if  the address  is for  a device  supported by  the @SERVICE
          routine, but not generated in the running system.
0         The contents  of a device entry,   and IECZDTAB,  are mapped  by macro
          IHADVCT, a modified copy of which is distributed on ESPDTR.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DVCAP,calc-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DVCAP,calc-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function duplicates that of TRKCALC,  and is provided in @SERVICE
          for Operating System releases not supporting TRKCALC,  and for support
          of devices not  generated in the current system.    The SERVCALC macro
          may be used  the way TRKCALC is documented,  and  will perform similar
          functions.  The user may expand the work area manually, use TRKCALC or
          SERVCALC  MF=D to  provide a  mapping,   and call  the DVCAP  function
          directly.
0                                                                            131
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-    Note that IBM changed the format of the device entries for Fixed Block
     devices;  the new entry has a two-byte modulus field at the end of the
     entry,  the old format used one byte.  DVCAP relies on the new format,
     and may abend with an old entry.
0    The basic mapping for the work area specifies:
      STARUCBA - a full-word UCB address for a DASD device (2006-200E)
        or STARDCTA - full-word address of the device table entry
        or XL3'0' plus one byte device subtype (06-0E)
      STARFLGS - function and flag bytes
        X'80' STARFUNC off:track balance; on:track capacity requested
        X'40' STARMAXS maximum size requested
        X'20' STARREMV calculate residuals after removing last record
        X'10' STARUBAL current track balance has been provided
        X'08' STARLAST use ISAM style last record/track calculation
                  (note that this applies only to 2314s and older
                   devices)
        X'06' STARDTU  caller has provided the device type in STARTYPE
        X'04'          the UCB address has been provided in STARUCBA
        X'02'          ...reserved...
        X'00'          the device table entry address is in STARDCTA.
          The STARDTU flags must correspond to the contents of field
          (STARDCTA/STARUCBA/STARTYPE)
      STARBAL  track balance after request; balance before request may
                  be set if STARUBAL is turned on. This field is in
                  unsigned halfword format, and may appear to be negative
                  for 3375/3380 devices.
      STARRKDD the last four bytes of a count field, redefined as
      STARR    current record number
      STARKL   key length
      STARDL   data length (unsigned halfword format).
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DVEXT,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | DVEXT,parm-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function  calculates the number of  tracks defined by a  table of
     contiguous DASD extent  entries,  or from the in-storage  address of a
     format 1 and 3 DSCB. The parameter area consists of three words:
      type information - device table entry if X'80' is turned on,
              device type if < 256, else UCB address.
      words 2/3 - address of format 1 and format 3 (format 3 address
              may be zero),
      or X'80' on in word 2, in which case word 2 has address of a
              set of contiguous entries of length 10, and word 3 has
              the number of entries.
0    Note that the number of extents is not determined by DS1NOEPV;  when a
     dataset is allocated  with user labels,  the label extent  is added as
     the first entry in the format 1 DSCB,  but is not counted in DS1NOEPV.
-    132
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-         The  DVEXT  function   will  treat  an  all  zero   extent  as  normal
          termination,   overriding the  supplied count.    For  the format  1/3
          convention, DS1NOEPV is ignored.
0         R15 is set to 16 for a  bad parameter list.  For an invalid,  non-zero
          extent,  R15 is set to 8,  R0 to the number of tracks counted prior to
          the bad extent, and R1 pointing to the (first) extent in error.   When
          all extents  are valid,   R15 will contain  0,  and  R0 the  number of
          tracks.  R15  will be  set to  4 if a  format 3  was required  but not
          supplied,  and  when an all  zero entry is  found before the  count is
          exhausted.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DVSPC,parm-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DVSPC,parm-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function performs DASD space  calculations,  and requires a three
          word parameter  area.  The first word  of the area specifies  the UCB,
          type or device table entry as described for DVEXT; word two contains a
          flag byte,  followed  by three bytes containing  the amount requested.
          For an 'Average Block' request, the third word contains the blocksize.
0         The required space is returned in R0,  with R15 set to zero.   R15 may
          be set to 8 or 16 for invalid requests.
0         The supported functions,  determined by the  first byte in word2,  are
          mapped by JFCBCTRI field values defined in macro IEFJFCBN:
           X'C0' JFCBCYL supplied value is in cylinders, return as tracks
           X'80' JFCBTRK supplied value is in tracks, return as tracks
           X'40' JFCBAVR supplied value is in number of blocks, the third
                    word contains the average blocksize, return as tracks
           X'FF' (special) supplied value is in tracks, return number of
                    whole cylinders required (i.e., rounded up).
0         Note that  no warning  is given  if the  specified number  exceeds the
          device capacity.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | SCHFR                                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This  function is  the last  one  called of  the Cross-Memory  Service
          routines.  Normal sequence is SCHIN to  obtain space in CSA,  SCHMV to
          copy the program and data to CSA,  SCHED to pass the ASID and schedule
          an SRB,  then SCHFR to free the CSA.   Note that SCHIN issues an ESTAE
          that  is only  freed  by SCHFR.    The ESTAE  exit  schedules the  CSA
          FREEMAIN code in SCHFR, then returns control to the user with R15=4 if
          the error is in SCHED (while waiting for SRB completion),  else a user
          abend 999 is issued.
-
                                                                             133
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | SCHIN,length                                    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function is the first one called for Cross-Memory services.   The
     parameter passed  in R1  (register or  length value,   not label  of a
     location  containing the  length)   specifies  the amount  of  storage
     required in  CSA for  execution of  the user's  code.   See  below for
     details.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | SCHMV,address length                            |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function  moves the user's pattern  code and data,   beginning at
     "address" with a length of "length" to the gotten CSA space.   This is
     optional (the user  could obtain the appropriate storage  key and move
     the data), but convenient.  At later times, data may be moved from CSA
     without special processing (not FETCH  protected),  but moving data to
     the CSA requires key zero.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | SCHED,asid                                      |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This entry  schedules the SRB  to execute the  user's CSA code  in the
     address space identified by its id.  A zero return code is issued when
     the SRB completes;  a return code of  eight indicates a failure of the
     SCHEDULE request (ASID no longer valid,   etc.).   Note that the SCHED
     entry may be called  more than once for the same  or different address
     spaces without intervening SCHIN or SCHMV calls.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | ACGET,result-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | ACGET,result-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local function obtains the account  number and privileges for the
     calling task (note that the result is misleading for CICS,  WYLBUR and
     similar multi-user processes).
0    The  result address  passed  will be  set to  the  8-byte account  and
     subaccount entry.   The low byte  of R0 will  be set to  the account's
     privileges.  For a task with a JMR,   the JMRUSEID field is assumed to
     contain the account (set by JES2);  if there is no JMR,  the code will
     try to locate the $JCT (and the JCTACCTN field) if the current task is
     running under the  primary JES2 subsystem.  When neither  is the case,
     the unprivileged system overhead number  is returned,  and flag VAASTC
     is set to indicate that the default number was used.  Other flags that
     may be set are VAAINH for in-house users, VAASUP for technical support
     staff,  VAASYS for systems staff,  and  VAAOHD for other overhead.  If
     none of these applies, then VAAUSER is set. All VAA flags are expanded
     by member SERVFLAG, which is included by SERVINIT by default.
0    134
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ACTST,acct-addr Ý,LEN=4|,LEN=8¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | ACTST,acct-addr Ý,LEN=4|,LEN=8¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          The ACTST function  performs a validity check on  the supplied account
          number. The default of LEN=8 specifies the length to be checked; LEN=4
          should  be used  only when  the  subaccount number  is not  available.
          Account numbers in  external and internal format  are considered valid
          by this  function (internal  format uses  a digit  as the  first byte,
          external  format the  corresponding  alphabetic  character.  Digits  1
          through 9 are equivalent to A through I, and Z is used for 0).
0         R15 returns 16 if the parameter address is invalid.  R15 returns 8 for
          a disabled or unassigned account,  a reason code is placed in R0,  and
          is mapped by VRxxxx flags (e.g.,   VRACCT - invalid account,  VRSYNT -
          syntax error).   R15 is returned as 0  (valid)  or 4 (valid,  no batch
          runs)  for enabled accounts,  and R0 will contain an internal,  binary
          form of the account  number in the high two bytes,   and the privilege
          flags (discussed under  ACGET)  in the low byte.    The internal value
          produces a unique half-word for each four-byte account number,  and is
          used  for SYS1.USERPROC  SSI maintenance.   The  low two  bytes of  an
          account must be numeric, producing a value of 0 to 99; the second byte
          is alphabetic or numeric, and is converted using 100 for 1, 200 for 2,
          1000 for A,  up to 3500 for Z;  the first digit is multiplied by 3600,
          yielding numbers in the range 0 to 35999.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ACTSM,acct-addr Ý,LEN=8|,LEN=4¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | ACTSM,acct-addr Ý,LEN=8|,LEN=4¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function converts the supplied  account number to internal EBCDIC
          form,  writes the resulting 4 or 8 bytes back to the user's area,  and
          invokes  the ACTST  function,  described  previously,   to return  the
          internal binary form of the account, and the privilege flags.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ACCON,acct-value                                |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | ACCON,acct-value                                |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This local function converts the internal,   binary form of an account
          number into  the internal  EBCDIC equivalent.  R15  is returned  as 16
          unless the supplied  value is in the  range 0 to 35999.   The returned
          account is placed in R0,  with the first character a numeric (internal
          form).
-
                                                                             135
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | ACCNX,acct-value                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | ACCNX,acct-value                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local  function performs as ACCON,   except that the R0  value is
     returned in  external EBCDIC (dataset  name)  format,  with  a leading
     character (Z, A-I).
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | FMTAC,acct-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local  function checks the  syntax,  but  not the status,   of an
     account. R0 will be set to a result area of the form:
      X - return byte / account privileges as set by ACGET (exc. STC)
      CL8 - account number in internal EBCDIC form (numeric first byte)
      CL8 - userid :    eight bytes for WYLBUR (local)
                        seven bytes+one blank for TSO
                        all blank, e.g., for FMTAC
0    This area is also  used by the functions described below.   Due to the
     location of this area,  these functions may not be used with a SERVICE
     call.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | FMTLB,dsname-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local  function extracts the  account prefix from  datasets under
     the assumption that they are in the format used for controlled library
     storage (volume serials of LIBPAx). Return is as for FMTAC, except for
     the additional error return indicating a bad (dataset name) index.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | FMTWY,dsname-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local function extracts the account number and WYLBUR userid from
     the passed  string,  under the  assumption that  it is a  dataset name
     valid for WYLBUR use. Index levels are checked, but the userid is not.
     Return codes are as described for FMTAC and FMTLB.
-
-
-
-
     136
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DSTST,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DSTST,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function  validity checks  the form of  a presumed  dataset name,
          under the  assumption that  it is not  the name  of a  Generation Data
          Group entry with flipped zone bits in the last level of the name.  The
          LEN=  operand may  be used  to specify  that  the area  supplied as  a
          parameter is shorter than 44 bytes.  The return codes produced by this
          function (with  R15=8 or 16)  are  mapped by VRxxxx codes  expanded by
          SERVFLAG.  A  syntactically valid name  (catalogable)  will  produce a
          return code of zero, with two exceptions.  When the name is unindexed,
          e.g., PASSWORD,  SYSCTLG or SHORTDSN,  the return code is set to four.
          For a local copy of @SERVICE, R15 is set to 0, and R0 to VRNWYL,  when
          the  high-level  index is  a  supported  WYLBUR dataset  index;   this
          indicates to the  caller that a WYLBUR name check  may be appropriate.
          Due to this return, the caller should check both R15 and R0.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DSCAT,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DSCAT,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function checks  the supplied dataset name for  possible zone bit
          inversion in  a GDG-style  name.  If  the last  level is  of the  form
          GnnnnVnn, and the zone bits are flipped, then a local copy of the name
          is made with  the zones flipped back  to valid EBCDIC form.   The code
          then finishes as described for DSTST above.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DSABB,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function, when no errors are diagnosed, returns in R1 the address
          of an  eight-byte field containing a  shortened version of  the passed
          dataset name.  Because of this return, the function should not be used
          with a SERVICE call.
0         For an invalid address parameter, R1 is left as is, and R15 set to 16.
          Under all other conditions R1 is set to a return address;  for a major
          error, R1 will point to CL8' BAD DSN', and R15 will be set to 8,  with
          R0 containing the reason code.  Normal return  has R15 and R0 equal to
          zero, and R1 pointing to:
0            1.  The last or only level of the  name,  if the name has one or
                 no   index  levels   (e.g.,    PASSWORD  returns   PASSWORD,
                 SYS5.PROCLIB returns  PROCLIB ).  The  last level  is always
                 returned at CCSI.
-
                                                                             137
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-       2.  For datasets with exactly three levels,  other than with the
            local assembly option,  the middle  level is returned (e.g.,
            USER.PROJECT.DATA returns PROJECT ).
0       3.  The last level when more than three levels are found, unless
            the dataset name has the form  of a system created temporary
            name.    For  a  temporary name,   the  return  includes  an
            ampersand  (e.g.,    SYS87123.T012345.RA000.@SERVICE.LOADSET
            yields &LOADSET).
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSDS1,voldsn-addr Ý,LEN=¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSDJ1,jfcb-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function issues a system OBTAIN call. R15 is returned as received
     from OBTAIN,  thus a request for the  VTOC name may result in a return
     code of zero or eight, depending on the operating system level.  R1 is
     set to the work  area receiving the DSCB,  hence the  SERVICE call may
     not be used.
0    The DSDS1  form may be  used when the  volumer serial (CL6),   and the
     dataset name (CL1-44) are contiguous. The DSDJ1 entry is used when the
     JFCB is available.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSFMT,jfcb-dsorg-addr|dscb1-dsorg-addr          |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function  converts the common  DSCB/JFCB DCB related  values from
     internal to  printable form.  Unless  the supplied address  is invalid
     (return with R15=16), R1 will be pointed at an output area containing:
      CL3 DSORG - dataset organization
      CL6 RECFM - record format
      CL8 OPTCD - processing options
      CL5 BLKL  - blocksize
      CL5 LRECL - record length (may be CL5'X' for long spanned)
0    Due to the use of a return area, the SERVICE call may not be used.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSMEM,member-name-addr Ý,LEN=¨                  |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | DSMEM,member-name-addr Ý,LEN=¨                  |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function performs syntax checks on  an intended member name.  The
     checks are similar  to those performed for an  unindexed dataset name,
     except that a value of X'C0' is  permitted for the eighth character of
     the name. This permits use of SVC names, which are kept in SYS1.SVCLIB
     and SYS1.LPALIB with a zoned last digit.
0    138
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | RJFCB,ddname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function,   not available  with SERVICE,   reads a  JFCB for  the
          requested DDNAME. When the JFCB is read correctly, R15 is set to zero,
          and R1 to the address of the JFCB in the work area.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | PDSDE,servpds-addr                              |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | PDSDE,servpds-addr                              |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This  function  is  used  to extract  members  and  member  data  from
          directory blocks.   The address supplied in  R1 corresponds to  a work
          area mapped  or created by SERVPDS;   the RETURN=YES parameter  on the
          macro corresponds  to an  optional return  area which  will not  yield
          useful information with the SERVICE call.  Two fields in the parameter
          block must be completed by the user;  these include the address of the
          current member entry in the directory  block (PDDBXLE),  and a copy of
          the dataset record format in PDDRECFM. The other two fields in PDDBXLE
          are supplied for user  BXLE processing.  The third word is  set to the
          end of the directory block less one;   the second word is set by PDSDE
          to the length of the current directory entry.
0         On return, R0 will be set to the extended return area (useless for the
          SVC entry). Basic information includes type flag (Load-module, WYLBUR,
          IEBUPDTX,  SPF,  none),  and for a load-module the options flags (Main
          member name, SSI, APF, SCTR data present),  offset in the entry to SSI
          and APF, and the length.
0         The extended return  area contains a flag (C'*')  for  an alias entry,
          the member  name (a  trailing X'C0' is  converted to  C'+' for  an SVC
          name), the SSI in printable form (or blanks),  the DATE in CL5 'yyddd'
          form if available from SPF or SSI,  the  APF code in the form AC=n (or
          blank for AC=0),  and the main member name (for load-module alias)  or
          userid (SPF, soon WYLBUR).
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | DSLIB,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | DSLIB,dsname-addr Ý,LEN=¨                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This local  function checks the name  of a dataset for  validity under
          the assumption that the dataset will be placed on a controlled library
          volume (LIBPAx).  Return codes are mapped by VRxxxx, with the addition
          of  VRNWYL (malformed  name)   and  VRACCT (invalid  account  number),
          similar to those issued by DSTST validity checking.
-
0                                                                            139
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSLIX,dsname-addr Ý,LEN=¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | DSLIX,dsname-addr Ý,LEN=¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local function  validity checks the high-level index  of a LIBPAK
     dataset name (the first period in the name is required).  Return codes
     are as for DSLIB.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSWYL,dsname-addr Ý,LEN=¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | DSWYL,dsname-addr Ý,LEN=¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local  function performs full validity  checking on a name  to be
     used with a (dedicated) WYLBUR high-level index,  or to be placed on a
     WYLBUR storage  volume.  The  check includes  the DSTST  syntax check,
     high-level index  test,  account number  validity,  and presence  of a
     WYLBUR  password  record  for  the  account/userid  combination.   The
     password record  is obtained  with the  PROTECT SVC  (containing local
     changes),  or  from a  resident list (if  INITG function  was called);
     volume  WYL001 must  be available  in either  case -  it contains  the
     password dataset. Return codes are as listed for DSLIB.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | WYLDX,index-addr Ý,LEN=¨                        |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | WYLDX,index-addr Ý,LEN=¨                        |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This local function checks a presumed  index against the list of valid
     WYLBUR indices kept in LPA module IGPVOLT.   The period delimiting the
     index level is required unless LEN=3 is used on the call. Return codes
     are set as for DSWYL.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | DSGET,dsname-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
+     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVICE  | DSGET,dsname-addr                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This  local function  converts a  short name  to a  long WYLBUR  name,
     leaves a WYLBUR  name unchanged,  and passes either form  to the DSWYL
     function for validity checking. A short name is defined as a one to 17
     character name  containing at  most one  period.   A  correct name  is
     expanded  only  when the  account  number  has  been placed  into  the
     JMRUSEID field (and  the JMR is available),  and the  WYLBUR userid is
     used as a jobname.
-    140
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-         For a syntactically  valid name,  R1 is returned pointing  to the data
          portion of the password record except  when the SERVICE entry is used,
          and when @PROTECT is  invoked via INITG.  This feature is  used by the
          WYLCOMP dataset compression utility.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | VSNFG,volser-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | VSNFG,volser-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This local function performs a masked lookup of the volumes defined in
          LPA module  IGPVOLT,  and returns the  attribute flags in the  low two
          bytes of R0. R0 is returned as zero when the volume is not found.  The
          passed parameter is taken to be six bytes long.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | VSTMS,volser-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
+          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVICE  | VSTMS,volser-addr                               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This  function  is  used  in  conjunction  with  systems  running  the
          University Computing Company's Tape Management System (UCC-1 TMS).  To
          obtain correct code, the TMS SVC-X and SVC-Y numbers (binary)  must be
          set in member SYSPARM.  R15 is returned  as 16 when the volser address
          is bad, as 8 when the TMS LPA resident module could not be found, as 4
          when the  specified volume  does not have  a TMS name,   and 0  if the
          volume is controlled by TMS (but note  that the status is not checked,
          hence the  volume serial may  be valid,   but correspond to  a deleted
          volume).
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | WCOMP,servcomp-addr                             |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This   function  performs   compression  and   encryption  of   WYLBUR
          edit-format  records.   It uses  a  special  control block  built  and
          initialized by  the SERVCOMP  macro.  R15 will  be set  to 16  when an
          invalid parameter  address is  passed,  or  when one  of the  required
          addresses in the control block is invalid.   R15 will be set to 8, and
          a VRxxxx error code in R0 for expected error conditions (some of these
          may be recoverable).  R15 is returned as 0 when the current line fits,
          R0 may  be set non-zero  for warning  conditions.  When the  buffer is
          full,  R15  is set to 4,   and R0 is set  to the logical length  to be
          written.  For proper operation,  this return  must be forced after the
          last record is written by setting the record address to zero. When the
          current block  is empty,  R0 will  also be zero,  indicating  that the
          final write may be bypassed.
-
0                                                                            141
1                   Technical Guide to System Modifications
     @SERVICE                                              Service Routines
-    The names  in the following description  begin with WCM.  This  is the
     default prefix,  and  may be changed to any valid  three characters in
     the PFX= operand of the SERVCOMP macro.
0    Normal use consists of initializing the control block with the address
     and size of  the next output buffer  (WCMBUFAD/WCMBUFMX),  an optional
     encryption password  (CL16 address to  WCMCODAD),  and  the processing
     options to be used.  For each record, the user must supply the address
     and  length of  the line  (WCMRECAD/WCMRECLN).   Supported  processing
     options consist of creating line numbers, or to extract them from each
     line.   NIH-format compression is supported,  but requires the user to
     set the WCMFG3 flag byte repeatedly for each record.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | WDCOM,servcomp-addr                             |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function decompresses and decrypts WYLBUR edit-format blocks. The
     address and size of each input buffer are stored in WCMBUFAD/WCMBUFMX,
     WCMCODAD is set to zero, or the address of a CL16 codeword address for
     decryption,  and the WCMFG flags are set.  WCMRECMX must be set to the
     maximum  record size  to accept  (excess  is truncated  with no  error
     indication);  if the  user choses to set the  WCMRECAD (record address
     field) to zero prior to each call,  then a buffer in the @SERVICE work
     area will be used.  Buffer capacity provides for the maximum supported
     data  length of  500 for  NIH-format  records,  plus  eight bytes  for
     sequence numbers,  plus four for a  record descriptor word.   For each
     record, zero or the intended record address is placed into WCMRECAD. A
     return code of 0 indicates that a  record was unpacked;  a return of 4
     indicates that the buffer is exhausted.
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | SERVCALL | ALCVS,jfcb-addr                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
     This function  locates or  obtains a  TIOT entry  for the  DASD volume
     specified as the first entry in JFCBVOLS of the passed JFCB address. A
     return  code of  8 in  R15 indicates  that  the request  could not  be
     satisfied;  e.g.,  a return of 4 in R0 indicates that the volume could
     not be  mounted.  SVC  99 is  used to  allocate the  requested volume.
     @SERVICE  supports  allocation  of  only one  volume  at  a  time;   a
     subsequent ALCVS call  will automatically issue a request  to free the
     prior allocation (but will continue if that fails).
-
-
-
-
     142
1                        Technical Guide to System Modifications
          Service Routines                                              @SERVICE
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ALCDS,jfcb-addr                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This function  will allocate the dataset  with the name passed  in the
          JFCB.  For an  authorized caller,  the function calls SVC  32 with the
          JFCB parameter,  and the UCB address corresponding to the first serial
          in JFCBVOLS.  No  volume mounting is attempted.    For an unauthorized
          caller,  SVC 99 is used.  Note that this function allocates DASD space
          for a new  dataset,  it does not  invoke dynamic allocation to  make a
          dataset accessible.  Note that this function makes an internal call to
          the volume allocation function ALCVS,   hence any user TIOT allocation
          is lost.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ALCFR                                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This optional entry unallocates the prior TIOT allocation, if any.  It
          is called internally by the CLOSE function,  and invoked indirectly by
          the SERVTERM macro.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | SERVCALL | ALCFD,ddname                                    |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
          This entry removes the allocated DD by DDNAME (address).  Registers 15
          and 0 are returned from the SVC 99 result.
-
-
-
-
-
-
-
-
-
0                                                                            143
1                   Technical Guide to System Modifications
     @SRVJ220                                              Service Routines
-    2.3.2   JES2 @SERVICE extension ..............................@SRVJ220
+    2.3.2   JES2 @SERVICE extension                               @SRVJ220
+            ____ ________ _________                               ________
0    All JES2  dependent code has been  moved from the @SERVICE  routine to
     the @SRV extensions.   The source modules are  distributed for several
     versions of JES2,  from MVS (@SRVJ041)  to  SP 1.3 (@SRVJ133)  to SP 2
     (@SRVJ220).  The  SP 2  version also supports  JES2 1.3.5/1.3.6  in SP
     1.3.5.
0    The module appropriate to your version of JES2 is assembled,  and then
     linked with the name of the matching subsystem.  For instance, if your
+                                         subsystem
     installation runs JES2  1.3.3 as the production JES,  with  a PROC and
     subsystem name of JES2, and a JES 1.3.6 test system using PROC JESB:
        assemble @SRVJ133
        link as  @SRVJES2
        assemble @SRVJ136
        link as  @SRVJESB
     Note that  each assembly must be  run with overriding  SYSPARM options
+    Note
     and the appropriate JES2 MACLIB and MTS (if any).
0    The functions  performed by  the @SRV routines  are documented  in the
     @SERVICE routine description.
-
-
-
-
-
-
-
-
-
-
-
0    144
1                        Technical Guide to System Modifications
          Service Routines                                              @PRINTER
-         2.3.3   Print and Punch Routines .............................@PRINTER
+         2.3.3   Print and Punch Routines                              @PRINTER
+                 _____ ___ _____ ________                              ________
0         The @PRINTER program performs common services related to producing and
          formatting print  and punch  format output.    Note that  the @PRINTER
          program uses  unprotected storage it chains  from the TCB  First level
          Save Area  (TCBFSA),  hence  cannot be used  in any  environment where
          SERVCALL cannot be used.  In a multi-tasking environment, @PRINTER may
          be used  with due caution.   To  use the @PRINTER routines,   you must
          define  a full-word  named  @PRINTER to  contain  the  address of  the
          program.   This word must be addressable whenever a PRTxxxx or PUNxxxx
          macro  is used.   The @PRINTER  program is  then loaded  by using  the
          LOADLPA macro (inefficient),  or  SERVCALL LPALD,=CL8'@PRINTER'.   The
          resulting load  address (in R0)   is then  stored in @PRINTER.    In a
          multi-tasking environment,  the address in  @PRINTER must be passed to
          the subtasks,  and again stored (or mapped via DSECT)  in a word named
          @PRINTER.  A file opened by a task may be accessed only by lower tasks
          in the direct line of descent;  e.g.,   task A attaches tasks B and C.
          Task C then attaches  tasks D and E.   A file opened by  task A may be
          used by all lower tasks B through E.   A file opened by task B may not
          be used by any  other tasks.   A file opened by task C  may be used by
          tasks D and E.   The CLOSE function is honored only when issued by the
          task that performed the OPEN;  other  callers receive a level 4 return
          code.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | PRTOPEN  | work-addr                         Ý,DEV=number¨ |
           |      |          | Ý,OPT=»''|ABEND|DUMMY|NOWTOº¨                   |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         Print  and punch  files are  opened using  the PRTOPEN  macro,  and  a
          PRTWORK or PUNWORK generated work area.
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | PRTF     | text-addr   Ý,length¨   Ý,DEV=list¨   Ý,TITLE=¨ |
           |      |          | Ý,FOOTER=¨ Ý,CC=»''|ASA|MC|NOº¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | PRTV     | rdw-addr   Ý,DEV=list¨   Ý,TITLE=¨   Ý,FOOTER=¨ |
           |      |          | Ý,CC=»''|ASA|MC|NOº¨                            |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | PRTLIST  | fd-addr   Ý,DEV=list¨    Ý,TITLE=¨   Ý,FOOTER=¨ |
           |      |          | Ý,CC=»''|ASA|MC|NOº¨                            |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         Three macros are  used to print/punch data.  They are  PRTF (for fixed
          length strings);  PRTV (for text  beginning with a record descriptor);
          and PRTLIST  (which supplies  a list  of FD  macros describing  output
          formatting and conversion to be done).
-                                                                            145
1                   Technical Guide to System Modifications
     @PRINTER                                              Service Routines
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | PRTBIG   | item|list-addr Ý,DEV=list¨ Ý,OPT=»CENT|NEGº¨    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | PRTSNAP  | snaplist-addr Ý,DEV=list¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    Special  output is  produced  by  PRTBIG (big-letter  printout),   and
     PRTSNAP (storage snapshots).
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | PRTROOM  | count Ý,DEV=list¨                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | PRTSPACE | count Ý,DEV=list¨                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    Control over  output appearance  is provided  by PRTSPACE  (print-line
     spacing) and PRTROOM (conditional page eject).
-     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | PRTCLOSE | »omitted|TCLOSE|SPINº Ý,DEV=list¨               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    Output  files  may  be  closed permanently  or  temporarily  with  the
     PRTCLOSE macro.  At task termination,  PRTCLOSE need not be invoked if
     SERVTERM  is used;   SERVTERM  will invoke  PRTCLOSE  if the  @PRINTER
     routine was  loaded with  a SERVCALL LPALD,   and delete  the @PRINTER
     module. Note that SERVCALL has a special close entry FREEM which frees
     and closes everything except the @PRINTER files.
+                          ______
0    @PRINTER supports a maximum of eight output files at any one time. The
     file for which  an operation applies is specified with  a DEV= operand
     on each macro  use.  An omitted DEV=  operand results in the  use of a
     default value of 1.  Except on PRTOPEN, DEV= may be used with sub-list
     notation  to  perform a  request  for  several devices;   e.g.,   PRTV
     record,DEV=(1,3,4).  PRTOPEN is used to open a single file (passed via
     the PRTWORK  or PUNWORK  address);  when  DEV= is  not specified,   it
     defaults to 1, but any single value from 1 to 8 may be specified.  The
     DEV= operand  may be written in  a special form  DEV==byte-addr.  This
     special form,  not to be confused with  a request for a literal value,
     denotes that the operand is a storage location in which bit flags have
     been set to indicate the desired devices.  A value of X'01' (or an all
     zero byte),  indicates device 1;  X'02' indicates device 2,  and X'80'
     indicates device  8.  Except on PRTOPEN,   these bits may  appear ORed
     together to perform multiple operations. A DEV of X'FF', for instance,
     would perform the request on all eight files. When a requested file is
     not open, @PRINTER just sets a non-zero return code, but continues the
     request for  other devices.   Only a major  error would  terminate the
-    146
1                        Technical Guide to System Modifications
          Service Routines                                              @PRINTER
-         request immediately (e.g.,  specifying more than one device number for
          PRTOPEN).
-          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | NAME | PRTWORK  | ddnameÝ,alt-ddname¨    Ý,TITLE=¨     Ý,FOOTER=¨ |
           |      |          | Ý,LPP=¨ Ý,WIDTH=¨  Ý,FILL=¨ Ý,RECFM=¨  Ý,PAGE=¨ |
           |      |          | Ý,SPAGE=¨                                       |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | NAME | PUNWORK  | ddnameÝ,alt-ddname¨ Ý,LPP=¨ Ý,WIDTH=¨ Ý,RECFM=¨ |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         For print-format files,   macro PRTWORK is used to  describe the file.
          When  the PAGE  and SPAGE  operands are  not  used,  the  area is  not
          modified, and may be directly incorporated in re-entrant programs. The
          first positional operand of PRTWORK specifies  the DDNAME for the file
          to be written,  and the second specifies an optional alternate name to
          be used  when the first  choice is not  usable (missing or  DD DUMMY).
          Special options for the DDNAME exist;  the name *CONSOLE causes output
          to be written as a WTO;  a name beginning with a percent sign is taken
          as an in-storage file request,  the second word of the DDNAME contains
          the address  of a  routine to  be called  as though  it were  a DCBPUT
          routine,  and the alternate DDNAME area is used to specify UCS and FCB
          overrides,  the byte following the percent sign may be used to request
          lines per page.   Keyword operands  permit specification of the number
          of lines reserved for top title lines (TITLE=), for bottom title lines
          (FOOTER=),   the number  of lines  per  page (LPP=),   the line  width
          (WIDTH=), the character to be used instead of an unprintable character
          (FILL=),   and  the  record  format  (RECFM=  in  DCB  format,   e.g.,
          RECFM=FBA).  Two  operands exist which  cause the @PRINTER  routine to
          replace information in the work area: PAGE= specifies that the current
          page number will be placed into the work area whenever it changes, and
          SPAGE= requests the same for sub-pages  (counted since the last time a
          TITLE  was changed).   Note  that re-entrant  programs  may use  these
          functions only when the work area  is moved into gotten storage.  Also
          note that the page number may be off by one due to the way the program
          handles page ejects.  When a page eject is requested or forced, a flag
          is set. The eject processing does not actually take place until a line
          must be placed on that page. A convenient way of handling this problem
          consists of clearing a half-word to  zeroes,  and after a PRTx request
          testing the value, and replacing it if it is zero.
0         The  PUNWORK  area is  essentially  the  same  as PRTWORK,   but  some
          functions  and  corresponding  operands are  ignored.   Supported  are
          DDNAME/alternate,  and  % internal file,   but not  *CONSOLE.   TITLE,
          FOOTER,  LPP,  FILL,  PAGE and SPAGE  should not be used.   While FILL
          appears to be meaningful, all character translation for PUNCH files is
          skipped,  primarily to preserve object decks,  and secondarily because
          the translation table is built dynamically based on the UCS train used
          for the file,  something that applies  only to some print files.  Note
          that neither ASA nor control codes  may give correct results when used
          with punch files.
0                                                                            147
1                   Technical Guide to System Modifications
     @CATREAD                                              Service Routines
-    2.3.4   Catalog Reader .......................................@CATREAD
+    2.3.4   Catalog Reader                                        @CATREAD
+            _______ ______                                        ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     148
1                        Technical Guide to System Modifications
          Service Routines                                              @DCBEXIT
-         2.3.5   DCB Exit Services ....................................@DCBEXIT
+         2.3.5   DCB Exit Services                                     @DCBEXIT
+                 ___ ____ ________                                     ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             149
1                   Technical Guide to System Modifications
     @FDRREAD                                              Service Routines
-    2.3.6   FDR Pseudo-DASD ......................................@FDRREAD
+    2.3.6   FDR Pseudo-DASD                                       @FDRREAD
+            ___ ___________                                       ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     150
1                        Technical Guide to System Modifications
          Service Routines                                              @INPREAD
-         2.3.7   Generalized Input Service ............................@INPREAD
+         2.3.7   Generalized Input Service                             @INPREAD
+                 ___________ _____ _______                             ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             151
1                   Technical Guide to System Modifications
     @OBTAINS                                              Service Routines
-    2.3.8   Full-track OBTAINs ...................................@OBTAINS
+    2.3.8   Full-track OBTAINs                                    @OBTAINS
+            __________ _______                                    ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     152
1                        Technical Guide to System Modifications
          Service Routines                                              @PROTECS
-         2.3.9   Full-track PROTECT ...................................@PROTECS
+         2.3.9   Full-track PROTECT                                    @PROTECS
+                 __________ _______                                    ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             153
1                   Technical Guide to System Modifications
     @TMSREAD                                              Service Routines
-    2.3.10   Fast TMS Reader .....................................@TMSREAD
+    2.3.10   Fast TMS Reader                                      @TMSREAD
+             ____ ___ ______                                      ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     154
1                        Technical Guide to System Modifications
          Service Routines                                              @VOLREAD
-         2.3.11   Full-track DASD Reader ..............................@VOLREAD
+         2.3.11   Full-track DASD Reader                               @VOLREAD
+                  __________ ____ ______                               ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             155
1                   Technical Guide to System Modifications
     FINIT                                                 Service Routines
-    2.3.12   FORTRAN Interface Initialization ....................FINIT
+    2.3.12   FORTRAN Interface Initialization                     FINIT
+             _______ _________ ______________                     _____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     156
1                        Technical Guide to System Modifications
          Service Routines                                                 FSORT
-         2.3.13   FORTRAN/SORT Interface ..............................FSORT
+         2.3.13   FORTRAN/SORT Interface                               FSORT
+                  ____________ _________                               _____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             157
1                   Technical Guide to System Modifications
     GOPARM                                                Service Routines
-    2.3.14   EXEC PARM Extraction ................................GOPARM
+    2.3.14   EXEC PARM Extraction                                 GOPARM
+             ____ ____ __________                                 ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     158
1                        Technical Guide to System Modifications
          Service Routines                                                  ICPU
-         2.3.15   CPU and Time Routine ................................ICPU
+         2.3.15   CPU and Time Routine                                 ICPU
+                  ___ ___ ____ _______                                 ____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             159
1                   Technical Guide to System Modifications
     IEFSD095                                              Service Routines
-    2.3.16   Big Letter Routine ..................................IEFSD095
+    2.3.16   Big Letter Routine                                   IEFSD095
+             ___ ______ _______                                   ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     160
1                        Technical Guide to System Modifications
          Service Routines                                                LOOKDD
-         2.3.17   DD Card Routine .....................................LOOKDD
+         2.3.17   DD Card Routine                                      LOOKDD
+                  __ ____ _______                                      ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             161
1                   Technical Guide to System Modifications
     MADS                                                  Service Routines
-    2.3.18   MADS Support/Simulator Routine ......................MADS
+    2.3.18   MADS Support/Simulator Routine                       MADS
+             ____ _________________ _______                       ____
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     162
1                        Technical Guide to System Modifications
          Service Routines                                               MODJFCB
-         2.3.19   JFCB Modification ...................................MODJFCB
+         2.3.19   JFCB Modification                                    MODJFCB
+                  ____ ____________                                    _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             163
1                   Technical Guide to System Modifications
     NOSTAE                                                Service Routines
-    2.3.20   FORTRAN Dump Support ................................NOSTAE
+    2.3.20   FORTRAN Dump Support                                 NOSTAE
+             _______ ____ _______                                 ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     164
1                        Technical Guide to System Modifications
          Service Routines                                               RANDOMS
-         2.3.21   Random Number Generator .............................RANDOMS
+         2.3.21   Random Number Generator                              RANDOMS
+                  ______ ______ _________                              _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             165
1                   Technical Guide to System Modifications
     REREAD                                                Service Routines
-    2.3.22   FORTAN Record Reread Routine ........................REREAD
+    2.3.22   FORTAN Record Reread Routine                         REREAD
+             ______ ______ ______ _______                         ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     166
1                        Technical Guide to System Modifications
          Service Routines                                               SETDISP
-         2.3.23   Disposition Change ..................................SETDISP
+         2.3.23   Disposition Change                                   SETDISP
+                  ___________ ______                                   _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             167
1                   Technical Guide to System Modifications
     TIMEDAY                                               Service Routines
-    2.3.24   Time & Date Formatting ..............................TIMEDAY
+    2.3.24   Time & Date Formatting                               TIMEDAY
+             ____ _ ____ __________                               _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     168
1                        Technical Guide to System Modifications
          Macro description
-
                                        Section 3
+                                       Section 3
0                                   MACRO DESCRIPTION
+                                   MACRO DESCRIPTION
-         This section describes macros used by ESP programs, functions, and the
          documentation processing. The following conventions are used:
0         Three forms of statement labels are documented -
          no label field - label does not apply (e.g., SCRIPT macros)
          "none" - only a sequence symbol may be used in the label field
          "name" - the user may supply a label
0         The operand fields follow IBM conventions -
0         Upper case items, when used, must be supplied as shown.
          Parentheses, equal signs, and the like, are used as shown.
          Lower case items are to be supplied by the user.
          Items separated by a stroke | are chosen from the available options.
          Items enclosed in braces » º are required;  this form is used when one
             or more mutually exclusive options exist for a mandatory parameter.
          Items enclosed  in brackets  Ý ¨  are optional.    Enclosed parameters
             separated by strokes represent mutually exclusive options.
          An ellipsis ... indicates that items may be repeated.
          A complete repetition of  the macro indicates an  alternate form which
             is incompatible with the prior one.
-
          3.1   GENERAL MACROS
+         3.1   GENERAL MACROS
+               _______ ______
0         This  section contains  all macros  which do  not fit  into a  special
          category.
-
-
-
-
-
-
-
                                                                             169
1                   Technical Guide to System Modifications
     @OBTAIN                                              Macro Description
-    3.1.1   @OBTAIN
+    3.1.1   @OBTAIN
+            _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | @OBTAIN  | camlst-addr Ý,OPT=LOADED¨                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | @OBTAIN  | storage-value,OPT=SIZE                          |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | @OBTAIN  | OPT=CLOSE                                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro  invokes the  @OBTAINS service  program,  and  performs all
     functions done by the OBTAIN macro it replaces. The capability is used
     as a speed versus storage trade-off. @OBTAIN will read the entire VTOC
     into storage,  optionally  sort it by dataset name,   and provide both
     SEEK and SEARCH support.  At CCSI, approximately 900K are required for
     the largest VTOC.
0    The OPT=  keyword may  be used  only on  the last  logical request(for
     OPT=CLOSE),   or on  the  first physical  and  logical  request in  an
     assembly.   OPT=LOADED specifies  that the  @OBTAINS  module has  been
     loaded already,  and  that its address has been stored  in a full-word
     named @OBTAIN.  In the absence of  this parameter,  @OBTAIN will use a
     weak external reference to @OBTAINS,  and  use the IBM SVC (number 27)
     when the reference is unresolved.
0    OPT=SIZE specifies that  the function is used prior to  the first VTOC
     request to  set the  storage reserve  size.  The  value passed  is the
     storage amount  not to be allocated  by the @OBTAINS code.   When this
+                    ___
     value is too large,  all @OBTAINS calls will be passed to the IBM SVC.
     When storage is insufficient for the entire VTOC, but large enough for
     one track and  a work area,  then @OBTAINS will  support all functions
     slowly, and will not sort the VTOC.
0    When @OBTAINS is used to access  the VTOC sequentially with successive
     SEEK requests,  the VTOC end address  and format 1 high-water mark may
     be used as  with OS.  When a  sorted VTOC is processed,   indicated by
     setting X'A2' into the  DS1FMTID prior to a SEEK call,   then the user
     must terminate  the loop  when @OBTAINS  returns a  DS1FMTID field  of
     X'FF'. No indication is given when the sort request fails.
0    When the  @OBTAINS routine  is loaded via  the @SERVICE  routine LPALD
     function, then the CLOSE call will be made by @SERVICE when a SERVTERM
     macro, or a SERVCALL FREEM or CLOSE are issued.
0    For search  processing,  the user may  supply a prefix mask.   This is
     specified  by  turning on  the  X'10'  bit  in  the first  byte  of  a
     SEARCH-type CAMLST, and following it with the length (AL1) and address
     of the mask (AL3).  Only matching  DSCB entries are returned,  and the
     end-file entry.
-    170
1                        Technical Guide to System Modifications
          Macro Description                                             @PROTECT
-         3.1.2   @PROTECT
+         3.1.2   @PROTECT
+                 ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | @PROTECT | request-addr                                    |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This function invokes the fast @PROTECS service program,  and provides
          all functions documented for SVC 98, and the PROTECT macro.
0         This macro expands a weak external reference for module @PROTECS,  and
          invokes SVC 98 when the reference is not resolved.  @PROTECS reads the
          entire PASSWORD  dataset into storage;  this  requires the user  to be
          privileged to avoid a 913 abend.
0         When feasible,  the functions provided  by the @SERVICE routine should
          used instead of @PROTECT; in particular, note the INITG function.
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             171
1                   Technical Guide to System Modifications
     BIX                                                  Macro Description
-    3.1.3   BIX
+    3.1.3   BIX
+            ___
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | BIX      | VAL=r0,WORK=r15,WORK2=r14,PRE=0,BHI=            |
      |      |          | BASE=,LOC=,ERR=,PFX=,SIZE=16,MASK=15            |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This  macro expands  code for  multiple  branching based  on an  index
     value.   The  index   values  should  begin  with   0,   and  increase
     consecutively until they reach a maximum  (either the number of branch
     addresses supplied, or a number less then that specified by SIZE).  By
     default, values from 0 to 15 are supported.  When SIZE is changed, the
     MASK value should also be changed.
0    VAL= specifies the register which has been loaded by the user with the
     index value. The contents of this register are not changed, unless the
     register is also used  for one of the other register  keywords (but R0
     should not be used for others).
0    PRE= specifies a bit  count by which the index value  is shifted right
     before masking and other processing.
0    MASK= is a mask which is ANDed to a copy of the index value to isolate
     the significant portion.  MASK should always  be one less than a power
     of two.  Note that the MASK is applied after the right-shift specified
     by PRE=.
0    SIZE= specifies the maximum number of branch addresses supported.   No
     validity  checking is  made  on the  number if  the  number of  branch
     addresses reach or exceed the SIZE value.
0    WORK= and WORK2=  specify two discrete work registers,   which must be
     different from VAL=, and should not specify register zero.   WORK2 may
     specify the register  specified in VAL,  providing it is  not zero (or
     defaulted to zero).
0    BHI= specifies an  address valid on BE,  not a  register value,  which
     will be executed when, after PRE shifting and MASK masking, the result
     matches the  mask value.   This test  is executed  before any  SIZE or
     number of branch address checks are made.   The function is useful for
     the special  case were  an index may  either be a  value in  the lower
     range, or the maximum (e.g., to indicate a special condition).
0    BASE= specifies the base value to use for branch table entries.  BASE=
     and BASE=*  request the  current control  section.  When  this is  not
     addressable,  BASE may be set to any  label that is addressable and in
     the same control section as the  branch addresses.  The code generates
     half-word displacement entries for the addresses, and does not support
     labels in different control sections.
0    ERR= specifies a label, subject to the same addressing restrictions as
     branch addresses,  which will be executed when the index value exceeds
     the number of  supplied addresses,  or reaches the  value specified by
     SIZE. A register designation is not supported.
0    172
1                        Technical Guide to System Modifications
          Macro Description                                                  BIX
-         PFX= specifies a  zero to seven byte  prefix which will be  applied to
          all address labels, other than the ones specified by BHI and ERR.  Use
          is optional, and is intended to make for shorter lists.
0         LOC= is the sublist which specifies the branch labels corresponding to
          each index value.  The first label corresponds to an index value of 0,
          the next to 1,  etc.   Omitted entries (i.e.,  successive commas)  are
          replaced by a branch to the ERR= address.
0         For example, the return from OBTAIN could be checked:
                   OBTAIN SEEK         READ DSCB AT TTR
                   BIX   VAL=R15,WORK=R1,PRE=2,SIZE=3,ERR=BADSEEK,       *
                         PFX=SEEK,LOC=(0,4,8)
           SEEK8   CLI   DS1FMTID,C'4'  READ/REQUESTED VTOC ?
                   ...
           SEEK4   ...                 VOLUME NOT MOUNTED OR ?
                   ...
           BADSEEK ...                 OTHER ERROR
                   ...
           SEEK0   ...                 HAVE DSCB
-
-
-
-
-
-
-
-
-
-
-
-                                                                            173
1                   Technical Guide to System Modifications
     CLRL                                                 Macro Description
-    3.1.4   CLRL
+    3.1.4   CLRL
+            ____
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | CLRL     | addr,len Ý,WORK1=14¨ Ý,WORK2=0¨ Ý,FILL=¨        |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro expands into an MVCL  instruction to clear or initialize an
     area.
0    WORK1= and WORK2= specify discrete registers, which represent both the
     even and odd register of a pair.
0    The address operand specifies the label  or (register)  with the start
     address to be cleared.
0    The second operand specifies the value of the length,  or a (register)
     preloaded with the desired length.
0    FILL=  may specify  a self-defining  term representing  the byte  with
     which the area will be filled.  By default, the area is cleared to hex
     zeroes.
-
-
-
-
-
-
-
-
-
-
-
0    174
1                        Technical Guide to System Modifications
          Macro Description                                               CRMEND
-         3.1.5   CRMEND
+         3.1.5   CRMEND
+                 ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | CRMEND   | ÝPFX=¨                                          |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  is used at  the logical and physical  end of a  section of
          code that will  be relocated to CSA  for execution by a  SCHEDULEd SRB
          (see @SERVICE SCHxx functions). The value supplied for PFX defaults to
          the PFX value  used in a prior  CRMxxx macro.  The macro  expands a 0D
          with label "pfxLAST",  and an equate for "pfxSIZE" defining the length
          of the code moved to the CSA.   See also CRMHEAD.   In a program using
          only one CSA routine, PFX is normally defaulted.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             175
1                   Technical Guide to System Modifications
     CRMEXIT                                              Macro Description
-    3.1.6   CRMEXIT
+    3.1.6   CRMEXIT
+            _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | CRMEXIT  | ret-code Ý,PFX=¨                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    Macro CRMEXIT may be used one or  more times between the occurrence of
     a CRMHEAD and  CRMEND macro with the same (or  defaulted)  PFX= value.
     The expanded code sets  a return code into register 15  and returns to
     the @SERVICE supervisory  code residing in CSA.  Register  14 need not
     have been saved by the user.
0    The  "ret-code" operand  is  mandatory,  and  may  be a  self-defining
     integer, an expression valid on LA, or a register specification.   The
     value is used to post the SCHEDULE ECB.
-
-
-
-
-
-
-
-
-
-
-
-
-
0    176
1                        Technical Guide to System Modifications
          Macro Description                                              CRMHEAD
-         3.1.7   CRMHEAD
+         3.1.7   CRMHEAD
+                 _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | CRMHEAD  | ÝPFX=¨                                          |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  begins the logical  and physical sequence  of instructions
          that define code and data which will be relocated to CSA for execution
          by  the  @SERVICE SCHxx  functions.   The  physical sequence  must  be
          terminated  by a  CRMEND macro.   PFX defaults  to 'USER'  and may  be
          omitted in programs using only  one CRMHEAD/CRMEND sequence.   If more
          than  one  sequence  is  supplied,   the  CRM  macros  must  not  have
          overlapping ranges (you  must code CRMEND prior to  the next CRMHEAD),
          and all but the first CRMHEAD must have a unique PFX operand. PFX must
          have 1 to 4  characters.  Once PFX is used,  it  remains as the global
          default until the next  occurrence of a PFX operand,  and  need not be
          specified  explicitly on  other  CRMxxx macros  (other  than the  next
          CRMHEAD).
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                            177
1                   Technical Guide to System Modifications
     CRMSPIE                                              Macro Description
-    3.1.8   CRMSPIE
+    3.1.8   CRMSPIE
+            _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | CRMSPIE  | address|0 ,ÝPFX=¨                               |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    Macro CRMSPIE  establishes and cancels  error recovery support  in CSA
     code invoked by @SERVICE SCHxx functions.   See CRMHEAD and CRMEND for
     defining a CSA  code segment.  When CRMSPIE is issued  with an address
     (which must be in the CRMHEAD/CRMEND range),  the specified address is
     given control when an error occurs.   An explicit address of 0 cancels
     the recovery request.
0    When "address" is invoked, the source of error is not specified.   All
     registers are set as they were when CRMSPIE was issued,  not what they
+                                                             ___
     were at the time of error.
-
-
-
-
-
-
-
-
-
-
-
-
-
     178
1                        Technical Guide to System Modifications
          Macro Description                                             DCBEXITD
-         3.1.9   DCBEXITD
+         3.1.9   DCBEXITD
+                 ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | DCBEXITD | DSECT=no,PREFIX=dx,LEVEL2=                      |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         The  DCBEXITD macro  expands the  parameter list(s)   required by  the
          @DCBEXIT DCB exit list processing code.   When @DCBEXIT is invoked, it
          stores information in the list, hence the expansion should not be used
          in refreshable or re-entrant storage.  Generally, DCBEXITD is used one
          or more times in a DSECT definition,   with a unique prefix each time,
          and a pattern expansion in a  CSECT.   The DSECT areas,  after storage
          has been obtained,  may then be initialized by moving the pattern,  or
          by explicit MVI and ST instructions. Not all keywords are shown in the
          pattern above,  only the critically  important ones.  Descriptions for
          all keywords follows:
0         DSECT=YES specifies that  a DSECT statement will  be generated,  using
          the supplied "name", or defaulting to DCBEXITD.   DSECT=NO or anything
          other than YES causes the DSECT card  to be skipped.  If "name" is not
          null, it will be used on a DS    0D expansion,  otherwise the label is
          skipped.  A displacement error will occur when the label and DSECT are
          skipped,  unless a double-word boundary address is forced prior to the
          expansion.
0         PFX= specifies a  one or two character prefix,  which  defaults to DX.
          The keyword is  required when more than one DCBEXITD  macro appears in
          one assembly.
0         LEVEL2= specifies a  self-defining value corresponding to  the maximum
          second-level exit  or parameter  addresses that may  be used  with the
          control block.  DCBEXITD does not provide  a mechanism for setting the
          flags and addresses for these.
0         USER= specifies an  address or self-defining term valid  in an address
          constant.  The value is placed into field  DXUSER,  and may be used by
          the user for any purpose.
0         FLAG1=0 may be used to set DXFLAG1
           X'80' DX1RCINT Causes use of record interface (BFTEK=A) with the
                          proper RECFM, LRECL for QSAM input. Note that the
                          DCB must have BFTEK=A specified prior to each OPEN.
           X'40' DX1BLOCK This flag creates an error when BLKSIZE is not a
                          multiple of LRECL for RECFM=FB.
           X'20' DX1NOFBS Turns off Standard (S) if RECFM=FBS; does not change
                          VBS.
           X'10' DX1NOPCI Turns off OPTCD=C.
           X'08' DX1NOSD  Turns off OPTCD=Z for direct access files.
           X'04' DX1FULLT Defaults BLKSIZE to full track (DASD) or OS maximum.
           X'02' DX1TRUNC Reduces BLKSIZE to full track or other maximum.
           X'01'   open
0         FLAG2=0 may be used to set DXFLAG2
           X'80' DX2CONCT The user wants unlike concatenation support.
0                                                                            179
1                   Technical Guide to System Modifications
     DCBEXITD                                             Macro Description
-     X'40' DX2REGET Set by @DCBEXIT when a READ or GET must be re-issued
                     after a CLOSE/OPEN for a new concatenation. This flag
                     must be turned off by the caller.
      X'04' DX2CCERR When the DCB/JFCB/label make a control character
                     specification which does not match the DCBEXITD
                     specified preferences, the OPEN is failed. This
                     is triggered by one source specifying control, the
                     other not. Note that ASA and machine control are
                     considered the same.
      X'02' DX2CCADJ When the control character specifications do not
                     match, the LRECL and BLKSIZE will be adjusted by
                     one to match the final processing option.
      X'01' DX2TARER Turns off OPTCD=Z except for tape files.
0    FLAG3=0 may be used to set DXFLAG3
      X'08' DX3BLKTB For BLKSIZE defaults, use the @DCBEXIT resident
                     device/blocksize table.
      X'04' DX3BLKWY For BLKSIZE defaults and maxima, use the @DCBEXIT
                     resident table of WYLBUR default and maximum sizes.
      X'02' DX3ISWYL Set by @DCBEXIT when the file's RECFM is U, the
                     LRECL and BLKSIZE are valid for a WYLBUR compressed
                     (edit format) file, and the device is supported by
                     WYLBUR. This flag should be reset by the user.
      X'01' DX3DFWYL Causes file attributes to default to WYLBUR type.
0    FLAG4=0 is not presently being used.
0    DXRETCOD is a reserved  byte to receive the return code  from a failed
     OPEN. Currently @DCBEXIT abends an unprocessable request.
0    DRECFM=0 specifies a  self-defining term valid as a  RECFM value.   Do
     not use the JCL/DCB characters (F,  V,  B,  etc.).   The value will be
     used as  the default if  no RECFM is supplied  from the DCB,   JFCB or
     dataset label.
0    BLOCKF=0 supplies a  default blocking factor for RECFM=F  and V files.
     When left 0, this value causes @DCBEXIT to use a factor of 10,  unless
     some other  source for a BLKSIZE  value is found (e.g.,   the DX3DFWYL
     flag).  When the product of the  record length and this factor exceeds
     the device blocksize,  the value is reduced only when the DX1TRUNC bit
     is on.
0    LRECLF=0 specifies the default LRECL value for RECFM=Fxx
0    LRECLV=0 specifies the default LRECL value for RECFM=Vxx
0    LRECLD=0 specifies the default LRECL value for RECFM=Dxx
0    LRECLU=0 specifies the default BLKSIZE (and LRECL) for RECFM=U
0    The remaining  fields in  the expansion  are to  be maintained  by the
     user.  The fields begin at label DXOPLIST,  and terminate when a X'80'
     is found in  the high byte of an  entry.  The high byte  of each entry
-    180
1                        Technical Guide to System Modifications
          Macro Description                                             DCBEXITD
-         designates the function, the low three bytes the address of a table or
          exit. The functions are:
0          X'00' or X'80' DXTNOP empty/last entry. An NI with X'80' may be
                          used to de-activate any entry. The X'80' bit may
                          be on in any of the entries described below to
                          designate the end of the list, and is not
                          mentioned in the description again.
           X'01' DXTEXIT/exit-address  This entry causes an exit to a user
                          routine to be made after @DCBEXIT has processed
                          the basic RECFM, LRECL and BLKSIZE parameters.
                          These, and OPTCD and similar fields may still be
                          altered by the user. The parameter and register
                          convention for all exits is described below.
           X'02' DXTBLOCK/table-address  This entry supplies a default list
                          of blocksizes by device type. There are eight bytes
                          per entry. Byte one corresponds to UCBTBYT3, or is
                          X'FF' for the last entry. Byte two corresponds to
                          UCBTBYT4, and is X'FF' in the last entry, and in
                          any entry where the device sub-type is irrelevant.
                          The second half-word contains 0 or the preferred
                          BLKSIZE (e.g., the WYLBUR edit size for the device).
                          The third half-word contains the minimum desired
                          BLKSIZE (this is 512 for the default table); the
                          last half-word specifies the maximum BLKSIZE
                          supported (this may be smaller than the OS or
                          device limit). The DX1TRUNC flag should be on to
                          ensure that the BLKSIZE will be adjusted to be
                          valid with the record length.
           X'03' DXTWYLBK/table-address  This entry specifies a table where
                          both the default and the limits are to be used.
                          The table has the format described for DXTBLOCK, but
                          all entries are used.
           X'04' DXTPREX/exit-address  This entry specifies an exit taken
                          from @DCBEXIT after setup is complete, but before
                          any fields have been examined or altered. See below
                          for register and parameter format.
           X'05' DXTMAXBK/table-address  The address specifies a table in the
                          format described under DXTBLOCK, but only the
                          maximum BLKSIZE value will be used and enforced.
           X'06' DXTEXITF/exit-address  This entry takes an exit after
                          @DCBEXIT has finished setting DCB parameters.
                          The exit is taken as follows:
                            R14 - return address
                            R15 - exit address
                            R0  - DCBEXITD address, where
                                    DXDCBPTR contains the DCB address
                                    DXUSER the user specified value
                                    DXDOUBLE the UCB address for the file
                                      (this may be 0 for JES, TERM and DUMMY
                                      files, or an address not in the system
                                      UCB chain for a VIO file)
                                    DXDOUBLE+4 contains the TIOT entry address
                                    DXFLAG2 may have DX2REGET on
0                                                                            181
1                   Technical Guide to System Modifications
     DCBEXITD                                             Macro Description
-                              DXFLAG3 may have DX3ISWYL on
                       R1  - DCB address
0    Note that in most versions of OS,  it  is too late to change the MACRF
     in any of the exits.  In MVS,  even chaining may not be turned off for
     some files.  The DCBDEVT field is filled in only for some devices, but
     not DASD or tape.
0    @DCBEXIT may  be used to process  a closed DCB,  providing  the DDNAME
     field is not blank,   and the name appears in the  TIOT.   Turn on bit
     DCBOFUEX in DCBOFLGS,  and call @DCBEXIT as a subroutine,  passing the
     DCB address in R1.
0    Due to the modification of fields in the DCBEXITD expansion, it should
     be dedicated to a particular DCB while that DCB remains OPEN.
-
-
-
-
-
-
-
-
-
-
-
-
-
0    182
1                        Technical Guide to System Modifications
          Macro Description                                             DELETEST
-         3.1.10   DELETEST
+         3.1.10   DELETEST
+                  ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | DELETEST | »EP=|EPLOC=º Ý,LEN=3|4¨                         |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro examines  the contents of the three-byte DC  with the label
          specified by the EP or EPLOC operand, and issues an OS DELETE with the
          same EP or EPLOC when the contents is non-zero.  When the LEN= keyword
          specifies  a value  other  than 3,   then  the  expansion expects  the
          labelled field to be four bytes long,  and issues the DELETE only when
          the contents is positive.   A negative value results from the @SERVICE
          LPALD routine for a module residing in LPA (or located in CSA).
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             183
1                   Technical Guide to System Modifications
     EBCDIG                                               Macro Description
-    3.1.11   EBCDIG
+    3.1.11   EBCDIG
+             ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | EBCDIG   | value,length                                    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro  is used to generate  DC constants for numeric  or absolute
     values that  are not  defined (or not  convenient)  at  assembly time.
     "value"  specifies  a  SETA  symbol,    self-defining  number,   or  a
     non-relocatable expression. The value must be non-negative.
0    "length" specifies  the desired DC length,   and must be written  as a
+                                                     ____
     single digit (1-9).
-    For example:
      SORTREC  EQU   *            beginning of a SORT record
      SORTKEY  DS    CL44the SORT key
      SORTDATA DS    ...          other data
      SORTLEN  EQU   *-SORTREC    length of data
               SPACE 1
      SORTREC1 DC    C' SORT FIELDS=(1,'
               EBCDIG L'SORTKEY,3  produces DC C'0' / DC C'4' / DC C'4'
               DC    C',CH,A)'
      SORTREC2 DC    C' RECORD SIZE=('
               EBCDIG SORTLEN,4    expands appropriate DCs
               DC    C')'
-    When a name field is used, the macro expansion includes
              name     DC    0CL(length)
-
-
-
-
-
-
-
-
     184
1                        Technical Guide to System Modifications
          Macro Description                                                 ENDM
-         3.1.12   ENDM
+         3.1.12   ENDM
+                  ____
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | ENDM     | PFX=save RC= RC0=  RC1= COPYRET=addr|(addr,len) |
           |      |          | RETADDR=(r14) DISP=»FREEMAIN|TEST|RETAINº NEXT= |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         The ENDM  macro is  used to terminate  a module  begun with  the SAVEM
          macro. It is dependent on SAVEM only to the extent that the first word
          of the  caller's save  area is used  to stash  a GETMAIN  sub-pool and
          length,  and  that the first SAVEM  in an assembly declares  a mapping
          DSECT for the save area.
0         PFX specifies the one to four bytes used  as a prefix in SAVEM for the
          save area mapping.  It  may be omitted if SAVEM was  also defaulted or
          set to SAVE.
0         RC=  may  be used  to  pass  a return  code.   The  operand may  be  a
          self-defining  value  valid  in  an LA  instruction,   or  a  register
          specification for a register other than  R13,  R0 and R1.   With NEXT=
          null, a numeric operand is allowed (0-4095).
0         RC0= may be  used to return a  value in register 0.   The operand must
          specify a register other  than R13,  R0 and R1.   With  NEXT= null,  a
          numeric operand is allowed (0-4095).
0         RC1= may be  used to return a  value in register 1.   The operand must
          specify a register other  than R13,  R0 and R1.   With  NEXT= null,  a
          numeric operand is allowed (0-4095).
0         COPYRET=  provides  an  alternate  means  for  setting  return  codes.
          COPYRET=address specifies the  name of a word  containing the intended
          return code for register 15. The form COPYRET=(addr,len) specifies the
          starting address, and self-defining length to be moved, beginning with
          register 15. A length of 8 would copy values for registers 15 and 0, a
          length of 12  would copy 15,  0  and 1.   The address  operand may not
          specify  an address  that requires  register 13  for resolution;   the
          expanded code no longer has a valid R13 at the time of the move.
0         DISP=RETAIN indicates that R13 is not to be changed.  Any return codes
          are placed into the current save area,  and the registers are reloaded
          from there. This operand is commonly used with a NEXT= operand.
0         DISP=FREEMAIN  indicates  that word  one  of  the caller's  save  area
          contains the  sub-pool and length of  the current save and  work area,
          and are to be FREEMAINed.
0         DISP=TEST indicates that  word one of the caller's  save area contains
          the sub-pool and length of the current save area, or a length of zero.
          For a non-zero length, the area is freed.
0         NEXT=module-name  specifies that  after the  FREEMAIN,   if any,   and
          register reloading, an XCTL to the named module is to be performed.
-                                                                            185
1                   Technical Guide to System Modifications
     ENDM                                                 Macro Description
-    If NEXT is  omitted or null,  then after registers  are reloaded,  the
     code branches to the address specified  in RETADDR,  which defaults to
     (R14). Note the restriction for an address branch - the registers have
     been reloaded, but the USING environment has not been altered.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     186
1                        Technical Guide to System Modifications
          Macro Description                                              FDRREAD
-         3.1.13   FDRREAD
+         3.1.13   FDRREAD
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | FDRREAD  | type,operand Ý,USE=VTOC¨                        |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro invokes the @FDRREAD routine,  which reads tapes created by
          Innovation Data Processing,  Inc.'s  Fast Dump/Restore (FDR)  program.
          The  function  is  used  by  @OBTAINS  and  IEHVTOC  to  perform  VTOC
          processing for an unrestored volume.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             187
1                   Technical Guide to System Modifications
     FSAWORK                                              Macro Description
-    3.1.14   FSAWORK
+    3.1.14   FSAWORK
+             _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | FSAWORK  |                                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro creates a DSECT and the header data for a work area chained
     from TCBFSA, as used by @PRINTER and @SERVICE.  When the name field is
     omitted,  FSAWORK  is generated.    The PFX=  keyword may  be used  to
     specify a one to three byte prefix. Expanded are:
0     FSALINK  A    pointer to next FSA area or zero for last entry
      FSAID    CL4  name of this work area (SERV for @SERVICE, PRTW,
                    PRT1-8 for @PRINTER areas, etc.)
      FSASPLEN X/AL3  Sub-pool and GETMAIN length for this area
      FSATCB   A    TCB address of owner
-
-
-
-
-
-
-
-
-
-
-
-
-
     188
1                        Technical Guide to System Modifications
          Macro Description                                              IHADVCT
-         3.1.15   IHADVCT
+         3.1.15   IHADVCT
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | none | IHADVCT  | ÝDSECT=YES|NO¨                                  |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  is a modification  of the IBM  supplied macro of  the same
          name, upgraded to expand correctly both for SVS and MVS/SP1.3.
0         Note that the  SP version contains a half-word  modulus value appended
          to the RPS  section.  In earlier releases,  the modulus  was stored in
          DVCOVHD.
0         This macro  also contains both old  and new names for  changed fields,
          for instance it declares both DVCDSECT and DVCSECTD.
0         When  DSECT=NO  is specified,   then  the  DVCTI prefix  expansion  is
          skipped, and the mapping begins with the DVCCYL field (device entry).
-
-
-
-
-
-
-
-
-
-
-
-
0                                                                            189
1                   Technical Guide to System Modifications
     INC                                                  Macro Description
-    3.1.16   INC
+    3.1.16   INC
+             ___
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | INC      | word-address Ý,INC=¨ Ý,WORK=r0¨                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    The INC macro permits convenient manipulation of full-word counters.
0    WORK=  specifies a  temporary work  register.   When the  word-address
     (first parameter)  is  supplied in register form,   then the registers
     must  be distinct  unless  the INC  operand  is  also specified,   and
     specifies either -1 or a register.
0    INC= may specify an increment in self-defining or (register)  form.  A
     leading minus sign  designates a decrementation,  and  will be honored
     correctly,   including  the   case  when  it  precedes   a  (register)
     specification.
0    Examples:
      A INC   maxnum      B INC   (R0),INC=-(R2)   C INC   maxcnt,INC=(R2)
      A LA    R0,1        B SR    R0,R2            C L     R0,maxcnt
        A     R0,maxnum                              AR    R0,R2
        ST    R0,maxnum                              ST    R0,maxcnt
-
-
-
-
-
-
-
-
-
-
-    190
1                        Technical Guide to System Modifications
          Macro Description                                                 INCH
-         3.1.17   INCH
+         3.1.17   INCH
+                  ____
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | INCH     | word-address Ý,INC=¨ Ý,WORK=r0¨                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         The INCH macro permits convenient manipulation of half-word counters.
0         WORK=  specifies a  temporary work  register.   When the  word-address
          (first parameter)  is  supplied in register form,   then the registers
          must  be distinct  unless  the INC  operand  is  also specified,   and
          specifies either -1 or a register.
0         INC= may specify an increment in self-defining or (register)  form.  A
          leading minus sign  designates a decrementation,  and  will be honored
          correctly,   including  the   case  when  it  precedes   a  (register)
          specification.
0         Examples:
           A INCH  maxnum     B INCH  (R0),INC=-(R2)   C INCH  maxcnt,INC=(R2)
           A LA    R0,1       B SR    R0,R2            C LH    R0,maxcnt
             AH    R0,maxnum                             AR    R0,R2
             STH   R0,maxnum                             STH   R0,maxcnt
-
-
-
-
-
-
-
-
-
-
-                                                                            191
1                   Technical Guide to System Modifications
     INPCLOSE                                             Macro Description
-    3.1.18   INPCLOSE
+    3.1.18   INPCLOSE
+             ________
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | INPCLOSE | omitted|TCLOSE Ý,DEV=list¨                      |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    The INPCLOSE macro calls the @INPREAD (input read) function to perform
     a temporary (with operand TCLOSE) or permanent CLOSE (omitted operand)
     of one  or more  files.  It operates  on file  1 unless  DEV specifies
     another number, or a list of numbers.
-    3.1.19   INPCOM
+    3.1.19   INPCOM
+             ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | INPCOM   | b0,b1,fn,a0,a1,DEV                              |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This is an internal macro called by INPxxxx macros other than INPWORK.
-
-
-
-
-
-
-
-
-
-
-
-
     192
1                        Technical Guide to System Modifications
          Macro Description                                               INPGET
-         3.1.20   INPGET
+         3.1.20   INPGET
+                  ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | INPGET   |                                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro invokes @INPREAD to get  another record.   A return code is
          placed into register 15;  a code of 4 signals an end-file,  and a code
          of 8 signals a logic or I/O error.   For a good return, the address of
          the record is in R1, the length in R0, and a zero code in R15.
-         3.1.21   INPKEEP
+         3.1.21   INPKEEP
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | INPKEEP  |                                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  invokes @INPREAD to signal  that the last  record returned
          (on a prior INPGET) should be returned again on the next INPGET.  Note
          that this is a re-read function,  not  a backspace.  If used more than
          once, no additional processing takes place.
-
-
-
-
-
-
-
-
-
-
-
                                                                             193
1                   Technical Guide to System Modifications
     INPOPEN                                              Macro Description
-    3.1.22   INPOPEN
+    3.1.22   INPOPEN
+             _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | INPOPEN  | work-addr Ý,DEV=number¨ Ý,OPT=¨                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro calls @INPREAD to open a  file defined by the INPWORK macro
     with label "work-addr".  DEV= specifies the  logical file number to be
     used, with a default of 1. Subsequent INPxxxx macros will use the file
     number to correlate requests.
0    OPT= specifies one or more (sub-list form) processing options:
0    ABE or ABEND  requests an abnormal termination,  with  dump,  and user
     code 2540,   when the  requested file  cannot be  opened.   Note  that
     another abend  may occur in @DCBEXIT  when the DCB parameters  are not
     resolvable.   Other   than  this,   in   the  absence  of   the  ABEND
     specification, INPOPEN will return a value of 8,  12 or 16 to indicate
     an error.  The abend  would be taken only for the  level 8 error.  The
     others are  issued before the OPEN  code gets control (bad  work area,
     duplicate file number, etc.).
0    DUMMY signals  that a DD  DUMMY will not cause  an error;  it  will be
     treated as an empty file.
0    NOWTO requests that a missing primary DDNAME, or a DD DUMMY,  will not
     cause a WTO/WTP message to the  user.  OPEN processing is not affected
     by this option.
0    JFCB  or  OPENJ indicates  that  a  pre-read or  pre-constructed  JFCB
     address has  been supplied  in the  INPWORK area.    This function  is
     generally used for re-opening a PDS  with modified member names.  This
     option may cause problems when used without additional checks;  it may
     cause problems with concatenated files.
-
-
-
-
-
-
-
     194
1                        Technical Guide to System Modifications
          Macro Description                                              INPWORK
-         3.1.23   INPWORK
+         3.1.23   INPWORK
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | INPWORK  | ddname,alt-ddname EDIT=0 JFCB=                  |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         The INPWORK macro expands a refreshable,  re-entrant control block for
          use  by the  @INPREAD routine.   While  it is  intended primarily  for
          card-format files, it will work with record lengths up to 500 bytes.
0         The "ddname" field  specifies a primary DD name,   the "alt-ddname" an
          alternate name to  be used when the  first DD is missing  or defines a
          DUMMY.  The OPT=DUMMY operand is meaningful only when the alternate DD
          is also not usable.
0         Both like and unlike concatenation of files is accepted,  subject only
          to the restriction  that the largest blocksize  be declared explicitly
          on the first  DD of the concatenation  whenever a file with  a smaller
          blocksize precedes the file with the largest size.
0         WIDTH specifies the  desired width of the records.   @INPREAD will pad
          each record  to this width,  using  the character defined by  the FILL
          keyword as the padding byte.  When WIDTH is set to zero,  then records
          are passed back as  read,  with the current length passed  back in R0.
          This mode of  operation is somewhat faster,  since  short records need
          not be moved to a work area for padding.
0         EODAD=1 specifies an end-file exit address.  This is taken just as the
          exit defined by DCBEODAD, except that an address of 0 is also taken as
          a null exit.  EODAD need not be used if the user tests for return code
          4 after each input request.
0         EDIT=0  specifies optional  processing  flags with  the  same use  and
          meaning as those  defined for WCMFG1 in the SERVCOMP  workarea used by
          the @SERVICE  decompression function WDCOM.   @INPREAD uses  WDCOM for
          WYLBUR compressed (edit-format) files,  and honors the 'TSO' flags for
          variable  length  (RECFM=Vxx)   files relating  to  the  presence  and
          location of sequence numbers.
-
-
-
-
-
-                                                                            195
1                   Technical Guide to System Modifications
     LAT                                                  Macro Description
-    3.1.24   LAT
+    3.1.24   LAT
+             ___
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | LAT      | reg,addr,Ýbz¨,Ýbnz¨ Ý,LA=»none|FW|0|RXº¨        |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    LAT is intended to load the low  three bytes of a four-byte field into
     a register. The LA= parameter controls expansion :
0    LA= (omitted) expands                           ICM reg,7,1+addr
0    LA=FW loads all four bytes                      ICM reg,15,addr
0    LA=0 zeroes the register prior to the ICM       SLR reg,reg
      (use LA=RX if "addr" depends on "reg")         ICM reg,7,1+addr
0    LA=RX indicates that the "addr" parameter       LA  reg,addr
      may be an RX expression.                       ICM reg,7,1(reg)
0    Optional  parameters  "bz"  and "bnz"  specify  registers  or  address
     expressions  which  will  be  the target  of  a  generated  branch  on
     condition.
0    Example :
0     name   LAT   R3,TCBTCB,,DOMORE   generates :
0     name   ICM   R3,7,1+TCBTCB
             BNZ   DOMORE
-
-
-
-
-
-
-
-
-    196
1                        Technical Guide to System Modifications
          Macro Description                                              LOADLPA
-         3.1.25   LOADLPA
+         3.1.25   LOADLPA
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | LOADLPA  | »EP=name|EPLOC=name-addrº       Ý,DCB=dcb-addr¨ |
           |      |          | ÝMLPA=»YES|NOº¨                                 |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro is  used to locate an  LPA resident module,  or  to LOAD it
          when it is not in LPA.  This is  used by SERVINIT to load the @SERVICE
          routine. The user must supply a CVT (macro CVT) and CDE (macro IHACDE)
          mapping in the same assembly.
0         EP and  EPLOC have  the same meaning  as on  the OS  LOAD instruction.
          DCB= may be specified, but is ignored for the LPA search.
0         The code searches the MLPA chain,   unless MLPA=NO is requested,  then
          uses the  CVTQLPAQ lookup  routine to  test the  PLPA.   When  neither
          search is successfull, an OS LOAD is issued.
0         After executing the expanded code, register 0 will contain zero if the
          module was not found, the module address if it was loaded,  or the LPA
          address and a high X'80' bit.  Registers  14 through 1 are used by the
          code.
-
-
-
-
-
-
-
-
-
-
-                                                                            197
1                   Technical Guide to System Modifications
     LOOKLPA                                              Macro Description
-    3.1.26   LOOKLPA
+    3.1.26   LOOKLPA
+             _______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | LOOKLPA  | »EP=name|EPLOC=name-addrº                       |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This function invokes the CVT resident LPA lookup routine.  Unlike the
     LOADLPA function, an MLPA search is not made.
0    On return,  R0  contains 0 if the  module was not found,   or else the
     entry address of the module.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    198
1                        Technical Guide to System Modifications
          Macro Description                                              MACPARM
-         3.1.27   MACPARM
+         3.1.27   MACPARM
+                  _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | MACPARM  | expr,addr     Ý,OP=LA¨    Ý,OPR=LR¨     Ý,OPM=¨ |
           |      |          | Ý,OPMR=LNR¨ Ý,MODE=»none|EQU|ONE|REVº¨          |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         MACPARM is used to expand code inside other macros.  The intended name
          field is set into global &MACPLAB;  the  name field on MACPARM is used
          only if &MACPLAB is null.  If code  is expanded,  &MACPLAB is set to a
          null string.
0         MODE=ONE requests expansion  of a single operand  instruction.  "expr"
          may be omitted (no code expanded), a register value, or an expression.
          The code expanded will be OP expr  or OPR expr (register form).
0         With a MODE value other than ONE, "expr" must be a register, either in
          nn  or Rnn  form,  "addr"  may be  any valid  expression,  or  another
          register specification (either (nn) or (Rnn)).
0         With  MODE  omitted,   if  the  "expr"  register  matches  a  register
          specification for "addr",  no code  is expanded.  MODE=EQU forces such
          expansion, and is used with OPR=LTR,  and similar requests.   If there
          is no  match,  the code  expands as  OPR expr,addr unless  MODE=REV is
          specified;  reverse mode expands OPR addr,expr.   When "addr" is not a
          register expression, the code expands as  OP expr,addr.  For all modes
          other than ONE,  the value specified  for the "addr" operand may begin
          with a minus sign.   In this case the register form  of the expansions
          will use the OPMR code;  for an expression the code will expand OPM if
          it was specified.  If OPM was not  specified,  the code expands the OP
          instruction followed by LNR.
0         For example, given the definition of SAMPLE :
0                 MACRO
           &NAME  SAMPLE &R,&A,&BZ
                  GBLC  &MACPLAB
           &MACPLAB SETC '&NAME'
                  MACPARM R0,&R,OP=L
                  MACPARM R0,&A,OP=S,OPR=SR,OPM=A,OPMR=AR
                  MACPARM &BZ,OP=BZ,OPR=BZR,MODE=ONE
                  MACPARM R0,&R,OP=ST,MODE=REV
                  MEND
0         the following code would be expanded :
0          A      SAMPLE (5),XYZ,ZERO
           A      LR    R0,R5
                  S     R0,XYZ
                  BZ    ZERO
                  LR    R5,R0
0         or :
-                                                                            199
1                   Technical Guide to System Modifications
     MACPARM                                              Macro Description
-     B      SAMPLE VAL,(4)
      B      L     R0,VAL
             SR    R0,R4
             ST    R0,VAL
0    or :
0     C     SAMPLE ((X+4)),-(R4)
      C     L     R0,((X+4))
            AR    R0,R4
            ST    R0,((X+4))
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    200
1                        Technical Guide to System Modifications
          Macro Description                                             MAPEXTNT
-         3.1.28   MAPEXTNT
+         3.1.28   MAPEXTNT
+                  ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | MAPEXTNT | ÝDSECT=»YES|NOº¨                                |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  maps the  contents of a  single extent in  a format  1 and
          format 3 DSCB.
0         When a "name" field is supplied,  it  is used as a label.  The default
          name is MAPEXTNT.  DSECT=NO causes a DS  0H to be expanded. The fields
          are:
0          XTWHOLE 0XL10  label for MVC/CLC use - entire extent
           XTTYPE  X      extent type descripter byte
            XTTTRK    X'01' track aligned extent
            XTTLABEL  X'40' user-label extent
            XTTSPLIT  X'80' split-cylinder allocation
            XTTCYL    X'81' cylinder aligned extent
           XTSEQ   X      extent sequence number (0-15)
           XTLOCYL H      beginning cylinder address
           XTLOTRK H      beginning track address
           XTHICYL H      ending cylinder address
           XTHITRK H      ending track address
-
-
-
-
-
-
-
-
-
-
0                                                                            201
1                   Technical Guide to System Modifications
     MAPINP                                               Macro Description
-    3.1.29   MAPINP
+    3.1.29   MAPINP
+             ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | MAPINP   | ÝPREFIX=pn¨ Ý,DSECT=»YES|NOº¨                   |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro  maps the contents  of the  expansion of an  INPWORK macro.
     The label, in the absence of a user supplied one,  is constructed from
     the prefix and 'PARM', i.e., PNPARM for the default prefix.
0    PREFIX= specifies an optional one to two byte prefix.
0    DSECT= may be used to request or suppress expansion of a DSECT card.
      PNDDNAM  DC   CL8' '   Primary DDNAME
      PNDDALT  DC   CL8' '   Alternate DDNAME
      PNEODAD  DC   A(1)     EODAD or 0,1 if none
               DC   A(0)          Reserved
      PNWIDTH  DC   H'0'     Line width for truncation/padding
               DC   H'0'          Reserved
      PNPRFG   DC   X'00'    Option flags
      PNFGABE  EQU  X'80'      ABEND if OPEN fails/DD missing
      PNFGDUM  EQU  X'40'      Allow DD DUMMY (else ABEND)
      PNFGNWTO EQU  X'20'      Suppress WTO if bad OPEN and no ABEND
      PNFGJFCB EQU  X'10'      JFCB address present (long expansion)
      PNFILL   DC   X'00'    Fill byte for padded records
      PNEDIT   DC   X'80'    Edit options (match WCMFG1)
      PNFESET  EQU  X'80'      Option bits set (else use defaults)
      PNFEOSI  EQU  X'40'      OSI line number format
      PNFEHWD  EQU  X'20'      Half-word line numbers
      PNFEINT  EQU  X'10'      Create integer line numbers (N/A)
      PNFEEDT  EQU  X'08'      Create edit line numbers 4C.3C (N/A)
      PNFETSO  EQU  X'04'      Line numbers left-adjusted in RECFM=V
      PNFENB#  EQU  X'01'      Insert line numbers even if non-blank
               DC   X'00'         Reserved
      PNJFCB   DC   0A(0)    Optional JFCB address for OPENJ
-
-
-
-
-
-
-    202
1                        Technical Guide to System Modifications
          Macro Description                                               MAPPDS
-         3.1.30   MAPPDS
+         3.1.30   MAPPDS
+                  ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | MAPPDS   | ÝPDSBLDL=»NO|YESº¨                              |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  is used to expand  special directory entry  mappings.   It
          should be placed immediately following an IHAPDS macro to redefine the
          user portion of  the directory entry.  Currently  expanded are entries
          for IBM's SPF product,  and  the Cornell University's IEBUPDTX utility
          program.
           *       User data for SPF entries
           *
                    ORG   PDS2USRD      Redefine user data
           SPFVERL  DS    X             Version number
           SPFMODL  DS    X             Modification level
                    DS    XL2             Reserved (zeroes)
           SPFCRTDT DS    PL4           Creation date
           SPFMODDT DS    PL4           Modification date
           SPFMODTM DS    XL2           Modification time (packed, no sign)
           SPFCURLN DS    XL2           Current line count
           SPFINILN DS    XL2           Initial line count
           SPFMODLN DS    XL2           Number modified
           SPFUID   DS    CL7           User Id
                    DS    C' '            Reserved (blank)
                    DS    CL2' '          Reserved (blank)
           SPFUDLEN EQU   (*-PDS2USRD+1)/2   Half-word length of entry
           *        User data portion for IEBUPDTX chained entries
           *
                    ORG   PDS2USRD
           DTXSSI   DS    XL4           SSI or FF200000
           DTXMODNM DS    CL8           Production member name
           DTXID    DS    CL2           Library Id
           DTXMODNO DS    PL2           Module number
           DTXVER   DS    PL2           Version number
           DTXUDLEN EQU   (*-PDS2USRD+1)/2   Half-word length of short entry
           DTXTIMES DS    XL4           (Optional) time stamp YYDDDHHF
           DTXUDLTM EQU   (*-PDS2USRD+1)/2   Half-word length of special entry
                    ORG   ,
-
-
-
-
-
0                                                                            203
1                   Technical Guide to System Modifications
     MAPPRT                                               Macro Description
-    3.1.31   MAPPRT
+    3.1.31   MAPPRT
+             ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | MAPPRT   | ÝPREFIX=pu¨ Ý,DSECT=»YES|NOº¨                   |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro expands a mapping for PRTWORK and PUNWORK work areas.  When
     the name field is omitted, a label is create from the specified prefix
     and 'PARM'.
      PUDDNAM  DC   CL8' '        Primary DDNAME
      PUDDALT  DC   CL8' '        Alternate DDNAME
      PULPP    DC   H'0'          Lines per page
      PUFILL   DC   X'0'          Translate table unprintable character
      PUWIDTH  DC   X'0'          Line width for truncation
      PUTIT#   DC   X'00'         Number of titles
      PUFOOT#  DC   X'00'         Number of footers
      PUCCFG   DC   X'00'         Global carriage control flag
      PUPRFG   DC   X'00'         Option flags
      PUPUNCH  EQU  X'80'           Punch file
      PUPGPAGE EQU  X'01'           Page number feed-back
      *        Page numbers present only if user requested feed-back
      PUPAGE   DC   H'0'          Current page number
      PUSPAGE  DC   H'0'          Page number since last TITLE request
-
-
-
-
-
-
-
-
-
-
-    204
1                        Technical Guide to System Modifications
          Macro Description                                             MAPPRTWK
-         3.1.32   MAPPRTWK
+         3.1.32   MAPPRTWK
+                  ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | MAPPRTWK | ÝPREFIX=pw¨ Ý,WIDTH=¨                           |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro  maps the work  area used  by the @PRINTER  routine.   This
          mapping may be useful for FD user-exit routines.
           PWLINK   DS   F             Link to next GETMAINed area
           PWID     DS   C'PRTn'       Id of print file 'n'
           PWSPLEN  DS   F             Subpool/length of this area
           PWTCB    DS   A             Address of owning TCB
           PWDCB@   DS   X'BF',AL3(PWDCB)  DCB pointer and OPEN list
           PWPU@    DS   A             Address of user's OPEN work area
           PWTRAN   DC   F'0'          Address of translate table or 0
           PWDDNAM  DS   CL8           DDNAME
           PWUCS    DS   CL4           UCS name
           PWFCB    DS   CL4           FCB name
           PWLSTWRK DS   0XL14         Work area for each FD entry
           PWLSTLEN DS   A             Field length
           PWLSTLTX DS   A             Item length
           PWLSTADD DS   A             Item address
           PWLSTDAT DS   X             Data type
           PWCUROPT DS   X             Current processing options
           PWPREOPT DS   X             Prior options
           PWLSTEDT DS   X             Edit options
           PWBUFNXT DS   A             Address of next byte
           PWSCRCUR DS   H             Bytes used in current line
           PWFLAG   DS   X             Processing flag
           PWFPUN   EQU  X'80' =PUPUNCH   This is a punch file
           PWFAKE   EQU  X'20'         In-storage access method
           PWFCON   EQU  X'10'         Output routed to console
           PWFHEAD  EQU  X'04'         Title printed on this page
           PWFPRINT EQU  X'02'         Buffer contains text
           PWFGPAGE EQU  X'01' =PUPGPAGE   User page # feed-bacl option
           PWFILL   DC   AL1(0)        Unprintable character replacement
           PWDCB    DCB  DDNAME=ANY,DSORG=PS,MACRF=PM,EROPT=ACC,     *
                          RECFM=VBSA,LRECL=137,EXLST=PWEXLIST
           PWEXLIST DC   0A(0),X'87',AL3(0),A(0,0) +JFCB+@DCBEXIT
           PWTOPPG  DC   F'0'          Edit len/address for page number
           PWTOPPS  DC   F'0'             ditto for sub-page
           PWTOPDT  DC   F'0'             ditto for date
           PWTOPTM  DC   F'0'             and time
           PWBOTPG  DC   F'0'          Edit len/address for page number
           PWBOTPS  DC   F'0'             ditto for sub-page
           PWBOTDT  DC   F'0'             ditto for date
           PWBOTTM  DC   F'0'             and time
           PWCURLN  DC   H'-1'         Line on current page
           PWMAXLN  DC   H'60'         Maximum lines per page (incl. titles)
           PWWIDTH  DC   H'0'          Data width for truncation
           PWTIT#   DC   H'0'          Number of title lines
           PWFOOT#  DC   H'0'          Number of footer lines
           PWPAGE   DC   H'0'          Current page number
           PWSPAGE  DC   H'0'          Page since last title change
0                                                                            205
1                   Technical Guide to System Modifications
     MAPPRTWK                                             Macro Description
-     PWTRTAB  DC   256AL1(0)     Translate table
      PWCCSAV  DC   C' '          Save PWRECCC over PUT
      PWBUFSP  DC   AL1(0)        Sub-pool of GETPOOL request
      PWVCON   DC   F'0'          V-format record header
      PWRECCC  DC   C' '          Carriage control
               AIF   ('&WIDTH' NE '').HAVEW
      PWREC    EQU  *             Data record
               AGO   .MEND         Truncate the mapping
      .HAVEW   ANOP  ,
      PWREC    DC   CL(&WIDTH)' '   Text record
               DS    0F
      PWMCREC  DC   CL((&WIDTH+5+3)/4*4)' '   Machine control save record
      PWMCC    EQU  PWMCREC+4,1,C'C'        Carriage control
               DS    0F
      PWSIZE  EQU   *-&DS         Length of fixed area
      PWULOP   DC   CL((&WIDTH+5+3)/4*4)' '   Underline/overprint rcd
               DS    0F
      PWTIT1   DC   CL((&WIDTH+5+3)/4*4)' '   1-14 Title/footer records
-
-
-
-
-
-
-
-
-
-
-
-
0    206
1                        Technical Guide to System Modifications
          Macro Description                                                 MOTE
-         3.1.33   MOTE
+         3.1.33   MOTE
+                  ____
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | none | MOTE     | Ýlevel¨,"'text'"                                |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This macro is supplied to permit an MNOTE request from open code.  The
          level and text operands are defined as for MNOTE.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                                                            207
1                   Technical Guide to System Modifications
     MTITL                                                Macro Description
-    3.1.34   MTITL
+    3.1.34   MTITL
+             _____
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | none | MTITL    | 'string' Ý,LEN=40¨                              |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    This macro sets the left half of a title,  usually the program name or
     description.  A subsequent STITL macro will  set the right halt of the
     title and generate a TITLE card.
0    LEN may be specified to set the length  of the left half of the title.
     When  the specified  text  string is  shorter,  it  is  padded to  the
     specified length.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     208
1                        Technical Guide to System Modifications
          Macro Description                                             OPTIONGB
-         3.1.35   OPTIONGB
+         3.1.35   OPTIONGB
+                  ________
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | none | COPY     | OPTIONGB                                        |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
0         This member contains the GBLA, GBLB and GBLC definitions for variables
          set by the SYSPARM macro.  It is commonly used, after a TITLE card and
          macro definitions, at the beginning of an assembly.  Note that SYSPARM
          does  not  work in  assemblies  also  using  the JES2  $SYSPARM  macro
          explicitly or implicitly via $HASPCBS.
           GBLA  &SYSPRM#            Number of SYSPARM tokens
           GBLA  &SVCJFCB            0 or MODJFCB SVC number
           GBLA  &SVC@SVC            0 or @SERVICE routine SVC
           GBLA  &SVCTMSX,&SVCTMSY   0 or UCC-1 (TMS) SVC X/Y numbers
           GBLB  &BUGBEAR      (was &DEBUG - same as HASP)
           GBLB  &MVS                1 if OS/VS2 MVS
           GBLB  &MVSSP              1 if OS/VS2 MVS/SP
           GBLB  &MVSXA              1 if OS/VS2 MVS/XA (SP2)
           GBLB  &SVS                1 if OS/VS2 SVS
           GBLB  &VS1                1 if OS/VS1
           GBLC  &CPU                360/370/470
           GBLC  &LOCAL              Installation acronym/name
           GBLC  &MODEL              360/370/470
           GBLC  &SPVEREL            MVS/SP Version/release/level
           GBLC  &SYSPRMS(10)        SYSPARM tokens
           GBLC  &PRTMAC             GEN option for local mappings
           GBLC  &PRTSOR             GEN option for source code
           GBLC  &PRTSYS             GEN option for system mappings
           GBLC  &SYSTEM             MVT/SVS/MVS
-
-
-
-
-
-
-
-
0                                                                            209
1                   Technical Guide to System Modifications
     ST@                                                  Macro Description
-    3.1.36   ST@
+    3.1.36   ST@
+             ___
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | ST@      | reg,addr Ý,MVI=¨                                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
0    ST@ stores the low three bytes of a register in the low three bytes of
     the four-byte address specified by "addr".
0    MVI= may specify  a self-defining term,  or a register.   The value is
     placed into the high byte of "addr".
0    Examples:
0             ST@   R3,DWCWDATA,MVI=6  (set CCW address and read opcode)
      expands STCM  R3,7,1+DWCWDATA
              MVI   DWCWDATA,6
0             ST@   R3,(R4),MVI=(R5)
      expands STCM  R3,7,1(R4)
              STC   R5,0(R4)
-
-
-
-
-
-
-
-
-
-
-
0    210
1                        Technical Guide to System Modifications
          Macro Description                                                TRTAB
-         3.1.37   TRTAB
+         3.1.37   TRTAB
+                  _____
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | TRTAB    | CODE=»2260|3270|PN|TNº,ÝFILL=C'.'¨,             |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-
          3.1.38   TRTAB
+         3.1.38   TRTAB
+                  _____
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | TRTAB    | TYPE=»ATOEÝ,OPT=SHORT¨|ETOA|ITOE|ETOIº          |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-         TRTAB is used to expand tables other than the standard translations in
          the work area. The name field is required.
0         CODE= specifies the type of device or  print train for which the basic
          code is to be expanded.
0         FILL= specifies a self-defining term (one byte) which will be used for
          untranslatable characters.
0         OPT= specifies additional options.
           FOLD   folds lower to upper case
           UP     upper case only; lower case replaced by FILL character.
           LOW    leaves lower case data even though not supported (PN, 2260)
           SVC    converts X'C0' to C'+'
           ERR    converts X'3F' to C'"' (2260 error symbol)
-         TRTAB with the TYPE keyword  expands IBM compatible tables translating
          EBCDIC to 7-bit  ASCII code (ETOA,  and  back with ATOE),  as  well as
          EBCDIC to  8-bit ISCII code (ETOI,   back with ITOE).   Note  that the
          ISCII translation is reversible,  the ASCII is not.   OPT=SHORT may be
          used  with ATOE  to generate  only  the valid  codes;  two  successive
          ATOE,OPT=SHORT  requests could  be used  to translate  ASCII with  and
          without parity bits.
-
-
-
-
-
0                                                                            211
1                   Technical Guide to System Modifications
     Macro description
-    3.2   FIELD DESCRIPTOR MACROS
+    3.2   FIELD DESCRIPTOR MACROS
+          _____ __________ ______
0    The Field Descriptor (FD)  macros are used to provide data on a field,
     rather than record, level to the print routine @PRINTER,  and the 3270
     series  CRT support  routines (proprietary,   not distributed).    For
     @PRINTER  service,  extended  high-lighting,   color,   and other  CRT
     capabilities  are ignored,   with  the  exception of  underlining  and
     intense display. These are supported for print files declared with ASA
     or machine control characters (RECFM=xxA or xxM). Note that as part of
     the CRT  simulation,  an  attribute change  always takes  a separating
     space (attribute byte) even on the printer.   The FD macro will expand
     a  shorter entry  when no  3278/3279  options are  used.  This  output
     matches  that  produced by  the  FDPRT  macro,  which  treats  3278/79
     requests as comments.
0    All FD macros expand flags, values and addresses. Addresses are always
     in S format  (base/displacement),  hence the registers  defined at the
     point the FD macros are invoked must contain the expected value. FDOPT
     and  FD macros  are  not  modified (except  by  the  user);  the  FDIN
     expansions are always modified and must  not be placed in refreshable,
     re-entrant storage.   FDIN  is not supported by  the @PRINTER routine.
     Note that  FD entries expand  to different lengths;   hence references
     should be made only after testing the entry type.  The contents of the
     entries is mapped by macro FDSECT;   it expands all entry types.  Only
     the first two bytes appear in all entries; the first byte contains the
     offset to the next FD entry in the list,  the second byte contains the
     FD type.  Note that all types have a NOP bit,  which causes them to be
     ignored. The basic types are FD (output data description), FDIN (input
     field), FDOPT (screen options),  and FDGOTO (transfers to another FD).
     All FD chains must be terminated by  an ending FD entry specified with
     FD *END.  FDIN must  be used for output fields which  are intended for
     light-pen selection to provide feedback when the field is selected.
0    Common options :
0    SKIP - the SKIP option causes cursor movement  by field keys to ignore
              the specified field.  This is  the default for output fields.
              It  may be  used  for  input fields  which  are  meant to  be
              light-pen detectable only.
     PROTECT - by default,  output fields are  protected,  input fields are
              not.  PROTECT  may be specified  to set protection,   but not
              SKIP.
     NUMERIC - hardware support permitting, NUMERIC or NUM will set a field
              to numeric  input only.  Note  that the hardware  permits the
              terminal user to  override this;  hence numeric  input is not
              guaranteed; valid on FDIN only.
     INTENSE - by default, fields are displayed at normal screen intensity.
              INTENSE  or  INT  may be  specified  to  produce  intensified
              fields.  Note that INTENSE fields are light-pen detectable by
              default.
     DETECT - all fields  may be  specified for  light-pen selection  using
              DETECT or LP.   For detection,  field data must  start with a
              blank (LP attention),  question mark (selection),  or at sign
-    212
1                        Technical Guide to System Modifications
          Macro description
-                  (3278/79  LP   enter).   DETECT  and  INTENSE   are  mutually
                   exclusive.
          NONDISP - NDISP  and NONDISP  prevent user  data keyed  into an  input
                   field from being displayed on the screen.
          DFLT - establishes default options,  and may  be used to document that
                   defaults are in use.
          PREVIOUS or PREV - use the options from  the last executed FD entry in
                   the  current  chain  (acts  as DFLT  if  it  appears  in  the
                   beginning of a chain). Only the options are used, type (input
                   or output) is not.
0         On  3278  and 3279  CRTs  with  the extended  high-lighting  facility,
          additional options  are supported;   these specifications  are ignored
          unless the hardware supports them :
0         UNDER - causes the field to be underlined.
          BLINK - the field will blink on and off.
          REVERSE - the  background  and  character  color   in  the  field  are
                   reversed.   According  to the hardware  manual,  only  one of
                   these three  options may be used  for any one field.   The FD
                   expansions do not check  (at this time - I need  a CRT to try
                   it out on, first).
0         On 3279 CRTs, the FD may be used to specify color.  Two types of color
          support are available - basic and full. In basic mode, four colors are
          available,  and  are assigned  on the  basis of  the field  attributes
          (protected/unprotected, intense/normal).   With full color support,  7
          color specifications are honored.   They are BLUE, RED,  PINK,  GREEN,
          TURQ(qoise), YELLOW and WHITE.   By default, GOSSIP will use the basic
          color scheme.
0         Extended 3278/3279 options (graphics,   multi-color characters,  etc.)
          are not  supported by the GOSSIP  control code,  although they  may be
          used by the caller. The presence of additional features is established
          during CRT initialization,   and is saved in encoded form  in the work
          area.
0         Editing options :
0         NL and NEWLINE - force the  entry to start on a new  line.   Note that
                 the entry may start  on the second byte of the  line if a Start
                 Field order must be inserted.
          DEB  - removes both  leading and trailing  blanks and hex  zeroes from
                 the data; by default, the remaining text is left-justified.
          DEBL - only strips leading blanks and hex zeroes.
          DEBR - only removes trailing blanks and hex zeroes.
          DEBZ - removes leading EBCDIC zeroes from a  string (a leading sign is
                 supported and processed correctly).
          RADJ - right-justifies data.
          PAD  - the  field  will  be  preceded and  followed  by  a  blank  (or
                 undisplayed SF  attribute byte).  By  default,  fields  are not
                 separated unless the options force presence of an SF (such as a
                 transition  from input  to output,   change  in intensity,   or
-                                                                            213
1                   Technical Guide to System Modifications
     Macro description
-           similar;  color and extended high-lighting changes do not force
            such a change).
     PADL - field to be  separated by a leading space;  this  option may be
            ignored if the  item is the first  on a display line  and an SF
            need not precede it on that line.
     PADR - field is  to be  separated by  a trailing  space;  this  may be
            ignored for the last field on a line.
     UPPER - the field  (on input and output)   is converted to  upper case
            regardless of the user's current case specification.   UPPER is
            assumed by the code for non-character fields.
     NULL - this  option  causes leading  and  trailing  hex zeroes  to  be
            removed  from a  field (on  output)  independently  of the  DEB
            options.  In addition, when the text length is shorter than the
            field length,  the  hardware erases the remainder  of the field
            (EUA order).  Without NULL, input fields are padded with blanks
            (RA order).  NULL enables use of the INSERT key;  without NULL,
            the user would need to DELETE  prior to insertion.  NULL should
            not be used when the output (and input) field contains position
            dependent data.
0    Fields  specified  on FDIN  macros  are  always treated  as  character
     fields, regardless of the type specification.
-
-
-
-
-
-
-
-
-
-
-
     214
1                        Technical Guide to System Modifications
          Macro Description                                                   FD
-         3.2.1   FD
+         3.2.1   FD
+                 __
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | FD       | value,length,type,options Ý,LEN=¨               |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-         The FD macro defines an output field.  All options described under the
          FD introductory description are valid;  but input related options will
          be ignored.
0         Supported character types :
0         Character  literal -  the  first field  specifies  a character  string
                delimited by  apostrophes;  embedded apostrophes  and ampersands
                must  be  doubled  as per  normal  assembler  convention.    The
                'length' and 'type'  fields are ignored;  the  second positional
                operand will be assumed to be  an option.   Note that the string
                must start with the apostrophe; the form C' is not supported.
0         All  others  - the  first  operand  specifies  a  variable name  or  a
          relocatable expression of the address.    The 'length' field specifies
          the length  of the  source field;  if  omitted,  the  assembler length
          attribute L' must be valid.
0         The 'type' operand specifies the input data type:
0         CHAR (default if omitted)  - character string which will be translated
                 to terminal  code.  Embedded  device orders  and other  special
                 characters will appear as periods.
          CON  - the field contains only terminal  control characters and should
                 not be  modified;  it is translated  to terminal code  with all
                 orders and special codes valid.
          ASIS - the field contains data (and orders) already in the code of the
                 device. Not supported at present.
          ADDR - the  address specified  by the  first operand  is formatted  in
                 hexadecimal.  Unless overridden, the output length is twice the
                 input length, but not longer than eight bytes.
          HEX  - the  field is  converted  to  displayable hexadecimal;   output
                 length defaults to twice the input length.
          SHEX - the field is treated as signed, and is displayed in hexadecimal
                 with a leading sign.
          BIT  - the input field is displayed as a string of 0s and 1s.
          I    - the field is displayed as a signed integer.
          $I   - the field  is treated  as an  integer value  of cents,   and is
                 displayed with a decimal point and commas.
          D    - the input item is packed decimal.
          $D   - the input is   assumed to be packed decimal,   and is displayed
                 with a period and two trailing decimals.
          F    - general floating point conversion. Input length may be length 4
                 (short floating point)   or 8 (long floating  point).  Extended
                 floating point  numbers (length > 8  will be treated  as long).
                 Output length will be one to  twenty-two bytes.  For numbers in
-                                                                            215
1                   Technical Guide to System Modifications
     FD                                                   Macro Description
-           the range  10£§ to  10µ£  no exponent  field  is printed.   For
            others, the general form is -.mantissaEÆxp;  where the mantissa
            consists  of  one to  sixteen  digits  (leading plus  sign  and
            trailing zeroes suppressed),  and "xp"  is the base 10 exponent
            (approximate range is 10¼½ to 10µ¾·).
0    LEN= may  specify an absolute value  or expression not  exceeding 132.
     The specified value will  be used as the output length  instead of the
     length derived  from the item's input  length.  Note that a  LEN value
     shorter  than the  item's significant  length  results in  truncation.
     Truncation is normally  done on the right,   but may be forced  on the
     left by requesting RADJ.  This feature may be used to display low bits
     in a byte, for instance.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     216
1                        Technical Guide to System Modifications
          Macro Description                                               FDGOTO
-         3.2.2   FDGOTO
+         3.2.2   FDGOTO
+                 ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           | name | FDGOTO   | FD-address                                      |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-         FDGOTO causes the processing routine (PRTLIST, SCLIST...)  to transfer
          from the  current FD to the  one specified in the  relocatable address
          expression of the first (and only)  operand.   The destination address
          must be another valid FD chain.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                                                            217
1                   Technical Guide to System Modifications
     FDIN                                                 Macro Description
-    3.2.3   FDIN
+    3.2.3   FDIN
+            ____
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | FDIN     | value,length,options Ý,LEN=¨                    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
-    FDIN describes  an input  field,  or an  output field  which is  to be
     light-pen detectable with feedback.  Even though data types other than
     character are  allowed on the  macro,  the processing  routines ignore
     such specification except for selecting case conversion.
0    Other operands are as described for the FD macro,  except that certain
     operands should  not be used  except for output  (detectable)  fields;
     these include  SKIP and PROTECT.    The LEN=  operand must be  used to
     obtain repeatable  screen position.    In general,   both FD  and FDIN
     fields which have  been designed to look nice,  should  contain a LEN=
     operand.
0    Note that  the contents of an  FDIN expansion is always  modified when
     the FDIN request is processed by an SC function;  it must therefore be
     coded in (or copied to)  work or stack storage,  and must not occur in
     refreshable programs except  as a pattern.  This precludes  the use of
     literals as FDIN data items. The input variable "value" is replaced by
     SCINDATA when the user modifies the  field;  the "length" field FDILEN
     is set to the input length;  and  the field modification bit is turned
     on (or off).
0    When the user replaces the contents of the "value" field, the value in
     FDILEN must be updated to the new string length, using MVI or STC:
      STC reg,name+FDILEN-FDSECT  sets the new length
0    The following modifications are made :
0    SC routines formatting  an FDIN field for display save  the address of
     the attribute byte in symbolic field  FDCADD (mapped by FDSECT);  this
     address may be  used to modify the  cursor or SBA address  in an FDOPT
     entry.  The value is stored as a half-word binary item.   The field is
     not modified if both 'length' and LEN= are zero.
0    The SCINDATA  service routine  scans through all  FDIN entries  in the
     chain passed to it, and turns off the FDDLIT bit in byte FDDATA.  Byte
     FDOLEN is set (remains)  the maximum length of the field;  byte FDILEN
     receives the  actual length  of the  data (if  any).  The  actual data
     length is derived after all editing  options (DEBL,  DEBR,  RADJ)  are
     performed.  When  the WASCRPEN option was  used on SCINIT,   the above
     processing  is performed  for  all  detectable "output"  fields;   for
     instance a field containing "?option" would be replaced with ">option"
     after selection.  When  WASCRPEN was not chosen,   detected fields are
     indicated  by setting  the FDDLIT  bit;   neither the  length nor  the
     contents of the field is changed in storage.
0    Data are translated to upper case when any of three conditions hold:
      The user issued a SET UPPER case command.
0    218
1                        Technical Guide to System Modifications
          Macro Description                                                 FDIN
-          The specified field type is not a character field (e.g., HEX)
           The UPPER option was specified on the FDIN entry.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                                                            219
1                   Technical Guide to System Modifications
     FDOPT                                                Macro Description
-    3.2.4   FDOPT
+    3.2.4   FDOPT
+            _____
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | FDOPT    | options ÝCUR=(row,column)¨ ÝSBA=(row,column)¨   |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
-    FDOPT may be used to change  immediate options,  to set future default
     options,  and to control screen and cursor positioning.  All color and
     high-lighting options  described on  the FD macro  may be  used;  they
     establish defaults for subsequently executed  FD macros in the current
     chain.
0       ALARM - on the next CRT write, sound the alarm.   The alarm request
               is turned off after the write.
0       SBA=(row,column)  this parameter may be used to set the address for
               the next field.
0       CUR=(row,column)  this parameter may be used to set the location of
               the cursor on the next  written screen.   The address should
               occur in an input field.
0    For both SBA and CUR, the row and column address must be valid for the
     current  device.  A  special  value of  *  or CURR  for  the field  is
     permitted to  specify the current  row or column;   + and NEXT  may be
     specified for the next row/column,  and - or PREV for the previous row
     or column.   A negative  value for the  column number  may be  used to
     position that number of columns,  less one,   from the end of the row,
     and  a negative  row value  to position  from  the end  of the  screen
     ("backspace" option below).   All  other specifications are restricted
     to unsigned  numbers,  and are specified  starting with (1,1)   as the
     first byte on the screen.
0    Buffer, cursor, and attribute byte addresses generated by the code are
     always half-word binary  fields (CRT linesize dependent).    The FDOPT
     and SCOPT services  permit specification of an optional  form of these
     fields not  dependent on the  size.  The two  bytes in an  address may
     assume the following values :
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                                       ¯
      |      Byte 0                     |      Byte 1                     |
      |                                 |                                 |
      |×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                                 ¿                                 ]
      | 0-63  Bytes 0 and 1 are a halfword binary offset from the start   |
      |     of the screen. Combined value is 0 to screen size less one.   |
      |×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                                 ¯                                 ]
      | 64 to (63+#lines) row number    | 1-132 column number             |
      | 209-252  backspace (253-value)  | 133-252  backspace (253-value)  |
      | 253  previous row               | 253  previous column            |
      | 254  current row                | 254  current column             |
      | 255  next row                   | 255  next column                |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                                       ¿
-    220
1                        Technical Guide to System Modifications
          Macro Description                                                FDOPT
-         Invalid requests  are ignored;  SBA  requests falling into  the Prompt
          area are ignored in memory mapped mode unless requested by SCPROMPT or
          SCWRITE.  In scroll mode,  a request for  "next row" and a request for
          "next column" which goes to a new row results in scrolling a row.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             221
1                   Technical Guide to System Modifications
     FDSECT                                               Macro Description
-    3.2.5   FDSECT
+    3.2.5   FDSECT
+            ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      | name | FDSECT   |                                                 |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
-    This macro expands the mappings for all other FD macros.   By default,
     this macro is expanded by MSECT.    It is the user's responsibility to
     refer only to those fields present in the corresponding FD entry.   If
     the name field is omitted, the macro expands as DSECT FDSECT.
0    FDGOTO expands exactly four bytes.
0    FDIN expands up to field FDCADD.
0    FDOPT expands up to FDOCUR.
0    FD expands at least to FDOLEN,  and  is followed by either an S format
     address or a literal (which may be null).
0    FDSECT   DSECT ,             FD item mapping
     FDLINK   DS    AL1           length to next entry, or 0
     FDTYPE   DS    X             entry type (IN, OUT, NOP)
     FDFNOP   EQU   X'40'           ignore this entry
     FDFIN    EQU   X'80'           input entry (non-RENT)
     FDFOPT   EQU   X'20'           option list
     FDFGOTO  EQU   X'10'           branch to another FD entry
     FDGOTO   DS    0SL2(0)       address of target FD of GO TO
     FDEDIT   DS    X             editing options
     FDFNL    EQU   X'80'           position to new line
     FDFDEBL  EQU   X'40'           strip leading blanks and hex zeroes
     FDFDEBR  EQU   X'20'           strip trailing blanks and hex zeroes
     FDFDEBZ  EQU   X'10'           strip leading (EBCDIC) zeroes
     FDFPADL  EQU   X'08'           leading blank or SF
     FDFPADR  EQU   X'04'           trailing blank or SF
     FDFRADJ  EQU   X'02'           right-adjust output
     FDFUP    EQU   X'01'           upper case translation
                                  FDOPT option bits :
     FDOWCCP  EQU   X'40'           WCC options present
     FDOSBAP  EQU   X'20'           SBA present
     FDOCURP  EQU   X'08'           cursor address present
     FDOPTP   EQU   X'02'           color or display options present
     FDOPT9   DS    X             3279 options
     FDFCOLOR EQU   X'70'           00 default,10 blue,20 red,30 pink
                                    40 green,50 turquoise,60 yellow,70 white
     FDFUNDER EQU   X'04'           underline
     FDFREV   EQU   X'02'           reverse
     FDFBLINK EQU   X'01'           blink
     FDOPT7   DS    X             3277/3278 options
     FDFINT   EQU   X'08'           intensified
     FDFLPEN  EQU   X'04'           light-pen detectable
     FDFNDISP EQU   X'0C'           non-display
     FDFNUM   EQU   X'10'           numeric input
0    222
1                        Technical Guide to System Modifications
          Macro Description                                               FDSECT
-         FDFSKIP  EQU   X'30'           skip field
          FDFPROT  EQU   X'20'           protected
          FDFDFLT  EQU   X'80'           default options/colors
          FDFPREV  EQU   X'40'           previous options/colors
          FDFNULL  EQU   X'02'           Input field is to be displayed with
                                          trailing nulls rather than blanks.
          FDDATA   DS    X             data type
          FDDLIT   EQU   X'80'      FD - FD contains literal, not address
                                    FDIN - field changed by user
          FDDCHAR  EQU   1               EBCDIC, translated
          FDDCON   EQU   2               EBCDIC with control characters
          FDDASIS  EQU   3               EBCDIC(?), no translate
          FDDADDR  EQU   4               address
          FDDHEX   EQU   5               hexadecimal
          FDDSHEX  EQU   6               hexadecimal with explicit sign
          FDDBIT   EQU   7               bit string
          FDDINT   EQU   8               integer
          FDD$INT  EQU   9               integer.dd
          FDDDEC   EQU   10              packed decimal
          FDD$DEC  EQU   11              packed decimal.dd
          FDDFIX   EQU   12              floating point
          FDOLEN   DS    AL1           output length, or 0 for default
          FDILEN   DS    AL1           input data length
          FDTEXT   DS    0CL132        literal
          FDSADD   DS    SL2           data address
          FDCADD   DS    AL2           input field - attribute address
                   ORG   FDDATA       redefinition for FDOPT
          FDOWCC   DC    X'0'          WCC options
          FDOSBA   DC    XL2'0'        SBA address
          FDOCUR   DC    XL2'0'        cursor address
-
-
-
-
-
-
-
-
0                                                                            223
1                   Technical Guide to System Modifications
     Macro description
-    3.3   DOCUMENTATION MACROS
+    3.3   DOCUMENTATION MACROS
+          _____________ ______
0    The GOSSIP  User's Guide and this  Technical Guide are  prepared using
     the SCRIPT  package distributed by  the University of  Waterloo.   The
     version used is 3.2, which is the last free version available.
0    The  general  layout of  the  manuals  is  produced using  the  SYSPUB
     facility distributed with SCRIPT.  Additional  macros were written for
     specific  combinations of  functions,  e.g.,   combining page  ejects,
     sub-titles, boxes, and indexing.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     224
1                        Technical Guide to System Modifications
          Macro Description                                              HAILFUN
-         3.3.1   HAILFUN
+         3.3.1   HAILFUN
+                 _______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           |      | HAILFUN  | name offset Ýregisters¨                         |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-         This macro  expands the code for  HAIL function calls.   One  to three
          'register' operands may  be specified to indicate the type  of data to
          be supplied by the user. The operands are positional and correspond to
          registers zero to two.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                                                            225
1                   Technical Guide to System Modifications
     HAILOG                                               Macro Description
-    3.3.2   HAILOG
+    3.3.2   HAILOG
+            ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      |      | HAILOG   | module title                                    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
-
     3.3.3   HAILOG
+    3.3.3   HAILOG
+            ______
0     Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+            ¯          ¯
      |      | HAILOG   | module title                                    |
      ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+            ¿          ¿
-    These two functions  are used in the logic  and function descriptions.
     'module' is  the program name of  the code described;  'title'  is the
     quoted title for the module.
0    HAILOG is used for the function descriptions.
0    HAILOG is used for the program logic section.
-
-
-
-
-
-
-
-
-
-
-
     226
1                        Technical Guide to System Modifications
          Macro Description                                               MACDEF
-         3.3.4   MACDEF
+         3.3.4   MACDEF
+                 ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           |      | MACDEF   | one to ten operands                             |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-
          3.3.5   MACALT
+         3.3.5   MACALT
+                 ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           |      | MACALT   | one to ten operands                             |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-
          3.3.6   MACTWO
+         3.3.6   MACTWO
+                 ______
0          Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                 ¯          ¯
           |      | MACTWO   | one to ten operands                             |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                 ¿          ¿
-         This group of macros expands the  code for COPY and MACRO definitions.
          One  to ten  operands  (quoted or  unquoted)   may  be supplied.    If
          insufficient  space is  available on  the  ".mac..." invokation  line,
          additional parameters  MCL1-MCL5 may be set  with .SR prior  to coding
          the .MAC... line. These values are reset to null strings after use.
0         MACDEF generates  a page eject,   and places  the macro name  into the
          subtitle.
0         MACTWO skips five lines, then draws the box.  No page eject is issued,
          and the subtitle is not altered.
0         MACALT skips one line.  It does not  alter the subtitle,  and does not
          index the macro name.  It is intended to provide an additional box for
          ALTernate invokations of the macro.
-
-
-
-
-
-                                                                            227
1                   Technical Guide to System Modifications
     System Modifications
-
                                   Section 4
+                                  Section 4
0                             SYSTEM MODIFICATIONS
+                             SYSTEM MODIFICATIONS
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     228
1                        Technical Guide to System Modifications
          Macro Description                                              IEDQ21L
-         4.0.7   TCAM Lower-case Translation ..........................IEDQ21L
+         4.0.7   TCAM Lower-case Translation                           IEDQ21L
+                 ____ __________ ___________                           _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             229
1                   Technical Guide to System Modifications
     IEFDB401                                             Macro Description
-    4.0.8   I/O Counts ...........................................IEFDB401
+    4.0.8   I/O Counts                                            IEFDB401
+            ___ ______                                            ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     230
1                        Technical Guide to System Modifications
          Macro Description                                               IEFUJI
-         4.0.9   SMF Job Initiation ...................................IEFUJI
+         4.0.9   SMF Job Initiation                                    IEFUJI
+                 ___ ___ __________                                    ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             231
1                   Technical Guide to System Modifications
     IEFUJT$$                                             Macro Description
-    4.0.10   SMF Job Termination .................................IEFUJT$$
+    4.0.10   SMF Job Termination                                  IEFUJT$$
+             ___ ___ ___________                                  ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     232
1                        Technical Guide to System Modifications
          Macro Description                                               IEFUSI
-         4.0.11   SMF Step Initiation .................................IEFUSI
+         4.0.11   SMF Step Initiation                                  IEFUSI
+                  ___ ____ __________                                  ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             233
1                   Technical Guide to System Modifications
     IEFUTL                                               Macro Description
-    4.0.12   SMF Time Expiration .................................IEFUTL
+    4.0.12   SMF Time Expiration                                  IEFUTL
+             ___ ____ __________                                  ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     234
1                        Technical Guide to System Modifications
          Macro Description                                             IGCMILTN
-         4.0.13   MILTEN SVC ..........................................IGCMILTN
+         4.0.13   MILTEN SVC                                           IGCMILTN
+                  ______ ___                                           ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             235
1                   Technical Guide to System Modifications
     IGC0024A                                             Macro Description
-    4.0.14   SVC .................................................IGC0024A
+    4.0.14   SVC                                                  IGC0024A
+             ___                                                  ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     236
1                        Technical Guide to System Modifications
          Macro Description                                             IGC0024G
-         4.0.15   WYLBUR NOTIFY SVC ...................................IGC0024G
+         4.0.15   WYLBUR NOTIFY SVC                                    IGC0024G
+                  ______ ______ ___                                    ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             237
1                   Technical Guide to System Modifications
     IGPACCT                                              Macro Description
-    4.0.16   CCSI Account Status Table ...........................IGPACCT
+    4.0.16   CCSI Account Status Table                            IGPACCT
+             ____ _______ ______ _____                            _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     238
1                        Technical Guide to System Modifications
          Macro Description                                              IGPVOLT
-         4.0.17   CCSI Volume Status Table ............................IGPVOLT
+         4.0.17   CCSI Volume Status Table                             IGPVOLT
+                  ____ ______ ______ _____                             _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             239
1                   Technical Guide to System Modifications
     IGC00240                                             Macro Description
-    4.0.18   Mod-JFCB SVC ........................................IGC00240
+    4.0.18   Mod-JFCB SVC                                         IGC00240
+             ________ ___                                         ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     240
1                        Technical Guide to System Modifications
          Macro Description                                             IGC0025C
-         4.0.19   SMF SVC .............................................IGC0025C
+         4.0.19   SMF SVC                                              IGC0025C
+                  ___ ___                                              ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             241
1                   Technical Guide to System Modifications
     IGC237                                               Macro Description
-    4.0.20   SVC .................................................IGC237
+    4.0.20   SVC                                                  IGC237
+             ___                                                  ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     242
1                        Technical Guide to System Modifications
          Macro Description                                               IGC251
-         4.0.21   SVC .................................................IGC251
+         4.0.21   SVC                                                  IGC251
+                  ___                                                  ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             243
1                   Technical Guide to System Modifications
     IGG0CLCT                                             Macro Description
-    4.0.22   Catalog Validity-check ..............................IGG0CLCT
+    4.0.22   Catalog Validity-check                               IGG0CLCT
+             _______ ______________                               ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     244
1                        Technical Guide to System Modifications
          Macro Description                                             LEXSVC99
-         4.0.23   SVC 99 Local Exit ...................................LEXSVC99
+         4.0.23   SVC 99 Local Exit                                    LEXSVC99
+                  ___ __ _____ ____                                    ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             245
1                   Technical Guide to System Modifications
     MVSAB4B0                                             Macro Description
-    4.0.24   IEF message .........................................MVSAB4B0
+    4.0.24   IEF message                                          MVSAB4B0
+             ___ _______                                          ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     246
1                        Technical Guide to System Modifications
          Macro Description                                             MVSAB4EE
-         4.0.25   IEF message .........................................MVSAB4EE
+         4.0.25   IEF message                                          MVSAB4EE
+                  ___ _______                                          ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             247
1                   Technical Guide to System Modifications
     MVSALLOC                                             Macro Description
-    4.0.26   SVC 32 Validity-checking ............................MVSALLOC
+    4.0.26   SVC 32 Validity-checking                             MVSALLOC
+             ___ __ _________________                             ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     248
1                        Technical Guide to System Modifications
          Macro Description                                             MVSATTCH
-         4.0.27   TCBUSER Propagation .................................MVSATTCH
+         4.0.27   TCBUSER Propagation                                  MVSATTCH
+                  _______ ___________                                  ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             249
1                   Technical Guide to System Modifications
     MVSIPLST                                             Macro Description
-    4.0.28   IPL Services ........................................MVSIPLST
+    4.0.28   IPL Services                                         MVSIPLST
+             ___ ________                                         ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     250
1                        Technical Guide to System Modifications
          Macro Description                                             MVSMB813
-         4.0.29   Unload by VolSer ....................................MVSMB813
+         4.0.29   Unload by VolSer                                     MVSMB813
+                  ______ __ ______                                     ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             251
1                   Technical Guide to System Modifications
     MVSSVC98                                             Macro Description
-    4.0.30   PROTECT SVC Mods ....................................MVSSVC98
+    4.0.30   PROTECT SVC Mods                                     MVSSVC98
+             _______ ___ ____                                     ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     252
1                        Technical Guide to System Modifications
          Macro Description                                              MVSVIPL
-         4.0.31   IEEVIPL Mods ........................................MVSVIPL
+         4.0.31   IEEVIPL Mods                                         MVSVIPL
+                  _______ ____                                         _______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             253
1                   Technical Guide to System Modifications
     MVSVMNT1                                             Macro Description
-    4.0.32   IEEVMNT1 Mods .......................................MVSVMNT1
+    4.0.32   IEEVMNT1 Mods                                        MVSVMNT1
+             ________ ____                                        ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     254
1                        Technical Guide to System Modifications
          Macro Description                                             MVS00123
-         4.0.33   OPEN Password Checking ..............................MVS00123
+         4.0.33   OPEN Password Checking                               MVS00123
+                  ____ ________ ________                               ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             255
1                   Technical Guide to System Modifications
     SVCDUMMY                                             Macro Description
-    4.0.34   Dummy SVC ...........................................SVCDUMMY
+    4.0.34   Dummy SVC                                            SVCDUMMY
+             _____ ___                                            ________
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     256
1                        Technical Guide to System Modifications
          Macro Description                                               SVCMIL
-         4.0.35   MILTEN SVC ..........................................SVCMIL
+         4.0.35   MILTEN SVC                                           SVCMIL
+                  ______ ___                                           ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             257
1                   Technical Guide to System Modifications
     UCS1UN                                               Macro Description
-    4.0.36   Amer. Library Assoc. UCS Image ......................UCS1UN
+    4.0.36   Amer. Library Assoc. UCS Image                       UCS1UN
+             ____  _______ _____  ___ _____                       ______
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     258
1                        Technical Guide to System Modifications
          Macro Description                                               UCS1UN
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                                                             259
1                   Technical Guide to System Modifications
     Index
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
     260
1                        Technical Guide to System Modifications
                                                                           Index
-
                                          Index
+                                         Index
-         @CATREAD                             ALTTRACK
             logic ... 148                        logic ... 3
          @DCBEXIT                             Amer. Library Assoc. UCS Image
             logic ... 149                        logic ... 258
          @FDRREAD                             ASMANY
             logic ... 150                        logic ... 4
          @INPREAD                             Automatic System Shut-down
             logic ... 151                        logic ... 88
          @OBTAIN ... 170
          @OBTAINS                             Big Letter Routine
             logic ... 152                        logic ... 160
          @PRINTER                             Big Letters on JCL
             logic ... 145                        logic ... 110
          @PROTECS                             BINLK
             logic ... 153                        SERVCALL ... 131
          @PROTECT ... 171                        SERVICE ... 131
          @SERVICE                             BIX ... 172
             logic ... 125                     BLOCKPRT
          @SRVJ220                                logic ... 8
             logic ... 144                     Build LKED Control Cards
          @TMSREAD                                logic ... 77
             logic ... 154                     Builds IEBUPDTE Deck
          @VOLREAD                                logic ... 56
             logic ... 155
                                               Canned Job Submission
          ACCNX                                   logic ... 68
             SERVCALL ... 136                  CAPACITY
             SERVICE ... 136                      logic ... 9
          ACCON                                Catalog Clean-up
             SERVCALL ... 135                     logic ... 10, 11
             SERVICE ... 135                   Catalog Copy
          ACGET                                   logic ... 18
             SERVCALL ... 134                  Catalog Reader
             SERVICE ... 134                      logic ... 148
          ACTSM                                Catalog Validity-check
             SERVCALL ... 135                     logic ... 244
             SERVICE ... 135                   CATCLEAN
          ACTST                                   logic ... 10
             SERVCALL ... 135                  CATEDIT
             SERVICE ... 135                      logic ... 11
          ALCDS                                CATLIST
             SERVCALL ... 143                     logic ... 12
          ALCFD                                CCSI Account Status Table
             SERVCALL ... 143                     logic ... 238
          ALCFR                                CCSI TMS DASD Lister
             SERVCALL ... 143                     logic ... 114
          ALCVS                                CCSI TMS Lister
             SERVCALL ... 142                     logic ... 115
          Alternate Track List                 CCSI Volume Status Table
             logic ... 3
0                                                                            261
1                   Technical Guide to System Modifications
     Index
-       logic ... 239                     Dataset Initialization
     CDSLIST                                 logic ... 14
        logic ... 13                      Dataset Lister
     CLEARDA                                 logic ... 94
        Direct Access                     Date Insertion
           Initialization ... 14             logic ... 41
     CLEARDSN                             DATEEDIT
        logic ... 14                         logic ... 41
     CLEAREOF                             DCB Exit Services
        Direct Access                        logic ... 149
           Initialization ... 14          DCBEXITD ... 179
     CLEARPDS                             DD Card Routine
        logic ... 15                         logic ... 161
     CLEARVOL                             De-Link Edit
        VTOC Initialization ... 33           logic ... 43
     CLOSE                                Deck Compare Program
        SERVCALL ... 126                     logic ... 123
        SERVICE ... 126                   DEFORMAT
     CLRL ... 174                            logic ... 42
     COBOL Resequencing                   DELETEST ... 183
        logic ... 111                     DELINK0
     Code Conversion                         logic ... 43
        logic ... 17                      Device Mask Table Lister
     COMMENT                                 logic ... 44
        logic ... 16                      DEVTABLE
     CONVERT                                 logic ... 44
        logic ... 17                      Diplomacy Game
     COPYCAT                                 logic ... 47
        logic ... 18                      DIPLOMAT
     COPYJES                                 logic ... 47
        logic ... 31                      DISASM
     COPYTAPE                                logic ... 48
        logic ... 32                      Disassembler
     COPYVOL                                 logic ... 48
        logic ... 33                      DISASTER
     CPU and Time Routine                    logic ... 50
        logic ... 159                     Disposition Change
     CRMEND ... 175                          logic ... 167
     CRMEXIT ... 176                      DIST
     CRMHEAD ... 177                         logic ... 51
     CRMSPIE ... 178                      DISTBLD
     CRTNASTY                                logic ... 53
        logic ... 40                      DISTFIND
                                             logic ... 54
     DASD Access Monitor                  Distribution Tape Catalog Builder
        logic ... 101                        logic ... 50, 53
     DASD Capacity                        Distribution Tape Lookup
        logic ... 9                          logic ... 54
     DASD Copy                            Distribution Tape Retrieval
        logic ... 33                         logic ... 51
     DASD Scratch                         Distribution Tape Update
        logic ... 100                        Extraction
     DASD Space Release                      logic ... 65
        logic ... 97                      DOS Tape to OS PDS Conversion
0    262
1                        Technical Guide to System Modifications
                                                                           Index
-            logic ... 55                      EBCDIG ... 184
          DOSUPDTE                             EDTPRINT
             logic ... 55                         logic ... 62
          DOWNDATE                             Elegible Device Table Listing
             logic ... 56                         logic ... 62
          DRIPCLIP                             ENDM ... 185
             logic ... 57                      EXEC and Page-fix
          DRIPFREN                                logic ... 76
             logic ... 58                      EXEC PARM Extraction
          DRIPLOAD                                logic ... 158
             logic ... 59                      Expand PDS Directory
          DSABB                                   logic ... 63
             SERVCALL ... 137                  EXPDIR
          DSCAT                                   logic ... 63
             SERVCALL ... 137                  EXSTATIC
             SERVICE ... 137                      logic ... 64
          DSDJ1                                EXTRACTS
             SERVCALL ... 138                     logic ... 65
          DSDS1
             SERVCALL ... 138                  Fast TMS Reader
          DSFMT                                   logic ... 154
             SERVCALL ... 138                  FCB Lister
          DSGET                                   logic ... 67
             SERVCALL ... 140                  FCBLIST
             SERVICE ... 140                      logic ... 67
          DSLIB                                FD ... 215
             SERVCALL ... 139                  FDGOTO ... 217
             SERVICE ... 139                   FDIN ... 218
          DSLIX                                FDOPT ... 220
             SERVCALL ... 140                  FDR Pseudo-DASD
             SERVICE ... 140                      logic ... 150
          DSMEM                                FDRREAD ... 187
             SERVCALL ... 138                  FDSECT ... 222
             SERVICE ... 138                   FINIT
          DSTST                                   logic ... 156
             SERVCALL ... 137                  FIXTRACK ... 3
             SERVICE ... 137                   FMTAC
          DSWYL                                   SERVCALL ... 136
             SERVCALL ... 140                  FMTLB
             SERVICE ... 140                      SERVCALL ... 136
          Dummy SVC                            FMTWY
             logic ... 256                        SERVCALL ... 136
          DVCAP                                FORMAT to SCRIPT conversion
             SERVCALL ... 131                     logic ... 42
             SERVICE ... 131                   FORTAN Record Reread Routine
          DVEXT                                   logic ... 166
             SERVCALL ... 132                  FORTRAN Dump Support
             SERVICE ... 132                      logic ... 164
          DVSPC                                FORTRAN Interface Initialization
             SERVCALL ... 133                     logic ... 156
             SERVICE ... 133                   FORTRAN/SORT Interface
          DVTBL                                   logic ... 157
             SERVCALL ... 131                  FREEM
             SERVICE ... 131                      SERVCALL ... 127
0                                                                            263
1                   Technical Guide to System Modifications
     Index
-    FSAWORK ... 188                      IEHVTOC
     FSORT                                   logic ... 74
        logic ... 157                     IGCMILTN
     Full-track DASD Reader                  logic ... 235
        logic ... 155                     IGC0024A
     Full-track OBTAINs                      logic ... 236
        logic ... 152                     IGC0024G
     Full-track PROTECT                      logic ... 237
        logic ... 153                     IGC00240
                                             logic ... 240
     Generalized Input Service            IGC0025C
        logic ... 151                        logic ... 241
     GOPARM                               IGC237
        logic ... 158                        logic ... 242
                                          IGC251
     HAILFUN ... 225                         logic ... 243
     HAILOG ... 226                       IGG0CLCT
     HASP Print/Punch                        logic ... 244
        logic ... 31                      IGPACCT
     HOB                                     logic ... 238
        logic ... 68                      IGPVOLT
     HSPMERGE                                logic ... 239
        logic ... 71                      IHADVCT ... 189
                                          INC ... 190
     I/O Counts                           INCH ... 191
        logic ... 230                     INITG
     ICPU                                    SERVCALL ... 127
        logic ... 159                     INPCLOSE ... 192
     IEBPDS                               INPCOM ... 192
        logic ... 73                      INPGET ... 193
     IEDQ21L                              INPKEEP ... 193
        logic ... 229                     INPOPEN ... 194
     IEEVIPL Mods                         INPWORK ... 195
        logic ... 253                     IPL Services
     IEEVMNT1 Mods                           logic ... 250
        logic ... 254
     IEF message                          JES2 @SERVICE extension
        logic ... 246, 247                   logic ... 144
     IEFDB401                             JFCB Modification
        logic ... 230                        logic ... 163
     IEFSD095                             JOBWTR
        logic ... 160                        logic ... 75
     IEFSD095 Tester
        logic ... 113                     LAT ... 196
     IEFUJI                               LEXSVC99
        logic ... 231                        logic ... 245
     IEFUJT$$                             LOADFIX
        logic ... 232                        logic ... 76
     IEFUJV Tester                        LOADLPA ... 197
        logic ... 89                      LOADMAPS
     IEFUSI                                  logic ... 77
        logic ... 233                     LOADZAP
     IEFUTL                                  logic ... 78
        logic ... 234                     logic
0    264
1                        Technical Guide to System Modifications
                                                                           Index
-            @CATREAD ... 148                     DASD Copy ... 33
             @DCBEXIT ... 149                     DASD Scratch ... 100
             @FDRREAD ... 150                     DASD Space Release ... 97
             @INPREAD ... 151                     Dataset Initialization ... 14
             @OBTAINS ... 152                     Dataset Lister ... 94
             @PRINTER ... 145                     Date Insertion ... 41
             @PROTECS ... 153                     DATEEDIT ... 41
             @SERVICE ... 125                     DCB Exit Services ... 149
             @SRVJ220 ... 144                     DD Card Routine ... 161
             @TMSREAD ... 154                     De-Link Edit ... 43
             @VOLREAD ... 155                     Deck Compare Program ... 123
             Alternate Track List ... 3           DEFORMAT ... 42
             ALTTRACK ... 3                       DELINK0 ... 43
             Amer. Library Assoc. UCS             Device Mask Table
                Image ... 258                        Lister ... 44
             ASMANY ... 4                         DEVTABLE ... 44
             Automatic System Shut-               Diplomacy Game ... 47
                down ... 88                       DIPLOMAT ... 47
             Big Letter Routine ... 160           DISASM ... 48
             Big Letters on JCL ... 110           Disassembler ... 48
             BLOCKPRT ... 8                       DISASTER ... 50
             Build LKED Control                   Disposition Change ... 167
                Cards ... 77                      DIST ... 51
             Builds IEBUPDTE Deck ... 56          DISTBLD ... 53
             Canned Job Submission ... 68         DISTFIND ... 54
             CAPACITY ... 9                       Distribution Tape Catalog
             Catalog Clean-up ... 10, 11             Builder ... 50, 53
             Catalog Copy ... 18                  Distribution Tape
             Catalog Reader ... 148                  Lookup ... 54
             Catalog Validity-check ... 244       Distribution Tape
             CATCLEAN ... 10                         Retrieval ... 51
             CATEDIT ... 11                       Distribution Tape Update
             CATLIST ... 12                          Extraction ... 65
             CCSI Account Status                  DOS Tape to OS PDS
                Table ... 238                        Conversion ... 55
             CCSI TMS DASD Lister ... 114         DOSUPDTE ... 55
             CCSI TMS Lister ... 115              DOWNDATE ... 56
             CCSI Volume Status                   DRIPCLIP ... 57
                Table ... 239                     DRIPFREN ... 58
             CDSLIST ... 13                       DRIPLOAD ... 59
             CLEARDSN ... 14                      Dummy SVC ... 256
             CLEARPDS ... 15                      EDTPRINT ... 62
             COBOL Resequencing ... 111           Elegible Device Table
             Code Conversion ... 17                  Listing ... 62
             COMMENT ... 16                       EXEC and Page-fix ... 76
             CONVERT ... 17                       EXEC PARM Extraction ... 158
             COPYCAT ... 18                       Expand PDS Directory ... 63
             COPYJES ... 31                       EXPDIR ... 63
             COPYTAPE ... 32                      EXSTATIC ... 64
             COPYVOL ... 33                       EXTRACTS ... 65
             CPU and Time Routine ... 159         Fast TMS Reader ... 154
             CRTNASTY ... 40                      FCB Lister ... 67
             DASD Access Monitor ... 101          FCBLIST ... 67
             DASD Capacity ... 9                  FDR Pseudo-DASD ... 150
0                                                                            265
1                   Technical Guide to System Modifications
     Index
-       FINIT ... 156                        LOOKDD ... 161
        FORMAT to SCRIPT                     MADS ... 162
           conversion ... 42                 MADS Support/Simulator
        FORTAN Record Reread                    Routine ... 162
           Routine ... 166                   MAPDISK ... 79
        FORTRAN Dump Support ... 164         MCPINIT ... 80
        FORTRAN Interface                    Message Cross-Reference ... 98
           Initialization ... 156            MICRO ... 81
        FORTRAN/SORT Interface ... 157       Microfiche External
        FSORT ... 157                           Writer ... 82
        Full-track DASD Reader ... 155       Microfiche Subroutine ... 83
        Full-track OBTAINs ... 152           Microfiche Writer ... 81
        Full-track PROTECT ... 153           MICROJOB ... 82
        Generalized Input                    MICROSUB ... 83
           Service ... 151                   MIGRATE ... 84
        GOPARM ... 158                       MILTEN SVC ... 235, 257
        HASP Print/Punch ... 31              MIMSTOW ... 85
        HOB ... 68                           Mod-JFCB SVC ... 240
        HSPMERGE ... 71                      MODJFCB ... 163
        I/O Counts ... 230                   Move Dataset Groups ... 84
        ICPU ... 159                         Multiple Assembler ... 4
        IEBPDS ... 73                        MVSAB4B0 ... 246
        IEDQ21L ... 229                      MVSAB4EE ... 247
        IEEVIPL Mods ... 253                 MVSALLOC ... 248
        IEEVMNT1 Mods ... 254                MVSATTCH ... 249
        IEF message ... 246, 247             MVSIPLST ... 250
        IEFDB401 ... 230                     MVSMB813 ... 251
        IEFSD095 ... 160                     MVSSVC98 ... 252
        IEFSD095 Tester ... 113              MVSVIPL ... 253
        IEFUJI ... 231                       MVSVMNT1 ... 254
        IEFUJT$$ ... 232                     MVS00123 ... 255
        IEFUJV Tester ... 89                 MVT External Writer ... 75
        IEFUSI ... 233                       MVTDEBE ... 86
        IEFUTL ... 234                       NIH Merge ... 71
        IEHVTOC ... 74                       NISRELSE ... 87
        IGCMILTN ... 235                     NIS0HALT ... 88
        IGC0024A ... 236                     NIS0UJVT ... 89
        IGC0024G ... 237                     NOSTAE ... 164
        IGC00240 ... 240                     On-line Printer
        IGC0025C ... 241                        Exerciser ... 90
        IGC237 ... 242                       OPEN Password Checking ... 255
        IGC251 ... 243                       Operator Communication ... 16
        IGG0CLCT ... 244                     Operator Print/Copy
        IGPACCT ... 238                         Functions ... 86
        IGPVOLT ... 239                      Operator WTM ... 112
        IPL Services ... 250                 OSRIPPLE ... 90
        JES2 @SERVICE                        Overlay Control Card
           extension ... 144                    Builder ... 91
        JFCB Modification ... 163            OVLYTREE ... 91
        JOBWTR ... 75                        Partitioned Dataset
        LEXSVC99 ... 245                        Initialization ... 15
        LOADFIX ... 76                       PDS & DS Print/Punch ... 96
        LOADMAPS ... 77                      PDS Concordance ... 64
        LOADZAP ... 78                       PDS Directory Lister ... 73
0    266
1                        Technical Guide to System Modifications
                                                                           Index
-            PDS Print/Punch ... 92, 93           SVCDUMMY ... 256
             POD ... 92                           SVCMIL ... 257
             PODHELP ... 93                       TAGCOBOL ... 111
             Print and Punch                      Tape Copy ... 32, 99
                Routines ... 145                  Tape Label
             PRINTALL ... 94                         Analysis/Copy ... 103
             Process Michigan Mods                Tape Print ... 8
                Tape ... 85                       TAPEMARK ... 112
             PROCLIB Update ... 95                TCAM Lower-case
             PROCUP ... 95                           Translation ... 229
             PROTECT SVC Mods ... 252             TCBUSER Propagation ... 249
             PUNK ... 96                          TESTSD95 ... 113
             Random Number                        Time & Date Formatting ... 168
                Generator ... 165                 TIMEDAY ... 168
             RANDOMS ... 165                      TMSBACKS ... 114
             RELEASE ... 97                       TMSULIST ... 115
             REREAD ... 166                       UCB Lister ... 116
             SAMSGREF ... 98                      UCBPRINT ... 116
             SAVETAPE ... 99                      UCS1UN ... 258
             SCRATCHS ... 100                     Unload by VolSer ... 251
             SEEKMON ... 101                      Variable Link-Edit ... 117
             Sequential Job Release ... 87        VARLINK ... 117
             SERIAL ... 102                       VSAM Catalog Lister ... 12
             Serialize Decks ... 102              VTOC and PDS Lister ... 74
             Service Routines ... 125             VTOC Lister ... 79
             SETDISP ... 167                      WYLBUR Compress ... 119
             SLANALYZ ... 103                     WYLBUR DASD
             SMF Dump & Switch ... 104               Maintenance ... 118
             SMF Extraction ... 106, 109          WYLBUR Decompression ... 120
             SMF Job Initiation ... 231           WYLBUR Initialization ... 80
             SMF Job Termination ... 232          WYLBUR NOTIFY SVC ... 237
             SMF Merge ... 105                    WYLBUR Password Lister ... 121
             SMF Statistics ... 107               WYLBUR VTOC & PDS
             SMF Step Initiation ... 233             Lister ... 122
             SMF SVC ... 241                      WYLCLEAN ... 118
             SMF Terminal                         WYLCOMP ... 119
                Statistics ... 108                WYLDCOMP ... 120
             SMF Time Expiration ... 234          WYLPASWD ... 121
             SMFDUMP ... 104                      WYLVTOC ... 122
             SMFMERGE ... 105                     YALECOMP ... 123
             SMFSELCT ... 106                     ZAP and EXEC Program ... 78
             SMFSTATS ... 107                     3270 Message Facility ... 40
             SMFTERMS ... 108                  LOOKDD
             SMFXTRCT ... 109                     logic ... 161
             SMP Lister ... 13                 LOOKLPA ... 198
             Stand-alone DASD Label            LPADL
                List/Change ... 57                SERVCALL ... 127
             Stand-alone I/O Tester ... 58     LPALD
             Stand-alone Loader ... 59            SERVCALL ... 127
             STEPSEP ... 110
             SVC ... 236, 242, 243             MACALT ... 227
             SVC 32 Validity-                  MACDEF ... 227
                checking ... 248               MACPARM ... 199
             SVC 99 Local Exit ... 245         MACTWO ... 227
0                                                                            267
1                   Technical Guide to System Modifications
     Index
-    MADS                                    logic ... 251
        logic ... 162                     MVSSVC98
     MADS Support/Simulator Routine          logic ... 252
        logic ... 162                     MVSVIPL
     MAPDISK                                 logic ... 253
        logic ... 79                      MVSVMNT1
     MAPEXTNT ... 201                        logic ... 254
     MAPINP ... 202                       MVS00123
     MAPPDS ... 203                          logic ... 255
     MAPPRT ... 204                       MVT External Writer
     MAPPRTWK ... 205                        logic ... 75
     MCPINIT                              MVTDEBE
        logic ... 80                         logic ... 86
     Message Cross-Reference
        logic ... 98                      NIH Merge
     MICRO                                   logic ... 71
        logic ... 81                      NISRELSE
     Microfiche External Writer              logic ... 87
        logic ... 82                      NIS0HALT
     Microfiche Subroutine                   logic ... 88
        logic ... 83                      NIS0UJVT
     Microfiche Writer                       logic ... 89
        logic ... 81                      NOSTAE
     MICROJOB                                logic ... 164
        logic ... 82
     MICROSUB                             On-line Printer Exerciser
        logic ... 83                         logic ... 90
     MIGRATE                              OPEN Password Checking
        logic ... 84                         logic ... 255
     MILTEN SVC                           Operator Communication
        logic ... 235, 257                   logic ... 16
     MIMSTOW                              Operator Print/Copy Functions
        logic ... 85                         logic ... 86
     Mod-JFCB SVC                         Operator WTM
        logic ... 240                        logic ... 112
     MODJFCB                              OPTIONGB ... 209
        logic ... 163                     OSRIPPLE
     MOTE ... 207                            logic ... 90
     Move Dataset Groups                  Overlay Control Card Builder
        logic ... 84                         logic ... 91
     MTITL ... 208                        OVLYTREE
     Multiple Assembler                      logic ... 91
        logic ... 4
     MVSAB4B0                             Partitioned Dataset
        logic ... 246                        Initialization
     MVSAB4EE                                logic ... 15
        logic ... 247                     PDS & DS Print/Punch
     MVSALLOC                                logic ... 96
        logic ... 248                     PDS Concordance
     MVSATTCH                                logic ... 64
        logic ... 249                     PDS Directory Lister
     MVSIPLST                                logic ... 73
        logic ... 250                     PDS Print/Punch
     MVSMB813                                logic ... 92, 93
0    268
1                        Technical Guide to System Modifications
                                                                           Index
-         PDSDE                                SCHMV
             SERVCALL ... 139                     SERVCALL ... 134
             SERVICE ... 139                   SCRATCHS
          POD                                     logic ... 100
             logic ... 92                      SEEKMON
          PODHELP                                 logic ... 101
             logic ... 93                      Sequential Job Release
          Print and Punch Routines                logic ... 87
             logic ... 145                     SERIAL
          PRINTALL                                logic ... 102
             logic ... 94                      Serialize Decks
          Process Michigan Mods Tape              logic ... 102
             logic ... 85                      SERVCALL
          PROCLIB Update                          ACCNX ... 136
             logic ... 95                         ACCON ... 135
          PROCUP                                  ACGET ... 134
             logic ... 95                         ACTSM ... 135
          PROTECT SVC Mods                        ACTST ... 135
             logic ... 252                        ALCDS ... 143
          PRTBIG ... 146                          ALCFD ... 143
          PRTCLOSE ... 146                        ALCFR ... 143
          PRTF ... 145                            ALCVS ... 142
          PRTLIST ... 145                         BINLK ... 131
          PRTOPEN ... 145                         CLOSE ... 126
          PRTROOM ... 146                         DSABB ... 137
          PRTSNAP ... 146                         DSCAT ... 137
          PRTSPACE ... 146                        DSDJ1 ... 138
          PRTV ... 145                            DSDS1 ... 138
          PRTWORK ... 147                         DSFMT ... 138
          PUNK                                    DSGET ... 140
             logic ... 96                         DSLIB ... 139
          PUNWORK ... 147                         DSLIX ... 140
                                                  DSMEM ... 138
          Random Number Generator                 DSTST ... 137
             logic ... 165                        DSWYL ... 140
          RANDOMS                                 DVCAP ... 131
             logic ... 165                        DVEXT ... 132
          RELEASE                                 DVSPC ... 133
             logic ... 97                         DVTBL ... 131
          REREAD                                  FMTAC ... 136
             logic ... 166                        FMTLB ... 136
          RJFCB                                   FMTWY ... 136
             SERVCALL ... 139                     FREEM ... 127
                                                  INITG ... 127
          SAMSGREF                                LPADL ... 127
             logic ... 98                         LPALD ... 127
          SAVETAPE                                PDSDE ... 139
             logic ... 99                         RJFCB ... 139
          SCHED                                   SCHED ... 134
             SERVCALL ... 134                     SCHFR ... 133
          SCHFR                                   SCHIN ... 134
             SERVCALL ... 133                     SCHMV ... 134
          SCHIN                                   SORTB ... 130
             SERVCALL ... 134                     SORTH ... 130
0                                                                            269
1                   Technical Guide to System Modifications
     Index
-       TIODD ... 129                     SMF Dump & Switch
        TIOLK ... 129                        logic ... 104
        TIOLP ... 129                     SMF Extraction
        TIOUA ... 130                        logic ... 106, 109
        UCBDK ... 128                     SMF Job Initiation
        UCBGN ... 129                        logic ... 231
        UCBNM ... 128                     SMF Job Termination
        UCBUM ... 128                        logic ... 232
        UCBVS ... 128                     SMF Merge
        VSNFG ... 141                        logic ... 105
        VSTMS ... 141                     SMF Statistics
        WCOMP ... 141                        logic ... 107
        WDCOM ... 142                     SMF Step Initiation
        WYLDX ... 140                        logic ... 233
     SERVICE                              SMF SVC
        ACCNX ... 136                        logic ... 241
        ACCON ... 135                     SMF Terminal Statistics
        ACGET ... 134                        logic ... 108
        ACTSM ... 135                     SMF Time Expiration
        ACTST ... 135                        logic ... 234
        BINLK ... 131                     SMFDUMP
        CLOSE ... 126                        logic ... 104
        DSCAT ... 137                     SMFMERGE
        DSGET ... 140                        logic ... 105
        DSLIB ... 139                     SMFSELCT
        DSLIX ... 140                        logic ... 106
        DSMEM ... 138                     SMFSTATS
        DSTST ... 137                        logic ... 107
        DSWYL ... 140                     SMFTERMS
        DVCAP ... 131                        logic ... 108
        DVEXT ... 132                     SMFXTRCT
        DVSPC ... 133                        logic ... 109
        DVTBL ... 131                     SMP Lister
        PDSDE ... 139                        logic ... 13
        SORTB ... 130                     SORTB
        SORTH ... 130                        SERVCALL ... 130
        TIODD ... 129                        SERVICE ... 130
        TIOLK ... 129                     SORTH
        TIOLP ... 129                        SERVCALL ... 130
        TIOUA ... 130                        SERVICE ... 130
        UCBDK ... 128                     ST@ ... 210
        UCBGN ... 129                     Stand-alone DASD Label
        UCBNM ... 128                        List/Change
        UCBUM ... 128                        logic ... 57
        UCBVS ... 128                     Stand-alone I/O Tester
        VSNFG ... 141                        logic ... 58
        VSTMS ... 141                     Stand-alone Loader
        WYLDX ... 140                        logic ... 59
     Service Routines                     STEPSEP
        logic ... 125                        logic ... 110
     SETDISP                              SVC
        logic ... 167                        logic ... 236, 242, 243
     SLANALYZ                             SVC 32 Validity-checking
        logic ... 103                        logic ... 248
0    270
1                        Technical Guide to System Modifications
                                                                           Index
-         SVC 99 Local Exit                       SERVCALL ... 128
             logic ... 245                        SERVICE ... 128
          SVCDUMMY                             UCBPRINT
             logic ... 256                        logic ... 116
          SVCMIL                               UCBUM
             logic ... 257                        SERVCALL ... 128
                                                  SERVICE ... 128
          TAGCOBOL                             UCBVS
             logic ... 111                        SERVCALL ... 128
          Tape Copy                               SERVICE ... 128
             logic ... 32, 99                  UCS1UN
          Tape Label Analysis/Copy                logic ... 258
             logic ... 103                     Unload by VolSer
          Tape Print                              logic ... 251
             logic ... 8
          TAPEMARK                             Variable Link-Edit
             logic ... 112                        logic ... 117
          TCAM Lower-case Translation          VARLINK
             logic ... 229                        logic ... 117
          TCBUSER Propagation                  VSAM Catalog Lister
             logic ... 249                        logic ... 12
          TESTSD95                             VSNFG
             logic ... 113                        SERVCALL ... 141
          Time & Date Formatting                  SERVICE ... 141
             logic ... 168                     VSTMS
          TIMEDAY                                 SERVCALL ... 141
             logic ... 168                        SERVICE ... 141
          TIODD                                VTOC and PDS Lister
             SERVCALL ... 129                     logic ... 74
             SERVICE ... 129                   VTOC Lister
          TIOLK                                   logic ... 79
             SERVCALL ... 129
             SERVICE ... 129                   WCOMP
          TIOLP                                   SERVCALL ... 141
             SERVCALL ... 129                  WDCOM
             SERVICE ... 129                      SERVCALL ... 142
          TIOUA                                WYLBUR Compress
             SERVCALL ... 130                     logic ... 119
             SERVICE ... 130                   WYLBUR DASD Maintenance
          TMSBACKS                                logic ... 118
             logic ... 114                     WYLBUR Decompression
          TMSULIST                                logic ... 120
             logic ... 115                     WYLBUR Initialization
          TRTAB ... 211                           logic ... 80
                                               WYLBUR NOTIFY SVC
          UCB Lister                              logic ... 237
             logic ... 116                     WYLBUR Password Lister
          UCBDK                                   logic ... 121
             SERVCALL ... 128                  WYLBUR VTOC & PDS Lister
             SERVICE ... 128                      logic ... 122
          UCBGN                                WYLCLEAN
             SERVCALL ... 129                     logic ... 118
             SERVICE ... 129                   WYLCOMP
          UCBNM                                   logic ... 119
0                                                                            271
1                   Technical Guide to System Modifications
     Index
-    WYLDCOMP                             YALECOMP
        logic ... 120                        logic ... 123
     WYLDX
        SERVCALL ... 140                  ZAP and EXEC Program
        SERVICE ... 140                      logic ... 78
     WYLPASWD
        logic ... 121                     3270 Message Facility
     WYLVTOC                                 logic ... 40
        logic ... 122
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0    272
1                        Technical Guide to System Modifications
-
0                                   TABLE OF CONTENTS
-         INTRODUCTION  . . . . . . . . . . . . . . . . . . . . . . . . . . . ii
-         Section                                                           page
0         1.  INSTALLATION AND MAINTENANCE  . . . . . . . . . . . . . . . . .  1
0         2.  PROGRAM SERVICES  . . . . . . . . . . . . . . . . . . . . . . .  2
0                Program Organization . . . . . . . . . . . . . . . . . . . .  2
                 Utility Programs . . . . . . . . . . . . . . . . . . . . . .  2
                 Service Routines . . . . . . . . . . . . . . . . . . . . .  124
0         3.  MACRO DESCRIPTION . . . . . . . . . . . . . . . . . . . . . .  169
0                General Macros . . . . . . . . . . . . . . . . . . . . . .  169
                 Field Descriptor Macros  . . . . . . . . . . . . . . . . .  212
                 Documentation Macros . . . . . . . . . . . . . . . . . . .  224
0         4.  SYSTEM MODIFICATIONS  . . . . . . . . . . . . . . . . . . . .  228
-         Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  261
-
-
-
-
-
-
-
-
-
0                                                                            iii
./ ADD NAME=TPGUIDE  0100-13237-13237-1205-02310-02310-00000-GERHARD
1                                     Start on third or fourth print line


  Ð×××¯
  |   |
  ¿×××]                              Right edge should be at or over perforation






















  Ð×××¯
  |   |
  |   |
  ¿×××]






















  Ð×××¯
  |   |
  ¿×××]

1                                     Start on third or fourth print line


  Ð×××¯
  |   |
  ¿×××]                              Right edge should be at or over perforation






















  Ð×××¯
  |   |
  |   |
  ¿×××]






















  Ð×××¯
  |   |
  ¿×××]

1
-
0
-
-
-
-                                      User's Guide
0                                           to
0                               Tele-Processing Facilities
-
-                                            *
                                         *       *

                                ______ *           * ______
                                ______      PIDI     ______
                                       *           *

                                         *       *
                                             *
-
-
                                  Copyright 1992-1993 by
                                Public Interest Data, Inc.
                                    5113 Leesburg Pike
                               Baileys Crossroads, VA 22041
0                                     (703) 931-9500
-
0                               Printed on February 7, 1993
1
-
0                                 INTRODUCTION
+                                 INTRODUCTION
-     This manual describes the facilities  available for remote processing
      at the  PID computer  center.   This  document should  enable you  to
      select and use equipment intended for Tele-Processing.
0     The Public Interest Data (PID)   service supports the following types
      of remote communication:
0        1.  Asynchronous (Start-Stop):  supports TeleTypes  (TWX by IBM
             terminology,  abbreviated  TTY here-after)   and compatible
             terminals.
0        2.  Synchronous type 1 (BSC1): supports 2780, 3780, and similar
             devices with a direct line to the PID Computer Center.
0        3.  Synchronous type 2 (BSC2): supports 2780, 3780, and similar
             devices with a dial-up line to the PID Computer Center.
0        4.  Synchronous type 3 (BSC3; multi-drop line): supports direct
             lines to 3271, 3274 (BSC mode) and 3275 control units.
0        5.  Synchronous Data Link Control (SDLC): supports direct lines
             to 3274 (SDLC mode) and 3276 control units.
0        6.  SDLC non-CRT SNA controllers (e.g., 3790; used for JES2 job
             submission).
0        7.  Personal   Computers   using    BARR/SNA,    BARR/3270   or
             BARR/Gateway or similar software that appears to the system
             as an SDLC controller.
0        8.  Dial-up 3174,   3274 and 3276   controllers (either  BSC or
             SDLC), also AS/400s and P/Cs in 3x74 mode, and dial-up JES2
             RJE terminals using SDLC.
0     The PID center currently does not support the following:
0        1.  Devices or control units requiring HDLC.
0        2.  The IBM 3767 and similar  SNA remote terminals.   Note that
             the Network  Terminal Option  (a VTAM  component)  supports
             only 3767  terminals.  The  PID Tele-Processing  controller
             converts TTY I/O  to 3767 mode,  but is  not configured for
             native 3767s.
0        3.  Asynchronous terminals that are not TTY compatible, such as
             the IBM 1050, IBM 2740, and IBM 2741.
0     This manual also includes a short section describing logon procedures
      for CRT devices (327x and compatibles, remote or local).
1                              PID Tele-Processing Services
-
0                                        Section 1
+                                        Section 1
0                               ASYNCHRONOUS COMMUNICATION
+                               ASYNCHRONOUS COMMUNICATION
-          Asynchronous communication  supports directly  connected and  dial-up
           terminals that are TeleType£ compatible.   PID does not support other
           asynchronous protocols and devices,  such as the IBM¥ 1050,  2740 and
           2741.
-
           1.1   COMMUNICATIONS PARAMETERS
+          1.1   COMMUNICATIONS PARAMETERS
+                ______________ __________
0            Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                                ¯
             |   Modem/Line      |  Full duplex                            |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Terminal device |  TTY: local echo on (half duplex)       |
             |                   |  CRT: local echo off(full duplex)       |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Character length|  7 bits                                 |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Stop bits       |  1                                      |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Parity          |  even                                   |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Flow control    |  XOn-XOff                               |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Handshaking     |  none                                   |
             |×××××××××××××××××××|×××××××××××××××××××××××××××××××××××××××××|
+            ¿                   ×                                         ]
             |   Speed           |  1200, 2400 or 9600                     |
             ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                                ¿
0          PID uses full-duplex transmission with local echo,  using 7 bits with
           even parity, and one start and stop bit, and hand-shaking (X-On/X-Off
           flow control) on all asynchronous (Start/Stop) lines.
0          PID also  supports asynchronous  devices,  connecting  to a  protocol
           converter,  that  appear to  the system as  remote 3270  CRTs.   This
           process  is  described  in  a   separate  section.·  (The  parameters
           described in  this section  apply with the  exception that  the local
           echo option should be disabled.   The protocol converter, or the host
           system, provides all information displayed on your screen.)
-          --------------------
-          £TeleType is a trademark of Western Union
0          ¥IBM is a trademark of International Business Machines Corporation
0          ·See "Protocol conversion"
0                                           -1-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     Asynchronous communication  derives its name  from the fact  that the
      beginning of a character on the transmission line is not synchronized
      to any other event.  When idle, a constant "mark" level is maintained
      (the same as continuous "1" bits). To signal the start of a new byte,
      a bit of "0" is sent; this is known as the START bit.
0     The Start bit is followed by the data character (byte), consisting of
      seven bits.  A value of all ones (X'7F') has a special meaning; it is
      a padding  character that is  stripped either  by the hardware  or by
      software.
-     The data character is followed by a PARITY bit.  This bit is on ("1")
      if the preceding data byte had an odd number of one bits,  else it is
      zero if the  number of bits was  even.  The total number  of non-zero
      bits sent in this  fashion for each byte is always  even,  hence EVEN
      parity.
-     To introduce a small processing delay, and to guarantee a non-zero to
      zero transition  for the next character's  start bit,  a STOP  bit is
      sent.  This  makes the total transmission  length ten bits  per byte;
      references to two stop bits are obsolete, and applied only to 110 bps
      transmission. If your equipment will only send two stop bits, the PID
      hardware will accept  this;  if the equipment expects  to receive two
      stop bits, it should work (but run more slowly).
0     Full-duplex  transmission refers  to the  fact that  either side  may
      transmit and receive at the same time.  In practice, one side will be
      transmitting,  and the other receiving,  with mode switching based on
      control characters.  Either side may interrupt the other by sending a
      BREAK signal.   A hardware  break is indicated  by dropping  the mark
      state of the line (i.e., sending zeroes) for 200 to 500 milliseconds,
      with 250 the preferred value. This break interrupts the other side. A
      software  break  is   also  available  (Control-D  or   EOT  on  most
      terminals),  that does  not interrupt;  it may be used  only when the
      issuer is in transmit mode.
-     Any character sent to PID is not sent  back to the user;  if you wish
      to see what you  type,  you must place your device  into "Local Echo"
      mode - this causes the terminal  to echo your type-in locally.   Note
      that  some  manufacturers  refer  to   this  as  "Half-duplex"  mode,
      confusing  it  with  transmission line  capabilities.   If  all  your
      equipment has xxx-duplex switches,  place  the modem into full-duplex
      mode,  and the terminal into half-duplex (do not use half-duplex with
      the protocol converter).
-     Origination  of   transmission  is   controlled  by   pacing  control
      characters.   When a carriage return  (enter)  or control-D (EOT)  is
      received  by  PID,   then  the user  is  placed  into  receive  mode.
      Transmissions  from TCAM  always terminate  with  an X-On  character;
-                                      -2-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          transmissions  from WYLBUR  terminate  with an  X-On  only when  this
           option is chosen by the user.  Transmissions from VTAM terminate with
           a  carriage return  (for compatibility  with TCAM,   the KERMIT  file
           transfer program inserts X-Ons at the end of its buffers).
0               There exists  a tendency to start  typing input as  soon as
                the prompt (e.g., COMMAND ?) appears on the terminal.  When
                the X-On option is in effect,  then all characters received
                at PID before  the X-On is sent are lost;   the user cannot
                see when the X-On arrives...
0               When you run with X-On,  try to allow at least a tenth of a
                second  before typing  your  response  to a  prompt.   This
                potential loss of input is the reason that X-On is not used
                by default.
0          If you have a programmable device,  do not use either a time delay or
           a character string (such as "?  ") as the line turnaround.  Only X-On
           is reasonably safe for this purpose. The time delay can be overrun by
           a busy system,  and a character string might appear in an operator or
           system message.
0          X-On/X-Off protocol, also known as flow control,  and referenced as a
           hand-shaking mode,   permits a device to  get the other side  to stop
           sending until it  is ready for more data (an  X-Off requests stopping
           transmission, an X-On resumption). This is normally used when devices
           with disparate processing speeds need  to communicate.   Flow control
           is supported by  PID on all of  its lines,  and is  required for fast
           (2400-9600 bps) lines, as well as long WYLBUR LIST commands and other
           unpaginated output.
-
-
-
-
-
-
-
-
0                                           -3-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     1.2   CALLING PID
+     1.2   CALLING PID
+           _______ ___
0     One parameter was left out of the preceding section, that of the line
      speed.  The speed  may usually be changed depending  on your hardware
      (device and modem).  For a direct connection, the speed is fixed, and
      is determined when the  line is installed.  It is usually  set to the
      highest value  the terminal  device can  handle.   In  this document,
      transmission speed is  described in bits per second  (bps).  The term
      "baud" is sometimes  used for transmission speed;   baud measures the
      number  of  carrier  signal  transitions  per  second,   and  is  not
      necessarily related to  the number of data bits  sent.   For example,
      300 bps modems also run at 300 baud, but 1200 and 2400 bps modems run
      at 600 baud.
-     For direct  connection,  speeds  up to 9600  bps are  available.  For
      direct lines  to be  installed by  a telephone  company,  one  to two
      months may be required.
0     Dial-up service is available as follows:
0        1.  1200, 2400, 9600 with MNP-4, MNP-5 - call   (703) 931-9105.
             This is a rotary with FastComm 9696 modems.  9600 uses V.32
             mode,  and  is not  compatible with  older 9600  bps modems
+                           not
             using V.29 mode.   All modems on this line offer negotiated
             MNP-4©  (error correction)   and  MNP-5 (data  compression)
             protocols at all speeds.
0        2.  for other speeds and services, contact Technical Support at
             (703) 931-9500x48. Note that we no longer support 110 bps.
0        3.  300, 1200, 2400 bps (Bell 212A) - call (703) 931-9108
-
      PID currently runs only one production machine,  the B-system.   When
      you use any of the above numbers to call PID:
0          After the connection is established, hit ENTER (or RETURN)
           Type the name of the subsystem you wish to be connected to,
           or another carriage return - you will be prompted with some
           of the valid subsystem identifiers (in message CMT405):
0        1.  WYLB - WYLBUR on the B machine (currently a 4381-R14)
0        2.  SYSB - VTAM services on the B machine in NTO mode. Use for:
0            KERMIT (the non-TSO file transfer program),
             TSO (including KERMIT file transfer),
      --------------------
-     ©Microcom Networking Protocol  (MNP)  is a trademark  and proprietary
       product of Microcom, Inc.
0                                      -4-
1                              PID Tele-Processing Services
           Asynchronous Communication
-                 CICS (by special arrangement only),
                  WYLBUR ("new" WYLBUR; also supports KERMIT).
-          Next you  may receive  a CMT411 or  CMT413 prompt  message soliciting
           your terminal type.  This entry is  required but presently ignored by
           non-WYLBUR subsystems (e.g., TSO).  Note that an improper, but valid,
           entry may cause  problems subsequently - please ensure  that you have
           the correct type or option:
0             1.  (CR) - carriage return (or enter) indicates a standard TTY,
                  without special support.  WYLBUR will not support automatic
                  tab setting,  screen clearing,  etc.   For a CRT,  a screen
                  capacity of  80 by 24  is assumed.   The user will  not use
                  SAS/Graph§ files.
0             2.  XON -  as above,  but every  prompt sent by WYLBUR  will be
                  terminated by an X-On character.  This mode is required for
                  most intelligent terminals used for file transmission;  the
                  X-On serves as a pacing character informing the device that
                  the next line may be sent.
0             3.  SAS - same  as the (CR)  entry,  but  the translation table
                  used for  output is the one  supplied by the  SAS Institute
                  for SAS/Graph.   If an XON is required, it may be requested
                  with a 'SET XON' command  after the LOGON sequence.   These
                  translation  services   are  not  available  in   NTO  mode
+                                              ___
                  (connection to new WYLBUR via SYSA|SYSB).
0                 Note that the character codes for the caret, tilde, reverse
                  slash,  reverse quote,  and left  bracket differ from those
                  used by WYLBUR.  Both the WYLBUR and SAS code for the right
                  bracket are supported,   but on input,  all  characters are
                  translated to WYLBUR codes, not SAS codes.
0             4.  TEK  - SAS/Graph  support for  the Tektronix  4100 CRT  and
                  printer.
0             5.  HP - SAS/Graph support for the Hewlett-Packard plotter.
0             6.  FOX - for the Perkin-Elmer 1100 and 1200 CRTs
0             7.  IMS - for the IMS Ultima II, Tele-Video 950, and compatible
                  CRTs.
0             8.  DM10 - for the Datamedia  Colorscan terminals (CS10 through
                  CS60).
0             9.  ESP - for the Hazeltine Esprit III Color terminal.
0          --------------------
-          §SAS/Graph and SAS are registered trademarks of SAS Institute Inc.
0                                           -5-
1                         PID Tele-Processing Services
      Asynchronous Communication
-        10. IBM3101  - supported  in character,   but  not block  mode.
             Special screen attributes (intense,   non-display)  are not
             supported   in   this   mode.    Only   tab   support   and
             screen-clearing are available.
0        11. DEC - for the Digital Equipment Corporation's DEC-Writers.
0        12. VT100 - supports the DEC VT100+, VT131, etc.,  the WYSE-75,
             and other  compatible terminals.   Suppression  of password
             input is available for the WYSE, but not for the DEC CRTs.
0        13. VT200  -   supports  the  DEC   VT220,   the   WYSE-85  and
             compatibles.
0        14. WYSE - for the WYSE 50 and 350 terminal. Note that the WYSE
             75, 100, etc. are not compatible with this (for the 75, use
             VT100;  for the 85, use VT200).   Please make sure that the
             terminal is set to WYSE mode,   and not one of the optional
             modes, such as TV925, HZ1500,  etc.   Use this mode for the
             Datalink 125 terminal (in WYSE-50 mode).   If you are using
             a PC running ProComm Plus,   this is the preferred terminal
             type (tab support, auxiliary print support, etc.).
0        15. WY60 -  supports the  WYSE 60  when it  is set  to WYSE-50+
             mode, but not when it is set to WYSE-50 or other mode.
0        16. WY300 - supports  the WYSE 300 color  terminal.   Note that
             the terminal  should be set to  full color mode  (with both
             foreground  and   background  colors   settable).    Member
             LOGONWY3 in the public library  has sample instructions for
             loading user designed characters  and maintaining a display
             showing tab positions and a column scale.
0        17. TV920 - supports  the TeleVideo 920 and 925,   and WYSE and
             Datalink terminals in compatibility mode.
0        18. TVPT - supports the TeleVideo Personal Terminal.
0        19. 5150 - for  the IBM P/C running  the communications package
             supplied by  PID (in order to  obtain this,  you  must show
             proof of  purchase of  the IBM  Asynchronous communications
             package,  and supply a  floppy;  call (703) 931-9500x50 for
             details).    This package  is obsolete.   We now  recommend
+                         This package  is obsolete    We now  recommend
             KERMIT and  ProComm.   Either is  available for  copying to
+            KERMIT and  ProComm    Either is  available for  copying to
             your preformatted 360K floppy.
+            your preformatted 360K floppy
-     If  your terminal  has  control sequences  for  tab setting,   screen
      clearing,  and  the like,   but is  not presently  supported,  please
      contact the systems group for  support.  Call (703) 931-9500x50,  and
      provide the  detailed control  sequence information  (or lend  us the
      manual for a few days).
-
                                       -6-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          Some of  the terminals listed  above have auxiliary  printer support.
           This allows  you to  attach a  printer to  your terminal,   and print
           output using manual intervention,  or defined commands.   Known print
           sequences are listed in Appendix C as "Auxiliary..."  Simple listings
           on such a  printer may be obtained  by using a LIST  command with the
           AUXILIARY subcommand.   More complex listings may be obtained by also
           using MARKER and PAGE, or by FETCHing and LISTing with the CC option.
0          To list a  two-page document (with a  pause after 40 lines  to change
           paper):    LIST PAGE 40 AUX
           After 40 lines  are printed,  you will be prompted  to "HIT ENTER" to
           continue.
0          For devices having both transparent (no terminal list while printing)
           and non-transparent (terminal  echoes all printing)  modes,   AUX and
           AUX1 will select transparent mode, AUX2 selects non-transparent.
0          In order  to issue  your own  control sequences  to a  terminal or  a
           printer,  you may  use the transparent type (TTYPE  or TTY)  command.
           The operands on TTYPE are character or hexadecimal strings.   To send
           ASCII control characters,  locate the ASCII value in Appendix A,  and
           use the value shown in the  last column.   Note that functions listed
           in the  appendix are  device dependent,   and may  not exist  on your
           terminal.
-
-
-
-
-
-
-
-
-
-
0                                           -7-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     1.3   KERMIT FILE TRANSFER
+     1.3   KERMIT FILE TRANSFER
+           ______ ____ ________
0     KERMIT (KL10  Error-free Reciprocal Micro  Interface Transfer)   is a
      proprietary file transfer system provided by Columbia University.  It
      is available for the IBM P/C, compatibles,  and many non-IBM systems.
      The technical  group provides  copies of the  P/C version  on request
      (please supply a  3" or 5" floppy in PC-DOS  format);  other versions
      may be made available - call (703) 931-9500x48 for information.
0     Currently the  IBM mainframe version of  KERMIT is supported  under a
      VTAM application (KERMIT), WYLBUR  and TSO; you must have a WYLBUR or
      TSO  userid to  use it.    WYLBUR-style allocation  and dataset  name
      validity-checking is  not completely implemented.  Allocation  of new
      files on a pack other than that specified in your user definition may
      not be available.
0     Note:    KERMIT  is  accessible  from WYLBUR,   TSO  and  as  a  VTAM
+     Note
      application.   Due to the environment, there are minor differences in
      available commands and features.   However,   if you are transmitting
+                                        However
      large files and you are using  P/C KERMIT,  ProComm Plus,  or another
+                 and
      package supporting long packets,  then VTAM KERMIT is the fastest and
      most economical choice.
0     To prepare KERMIT,  examine your  floppy.  File MSKERMIT.INI contains
      initialization  statements;   double-check  that  the  communications
      parameters are  set to match  your modem  and TSO (7-bit  data,  even
      parity, local echo, 1 or 2 stop bits, and correct speed).
0     A sample MSKERMIT.INI file might look like this:
        SET PORT 1                 Specify the serial connection (you may
                        need PORT 2 if you have a serial printer or mouse)
        SET TERMINAL VT102         Use "advanced" VT-100 mode
        SET LOCAL ON               Local echo on
        SET BAUD 1200              Modem speed
        SET PARITY EVEN            Transmission parity
        SET FLOW XON               X-On/X-Off flow-control is required
        SET HAND NONE                hence no X-On for line turn-around
        SET RETRY 63               set error limit for noisy phone lines
        SET KEY SCAN 177           1/2 instead of "DELETE" make backspace
        8                          2/2 key send a backspace code.
        DIAL 703931910x            doesn't work on all modems
        COMMENT  To CMT41x prompt respond with VT100 as the terminal type
0     On the P/C, make the default drive the one KERMIT resides on.  Invoke
      KERMIT;  wait  for initialization  messages (note  that the  Columbia
      University version of HAYES.TAK changes the speed)  to complete.  You
      may issue a SHOW command to check  the options.  Note that the option
      labelled IBM is really  for an IBM/VM system running odd  parity - do
      not use it.
0     Type CONNECT  to get  into terminal  and dial  mode.   Establish  the
      connection (either  type the  dial command for  your modem,   or dial
      manually),  and  hit Carriage Return  twice.  You should  receive the
-                                      -8-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          standard COMTEN prompt message number CMT410 asking for the system to
           connect you to (WYLA, WYLB,  SYSB).  In the event the B-system is out
           of service for an extended period,   operations may run everything on
           the A-system;  in this case use SYSA as the response).   Issue KERMIT
           (non-TSO; KERMIT file-transfer only) or a
                                   LOGON userid/password
           command,  and wait for the TSO READY response.   You may also connect
           to WYLBUR normally,  and then type KERMIT (after KERMIT,  type WYLBUR
           to return to WYLBUR).
0          If you have not done so before, or are not sure, issue a
                                     PROFILE CHAR(BS)
           TSO  command  to  support  the backspace  character  as  a  backspace
           function.
0          If you invoke  KERMIT outside of TSO,   you may be prompted  for your
           userid  and  password.   Valid  signon   results  in  a  response  of
           KERMIT-NET> or KERMIT-Wyl>, as appropriate.
0          Invoke KERMIT;  wait for the KERMIT-TSO> response.   For exporting of
           files, you may set the DCB options now, or just prior to the transfer
           of each  file.   When  a file is  sent to the  mainframe with  a name
           already in use, you will be prompted to permit destruction of the old
           file.   In SERVER  mode,  duplicates  fail  unless you  issue a  "SET
           REPLACE" command beforehand.   Replaced files will keep their old DCB
           characteristics (RECFM,  LRECL  and BLKSIZE).   To replace  a dataset
           using currently set options, use "SET UPDATE".
0          To display the option settings, type STATUS.
0          Settings may  be changed  with 'SET option  value';  where  option is
           RECFM,  LRECL or BLKSIZE.  For RECFM,   the only supported values are
           'F', 'V' and 'W';  for LRECL and BLKSIZE any valid combination may be
           used.
-          To transmit a file to the host system from the P/C
+             ________ _ ____
0          In terminal mode (after a CONNECT), issue a RECEIVE dsn or RECEIVE *
           command.  The form "RECEIVE *" is used  when you are sending multiple
           files,  or when you wish to use the  same name for the file (the name
           is taken from  the SEND command on  the P/C side).   Note  that valid
           characters in a P/C name are not  necessarily valid on the host.  All
           invalid characters are  converted to dollar signs  (this could result
           in inadvertant  duplicate names),   periods are  inserted to  prevent
           index names longer than eight characters,  and the first character of
           a level may not be a digit (1-9 are changed to A-I, and 0 to Z).
0          Note that  an unquoted "dsn"  will be  prefixed by your  current TSO,
           WYLBUR or explicitly set prefix; a name in paired apostrophes will be
           used as is (with apostrophes edited out and translated/converted into
           a valid host  name).   Unlike WYLBUR,  quotes may not  be used,  only
           apostrophes.    If the  reference is  to  a member  of a  partitioned
-                                           -9-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     dataset  (PDS),   then  the  member name  is  placed  in  parentheses
      following the dsname, but inside any quotes.  KERMIT-TSO will respond
      with one or more messages, and will be ready for reception only if it
      says so.  You  now have twenty seconds  to get the P/C  to begin file
      transmission:  type Control-¨ (using the control key as a shift key),
      then type C; if you have KERMIT 3 or later, just use Alt-X to switch.
      You will get a KERMIT-MS prompt. Type
                                  SEND file.ext
      where "file" may  be a file name  prefixed by a drive  letter,  e.g.,
      "SEND A:ANYOLD.TXT".  The P/C will either produce error messages,  or
      display  a new  screen with  file transfer  messages and  statistics.
      When transfer completes, remember to CONNECT to the mainframe to EXIT
      KERMIT and LOGOFF TSO, unless you have additional transfers to do.
-     To receive a file from the host
+        _______ _ ____
0     CONNECT to KERMIT-TSO; type
                                   SEND dsname
      and wait for  a response.  Normal response is "Waiting  10 seconds to
      send". Note that KERMIT-TSO only locates cataloged files.   For newer
      KERMITs (3 and later), issue Alt-X;  for older ones use Control-¨ and
      C to return to the P/C KERMIT, and issue a
                                RECEIVE file.ext
      command to specify the filename on the P/C. Note that the name may be
      prefixed  by  a  drive  specification,   but  not  a  directory  name
      (A:ANYOLD.TXT is valid,  but A:WP\DOCUMENT.TXT  is not).   The screen
      will display file transfer status messages and statistics.  Note that
      KERMIT will  not replace an  existing file on  the P/C side  (it will
      prompt you on  the TSO side),  and  has no provision for  deleting an
      existing file.  When file transfer  completes,  remember to return to
      terminal mode to EXIT from KERMIT-TSO  and to LOGOFF TSO,  unless you
      plan additional file transfers.
-     SERVER mode:
+     ______ ____
0     The current  version of  KERMIT has been  modified to  support SERVER
      mode.  Whenever you have the KERMIT-TSO> prompt, type SERVER.  On the
      PC, return to PC-KERMIT mode (Control-right bracket,  then C).  Files
      may be transferred to the mainframe by typing "SEND filemask";  files
      may be copied to the PC by typing "GET filename".
0     "filemask" may be any wild-card selection (or a simple name) valid on
      the PC,  but note that resulting filenames that are not syntactically
      valid on the mainframe side will be rejected, or changed to meet host
      standards.
0     The command  "REMOTE TYPE  filename",  if supported  on the  PC side,
      causes a mainframe file to be typed on the PC.
0     The command QUIT terminates SERVER  mode;  the command BYE terminates
      SERVER mode, KERMIT and causes a LOGOFF from TSO.
-                                     -10-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          The  host  KERMIT  supports a  TAKE dsname  command;   the  specified
           "dsname"  is a  file or  member  containing KERMIT  commands in  text
           format.
0          The host KERMIT now supports a DELETE dsname, DELETE pds(member)  and
           DELETE dsname,volser command.  Input parameters are as documented for
           batch program DELETER.
0          The  host KERMIT  program  has been  modified  to  support the  "long
           packet"  protocol extension.    In  addition to  the  normal 94  byte
           packets,  the  long protocol is able  to send and receive  packets of
           lengths up to 2000 bytes.  Long packets are supported by KERMIT 3 and
           later (PC side),  and ProComm Plus version 2.   On noisy lines,  long
           packets may require a significantly longer transmission time.  If you
+                                              longer
           use long packets, monitor retransmissions or total throughput values;
           reduce the packet size when you get too many retransmissions.
-          Under the  license issued by  Columbia University,  KERMIT  is freely
           available to all requesters for  non-commercial use.  The P/C version
           and the machine readable documentation are available for copying to a
           floppy disk you supply;  additional documentation,  other versions of
           KERMIT,  or the entire distribution tape,  are available for the cost
           of reproduction.
-          Special SET options:
+          _______ ___ _______
0          SET VOL  serial - allows  you to save  new datasets on  the specified
           volume serial.  You must be authorized to use the pack.   SET VOL CAT
           reverts to  normal mode.   Setting  a volume may  cause unintentional
           problems when a dataset already exists, but on a different volume.
0          SET  STRIP ON|OFF|SEnd|REceive|BOth  -  this  option causes  trailing
           blanks to be removed when text files are transmitted;  either in BOth
           directions,  or  specifically for SEnd  or REceive files  only.   The
           default is not to strip.
0          SET TAB ON|OFF - this option,  when turned on,  causes tab characters
           in  received files  to  be  replaced by  one  or  more blanks.    Tab
           positions are assumed to be in  the P/C standard positions,  spaced 8
           characters  apart.    This   option  may  be  helpful   when  sending
           documentation files to the host.
0          SET  UPDate|REPlace|ADD -  SET ADD,   the default,   allows only  the
           creation of  new files on  the host  side;  duplicate file  names are
           rejected (SERVER mode), or the user is prompted.   SET REPlace causes
           duplicate files to  be replaced with the existing  DCB options.   SET
           UPDate  will  replace existing  files  using  the currently  SET  DCB
           options (RECFM, LRECL and BLKSIZE).  No option will allow replacement
           of a partitioned dataset with a sequential, and vice versa.
-
0                                          -11-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     1.4   PROCOMM PLUS CONSIDERATIONS
+     1.4   PROCOMM PLUS CONSIDERATIONS
+           _______ ____ ______________
0     Unlike ProComm,  described in the next section,  ProComm Plus¶ is not
      Shareware,   but   is  a  proprietary   product  sold   by  Datastorm
      Technologies, Inc..
0     The following options are suggested for WYLBUR and KERMIT use:
0       Modem Options (Alt-S, first line)
        General Options
0       A - Wait for connection       45  (45-60 seconds recommended)
        C - Auto baud detect         OFF* (must be OFF for dial-out)
0       Modem commands
0       B - Dialing command         ATDT  (use ATDT9, for outside line
                                           or prepend 9, to phone numbers)
0       Terminal options (Alt-S, line 2)
0       A - Terminal emulation   WYSE 50* (if you prefer, VT-100)
        B - Duplex                  HALF* (TTY mode; use FULL for CRT)
        C - Flow control        XON/XOFF*
        D - Hard flow control        OFF  (depends on your modem)
        E - Line wrap                 ON  (required in TTY and CRT mode)
        F - Screen scroll             ON  in TTY mode; OFF in CRT mode
        G - CR translation (in/out)   CR
        H - BS translation      NON-DEST*
0       KERMIT setup (Alt-S, line 8, KERMIT protocol)
0       A - Control quote char        35
        B - Maximum packet size     1024 (long packets; 94 short)
        C - Pad character              0
        D - Number of pad chars        0
        E - 8th bit quote             38
        F - Handshake character        0  Handshake must not be same as
        G - End of line char          13    End-of-line character
        H - File type               TEXT* (use BINARY at own risk)
        I - Block check type           3* (best; insignificant overhead)
        J - Block start                1
0     * indicates non-default (altered) entries
-     On the host,  enter SERVER mode  (connect to KERMIT and type SERVER).
      To exit server mode,  use Alt-K and function 3(FINISH)  or 4(LOGOFF);
      note that these may  have to be issued twice if  a file transfer left
      the server unsynchronized.
      --------------------
-     ¶ProComm Plus is a trademark of Datastorm Technologies, Inc.
0                                     -12-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          To send files to the host,  issue  Alt-K function 2 or press the PgUp
           key (then specify 2 for KERMIT). When prompted, specify the file name
           or mask.  Remember  to set the REPLACE option before  starting if you
           wish  to replace  existing files.   ProComm failures  are not  always
           indicated  as such  (notably when  file  allocation fails  due to  an
           invalid or duplicate name).
0          To receive files from the host in SERVER mode, issue Alt-K function 1
           and respond with  the file name.  When  not in SERVER mode,   issue a
           "SEND filename" command on the host side, then use the PgDwn key with
           option 2 (KERMIT).  Wait  about 5 seconds before pushing the  2 - the
           mainframe KERMIT has a built-in 10 second delay.
-          The WYLBUR AUX options on LIST (ONLINE) have been tested with VT-100,
           TeleVideo 925 and WYSE-50 modes.
-
-
-
-
-
-
-
-
-
-
-
-
-
                                           -13-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     1.5   PROCOMM CONSIDERATIONS
+     1.5   PROCOMM CONSIDERATIONS
+           _______ ______________
0     ProComm¼ is one of the popular PC telecommunications packages.  It is
      available  from  PID  for  copying  on a  user's  3"  or  5"  floppy;
      documentation  is   available  only   from  Datastorm   upon  product
      registration.
0     The following options are suggested for WYLBUR and KERMIT use:
0       Terminal options (Alt-S, option 2)
0       Terminal emulation        VT-100* (use ANSI-BBS on color P/Cs)
        Duplex                      HALF* (TTY mode; use FULL in CRT mode)
        Flow control            XON/XOFF*
        CR translation (in/out)       CR
        BS translation          NON-DEST*
        BS key definition             BS
        Line wrap                     ON*
        Scroll                        ON  (ON in TTY mode; OFF in CRT mode)
        Break length                 350
        Enquiry (Ctrl-E)             OFF
0       KERMIT setup (Alt-S, option 3)
0       Control quote char            35
        Maximum packet size           94*
        Pad character                  0
        Number of pad chars            0
        Handshake character            0  Handshake must not be same as
        End of line char              13    End-of-line character
        File type                   TEXT*
        Block check type               2* (Host KERMIT supports 1-3)
0     * indicates non-default (altered) entries
-     On the host,  enter SERVER mode  (connect to KERMIT and type SERVER).
      To exit server mode,  use Alt-K and function 3(FINISH)  or 4(LOGOFF);
      note that these may  have to be issued twice if  a file transfer left
      the server unsynchronized.
0     To send files to the host,  issue  Alt-K function 2 or press the PgUp
      key (then specify 2 for KERMIT). When prompted, specify the file name
      or mask.  Remember  to set the REPLACE option before  starting if you
      wish  to replace  existing files.   ProComm failures  are not  always
      indicated  as such  (notably when  file  allocation fails  due to  an
      invalid or duplicate name).
-
      --------------------
-     ¼ProComm is a trademark of Datastorm Technologies, Inc.
0                                     -14-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          To receive files from the host in SERVER mode, issue Alt-K function 1
           and respond with  the file name.  When  not in SERVER mode,   issue a
           "SEND filename" command on the host side, then use the PgDwn key with
           option 2 (KERMIT).  Wait  about 5 seconds before pushing the  2 - the
           mainframe KERMIT has a built-in 10 second delay.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                          -15-
1                         PID Tele-Processing Services
      Asynchronous Communication
-     1.6   PROTOCOL CONVERSION
+     1.6   PROTOCOL CONVERSION
+           ________ __________
0     Protocol  conversion provides  remote 3270  compatible support  using
      asynchronous terminals, usually over dial-up lines.
0     The control settings for your terminal are: full-duplex for the modem
      and terminal (no local echo), 7 data bits, even parity, one start and
      one stop bit and X-On/X-Off hand-shaking.    If you have a WYSE-50 or
      Datalink  125   terminal,   it  should   be  set  to   TeleVideo  925
      compatibility mode.   If you have a PC and ProComm Plus, use 3270/950
      for the "terminal" type; this setting provides convenient support for
      3270 keys and has a 24*80 screen with the 25th status line.
0     For each 3270 function, there is an equivalent key, or combination of
      keys, to produce the function on your terminal.   The list of control
      sequences, and some for interaction with the protocol converter,  are
      available   on  request   from  the   Technical   support  staff   at
      (703) 931-9500x48.
-
         1.  For terminals  with function keys,   try them  (shifted and
             unshifted),  or use ESCape,  the  one or two digit function
             key number, then CR (carriage return), e.g., ESC 1 2 CR for
             PFK 12.
0        2.  Use ESC A (upper case)  for PA1,  ESC B for PA2,  and ESC Z
             for CLEAR.   In DEC VT mode,  use Control-A A for PA1,  and
             Control-A B for PA2 (upper case is required).
0        3.  Use Control-R (the control key is  used as a shift key)  to
             RESET the keyboard.
0        4.  Use Control-Y to return control  to the protocol converter;
             this  allows you  to  switch from  one  host  to the  other
             without disconnection.
0     Connection  with the  protocol converter  is  established by  calling
      (703) 931-9497 (1200, 2400, 9600 bps FastComm modems MNP-4/5).
0     Once  the connection  is  established,   repeatedly type  the  single
      character that defines your terminal  type.   Several repetitions are
      required  to establish  your  linespeed  and options.    The  correct
      response is "MDS-8070" centered on your screen.
0     If you  do not know your  terminal type,  repeatedly type  a carriage
      return; you will be prompted through supported device types.   Please
      note that the (Hazeltine)  Esprit Color terminal is compatible with a
      TeleVideo 925,  but not a monochrome Esprit.   Also note that the DEC
      VT-100 is not compatible with the VT-100+, the VT-102 or VT-131.  The
      "advanced" VT-100s produce faster code.
-
0                                     -16-
1                              PID Tele-Processing Services
           Asynchronous Communication
-          The next page shows a menu of options.   Under normal conditions, the
           third menu  option is to  be chosen  (connection with host  B)  using
           (simulated) Program Function Key 3.  The other supported interface is
           host A (PFK 1).  Use this first one  only when instructed to do so by
           PID staff.
0          After this step, connection is established with the host,  and normal
           3270 mode becomes  effective.   When you see the  SYS RDY response on
           the bottom line  of your screen,  hit carriage  return;  the response
           will be the logon page of the  VTAM Network Solicitor (the VTAM logon
           process is discussed  in a separate chapter).   Please  note that not
           all listed systems are available at all times or on all machines.  If
           you must connect to a program on another machine, use the first three
+              ____
           characters of the name followed by the desired machine id,  e.g.,  if
           you are authorized for EXHIBIT on the A-system, use EXHA.
0          Also refer to the section on BSC3 for 3270 support.
0          To determine the character defining your device type, and to obtain a
           sheet showing the normal terminal  settings and 3270 equivalent keys,
           contact the systems group at (703) 931-9500x50.
0          Due to  repeated problems with users  failing to log  off completely,
           the  Network Solicitor  global logon  option  has been  disabled -  a
           userid and password will be solicited for all connections.
-
-
-
-
-
-
-
-
-
-
                                           -17-
1                         PID Tele-Processing Services
      Synchronous Communication                              Point-to-Point
-
                                    Section 2
+                                   Section 2
0                   POINT-TO-POINT SYNCHRONOUS COMMUNICATIONS
+                   POINT-TO-POINT SYNCHRONOUS COMMUNICATIONS
-     This chapter describes  devices used in conjunction with  the PID Job
      Entry System (JES2).  The  supported Binary Synchronous Communication
      (BSC)  modes consist of BSC1 (direct connection)  and BSC2 (dial-up).
      Also supported are Synchronous Data  Link Control (SDLC)  connections
      on dial-up  or direct  lines.   SDLC  requires,  in  addition to  the
      registration   information  noted   below,   the   device  type   and
      identification number (XID) necessary for VTAM connection.
-     Binary   Synchronous  communication   derives  its   name  from   the
      implementation,  which sends  bits and bytes in  synchronicity with a
      clock  (usually  contained in  the  modem).    The  first byte  of  a
      transmission may  still occur at a  random time,  but  all subsequent
      characters  are  transmitted  at fixed  intervals.    BSC1  and  BSC2
      transmissions consist entirely  of control characters,  or  begin and
      end with control characters,  and contain 16-bit error checking codes
      following data.   Error checking is provided on both the hardware and
      software  levels,   with  automatic retransmission  when  errors  are
      detected.
0     If your terminal has a punch or  tape drive,  or you plan to transmit
      object decks or  other data possibly containing  transmission control
      characters,  then your  hardware must be able  to support transparent
      transmission.  In transparent mode, control characters encountered in
      data  are  treated  as  data  -  the  entire  transmission  block  is
      surrounded by  special controls.    This option,   and some  terminal
      dependent modes,  must match the options used when your remote number
      is assigned.
0     Prior to using JES2 services,  you  must obtain a remote number,  and
      complete,  or  have your marketing  representative complete,   an RJE
      (Remote  Job Entry)   User  registration.    This form  provides  the
      terminal  features and  options  necessary  to establish  the  remote
      definition in JES2.  Once the form is processed by the systems group,
      the  options become  effective  within 24  hours,   and  you will  be
      assigned a remote number.
-     Direct connect lines are available by  prior arrangement with PID and
      a telephone company.   Your marketing representative can  provide the
      necessary information.
0     Direct connect lines are currently supported at speeds of 2000, 2400,
      4800, 7200,  9600 and 19200 bps.  Direct connect lines do not require
      dialing up  the host computer,   and do  not require that  a /*SIGNON
      identification card be supplied.   Otherwise,   the remainder of this
      section applies to both direct and dial-up connections.
-                                     -18-
1                              PID Tele-Processing Services
           Synchronous Communication                              Point-to-Point
-          PID currently supports the following BSC devices:
0             1.  IBM 2770
0             2.  IBM 2780
0             3.  IBM 3740 (supported as a 2780)
0             4.  IBM 3780
0             5.  Any  compatible  device.   Note  that  some  devices  offer
                  software to  simulate either a 2780  or a 3780.   With this
                  choice, use 3780.  Software that simulates a 360 or 370 CPU
                  should  be  chosen  in  preference  to  any  of  the  above
                  ("multi-leaving"  mode  supports concurrent  processing  of
                  sending and receiving datastreams;  e.g.  seven print files
                  could be processed while sending data to the JES2 reader).
0          The above devices are all either  in transmit or receive state,  with
           direction of  data flow  alternating under  control of  the terminal.
           The  BSC  devices  listed   below  support  "Multi-leaving"  (two-way
           transmission of  data streams  for multiple  devices,  e.g.,   a card
           reader, a printer and a punch):
0             1.  IBM 2922
0             2.  IBM 360/20 models 2, 4, 5, 6.   Some models of the DATA/100
                  run in this mode, some run in 2780 mode.
0             3.  IBM 360 or  370,  dedicated as a remote.   You  may run the
                  system dedicated using the IBM provided program, or you may
                  run program RMT370  in one address space  using a dedicated
                  or  dial-up line.   RMT370 is  available  from the  systems
                  group; it runs under MVS, MVS/SP and MVS/XA).
0             4.  IBM 1130
0             5.  System 3
0          The following are available SDLC devices:
0             1.  IBM 3770
0             2.  IBM 3790
0             3.  System/32
0          P/Cs  and  P/C  networks  may  be used  as  JES2  RJE  devices  using
           BARR/HASP, BARR/RJE or similar software.
-
-
                                           -19-
1                         PID Tele-Processing Services
      Synchronous Communication                              Point-to-Point
-     2.1   DIAL-UP SIGNON
+     2.1   DIAL-UP SIGNON
+           _______ ______
0     The following dial-up service is available:
0        1.  4800 bps BSC - call (703) 931-9788
0        2.  9600/4800/2400 bps SDLC - call (703) 931-9789
0     Modems used for dial-up service should be placed in half-duplex mode.
0     Make sure your equipment is ready to send;  at a minimum, you must be
      ready to send the /*SIGNON card described below.
0     Place your phone into Voice/Talk mode;  dial, and wait for a response
      tone. When the data tone is issued, place your phone into DATA mode.
0     On dial-up lines,   the user must supply the remote's  number and the
      corresponding password, and specify the system to which the remote is
      to be connected. The required control card is:
0           /*SIGNON JESx  RMTnnn lpsw                   password
0     The subsystem selection must be JESA (4381-A system)  or JESB (4381-B
      system),  and  must start  in column  10.  The  remote number  may be
      specified as REMOTEnn or RMTnnn with 1 or 2 digits for the long form,
      and 1 to 3  digits for the short form.  Either  operand must begin in
      column 16. The "lpsw" field is reserved for a line password, which is
      not presently  used by  PID.  Your  remote's password  must start  in
+                                                            ____
      column 73.
0     An invalid entry  prior to column 16  may result in the  loss of your
      connection without an error message, depending on the severity of the
      error.   Invalid remote  numbers or  passwords usually  result in  an
      appropriate error message.
-
-
-
-
-
-
-
                                      -20-
1                              PID Tele-Processing Services
           Synchronous Communication                         Multi-dropped lines
-
                                         Section 3
+                                        Section 3
0                                 SYNCHRONOUS - 3270 MODE
+                                 SYNCHRONOUS - 3270 MODE
-          Multiple  control units  and devices  may  be connected  to the  same
           communications line  with BSC3 protocol.  This  mode is used  for IBM
           3270 control units, 3277,  3278,  3279 CRTs,  and 3262,  3267,  3284,
           3286, 3287, and 3289 printers.
0          Synchronous protocol  is also available in  SDLC mode.  This  mode is
           available with IBM 3274 and 3276 control  units,  and at speeds up to
           19,200 bps.
-          Dial-up  SDLC   support  is  available,   and   requires  appropriate
           pre-registration.    Dial-up BSC  support can  be  made available  by
           special  arrangement;   consult  your  marketing  representative  for
           particulars.
-          "3270" will be used from now on to indicate devices with control unit
           types 3271, 3272, 3274, 3275 and 3276,  CRT types 3277,  3278,  3279,
           3178, 3179, and 3180, and printer types 3262,  3284,  3286,  3287 and
           3289, and all similar and compatible devices.
-          Support for 3270s  is available from WYLBUR,  TSO and  CICS.   All of
           these require prior notification of  the support staff.   Support for
           some TTYs, running into a (dial-up) protocol converter,  and behaving
           as 3270s, is also available.   Contact your marketing representative,
           or customer support at (703) 931-9500x48.
-
-
-
-
-
-
-
0                                          -21-
1                         PID Tele-Processing Services
      Synchronous Communication                         Multi-dropped lines
-     3.1   NETWORK SOLICITOR
+     3.1   NETWORK SOLICITOR
+           _______ _________
0     The Network Solicitor  (an application running under  VTAM)  controls
      connection  to devices  managed  by VTAM.    Under  control of  local
      parameters, an individual device:
0        1.  may be  available to anyone  subject to the  user's logging
             on.   The screen will display  a logon request with prompts
             for the user id, password and optional account number.  All
             entries must be made at one time (the current software does
             not save field contents between screen entries).
0            Global logon:   the account number is optional,  and should
             be used when  you wish to use a different  account than the
             one in your  userid record (subject to  authorization),  or
             when you will switch between  VTAM applications and wish to
             avoid multiple logons (currently honored by TSO, WYLBUR and
             Exhibit),   and  prior  to  invoking  Exhibit  (for  forced
             commands).   Note that global logon  works only on the same
+                                                       ____
             system that your terminal is connected to (the system id is
             displayed on  the NETSOL  screens and  on some  application
             logon screens). In particular, CICS and TSO are normally on
             the "B" system.
0            Automatic logons must be cancelled by the user (except from
+            Automatic logons must be cancelled by the user
             dial-up  devices  where  disconnect  is  made  on  loss  of
             connection).    From  TSO  and Exhibit,   use  the  SIGNOFF
             command.   From  Wylbur  and  other  applications,   logoff
             normally, then use a LOCK command in NETSOL.
0            Due  to repeated  problems with  incomplete  log off,   the
             global  (automatic)  logon  option has  been disabled  from
             dial-up devices.
0        2.  may be available to any user (mostly local devices).  These
             terminals,  and those  receiving a required LOGON,   show a
             menu  of  supported  applications.   You  may  request  any
             application you are authorized for (if you have logged on);
             if you  are not  logged on,   the invoked  application will
             request its  logon.  To facilitate automatic  connect mode,
             you may type "PASS" to obtain a  logon screen and log on to
             NETSOL.
0            Note that not all applications are listed on your menu, and
             some listed applications may not be available.
0        3.  may  be  forced  to  a   specific  application.   When  the
             application  is  available,    the  terminal  automatically
             connects to it.   At other times the  screen reads "CLOSED"
             and rejects  all attempts  with an  "APPLICATION xxxxx  NOT
             AVAILABLE"  message,  where  "xxxxx"  is  the name  of  the
             dedicated application.
-
                                      -22-
1                              PID Tele-Processing Services
           Synchronous Communication                         Multi-dropped lines
-             4.  may not be available at all.   This is the case when system
                  maintenance  is  in  progress,   and  when  the  center  is
                  scheduled to be unavailable.   Normal maintenance hours are
                  posted on the HELP screen;   special messages may appear in
                  the middle  of the screen (or  as an additional line  on an
                  NTO device).
0          It should be noted  that whenever a logon is made  with a userid that
           is  authorized for  only  one application,   and  the application  is
           available,   NETSOL will  connect the  terminal  to that  application
           without notification.   Notification is made  only if  the connection
           fails.
0          The  user-id  record may  additionally  be  defined with  an  initial
           command;  if  so,  after logon  you may  be placed directly  within a
           program in an application.
-
-
-
-
-
-
-
-
-
-
-
-
-
                                           -23-
1                         PID Tele-Processing Services
      Synchronous Communication                         Multi-dropped lines
-     3.2   REMOTE PRINTER CONTROL
+     3.2   REMOTE PRINTER CONTROL
+           ______ _______ _______
0     327x attached printers can be made  available as JES2 output devices.
      Normally,   these can  only be  controlled by  the central  operator.
      Partial printer  control may  be made  available on  request Ýcontact
      systems or technical support (703) 931-9500x48 or (703) 931-9500x50¨.
      The remote printer  must be defined to  VTAM,  and to JES2  as an SNA
      device and remote.   The remote number is added to  a user-id record,
      and the user is authorized to  use Exhibit command $PRT (normally the
      $PRT  command  is  invoked automatically).   The  user-id  record  so
      modified may be created specifically for  printer support,  or may be
      an existing one.
0     To  use  Exhibit  from  NETSOL,  use  function  key  5,   or  request
      application EXHI.  Note that you must be logged on at the same system
      as your  printer.   If your  user-id record  is locked to  Exhibit or
      specifies a forced  command (e.g.,  $PRT),  then you  must complete a
+                                                           ____
      global logon in NETSOL (see previous section).
0     Exhibit was recently changed to permit $PRT  to be used from within a
      TSO session (including menu option 6  in ISPF).   Use command EXHIBIT
      or EXH without operands.  In this mode, your TSO logon information is
      used for authorization checking,  and a global logon is not required.
      Note that the TSO  session rates are very much higher  than those for
+     Note that the TSO  session rates are very much higher  than those for
      the VTAM Exhibit.
+     the VTAM Exhibit
0     Exhibit normally  loops displaying  a screen every  5 to  30 seconds.
      Before entering  input,  hit  PA2 to  stop looping.   If the  request
      produces a logon screen, follow normal procedures to connect.  If you
      are not  in the $PRT  command,  issue  $PRT (Exhibit will  supply the
      printer id from your user-id record).
0     The $PRT command may fail (unauthorized, invalid input, etc.); if you
      are certain  that you  are using it  correctly,  contact  support for
      assistance Ý(703) 931-9500x48 or -x50¨.
0     To exit from LOOP mode, use PA2.  To exit from $PRT,  use PF3 or type
      END in the command line.  Upon exit from $PRT,  type SIGNOFF to leave
      Exhibit.
0     $PRT permits three modes of input:
0        1.  You may place data into an  input field,  and hit the Enter
             key.    Input   into  the  "Command"   field  may   not  be
             acknowledged (e.g., END).
0        2.  You may place  the cursor into an option field  and use the
             "Cursor Select"  key   (or  a  light-pen)   to   create  an
             attention.  These fields are setup and control options, and
             the  queue  display  lines.   If a  field  begins  with  an
             ampersand, you may also enter data into input fields before
             generating  the  attention  (if   the  ampersand  is  used,
             modified  data are  saved).   Detectable  fields are  those
-                                     -24-
1                              PID Tele-Processing Services
           Synchronous Communication                         Multi-dropped lines
-                 locked  fields  that you  may  space  to using  the  cursor
                  field-skip (tab) keys.  $PRT was recently modified to honor
                  an  Enter-key  only  in  most  fields  as  a  cursor-select
                  function.
0             3.  You may modify  input fields,  and then use  a function key
                  (shown in angle-brackets,  e.g.,   <PF2> represents Program
                  Function key 2.
0          Normal operation of the printer consists of these steps:
0             1.  If the  printer is idle  (or preferably drained),   set the
                  printer work  selection criteria  to match  the jobs  to be
                  printed.    This  may  be  done  by  manually  placing  the
                  appropriate information into the work  select lines,  or by
                  selecting  on a  displayed  queue  of waiting  jobs.    The
+                                                                         The
                  current version of JES2 requires  the printer to be drained
+                 current version of JES2 requires  the printer to be drained
                  before  it will  let  you  change major  selection  options
+                 before  it will  let  you  change major  selection  options
                  (e.g., forms, classes...).
0                 When  work  selection  is  by   queue  (cursor  is  in  the
                  FORM/FCB/UCS/CLASS portion of the  jobqueue line)  only the
                  queue  characteristics are  changed  when  an attention  is
                  generated (Light-pen/Cursor-select or Enter key).  When the
                  cursor points at a job number or job name,  then the record
                  limits are also changed to allow  that job to print,  and a
                  job in HOLD mode is released.  Note that any other job with
                  the same  characteristics having  a line  count within  the
                  limits will also become elegible for printing.   To set the
                  printer for a  single job,  position the cursor  to the job
                  name or number, and press PF1; this action sets the low and
                  high limit to the job's count (if another job has the exact
                  limit, it may also print).
0             2.  After  work selection,   start the  printer  (using PF2  or
                  selecting  on  the  Start  field).  In  the  case  of  line
                  problems,  modem problems,  or  other hangups,  the printer
                  will  not start.   In this  case,   contact operations  for
                  assistance at  (703) 931-9500x43;  they  will need  to know
                  your printer id (top line of  display)  and the VTAM device
                  name.
0                 If no  problems occur,  the  printer should start  to print
                  within one minute.
0             3.  When a job  is selected,  the system may pause  to wait for
                  forms to be changed in the printer;  if so, the top line in
                  the  display will  read "AWAITING  START/SETUP"  - you  may
                  start  again,   or  change the  setup  for  alternate  work
                  selection.   If a  job was submitted with  incorrect FCB or
                  UCS  information,  this  message may  appear,   but is  not
                  amenable  to  correction  from the  remote  -  the  central
                  operator must intervene.
-                                          -25-
1                         PID Tele-Processing Services
      Synchronous Communication                         Multi-dropped lines
-        4.  Other command functions are as  documented for JES2 remotes
             in the User Guide.  Your remote number and device name will
             appear in the $PRT title.
0     You may delete a  job from the system in its  entirety by placing the
      cursor at  the job  entry and  pressing PF13.    Note that  no option
      exists  in the  current  system to  delete  only  specific queues  or
      specific forms from a  job.   Note that a job active  on a device may
      continue printing until the buffers are emptied.
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                     -26-
1                              PID Tele-Processing Services
-
0                                       Appendix A
+                                       Appendix A
0                     TTY CHARACTER AND CONTROL CODES - ANSI SEQUENCE
+                     TTY CHARACTER AND CONTROL CODES - ANSI SEQUENCE
-
0             Device     Device          Function     Even     WYLBUR
               code      entry             or        parity    List &
                                         name       line code  TTYPE
0               00       CTRL-@          NULL          00        00
                01       CTRL-A          SOH           81        01
                02       CTRL-B          STX           41        02
                03       CTRL-C          ETX           C0        03
                04       CTRL-D          EOT           21        37
                05       CTRL-E          ENQ           A0        2D
                06       CTRL-F          ACK           60        2E
                07       CTRL-G          BELL          E1        2F
                08       CTRL-H          BSP           11        16
                09       CTRL-I          Tab           90        05
                0A       CTRL-J          LF            50        25
                0B       CTRL-K          VT            D1        0B
                0C       CTRL-L          FF            30        0C
                0D       CTRL-M          CR            B1        0D
                0E       CTRL-N          SO            71        0E
                0F       CTRL-O          SI            F0        0F
                10       CTRL-P          DLE           09        10
                11       CTRL-Q          DC1 (X-On)    88        11
                12       CTRL-R          DC2           48        12
                13       CTRL-S          DC3 (X-Off)   C9        13
                14       CTRL-T          DC4           28        3C or 14
                15       CTRL-U          NAK           A9        3D
                16       CTRL-V          SYN           69        32
                17       CTRL-W          ETB           E8        26
                18       CTRL-X          CAN           18        18
                19       CTRL-Y          EM            99        19
                1A       CTRL-Z          SUB           59        3F
                1B       CTRL-Ý (L Brkt) ESC           D8        27
                1C       CTRL-\  (Rev /) FS            39        1C
                1D       CTRL-¨ (R Brkt) GS            B8        1D
                1E       CTRL-¬  (Tilde) RS            78        1E
                1F       CTRL-DEL        US            F9        1F
                20       space           SP            05        40
                21       !               Excl. Pt.     84        5A
                22       "               Quote         44        7F
                23       #               Pound sign    C5        7B
                24       $               Dollar sign   24        5B
                25       %               Percent sign  A5        6C
                26       &               Ampersand     65        50
                27       '               Apostrophe    E4        7D
                28       (               L. Paren.     14        4D
                29       )               R. Paren.     95        5D
0                                          -27-
1                         PID Tele-Processing Services
      WYLBUR TTY Character and Control Codes                           ANSI
-          2A       *               Asterisk      55        5C
           2B       +               Plus          D4        4E
           2C       ,               Comma         35        6B
           2D       -               Minus         B4        60
           2E       .               Period        74        4B
           2F       /               Slash         F5        61
           30       0               Zero          0C        F0
           31       1               One           8D        F1
           32       2               Two           4D        F2
           33       3               Three         CC        F3
           34       4               Four          2D        F4
           35       5               Five          AC        F5
           36       6               Six           6C        F6
           37       7               Seven         ED        F7
           38       8               Eight         1D        F8
           39       9               Nine          9C        F9
           3A       :               Colon         5C        7A
           3B       ;               Semi-colon    DD        5E
           3C       <               Less than     3C        4C
           3D       =               Equal sign    BD        7E
           3E       >               Greater than  7D        6E
           3F       ?               Question mark FC        6F
           40       @               At sign       03        7C
           41       A               A             82        C1
           42       B               B             42        C2
           43       C               C             C3        C3
           44       D               D             22        C4
           45       E               E             A3        C5
           46       F               F             63        C6
           47       G               G             E2        C7
           48       H               H             12        C8
           49       I               I             93        C9
           4A       J               J             53        D1
           4B       K               K             D2        D2
           4C       L               L             33        D3
           4D       M               M             B2        D4
           4E       N               N             72        D5
           4F       O               O             F3        D6
           50       P               P             0A        D7
           51       Q               Q             8B        D8
           52       R               R             4B        D9
           53       S               S             CA        E2
           54       T               T             2B        E3
           55       U               U             AA        E4
           56       V               V             6A        E5
           57       W               W             EB        E6
           58       X               X             1B        E7
           59       Y               Y             9A        E8
           5A       Z               Z             5A        E9
           5B       Ý               L. Bracket    DB        AD
           5C       \               Rev. Slash    3A        E0  Not IBM
           5D       ¨               R. Bracket    BB        BD
           5E       ¢               Caret         7B        4A  Cent sign
           5F       _               Underline     FA        6D
0                                     -28-
1                              PID Tele-Processing Services
           WYLBUR TTY Character and Control Codes                           ANSI
-               60       `               Rev. Apostr.  06        79  Not IBM
                61       a               Lower case a  87        81
                62       b               Lower case b  47        82
                63       c               Lower case c  C6        83
                64       d               Lower case d  27        84
                65       e               Lower case e  A6        85
                66       f               Lower case f  66        86
                67       g               Lower case g  E7        87
                68       h               Lower case h  17        88
                69       i               Lower case i  96        89
                6A       j               Lower case j  56        91
                6B       k               Lower case k  D7        92
                6C       l               Lower case l  36        93
                6D       m               Lower case m  B7        94
                6E       n               Lower case n  77        95
                6F       o               Lower case o  F6        96
                70       p               Lower case p  0F        97
                71       q               Lower case q  8E        98
                72       r               Lower case r  4E        99
                73       s               Lower case s  CF        A2
                74       t               Lower case t  2E        A3
                75       u               Lower case u  AF        A4
                76       v               Lower case v  6F        A5
                77       w               Lower case w  EE        A6
                78       x               Lower case x  1E        A7
                79       y               Lower case y  9F        A8
                7A       z               Lower case z  5F        A9
                7B       »               L. Brace      DE        8B
                7C       |               Stroke        3F        4F
                7D       º               R. Brace      BE        9B
                7E       ¬               Tilde         7E        5F  Not sign
                7F       DEL             DEL (Pad)     FF        07
-
-
-
-
-
-
-
-                                          -29-
1                         PID Tele-Processing Services
-
0                                  Appendix B
+                                  Appendix B
0                TTY CHARACTER AND CONTROL CODES - IBM SEQUENCE
+                TTY CHARACTER AND CONTROL CODES - IBM SEQUENCE
-
0        Device     Device          Function     Even     WYLBUR
          code      entry             or        parity    List &
                                    name       line code  TTYPE
0          00       CTRL-@          NULL          00        00
           01       CTRL-A          SOH           81        01
           02       CTRL-B          STX           41        02
           03       CTRL-C          ETX           C0        03
           09       CTRL-I          Tab           90        05
           7F       DEL             DEL (Pad)     FF        07
           0B       CTRL-K          VT            D1        0B
           0C       CTRL-L          FF            30        0C
           0D       CTRL-M          CR            B1        0D
           0E       CTRL-N          SO            71        0E
           0F       CTRL-O          SI            F0        0F
           10       CTRL-P          DLE           09        10
           11       CTRL-Q          DC1 (X-On)    88        11
           12       CTRL-R          DC2           48        12
           13       CTRL-S          DC3 (X-Off)   C9        13
           14       CTRL-T          DC4           28        14 or 3C
           08       CTRL-H          BSP           11        16
           18       CTRL-X          CAN           18        18
           19       CTRL-Y          EM            99        19
           1C       CTRL-\  (Rev /) FS            39        1C
           1D       CTRL-¨ (R Brkt) GS            B8        1D
           1E       CTRL-¬  (Tilde) RS            78        1E
           1F       CTRL-DEL        US            F9        1F
           0A       CTRL-J          LF            50        25
           17       CTRL-W          ETB           E8        26
           1B       CTRL-Ý (L Brkt) ESC           D8        27
           05       CTRL-E          ENQ           A0        2D
           06       CTRL-F          ACK           60        2E
           07       CTRL-G          BELL          E1        2F
           16       CTRL-V          SYN           69        32
           04       CTRL-D          EOT           21        37
           14       CTRL-T          DC4           28        3C or 14
           15       CTRL-U          NAK           A9        3D
           1A       CTRL-Z          SUB           59        3F
           20       space           SP            05        40
           5E       ¢               Caret         7B        4A  Cent sign
           2E       .               Period        74        4B
           3C       <               Less than     3C        4C
           28       (               L. Paren.     14        4D
           2B       +               Plus          D4        4E
           7C       |               Stroke        3F        4F
           26       &               Ampersand     65        50
0                                     -30-
1                              PID Tele-Processing Services
           WYLBUR TTY Character and Control Codes                            IBM
-               21       !               Excl. Pt.     84        5A
                24       $               Dollar sign   24        5B
                2A       *               Asterisk      55        5C
                29       )               R. Paren.     95        5D
                3B       ;               Semi-colon    DD        5E
                7E       ¬               Tilde         7E        5F  Not sign
                2D       -               Minus         B4        60
                2F       /               Slash         F5        61
                2C       ,               Comma         35        6B
                25       %               Percent sign  A5        6C
                5F       _               Underline     FA        6D
                3E       >               Greater than  7D        6E
                3F       ?               Question mark FC        6F
                60       `               Rev. Apostr.  06        79  Not IBM
                3A       :               Colon         5C        7A
                23       #               Pound sign    C5        7B
                40       @               At sign       03        7C
                27       '               Apostrophe    E4        7D
                3D       =               Equal sign    BD        7E
                22       "               Quote         44        7F
                61       a               Lower case a  87        81
                62       b               Lower case b  47        82
                63       c               Lower case c  C6        83
                64       d               Lower case d  27        84
                65       e               Lower case e  A6        85
                66       f               Lower case f  66        86
                67       g               Lower case g  E7        87
                68       h               Lower case h  17        88
                69       i               Lower case i  96        89
                7B       »               L. Brace      DE        8B
                6A       j               Lower case j  56        91
                6B       k               Lower case k  D7        92
                6C       l               Lower case l  36        93
                6D       m               Lower case m  B7        94
                6E       n               Lower case n  77        95
                6F       o               Lower case o  F6        96
                70       p               Lower case p  0F        97
                71       q               Lower case q  8E        98
                72       r               Lower case r  4E        99
                7D       º               R. Brace      BE        9B
                73       s               Lower case s  CF        A2
                74       t               Lower case t  2E        A3
                75       u               Lower case u  AF        A4
                76       v               Lower case v  6F        A5
                77       w               Lower case w  EE        A6
                78       x               Lower case x  1E        A7
                79       y               Lower case y  9F        A8
                7A       z               Lower case z  5F        A9
                5B       Ý               L. Bracket    DB        AD
                5D       ¨               R. Bracket    BB        BD
                41       A               A             82        C1
                42       B               B             42        C2
                43       C               C             C3        C3
                44       D               D             22        C4
0                                          -31-
1                         PID Tele-Processing Services
      WYLBUR TTY Character and Control Codes                            IBM
-          45       E               E             A3        C5
           46       F               F             63        C6
           47       G               G             E2        C7
           48       H               H             12        C8
           49       I               I             93        C9
           4A       J               J             53        D1
           4B       K               K             D2        D2
           4C       L               L             33        D3
           4D       M               M             B2        D4
           4E       N               N             72        D5
           4F       O               O             F3        D6
           50       P               P             0A        D7
           51       Q               Q             8B        D8
           52       R               R             4B        D9
           5C       \               Rev. Slash    3A        E0  Not IBM
           53       S               S             CA        E2
           54       T               T             2B        E3
           55       U               U             AA        E4
           56       V               V             6A        E5
           57       W               W             EB        E6
           58       X               X             1B        E7
           59       Y               Y             9A        E8
           5A       Z               Z             5A        E9
           30       0               Zero          0C        F0
           31       1               One           8D        F1
           32       2               Two           4D        F2
           33       3               Three         CC        F3
           34       4               Four          2D        F4
           35       5               Five          AC        F5
           36       6               Six           6C        F6
           37       7               Seven         ED        F7
           38       8               Eight         1D        F8
           39       9               Nine          9C        F9
-
-
-
-
-
-
-
0                                     -32-
1                              PID Tele-Processing Services
-
0                                       Appendix C
+                                       Appendix C
0                                  TTY CONTROL SEQUENCES
+                                  TTY CONTROL SEQUENCES
-
0          This appendix  lists the  control codes used  by WYLBUR  for specific
           TTY-compatible terminal types.
0          The  tab sequences  precede  and follow  a  terminal specific  column
           specification.   For terminals with tab option one,  the physical tab
           position is  converted to  a single  character (tab  column plus  31,
           converted to hex, is the device code - see preceding appendix for the
           corresponding character and  WYLBUR value).   For terminals  with tab
           option 2,  the tab column is  converted to printable numerics (device
           code, or EBCDIC on WYLBUR). WYLBUR removes leading zeroes.  Terminals
           with tab option 3 are similar to those with option 2, but require the
           tab  position relative  to column  0 (i.e.,   1 is  added before  the
           conversion to printable form).
-           Perkin-Elmer 1100 (FOX).  WYLBUR terminal number 1
+           Perkin-Elmer 1100 (FOX).  WYLBUR terminal number 1
0           Tab option 1 (single character)
                                Clear Tabs: 27D20727D10707
                              Clear Device: 27D20727D10707
                              Clear Screen: 27C80727D10707
                        First Tab Sequence: 27E8
                       Second Tab Sequence: 0727F107
-           DECWRITER.  WYLBUR terminal number 2
+           DECWRITER.  WYLBUR terminal number 2
0           Tab option 2 (Decimal Tabs)
                                Clear Tabs: 27F207
                        First Tab Sequence: 27AD
                       Second Tab Sequence: A407
-           DATAMEDIA Color-Scan 10-60. WYLBUR terminal number 3
+           DATAMEDIA Color-Scan 10-60. WYLBUR terminal number 3
0           Tab option 2 (Decimal Tabs)
                                Clear Tabs: 27ADF2D10727ADF3870727ADC80707
                              Clear Device: 27ADF2D10727ADF3870727ADC80707
                              Clear Screen: 27ADF1D10727ADC8
                     Normal Text Rendition: 27ADF2F05EF1F394
                   Error Message Rendition: 27ADF2F05EF1F294
                   Non-Display Input Field: 27ADF2F05EF1F094
                 Warning Message Rendition: 27ADF2F05EF1F594
                           Narrow Width=80: 27AD6FF39307
                            Wide Width=132: 27AD6FF38807
                        First Tab Sequence: 27ADF15E
0                                          -33-
1                         PID Tele-Processing Services
      WYLBUR TTY Character and Control Codes
-                 Second Tab Sequence: C8070727C8
-      (Hazeltine) ESPRIT-III Color. WYLBUR terminal number 4
+      (Hazeltine) ESPRIT-III Color. WYLBUR terminal number 4
0      Tab option 1 (single byte); color attributes take a display position
                           Clear Tabs: 275C0727F307
                         Clear Device: 275C0727F307
                         Clear Screen: 275C07
                Normal Text Rendition: 27C7F0
              Error Message Rendition: 27C77A
              Non-Display Input Field: 27C7F8
            Warning Message Rendition: 27C7F2
                   First Tab Sequence: 277E40
                  Second Tab Sequence: 0727F107
         Auxiliary Port On/Device Off: 2779
        Reset Device On/Auxiliary Off: 2781
              Set Device+Auxiliary On: 277C
        Reset Device On/Auxiliary Off: 27C1
-      IMS ULTIMA2.  WYLBUR terminal number 5
+      IMS ULTIMA2.  WYLBUR terminal number 5
0      Tab option 1 (single byte); field attribute takes a display position
                           Clear Tabs: 275C0727F30707
                         Clear Device: 275C0727F30707
                         Clear Screen: 275C0707
                Normal Text Rendition: 27C7F0
              Error Message Rendition: 27C7F4
              Non-Display Input Field: 27C7F1
            Warning Message Rendition: 27C7F8
                   First Tab Sequence: 277E40
                  Second Tab Sequence: 0727F107
         Auxiliary Port On/Device Off: 2779
        Reset Device On/Auxiliary Off: 2781
              Set Device+Auxiliary On: 277C
        Reset Device On/Auxiliary Off: 27C1
-      IBM P/C (with PID/ESP provided software).  WYLBUR terminal no. 6
+      IBM P/C (with PID/ESP provided software).  WYLBUR terminal no. 6
0      Final options not yet settled on. Currently:
0      Tab option 2 (Decimal Tabs)
                           Clear Tabs:27ADF2D127ADF387
                         Clear Device:27ADF2D127ADF387
                         Clear Screen:27ADF2D1
                Normal Text Rendition:27ADF094
              Error Message Rendition:27ADF794
              Non-Display Input Field:27ADF894
            Warning Message Rendition:27ADF494
                   First Tab Sequence:27ADF15E
                  Second Tab Sequence:C827C8
         Auxiliary Port On/Device Off:27ADF489
0                                     -34-
1                              PID Tele-Processing Services
           WYLBUR TTY Character and Control Codes
-            Reset Device On/Auxiliary Off:27ADF589
                   Set Device+Auxiliary On:27AD6FF489
             Reset Device On/Auxiliary Off:27AD6FF589
-           TEKTRONIX 4105.  WYLBUR terminal number 7
+           TEKTRONIX 4105.  WYLBUR terminal number 7
0           Tab option 2 (Decimal tabs)
                                Clear Tabs: 27ADF2D127ADF28727AD6FF693
                              Clear Device: 276C5AF12783276C5AF1
                              Clear Screen: 276C5AF127ADF2D127AD6FF693
                  Plot command BREAK Reset: 3127D3E5276C5AF1
                     Normal Text Rendition: 27ADF3F25EF4F094
                   Error Message Rendition: 27ADF3F15EF4F094
                   Non-Display Input Field: 27ADF3F05EF4F094
                 Warning Message Rendition: 27ADF3F35EF4F094
                           Narrow Width=80: 27AD6FF39307
                            Wide Width=132: 27AD6FF38807
                        First Tab Sequence: 27ADF15E
                       Second Tab Sequence: 8627C8
-           Hewlett-Packard 2621.  WYLBUR terminal number 8
+           Hewlett-Packard 2621.  WYLBUR terminal number 8
0           Tab option 3 (Decimal tabs, offset by one)
                                Clear Tabs: 27C827D127F3
                              Clear Device: 27C827D127F3
                              Clear Screen: 27C827D1
                  Plot command BREAK Reset: 274BD2274BE9
                        First Tab Sequence: 275081F1A8
                       Second Tab Sequence: C327F107
              Auxiliary Port On/Device Off: 274BE8
             Reset Device On/Auxiliary Off: 274BE9
-           WYSE-50 and Datalink 125 (in WYSE mode).  WYLBUR terminal no. 9
+           WYSE-50 and Datalink 125 (in WYSE mode).  WYLBUR terminal no. 9
0           Tab  option  2 (Decimal  Tabs);   field  attribute takes  a  display
           position
                                Clear Tabs: 275C0727F00707
                              Clear Device: 275C0727F00707
                              Clear Screen: 275C0707
                     Normal Text Rendition: 27C7F0
                   Error Message Rendition: 27C7F4
                   Non-Display Input Field: 27C7F1
                 Warning Message Rendition: 27C7F8
                           Narrow Width=80: 27797A0707070707
                            Wide Width=132: 27795E0707070707
                        First Tab Sequence: 2781F1D9
                       Second Tab Sequence: C327F107
              Auxiliary Port On/Device Off: 18
             Reset Device On/Auxiliary Off: 14
                   Set Device+Auxiliary On: 12
             Reset Device On/Auxiliary Off: 14
0                                          -35-
1                         PID Tele-Processing Services
+                         PID Tele-Processing Services
      WYLBUR TTY Character and Control Codes
+     WYLBUR TTY Character and Control Codes

+
0      IBM 3101.  WYLBUR terminal number 10
+      IBM 3101.  WYLBUR terminal number 10
0      Tab option 1 (single byte); block mode not supported.
                           Clear Tabs: 27C80727D307
                         Clear Device: 27C80727D307
                         Clear Screen: 27C80727D207
                   First Tab Sequence: 27E840
                  Second Tab Sequence: 0727F007
0      DEC VT-100 and WYSE-75.  WYLBUR terminal number 11
+      DEC VT-100 and WYSE-75.  WYLBUR terminal number 11
0      Tab option 2 (Decimal Tabs)
                           Clear Tabs:27ADC80727ADF2D10727ADF387
                         Clear Device:27ADC80727ADF2D10727ADF387
                         Clear Screen:27ADC80727ADF2D1
                Normal Text Rendition:27ADF094
              Error Message Rendition:27ADF194
              Non-Display Input Field:27ADF497
            Warning Message Rendition:27ADF294
                      Narrow Width=80:27AD6FF39307
                       Wide Width=132:27AD6FF38807
                   First Tab Sequence:27ADF15E
                  Second Tab Sequence:C827C8
         Auxiliary Port On/Device Off:27ADF589
        Reset Device On/Auxiliary Off:27ADF489
              Set Device+Auxiliary On:27AD6FF589
        Reset Device On/Auxiliary Off:27AD6FF489
-      WYSE-300 (and WYSE-100). WYLBUR terminal number 12
+      WYSE-300 (and WYSE-100). WYLBUR terminal number 12
0      Tab option 1 (single character); field attribute takes one position.
                           Clear Tabs:27F007274E0707
                         Clear Device:27F007274E0707
                         Clear Screen:274E0707
                Normal Text Rendition:27C7F0
              Error Message Rendition:27C7F4
              Non-Display Input Field:27C7F1
            Warning Message Rendition:27C797
                   First Tab Sequence:277E40
                  Second Tab Sequence:0727F107
         Auxiliary Port On/Device Off:12
        Reset Device On/Auxiliary Off:14
0      DEC VT-200 and WYSE-85.  WYLBUR terminal number 13
+      DEC VT-200 and WYSE-85.  WYLBUR terminal number 13
0      Tab option 2 (Decimal Tabs)
                           Clear Tabs:27ADC80727ADF2D10727ADF387
                         Clear Device:27ADC80727ADF2D10727ADF387
                         Clear Screen:27ADC80727ADF2D1
                Normal Text Rendition:27ADF094
              Error Message Rendition:27ADF05EF194
              Non-Display Input Field:27ADF294
            Warning Message Rendition:27ADF494
0                                     -36-
1                              PID Tele-Processing Services
           WYLBUR TTY Character and Control Codes
-                          Narrow Width=80:27AD6FF39307
                            Wide Width=132:27AD6FF38807
                        First Tab Sequence:27ADF15E
                       Second Tab Sequence:C827C8
              Auxiliary Port On/Device Off:27ADF589
             Reset Device On/Auxiliary Off:27ADF489
                   Set Device+Auxiliary On:27AD6FF589
             Reset Device On/Auxiliary Off:27AD6FF489
0           TeleVideo 920, 925, 950.  WYLBUR terminal number 14
+           TeleVideo 920, 925, 950.  WYLBUR terminal number 14
0           Tab option 1 (single byte); field attribute takes one position
                                Clear Tabs:275C070727F00707
                              Clear Device:275C070727F00707
                              Clear Screen:275C0707
                     Normal Text Rendition:27C7F0
                   Error Message Rendition:27C7F4
                   Non-Display Input Field:27C7F1
                 Warning Message Rendition:27C7F8
                        First Tab Sequence:277E40
                       Second Tab Sequence:0727F1
              Auxiliary Port On/Device Off:2779
             Reset Device On/Auxiliary Off:2781
                   Set Device+Auxiliary On:277C
             Reset Device On/Auxiliary Off:27C1
0           TeleVideo Personal Terminal.  WYLBUR terminal number 15
+           TeleVideo Personal Terminal.  WYLBUR terminal number 15
0           Tab option 1 (single byte)
                                Clear Tabs:275C0727F307
                              Clear Device:27A407275C0727F307
                              Clear Screen:275C0707
                     Normal Text Rendition:27C7F07C7C27C6
                   Error Message Rendition:27C7F17CC127C8
                   Non-Display Input Field:27C7F1C47C27C8
                 Warning Message Rendition:27C7F0C27C27C6
                        First Tab Sequence:277E40
                       Second Tab Sequence:27F1
              Auxiliary Port On/Device Off:2779
             Reset Device On/Auxiliary Off:2781
                   Set Device+Auxiliary On:277C
             Reset Device On/Auxiliary Off:27C1
-           WYSE-60 (in WYSE50+ mode).  WYLBUR terminal number 16
+           WYSE-60 (in WYSE50+ mode).  WYLBUR terminal number 16
0           Tab  option  2 (Decimal  Tabs);   field  attribute takes  a  display
           position
                                Clear Tabs: 275C0727F00707
                              Clear Device: 275C0727F00707
                              Clear Screen: 275C0707
                     Normal Text Rendition: 27C7F0
                   Error Message Rendition: 27C7F4
                   Non-Display Input Field: 27C7F1
0                                          -37-
1                         PID Tele-Processing Services
      WYLBUR TTY Character and Control Codes
-           Warning Message Rendition: 27C7F8
                      Narrow Width=80: 27797A0707070707
                       Wide Width=132: 27795E0707070707
                   First Tab Sequence: 2781F1D9
                  Second Tab Sequence: C327F107
         Auxiliary Port On/Device Off: 18
        Reset Device On/Auxiliary Off: 14
              Set Device+Auxiliary On: 12
        Reset Device On/Auxiliary Off: 14
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
0                                     -38-
1                              PID Tele-Processing Services
-
0                                       Appendix D
+                                       Appendix D
0                             BSC/SDLC LINE REGISTRATION FORM
+                             BSC/SDLC LINE REGISTRATION FORM
-
            Account # ________     Add/Change _    Effective date ___/___/___
0           Company name ____________________________________________________
0           Address      ____________________________________________________
0                        ____________________________________________________
0                        ____________________________________________________
0           Contact _____________________________________ Phone _____________
-          For direct-connect remotes only: Host Line # ____ Host A|B ____
0          Line speed (1200,2000,2400,4800,7200,9600,19200) ______
0          BSC mode: Transparency Y | N ___   SDLC mode:  Half | Full duplex
0                                             SDLC mode:  NRZ | NRZI
0          BSC mode: point-to-point (RJE) or multi-drop (327x) _____________
0          If 3270-type controllers will be used  on this line,  please complete
           the reverse side also.
-
-
-
-
-
-
-
-                                          -39-
1                         PID Tele-Processing Services
-
0                                  Appendix E
+                                  Appendix E
0                       3270 CONTROLLER REGISTRATION FORM
+                       3270 CONTROLLER REGISTRATION FORM
-
       Account # ________     Add/Change _    Effective date ___/___/___
0      Company name ____________________________________________________
0      Address      ____________________________________________________
0                   ____________________________________________________
0                   ____________________________________________________
0      Contact _____________________________________ Phone _____________
-     3270-type controllers:  Manufacturer _______________ Model ______
0     Control Unit address  _ _    SNA/SDLC network id  _ _ _  _ _ _ _ _
0     Number of CRTs __  Number of LUs __
0     Number of printers __  LU|position for each _____________________
0     VTAM Line id ________  PU ________  LU range ________/________
-
-
-
-
-
-
-
-
-                                     -40-
1                              PID Tele-Processing Services
-
0                                       Appendix F
+                                       Appendix F
0                             RJE TERMINAL REGISTRATION FORM
+                             RJE TERMINAL REGISTRATION FORM
-
            Account # ________     Add/Change _    Effective date ___/___/___
0           Company name ____________________________________________________
0           Address      ____________________________________________________
0                        ____________________________________________________
0                        ____________________________________________________
0           Contact _____________________________________ Phone _____________
0           For direct-connect remotes only: Comten Line # ____ Host A|B ____
            Line speed (1200,2000,2400,4800,7200,9600,19200) ______
0           BSC mode: Transparency Y | N ___   SDLC mode:  Half | Full duplex
0          Mnemonic remote name: _____________  SNA/SDLC id: _ _ _  _ _ _ _ _
0           Circle your terminal type, and all options with the same symbol:
0           -             IBM 2770
              +           IBM 2780, IBM 3740 and compatibles
                *         IBM 3780
                  :       IBM 2922
                  :       S360/20 model 2 (M20-2)
                  :       S360/20 model 4 (M20-4)
                  :       S360/20 model 5 (M20-5)
                  :       S360/20 model 6 (M20-6)
                  :       S360 model 30 and up
                  :       S370 model 145 and up
                  :       11/30
                  :       System/3
                    @     SNA (LUTYPE1) 3770, 3791, System/32
                    @     SNA (LUTYPE1) 3287 (local SNA, remote SDLC)
                    @     BSC (LUTYPE3) 3286, 3287 type printer (remote BSC)
                    @     lcl (LUTYPE0) 3286, 3287 type printer (local  SNA)
-           -         ABUFEX|NOABUFEX   2770 additional buffer-expansion
            -         BUFEX|NOBUFEX     2770 buffer-expansion feature
                    @ BUFSIZE=nnnn      Maximum RU size (256 to 520)
                    @ CMPCT|NOCMPCT     Printer compaction feature
            -   *     COMP|NOCOMP       2770, 3780 compression/expansion
                                        feature (mutually exclusive of TABS)
            - + * : @ CONDEST=nnn       Routing code for command responses
                  : @ CONSOLE|NOCON     Operator console function
0                                          -41-
1                         PID Tele-Processing Services
      RJE Terminal Registration                                 Rmt # _ _ _
-      - + * : @ DISCINTV=nnnn     Disconnect time in seconds; line is
                                   disconnected when no text is sent.
                                   Installation default of 600 for dial-
                                   up lines, 0 for direct lines, and 60
                                   for SNA printers (328x)
       - + *   @ FIXED|VARIABLE    Data record type
       - + * : @ LINE=___          For direct lines, same as remote #
               @ LUNAME=________   VTAM device name
         +       MRF|NOMRF         Multiple record feature
             :   MULTI|HARDWARE    Must be MULTI for multi-leaving
       - + * : @ NUMPR=1|__        Number of printers
       - + * : @ NUMPU=1|__        Number of punches (NUMPU+NUMPR<9)
       - + * : @ NUMRD=1|__        Number of readers
       - + * : @ PASSWORD ________  Required for dial-up remotes
       - + * : @ ROUTCDE=___       Input and output routing code
                                   defaulted to remote number
               @ SETUPHDR|SETUPMSG  Use HDR for smart remote (handles
                                   setup and multiple copies)
       - + * : @ SETUPINF|SETUPACT  SETUPACT required by PID
       - + *     TABS|NOTABS       Horizontal format control (mutually
                                   exclusive of COMP option)
       - + * :   TRANS|NOTRANS     Text-transparency feature
       - + *     UNBLOCKED|BLOCKED  Record format (from reader)
       - + *     WAITIME=0|__      Delay for reading input after an
                                   input or output data-stream finishes.
-      Reader # __ setup (please copy for additional readers)
0      CLASS=A|_     Default job class
       DRAIN|START   Reader status when JES2 begins processing
       HOLD|NOHOLD   After JCL conversion, jobs may be held.
       MSGCLASS=A|_  Default message class
       PRDEST=___    Default print destination; default is remote number
       PRIOINC=__    PID requires 0
       PRIOLIM=__    PID requires 6
       PRLCL|PRRMT   LCL if PRDEST is local, RMT otherwise
       PUDEST=___    Default punch destination; default is remote number
       PULCL|PURMT   LCL if PUDEST is local, RMT otherwise
-      Punch # __ setup (please copy for additional punches).  Note that
       this definition may be used for devices (e.g., DATA-100) with
       tape drives. Punched output can be routed to tape without
       the carriage controls normally written for printer files.
0      AUTO|OPERATOR  Default is recommended for manual output control
                     AUTO can result in terminal hangs unless a console
                     is available.
       CCTL|NOCCTL   SNA operand; NOCCTL used with SELECT=BASICn or when
                     output device cannot handle carriage controls
       CHAINSIZ=1|___  SNA only; number of pages (channel 1 skips) in
                     a transmission chain. 0 suppresses breaks.
       CLASS=________  Up to eight output classes; at PID, use B.
0                                     -42-
1                              PID Tele-Processing Services
           RJE Terminal Registration                                 Rmt # _ _ _
-           CMPCT|NOCMPCT  SNA compaction capability
            COMP|NOCOMP    SNA compression/expansion feature
            COMPACT=0|__  SNA compaction table number; requires CMPCT option
            DRAIN|START   Manual or automatic start-up
            FORMS=STD|____  Name of forms loaded initially
            LRECL=80|___  Punch width; <256
            NOSEP|SEP     Job separator option
            NOSUSPND|SUSPND  Specify SUSPND for 27xx/37xx terminals with the
                          punch-interrupt feature. Invalid for SNA and CPUs
            ROUTCDE=___   Output routing; default is remote number
            SELECT=PUNCHn|EXCHn|BASICn  SNA routing selection for device
                          subaddress 'n'; PUNCH, EXCHange diskette, or
                          BASIC exchange diskette. BASIC requires NOCCTL and
                          LRECL<129
-
-
-
-
-
-
-
-
-
-
-
-
-
-                                          -43-
1                         PID Tele-Processing Services
      RJE Terminal Registration                                 Rmt # _ _ _
-      Printer # __ setup (please copy for additional printers)
0      AUTO|OPERATOR  Default is recommended for manual output control
                     AUTO can result in terminal hangs unless a console
                     is available.
0      CCTL|NOCCTL   SNA operand; NOCCTL used with SELECT=BASICn or when
                     output device cannot handle carriage controls
0      CHAINSIZ=1|___  SNA only; number of pages (channel 1 skips) in
                     a transmission chain. 0 suppresses breaks.
0      CLASS=________  Up to eight output classes; at PID, use A for
                     standard forms, C for user forms, P for TSO output.
0      CMPCT|NOCMPCT  SNA compaction capability
0      COMP|NOCOMP    SNA compression/expansion feature
0      COMPACT=0|__  SNA compaction table number; requires CMPCT option
0      DRAIN|START   Manual or automatic start-up
0      FCB=6LPI|____ Carriage control tape or forms buffer image name
                     6LPI is used for 66 lines per page, standard forms.
0      FCBLOAD|NOFCBLOD  Use with S/360 and S/370 having a 3203 or 3211
                     printer, and text-transparency, and for SNA remotes
                     (limited to one stop per channel, 12 stops maximum)
                     The SETUPHDR option forces NOFCBLOD
0      FORMS=STD|____  Name of forms loaded initially
0      LIM=______ to ______ Print line limits (default is 0-*, *-no lim)
0      LRECL=___     SNA printer width (or use PRWIDTH); <256
0      NOSEP|SEP     Job separator option
0      NOSUSPND|SUSPND  Specify SUSPND for 27xx/37xx terminals with the
                     printer-interrupt feature. Invalid for SNA and CPUs
0      PRWIDTH=120|___  Print width
0      ROUTCDE=___   Output routing; default is remote number
0      SELECT=PRINTn|EXCHn|BASICn  SNA routing selection for device
                     subaddress 'n'; PRINTer, EXCHange diskette, or
                     BASIC exchange diskette. BASIC requires NOCCTL and
                     LRECL<129
0      UCS=P11|____  Print train and character translation. P11 is the
                     PID default upper case set; for lower case, use T11.
                     To bypass translation completely, use U11.
0                                     -44-
1                              PID Tele-Processing Services
-
0                                       Appendix G
+                                       Appendix G
0                           PROTOCOL CONVERTER KEY ASSIGNMENTS
+                           PROTOCOL CONVERTER KEY ASSIGNMENTS
-
           Ð××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                                   ¯             ¯             ¯
           | 3270                   |DEC          |IBM          |TeleVideo    |
           | Key/Function           |VT100+       |3101         |925, 950     |
           |××××××××××××××××××××××××|×××××××××××××|×××××××××××××|×××××××××××××|
+          ¿                        ×             ×             ×             ]
           | Converter Device Type  |32           |11           |24           |
           | (or repeat character)  |º            |)            |¨            |
           |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+          ¿                        ¿             ¿             ¿             ]
           | Program Function and Attention Keys                              |
           |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+          ¿                        ¯             ¯             ¯             ]
           | Enter                  |Return       |New Line     |Return       |
           | PA1                    |PF1          |Alt-A A      |Esc A        |
           |                        |Ctl-A A      |             |             |
           | PA2                    |PF2          |Alt-A B      |Esc B        |
           |                        |Ctl-A B      |             |             |
           | PA3                    |PF3          |Alt-A C      |Esc C        |
           |                        |Ctl-A C      |             |             |
           | PF1                    |Esc 1 Rtn    |PF1          |F1           |
           | PF2                    |Esc 2 Rtn    |PF2          |F2           |
           | PF3                    |Esc 3 Rtn    |PF3          |F3           |
           | PF4                    |Esc 4 Rtn    |PF4          |F4           |
           | PF5                    |Esc 5 Rtn    |PF5          |F5           |
           | PF6                    |Esc 6 Rtn    |PF6          |F6           |
           | PF7                    |Esc 7 Rtn    |PF7          |F7           |
           | PF8                    |Esc 8 Rtn    |PF8          |F8           |
           | PF9                    |Esc 9 Rtn    |Esc 9 NwLn   |F9           |
           | PF10                   |Esc 1 0 Rtn  |Esc 1 0 NwLn |F10          |
           | PF11                   |Esc 1 1 Rtn  |Esc 1 1 NwLn |F11          |
           | PF12                   |Esc 1 2 Rtn  |Esc 1 2 NwLn |Shift-F2     |
           | PF13                   |Esc 1 3 Rtn  |Esc 1 3 NwLn |Shift-F3     |
           | PF14                   |Esc 1 4 Rtn  |Esc 1 4 NwLn |Shift-F4     |
           | PF15                   |Esc 1 5 Rtn  |Esc 1 5 NwLn |Shift-F5     |
           | PF16                   |Esc 1 6 Rtn  |Esc 1 6 NwLn |Shift-F6     |
           | PF17                   |Esc 1 7 Rtn  |Esc 1 7 NwLn |Shift-F7     |
           | PF18                   |Esc 1 8 Rtn  |Esc 1 8 NwLn |Shift-F8     |
           | PF19                   |Esc 1 9 Rtn  |Esc 1 9 NwLn |Shift-F9     |
           | PF20                   |Esc 2 0 Rtn  |Esc 2 0 NwLn |Shift-F10    |
           | PF21                   |Esc 2 1 Rtn  |Esc 2 1 NwLn |Shift-F11    |
           | PF22                   |Esc 2 2 Rtn  |Esc 2 2 NwLn |Esc 2 2 Rtn  |
           | PF23                   |Esc 2 3 Rtn  |Esc 2 3 NwLn |Esc 2 3 Rtn  |
           | PF24                   |Esc 2 4 Rtn  |Esc 2 4 NwLn |Esc 2 4 Rtn  |
           | Test-Request           |Esc T        |Alt-A T      |Shift-F1     |
           | Clear                  |PF4          |Clear        |Clear Space  |
           |                        |Alt-A Z      |             |Esc Z        |
           ¿××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                                   ¿             ¿             ¿
                                                                        more ...
-
                                           -45-
1                         PID Tele-Processing Services
-
      Ð××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                              ¯             ¯             ¯
      | 3270                   |DEC          |IBM          |TeleVideo    |
      | Key/Function           |VT100+       |3101         |925, 950     |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¿             ¿             ¿             ]
      |Cursor Control Keys                                               |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¯             ¯             ¯             ]
      |   Left                 |Left Arrow   |Left Arrow   |Left Arrow   |
      |   Right                |Right Arrrow |Right Arrow  |Right Arrow  |
      |   Up                   |Up Arrow     |Up Arrow     |Up Arrow     |
      |   Down                 |Down Arrow   |Down Arrow   |Down Arrow   |
      |   New Line             |Ctl-W        |Alt-W        |Line Feed    |
      |   Tab right            |Tab          |Tab Right    |Tab          |
      |   Tab left             |Ctl-G        |Alt-G        |Back Tab     |
      |   Home                 |Esc H        |Home         |Home         |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¿             ¿             ¿             ]
      |Editing Keys                                                      |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¯             ¯             ¯             ]
      |   Erase input          |Ctl-B        |Erase input  |Pg Erase     |
      |   Erase EOF            |Ctl-C        |Erase EOF    |Ln Erase     |
      |   Insert               |Ctl-V        |Alt-V        |Char Ins     |
      |   Delete               |Delete       |DEL          |Char Del     |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¿             ¿             ¿             ]
      |Miscellaneous Functions                                           |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¯             ¯             ¯             ]
      | Reset                  |Ctl-R        |Cancel       |Ctl-R        |
      | Field Mark             |Ctl-F        |Alt-F        |Ctl-F        |
      | Dup                    |Ctl-D        |Alt-D        |Ctl-D        |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¿             ¿             ¿             ]
      |Protocol Converter Functions                                      |
      |××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××|
+     ¿                        ¯             ¯             ¯             ]
      | Refresh screen         |Ctl-Z        |Alt-Z        |Ctl-C        |
      | Display status line    |Ctl-E        |Alt-E        |Ctl-E        |
      | Remove status line     |Ctl-X        |Alt-X        |Ctl-X        |
      | Supervisor request     |             |             |             |
      |  (disconnects; returns |             |             |             |
      |  to initial menu)      |Ctl-Y        |Alt-Y        |Ctl-Y        |
      ¿××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                              ¿             ¿             ¿
0      A hyphen "-" indicates that both  keys must be depressed;  the first
       is used as a "shift" key.
0      Letters shown in upper case must by typed upper case;  e.g., the PA1
+                                  ____
       sequence for an emulated VT-100 is "Control-A A" - "Ctl-a a" or some
       variation will not work.
-      The WYSE-50, Datalink 125 and compatibles use the same keystrokes as
       the Televideo 925, but are also usable with device type 73.
-
-
0                                     -46-
1                              PID Tele-Processing Services
-
0                                       Appendix H
+                                       Appendix H
0                                    TELEPHONE NUMBERS
+                                    TELEPHONE NUMBERS
-
           Ð×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××¯
+                         ¯           ¯
           | 703-931-9500 | Voice     | P.I.D. switchboard; Mon-Fri 9 to 5     |
           |     ext. 43  | Voice     | Computer Operations; open except       |
           |              |           |   Sunday midnight-8 a.m.               |
           |              |           |   Monday midnight-8 a.m.               |
           |              |           |   Thursday 6 - 8 a.m.                  |
           |     ext. 48  | Voice     | Technical Support; open                |
           |              |           |   Weekdays 8 a.m. to 8 p.m.            |
           |     ext. 33  | Voice     | Production Control (front counter)     |
           |     ext. 50  | Voice     | Systems Support; Tue-Fri 6 to 2        |
           | 703-931-8130 | Fax       | Facsimile transmission                 |
           |××××××××××××××|×××××××××××|××××××××××××××××××××××××××××××××××××××××|
+          ¿              ×           ×                                        ]
           | 703-931-9108 | TTY   300 | Asynchronous services (line mode)      |
           |              | TTY  1200 | WYLBUR; through VTAM: KERMIT, TSO      |
           |              | TTY  2400 | X-On/X-Off recommended                 |
           |              |           |                                        |
           | 703-931-9105 | MNP  1200 | FastComm modems with MNP-4 and MNP-5   |
           |              | MNP  2400 | X-On/X-Off required for this rotary    |
           |              | TTY  2400 | asynchronous services: WYLBUR; through |
           |              | MNP  9600 | VTAM (NTO): KERMIT, TSO                |
           |××××××××××××××|×××××××××××|××××××××××××××××××××××××××××××××××××××××|
+          ¿              ×           ×                                        ]
           | 703-931-9497 | MNP  1200 | Protocol Conversion (TTY support for   |
           |              | MNP  2400 | full-screen mode) CICS, TSO, WYLBUR    |
           |              | MNP  9600 | FastComm modems with MNP-4 and MNP-5   |
           |××××××××××××××|×××××××××××|××××××××××××××××××××××××××××××××××××××××|
+          ¿              ×           ×                                        ]
           | 703-931-9788 | BSC2 4800 | JES2 Remote Job Entry                  |
           |××××××××××××××|×××××××××××|××××××××××××××××××××××××××××××××××××××××|
+          ¿              ×           ×                                        ]
           | 703-931-9789 | SDLC 4800 | VTAM: JES2 RJE, CICS, TSO, WYLBUR      |
           |              | SDLC 9600 | LU1 and LU2(3270 mode) support         |
           ¿×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××]
+                         ¿           ¿
-
-
-
-
-
-
                                           -47-
1                         PID Tele-Processing Services
-

-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
                                      -48-
1                              PID Tele-Processing Services
-
0                                    TABLE OF CONTENTS
-          INTRODUCTION  . . . . . . . . . . . . . . . . . . . . . . . . . .  ii
-          Section                                                          page
0          1.  ASYNCHRONOUS COMMUNICATION  . . . . . . . . . . . . . . . . . . 1
0                 Communications Parameters  . . . . . . . . . . . . . . . . . 1
                  Calling PID  . . . . . . . . . . . . . . . . . . . . . . . . 4
                  KERMIT File Transfer . . . . . . . . . . . . . . . . . . . . 8
                  ProComm Plus considerations  . . . . . . . . . . . . . . .  12
                  ProComm considerations . . . . . . . . . . . . . . . . . .  14
                  Protocol Conversion  . . . . . . . . . . . . . . . . . . .  16
0          2.  POINT-TO-POINT SYNCHRONOUS COMMUNICATIONS . . . . . . . . . .  18
0                 Dial-up SIGNON . . . . . . . . . . . . . . . . . . . . . .  20
0          3.  SYNCHRONOUS - 3270 MODE . . . . . . . . . . . . . . . . . . .  21
0                 Network Solicitor  . . . . . . . . . . . . . . . . . . . .  22
                  Remote printer control . . . . . . . . . . . . . . . . . .  24
-          Appendix                                                         page
0          A.  TTY CHARACTER AND CONTROL CODES - ANSI SEQUENCE . . . . . . .  27
0          B.  TTY CHARACTER AND CONTROL CODES - IBM SEQUENCE  . . . . . . .  30
0          C.  TTY CONTROL SEQUENCES . . . . . . . . . . . . . . . . . . . .  33
0          D.  BSC/SDLC LINE REGISTRATION FORM . . . . . . . . . . . . . . .  39
0          E.  3270 CONTROLLER REGISTRATION FORM . . . . . . . . . . . . . .  40
0          F.  RJE TERMINAL REGISTRATION FORM  . . . . . . . . . . . . . . .  41
0          G.  PROTOCOL CONVERTER KEY ASSIGNMENTS  . . . . . . . . . . . . .  45
0          H.  TELEPHONE NUMBERS . . . . . . . . . . . . . . . . . . . . . .  47
-
-
-
0                                          -iii-
