./ ADD NAME=ASMANY   8001-05204-10214-2322-00065-00063-00000-GERHARD
//ASMANY  PROC WORK=VIO,CC=0,PRG=ASMANYF,ASMREG=4096K,
//             LOAD=,DECK=NO,LIST=,TEST=NO,XREF=,LCT=60,
//             RENT=NO,TERM=,ESD=,
//             RLD=NO,SPRM=,REF=SHORT,ASMPRM=,
//             MAC='SYS1.MACLIB',
//             MAC1='SYS1.AMODGEN',
//             MAC2='SYS1.HASPSRC', JES2
//             MAC3='GERHARD.MVS.PVTMACS',
//             MAC4='GERHARD.MVS.ESPMAC',
//             MAC5='GERHARD.COLEMAC',
//             MAC6='SYS1.MACLIB',  'SYS1.ZMACLIB', S/390 OP CODES
//             MAC7='SYS1.MACLIB',
//             MAC8='GERHARD.MVS.ESPSRC',
//             MAC9='GERHARD.MVS.EXHSRC',
//             SRC='GERHARD.MVS.ESPSRC',
//             LIB='SYS1.ESPLIB',
//             LIB2='SYS1.EXHLIB'
//*
//*********************************************************************
//*            PRODUCTION COMPILE/LINK
//*
//*            TO SPECIFY ADDITIONAL OPTIONS, CODE ASMPRM=',OPT...'   *
//*            TO OBTAIN A LONG XREF LIST, SPECIFY REF=FULL           *
//*********************************************************************
//*
//*
//C       EXEC PGM=&PRG,TIME=120,REGION=&ASMREG,COND=(&CC,LT),
//             PARM=(&LOAD.OBJECT,&DECK.DECK,&LIST.LIST,&TEST.TEST,
//             '&XREF.XREF(&REF)','LINECOUNT(&LCT)',&RENT.RENT,
//             &ESD.ESD,&TERM.TERM,&RLD.RLD&ASMPRM,
// 'SYSPARM(&SPRM)')
//*
//STEPLIB  DD  DISP=SHR,DSN=SYS1.ESPLIB
//CONPRINT DD  SYSOUT=*
//ASMTERM  DD  SYSOUT=*
//ASMLIB   DD  DISP=SHR,DSN=&MAC,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=&MAC1
//         DD  DISP=SHR,DSN=&MAC2
//         DD  DISP=SHR,DSN=&MAC3
//         DD  DISP=SHR,DSN=&MAC4
//         DD  DISP=SHR,DSN=&MAC5
//         DD  DISP=SHR,DSN=&MAC6
//         DD  DISP=SHR,DSN=&MAC7
//         DD  DISP=SHR,DSN=&MAC8
//         DD  DISP=SHR,DSN=&MAC9
//         DD  DISP=SHR,DSN=&SRC
//ASMUT1   DD  DSN=&&SYSUT1,UNIT=(&WORK,SEP=SYSLIB),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMUT2   DD  DSN=&&SYSUT2,UNIT=(&WORK,SEP=(SYSUT1,SYSLIB)),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMUT3   DD  DSN=&&SYSUT3,UNIT=(&WORK,SEP=(SYSUT2,SYSUT1)),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMPRINT DD  DISP=OLD,DSN=GERHARD.MVS.ESPLIST  LISTING
//*SMPRINT DD  SYSOUT=*
//ASMPUNCH DD  SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)
//ASMGO    DD  DSN=&&OBJ,UNIT=(&WORK,SEP=(SYSUT3,SYSUT1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),
//             SPACE=(80,(2000,1000),,CONTIG),DISP=(MOD,PASS)
//ASMIN    DD  DISP=SHR,DSN=&SRC
//SYSIN    DD  DDNAME=INPUT
//*
//LNKLIB   DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=&LIB2
//LNKLMOD  DD  DISP=SHR,DSN=&LIB
//LNKPRINT DD  SYSOUT=*
./ ADD NAME=ASMTOZAP 0100-02251-02251-0937-00040-00040-00000-GERHARD
//ASMTOZAP PROC WORK=VIO,CC=0,SRC='GERHARD.ESPSRC',PRG=ASMANYH,
//             LOAD=,DECK=NO,LIST=,TEST=NO,XREF=,LCT=55,
//             RENT=NO,TERM=,PB=605,PS=10,ESD=,
//             RLD=NO,SPRM=,REF=SHORT,ASMPRM=,ASMREG=2048K,
//             TS='TERM=TS',
//             MAC1='SYS1.MACLIB',
//             MAC9='SYS1.MACLIB',
//             REL=S520,ZAPREG=256K
//*        CONVERT ASM LISTING TO ZAP DECK
//*
//ASM     EXEC PGM=&PRG,TIME=120,REGION=&ASMREG,COND=(&CC,LT),
//             PARM=(&LOAD.OBJECT,&DECK.DECK,&LIST.LIST,&TEST.TEST,
//             '&XREF.XREF(&REF)','LINECOUNT(&LCT)',&RENT.RENT,
//             &ESD.ESD,&TERM.TERM,&RLD.RLD&ASMPRM,
//             'SYSPARM(&SPRM)')
//*
//*
//CONPRINT DD  &TS.SYSOUT=*
//ASMTERM  DD  &TS.SYSOUT=*
//ASMLIB   DD  DISP=SHR,DSN=&MAC1
//       INCLUDE MEMBER=ZZASMLIB
//         DD  DISP=SHR,DSN=&MAC9
//ASMUT1   DD  UNIT=(&WORK,SEP=ASMLIB),SPACE=(1700,(2000,1000))
//ASMUT2   DD  UNIT=(&WORK,SEP=(ASMUT1,ASMLIB)),SPACE=(1700,(800,100))
//ASMUT3   DD  UNIT=(&WORK,SEP=(ASMUT2,ASMUT1,ASMLIB)),
//             SPACE=(1700,(800,100))
//ASMPRINT DD  DSN=&&LIST,DCB=(RECFM=FBM,LRECL=121,BLKSIZE=&PB),
//             SPACE=(CYL,(&PS,&PS),,CONTIG),UNIT=&WORK,DISP=(,PASS)
//ASMPUNCH DD  SYSOUT=Z,DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=3)
//ASMGO    DD  DSN=&&LOADSET,SPACE=(80,(400,400)),DISP=(MOD,PASS),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=3),
//             UNIT=(&WORK,SEP=(ASMUT3,ASMUT2,ASMUT1,ASMPRINT,ASMLIB))
//ASMIN    DD  DISP=SHR,DSN=&SRC
//*
//ATOZ    EXEC PGM=ASMTOZAP,
//             REGION=&ZAPREG,COND=(&CC,LT,ASM)
//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FBM,LRECL=121,BLKSIZE=605)
//ASMIN    DD  DISP=(OLD,DELETE),DSN=&&LIST
//SYSPUNCH DD  DISP=(,PASS),DSN=&&ZAP,UNIT=&WORK,SPACE=(TRK,(1,1))
//*
./ ADD NAME=ASMTRAUS 8000-06301-06301-1445-00113-00113-00000-GERHARD
//ASMTRAUS PROC GOTIME=20,SPRM=,AO='OBJECT,NODECK',RENT=NO,            *
//             AT='TERM,STMT',AD='NORLD,ESD',WORK=VIO,                 *
//             TRVOL=WORK01,           TRACE DATA SET VOLUME           *
//             MAC='SYS1.MACLIB',      USER PREFIX MACLIB              *
//             MAC9='SYS1.MACLIB',     USER POSTFIXED MACLIB           *
//             SRC='GERHARD.MVS.ESPSRC', COPY SOURCE                   *
//             LIB='SYS1.ESPLIB'  LKED INCLUDE LIBRARY
//*  ASMTRACE - TEMPORARY ASSEMBLY, TEST AND AUTHORIZED EXECUTION
//*
//* THIS PROCEDURE RUNS THE XF ASSEMBLER, LINK-EDITS THE
//* NEWLY ASSEMBLED PROGRAM AND RUNS THE PROGRAM AFTER
//* THE LINK-EDIT IS ACCOMPLISHED.
//*
//*********************************************************************
//**                                                                 **
//**  DELETE - SCRATCH THE OLD TRACE DATA SET                        **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//DELETE   EXEC PGM=DELETE0,PARM='GERHARD.ZZTRACE,&TRVOL'
//*      INCLUDE MEMBER=ZZSTEPLB
//SYSPRINT DD  SYSOUT=*
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  ASSEMBLE - REQUIRES C.SYSIN TO SPECIFY INPUT                   **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//C        EXEC PGM=IFOX00,REGION=2048K,
// PARM=(&AO,'LINECOUNT(60)',&AT,&AD,'XREF(SHORT)','SYSPARM(DEBUG)',
//             &RENT.RENT&SPRM)
//SYSLIB    DD DISP=SHR,DSN=&MAC,DCB=BLKSIZE=32720
//          DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.AMODGEN
//          DD DISP=SHR,DSN=SYS1.HASPSRC
//          DD DISP=SHR,DSN=GERHARD.MVS.PVTMACS
//          DD DISP=SHR,DSN=GERHARD.MVS.ESPMAC
//          DD DISP=SHR,DSN=GERHARD.COLEMAC
//          DD DISP=SHR,DSN=&MAC9
//          DD DISP=SHR,DSN=&SRC
//*     INCLUDE MEMBER=ZZASMLIB
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSADATA DD  DISP=(,PASS),DSN=&&DATA(GO),UNIT=SYSDA,
//             SPACE=(TRK,(15,15,1),RLSE)
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=&WORK,SPACE=(17000,(6000,1000)),
//             SEP=(SYSLIB)
//SYSUT2   DD   DSN=&&SYSUT2,UNIT=&WORK,SPACE=(17000,(3000,500)),
//             SEP=(SYSLIB,SYSUT1)
//SYSUT3   DD   DSN=&&SYSUT3,UNIT=&WORK,SPACE=(17000,(3000,500))
//SYSPUNCH DD  SYSOUT=B
//SYSGO    DD  DSN=&&OBJ,SPACE=(80,(2000,1000),,,ROUND),UNIT=&WORK,
//             DISP=(MOD,PASS),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  LINK EDIT                                                      **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//L        EXEC PGM=HEWL,PARM='MAP,LET,LIST,RENT',COND=(4,LT,C)
//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(1,1,11)),
//             DSN=&&GOSET(GO)
//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(1024,(120,120),,,ROUND),UNIT=&WORK,
//             DCB=BUFNO=1
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=SYS1.ESPLIB
//         DD  DISP=SHR,DSN=SYS1.EXHLIB
//*     INCLUDE MEMBER=ZZLNKLIB
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  EXECUTE AUTHORIZED - TRACES WHEN PGMTRACE MACRO USED           **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//G        EXEC PGM=LOADZAPA,COND=((4,LT,C),(0,LT,L)),
//             TIME=&GOTIME
//*TEPLIB  DD  DISP=(OLD,PASS),DSN=&&GOSET
//STEPLIB  DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=SYS1.ESPLIB
//         DD  DISP=SHR,DSN=SYS1.EXHLIB
//LOADLIB  DD  DISP=(OLD,PASS),DSN=&&GOSET
//         DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=SYS1.ESPLIB
//         DD  DISP=SHR,DSN=SYS1.EXHLIB
//DEBTRACE DD  SYSOUT=*
//SYSTRACE DD  DSN=GERHARD.ZZTRACE,DISP=(,CATLG,CATLG),
//             VOL=SER=&TRVOL,UNIT=SYSALLDA,
//             SPACE=(TRK,(100,100),RLSE,CONTIG)
//*YSTRADA DD  DISP=(OLD,DELETE),DSN=&&DATA
//*        DD  DISP=SHR,DSN=GERHARD.ESPADATA
//*        DD  DISP=SHR,DSN=GERHARD.EXHADATA
//SYSTROPT DD  DISP=SHR,DSN=GERHARD.ESPPARM(PGMTRACE)
//ZAPOUT   DD  SYSOUT=*
//ZAPIN    DD  DISP=SHR,DSN=GERHARD.ESPPARM(LOADZAPA)
//SYSDEBUG DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*********************************************************************
//**                                                                 **
//**  PRINT - PRINT THE TRACE DATA                                   **
//**                                                                 **
//*********************************************************************
//T      EXEC  PGM=WYLCOPY,COND=EVEN,PARM=NOCC
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=GERHARD.ZZTRACE
//SYSUT2   DD  SYSOUT=*
./ ADD NAME=ASMXTAUT 8001-09148-09233-2349-00157-00156-00000-GERHARD
//ASMXTAUT PROC WORK=SYSDA,CC=0,PRG=LOADZAPA,
//             UPDPRT='DUMMY,',              IEBUPDTE SOURCE LIST
//             LOAD=,DECK=NO,LIST=,TEST=,XREF=,LCT=60,
//             RENT=NO,TERM=,LOPT=',TEST,REUS',
//             ESD=,RLD=NO,REF=SHORT,SPRM=DEBUG,
//             ASM=X,ASMPRM=,ASMREG=4096K,TS='TERM=TS,',
//             SRC='GERHARD.MVS.ESPSRC',     INPUT SOURCE
//             MAC1='SYS1.MACLIB',
//             MAC9='GERHARD.MVS.ESPMAC',
//             OLIB='SYS1.ESPLIB',           LOAD LIB INPUT/OUTPUT
//             MOD='SYS1.ESPLIB',            LOAD LIB INPUT
//             DUMP='DUMMY,',                SYSTEM DUMP IF NULL
//             SYM='GERHARD.TEST.LOADLIB',   EXHB LIBRARY
//             TRVOL=WORK01            TRACE DATA SET VOLUME
//*
//*            ACCOUNT=Z904 ; ADDED BY GERHARD
//*            FOR ESP TESTING
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  UP     - TEMPORARY UPDATE OF MACROS AND SOURCE                 **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//U       EXEC PGM=IEBUPDTX,PARM='MOD,LISTALL,WYLBUR',REGION=1024K
//SYSPRINT DD  &UPDPRT.SYSOUT=*
//SYSUT1   DD  DSN=&SRC,DISP=SHR
//SYSUT2   DD  DSN=&&UPSET,DISP=(,PASS),UNIT=&WORK,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             SPACE=(CYL,(2,2,17),RLSE,CONTIG)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  DELETE - SCRATCH THE OLD TRACE DATA SET                        **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//DELETE   EXEC PGM=DELETE0,PARM='GERHARD.ZZTRACE,&TRVOL'
//*      INCLUDE MEMBER=ZZSTEPLB
//SYSPRINT DD  SYSOUT=*
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  ASM    - TEMPORARY ASSEMBLY OF ONE OR MORE EXHIBIT MODULES     **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//C       EXEC PGM=ASMANY&ASM,COND=(&CC,LT),TIME=120,REGION=&ASMREG,
//             PARM=(&LOAD.OBJ,&DECK.DECK,&LIST.LIST,&TEST.TEST,
//             '&XREF.XREF(&REF)','LINECOUNT(&LCT)',&RENT.RENT,
//             &TERM.TERM,&ESD.ESD,&TERM.STMT,
//             &RLD.RLD&ASMPRM,
// 'SYSPARM(&SPRM)')
//*
//*TEPLIB  DD  DISP=SHR,DSN=&MOD
//CONPRINT DD  &TS.SYSOUT=*
//ASMTERM  DD  &TS.SYSOUT=*
//ASMLIB   DD  DSN=*.U.SYSUT2,VOL=REF=*.U.SYSUT2,DISP=(OLD,PASS),
//             DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=&MAC1            MACLIB
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=GERHARD.MVS.PVTMACS
//         DD  DISP=SHR,DSN=GERHARD.MVS.ESPMAC
//         DD  DISP=SHR,DSN=GERHARD.COLEMAC
//         DD  DISP=SHR,DSN=GERHARD.MVS.EXHSRC
//         DD  DISP=SHR,DSN=GERHARD.MVS.ESPSRC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=&MAC9            SOMETHING ELSE ?
//         DD  DISP=SHR,DSN=&SRC       ORIGINL SOURCE
//ASMUT1   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMUT2   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMUT3   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMPRINT DD  SYSOUT=*,DCB=(RECFM=FBM,LRECL=121,BLKSIZE=0)
//ASMPUNCH DD  SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)
//ASMGO    DD  DSN=&&LOADSET,SPACE=(80,(4000,4000)),DISP=(MOD,PASS),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             UNIT=(&WORK,SEP=(ASMUT3,ASMUT2,ASMUT1,ASMPRINT,ASMLIB))
//ASMADATA DD  DISP=(NEW,PASS),DSN=&&DATA,UNIT=SYSDA,
//             SPACE=(CYL,(5,5,5),RLSE)
//ASMIN    DD  DSN=*.U.SYSUT2,VOL=REF=*.U.SYSUT2,DISP=(OLD,PASS)
//OLDLIB   DD  DISP=SHR,DSN=&SRC
//SYSIN    DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(ASMXTEST)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  LKED   - TEMPORARY LINK-EDIT                                   **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//L       EXEC PGM=IEWL,REGION=512K,COND=(&CC,LT),
//             PARM=(LET,LIST,MAP&LOPT)
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN,DCB=BLKSIZE=400
//SYSLMOD  DD  DSN=&&GOSET,UNIT=(&WORK,SEP=SYSLIN),DISP=(MOD,PASS),
//             SPACE=(CYL,(5,2,41),,CONTIG)
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=(&WORK,SEP=(SYSLMOD,SYSLIN)),
//             SPACE=(3072,(50,20))
//SYSLIB   DD  DSN=&MOD,DISP=SHR
//         DD  DSN=&OLIB,DISP=SHR
//         DD  DISP=SHR,DSN=SYS1.ESPLIB         (SUB----)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  GO     - LOAD TEMP MODULE AUTHORIZED FOR TESTING               **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//G       EXEC PGM=&PRG,REGION=8100K,COND=(&CC,LT),TIME=1
//LOADLIB  DD DSN=*.L.SYSLMOD,VOL=REF=*.L.SYSLMOD,DISP=(OLD,PASS)
//         DD  DISP=SHR,DSN=&SYM  (EXHB DEFINITIONS)
//         DD  DISP=SHR,DSN=&MOD
//         DD  DISP=SHR,DSN=&OLIB
//SYSPRUNT DD  SYSOUT=*
//DEBTRACE DD  SYSOUT=*
//SYSTRACE DD  DSN=GERHARD.ZZTRACE,DISP=(,CATLG,CATLG),
//             VOL=SER=&TRVOL,UNIT=SYSALLDA,
//             SPACE=(TRK,(100,100),RLSE,CONTIG)
//*YSTRADA DD  DISP=(OLD,DELETE),DSN=&&DATA
//*        DD  DISP=SHR,DSN=GERHARD.EXHADATA
//*        DD  DISP=SHR,DSN=GERHARD.ESPADATA
//SYSTROPT DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(PGMTRACE)
//ZAPOUT   DD  SYSOUT=*
//ZAPIN    DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(LOADZAPA)
//SYSDEBUG DD  SYSOUT=*
//SYSUDUMP DD  &DUMP.SYSOUT=*
//SYSUDOMP DD  DSN=&UDUMP,UNIT=SYSDA,DISP=(,PASS),
//             SPACE=(TRK,(100,100),RLSE)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  PRINT - PRINT THE TRACE DATA                                   **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//PTRACE EXEC  PGM=WYLCOPY,PARM=NOCC,COND=EVEN
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=GERHARD.ZZTRACE
//SYSUT2   DD  SYSOUT=*
//**                                                                 **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  REFORMAT SYSUDUMP FOR 80 BYTE SCREEN                           **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//       EXEC  PGM=IEFBR14  HALFDUMP,COND= ONLY
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//DUMPIN   DD  DISP=(OLD,DELETE),DSN=&UDUMP
//DUMPOUT  DD  SYSOUT=*
//**                                                                 **
//**     PEND
./ ADD NAME=ASMXTEST 8001-08079-09233-2348-00156-00155-00000-GERHARD
//ASMXTEST PROC WORK=SYSDA,CC=0,
//             UPDPRT='DUMMY,',              IEBUPDTE SOURCE LIST
//             LOAD=,DECK=NO,LIST=,TEST=,XREF=,LCT=60,
//             RENT=NO,TERM=,LOPT=',TEST,REUS',
//             ESD=,RLD=NO,REF=SHORT,SPRM=DEBUG,
//             ASM=X,ASMPRM=,ASMREG=4096K,TS='TERM=TS,',
//             SRC='GERHARD.MVS.ESPSRC',     INPUT SOURCE
//             MAC1='SYS1.MACLIB',
//             MAC9='GERHARD.MVS.ESPMAC',
//             OLIB='SYS1.ESPLIB',           LOAD LIB INPUT/OUTPUT
//             MOD='SYS1.ESPLIB',            LOAD LIB INPUT
//             PRG=TESTPGM, MEM=TESTPGM,  MEMNAME FOR EXEC / SYSADATA
//             DUMP='DUMMY,',                SYSTEM DUMP IF NULL
//             SYM='GERHARD.TEST.LOADLIB',   EXHB LIBRARY
//             TRVOL=WORK01            TRACE DATA SET VOLUME
//*
//*            ACCOUNT=Z904 ; ADDED BY GERHARD
//*            FOR ESP TESTING
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  UP     - TEMPORARY UPDATE OF MACROS AND SOURCE                 **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//U       EXEC PGM=IEBUPDTX,PARM='MOD,LISTALL,WYLBUR',REGION=1024K
//SYSPRINT DD  &UPDPRT.SYSOUT=*
//SYSUT1   DD  DSN=&SRC,DISP=SHR
//SYSUT2   DD  DSN=&&UPSET,DISP=(,PASS),UNIT=&WORK,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             SPACE=(CYL,(2,2,17),RLSE,CONTIG)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  DELETE - SCRATCH THE OLD TRACE DATA SET                        **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//DELETE   EXEC PGM=DELETE0,PARM='GERHARD.ZZTRACE,&TRVOL'
//*      INCLUDE MEMBER=ZZSTEPLB
//SYSPRINT DD  SYSOUT=*
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  ASM    - TEMPORARY ASSEMBLY OF ONE OR MORE EXHIBIT MODULES     **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//C       EXEC PGM=ASMANY&ASM,COND=(&CC,LT),TIME=120,REGION=&ASMREG,
//             PARM=(&LOAD.OBJ,&DECK.DECK,&LIST.LIST,&TEST.TEST,
//             '&XREF.XREF(&REF)','LINECOUNT(&LCT)',&RENT.RENT,
//             &TERM.TERM,&ESD.ESD,&TERM.STMT,
//             &RLD.RLD&ASMPRM,
// 'SYSPARM(&SPRM)')
//*
//*TEPLIB  DD  DISP=SHR,DSN=&MOD
//CONPRINT DD  &TS.SYSOUT=*
//ASMTERM  DD  &TS.SYSOUT=*
//ASMLIB   DD  DSN=*.U.SYSUT2,VOL=REF=*.U.SYSUT2,DISP=(OLD,PASS),
//             DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=&MAC1            MACLIB
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=GERHARD.MVS.PVTMACS
//         DD  DISP=SHR,DSN=GERHARD.MVS.ESPMAC
//         DD  DISP=SHR,DSN=GERHARD.COLEMAC
//         DD  DISP=SHR,DSN=GERHARD.MVS.EXHSRC
//         DD  DISP=SHR,DSN=GERHARD.MVS.ESPSRC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=&MAC9            SOMETHING ELSE ?
//         DD  DISP=SHR,DSN=&SRC       ORIGINL SOURCE
//ASMUT1   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMUT2   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMUT3   DD  UNIT=&WORK,SPACE=(1700,(16000,4000))
//ASMPRINT DD  SYSOUT=*,DCB=(RECFM=FBM,LRECL=121,BLKSIZE=0)
//ASMPUNCH DD  SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)
//ASMGO    DD  DSN=&&LOADSET,SPACE=(80,(4000,4000)),DISP=(MOD,PASS),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             UNIT=(&WORK,SEP=(ASMUT3,ASMUT2,ASMUT1,ASMPRINT,ASMLIB))
//ASMADATA DD  DISP=(NEW,PASS),DSN=&&DATA,UNIT=SYSDA,
//             SPACE=(CYL,(5,5,5),RLSE)
//ASMIN    DD  DSN=*.U.SYSUT2,VOL=REF=*.U.SYSUT2,DISP=(OLD,PASS)
//OLDLIB   DD  DISP=SHR,DSN=&SRC
//SYSIN    DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(ASMXTEST)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  LKED   - TEMPORARY LINK-EDIT                                   **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//L       EXEC PGM=IEWL,REGION=512K,COND=(&CC,LT),
//             PARM=(LET,LIST,MAP&LOPT)
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN,DCB=BLKSIZE=400
//SYSLMOD  DD  DSN=&&GOSET,UNIT=(&WORK,SEP=SYSLIN),DISP=(MOD,PASS),
//             SPACE=(CYL,(5,2,41),,CONTIG)
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=(&WORK,SEP=(SYSLMOD,SYSLIN)),
//             SPACE=(3072,(50,20))
//SYSLIB   DD  DSN=&MOD,DISP=SHR
//         DD  DSN=&OLIB,DISP=SHR
//         DD  DISP=SHR,DSN=SYS1.ESPLIB         (SUB----)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  GO     - TEST TEMPORARY EXHIBIT CODE                           **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//G       EXEC PGM=&PRG,REGION=4096K,COND=(&CC,LT),PARM=TEST,TIME=1
//STEPLIB  DD DSN=*.L.SYSLMOD,VOL=REF=*.L.SYSLMOD,DISP=(OLD,PASS)
//         DD  DISP=SHR,DSN=&SYM  (EXHB DEFINITIONS)
//         DD  DISP=SHR,DSN=&MOD
//         DD  DISP=SHR,DSN=&OLIB
//SYSPRINT DD  SYSOUT=*
//DEBTRACE DD  SYSOUT=*
//SYSTRACE DD  DSN=GERHARD.ZZTRACE,DISP=(,CATLG,CATLG),
//             VOL=SER=&TRVOL,UNIT=SYSALLDA,
//             SPACE=(TRK,(100,100),RLSE,CONTIG)
//*YSTRADA DD  DISP=(OLD,DELETE),DSN=&&DATA
//*        DD  DISP=SHR,DSN=GERHARD.EXHADATA
//*        DD  DISP=SHR,DSN=GERHARD.ESPADATA
//SYSTROPT DD  DISP=SHR,DSN=GERHARD.ESPPARM(PGMTRACE)
//SYSDEBUG DD  SYSOUT=*
//SYSUDUMP DD  &DUMP.SYSOUT=*
//SYSUDOMP DD  DSN=&UDUMP,UNIT=SYSDA,DISP=(,PASS),
//             SPACE=(TRK,(100,100),RLSE)
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  PRINT - PRINT THE TRACE DATA                                   **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//PTRACE EXEC  PGM=WYLCOPY,PARM=NOCC,COND=EVEN
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=GERHARD.ZZTRACE
//SYSUT2   DD  SYSOUT=*
//**                                                                 **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//**  REFORMAT SYSUDUMP FOR 80 BYTE SCREEN                           **
//**                                                                 **
//*********************************************************************
//**                                                                 **
//       EXEC  PGM=IEFBR14  HALFDUMP,COND= ONLY
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//DUMPIN   DD  DISP=(OLD,DELETE),DSN=&UDUMP
//DUMPOUT  DD  SYSOUT=*
//**                                                                 **
//**     PEND
./ ADD NAME=ASTANY   8002-05336-10027-1543-00065-00064-00000-GERHARD
//ASTANY  PROC WORK=VIO,CC=0,PRG=ASMANYT,ASMREG=8192K,
//             LOAD=,TEST=N,XREF=, LCT=60,
//             RENT=N,TERM=,ADATA=,
//             SPRM=,REF=S,ASMPRM=,
//             MAC='SYS1.MACLIB',
//             MAC1='SYS1.AMODGEN',
//             MAC2='SYS1.HASPSRC', JES2
//             MAC3='GERHARD.MVS.PVTMACS',
//             MAC4='GERHARD.MVS.ESPMAC',
//             MAC5='GERHARD.COLEMAC',
//             MAC6='SYS1.MACLIB',  'SYS1.ZMACLIB', S/390 OP CODES
//             MAC7='SYS1.MACLIB',
//             MAC8='GERHARD.MVS.ESPSRC',
//             MAC9='GERHARD.MVS.EXHSRC',
//             SRC='GERHARD.MVS.ESPSRC',
//             LIB='SYS1.ESPLIB',
//             LIB2='SYS1.EXHLIB'
//*
//*********************************************************************
//*            PRODUCTION COMPILE/LINK
//*
//*            TO SPECIFY ADDITIONAL OPTIONS, CODE ASMPRM=',OPT...'   *
//*            TO OBTAIN A LONG XREF LIST, SPECIFY REF=FULL           *
//*********************************************************************
//*
//*
//C       EXEC PGM=&PRG,TIME=120,REGION=&ASMREG,COND=(&CC,LT),
//             PARM=(&LOAD.O,&TEST.TE,&ADATA.AD,&TERM.T,'OP(370)',
//             &XREF.X&REF,'SZ(6M)', 'LC(&LCT)',
//             'FLAG(&RENT.RE)'&ASMPRM,
// 'SP(&SPRM)')
//*
//STEPLIB  DD  DISP=SHR,DSN=GERHARD.TACHLIB
//*
//CONPRINT DD  SYSOUT=*
//ASMTERM  DD  SYSOUT=*
//ASMLIB   DD  DISP=SHR,DSN=&MAC,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=&MAC1
//         DD  DISP=SHR,DSN=&MAC2
//         DD  DISP=SHR,DSN=&MAC3
//         DD  DISP=SHR,DSN=&MAC4
//         DD  DISP=SHR,DSN=&MAC5
//         DD  DISP=SHR,DSN=&MAC6
//         DD  DISP=SHR,DSN=&MAC7
//         DD  DISP=SHR,DSN=&MAC8
//         DD  DISP=SHR,DSN=&MAC9
//         DD  DISP=SHR,DSN=&SRC
//ASMUT1   DD  DSN=&&SYSUT1,UNIT=(&WORK,SEP=SYSLIB),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMUT2   DD  DSN=&&SYSUT2,UNIT=(&WORK,SEP=(SYSUT1,SYSLIB)),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMUT3   DD  DSN=&&SYSUT3,UNIT=(&WORK,SEP=(SYSUT2,SYSUT1)),
//             SPACE=(1700,(4000,1000),,CONTIG)
//ASMPRINT DD  SYSOUT=*
//ASMPUNCH DD  SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=400)
//ASMADATA DD  DISP=OLD,DSN=GERHARD.MVS.ESPADATA
//ASMGO    DD  DSN=&&OBJ,UNIT=(&WORK,SEP=(SYSUT3,SYSUT1)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),
//             SPACE=(80,(2000,1000),,CONTIG),DISP=(MOD,PASS)
//ASMIN    DD  DISP=SHR,DSN=&SRC
//SYSIN    DD  DDNAME=INPUT
//*
//LNKLIB   DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=&LIB2
//LNKLMOD  DD  DISP=SHR,DSN=&LIB
./ ADD NAME=BSPGMADD 8001-08230-08230-0205-00013-00021-00000-GERHARD
//BSPGMADD PROC
//*
//*   THIS PROGRAM ADDS THE SVC 120 INTERCEPT REQUIRED FOR PDPCLIB
//*   IN A HERCULES/380 MVS/380 SYSTEM
//*
//*   PARM=INSTALL (or UPDATE) to install intercept
//*   PARM=DELETE  (or REMOVE) to uninstall
//*   PARM=DISPLAY (or none)   show status
//*
//GMADD   EXEC PGM=BSPGMADD,REGION=512K,TIME=2
//*
//SYSUDUMP DD  SYSOUT=X
//*
./ ADD NAME=BSPSSADD 8000-05050-05050-2355-00021-00021-00000-GERHARD
//BSPSSADD PROC LIB='SYS1.PARMLIB',
//             MEM=IEFSSN##
//*
//*   THIS PROGRAM BUILDS AND OPTIONALLY STARTS PREVIOUSLY UNDEFINED
//*   SUBSYSTEMS. AN SSCT ENTRY IS BUILT FOR EACH UNIQUE NAME, AND
//*   A START COMMAND IS ISSUED WHEN START(YES) IS SPECIFIED
//*
//*   DEFINITIONS ARE READ FROM ALL MEMBERS NAMED IEFSSNxx, AND
//*   PROCESSED DEPENDING ON THE OPERATOR RESPONSE.
//*
//*   USE PARM=CHECK FOR TEXT VALIDATION
//*   USE PARM=NOREPLYU AND MEM=IEFSSN00 TO PREVENT PAUSING
//*
//SSADD   EXEC PGM=BSPSSADD,REGION=512K,TIME=2,PARM=UPDATE
//*
//PARMLIB  DD  DISP=SHR,DSN=&LIB.(&MEM)
//*
//*YSPRINT DD  SYSOUT=X      (DYNAMICALLY ALLOCATED)
//*
//*YSUDUMP DD  SYSOUT=X      (DYNAMICALLY ALLOCATED)
//*
./ ADD NAME=CANCEL   8000-05035-05035-1426-00006-00006-00000-GERHARD
//CANCEL  PROC CC=4
//*
//* THIS PROC WILL CANCEL SUBSEQUENT JOBS; ONE NAME PER SYSIN DATA CARD
//*
//CAN     EXEC PGM=JOBCANCL,COND=((&CC,GE),EVEN)
//SYSPRINT DD  SYSOUT=*
./ ADD NAME=COMMENT  8000-06328-06328-2358-00013-00013-00000-GERHARD
//COMMENT PROC LIST=
//        EXEC PGM=COMMENT
//SYSPRINT DD &LIST.SYSOUT=*
//*
//*      THIS PROGRAM WRITES MESSAGES TO THE OPERATOR
//*      MESSAGES ARE PLACED IN COLUMNS 2-72
//*      AN ASTERISK IN COLUMN 1 TERMINATES INPUT AND
//*      SOLICITS A RESPONSE FROM THE OPERATOR
//*
//*      USE EXEC COMMENT,LIST='DUMMY,' TO SUPPRESS LISTING IN JCL
//*
//*  SUPPLY INPUT VIA SYSIN  (DD * OR CARD FORMAT DSN)
//*
./ ADD NAME=COPYVOL  8000-05094-05094-1601-00061-00061-00000-GERHARD
//COPYVOL  PROC VIN='?IN?',VOUT='?OUT?',U=SYSALLDA
//*
//*      THIS PROGRAM COPIES 1 TO 8 DISK PACKS TO A NEWLY CREATED
//*      OUTPUT VOLUME - MUST BE RUN BY TECHNICAL OR SYSTEM STAFF.
//*
//*      VIN  - INPUT VOLUME SERIAL
//*      VOUT - OUTPUT VOLUME SERIAL
//*      U    - COMMON DEVICE TYPE
//*
//*      ADDITIONAL INPUT VOLUMES SPECIFIED VIA DISKIN2 TO DISKIN8
//*
//*      PARM OPTIONS :
//*
//*      ONE OF (COPY,COMP,CHGD,CONV) OR NONE
//*            COPY (OR NONE) - COPY ALL DATA
//*            COMP - USE IEBCOPY FOR ALL PARTITIONED DATASETS
//*            CHGD - USE IEBCOPY FOR ALTERED PARTITIONED DATASETS
//*            CONV - CONVERT ENTIRE INPUT FROM RAND TO OBS WYLBUR
//*      VTOC - USE INPUT VTOC EXTENTS ON OUTPUT PACK
//*      LIST (DEFAULT) - LIST 'NORMAL' MESSAGES
//*      TERS OR MSGS - LIST WARNING AND ERROR MESSAGES ONLY
//*      LOTS - LIST EXTRANEOUS MESSAGES (EXCLUDED DSNS)
//*      IPLT OR TRK0 - COPY IPL TRACK
//*      SWAP - EXCHANGE PACK LABELS AFTER COPY
//*      DUMP - PRODUCE DUMP ON MINOR ERRORS
//*      ASIS - TREAT ALL DATASETS AS UNMOVABLE
//*      SYSU - TREAT ALL SYS1. DATASETS AS UNMOVABLE
//*      SYSP - COPY SYS1. DATASETS PRIOR TO OTHERS
//*      KEEP - KEEP ALL EXTENTS; INHIBIT MERGE OF CONTIGUOUS EXTENTS
//*      RLSE OR TREL - RELEASE UNUSED TRACKS IN SEQUENTIAL DSNS
//*      >yyddd - COPY ONLY DATASETS CREATED OR USED ON OR AFTER yyddd
//*      <yyddd - COPY ONLY DATASETS USED PRIOR TO THE yyddd DATE
//*
//*      OPTIONAL SYSIN DATA (FREE FORMAT, COLUMNS 1-71)
//*      OPERANDS INPUTNAME/MASK  RENAME/MASK
//*
//*      * - COMMENTS CARD
//*      S OR I - INCLUDE DSN
//*      X OR E - EXCLUDE DSN
//*      R - RENAME DSN
//*      U - TREAT DSN AS UNMOVABLE
//*      K - KEEP DSN EXTENTS
//*      F - FREE UNUSED TRACKS IN SEQUENTIAL DSNS
//*      P - PRIORITY COPY OF DSN
//*      A - ACCESS DATE CHECK (WITH INCLUDE/EXCLUDE ONLY) (DEFAULT)
//*      B - BYPASS DATE CHECK (WITH INCLUDE/EXCLUDE ONLY)
//*
//*      N - NORMAL COPY; RESETS F, K AND P
//*      1-8 - ONE TO EIGHT DIGITS FOR PACKS 1-8; DEFAULTS TO ALL
//*
//COPYVOL  EXEC PGM=COPYVOL,REGION=1024K,TIME=60,
//             PARM='TRK0,FREE,CHGD'
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//COMPIN   DD  DUMMY
//COMPOUT  DD  DUMMY
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,10)
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,10)
//DISKOUT  DD  VOL=(PRIVATE,SER=&VOUT),UNIT=&U,DISP=OLD
//DISKIN1  DD  VOL=SER=&VIN,UNIT=&U,DISP=OLD
//*
./ ADD NAME=CRTNASTY 0100-03074-03074-1917-00016-00016-00000-GERHARD
//CRTNASTY  PROC MEMBER=CRTNASTY
//*
//IEFPROC EXEC PGM=CRTNASTY,REGION=4096K,TIME=14,PERFORM=7,
//             DYNAMNBR=2,DPRTY=(15,13)
//*
//IEFRDER  DD  DUMMY
//*
//*STEPLIB DD  DISP=SHR,DSN=&PDS,UNIT=3380,VOL=SER=PGM001
//*
//SYSPRINT DD  SYSOUT=C
//*
//SYSDEBUG DD  SYSOUT=C
//SYSABEND DD  SYSOUT=C
//*
//SYSIN    DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(&MEMBER)
//*
./ ADD NAME=DEL0     8000-06322-06322-0104-00007-00007-00000-GERHARD
//DEL0   PROC
//*    Delete data set or member specified in PARM field:
//*      PARM='dsn;dsn(mem);dsn,volser'
//*
//D      EXEC  PGM=DELETE0
//SYSPRINT DD  SYSOUT=Z
//*
./ ADD NAME=DISASM   8001-05211-05211-2150-00047-00044-00000-GERHARD
//DISASM  PROC LIB='GERHARD.TEST.LOADLIB'
//*
//*   SAMPLE PROCEDURE (EDIT & COPY TO SYS2.PROCLIB) FOR DISASSEMBLER
//*    ASSUMES PROGRAM WAS INSTALLED INTO YOUR TEST.LOADLIB (STEPLIB)
//*   PREFERRED LOCATION IS SYS2.LINKLIB (OBVIATES STEPLIB DD)
//*
//* >>> CONTROL CARD INPUT SUPPLIED VIA DISIN DD CARD <<<
//*
//*
//DISASM EXEC  PGM=DISASM01,REGION=1024K,TIME=1
//STEPLIB  DD  DISP=SHR,DSN=GERHARD.TEST.LOADLIB
//*
//*  ALL SYS--- DD CARDS FOLLOWING ARE FOR INTERNAL ASSEMBLER CALLS
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  DISP=(,PASS),DSN=&&ASPT,UNIT=SYSDA,
//             SPACE=(TRK,(100,100),RLSE),
//             DCB=(RECFM=FBM,LRECL=121,BLKSIZE=1331)
//SYSIN    DD  DISP=(,PASS),DSN=&&ASIN,UNIT=SYSDA,
//             SPACE=(TRK,(15,15),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=19040)
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=32720
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//         DD  DISP=SHR,DSN=GERHARD.MVS.ESPMAC
//         DD  DISP=SHR,DSN=GERHARD.MVS.PVTMACS
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSPUNCH DD  DUMMY
//SYSUDUMP DD  SYSOUT=*
//*  END ASSEMBLER CARDS
//*
//DISDEBUG DD  SYSOUT=*
//DISPRINT DD  SYSOUT=*,DCB=BLKSIZE=1331
//DISPUNCH DD  SYSOUT=*,DCB=BLKSIZE=3120
//DISMOD   DD  DISP=SHR,DSN=&LIB
//         DD  DISP=SHR,DSN=SYS1.LINKLIB
//         DD  DISP=SHR,DSN=SYS1.LPALIB
//         DD  DISP=SHR,DSN=SYS1.NUCLEUS
//         DD  DISP=SHR,DSN=SYS1.VTAMLIB
//         DD  DISP=SHR,DSN=SYS1.SVCLIB
//         DD  DISP=SHR,DSN=SYS2.LINKLIB
//         DD  DISP=SHR,DSN=SYS2.CMDLIB
//         DD  DISP=SHR,DSN=SYS2.VTAMLIB
//         DD  DISP=SHR,DSN=SYS1.ESPLIB
//         DD  DISP=SHR,DSN=SYS1.EXHLIB
//*
./ ADD NAME=DUMPPDS  8002-06338-06339-1700-00025-00022-00000-GERHARD
//DUMPPDS PROC F=999999,     FILE NUMBER
//             FT=SL,        FILE TYPE (SL, NL, AL, ...)
//             TDSN=,        TAPE DATA SET NAME
//             DDSN=,        DASD DATA SET (SOURCE PDS)
//             IX='GERHARD.MVS.',      HIGH LEVEL INPUT INDEX
//             TU='3400-6',  TAPE UNIT/TYPE
//             VS=           TAPE VOLUME SERIAL
//*
//*********************************************************************
//**                                                                 **
//**  COPY A PDS TO TAPE                                             **
//**                                                                 **
//*********************************************************************
//*
//COPY     EXEC PGM=IEBCOPY,REGION=4096K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&IX.&DDSN
//*
//SYSUT2   DD  DISP=(OLD,PASS),DSN=&TDSN,
//             VOL=SER=&VS,UNIT=&TU,LABEL=(&F,&FT)
//*
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,4,,CONTIG)
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,4,,CONTIG)
//*
./ ADD NAME=DUMPSEQ  8001-06338-06338-1459-00024-00022-00000-GERHARD
//DUMPSEQ PROC F=999999,     FILE NUMBER
//             FT=SL,        FILE TYPE (SL, NL, AL, ...)
//             TDSN=,        TAPE DATA SET NAME
//             DDSN=,        DASD DATA SET (SOURCE DS)
//             IX='GERHARD.MVS.',      HIGH LEVEL INPUT INDEX
//             TU='3400-6',  TAPE UNIT/TYPE
//             VS=           TAPE VOLUME SERIAL
//*
//*********************************************************************
//**                                                                 **
//**  COPY A SEQUENTIAL DATA SET TO TAPE                             **
//**                                                                 **
//*********************************************************************
//*
//GENER    EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IX.&DDSN
//*
//SYSUT2   DD  DISP=(OLD,PASS),DSN=&TDSN,
//             DCB=&IX.&DDSN,
//             VOL=SER=&VS,UNIT=&TU,LABEL=(&F,&FT)
//*
//SYSIN    DD  DUMMY
//*
./ ADD NAME=DYNAAPF  8000-06285-06285-0026-00015-00015-00000-GERHARD
//DYNAAPF PROC PDS='LOAD-LIB',   Load library PDS to be added to APF   *
//             VOL=          Volume if not same as Catalog entry
//*
//*  THIS PROGRAM ADDS A LOAD MODULE PDS TO THE AUTHORIZED PROGRAM
//*    FACILITY TABLE (MAX OF 255 NAMES).
//*
//IEFPROC EXEC PGM=DYNAAPF,REGION=512K,PERFORM=7,DPRTY=(15,13),        *
//             TIME=1439
//*
//*TEPLIB DD DISP=SHR,DSN=SYS1.ESPLIB
//*
//APFLIB  DD DISP=SHR,DSN=&PDS,UNIT=SYSALLDA,VOL=SER=&VOL
//*
//SYSABEND DD SYSOUT=A
//*
./ ADD NAME=DYNALPA  8000-06292-06292-1557-00016-00016-00000-GERHARD
//DYNALPA PROC LPA=00,                 PROGxx SUFFIX IN SYS1.PARMLIB
//             LIB1='SYS1.ESPLIB',     LOAD MODULE LIBRARY
//             LIB2='SYS1.EXHLIB'      LOAD MODULE LIBRARY
//*
//*      USE AT SYSTEM START TO ADD MODULES TO LPA
//*  (NOTE THAT IT IS CUMULATIVE; OLD MODULES NOT REMOVED)
//*
//DYNALPA EXEC  PGM=MODREP
//*TEPLIB  DD  DISP=SHR,DSN=SYS1.ESPLIB
//*
//MODREP   DD  DISP=SHR,DSN=&LIB1
//         DD  DISP=SHR,DSN=&LIB2
//*
//MODIN    DD  DISP=SHR,DSN=SYS1.PARMLIB(PROG&LPA)
//*
//SYSABEND  DD SYSOUT=C
./ ADD NAME=FIXPACK  8001-05089-05089-2333-00025-00025-00000-GERHARD
//FIXPACK PROC VS=VOLSER,DEV='SYSALLDA'
//*
//*            THIS IS A SYSTEMS PROCEDURE
//*            ACCOUNT=Z904
//*
//*  THIS PROCEDURE WILL ATTEMPT TO CLEAN UP SOME VTOC ERRORS WHICH
//*  RESULT FROM SYSTEM CRASHES DURING A VTOC UPDATE.  THE JOB WILL
//*  FAIL ON A JCL ERROR IF THE VOLUME IS TOO FRAGMENTED TO PERMIT
//*  CLEANUP.  THIS JOB SHOULD BE RUN WHEN NO OTHER JOBS WILL ACCESS
//*  THE SAME PACK. PLEASE CONSULT SYSTEMS IF THE PACK STILL IS BAD
//*  AFTER THIS RUN.
//*
//*
//ZAP     EXEC PGM=AMASPZAP
//STEPLIB  DD  DSN=SYS1.ESPLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  VOL=SER=&VS,UNIT=&DEV,DISP=OLD,DSN=FORMAT4.DSCB
//SYSIN    DD  DSN=GERHARD.MVS.ESPPARM(F4ZAPDOS),DISP=SHR
//*
//PAP     EXEC PGM=AMASPZAP,COND=(8,LT,ZAP)
//DD       DD  VOL=SER=&VS,UNIT=&DEV,DSN=&&DUMMY,SPACE=(6447,1)
//STEPLIB  DD  DSN=SYS1.ESPLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  VOL=SER=&VS,UNIT=&DEV,DISP=OLD,DSN=FORMAT4.DSCB
//SYSIN    DD  DSN=GERHARD.MVS.ESPPARM(F4ZAPOS),DISP=SHR
./ ADD NAME=HOB      8001-05034-05034-1525-00037-00037-00000-GERHARD
//HOB    PROC  PDS='GERHARD.MVS.ESPJOB',
//             NAME=HELP,    NAME OF JOB (GROUP) TO BE SUBMITTED
//             RESTART=,     START AT A SPECIFIC JOB
//             PICK=,        SUBMIT ONLY A SINGLE JOB IN A GROUP
//             DAY=,         OVERRIDE CURRENT DAY
//             TEST=IN,      CHECK JES2 INPUT QUEUES FOR DUPLICATES
//             SET=,         SET OPTIONAL PARAMETERS
//             LIST='DUMMY,',OC=C,  OUTPUT LIST/CLASS OPTIONS
//             U=,V=         PDS VOLSER/UNIT OVERRIDES
//*
//*      USE:  START HOB,NAME=MEMBER   TO SUBMIT CANNED JOB(S)
//*
//*      USE:  START HOB,NAME=MEMBER,PICK=JOBNAME   TO SUBMIT A
//*                          SINGLE JOB IN THE MEMBER
//*      USE:  START HOB,NAME=MEMBER,RESTART=JOBNAME   TO SUBMIT
//*                          THE SPECIFIED AND ALL FOLLOWING JOBS.
//*            USE DAY=YYDDD TO FORCE DATE SPECIFIC PROCESSING.
//*            USE TEST=NO TO BYPASS JOBQUEUE TESTS; TEST=ANY TO
//*              SUPPRESS SUBMISSION OF JOBS ALREADY ON 'ANY' QUEUE
//*              DEFAULT IS TEST=IN, SUPPRESSES FOR DUPE ON INPUT
//*    IF A START HOB DOES NOT READ ANYTHING, CHECK THE MEMBER FOR
//*      //*PICK AND //*SKIP CARDS - SOME JOBS WILL BE SUBMITTED
//*      ON SPECIFIC DAYS (WEEKS, ETC.) ONLY, AND WILL NOT WORK
//*      WHEN STARTED AT THE WRONG TIME.
//*
//IEFPROC EXEC PGM=HOB,PARM=('R=&RESTART,P=&PICK,D=&DAY,',
//             'T=&TEST\&SET')
//STEPLIB  DD  DISP=SHR,DSN=SYS1.ESPLIB
//SYSPRINT DD  &LIST.SYSOUT=&OC
//SYSUT1   DD  DDNAME=IEFRDER
//IEFRDER  DD  DISP=SHR,UNIT=&U,VOL=SER=&V,
//             DSN=&PDS.(&NAME)
//SYSUDUMP DD  SYSOUT=&OC
//SYSUT2   DD  SYSOUT=(A,INTRDR)   PRE-MVS: UNIT=INTRDR
//*
//*
//*
./ ADD NAME=ITERATE  8001-05198-05198-1402-00026-00021-00000-GERHARD
//ITERATE PROC SRC='GERHARD.MVS.EXHSRC',
//             JCL='GERHARD.MVS.CNTL(PATSYS)',
//             MEM='?WHAT?'
//*
//*   THIS PROGRAM EDITS AND SUBMITS A JOB STREAM
//*     JCL INPUT:  SYSIN OR JCL DD
//*     PDS INPUT:  SYSLIB (UNCONCATENATED PDS)
//*
//*   PARM OPTIONS: ASM      - RETAIN COLUMNS 72-80
//*                 JCL      - RETAIN COLUMNS 72-80; NEVER EXPAND
//*                            FIRST CARD, WITH LIST OPTION, MULTIPLY
//*                 LIST     - ITERATE MEMBER NAME IN PLACE
//*                            DEFAULT REPEATS ENTIRE JCL PER MEMBER
//*
//GENERATE EXEC PGM=ITERATE,REGION=4096K,TIME=5,PARM=JCL
//*
//SYSLIB   DD  DISP=SHR,DSN=&SRC.(&MEM)
//*
//SYSIN    DD  DISP=SHR,DSN=&JCL
//*
//SUMPRINT DD  SYSOUT=*
//*
//SYSPRINT DD  SYSOUT=*
//*
//SYSPUNCH DD  SYSOUT=(A,INTRDR)     JOB SUBMISSION
//*
./ ADD NAME=LABEL    0100-02251-02251-1037-00013-00013-00000-GERHARD
//LABEL    PROC T='560'
//*
//*        ACCOUNT=0904
//*
//LABEL    EXEC PGM=LABEL
//       INCLUDE MEMBER=ZZSTEPLB
//IEFRDER  DD  DUMMY
//TAPE     DD  VOL=SER=TAP999,DISP=(,KEEP),
//             UNIT=(&T,,DEFER),LABEL=(,BLP,EXPDT=98000)
//*
//*YSABEND DD  SYSOUT=A
//*
//*        PEND
./ ADD NAME=LOADPDS  0102-02236-02236-1202-00029-00010-00029-GERHARD
//LOADPDS PROC F=999999,     FILE NUMBER
//             FT=SL,        FILE TYPE (SL, NL, AL, ...)
//             TDSN=,        TAPE DATA SET NAME
//             VS=,          TAPE VOLUME SERIAL
//             DDSN=,        DASD DATA SET
//             PRI=15,       PRIMARY IN UNITS OF TYP
//             SEC=15,       SECONDARY IN UNITS OF TYP
//             MEM=81,       NUMBER OF DIRECTORY BLOCKS
//             TYP=TRK,      ALLOCATION TYPE (TRK, CYL, BLK)
//             DCB=0         NEW DCB PARAMETERS
//*
//*********************************************************************
//**                                                                 **
//**  LOAD A SEQUENTIAL DATA SET FROM TAPE                           **
//**                                                                 **
//*********************************************************************
//*
//COPY     EXEC PGM=IEBCOPY,REGION=4M
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,PASS),DSN=&TDSN,
//             VOL=SER=&VS,UNIT=3480,LABEL=(&F,&FT)
//*
//SYSUT2   DD  DISP=(,CATLG),DSN=&DDSN,
//             SPACE=(&TYP,(&PRI,&SEC,&MEM),RLSE),
//             DCB=(&DCB)
//*
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,4)
//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,4)
//*
./ ADD NAME=LOADSEQ  0103-02236-02236-1224-00027-00009-00027-GERHARD
//LOADSEQ PROC F=999999,     FILE NUMBER
//             FT=SL,        FILE TYPE (SL, NL, AL, ...)
//             TDSN=,        TAPE DATA SET NAME
//             VS=,          TAPE VOLUME SERIAL
//             DDSN=,        DASD DATA SET
//             PRI=15,       PRIMARY IN UNITS OF TYP
//             SEC=15,       SECONDARY IN UNITS OF TYP
//             TYP=TRK,      ALLOCATION TYPE (TRK, CYL, BLK)
//             DCB=0         NEW DCB PARAMETERS
//*
//*********************************************************************
//**                                                                 **
//**  LOAD A SEQUENTIAL DATA SET FROM TAPE                           **
//**                                                                 **
//*********************************************************************
//*
//GENER    EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,PASS),DSN=&TDSN,
//             VOL=SER=&VS,UNIT=3480,LABEL=(&F,&FT)
//*
//SYSUT2   DD  DISP=(,CATLG),DSN=&DDSN,
//             SPACE=(&TYP,(&PRI,&SEC),RLSE),
//             DCB=(&DCB)
//*
//SYSIN    DD  DUMMY
//*
./ ADD NAME=LOADUPDT 0102-02236-02236-1310-00027-00029-00005-GERHARD
//LOADUPDT PROC F=999999,     FILE NUMBER
//             FT=SL,        FILE TYPE (SL, NL, AL, ...)
//             TDSN=,        TAPE DATA SET NAME
//             VS=,          TAPE VOLUME SERIAL
//             DDSN=,        DASD DATA SET
//             PRI=15,       PRIMARY IN UNITS OF TYP
//             SEC=15,       SECONDARY IN UNITS OF TYP
//             MEM=81,       NUMBER OF DIRECTORY BLOCKS
//             TYP=TRK,      ALLOCATION TYPE (TRK, CYL, BLK)
//             DCB=0         NEW DCB PARAMETERS
//*
//*********************************************************************
//**                                                                 **
//**  LOAD A SEQUENTIAL DATA SET FROM TAPE TO A CARD PDS             **
//**                                                                 **
//*********************************************************************
//*
//UPDT     EXEC PGM=IEBUPDTX,REGION=4M,
//             PARM='NOCHAIN,NOLISTING,NOSSI'
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=(OLD,PASS),DSN=&TDSN,
//             VOL=SER=&VS,UNIT=3480,LABEL=(&F,&FT)
//*
//SYSUT2   DD  DISP=(,CATLG),DSN=&DDSN,
//             SPACE=(&TYP,(&PRI,&SEC,&MEM),RLSE),
//             DCB=(&DCB)
//*
./ ADD NAME=MODREP   8000-06284-06284-0212-00012-00012-00000-GERHARD
//MODREP  PROC PDS='SYS1.ESPLIB'
//*
//*      UTILITY TO LOAD MODULES INTO THE LINK PACK AREA FOR TESTING
//*      PRIOR TO MOVING TO SYS1.LPALIB
//*
//       EXEC  PGM=MODREP,REGION=256K,TIME=1439
//*
//MODREP   DD  DISP=SHR,DSN=&PDS
//*
//*
//*
//SYSABEND DD  SYSOUT=C
./ ADD NAME=NETINIT,SSI=00092266
//NETINIT  PROC CMD=A2
//*
//*      THIS PROGRAM STARTS THE VTAM DEPENDENT APPLICATIONS NAMED
//*      IN THE PARMLIB MEMBER IN APPROPRIATE SEQUENCE AFTER VTAM
//*      HAS BEEN INITIALIZED.
//*
//NETINIT  EXEC PGM=NETINIT,DPRTY=(15,13)
//*
//SYSIN    DD   DSN=SYS1.PARMLIB(NETCMD&CMD),DISP=SHR
//SYSOUT   DD   SYSOUT=Z
//COMTEN   DD   UNIT=522      UTILITY SUB-CHANNEL
//SYSUDUMP DD   SYSOUT=A
//*
./ ADD NAME=NETSOL70 0102-97289-08125-1732-00017-00016-00000-GERHARD
//NETSOL70 PROC NAME=NETSOL70,INIT=NETSINIT ,NETSOL=NETSOL
//*
//NETSOL EXEC PGM=&NAME,DPRTY=(15,14),PERFORM=8,REGION=8192K,TIME=1439
//STEPLIB  DD  DISP=SHR,DSN=SYS1.ESPLIB
//         DD  DISP=SHR,DSN=SYS1.VTAMLIB
//SYSIN    DD  DISP=SHR,DSN=GERHARD.MVS.ESPPARM(&INIT)
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSLA00) ITT-A       87137
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSLB00) ITT-B       87137
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSLC00) ITT-C       87137
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSLD00) ITT-D       87274
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSFRA)  FRA         87166
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSDIAL) NTO/COMMTEX 88182
//*        DD  DISP=SHR,DSN=GERHARD.ESPCTL(NETSLE00) AT&T-E      90115
//*
//SYSOUT   DD  SYSOUT=C
//SYSUDUMP DD  SYSOUT=C
//*NEWS     DD  DISP=SHR,DSN=SYS1.HASPMSG(CURRENT)
./ ADD NAME=OSMGCR   8001-05204-05204-0057-00008-00011-00000-GERHARD
//OSMGCR   PROC
//*
//*   ISSUE PARM AND/OR SYSIN AS OS COMMANDS
//*
//COMMAND EXEC PGM=OSMGCR
//*
//SYSPRINT DD  SYSOUT=*
//*
./ ADD NAME=PAUSE    0101-02235-06328-2359-00013-00013-00000-GERHARD
//PAUSE   PROC LIST=
//        EXEC PGM=PAUSE
//SYSPRINT DD &LIST.SYSOUT=*
//*
//*      THIS PROGRAM WRITES MESSAGES TO THE OPERATOR
//*      MESSAGES ARE PLACED IN COLUMNS 2-72
//*      AN ASTERISK IN COLUMN 1 TERMINATES INPUT AND
//*      SOLICITS A RESPONSE FROM THE OPERATOR
//*
//*      USE EXEC PAUSE,LIST='DUMMY,' TO SUPPRESS LISTING IN JCL
//*
//*  SUPPLY INPUT VIA SYSIN  (DD * OR CARD FORMAT DSN)
//*
./ ADD NAME=PDSSCAN,SSI=03882130
//PDSSCAN PROC PRINT=,PUNCH='DUMMY,',UPDTE='DUMMY,'
//PDSSCAN EXEC PGM=PDSSCAN,REGION=128K
//SUMPRINT DD  SYSOUT=*      SUMMARY/ERROR MESSAGES
//SYSPRINT DD  &PRINT.SYSOUT=*         LISTING
//SYSPUNCH DD  &PUNCH.SYSOUT=B         SEQUENTIAL PUNCH
//SYSUPDTE DD  &UPDTE.SYSOUT=B         IEBUPDTE SYSIN FORMAT
//*
//*   PDSSCAN SCANS THROUGH CARD AND WYLBUR FORMAT DISK DATASETS
//*            FOR CHARACTER STRINGS SPECIFIED VIA SYSIN. ON MATCH
//*            PRODUCES MEMBER NAME AND MATCHING CARD(S).
//*      INPUT: ONE OR MORE DD CARDS SPECIFYING A DISK DATASET
//*            DSORG=PS/PO/DA  RECFM=U (WYLBUR EDIT) OR F(B),80
//*            DDNAME IS OF THE FORM SYSUTXXX, WHERE XXX IS UNIQUE.
//*            A MEMBER NAME ON THE DD IS TREATED AS A MASK,
//*            FILLED WITH TRAILING BLANKS. A MINUS SIGN IS USED TO
//*            PERMIT ANY CHARACTER TO MATCH THE MASK POSITION, BUT
//*            IS INVALID IN THE FIRST CHARACTER POSITION.
//*            DD CARDS MAY SPECIFY DIFFERENT TYPES FOR THE SAME
//*            RUN, BUT MUST NOT BE CONCATENATED.
//*         DSNAMES ON THE DD CARD MAY ALSO SPECIFY MASK OPTIONS.
//*            A TRAILING VALUE OF DSN.ALL WILL TREAT THE LEADING
//*            TEXT AS A MASK FILLED WITH MINUS SIGNS.
//*            A VALUE OF PDS.ALL WILL RESTRICT THE DSCB SEARCH ON
//*            THE VOLUME TO PARTITIONED DATASETS.
//*            ANY MINUS SIGN IN THE NAME IS TREATED AS A MASK REQUEST.
//*            IF NEITHER PDS.ALL NOR DSN.ALL IS SPECIFIED, THE MASK
//*            WILL NOT BE FILLED WITH MINUS SIGNS, BUT BLANKS.
//*            FOR ANY MASKED DSN FORM, THE DSN SHOULD BE IN QUOTES,
//*            AND THE UNIT AND VOL=SER PARAMETERS ARE REQUIRED.
//*      SYSIN:  (OPTIONAL) CARDS SPECIFYING TEXT TO BE SEARCHED FOR.
//*        FORM IS 'STRING' (STARTCOL,ENDCOL)   OR
//*        "STRING" (STARTCOL)  OR X'HEXTTEXT' (COL...)
//*        EMBEDDED QUOTES/APOSTROPHES MUST BE DOUBLED IF THEY MATCH
//*        THE FRAMING CHARACTERS; SINGLE IF THE OPPOSITE FRAMING IS
//*        USED. E.G. :
//*          "DON'T"   OR 'DON''T'   BUT NOT 'DON'T'
//*            'ENDCOL' IS LAST COLUMN OF START CHARACTER.
//*      OUTPUT: AT LEAST ONE OF FOUR DD CARDS MUST BE SUPPLIED:
//*        SUMPRINT (OR SYSTERM)- VBA,133  INDEX AND ERROR MESSAGES
//*        SYSPRINT - VBA,133 LISTING WITH HEADINGS
//*        SYSPUNCH - FB,80   PUNCH DECK, NO SEPARATION BETWEEN MEMBERS
//*        SYSUPDTE - FB,80   IEBUPDTE INPUT FORMAT (WITH ./ CARDS)
//*      PARM OPTIONS:
//*        %   PRODUCE MICROFICHE EYEBALL HEADERS (12 LINE MEMBER NAME)
//*        &   INCLUDE ONLY MEMBERS WITH ' MACRO ' ON FIRST CARD
//*        ¬   EXCLUDE MEMBERS WITH ' MACRO ' ON FIRST CARD (COL 1-16)
//*        #   PLACE WYLBUR LINE NUMBERS IN COLUMNS 73-80
//*        INTEGER    -"-
//*        EDIT  PLACE WYLBUR LINE NUMBERS IN 73-80 IN EDIT FORMAT
//*        HWD OR HALFWORD - INPUT LINE NUMBERS IN RAND FORMAT
//*        OSI   INPUT LINE NUMBERS IN OSI FORMAT
//*        >NAME  - PROCESS MEMBERS .GE. SPECIFIED NAME ONLY
//*        <NAME  - PROCESS MEMBERS .LE. SPECIFIED NAME ONLY
//*        =MASK  - PROCESS MEMBERS MATCHING THE MASK ONLY; THIS MASK
//*            IS OVERRIDDEN BY A DD CARD MASK.  MASK IS FILLED WITH
//*            TRAILING BLANKS IF SHORT; MINUS SIGN IS USED TO MATCH
//*            ANY CHARACTER.
//*        /MASK  - SKIP MEMBERS MATCHING THE MASK. MASK IS FILLED WITH
//*            MINUS SIGNS IF SHORT. BLANKS ARE PERMITTED (MATCHED),
//*            MINUS SIGNS WILL PERMIT ANY CHARACTER.
//*        :SSIMASK - MASK TO MATCH SSI FIELD. FILLED WITH MINUS SIGNS
//*            IF SHORT. SSI INFORMATION IS UNPACKED PRIOR TO TEST.
//*            IF SSI DOES NOT EXIST, A VALUE OF ZERO WILL BE USED.
//*            NOTE THAT ONLY MINUS AND HEX BYTES (0-9,A-F) ARE VALID.
//*        UP= ADD, REP OR CHG - SPECIFIES THE IEBUPDTE CONTROL VERB
//*            TO BE GENERATED. DEFAULT IS CHG (CHANGE)
//*        UPLIST=ALL - REQUESTS LIST=ALL ON SYSUPDTE OUTPUT
//*        UPLIST=NO  - SUPPRESSES LIST=ALL ON SYSUPDTE (DEFAULT)
//*
//*        START=    STARTING RELATIVE LINE TO BE PRINTED
//*                  DEFAULT IS 1; DOES NOT AFFECT OTHER OUTPUT
//*        END=      END LINE TO BE PRINTED
//*        INCR=     INCREMENT AT WHICH TO PRINT LINES
//*        LIMIT= OR LIM=  MAXIMUM LINES TO PRINT (PER DSN/MEMBER)
//*
//*        ALIAS=SKIP   IGNORE ALIAS ENTRIES (DEFAULT)
//*        ALIAS= OR ALIAS=MEMBER  TREAT ALIAS ENTRIES AS MEMBERS
//*
./ ADD NAME=PRINTALL,SSI=03882130
//PRINTALL PROC
//PRINTALL EXEC PGM=PRINTALL,REGION=128K
//*
//SYSPRINT DD  SYSOUT=*
//*
//*      THIS PROCEDURE PRINTS OR DUMPS A SEQUENTIAL FILE.
//*      THE FIRST FILE TO BE PROCESSED IS SPECIFIED ON A SYSUT1 DD
//*      CARD. ADDITIONAL FILES MAY BE SPECIFIED AS SYSUT2 TO SYSUT99.
//*      REGION - USE 64K TO 196K DEPENDING ON BLOCKSIZE.
//*
//*      PARM FORMAT : ONE TO THREE NUMERIC FIELDS, SEPARATED BY
//*            COMMAS OR OPTION BYTES. USE EXTRA COMMA FOR MISSING
//*            NUMERIC FIELD.
//*      1ST NUMERIC FIELD - MAXIMUM NUMBER OF RECORDS/BLOCKS PROCESSED
//*      2ND FIELD - STARTING RECORD/BLOCK NUMBER
//*      3RD FIELD - LAST RECORD/BLOCK TO PROCESS
//*
//*  PRINT OPTIONS :
//*      L     (DEFAULT) PRINT 100 CHARACTERS PER LINE
//*      H     PRINT HEXADECIMAL DUMP; 48 BYTES PER LINE
//*      D     PRINT HEX AND CHARACTER; 32 BYTES PER LINE
//*      V     PRINT CHARACTERS AND HEX IN VERTICAL (3 LINE) FORMAT;
//*            100 BYTES PER LINE
//*      Q     CONVERT INPUT DATA FROM ASCII TO EBCDIC
//*      F     CONVERT INPUT FROM 9-BIT ASCII FIELD-DATA FORMAT
//*
//*  PROCESSING OPTIONS (IF NONE, DEFAULTS TO BLOCK MODE)
//*      R     PROCESS RECORDS RATHER THAN BLOCKS. REQUIRES DCB
//*            PARAMETERS (FROM LABELLED TAPE, DISK, OR FROM DD CARD)
//*      S     PROCESS RECORDS RATHER THAN BLOCKS. FOR RECFM=V(B)S,
//*            SEGMENTS UP TO 32K ARE CONSOLIDATED INTO SINGLE RECORDS.
//*      W     DEBLOCK FROM WYLBUR EDIT FORMAT (RECFM=U)
//*      K     (DIRECT ACCESS) TREAT KEYS AS DATA; FORCES BLOCK MODE
//*      I     (R/S) INCLUDE RDW/SDW WITH DATA.
//*
//*  CONTEXT SELECTION OPTION - INCLUDE A SYSIN DD WITH REQUESTS :
//*      'STRING' (SCOL,ECOL)          ONE REQUEST PER CARD
//*
//*      WHERE 'STRING' IS TEXT TO BE SELECTED. MAY BE IN THE FORM
//*      'STRING', "STRING" AND X'HEXSTRING'.  ONLY RECORDS CONTAINING
//*      THE STRING ARE PRINTED.
//*      'SCOL' - STARTING COLUMN TO SCAN (DEFAULT IS 1)
//*      'ECOL' - END COLUMN; DEFAULT IS 'SCOL' WHEN SPECIFIED, ELSE
//*            END OF RECORD.
//*
./ ADD NAME=PUNK,SSI=03882130
//PUNK   PROC  PRINT=,PUNCH='DUMMY,',UPDTE='DUMMY,'
//PUNK   EXEC  PGM=PUNK,REGION=128K
//SUMPRINT DD  SYSOUT=*      SUMMARY/ERROR MESSAGES
//SYSPRINT DD  &PRINT.SYSOUT=*         FORMATTED LISTING
//SYSPUNCH DD  &PUNCH.SYSOUT=B         SEQUENTIAL PUNCH
//SYSUPDTE DD  &UPDTE.SYSOUT=B         IEBUPDTE SYSIN FORMAT
//*
//*   PUNK  PROCESSES CARD AND WYLBUR FORMAT DISK DATASETS.
//*            SCAN OPTIONS CAUSE THE ENTIRE MEMBER TO BE PROCESSED
//*            ON A MATCH.  LIST=SCAN PRINTS ONLY SCAN MATCHES.
//*      INPUT: ONE OR MORE DD CARDS SPECIFYING A DISK DATASET
//*            DSORG=PS/PO/DA  RECFM=U (WYLBUR EDIT) OR F(B),80
//*            DDNAME IS OF THE FORM SYSUTXXX, WHERE XXX IS UNIQUE.
//*            A MEMBER NAME ON THE DD IS TREATED AS A MASK,
//*            FILLED WITH TRAILING BLANKS. A MINUS SIGN IS USED TO
//*            PERMIT ANY CHARACTER TO MATCH THE MASK POSITION, BUT
//*            IS INVALID IN THE FIRST CHARACTER POSITION.
//*            DD CARDS MAY SPECIFY DIFFERENT TYPES FOR THE SAME
//*            RUN, BUT MUST NOT BE CONCATENATED.
//*         DSNAMES ON THE DD CARD MAY ALSO SPECIFY MASK OPTIONS.
//*            A TRAILING VALUE OF DSN.ALL WILL TREAT THE LEADING
//*            TEXT AS A MASK FILLED WITH MINUS SIGNS.
//*            A VALUE OF PDS.ALL WILL RESTRICT THE DSCB SEARCH ON
//*            THE VOLUME TO PARTITIONED DATASETS.
//*            ANY MINUS SIGN IN THE NAME IS TREATED AS A MASK REQUEST.
//*            IF NEITHER PDS.ALL NOR DSN.ALL IS SPECIFIED, THE MASK
//*            WILL NOT BE FILLED WITH MINUS SIGNS, BUT BLANKS.
//*            FOR ANY MASKED DSN FORM, THE DSN SHOULD BE IN QUOTES,
//*            AND THE UNIT AND VOL=SER PARAMETERS ARE REQUIRED.
//*      SYSIN:  (OPTIONAL) CARDS SPECIFYING TEXT TO BE SEARCHED FOR.
//*        FORM IS 'STRING' (STARTCOL,ENDCOL)   OR
//*        "STRING" (STARTCOL)  OR X'HEXTTEXT' (COL...)
//*        EMBEDDED QUOTES/APOSTROPHES MUST BE DOUBLED IF THEY MATCH
//*        THE FRAMING CHARACTERS; SINGLE IF THE OPPOSITE FRAMING IS
//*        USED. E.G. :
//*          "DON'T"   OR 'DON''T'   BUT NOT 'DON'T'
//*            'ENDCOL' IS LAST COLUMN OF START CHARACTER.
//*      OUTPUT: AT LEAST ONE OF FOUR DD CARDS MUST BE SUPPLIED:
//*        SUMPRINT (OR SYSTERM)- VBA,133  INDEX AND ERROR MESSAGES
//*        SYSPRINT - VBA,133 LISTING WITH HEADINGS
//*        SYSPUNCH - FB,80   PUNCH DECK, NO SEPARATION BETWEEN MEMBERS
//*        SYSUPDTE - FB,80   IEBUPDTE INPUT FORMAT, WITH ./ ADD CARDS
//*      PARM OPTIONS:
//*        %   PRODUCE MICROFICHE EYEBALL HEADERS (12 LINE MEMBER NAME)
//*        &   INCLUDE ONLY MEMBERS WITH ' MACRO ' ON FIRST CARD
//*        ¬   EXCLUDE MEMBERS WITH ' MACRO ' ON FIRST CARD (COL 1-16)
//*        #   PLACE WYLBUR LINE NUMBERS IN COLUMNS 73-80
//*        INTEGER    -"-
//*        EDIT  PLACE WYLBUR LINE NUMBERS IN 73-80 IN EDIT FORMAT
//*        HWD OR HALFWORD - INPUT LINE NUMBERS IN RAND FORMAT
//*        OSI   INPUT LINE NUMBERS IN OSI FORMAT
//*        >NAME  - PROCESS MEMBERS .GE. SPECIFIED NAME ONLY
//*        <NAME  - PROCESS MEMBERS .LE. SPECIFIED NAME ONLY
//*        =MASK  - PROCESS MEMBERS MATCHING THE MASK ONLY; THIS MASK
//*            IS OVERRIDDEN BY A DD CARD MASK.  MASK IS FILLED WITH
//*            TRAILING BLANKS IF SHORT; MINUS SIGN IS USED TO MATCH
//*            ANY CHARACTER.
//*        /MASK  - SKIP MEMBERS MATCHING THE MASK. MASK IS FILLED WITH
//*            MINUS SIGNS IF SHORT. BLANKS ARE PERMITTED (MATCHED),
//*            MINUS SIGNS WILL PERMIT ANY CHARACTER.
//*        :SSIMASK - MASK TO MATCH SSI FIELD. FILLED WITH MINUS SIGNS
//*            IF SHORT. SSI INFORMATION IS UNPACKED PRIOR TO TEST.
//*            IF SSI DOES NOT EXIST, A VALUE OF ZERO WILL BE USED.
//*            NOTE THAT ONLY MINUS AND HEX BYTES (0-9,A-F) ARE VALID.
//*        UP= ADD, REP OR CHG - SPECIFIES THE IEBUPDTE CONTROL VERB
//*            TO BE GENERATED. DEFAULT IS ADD.
//*        UPLIST=ALL - REQUESTS LIST=ALL ON SYSUPDTE OUTPUT (DEFAULT)
//*        UPLIST=NO  - SUPPRESSES LIST=ALL ON SYSUPDTE OUTPUT
//*
//*        START=    STARTING RELATIVE LINE TO BE PRINTED
//*                  DEFAULT IS 1; DOES NOT AFFECT OTHER OUTPUT
//*        END=      END LINE TO BE PRINTED
//*        INCR=     INCREMENT AT WHICH TO PRINT LINES
//*        LIMIT= OR LIM=  MAXIMUM LINES TO PRINT (PER DSN/MEMBER)
//*
//*        ALIAS=SKIP   IGNORE ALIAS ENTRIES (DEFAULT)
//*        ALIAS= OR ALIAS=MEMBER  TREAT ALIAS ENTRIES AS MEMBERS
//*
./ ADD NAME=PURGE    8001-05267-05267-0037-00008-00008-00000-HERC01
//PURGE   PROC CC=4
//*
//*
//REL     EXEC PGM=JOBPURGE,COND=(&CC,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*  THIS PROC WILL PURGE OUTPUT SPECIFIED ON SYSIN; ONE NAME PER CARD
//*
./ ADD NAME=RELEASE  8000-05035-05035-1427-00008-00008-00000-GERHARD
//RELEASE PROC CC=4
//*
//*
//REL     EXEC PGM=JOBRELSE,COND=(&CC,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*  THIS PROC WILL RELEASE JOBS SPECIFIED ON SYSIN; ONE NAME PER CARD
//*
./ ADD NAME=SHUTDOWN 8000-06177-06177-0001-00010-00010-00000-GERHARD
//SHUTDOWN PROC
//*
//*   THIS PROC (S SHUTDOWN) INVOKES VOLKER BANDKE'S BSPPILOT
//*   TO DO A QUICK SYSTEM SHUTDOWN
//*
//COMMAND EXEC PGM=OSMGCR,
//             PARM='F BSPPILOT,SHUTNOW'
//*
//SYSPRINT DD  DUMMY
//*
./ ADD NAME=SLANAL   8000-05175-05175-0906-00053-00053-00000-HERC01
//SLANAL  PROC TAPE='USER01',LF=,N=1,U=1,UNI='TAPE',DN=3,LBL=LTM,
//             START=1,END=1,INC=1,SKIP=SL,FULL=1024,ERRSIZE=1024,
//             MAXPRT=5,LABPRT=15,LABERR=10,MAXERR=100,CONSERR=50,
//             OTHER=TRUNC,PRG=SLANALYZ,EROPT=ABE,CODE=,BLK=0 32760
//*
//SLANAL  EXEC PGM=&PRG,REGION=256K,
//             PARM=('ST=&START','EN=&END','IN=&INC','SK=&SKIP',
//             'SZ=&FULL','ES=&ERRSIZE','MP=&MAXPRT',
//             'LP=&LABPRT','LR=&LABERR','MR=&MAXERR',
//             'CR=&CONSERR','&OTHER')
//*
//SUMPRINT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  UNIT=(&UNI,&U,DEFER),DISP=OLD,DSN=&&ANY,
//             LABEL=(&LF,&LBL,EXPDT=98000),VOL=(,,,&N,SER=(&TAPE)),
//             DCB=(DEN=&DN,EROPT=&EROPT,OPTCD=&CODE,BLKSIZE=&BLK)
//*
//*      THIS PROCEDURE FORMATS STANDARD LABEL TAPE HEADER AND TRAILER
//*      FILES, AND DUMPS SELECTED BLOCKS OF EACH DATA FILE ON THE TAPE
//*
//*      TAPE=    IS A LIST OF THE VOLUME SERIALS TO BE ANALYZED
//*               FORMAT IS :  TAPE='VOLONE,VOLTWO,...'
//*               FIVE VOLUME SERIALS ARE THE MAXIMUM SUPPORTED
//*      LF=      LIMIT FILE SCAN - LAST FILE # TO BE DONE
//*      N=       IS NOT YET DEFINED - RESERVED FOR FUTURE USE
//*      U=       IS NOT YET DEFINED - RESERVED FOR FUTURE USE
//*      UNI=     TAPE DRIVE DEVICE TYPE ('3400-5', '3400-3', '3400-2')
//*      DN=      TAPE DENSITY (4 - 6250 BPI, 3 - 1600, 2 - 800)
//*      CODE=    USE CODE=Q FOR ASCII TAPES
//*      LBL=     BLP; OR LTM FOR DOS TAPES WITH LEADING TAPEMARK
//*      START=   GIVES THE NUMBER OF THE FIRST BLOCK IN EACH FILE
//*      END=     THE LAST BLOCK IN EACH FILE TO BE DUMPED
//*      INC=     INTERVAL FOR PRINTING BLOCKS (START+INC, ...)
//*      FULL=    NUMBER OF BYTES TO PRINT PER BLOCK (DFLT 1024)
//*      SKIP=YES   SKIP OVER DATA RECORDS (SKIPS ERROR CHECKING)
//*      SKIP=NO    READ ALL DATA RECORDS
//*      SKIP=SL    USE SKIP MODE FOR LABELLED TAPES; NO SKIP FOR NL
//*      MAXPRT=    PRINT LIMIT COUNT FOR ERROR BLOCKS
//*      LABPRT=    PRINT LIMIT FOR BAD LABELS
//*      LABERR=    TERMINATION LIMIT FOR LABEL ERRORS
//*      MAXERR=    TERMINATION LIMIT FOR DATA ERRORS
//*      CONSERR=   TERMINATION LIMIT FOR CONSECUTIVE ERRORS
//*      OTHER      ...ONE OR MORE OPTIONS IN AOPSTROPHES :
//*        TRUNCATE  TRUNCATE BLOCKS WITH BAD BLOCKSIZES
//*        FORCE     FORCES NL MODE; RUNS UNTIL LIMIT FILE (LF=)
//*        DEBUG     FORCES A DUMP FOR PROBLEM DIAGNOSIS
//*
//*      BLK=       MAXIMUM BLOCKSIZE EXPECTED ON THE TAPE.
//*      BLK=0      SETS BLOCK SIZE TO 64K (FOR FDR DUMP TAPES);
//*                 REQUIRES MINIMUM 192K REGION
//*
//*
./ ADD NAME=SLCOPY   0100-97203-97203-1028-00066-00066-00000-GERHARD
//SLCOPY  PROC IUN='3480',OUN='3480',IDE=3,ODE=4,ITR=ET,OTR=ET,
//             LF=,N=1,U=1,LBL=LTM,IQ=,OQ=,
//             START=1,END=1,INC=1,SKIP=SL,FULL=1024,ERRSIZE=1024,
//             MAXPRT=5,LABPRT=15,LABERR=10,MAXERR=100,CONSERR=50,
//             OTHER=,PRG=SLANCOPY,EROPT=ABE,BLK=32760,
//             ITAPE=USER01,OTAPE=COPY,IDSN='&&ANY',ODSN=,
//             TMSIN=',EXPDT=98000',TMSOUT=',EXPDT=98000'
//*
//SLCOPY  EXEC PGM=&PRG,REGION=1024K,
//             PARM=('ST=&START','EN=&END','IN=&INC','SK=&SKIP',
//             'SZ=&FULL','ES=&ERRSIZE','MP=&MAXPRT',
//             'LP=&LABPRT','LR=&LABERR','MR=&MAXERR',
//             'CR=&CONSERR','&OTHER')
//*
//SUMPRINT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  UNIT=(&IUN,&U,DEFER),LABEL=(&LF,&LBL,&TMSIN),
//             DISP=OLD,DSN=&IDSN,
//      DCB=(DEN=&IDE,TRTCH=&ITR,OPTCD=&IQ,EROPT=&EROPT,BLKSIZE=&BLK),
//             VOL=(,,,&N,SER=(&ITAPE))
//SYSUT2   DD  UNIT=(&OUN,&U,DEFER),LABEL=(,&LBL,&TMSOUT),
//             DISP=(OLD,KEEP),DSN=&ODSN,
//             DCB=(DEN=&ODE,TRTCH=&OTR,OPTCD=&OQ,BLKSIZE=&BLK),
//             VOL=SER=(&OTAPE)
//*
//*      THIS PROCEDURE COPIES INDIVIDUAL TAPES; MULTI-VOLUME FILES
//*      ARE NOT SUPPORTED UNLESS EACH INDIVIDUAL TAPE CAN BE COPIED
//*      SEPARATELY.  CHANGE OF FORMAT (EBCDIC TO USASCII AND V.V.)
//*      AND DEVICE TYPE/DENSITY IS SUPPORTED, PROVIDING THE OUTPUT
//*      FROM ANY TAPE WILL FIT ON A SINGLE OUTPUT REEL.
//*
//*      PARAMETERS :
//*
//*      IUN / OUN   UNIT TYPES VALID FOR REQUESTED DENSITY AND TRACK
//*      IDE / ODE   DENSITY
//*      ITR / OTR   TRTCH VALUE FOR 7-TRACK REQUESTS
//*      IQ/OQ    SET =Q FOR USASCII TAPES
//*      ITAPE       1 TO 5 VOLUME SERIALS ENCLOSED IN QUOTES
//*      OTAPE       IF OMITTED (=COPY), VOL HEADERS COPIED AS IS
//*                  ELSE  1 TO 5 VOLUME SERIALS ENCLOSED IN QUOTES
//*      ODSN=    DEFAULT DSN TO BE USED BY TMS FOR UNLABELLED TAPES
//*      SKIP=     NOT MEANINGFUL (IGNORED)
//*      LF=      LIMIT FILE SCAN - LAST FILE # TO BE DONE
//*      N=       IS NOT YET DEFINED - RESERVED FOR FUTURE USE
//*      U=       IS NOT YET DEFINED - RESERVED FOR FUTURE USE
//*      LBL=     BLP; OR LTM FOR DOS TAPES WITH LEADING TAPEMARK
//*      START=   GIVES THE NUMBER OF THE FIRST BLOCK IN EACH FILE
//*      END=     THE LAST BLOCK IN EACH FILE TO BE PRINTED
//*      INC=     INTERVAL FOR PRINTING BLOCKS (START+INC, ...)
//*      FULL=    NUMBER OF BYTES TO PRINT PER BLOCK (DFLT 1024)
//*      MAXPRT=    PRINT LIMIT COUNT FOR ERROR BLOCKS
//*      LABPRT=    PRINT LIMIT FOR BAD LABELS
//*      LABERR=    TERMINATION LIMIT FOR LABEL ERRORS
//*      MAXERR=    TERMINATION LIMIT FOR DATA ERRORS
//*      CONSERR=   TERMINATION LIMIT FOR CONSECUTIVE ERRORS
//*      OTHER      ...ONE OR MORE OPTIONS IN AOPSTROPHES :
//*        TRUNCATE  TRUNCATE BLOCKS WITH BAD BLOCKSIZES
//*        FORCE     FORCES NL MODE; RUNS UNTIL LIMIT FILE (LF=)
//*        DEBUG     FORCES A DUMP FOR PROBLEM DIAGNOSIS
//*
//*      BLK=       MAXIMUM BLOCKSIZE EXPECTED ON THE TAPE.
//*      BLK=0      SETS BLOCK SIZE TO 64K (FOR FDR DUMP TAPES);
//*                 REQUIRES MINIMUM 192K REGION
//*
//*      EROPT=  ABE-ERROR COUNT/ABEND; SKP-SKIP ERRORS; ACC-ACCEPT
./ ADD NAME=STEPSEP  8001-05204-05204-1752-00010-00009-00000-GERHARD
//STEPSEP EXEC PGM=STEPSEP,SOUT='*'
//*
//*   PRINT A STEP SEPARATOR BETWEEN ASSEMBLIES
//*   PARM='XXXXXXXXYYYYYYYYF'
//*
//*      XXXXXXXX - MEMBER NAME OR OTHER 8-BYTE PAGE HEADER
//*      YYYYYYYY - SECOND LINE; USUALLY DATE; CURRENT DATE IF OMITTED
//*      F - FLAG: M-MEMO FORMAT P-PORTRAIT MODE X-XEROX 4050 CONTROLS
//*
//SYSPRINT DD  SYSOUT=(&SOUT)
./ ADD NAME=SYSMERGE 8001-05223-10242-2311-00031-00031-00000-GERHARD
//SYSMERGE PROC IND='GERHARD.',COMP='????',
//             MODS=MODS,WORK=VIO,PRG=HSPMERGE
//*      LIBRARY MERGE PROCEDURE
//*      COMP= SPECIFIES COMPONENT (HASP, WYL, SLAC...)
//*      REQUIRES GERHARD.COMPOLD(UNMODIFIED SOURCE)
//*      GERHARD.COMPMODS (MODIFICATION LEVELS/MEMBER MERGE)
//*      GERHARD.COMPSRC (MODIFIED SOURCE)
//*      GERHARD.COMPOBJ (CORR. OBJECT)
//*
//INIT    EXEC PGM=CLEARPDS
//*ESA*   INCLUDE MEMBER=ZZSTEPLB
//SYSLIB   DD  DISP=OLD,DSN=&IND&COMP.SRC
//*
//MERGE   EXEC PGM=&PRG,REGION=4096K
//*ESA*   INCLUDE MEMBER=ZZSTEPLB
//ERRORS   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IND&COMP.OLD
//WORK     DD  UNIT=&WORK,SPACE=(CYL,(40,10),RLSE,CONTIG)
//SYSIN    DD  DISP=SHR,DSN=&IND&COMP.&MODS(##MERGE)
//INPDS    DD  DISP=SHR,DSN=&IND&COMP.&MODS
//SYSUT2   DD  DISP=OLD,DSN=&IND&COMP.SRC
//SYSUDUMP DD  SYSOUT=*
//COPY    EXEC PGM=IEBCOPY,REGION=500K,COND=(4,LT,MERGE)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IND&COMP.OLD
//SYSUT2   DD  DISP=OLD,DSN=&IND&COMP.SRC
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSIN    DD  DUMMY
//*
./ ADD NAME=SYSMERG2 8001-05223-05223-1952-00045-00031-00000-GERHARD
//SYSMERGE PROC IND='SYS9.',COMP='????',
//             MODS=MODS,WORK=VIO
//*
//*      SOURCE *AND* MACRO LIBRARY MERGE
//*
//*      COMP= SPECIFIES COMPONENT (HASP, WYL, SLAC...)
//*      REQUIRES GERHARD.COMPOLD(UNMODIFIED SOURCE)
//*      GERHARD.COMPMODS (MODIFICATION LEVELS/MEMBER MERGE)
//*      GERHARD.COMPSRC (MODIFIED SOURCE)
//*      GERHARD.COMPOBJ (CORR. OBJECT)
//*
//INIT    EXEC PGM=CLEARPDS
//*ESA*   INCLUDE MEMBER=ZZSTEPLB
//SYSLIB   DD  DISP=OLD,DSN=&IND&COMP.SRC
//SYSLIB2  DD  DISP=OLD,DSN=&IND&COMP.MAC
//*
//MERGE   EXEC PGM=HSPMERGE,REGION=4096K
//*ESA*   INCLUDE MEMBER=ZZSTEPLB
//ERRORS   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IND&COMP.OLD   MASTER SOURCE
//SYSUT3   DD  DISP=SHR,DSN=&IND&COMP.MOLD  MASTER MACROS
//WORK     DD  UNIT=&WORK,SPACE=(CYL,(40,10),RLSE,CONTIG)
//SYSIN    DD  DISP=SHR,DSN=&IND&COMP.&MODS(##MERGE)
//INPDS    DD  DISP=SHR,DSN=&IND&COMP.&MODS
//SYSUT2   DD  DISP=OLD,DSN=&IND&COMP.SRC   UPDATED SOURCE
//SYSUT4   DD  DISP=OLD,DSN=&IND&COMP.MAC   UPDATED MACROS
//SYSUDUMP DD  SYSOUT=*
//*
//COPYS   EXEC PGM=IEBCOPY,REGION=500K,COND=(4,LT,MERGE)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IND&COMP.OLD
//SYSUT2   DD  DISP=OLD,DSN=&IND&COMP.SRC
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSIN    DD  DUMMY
//*
//COPYM   EXEC PGM=IEBCOPY,REGION=500K,COND=(4,LT,MERGE)
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&IND&COMP.MOLD
//SYSUT2   DD  DISP=OLD,DSN=&IND&COMP.MAC
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,3)
//SYSIN    DD  DUMMY
//*
./ ADD NAME=TAPEMARK 0100-02251-02251-1239-00010-00010-00000-GERHARD
//TAPEMARK PROC T='560'
//*
//*        ACCOUNT=0904
//*
//TAPEMARK EXEC PGM=TAPEMARK
//        INCLUDE MEMBER=ZZSTEPLB
//IEFRDER  DD  DUMMY
//TAPEDD   DD  DISP=(,KEEP),DSN=TAPEMARK,VOL=SER=TAPEXX,
//             UNIT=(&T,,DEFER),LABEL=(,BLP,EXPDT=98000)
//*        PEND
./ ADD NAME=UPDTX    8000-05215-05215-2034-00012-00012-00000-GERHARD
//UPDTX   PROC PRG=IEBUPDTX,
//             SRC='userid.TEST.SRC',  input PDS
//             OSRC='userid.TEST.ASM'  output PDS
//*
//*     UPDATE CARD FORMAT
//*
//UP      EXEC PGM=&PRG,PARM='MOD,LISTALL,WYLBUR'
//* STEPLIB  DD  DISP=SHR,DSN=SYS2.LINKLIB
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=&SRC
//SYSUT2   DD  DISP=SHR,DSN=&OSRC
//*
./ ADD NAME=VATUCB   8000-06343-06343-2116-00015-00015-00000-GERHARD
//VATUCB  PROC VAL=00
//*
//*   THIS PROGRAM READS THE VATLST (SUFFIXED BY VAL PARAMETER)
//*     AND CHANGES ALL DASD UCBS TO THEIR ORIGINAL ATTRIBUTES.
//*   VOLUMES NOT FOUND ARE MARKED RESERVED + PRIVATE
//*
//*   PARM= (NULL) ISSUES WTOS WITH DESC=2/ROUT=2 (NON-DELETE)
//*   PARM=IPL     ISSUES WTOS WITH DEFAULTS (DELETABLE)
//*   PARM=TEST    ISSUES WTOS, BUT DOES NOT CHANGE UCBS
//*
//       EXEC  PGM=VATUCB
//*STEPLIB DD   DISP=SHR,DSN=SYS2.LINKLIB (NOT NEEDED)
//*
//VATIN   DD   DISP=SHR,DSN=SYS1.PARMLIB(VATLST&VAL)
//*
