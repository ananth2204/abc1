{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012012000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 587860, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE430.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE430.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\n\\x06'", "DS1TRBAL": "b'\\x9a\\xba'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\x12\\x00\\r\\x03\\x13\\x00\\x08\\x00\\x0b'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* THE PROGRAMS IN THIS LIBRARY ARE DONATED BY ...\n*\n* MCEVOY-WILLIS DIVISION OF SMITH INTERNATIONAL (NORTH SEA) LTD.\n* WOODCHESTER\n* STROUD\n* GLOUCESTER\n* GL5 5EY\n* UK\n*\n* THEY ARE MADE AVAILABLE ON AN 'AS IS' BASIS WITH NO WARRANTY\n* EXPRESS OR IMPLIED. THEY MAY NOT BE USED FOR PROFIT.\n*\n* THESE PROGRAMS ALL CURRENTLY WORK WITH MVS/SP 1.3.2\n*\n* INDEX OF ITEMS:\n* IEFACTRT - OUTPUTS IO COUNTS ETC FOR EACH DD STATEMENT INTO JES2 JOB\n*            MESSAGES\n* SAMPLE   - SAMPLE OF IEFACTRT OUTPUT\n* NCXPDSCN - SCAN PDS FOR CHARACTER STRINGS\n* SCANINFO - INSTRUCTIONS FOR USING NCXPDSCN\n* NCZ93205 - INTERFACE TO PDS FROM COBOL\n* NCZ93208 - CALCULATE SPACE USED IN PDS. VERY USEFUL AS A FRONT END\n*            TO COMPRESS OR IN AN ISPF FUNCTION FOR USERS TO BE ABLE\n*            TO SEE HOW FULL ARE THEIR LIBRARIES\n* NCZ96103 - OUTPUT DATASET TO 3287 OR EQUIVALENT PRINTER. REMOTES\n*            WORK PERFECTLY OK THOUGH THE PROGRAM COMMENTS SUGGEST\n*            OTHERWISE. THERE ARE SOME PROBLEMS WITH 'M' TYPE CONTROL\n*            CHARACTERS WHERE THE ACTION IS AFTER PRINTING\n* NCZ99002 - SUBROUTINE TO CHOP UP CHARACTER STRINGS INTO FIELDS TO\n*            MAKE CONTROL STATEMENT ANALYSIS EASIER\n* USSTAB   - OUR LOCAL BSC VTAM MENU. SUPPORTS ABBREVIATED LOGOFF WITH\n*            RE/DISCONNECT OPTION.\n* MSETUP   - MACRO USED IN SEVERAL PROGRAMS\n* MCLEAR   - MACRO USED IN SEVERAL PROGRAMS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFACTRT": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "IEFACTRT TITLE 'SMF JOB/STEP TERMINATION EXIT                          *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          IEFACTRT - JOB/STEP TERMINATION EXIT                   *\n*                                                                     *\n* IEFACTRT.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* THE EXIT WRITES TO THE JOB MESSAGE LOG DETAILS FO I/O COUNTS FOR    *\n* EACH DD STATEMENT.  THE DETAILS COME FROM THE TYPE 30 RECORDS.      *\n* MUCH OF THE CODE WAS LIFTED FROM THE US SENATE REQUEUER ON THE      *\n* MVS GOODIES TAPE, FILES 95-97                                       *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* THIS PROGRAM IS PART OF THE SYSTEM AND SHOULD NEVER BE EXEC'D       *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.3 MESSAGES                                                 *\n*                                                                     *\n* DETAILS OF STEP I/O COUNTS.                                         *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.4 ABEND CODES                                              *\n*                                                                     *\n* NONE.                                                               *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n*  WARNING  WARNING  WARNING  WARNING  WARNING  WARNING               *\n*  ====================================================               *\n*  ************* THIS IS A KEY ZERO ROUTINE ***********               *\n*                                                                     *\n* MUST BE RE-ENTRANT AND REFRESHABLE.                                 *\n* SMP INSTAL IS MANDATORY.                                            *\n* CLPA IS REQUIRED TO ACTIVATE, ALSO DESCRIBE IN SMFPRMXX MEMBER OF   *\n*  SYS1.PARMLIB                                                       *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n* 03 DEC 82 EMM   V01     CREATED                                     *\n*  5 MAR 84 RH    V01     RECODED 'REQU' MACRO AS EQUATES             *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n* RECORD DETAILS BELOW.                                               *\n*                                                                     *\n* DD MMM YY WHO : COMMENTS                                            *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* IEFACTRT.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* MUST BE RE-ENTRANT AND REFRESHABLE - LPA ROUTINE.                   *\n* USES SMF MAPPING MACRO AND SOME US SENATE MACROS IN MAC1.MACLIB.    *\n* ALSO USES ESTAE AND SETRP MACROS FOR RECOVERY.                      *\n*                                                                     *\n*****                                                             *****\n         TITLE 'SMF JOB/STEP TERMINATION EXIT                          *\n               - PROGRAM PROLOGUE'\n*****                                                             *****\n*                                                                     *\n* ID:          IEFACTRT - JOB/STEP TERMINATION EXIT                   *\n*                                                                     *\n* ENTRY INTFCE: SEE SMF SPL.                                          *\n*                                                                     *\n* EXIT  INTFCE: SEE SMF SPL.                                          *\n*                                                                     *\n* RETURN CODES:RC = 0  ALWAYS                                         *\n*                                                                     *\n*              RC = 4  NEVER                                          *\n*                                                                     *\n* REG USAGE:                                                          *\n*        REGISTER                 FUNCTION\n*              R15                ENTRY ADDR/WORK REG/RETURN CODE\n*              R14                RETURN ADDR/WORK REG\n*              R13                SAVEAREA/WORKAREA\n*              R12                BASE REGISTER (MAIN PROGRAM)\n*              R11\n*              R10                RETURN ADDR FOR SUBROUTINES\n*              R9                 ADDR OF SMF RECORD\n*              R8                 RETURN ADDR REG FOR FUNCTIONS\n*              R7-R0              WORK REGISTERS\n*                                                                     *\n         PRINT NOGEN\n*****                                                             *****\n         TITLE 'IEFACTRT - MAIN ROUTINE'\nIEFACTRT CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SAVE  (14,12),,IEFACTRT-&SYSDATE-&SYSTIME\n         LR    R12,R15        ESTAB. BASE REG.\n         USING IEFACTRT,R12   TELL ASSEMBLER\n         LR    R8,R1          HOLD ONTO PARM PTRS\n         LR    R7,R0          HOLD ONTO ENTRY CODE\n         USING ACTRTMAP,R8    GIVE PASSED PARMS ADDRESSABILITY\n         L     R6,ACTCEPA     GET COMM EXIT PARM AREA PTR\n         USING COMMEXIT,R6    GIVE IT ADDRESSABILITY\n         CH    R7,=H'20'      IS IT TYPE 30 RECORD\n         BNE   MRRETURN       BIF NO: GET OUT\n         TM    CEPSMFOP,CEPSMF07 IS IT TSO\n         BNZ   MRRETURN       BIF YES - NOT INTERESTED\n         L     R9,ACTSMFRA    GET SMF RECORD ADDRESS\n         USING SMFRCD30,R9    ADDRESS IT\n         LR    R1,R9\n         A     R1,SMF30SOF\n         USING SMF30PSS,R1    POINT TO PRODUCT SECTION\n         CLC   SMF30TYP,=H'4' IS IT STEP TERMINATION\n         BNE   MRRETURN       BIF NO - NOT INTERESTED\n         DROP  R1\n         DROP  R6\n         LA    R0,ECSUBPOL    SUBPOOL #\n         SLL   R0,24          PUT INTO LEFTMOST BYTE\n         LA    R1,ECWRKSIZ    ACTRT-ONLY WORK AREA SIZE\n         OR    R0,R1          MERGE TOGETHER\n         GETMAIN R,LV=(0)\n         ST    R1,8(,R13)     COMPLETE THE CHAINING PROCESS\n         ST    R13,4(,R1)\n         LR    R13,R1\n         USING EXITCORE,R13   GIVE IT ADDRESSABILITY\n         ST    R8,PARMPTRS    STOW ADDR OF ACTRT PARMS\n         ST    R7,ENTRYCDE    STOW ENTRY CODE VALUE\n         ST    R6,CEPAADDR    STOW ADDR OF COMM EXIT PARM AREA\n         DROP  R8\n*\n*        SET UP RECOVERY ENVIRONMENT\n*\n         MVC   ESTAEW(LESTAEL),ESTAEL  MOVE IN ESTAE PARAMETER LIST\n         LA    R0,RTRYRTN1            RETRY ROUTINE - NO SDWA\n         ST    R0,ESTAPARM            STORE IN PARAMETER LIST\n         LA    R0,RTRYRTN2            RETRY ROUTINE - WITH SDWA\n         ST    R0,ESTAPARM+4          STORE IN PARAMETER LIST\n         STM   R12,R13,ESTAPARM+8      STORE BASE & DATA REG IN PARM\n         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY\n         SPACE 3\n***********************************************************************\n*        CALL INTERFACE TO SMF TYPE 30 PROCESSOR\n***********************************************************************\n         LA    R15,0          SET RC=0 INITIALLY\n         BAL   R10,TY30RTN    GO TO TYPE 30 PROCESSING\n         MVC   LINE+1(L'LINE-1),LINE   PROPAGATE ASTERS\n         BAL   R8,WRITEMSG\nMREXIT   DS    0H\n***********************************************************************\n*        MAIN EXIT ROUTINE\n***********************************************************************\n         ESTAE 0                   CANCEL ESTAE EXIT\nRTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA\n*                                  JUST FREE STORAGE AND EXIT\n         L     R2,SAVEAREA+4  GET CALLER'S S/A PTR\n         LA    R0,ECSUBPOL    SUBPOOL #\n         SLL   R0,24          PUT INTO LEFTMOST BYTE\n         LA    R1,ECWRKSIZ    ACTRT-ONLY WORK AREA SIZE\n         OR    R0,R1          MERGE TOGETHER\n         LR    R1,R13         GET ADDR OF ACTRT-GETMAINED AREA\n         FREEMAIN  R,LV=(0),A=(1) LOCAL FREEMAIN\n         LR    R13,R2         R13 NOW HAS CALLER'S S/A PTR\nMRRETURN LA    R15,0          SET RETURN REGISTERS\n         LA    R1,0\n         RETURN (14,12),RC=(15)\n         TITLE 'IEFACTRT - BATCH JOB SMF TYPE 30 PROCESSOR'\nTY30RTN  DS    0H\n***********************************************************************\n*\n*        SMF TYPE 30 RECORD PROCESSOR\n*\n***********************************************************************\n         MVI   LINE,C'*'\n         MVC   LINE+1(L'LINE-1),LINE   PROPAGATE ASTERS\n         BAL   R8,WRITEMSG    PUT OUT A LINE\n         LR    R3,R9\n         A     R3,SMF30IOF\n         USING SMF30ID,R3     POINT TO IDENT SECTION\n         MVI   LINE+1,C' '               BLANK OUT INFO AREA\n         MVC   LINE+2(L'LINE-3),LINE+1\n         MVC   LINE+1(ST1LGTH),ST1PATRN\n         MVC   LINE+21(8),SMF30PGM   MOVE IN PROGRAM NAME\n         MVC   LINE+46(8),SMF30STM   MOVE IN STEP NAME\n         LR    R3,R9\n         A     R3,SMF30COF\n         USING SMF30CAS,R3     POINT TO CPU SECTION\n         L     R0,SMF30CPT     GET TCB CPU TIME\n         A     R0,SMF30CPS     ADD IN SRB TIME\n         CVD   R0,WORK01\n         ED    LINE+68(9),WORK01+4\n         LR    R3,R9\n         A     R3,SMF30POF\n         USING SMF30PRF,R3     POINT TO CPU SECTION\n         L     R0,SMF30SRV     GET TOTAL SERVICE UNITS\n         CVD   R0,WORK01\n         ED    LINE+100(12),WORK01+3\n         BAL   R8,WRITEMSG    WRITE OUT ID LINE\n         LR    R3,R9\n         A     R3,SMF30TOF\n         USING SMF30CMP,R3    POINT TO COMPLETION SECTION\n         TM    SMF30STI,X'79' WAS STEP CANCELLED OR FLUSHED?\n         BNZ   LIOEXIT        BIF YES\n         DROP  R3\n         SPACE 3\nLIOSTATS EQU   *\n***********************************************************************\n*\n*        I/O STATISTICS, BY DD STATEMENT (EXCL. SPOOLED DATA)\n*\n***********************************************************************\n         MVC   LINE+1(L'LINE-1),LINE     ASTERS ON LINE\n         LH    R5,SMF30EON               # OF UCB'S\n         LTR   R5,R5                     ARE THERE ANY UCB'S\n         BNP   LIOEXIT                   BIF NONE\n         LA    R7,LINE+2\n         CH    R5,=H'3'                  ARE THERE LESS THAN 5?\n         BL    LIOPARTL                  BIF YES\n         LA    R5,3                      TITLE ALL THREE COLUMNS\nLIOPARTL EQU   *\n         MVC   0(38,R7),LIOPAT1          MOVE TITLES IN, ONE AT A TIME\n         LA    R7,41(R7)                 MOVE TO NEXT SLOT\n         BCT   R5,LIOPARTL             TITLE AS MANY COLUMNS AS NEEDED\n         BAL   R8,WRITEMSG               PUT OUT A LINE\n         LH    R5,SMF30EON               # OF UCB'S\n         SR    R4,R4\n         D     R4,=A(3)                  HOW MANY ROWS DO WE NEED?\n         LTR   R4,R4                     EVENLY DIVISABLE BY 5?\n         BZ    LIOEVEN                   BIF YES\n         LA    R5,1(R5)                  R5 = # OF ROWS\nLIOEVEN  EQU   *\n         ST    R5,LIODEPTH\n         LR    R4,R9                     POINT TO FIRST UCB ENTRY\n         A     R4,SMF30EOF\n         MVI   LINE+1,C' '               BLANK OUT INFO AREA\n         MVC   LINE+2(L'LINE-3),LINE+1\n         L     R6,LIODEPTH               # OF ROWS\n         LH    R5,SMF30EON               # OF UCB'S\nLIOCALL1 EQU   *\n         BAL   R8,LIOBLDLN               RTN TO BUILD AN ENTIRE LINE\n         STM   R0,R7,REGSAVE             HOLD ONTO REGS FOR WRITE\n         BAL   R8,WRITEMSG               PUT OUT A LINE\n         LM    R0,R7,REGSAVE             NOW BRING THEM BACK\n         MVI   LINE+1,C' '               BLANK OUT INFO AREA\n         MVC   LINE+2(L'LINE-3),LINE+1\n         BCT   R6,LIOCALL1               LOOP UNTIL ALL ROWS COMPLETE\nLIOEXIT  EQU   *\n         BR    R10                       RETURN TO CALLER\n         TITLE 'IEFACTRT - SMF TYPE 30 ROUTINE CONSTANTS'\nST1PATRN EQU   *\n         DC    CL10' '\n         DC    C'PROGRAM - '\nST1PROG  DC    CL8' '\n         DC    CL10' '\n         DC    C'STEP - '\nST1STEP  DC    CL8' '\n         DC    CL4' '\n         DC    C'CPU TIME - '\nST1CPU   DC    X'20202021204B2020'\n         DC    C' SEC'\n         DC    CL4' '\n         DC    C'SERVICE UNITS - '\nST1SERV  DC    X'2020206B2020206B202120'\nST1END   EQU   *\nST1LGTH  EQU   *-ST1PATRN\n         TITLE 'IEFACTRT - UCB ADDR/DEVICE TYPE/I-O COUNT DISPLAY RTN'\nLIOBLDLN DS    0H\n***********************************************************************\n*        R5 = # OF COLUMNS LEFT TO DO @ ENTRY\n*        R4 = ADDR OF UCB RECORD PORTION TO BE PROCESSED NOW\n*        R8 = RETURN ADDRESS\n***********************************************************************\n         LA    R3,LINE+2      BASE PTR FOR OUTPUT\n         LA    R2,3          3 UNITS ARE TO BE BUILT\n         SPACE 1\nLIOCALL2 EQU   *\n         BAL   R7,LIOBLDSU    BUILD A SUBUNIT OF A LINE\n         AH    R4,SMF30ELN   JUMP TO UCB FOR  NEXT COLUMN\n         LA    R3,41(R3)     POSITION TO NEXT COLUMN ON OUTPUT\n         BCT   R5,LIOCONT    CONTINUE UNTIL NO UCB'S\n         B     LIOLNEEX\nLIOCONT  BCT   R2,LIOCALL2   CONTINUE UNTIL NO ROOM ON LINE\nLIOLNEEX EQU   *\n         BR    R8             GO BACK TO CALLER\n         SPACE 3\nLIOBLDSU EQU   *             ROUTINE TO BUILD UCB INFO UNIT\n***********************************************************************\n*        R7 = SECONDARY ROUTINE RETURN REG\n*        R5 = # OF COLUMNS LEFT TO DO @ ENTRY\n*        R4 = ADDR OF UCB INFO BEING CURRENTLY PROCESSED\n*        R6 = # OF LINES LEFT\n*        R3 = OUTPUT AREA POINTER\n*        R2 = # OF UNITS TO BE DONE\n***********************************************************************\n         USING SMF30EXP,R4\n         MVC   0(LIOPT2L,R3),LIOPAT2 PATTERN FOR UCB DISPLAY\n         MVC   0(8,R3),SMF30DDN      MOVE IN DDNAME\n         L     R0,SMF30BLK           # OF EXCP'S ISSUED UNDER THIS UCB\n         CVD   R0,WORK01\n         MP    WORK01,=P'10'         SHIFT FOR EDITING\n         ED    27(11,R3),WORK01+3    EXCP'S\n         LR    R1,R9\n         A     R1,SMF30TOF\n         USING SMF30CMP,R1           POINT TO PRODUCT SECTION\n         TM    SMF30STI+1,X'80'      POTENTIAL ERRORS IN UCB DATA?\n         DROP  R1\n         BZ    LIOCNTOK              BIF NO DETECTED ERRORS\n         MVI   38(R3),C'*'           OTHERWISE, FLAG IT\nLIOCNTOK EQU   *\n         LH    R0,SMF30BSZ           BLOCKSIZE\n         LTR   R0,R0                 HAS IT CHANGED\n         BNL   LBSCHG                BIF NOT\n         SLL   R0,1                  ZERO HIGH-ORDER BIT\n         SRL   R0,1\nLBSCHG   EQU   *\n         CVD   R0,WORK01\n         ED    21(6,R3),WORK01+5\n         TM    SMF30BSZ,X'80'        HAS BLOCKSIZE CHANGED\n         BZ    LBSOK                 BIF NO\n         MVI   27(R3),C'*'           OTHERWISE, FLAG IT\nLBSOK    EQU   *\n         XC    WORK01,WORK01\n         MVC   WORK01(2),SMF30CUA    UCB ADDRESS\n         UNPK  WORK01,WORK01(3)\n         TR    WORK01+3(4),HEXTABLE  CONVERT TO HEX DISPLAY\n         MVC   9(3,R3),WORK01+4      GET IT INTO INFO AREA\n*\n         MVC   WORK01+7(1),SMF30DEV  GET DEVICE CLASS\n         TR    WORK01+7(1),TYPTABLE  CONVERT DEVICE CLASS TO AN OFFSET\n         SR    R1,R1                 SET UP FOR TABLE LOOKUP\n         IC    R1,WORK01+7\n         SLL   R1,3\n         A     R1,=A(DEVTABLE)     POINT TO BEG. OF LIST FOR THAT TYPE\nLIOLOOP1 EQU   *\n         C     R1,=A(DEVTABED)       HAVE WE REACHED END OF TABLE?\n         BNL   LIOUCBNF              BIF END OF TABLE HAS BEEN REACHED\n         CLC   0(2,R1),SMF30DEV      DOES THIS UCBTYPE MATCH TAB ENTRY?\n         BE    LIOUCBFD              BIF ENTRY & UCB INFO MATCH\n         LA    R1,8(,R1)             SKIP TO NEXT ENTRY\n         B     LIOLOOP1              KEEP ON TRUCKIN'\n         SPACE 1\nLIOUCBFD EQU   *\n         MVC   13(6,R3),2(R1)     MOVE EBCDIC NAME OF DEV. TO INFO AREA\n         CLC   9(3,R3),=C'FFF'       VIO?\n         BNE   LIOTSJES              IF NOT VIO, TEST FOR JES\n         MVC   13(6,R3),=C'VIO   '\n         B     LIOBLDSX\nLIOTSJES EQU   *\n         CLC   13(5,R3),=C'DUMMY'    IS THIS SPOOLED DATA?\n         BNE   LIOBLDSX              BIF NOT\n         MVC   21(17,R3),=C'   N/A        N/A'\n         MVC   9(4,R3),=C'JES/'\n         B     LIOBLDSX\n         SPACE 1\nLIOUCBNF EQU   *\n         XC    WORK01,WORK01\n         MVC   WORK01(2),SMF30DEV         DEV TYPE DATA\n         UNPK  WORK01,WORK01(3)\n         TR    WORK01+3(4),HEXTABLE\n         MVC   13(4,R3),WORK01+3\nLIOBLDSX EQU   *\n         BR    R7             BACK TO FUNCTION 'LIOBLDLN'\n         DROP  R4\n         TITLE 'IEFACTRT - IEFYS WRITER INTERFACE'\nWRITEMSG DS    0H\n***********************************************************************\n*\n*        THIS MODULE WRITES A MESSAGE TO THE SYSTEM OUTPUT MESSAGE\n*        DATA SET.  THE MODULE MAY BE USED ONLY FOR BATCH JOBS.\n*        THIS ROUTINE STES UP ALL LINE LENGTHS TO 124 BYTES\n*\n***********************************************************************\n         L     R7,SAVEAREA+4  EXTRACT VALUE IN R12 @ ENTRY TO ACTRT\n         L     R7,68(,R7)     R7 NOW HAS VALUE OF ORIG R12\n         LA    R6,LINE        SET UP PARMS FOR IEFYS\n         ST    R6,36(,R7)\n         LA    R6,L'LINE      ALL LINES WILL BE 124 BYTES LONG\n         STH   R6,42(,R7)\n         LR    R5,R12         REMEMBER R12 IS OUR BASE REG!!!\n         L     R15,=V(IEFYS)  BRANCH TO IEFYS\n         LR    R12,R7         PUT IN VALUE IEFYS WANTS\n         BALR  R14,R15\n         LR    R12,R5         RESTORE R12 IMMEDIATELY!!!\nPUTEXIT  EQU   *\n         BR    R8\n         TITLE 'IEFACTRT - ESTAE EXIT ROUTINE'\nRECOVERY DS    0H\n         USING *,R15               SET UP ADDRESSABILITY\n         LA    R4,4                PUT 4 IN REGISTER FOR COMPARE\n         CR    R0,R4               IS SDWA PRESENT?\n         BNE   HAVESDWA            YES, BR TO PROCESS WITH SDWA\n         L     R0,0(R2)            LOAD RETRY ADDRESS FROM PARAM LIST\n         LA    R15,4               SET RETCODE TO RETRY ADDR IN R00\n         BR    R14                 RETURN TO PROCESSOR WITH RETRY ADDR\nHAVESDWA DS    0H                  ENTER HERE IF SDWA PRESENT\n         ST    R14,12(R13)         SAVE RETURN ADDRESS\n         L     R2,0(R1)            LOAD PARAM LIST ADDR FROM SDWA\n         L     R2,4(R2)            LOAD RETRY ADDRESS\n         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)\n         DROP  R15\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*  ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT                       *\n*                                                                     *\n***********************************************************************\nRTRYRTN1 DS    0H                  RETRY ROUTINE WITH NO SDWA PRESENT\n         LM    R12,R13,8(R1)       LOAD REGS FOR ESTAE PARM LIST\n         B     RTRYRTN2            AND GET OUT\n         TITLE 'IEFACTRT - GENERAL CONSTANTS'\n***********************************************************************\n*        CONSTANTS\n***********************************************************************\n         DS    0D\n* DEFINE ESTAE LIST FORM\n*\nESTAEL   ESTAE MF=L               CREATE MODEL ESTAE PARM LIST\nLESTAEL  EQU   *-ESTAEL           NAME ITS LENGTH\n*\n         SPACE 2\nHEXTABLE DC    240CL1'*',C'0123456789ABCDEF'\n         SPACE 2\nLIOPAT1  DC    C'DDNAME..UNIT.TYPE....BLKSIZE.....I/O''S   '\n*                0123456789012345678901234567890123456 7890\n         SPACE 2\nLIOPAT2  DC    CL22' ',X'2020202120',C' '\n         DC    X'20206B2020206B202120',C' * '\nLIOPT2L  EQU   *-LIOPAT2\n         TITLE 'IEFACTRT - UCBTYPE VS NAME LOOKUP TABLE'\nDEVTABLE EQU   *\n***********************************************************************\n*\n*        TABLE OF EBCDIC NAMES CROSS-REFERENCED BY DEVICDE TYPE\n*        (BYTES 18 &19 OF THE UCB TYPE FIELD)\n*        THIS TABLE MUST N-E-V-E-R HAVE MORE THAN 255 ENTRIES\n*\n***********************************************************************\nDEVJES   EQU   *             JES\n         DC    X'0000',C'DUMMY ' ANY JES/DUMMY ASSIGNMENTS\nDEVCOMM  EQU   *             COMMUNICATIONS DEVICES\n         DC    X'4015',C'3705  ' 3705 COMMUNICATIONS PROCESSOR\n         DC    X'4092',C'BSCA01' BISYNC 2701\n         DC    X'4093',C'BSCA03' BIYNCH 2703\nDEVUR    EQU   *             UNIT RECORD EQUIPMENT\n         DC    X'080B',C'3203  ' 3203 PRINTER\nDEVTAPE  EQU   *             TAPE DRIVES\n         DC    X'8003',C'3400  ' 3400 SERIES TAPE DRIVE\nDEVDASD  EQU   *             DASD DEVICES\n         DC    X'200B',C'3350  ' 3350 DISK DRIVE\n         DC    X'200E',C'3380  ' 3380 DISK DRIVE\n         DC    X'2008',C'2314  ' 2314 DISK DRIVE\nDEVTABED EQU   *             END OF THIS MADNESS\n         TITLE 'IEFACTRT - UCBTYPE TABLE OFFSET LIST'\nTYPTABLE EQU   *\n***********************************************************************\n*\n*        TABLE USED WITH A TRANSLATE INSTR TO DECODE THE DEVICE\n*        CLASS IN THE UCB INFO SECTION OF A TYPE 4 SMF RECORD INTO\n*        AN OFFSET INTO A TABLE OF EBCDIC DEVICE NAMES\n*\n***********************************************************************\n         DC    AL1((DEVJES-DEVTABLE)/8) JES\n         DC    7AL1((DEVTABED-DEVTABLE)/8)\n         DC    AL1((DEVUR-DEVTABLE)/8) UNIT RECORD\n         DC    23AL1((DEVTABED-DEVTABLE)/8)\n         DC    AL1((DEVDASD-DEVTABLE)/8) DASD\n         DC    31AL1((DEVTABED-DEVTABLE)/8)\n         DC    AL1((DEVCOMM-DEVTABLE)/8)  COMMUNICATIONS\n         DC    63AL1((DEVTABED-DEVTABLE)/8)\n         DC    AL1((DEVTAPE-DEVTABLE)/8) TAPE\n         DC    127AL1((DEVTABED-DEVTABLE)/8)\n         LTORG\n         TITLE 'IEFACTRT - WORK AREA USED BY ALL EXITS'\nEXITCORE DSECT\nSAVEAREA DS    18F           THIS AREA MUST ALWAYS BE FIRST\nGETPARM  DS    F             SUBPOOL & GETMAIN SIZE STORED HERE\nECPGMNAM DS    CL8           'PGM=' NAME PROVIDED BY IEFUSI\nECWRKSIZ EQU   1024          PRIV AREA SET ASIDE FOR EACH EXIT\nECTSOSIZ EQU   2048          PRIV. AREA SET ASIDE FOR TSO\nECSIZE   EQU   8192          SIZE OF TOTAL GETMAIN\nECSUBPOL EQU   252           GETMAIN SUBPOOL #\nLINE     DS    CL124\nWORK01   DS    D\nWORK02   DS    D\nREGSAVE  DS    8F             SAVE AREA FOR UCB LINE BUILD RTN\nPARMPTRS DS    A              PTR TO PARM LIST PASSED TO IEFACTRT\nENTRYCDE DS    A              ENTRY CODE PASSED TO IEFACTRT\nCEPAADDR DS    A              ADDR OF COMM EXIT PARM AREA\nERRORSW  DS    XL1         ERROR INDICATOR USED BY SUBROUTINES\nERRJT4   EQU   X'01'       ERROR IN SMF TYPE 4 PROCESSOR\nERRJT5   EQU   X'02'       ERROR IN SMF TYPE 5 PROCESSOR\nERRDDNRT EQU   X'04'       ERROR IN DDNAME DISPLAY ROUTINE\nERREQUE  EQU   X'08'       ERROR IN REQUEUER INTERFACE PROCESSOR\nERRTT34  EQU   X'10'       ERROR IN TSO SESSION SMF TYPE 34 PROC.\nERRTT35  EQU   X'20'       ERROR IN TSO SESSION SMF TYPE 35 PROC\nERRTT30  EQU   X'40'       ERROR IN TSO SESSION SMF TYPE 30 PROC\nERRTT32  EQU   X'80'       ERROR IN TSO SESSION SMF TYPE 32 PROC.\nLIODEPTH DS    F             # OF COLUMNS NCSSARY FOR UCB LIST\nESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA\nESTAPARM DS    4F               PARAMETER LIST PASSED TO RETRY ROUTINE\n*              RETRY ROUTINE ADDRESS  NO SWDA OBTAINED\n*              RETRY ROUTINE ADDRESS  SWDA OBTAINED\n*              BASE REGISTER R12\n*              DATA REGISTER R13\n*\nTRTEND   DS    0H\nCORELGTH EQU   (((*-EXITCORE+7)/8)*8)\nECEND    EQU   (((*-EXITCORE+7)/8)*8) END OF USER-DEFINED VARIABLES\nECSIGNAL EQU   (ECWRKSIZ-ECEND)  REDUCE USER VARS IF ASSEM ERROR\nECSMFTAB EQU   EXITCORE+ECWRKSIZ\n         TITLE 'IEFACTRT - LIST OF PARMS PASSED TO IEFACTRT'\n         ACTRTMAP\n         TITLE 'IEFACTRT - COMMON EXIT PARAMETER AREA'\n         COMMEXIT\n         PRINT NOGEN\n         TITLE 'IEFACTRT - SMF RECORD LAYOUTS'\nSMFREC   DSECT\n         IFASMFR 30          SMF TYPE THIRTY LAYOUT\n         IHASDWA DSECT=YES         SDWA FOR ESTAE/SETRP MACRO\n         END   IEFACTRT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MCLEAR": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&NAME    MCLEAR &RC=0,&RE=NO,&LDSA=YES\n.*       SII MCEVOY RETURN MACRO\n.* CHANGE HISTORY:\n.* 28/10/81 RH : CREATED WITHOUT MODIFICATIONS FROM LOLA 'CLEAR'\n.*\n         AIF   ('&RE' EQ 'NO').LOAD13\n         AIF   ('&RE' EQ 'YES').RESET13\n         MNOTE 4,'INVALID SPECIFICATION FOR ''RE'' ''NO'' ASSUMED'\n         AGO   .LOAD13\n.RESET13 ANOP\n&NAME    LA    1,8\n         LA    13,0(13)\n         SR    13,1\n         L     0,0(13)\n         L     1,4(13)\n         LA    1,0(1)\n         L     13,12(13)\n         FREEMAIN R,LV=(0),A=(1)\n         AGO   .TESTRC\n.LOAD13  AIF   ('&LDSA' EQ 'YES').SET13\n         AIF   ('&LDSA' EQ 'NO').NOLDSA\n         MNOTE 4,'INVALID LDSA SPECIFIED ''NO'' ASSUMED'\n.NOLDSA  ANOP\n&NAME    LA    13,0(13)\n         AGO   .TESTRC\n.SET13   ANOP\n&NAME    L     13,4(13)\n.TESTRC  AIF   ('&RC' EQ '(15)').STR15\n         AIF   (T'&RC NE 'N').INVLCD\n         AIF   (&RC EQ 0).RC0\n         AIF   (&RC GE 1 AND &RC LE 4095).SETRC\n.INVLCD  ANOP\n         MNOTE 4,'RETURN CODE SPECIFICATION INVALID - IGNORED'\n         AGO   .RELOAD\n.STR15   ST    15,16(13)\n         AGO   .RELOAD\n.SETRC   LA    15,&RC\n         ST    15,16(13)\n         AGO   .RELOAD\n.RC0     SR    15,15\n         ST    15,16(13)\n.RELOAD  LM    14,12,12(13)\n         BR    14\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSETUP": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&CSECTNM MSETUP &R1,&R2,&LDSA=72,&RE=NO,&EQUATE=YES,&BITEQU=NO,        *\n               &VERSN=,                                                *\n               &SP=0\n.*       SII MCEVOY PROGRAM SETUP MACRO\n.* CHANGE HISTORY:\n.* 28/10/81 RH : CREATED FROM LOLA SETUP MACRO - SEE <=== FOR CHANGES\n.*\n         LCLA  &BASE1,&BASE2,&L,&L1,&L2,&LVN,&LDT,&LID,&S\n         LCLA  &SUBPOOL\n         LCLB  &B1,&B2,&B3,&B4,&B5\n         LCLC  &LBL(9),&VLBL,&AMP,&DATE,&ID          <==== RH\n&DATE    SETC  '&SYSDATE-&SYSTIME'                   <==== RH\n&AMP     SETC  '&&'\n&B1      SETB  ('&SYSECT' NE '')\n&B2      SETB  ('&CSECTNM' NE '')\n         AIF   (&B2).SETNM\n         AIF   (&B1).TSTBASE\n         MNOTE 4,'NO CSECT NAME GIVEN - CSECT IS UNAMED'\n.SETNM   ANOP\n&CSECTNM CSECT\n&ID      SETC  '&CSECTNM'                            <==== RH\n.TSTBASE ANOP\n         AIF   (T'&R1 EQ 'O' OR T'&R1 NE 'N').DEFLT\n&BASE1   SETA  &R1\n         AIF   (&BASE1 GT 1 AND &BASE1 LE 12).TSTBAS2\n         AIF   (&BASE1 EQ 13 AND '&RE' EQ 'NO').TSTBAS2\n.DEFLT   ANOP\n         MNOTE 4,'FIRST BASE REGISTER NOT SPECIFIED OR INVALID 12 SUBST*\n               ITUTED'\n&BASE1   SETA  12\n.TSTBAS2 ANOP\n         AIF   (T'&R2 EQ 'O').TSTVDAT\n         AIF   (T'&R2 NE 'N').MNOTE2\n&BASE2   SETA  &R2\n         AIF   (&BASE2 GT 1 AND &BASE2 LE 12 AND &BASE2 NE &BASE1).SETB*\n               2\n.MNOTE2  MNOTE 4,'SECOND BASE REGISTER INVALID / IGNORED'\n         AGO   .TSTVDAT\n.SETB2   ANOP\n&B3      SETB  (1)\n.TSTVDAT USING *,15\n         AIF   ('&VERSN' EQ '' AND '&DATE' EQ '' AND '&ID' EQ '').NONME\n         AIF   ('&VERSN' EQ '').TSTDTE\n&LVN     SETA  K'&VERSN\n         AIF   (&LVN LE 8).SETVSN\n&LVN     SETA  8\n.SETVSN  ANOP\n&S       SETA  &S+1\n&LBL(&S) SETC  '&VERSN'(1,&LVN)\n&VLBL    SETC  '&LBL(&S)'\n.TSTDTE  AIF   ('&DATE' EQ '').TSTID\n&LDT     SETA  K'&DATE\n         AIF   ('&DATE'(1,1) EQ '''' AND '&DATE'(&LDT,1) EQ '''').STL1A\n&L1      SETA  1\n&L2      SETA  0\n         AGO   .TSLOOP1\n.STL1A   AIF   (&LDT LE 2).DTER1\n&L1      SETA  2\n&L2      SETA  0\n&B5      SETB  (1)\n&LDT     SETA  &LDT-2\n.TSLOOP1 AIF   (&B5).TSCNTR1\n         AIF   (&L1 GT &LDT).EXLOOP1\n         AGO   .TB41\n.TSCNTR1 AIF   (&L1-1 GT &LDT).EXLOOP1\n.TB41    AIF   (&B4).TLSTCH1\n         AIF   ('&DATE'(&L1,1) EQ '''' OR '&DATE'(&L1,1) EQ '&AMP'(1,1)*\n               ).STB41\n.SETL2B  ANOP\n&L2      SETA  &L2+1\n.SETL1B  ANOP\n&L1      SETA  &L1+1\n         AIF   (&L2 EQ 20).EXLOOP1\n         AGO   .TSLOOP1\n.STB41   ANOP\n&B4      SETB  (1)\n         AGO   .SETL1B\n.TLSTCH1 AIF   ('&DATE'(&L1,1) NE '&DATE'(&L1-1,1)).DTER2\n&B4      SETB  (0)\n         AGO   .SETL2B\n.DTER1   MNOTE 4,'INVALID SPEC. FOR DATE KEYWORD - IGNORED'\n&LDT     SETA  0\n         AGO   .TSTID\n.DTER2   MNOTE 4,'UNPAIRED QUOTE  OR AMPERSAND IN DATE SPEC. IGNORED'\n&LDT     SETA  0\n         AGO   .TSTID\n.EXLOOP1 AIF   (&B4).DTER2\n&L1      SETA  &L1-1\n         AIF   (NOT &B5).STLDT1\n&L1      SETA  &L1-1\n.STLDT1  ANOP\n&LDT     SETA  &L2\n         AIF   (&LVN EQ 0).NOVN\n&S       SETA  &S+1\n&LBL(&S) SETC  ' '\n&LVN     SETA  &LVN+1\n.NOVN    ANOP\n&L2      SETA  0\n         AIF   (NOT &B5).DTECNT\n&L2      SETA  1\n.DTECNT  ANOP\n         AIF   (&L1 EQ 0).TSTID\n&S       SETA  &S+1\n         AIF   (&L1 GT 8).SPLT1\n&LBL(&S) SETC  '&DATE'(&L2+1,&L1)\n         AGO   .TSTID\n.SPLT1   ANOP\n&LBL(&S) SETC  '&DATE'(&L2+1,8)\n&L1      SETA  &L1-8\n&L2      SETA  &L2+8\n         AGO   .DTECNT\n.TSTID   AIF   ('&ID' EQ '').SETBRD1\n         AIF   ('&ID' EQ '*').DEFID\n&LID     SETA  K'&ID\n&B4      SETB  (0)\n&B5      SETB  (0)\n         AIF   ('&ID'(1,1) EQ '''' AND '&ID'(&LID,1) EQ '''').STL1C\n&L1      SETA  1\n&L2      SETA  0\n         AGO   .TSLOOP2\n.STL1C   AIF   (&LID LE 2).IDER1\n&L1      SETA  2\n&L2      SETA  0\n&B5      SETB  (1)\n&LID     SETA  &LID-2\n.TSLOOP2 AIF   (&B5).TSCNTR2\n         AIF   (&L1 GT &LID).EXLOOP2\n         AGO   .TB42\n.TSCNTR2 AIF   (&L1-1 GT &LID).EXLOOP2\n.TB42    AIF   (&B4).TLSTCH2\n         AIF   ('&ID'(&L1,1) EQ '''' OR '&ID'(&L1,1) EQ '&AMP'(1,1)).ST*\n               B42\n.SETL2C  ANOP\n&L2      SETA  &L2+1\n.SETL1D  ANOP\n&L1      SETA  &L1+1\n         AIF   (&L2 EQ 20).EXLOOP2\n         AGO   .TSLOOP2\n.STB42   ANOP\n&B4      SETB  (1)\n         AGO   .SETL1D\n.TLSTCH2 AIF   ('&ID'(&L1,1) NE '&ID'(&L1-1,1)).IDER2\n&B4      SETB  0\n         AGO   .SETL2C\n.IDER1   MNOTE 4,'INVALID SPEC FOR ID KEYWORD - IGNORED'\n&LID     SETA  0\n         AGO   .SETBRD1\n.IDER2   MNOTE 4,'UNPAIRED QUOTE  OR AMPERSAND IN ID SPEC. IGNORED'\n&LID     SETA  0\n         AGO   .SETBRD1\n.EXLOOP2 AIF   (&B4).IDER2\n&L1      SETA  &L1-1\n         AIF   (NOT &B5).STLID1\n&L1      SETA  &L1-1\n.STLID1  ANOP\n&LID     SETA  &L2\n         AIF   (&LVN EQ 0 AND &LDT EQ 0).SETL1\n&S       SETA  &S+1\n&LBL(&S) SETC  ' '\n&LDT     SETA  &LDT+1\n         AGO   .SETL1\n.DEFID   AIF   (&B1 OR &B2).TLDT\n&LID     SETA  0\n         AGO   .SETBRD1\n.TLDT    AIF   (&LVN EQ 0 AND &LDT EQ 0).NODT\n&S       SETA  &S+1\n&LBL(&S) SETC  ' '\n&LDT     SETA  &LDT+1\n.NODT    ANOP\n&S       SETA  &S+1\n         AIF   (&B2).SETID1\n&LBL(&S) SETC  '&SYSECT'\n         AGO   .KNAME\n.SETID1  ANOP\n&LBL(&S) SETC  '&CSECTNM'\n.KNAME   ANOP\n&LID     SETA  1\n.KNAME2  AIF   ('&LBL(&S)'(1,&LID) EQ '&LBL(&S)').SETBRD1\n&LID     SETA  &LID+1\n         AGO   .KNAME2\n.SETL1   ANOP\n&L2      SETA  0\n         AIF   (NOT &B5).IDCNT\n&L2      SETA  1\n.IDCNT   ANOP\n         AIF   (&L1 EQ 0).SETBRD1\n&S       SETA  &S+1\n         AIF   (&L1 GT 8).SPLT2\n&LBL(&S) SETC  '&ID'(&L2+1,&L1)\n         AGO   .SETBRD1\n.SPLT2   ANOP\n&LBL(&S) SETC  '&ID'(&L2+1,8)\n&L1      SETA  &L1-8\n&L2      SETA  &L2+8\n         AGO   .IDCNT\n.SETBRD1 ANOP\n&L1      SETA  4+2*((&LVN+&LDT+&LID+1)/2)\n         AIF   (&L1 EQ 4).SETSTM\n         B     *+&L1\n         DC    C'&LBL(1).&LBL(2).&LBL(3).&LBL(4).&LBL(5).&LBL(6).&LBL(7*\n               ).&LBL(8).&LBL(9)'\n         AGO   .NOCONST\n.NONME   AIF   (&B2 EQ 0).NOCONST\n         B     12(0,15)\n         DC    CL8'&CSECTNM'\n.NOCONST ANOP\n         AIF   ('&VLBL' EQ '').SETSTM\n         ENTRY &VLBL\n.SETSTM  ANOP\n&VLBL    STM   14,12,12(13)\n         AIF   (T'&LDSA EQ 'N').TSTZR0\n         MNOTE 4,'LSDA NOT SPECIFIED OR INVALID 72 SUBSTITUTED'\n         AGO   .L72\n.TSTZR0  AIF   (&LDSA NE 0).TESTL\n         AIF   (&BASE1 EQ 13).TESTL\n&L       SETA  0\n         AGO   .NORENT\n.TESTL   AIF    (&LDSA LE 71).SET72\n         AIF   (&LDSA GT 4064).SET4064\n&L       SETA  &LDSA\n         AGO   .TSTRENT\n.SET72   ANOP\n         MNOTE 4,'LDSA SPECIFIED IS LESS THAN 72 - 72 PROVIDED'\n.L72     ANOP\n&L       SETA  72\n         AGO   .TSTRENT\n.SET4064 ANOP\n         MNOTE 4,'LDSA GIVEN IS GREATER THAN 4064 - 4064 PROVIDED'\n&L       SETA  4064\n.TSTRENT ANOP\n         AIF   ('&RE' EQ 'NO').NORENT\n         AIF   ('&RE' EQ 'YES').RENT\n         MNOTE 4,'RE SPECIFICATION INVALID - RE=NO ASSUMED'\n         AGO   .NORENT\n.RENT    MNOTE 0,'RE-ENTRANT FORM OF MACRO SPECIFIED'\n         AIF   (&SP LE 255).SPOK\n         MNOTE 4,'SUBPOOL SPECIFIED GREATER THAN 255 - 0 ASSUMED'\n&SUBPOOL SETA  0\n         AGO   .SPSET\n.SPOK    ANOP\n&SUBPOOL SETA  &SP\n.SPSET   ANOP\n         LA    2,&L\n         LA    2,7(2)\n         LA    0,4088\n         NR    2,0\n         LA    2,8(2)\n         LR    0,2\n         LA    2,&SUBPOOL\n         SLL   2,24\n         OR    0,2\n         LR    2,0\n         GETMAIN R,LV=(0)\n         ST    2,0(1)\n         ST    1,4(1)\n         XC    8(4,1),8(1)\n         ST    13,12(1)\n         LA    1,8(1)\n         ST    1,8(13)\n         LR    13,1\n         L     1,4(13)\n         LM    0,2,20(1)\n         AGO   .SETBASE\n.NORENT  ANOP\n         MNOTE 0,'NON-RE-ENTRANT FORM OF MACRO USED'\n         AIF   (&L EQ 0).SETBASE\n&L1      SETA  4+2*((&L+1)/2)\n&L2      SETA  &L1+20\n         CNOP  4,8\n         BAL   1,*+&L1\n         DS    CL&L\n         XC    0(4,1),0(1)\n         ST    13,4(1)\n         ST    1,8(13)\n         LR    13,1\n         L     1,4(13)\n         LM    1,2,24(1)\n.SETBSES ANOP\n         AIF   (&BASE1 NE 13).SETBASE\n         AIF   (&B3).TWOBSES\n         USING *-&L2,&BASE1\n         AGO   .TSTEQU\n.TWOBSES USING *-&L2,&BASE1,&BASE2\n         LA    &BASE2,4095(&BASE1)\n         LA    &BASE2,1(&BASE2)\n         AGO   .TSTEQU\n.SETBASE BALR  &BASE1,0\n         AIF   (&B3).TWOREGS\n         USING *,&BASE1\n         AGO   .TSTEQU\n.TWOREGS USING *,&BASE1,&BASE2\n         LA    &BASE2,4095(&BASE1)\n         LA    &BASE2,1(&BASE2)\n.TSTEQU  ANOP\n         DROP  15\n         AIF   ('&EQUATE' EQ 'NO').TSTBIT\n         AIF   ('&EQUATE' EQ 'YES').EQU\n         MNOTE 4,'EQUATE SPECIFICATION INVALID - YES ASSUMED'\n.EQU     ANOP\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n.TSTBIT  AIF   ('&BITEQU' EQ 'NO').EXIT\n         AIF   ('&BITEQU' EQ 'YES').EQUBIT\n         MNOTE 4,'BIT EQUATE SPEC. INVALID - YES ASSUMED'\n.EQUBIT  ANOP\nBIT0     EQU   128\nBIT1     EQU    64\nBIT2     EQU    32\nBIT3     EQU    16\nBIT4     EQU     8\nBIT5     EQU     4\nBIT6     EQU     2\nBIT7     EQU     1\n.EXIT    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NCXPDSCN": {"ttr": 777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "NCXPDSCN TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          NCXPDSCN - PDS SCAN ETC UTILITY                        *\n*                                                                     *\n* NCXPDSCN.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* THIS PROGRAM WILL PERFORM VARIOUS USEFUL FUNCTIONS ON A CARD IMAGE  *\n* PARTITIONED DATASET (PDS):                                          *\n*                                                                     *\n* 1. TEXT SCAN                                                        *\n*    ---------                                                        *\n*    SCAN ALL OR SOME OF THE MEMBERS OF A PDS FOR OCCURRENCES OF      *\n*    PARTICULAR CHARACTER STRINGS.                                    *\n*    THE OUTPUT FROM THIS FUNCTION IS EITHER A SERIES OF CARD IMAGES  *\n*    OR A FORMATTED OUTPUT FOR USE IN CROSS REFERENCE FUNCTIONS.      *\n*                                                                     *\n* 2. MEMBER UNLOAD                                                    *\n*    -------------                                                    *\n*    UNLOAD ALL OR SOME OF THE MEMBERS OF A PDS TO A SEQUENTIAL FILE. *\n*                                                                     *\n* 3. DIRECTORY LIST                                                   *\n*    --------------                                                   *\n*    LIST ALL OR SOME OF THE DIRECTORY ENTRIES OF A PDS.              *\n*                                                                     *\n* THE SELECTION OF MEMBERS TO BE PROCESSED MAY BE BY THE FOLLOWING    *\n* CRITERIA:                                                           *\n*                                                                     *\n* 1. GENERIC                                                          *\n*    -------                                                          *\n*    THE MEMBERS ARE IDENTIFIED BY A PARTICULAR PREFIX.               *\n*                                                                     *\n* 2. SPECIFIC                                                         *\n*    --------                                                         *\n*    THE MEMBERS ARE IDENTIFIED BY NAME.                              *\n*                                                                     *\n* 3. FULL FILE                                                        *\n*    ---------                                                        *\n*    ALL MEMBERS IN A PDS ARE PROCESSED.                              *\n*                                                                     *\n* UP TO 40 CHARACTER STRINGS WHICH MAY INCLUDE SPECIAL CHARACTERS     *\n* AND EMBEDDED SPACES CAN BE SPECIFIED IN A SINGLE EXECUTION.         *\n*                                                                     *\n* THE MAXIMUM LENGTH OF A CHARACTER STRING IS 31 BYTES.               *\n*                                                                     *\n* THERE IS AN FACILITY FOR TWO EXITS WHICH ARE GIVEN CONTROL TO       *\n* SELECTIVELY OVERRIDE MEMBER SELECTION AND RECORD PROCESSING.        *\n*                                                                     *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* PLEASE NOTE THAT THE DETAILS BELOW ARE NOT A COMPLETE USER          *\n* DESCRIPTION OF THE UTILITY BUT ARE TO PROVIDE THE PROGRAMMER        *\n* WITH ENOUGH UNDERSTANDING TO MAINTAIN AND UNDERSTAND THE PROGRAM.   *\n*                                                                     *\n* THE PROGRAM RUNS AS A BATCH JOB. THE PDS IS ONLY OPEN FOR INPUT.    *\n*                                                                     *\n* JCL:                                                                *\n* ----                                                                *\n*                                                                     *\n* //S1     EXEC PGM=NCXPDSCN,PARM=........                            *\n* //STEPLIB DD  DSN=MAC1.LOAD,DISP=SHR                                *\n* //PDS     DD  DSN=.......,DISP=SHR       <-- NAME OF                *\n* //PDSDIR  DD  DSN=.......,DISP=SHR       <   PDS.                   *\n* //CARDIN1 DD  ....                       <-- SEARCH STRINGS.        *\n* //CARDIN2 DD  ....                       <-- MEMBER NAMES.          *\n* //SEQFL   DD  ....                       <-- UNLOADED FILE.         *\n* //XREFL   DD  ....                       <-- CROSS-REFERNENCE.      *\n* //LIST    DD  SYSOUT=*                   <-- EXECUTION MESSAGES.    *\n*                                                                     *\n* PARAMETERS:                                                         *\n* -----------                                                         *\n* THE PROGRAM PARAMETER SPECIFIES THE FUNCTIONS TO BE PERFORMED.      *\n* SOME OF THESE ARE MUTUALLY EXCLUSIVE. DEPENDING ON THE FUNCTIONS    *\n* TO BE PERFORMED AS SPECIFIED BY THE PARAMETER THEN EITHER OR        *\n* BOTH OF THE CARDIN DD STATEMENTS MUST BE PRESENT.                   *\n*                                                                     *\n* C - MEMBER SELECTION SPECIFIED BY CARDS (CARDIN2).                  *\n* F - ALL MEMBERS TO BE PROCESSED.                                    *\n* G - MEMBER SELECTION SPECIFIED BY GENERIC PREFIX (CARDIN2).         *\n* I - TEXT SCAN - IMAGE OUTPUT.                                       *\n* K - TEXT SCAN - FORMATTED OUTPUT.                                   *\n* L - DIRECTORY LISTING.                                              *\n* U - UNLOAD.                                                         *\n*                                                                     *\n* E0=......... NAME OF EXIT 0 (TO OVERRIDE MEMBER SELECTION)          *\n* E1=......... NAME OF EXIT 1 (TO OVERRIDE RECORD PROCESSING)         *\n         EJECT\n*                                                                     *\n* CHARACTER STRINGS:                                                  *\n* ------------------                                                  *\n*                                                                     *\n* UP TO 40 31 BYTE CHARACTER STRINGS FOR SEARCH MAY BE SPECIFIED      *\n* BY THE CARDIN1 DD STATEMENT. CHARACTER STRINGS ARE DELIMITED BY     *\n* COMMAS. THEY MAY BE SPECIFIED ON SEPARATE STATEMENTS IN WHICH CASE  *\n* A TRAILING COMMA IS NOT NECESSARY. A SPECIAL FORM MAY BE USED TO    *\n* SPECIFY SEARCH STRING WITH EMBEDDED SPACES OR COMMAS. EG. =' COPY '.*\n*                                                                     *\n* EXITS                                                               *\n* -----                                                               *\n*                                                                     *\n* EXIT 0 - INVOKED   - BEFORE A MEMBER IS PROCESSED                   *\n*          INTERFACE - STANDARD OS: P1 -> MEMBER NAME                 *\n*          RETURN    - 0  CONTINUE                                    *\n*               CODE  \u00ac0  DO NOT PROCESS THIS MEMBER                  *\n*                                                                     *\n* EXIT 1 - INVOKED   - BEFORE A RECORD IS PROCESSED                   *\n*          INTERFACE - STANDARD OS: P1 -> RECORD                      *\n*          RETURN    - 0 CONTINUE                                     *\n*               CODE  \u00ac0 DO NOT PROCESS THIS RECORD                   *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.3 MESSAGES                                                 *\n*                                                                     *\n* ALL MESSAGES ARE DIRECTED TO THE FILE 'LIST'. THESE INCLUDE DETAILS *\n* OF THE PARAMETERS USED AND CARD INPUT. THE DIRECTORY LISTING IS ALSO*\n* DIRECTED TO THIS FILE.\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.4 ABEND CODES                                              *\n*                                                                     *\n* USER 100 - NO PARAMETER HAS BEEN SUPPLIED.                          *\n*                                                                     *\n* USER 101 - PARAMETER SPECIFIED 'CARD' AND 'GENERIC' SELECT.         *\n*                                                                     *\n* USER 102 - PARAMETER SPECIFIED 'IMAGE' AND 'FORMATTED' OUTPUT.      *\n*                                                                     *\n* USER 103 - SYNTAX ERROR IN CHAR STRING PREFIXED BY '='.             *\n*                                                                     *\n* USER 104 - INVALID EXIT NAME.                                       *\n*                                                                     *\n* USER 152 - INCORRECTLY SPECIFIED GENERIC MEMBER PREFIX.             *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n* MOVE TO MAC1.ASM AND PASMAL.                                        *\n*                                                                     *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* CHANGE HISTORY:                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n*                                                                     *\n* .. ... 81 PTL   V01     CREATED                                     *\n* 05 NOV 82 RH    V01     ADDED PROLOGUE                              *\n*                         LOCAL MACROS REMOVED                        *\n*                         RETURN CODES CHANGED TO ABENDS              *\n*                         SOME CODE TIDYING                           *\n*                         ABEND DESCRIPTIONS CLARIFIED                *\n*                         PREPARE FOR EXIT BY CODE REARRANGEMENT      *\n* 09 NOV 82 RH    V02     ADDED EXIT0 AND EXIT1                       *\n* 16 NOV 82 RH    V02     ADDED SOME COMMENTS AND SUGGESTIONS         *\n*                                                                     *\n* WHENEVER YOU MAKE ANY FUNCTIONAL CHANGES TO THIS PROGRAM PLEASE     *\n* UPDATE THE DOCUMENTATION IN 'ISD INFO' AND INFORM ISD STAFF.        *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n* 05 NOV 82 RH : 1. AS MAINTENANCE IS PERFORMED GET RID OF:           *\n*                   1. RELATIVE BRANCHES.                             *\n*                   2. RECODE 'OI' 'NI' INSTRUCTIONS FOR FLAG HANDLING*\n* 10 NOV 82 RH : 2. ADD FURTHER EXITS IF NECESSARY.                   *\n*                3. PROVIDE FACILITY TO MODIFY RECORD AREA TO SUPPORT *\n*                   RECORD SCAN RESTRICTION TO CERTAIN COLUMNS.       *\n*                                                                     *\n* 16 NOV 82 RH : 1. BUFFER BSAM INPUT                                 *\n*                2. EXTEND NO. OF SEARCH STRINGS AND LENGTH OF SEARCH *\n*                   ARGUMENTS BY:                                     *\n*                   - VARIABLE LENGTH KEYWORD TABLE ENTRY             *\n*                   - LENGTH TO 1 BYTE                                *\n*                   - LARGER GETMAIN                                  *\n*                   - USE DSECT                                       *\n*                3. OPTIMIZE 'TRT' BY DECREMENTING LENGTH             *\n*                                                                     *\n*                                                                     *\n* KNOWN PROBLEMS:                                                     *\n* 05 NOV 82 RH : CODE TO PROCESS DELIMITERS ON SPECIAL CHAR STRING    *\n*                SPECIFICATION DOESN'T WORK ( U152 + 0C4 ).           *\n*                                                                     *\n* 10 NOV 82 RH : S201 WHEN USING SEARCH STRING ='COPY '               *\n* 11 NOV 82 RH : COULD NOT REPRODUCE THIS PROBLEM                     *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* THE PROGRAM IS A SIMPLE LINEAR STRUCTURE WITH SUBROUTINES.          *\n* BSAM AND QSAM ARE USED.                                             *\n* FIND IS USED.                                                       *\n* RDJFCB AND LOAD ARE USED.                                           *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCXPDSCN.8 PROGRAM LOGIC OVERVIEW                                   *\n*                                                                     *\n* 1. PROCESSING OUTLINE:                                              *\n*    - READ PARAMETERS                                                *\n*    - OPEN FILES                                                     *\n*    - LOAD SCAN STRINGS INTO TABLES (SEE BELOW)                      *\n*    - FOR EACH MEMBER TO BE SELECTED:                                *\n*      READ DIRECTORY ENTRY                                           *\n*      LOCATE MEMBER                                                  *\n*      READ MEMBER                                                    *\n*      PROCESS MEMBER CREATING VARIOUS OUTPUTS                        *\n*    - CLOSE FILES                                                    *\n*                                                                     *\n* 2. TABLES USED:                                                     *\n*                                                                     *\n*    TRTAB - INITIALLY 256X'00' IS LOADED WITH ALL DISTINCT SCAN      *\n*            STRING INITIAL CHARACTERS.                               *\n*            THE RECORDS ARE SCANNED BY 'TRT' AGAINST THIS TABLE.     *\n*            IF A MATCH IS FOUND THEN THE OFFSET OF THE MATCHED       *\n*            CHARACTER IN TRTAB (R2 * 4) IS USED TO INDEX INTO        *\n*                                                                     *\n*   ADDRESS TABLE                                                     *\n*          - A POINTER WILL BE FOUND TO LOCATE THE FIRST SCAN STRING  *\n*            IN THE                                                   *\n*                                                                     *\n*   KEYWORD TABLE                                                     *\n*          - EACH 37 BYTE ENTRY IS A 2 BYTE LENGTH (OF SCAN STRING)   *\n*            THE SCAN STRING AND A POINTER TO THE NEXT SCAN STRING    *\n*            WITH THE SAME INITIAL CHARACTER OR ZERO.                 *\n*                                                                     *\n*****                                                             *****\n         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - PROGRAM PROLOGUE'\n*****                                                             *****\n*                                                                     *\n* ID:          NCXPDSCN - PDS SCAN ETC UTILITY                        *\n*                                                                     *\n* ENTRY INTFCE: STANDARD OS WITH PARM.                                *\n*                                                                     *\n* EXIT  INTFCE: STANDARD OS.                                          *\n*                                                                     *\n* RETURN CODES:RC = 0          OK                                     *\n*                                                                     *\n*                                                                     *\n*****                                                             *****\n         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - PROGRAM CODE'\n         PRINT NOGEN\n*        THE REGISTER USAGE COMMENTS ARE INCOMPLETE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3                  -> JFCB AND WORK\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10                 LINK REGISTER\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n************************************************************\n*        STANDARD O/S LINKAGE CONVENTIONS                  *\n************************************************************\n         SPACE\nNCXPDSCN CSECT\n         STM   R14,R12,12(R13)          REGS TO CALLER SAVE AREA\n         USING NCXPDSCN,R12             ESTABLISH BASE REG\n         LR    R12,R15                  LOAD CSECT START ADDRESS\n         LA    R11,SAVEAREA             THIS CSECT SAVE AREA\n         ST    R11,8(R13)               FORWARD LINK\n         ST    R13,SAVEAREA+4           BACKWARD LINK\n         LR    R13,R11                  ESTABLISH THIS CSECT SAVE\n         B     BEGIN                    BEGIN PROBLEM PROCESSING\n         SPACE\n         DS    0F\n         DC    CL8'NCXPDSCN'            CSECT NAME\n         DC    CL4' V02'                VERSION\n         DC    CL8'&SYSDATE'            DATE ASSEMBLED\n         DC    CL7' &SYSTIME'           TIME ASSEMBLED\nSAVEAREA DC    18F'0'                   REGISTER SAVE AREA\nRETCODE  DC    F'0'\n         EJECT\n************************************************************\n*        BEGIN                                             *\n************************************************************\n         SPACE\nBEGIN    DS    0H\n         LA    R11,RECADDR        ESTABLISH SECOND BASE REGISTER\n         USING RECADDR,R11          AT START OF DATA AREA\n         USING INFMJFCB,R3        ESTABLISH ADDRESSABILITY FOR JFCB\n         LA    R10,STK10          LOAD STACK ADDRESS\n         ST    R10,STKADDR          AND STORE\n         SPACE\n********************************************************************\n*        CHECK FOR PRESENCE OF PARAMETER                           *\n********************************************************************\n         SPACE\n         L     R3,0(R1)           LOAD PARM ADDRESS\n         LH    R7,0(R3)           LOAD PARM LENGTH FOR LOOP CONTROL\n         LTR   R7,R7              Q - PARM ABSENT ?\n         BNZ   P00PARM            N CONTINUE\n         ABEND 100                Y ABEND USER 100\n         EJECT\n*******************************************************************\n*        PARAMETER CHECKING                                       *\n*******************************************************************\n         SPACE\nP00PARM  DS    0H\n         LA    R3,2(R3)           POINT PAST 'LL' IN PARM STRING\nP00TEST  EQU   *\n*\n*        CODE IN THIS SECTION IS PRESENTED AS SETS IN THE\n*        FOLLOWING FORM :\n*         CHECK PARM OPTION (CLI)\n*         SET ON APPROPRIATE OPTION BIT (OI)\n*         SET ON BIT TO INDICATE THAT A PARTICULAR DDNAME IS TO OPENED\n*\n         CLI   0(R3),C'C'         CHECK FOR CARD I/P\n         BNE   P00QG                BRANCHING IF NONE\n         OI    OPTFLG1,CRDOPT     SET ON CARDS FLAG\n         OI    DDFLAG1,CARD2DD    SET ON DDNAME=CARDIN2 FLAG\n         SPACE\nP00QG    CLI   0(R3),C'G'         CHECK FOR GENERIC OPTION\n         BNE   P00QL                BRANCHING IF NONE\n         OI    OPTFLG1,GENOPT     SET ON GENERIC FLAG\n         OI    DDFLAG1,CARD2DD    SET ON DDNAME=CARDIN2 FLAG\n         SPACE\nP00QL    CLI   0(R3),C'L'         CHECK FOR LIST OPTION\n         BNE   P00QD                BRANCHING IF NONE\n         OI    OPTFLG1,LSTOPT     SET ON LIST FLAG\n         SPACE\nP00QD    CLI   0(R3),C'D'         CHECK FOR DSN LABEL LIST OPTION\n         BNE   P00QU                BRANCHING IF NONE\n         OI    OPTFLG1,LSTOPT     SET ON LIST FLAG\n         OI    OPTFLG1,DSNOPT     SET ON DSN FLAG\n         SPACE\nP00QU    CLI   0(R3),C'U'         CHECK FOR UNLOAD OPTION\n         BNE   P00QF                BRANCHING IF NONE\n         OI    OPTFLG1,UNLOPT     SET ON UNLOAD FLAG\n         OI    DDFLAG1,SEQFDD     SET ON DDNAME=SEQFL FLAG\n         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG\n         SPACE\nP00QF    CLI   0(R3),C'F'         CHECK FOR FULL FILE\n         BNE   P00QI                BRANCHING IF NONE\n         OI    OPTFLG1,ALLOPT     SET ON FULL FILE FLAG\n         SPACE\nP00QI    CLI   0(R3),C'I'         CHECK FOR TEXT SCAN (IMAGE)\n         BNE   P00QK                BRANCHING IF NONE\n         OI    OPTFLG1,IMGOPT     SET ON IMAGE FLAG\n         OI    DDFLAG1,CARD1DD    SET ON DDNAME=CARDIN1 FLAG\n         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG\n         OI    DDFLAG1,XREFDD     SET ON DDNAME=XREFL FLAG\n         SPACE\nP00QK    CLI   0(R3),C'K'         CHECK FOR TEXT SCAN (KEY/FMT)\n         BNE   P00QE0               BRANCHING IF NONE\n         OI    OPTFLG1,FMTOPT     SET ON FORMAT FLAG\n         OI    DDFLAG1,CARD1DD    SET ON DDNAME=CARDIN1 FLAG\n         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG\n         OI    DDFLAG1,XREFDD     SET ON DDNAME=XREFL FLAG\n         SPACE\nP00QE0   CLC   =C'E0=',0(R3)      Q - EXIT 0 ?\n         BNE   P00QE1             N\n         LA    R9,E0NAME          Y POINT TO NAME AND ADDRESS FIELD\n         BAL   R10,P911EXIT       GO GET EXIT NAME AND LOAD IT\n         B     P00BUMP\n         SPACE\nP00QE1   CLC   =C'E1=',0(R3)      Q - EXIT 1 ?\n         BNE   P00BUMP            N\n         LA    R9,E1NAME          Y POINT TO NAME AND ADDRESS FIELD\n         BAL   R10,P911EXIT       GO GET EXIT NAME AND LOAD IT\n         SPACE\nP00BUMP  LA    R3,1(0,R3)         INCREMENT PARM POINTER\n         BCT   R7,P00TEST         LOOP CONTROL\n*\n*        ERROR CHECKING\n*\n         TM    OPTFLG1,ALLCRD     CHECK FOR\n         BO    P00A                 ALL INVALID\n         TM    OPTFLG1,ALLGEN         COMBINATIONS OF\n         BO    P00A                     MEMBER SELECTION\n         TM    OPTFLG1,CRDGEN             CARD\n         BO    P00A\n         B     P00B\nP00A     EQU   *\n         MVC   RETCODE,=F'101'            SETTING BAD CODE\n         B     P01OPEN                      IF ANY FOUND\nP00B     EQU   *\n         TM    OPTFLG1,IMGFMT     CHECK FOR\n         BO    P00C                 TEXT OPTIONS\n         B     P01OPEN\nP00C     EQU   *\n         MVC   RETCODE,=F'102'        SETTING BAD CODE\n         B     P01OPEN                  IF ANY FOUND\n         EJECT\n*******************************************************************\n*        OPEN FILES                                               *\n*******************************************************************\n         SPACE\nP01OPEN  EQU   *\n         OPEN  (PDSDIR,INPUT)     OPEN PDS DIRECTORY\n         OPEN  (LIST,OUTPUT)      OPEN LIST FILE\n         TM    DDFLAG1,PDSDD      CHECK FOR USE OF PDS\n         BZ    P01A                 BRANCHING IF NONE\n         OPEN  (PDS,INPUT)        OPEN PDS\nP01A     EQU   *\n         TM    DDFLAG1,CARD1DD    CHECK FOR USE OF CARDIN1\n         BZ    P01B                 BRANCHING IF NONE\n         OPEN  (CARDIN1,INPUT)    OPEN CHAR STRING CARDS\nP01B     EQU   *\n         TM    DDFLAG1,CARD2DD    CHECK FOR USE OF CARDIN2\n         BZ    P01C                 BRANCHING IF NONE\n         OPEN  (CARDIN2,INPUT)    OPEN MEMBER CARD FILE\nP01C     EQU   *\n         TM    DDFLAG1,XREFDD     CHECK FOR USE OF XREFL\n         BZ    P01D                 BRANCHING IF NONE\n         OPEN  (XREFL,OUTPUT)     OPEN XREF FILE\nP01D     EQU   *\n         TM    DDFLAG1,SEQFDD     CHECK FOR USE OF SEQFL\n         BZ    P01E                 BRANCHING IF NONE\n         OPEN  (SEQFL,OUTPUT)     OPEN UNLOAD FILE\nP01E     EQU   *\n         RDJFCB PDS               READ JFCB FOR PDS\n         EJECT\n***************************************************************\n*        CHECK FOR GENERIC COMPARE OPTION                     *\n***************************************************************\n         SPACE\nP02GEN   EQU   *\n         TM    OPTFLG1,GENOPT     CHECK GENERIC FLAG\n         BZ    P03REPT              BRANCHING IF NOT SET\n         GET   CARDIN2,WKCARD     READ MEMBER NAME CARD\n         TRT   WKCARD,TRTABF      CHECK FOR SPACE\n         BC    8,P910ABRT           ABORTING IF NOT FOUND\n         LA    R5,WKCARD          ADDRESS CARD AREA\n         SR    R1,R5              CALCULATE LENGTH OF GENERIC\n         S     R1,=F'1'           DECREMENT\n         STH   R1,STGEN           STORE LENGTH\n         MVC   STGEN+2(8),WKCARD    WITH DATA\n         MVC   LST2SEL,STGEN+2    MOVE SELECT TO HEADING\n         EJECT\n*****************************************************************\n*        PRINT OPTIONS IN EFFECT                                *\n*****************************************************************\n         SPACE\nP03REPT  EQU   *\n*\n*        MAIN HEADINGS\n*\n         MVC   HD1,PARAHD1        MOVE PARAMETER HEADINGS\n         MVC   HD2,PARAHD2          TO WORK HEADING AREA\n         BAL   R10,P905HDS        PERFORM HEADINGS\n*\n*        PRESENT OPTIONS\n*\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+24(8),=C'TEXT   :'  AND LABEL\n         TM    OPTFLG1,IMGOPT     CHECK FOR IMAGE (I)\n         BZ    *+10\n         MVC   PLINE+39(5),=C'IMAGE'\n         TM    OPTFLG1,FMTOPT           AND FORMAT\n         BZ    *+10\n         MVC   PLINE+45(6),=C'FORMAT'     TEXT SCAN OPTIONS\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         BAL   R10,P907PRNT         AND PRINT\n         MVC   PLINE+24(4),DASHES PRINT\n         BAL   R10,P907PRNT         UNDERLINING CHARACTERS\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+24(8),=C'MEMBER :'   AND LABEL\n         TM    OPTFLG1,ALLOPT     CHECK FOR FULL FILE (F)\n         BZ    *+10\n         MVC   PLINE+39(3),=C'ALL'\n         TM    OPTFLG1,CRDOPT           AND CARD I/P (C)\n         BZ    *+10\n         MVC   PLINE+43(4),=C'CARD'\n         TM    OPTFLG1,GENOPT           AND GENERIC (G)\n         BZ    *+10\n         MVC   PLINE+48(7),=C'GENERIC'    MEMBER SELECT OPTIONS\n         BAL   R10,P907PRNT                 FOR PRINTING\n         MVC   PLINE+24(6),DASHES PRINT\n         BAL   R10,P907PRNT         UNDERLINING CHARACTERS\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+24(36),=C'EXITS :        E0=12345678 E1=12345678'\n         MVC   PLINE+42(8),E0NAME\n         MVC   PLINE+54(8),E1NAME\n         BAL   R10,P907PRNT\n         MVC   PLINE+24(5),DASHES PRINT\n         BAL   R10,P907PRNT         UNDERLINING CHARACTERS\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+24(8),=C'OTHER  :'  AND LABEL\n         TM    OPTFLG1,UNLOPT          FOR OTHER OPTIONS\n         BZ    *+10                      I.E. UNLOAD\n         MVC   PLINE+39(6),=C'UNLOAD'\n         TM    OPTFLG1,LSTOPT                 LIST\n         BZ    *+10\n         MVC   PLINE+46(4),=C'LIST'\n         TM    OPTFLG1,DSNOPT             AND DSN\n         BZ    *+10\n         MVC   PLINE+51(3),=C'DSN'\n         BAL   R10,P907PRNT               AND PRINT THEM\n         MVC   PLINE+24(5),DASHES PRINT\n         BAL   R10,P907PRNT         UNDERLINING CHARACTERS\n*\n*        PREPARE FOR PRINTING CHARACTER STRINGS\n*\n         TM    OPTFLG1,FMTOPT     CHECK FOR TEXT SCAN FORMATTED\n         BO    *+16                 BRANCHING IF SET ON\n         TM    OPTFLG1,IMGOPT     CHECK FOR TEXT SCAN (IMAGE)\n         BO    *+8                  BRANCHING IF SET ON\n         B     P03A               ELSE BYPASS SUB-HEADINGS\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+16(27),CRDLBL  ELSE MOVE IN HEADER\n         BAL   R10,P907PRNT           AND PRINT IT\n         MVC   PLINE+16(27),DASHES PRINT\n         BAL   R10,P907PRNT         UNDERLINING CHARACTERS\n         MVI   PLINE,C'0'         MOVE IN CONTROL CHARACTER\n*\n*        SET UP DSN IN HEADING IF REQUIRED\n*\nP03A     EQU   *\n         TM    OPTFLG1,CRDOPT     CHECK FOR MEMBER CARD I/P\n         BZ    *+10                 BRANCHING IF NOT FOUND\n         MVC   LST2SEL,=C'MEMBERS' ELSE IDENTIFY OPTION IN HEADING\n         TM    OPTFLG1,ALLOPT     CHECK FOR FULL FILE PROCESSING\n         BZ    P03B                 BRANCHING IF NOT FOUND\n         ST    R3,STK3            SAVE REG3\n         L     R3,JFCBAD          LOAD JFCB ADDRESS\n         MVC   LSTTEMPS(44),JFCBDSNM   AND MOVE DSN TO HEADING\n         L     R3,STK3            RESTORE REG3\nP03B     EQU   *\n         CLC   RETCODE,=F'0'      CHECK FOR PARAMETER ERROR\n         BNE   PEOJ               GO TO EOJ IF ERRORS DETECTED\n         TM    OPTFLG1,LSTOPT     CHECK FOR LISTING OPTION\n         BZ    *+16                 BRANCHING IF NONE\n         MVC   HD1,LSTHD1         SET UP DIRECTORY\n         MVC   HD2,LSTHD2           LISTING HEADERS\n         TM    DDFLAG1,CARD1DD    CHECK IF CARDIN1 IS OPEN\n         BO    P04LOAD              BRANCHING TO CHAR. LOAD IF ON\n         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION\n         BZ    P05A                 BRANCHING PAST PDS LOGIC IF OFF\n         B     P05START             ELSE GO TO SET UP PDS RETRIEVAL\n         EJECT\n*****************************************************************\n*        LOAD CHARACTER STRING DATA                             *\n*****************************************************************\n         SPACE\nP04LOAD  EQU   *\n         LA    R2,2904            DEFINE TABLE SIZE\n         GETMAIN R,LV=(R2)        GET TABLE AREA\n         LR    R9,R1              LOAD TABLE ADDRESS TO R9\n         USING CHARTAB,R9         ESTABLISH ADDRESSABILITY\n         ST    R9,TABADDR         STORE TABLE ADDRESS\n         LR    R3,R2              LOAD TABLE LENGTH TO R3\n         LR    R2,R9                AND ADDRESS TO R2\n         SR    R4,R4              CLEAR R4\n         LR    R5,R4                AND R5\n         MVCL  R2,R4              CLEAR TABLE TO BINARY ZEROS\n         SR    R3,R3              CLEAR R3\n         LA    R4,TRTAB           ADDRESS TRANS TABLE\n         LA    R6,1880(R9)        ADDRESS ADDR. TABLE\nP04READ  EQU   *\n         GET   CARDIN1,WKCARD     READ CHAR. STRING CARD\n         LA    R5,WKCARD            AND ADDRESS IT\n         EJECT\n*****************************************************************\n*        THE FOLLOWING PARAGRAPHS ENTER THE INPUT               *\n*        CHARACTER STRINGS TO A SERIES OF TABLES.               *\n*        PARAGRAPH P04A IS MAINLY CONCERNED WITH                *\n*        THOSE STRINGS CONTAINED IN USER SELECTED               *\n*        DELIMITERS E.G. =' JOB ('.                             *\n*****************************************************************\nP04A     EQU   *\n         MVI   DELIM,X'00'        CLEAR DELIMITER\n         CLI   0(R5),C'='         CHECK FOR EQUAL SIGN\n         BNE   P04B                 BRANCHING IF NOT FOUND\n         CLI   1(R5),C' '         CHECK FOR DELIMITING SPACE\n         BNE   *+14                 BRANCHING IF NOT FOUND\n         MVC   RETCODE,=F'103'    SET RETURN CODE\n         B     PEOJ                 AND TERMINATE RUN\n         CLI   1(R5),C','         CHECK FOR DELIMITING COMMA\n         BNE   *+14                 BRANCHING IF NOT FOUND\n         MVC   RETCODE,=F'103'    SET RETURN CODE\n         B     PEOJ                 AND TERMINATE RUN\n         MVC   DELIM,1(R5)        SAVE DELIMITING CHARACTER\n         LA    R2,TRTABF          ADDRESS DELIMITER TABLE\n         IC    R3,1(R5)           LOAD DELIMITER TO R3\n         LA    R2,0(R2,R3)        ADDRESS DELIMITER ENTRY\n         NI    TRTABF+64,X'00'    SET OFF SPACE\n         NI    TRTABF+107,X'00'     AND COMMA DELIMITERS\n         MVC   0(1,R2),DELIM      SET ON NEW DELIMITER\n         A     R5,=F'2'           INCREMENT R5\n         EJECT\n****************************************************************\n*        THE LOADING TO THE 3 TABLES IS DONE AT                *\n*        THIS POINT FOR BOTH TYPES OF STRING. NOTE             *\n*        THAT P04A HAS EFFECTIVELY EXTRACTED THE               *\n*        DATA CONTENT OF THE INPUT CARD FROM THE               *\n*        DELIMITERS BY AMENDING THE DELIMITER TABLE TRTABF.    *\n****************************************************************\nP04B     EQU   *\n         SR    R3,R3              CLEAR R3\n         IC    R3,0(R5)           LOAD LEAD CHAR. TO R3\n         LA    R3,0(R3,R4)        ADDRESS TRANS TAB CHAR.\n         MVC   0(1,R3),0(R5)        AND MOVE IN\n         TRT   0(80,R5),TRTABF    CHECK FOR END OF STRING\n         BC    8,P910ABRT           ABORTING IF NOT FOUND\n         STH   R2,TCHAR           STORE IN TEST AREA\n         SR    R1,R5              CALCULATE LENGTH\n         SH    R1,=H'1'             AND DECREMENT\n         STH   R1,0(R9)           STORE LENGTH\n         EX    R1,MVCINST6          WITH TABLE ENTRY\n         EX    R1,MVCINST5        MOVE TO PRINT LINE\n         BAL   R10,P907PRNT         AND PRINT\n         SR    R1,R1              CLEAR R1\n         LH    R1,0(R9)             AND RESTORE LENGTH TO IT\n         SR    R3,R4              RESET R3\n         MH    R3,=H'4'           CALCULATE DISPL. IN\n         LA    R6,0(R3,R6)          ADDRESS TABLE\n         CLC   0(4,R6),NULL       CHECK IF ADDRESS ALREADY LOADED\n         BE    *+10                 BRANCHING IF NOT\n         MVC   33(4,R9),0(R6)     ELSE STORE ADDRESS BEFORE\n         ST    R9,0(R6)             BUILDING CHAIN\n         A     R9,=F'37'          POINT TO NEXT TABLE ENTRY\n         L     R6,TABADDR         RESTORE TABLE ADDR. TO R6\n         LA    R6,1880(R6)          AND POSITION TO ADDRESSES\n         CLI   DELIM,X'00'        CHECK FOR USE OF NEW DELIMITER\n         BE    P04C                 BRANCHING IF NOT USED\n         LA    R2,TRTABF          ADDRESS DELIMITER TABLE\n         IC    R3,DELIM           LOAD DELIMITER TO R3\n         LA    R2,0(R2,R3)        ADDRESS DELIMITER ENTRY\n         OI    TRTABF+64,X'40'    RESET SPACE\n         OI    TRTABF+107,X'6B'     AND COMMA DELIMITERS\n         NI    0(R2),X'00'        TURN OFF NEW DELIMITER\n         LA    R5,1(0,R5)         INCREMENT R5 PAST DELIMITER\nP04C     EQU   *\n         CLI   TCHAR+1,C' '       CHECK FOR END OF CARD\n         BE    P04READ              READING NEXT CARD IF FOUND\n         LA    R5,2(R1,R5)        ELSE POSITION TO NEXT ENTRY\n         CLI   0(R5),C' '         RECHECK IF SPECIAL DELIMITER\n         BE    P04READ              READING NEXT CARD IF SPACE NEXT\n         B     P04A               ELSE CONTINUE STRING SEARCH\n         EJECT\n*****************************************************************\n*        INITIALIZATION                                         *\n*****************************************************************\n         SPACE\nP05START EQU   *\n         LA    R1,PDS             ADDRESS OF DCB\n         LH    R2,62(R1)          BLKSIZE FROM DCB\n         STH   R2,BLKSIZE         SAVE FOR LATER USE\n         LH    R4,82(R1)          RECORD LENGTH\n         GETMAIN R,LV=(R2)        GETMAIN DATA RECORD INPUT AREA\n         SPACE\n         ST    R1,RECADDR         SAVE ADDRESS OF INPUT AREA\n         SPACE\n         SRDL  R2,32              SET UP FOR MULTIPLY\n         DR    R2,R4              DIVIDE BLKSIZE BY LRECL\n         ST    R3,NUMREC          SAVE RECORDS PER BLOCK\n         SPACE\nP05A     EQU   *\n         TM    OPTFLG1,LSTOPT     CHECK FOR LISTING OPTION\n         BZ    P05B                 BRANCHING IF NOT SET\n         BAL   R10,P905HDS        PERFORM HEADINGS\nP05B     EQU   *\n         TM    OPTFLG1,CRDOPT     CHECK FOR CARD INPUT\n         BO    P05C                 BRANCHING IF SET\n         B     P06RDIR            GO TO READ DIRECTORY\n         SPACE\nP05C     EQU   *\n         GET   CARDIN2,WKCARD     READ MEMBER CARD\n         MVC   MEMBER,WKCARD      MOVE TO MEMBER NAME\n         BAL   R10,P908PBLD       GENERATE DIRECTORY PRINT LINE\n         B     P06C               BYPASS DIRECTORY READ\n         EJECT\n*****************************************************************\n*        PROCESS DIRECTORY BLOCK                                *\n*****************************************************************\n         SPACE\nP06RDIR EQU    *\n         GET   PDSDIR,PDSBLK      GET DIRECTORY BLOCK\n         SPACE\n         LA    R2,PDSBLK          ADDRESS BLOCK I-O\n         LH    R3,0(R2)           LOAD BLOCK LENGTH TO REG 3\n         LA    R3,0(R2,R3)        ADDRESS END OF DIRECTORY BLOCK\n         ST    R3,EODIR           SAVE EOD ADDRESS\n         LA    R2,2(R2)           ADDRESS PAST BLOCK PREFIX\n         ST    R2,ENTADDR         INIT ADDRESS OF CURRENT ENTRY\n         SPACE\nP06A     EQU   *\n         L     R3,ENTADDR         GET ADDRESS OF NEXT ENTRY\n         CLC   0(8,R3),HIGHVALS   IS THIS END OF DIRECTORY\n         BE    PEOJ                   YES - BRANCH\n         CLI   0(R3),X'00'        IS THIS END OF BLOCK\n         BE    P06RDIR                YES - BRANCH\n         C     R3,EODIR           IS CURRENT ADDRESS PAST EOD\n         BNL   P06RDIR                YES - BRANCH\n         MVC   MEMBER,0(R3)       CAPTURE MEMBER NAME\nP06B     EQU   *\n         NI    GENFLG1,ALIASOFF   TURN OFF ALIAS CONDITION\n         LA    R3,11(R3)          MOVE PAST ENTRY NAME AND TTR\n         TM    0(R3),X'30'        CHECK FOR ALIAS\n         BNO   *+8                  BRANCHING IF NOT FOUND\n         OI    GENFLG1,ALIASON    TURN ON ALIAS CONDITION\n         NI    0(R3),X'0F'        CLEAR FLAG BITS\n         SR    R2,R2              CLEAR WORK REG.\n         IC    R2,0(R3)           GET USER HALF WORD COUNT\n         SLL   R2,1               MULTIPLY BY 2 FOR BYTE COUNT\n         LA    R2,1(R3,R2)        POINT TO NEXT ENTRY\n         TM    GENFLG1,ALIAS      CHECK FOR ALIAS CONDITION\n         BZ    *+8                  BRANCHING IF NOT\n         LA    R2,32(R2)            ELSE STEP PAST ALIAS DATA\n         ST    R2,ENTADDR         SAVE FOR NEXT PASS\n         SPACE\n         L     R15,E0ADDR\n         LTR   R15,R15            Q - IS THERE AN E0 EXIT ?\n         BZ    P06B1              N\n         LA    R1,MEMBERA         Y SET UP PARAMETER\n         BALR  R14,R15            INVOKE EXIT 0\n         LTR   R15,R15            Q - DID IT SAY 'IGNORE THIS MEMBER ?'\n         BNZ   P06A               Y GO CONTINUE WITH DIRECTORY\n         EJECT\nP06B1    EQU   *\n         TM    OPTFLG1,GENOPT     CHECK FOR GENERIC OPTION\n         BZ    *+16                 BRANCHING IF NOT\n         BAL   R10,P903GEN        PERFORM GENERIC TEST\n         CLI   TFLG1,C'Y'         TEST FOR MATCH\n         BNE   P06B10               BRANCHING IF NONE\n         TM    OPTFLG1,LSTOPT     CHECK FOR LIST OPTION\n         BZ    P06B10               BRANCHING IF NONE\n         BAL   R10,P908PBLD       GENERATE DIRECTORY PRINT LINE\nP06B10   EQU   *\n         CLI   TFLG1,C'N'         TEST FOR GENERIC COMPARE\n         BE    P06A                 READING NEXT ENTRY IF NOT GOOD\n         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD\n         BO    P06C                 BRANCHING IF SET\n         TM    OPTFLG1,FMTOPT     CHECK FOR TEXT SCAN (FORMATTED)\n         BO    P06C                 BRANCHING IF SET\n         TM    OPTFLG1,IMGOPT     CHECK FOR TEXT SCAN (IMAGE)\n         BO    P06C                 BRANCHING IF SET\n         B     P06A               ELSE CONTINUE WITH DIRECTORY\n         SPACE\nP06C     EQU   *\n         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION\n         BZ    P06D                 BRANCHING IF NOT SET\n         PUT   SEQFL,IEBLIT       WRITE IEBUPDTE HEADER\n         SPACE\nP06D     EQU   *\n         FIND  PDS,MEMBER,D       POSITION TO MEMBER FOR READ\n         STH   R15,SYSRC          STORE SYSTEM RETURN CODE\n         TM    SYSRC+1,X'04'      CHECK FOR MEMBER NOT FOUND\n         BZ    *+8                  BRANCHING IF BIT OFF\n         B     P05C               ELSE GO TO READ NEXT MEMBER CARD\n         EJECT\n*****************************************************************\n*        PROCESS MEMBER DATA                                    *\n*****************************************************************\n         SPACE\nP07PROC  EQU   *\n         L     R2,RECADDR         GET ADDRESS OF INPUT AREA\n         LH    R3,BLKSIZE         GET LENGTH OF MOVE\n         SR    R4,R4              SOURCE ADDRESS IS ZERO\n         LR    R5,R4              SOURCE LENGTH IS ZERO\n         MVCL  R2,R4              CLEAR TARGET TO X'00'\n         SPACE\nP07A     EQU   *\n         L     R2,RECADDR\n         READ  DECB,SF,PDS,(R2),'S'  GET PHYSICAL BLOCK OF DATA\n         SPACE\n         CHECK DECB               WAIT FOR I/O TO COMPLETE\n         SPACE\n         L     R7,NUMREC          BCT CONTROL\n         L     R3,RECADDR         START OF PHYSICAL BLOCK OF DATA\n         EJECT\n**********************************************************************\n*        CHECK FOR CHARACTER STRING MATCH                            *\n**********************************************************************\n         SPACE\nP08CHECK EQU   *\n         CLI   0(R3),X'00'        END OF DATA - SHORT BLOCK TEST\n         BE    P08ECTL                YES - BRANCH TO CONTROL\n         MVC   WKTXT,0(R3)        MOVE DATA TO WORK AREA\n         SPACE\n         L     R15,E1ADDR\n         LTR   R15,R15            Q - IS THERE AN E1 EXIT ?\n         BZ    P08A0              N\n         LA    R1,WKTXTA          Y SET UP PARAMETER\n         BALR  R14,R15            INVOKE EXIT 1\n         LTR   R15,R15            Q - DID IT SAY 'IGNORE THIS RECORD ?'\n         BNZ   P08E               Y GO CONTINUE WITH NEXT RECORD\n         SPACE\nP08A0    EQU   *\n         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION\n         BZ    *+8                  BRANCHING IF NOT SET ON\n         BAL   R10,P904UNLD       PERFORM UNLOAD\n         L     R9,TABADDR         LOAD TABLE ADDRESS\n         LA    R6,1880(R9)        ADDRESS ADDR. TABLE\n         LA    R8,WKTXT           ADDRESS WORK AREA\nP08A     EQU   *\n         SR    R2,R2              CLEAR R2\n*\n* THE FOLLOWING INSTRUCTION SHOULD BE OPTIMIZED BY CHANGING THE LENGTH\n*\n         TRT   0(80,R8),TRTAB     CHECK FOR POSSIBLE KEYWORD\n         BC    8,P08E               BRANCHING IF NONE\n         ST    R1,STK1            SAVE R1\n         MH    R2,=H'4'           CALCULATE DISPLACEMENT\n         LA    R4,0(R2,R6)          IN ADDRESS TABLE\n         L     R4,0(R4)               AND POINT AT KEYWORD\nP08B     EQU   *\n         LH    R2,0(R4)           LOAD KEYWORD LENGTH\n         EX    R2,CLCINST6          AND COMPARE WITH DATA\n         BNE   P08C                   BRANCHING IF NOT EQUAL\n         TM    OPTFLG1,FMTOPT     CHECK FOR FORMAT REQUEST\n         BZ    *+12                 BYPASSING IF NOT SET\n         BAL   R10,P902FMT        ELSE FORMAT OUTPUT\n         B     P08D                 AND BRANCH\n         BAL   R10,P901DMP        DUMP OUTPUT\n         B     P08E               BYPASS RECOMPARE\nP08C     EQU   *\n         CLC   33(4,R4),NULL      CHECK FOR BLANK ADDRESS FIELD\n         BE    P08D                 BRANCHING IF FOUND\n         L     R4,33(R4)          ELSE FOLLOW CHAIN\n         B     P08B                 TO REPEAT COMPARE\nP08D     EQU   *\n         L     R8,STK1            RESTORE DATA ADDRESS TO R8\n         LA    R8,1(0,R8)           AND INCREMENT\n         B     P08A               BRANCH TO RETRANSLATE\nP08E     EQU   *\n         LA    R3,80(R3)          POSITION TO NEXT RECORD IN BLOCK\n         BCT   R7,P08CHECK        LOOP TO PROCESS UNTIL END OF BLOCK\n         B     P07PROC              THEN GO TO GET NEXT PHYSICAL BLOCK\n         SPACE\nP08ECTL  EQU   *\n         TM    OPTFLG1,CRDOPT     CHECK FOR CARD I/P\n         BO    P05C               READ NEXT CARD IF FOUND\n         B     P06A                 ELSE PROCESS DIRECTORY\n         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - SUBROUTINES'\n**************************************************************\n*        ROUTINES                                            *\n**************************************************************\n*        1 - WRITE DUMP OUTPUT                               *\n**************************************************************\n         SPACE\nP901DMP  EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         MVC   RECBUFF,WKTXT      MOVE TEXT TO I-O\n         MVC   RECBUFF+72(8),MEMBER MOVE NAME TO ID.\n         BAL   R10,P906WXRF       PERFORM WRITE\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n**************************************************************\n*        2 - WRITE FORMATTED OUTPUT                          *\n**************************************************************\n         SPACE\nP902FMT  EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         MVI   RECBUFF,C' '       MOVE PAD CHAR. TO I-O\n         MVC   RECBUFF+1(79),RECBUFF  AND CLEAR TO SPACES\n         EX    R2,MVCINST3        MOVE TO I-O\n         LA    R1,1(R1,R2)        ADDRESS DATA AREA\n         TRT   0(80,R1),TRTABS    CHECK FOR ALPHA\n         BC    8,*+18             BRANCH IF NONE\n         ST    R1,STK1            SAVE REG1\n         TRT   0(80,R1),TRTABF    CHECK FOR END\n         BC    8,*+8                BRANCHING IF NONE\n         B     P902A              BRANCH ROUND ADDRESS SETTING\n         L     R1,EOTXADR         SET DATA LIMIT TO END OF TEXT\nP902A    EQU   *\n         S     R1,STK1            CALCULATE LENGTH\n         S     R1,=F'1'             AND DECREMENT\n         L     R2,STK1            ADDRESS START\n         EX    R1,MVCINST2        MOVE TO I-O\n         MVC   RECBUFF+72(8),MEMBER  AND LABEL CARD\n         BAL   R10,P906WXRF       PERFORM WRITE\n         LA    R1,1(R1,R2)        RESTORE POSN.\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         L     R2,STK1            ADDRESS START\n         BR    R10                RETURN\n         EJECT\n**************************************************************\n*        3 - CHECK FOR GENERIC MATCH                         *\n**************************************************************\n         SPACE\nP903GEN  EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         MVI   TFLG1,C'N'         SET TEST FLAG OFF\n         LH    R6,STGEN           LOAD LENGTH FOR GEN. COMP.\n         EX    R6,CLCINST2        COMPARE WITH STORED VALUE\n         BNE   *+8                  BRANCHING IF NO MATCH\n         MVI   TFLG1,C'Y'         SET MATCH FLAG ON\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n**************************************************************\n*        4 - WRITE UNLOADED RECORD                           *\n**************************************************************\n         SPACE\nP904UNLD EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         PUT   SEQFL,WKTXT        WRITE UNLOADED RECORD\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n****************************************************************\n*        5 - DIRECTORY LIST HEADINGS                           *\n****************************************************************\n         SPACE\nP905HDS EQU    *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         TM    FIRST,X'FF'        CHECK FOR FIRST PASS\n         BO    *+12                 BYPASSING DSN CHECK IF SO\n         TM    OPTFLG1,DSNOPT     CHECK FOR DSN OPTION\n         BO    P905A                SUPPRESSING HEADINGS IF FOUND\n         NI    FIRST,X'00'        TURN OFF FIRST PASS FLAG\n         SP    PLNCT,PLNCT        ZEROISE LINE COUNT\n         MVC   PLINE,HD1          MOVE IN 1ST HEAD\n         BAL   R10,P907PRNT         AND PRINT\n         MVC   PLINE,HD2          MOVE IN 2ND HEAD\n         BAL   R10,P907PRNT         AND PRINT\n         MVC   PLINE+30(41),DASHES\n         BAL   R10,P907PRNT       PRINT DASH LINE\n         MVI   PLINE,C'0'         MOVE IN CONTROL CHARACTER\nP905A    EQU   *\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n*************************************************************\n*        6 - WRITE XREF RECORD                              *\n*************************************************************\n         SPACE\nP906WXRF EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         PUT   XREFL,RECBUFF      WRITE XREF O/P\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10\n         EJECT\n*************************************************************\n*        7 - PRINT A LINE                                   *\n*************************************************************\n         SPACE\nP907PRNT EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         PUT   LIST,PLINE         WRITE PRINT\n         CLI   PLINE,C' '         CHECK CONTROL FOR SINGLE SPACING\n         BNE   *+10               BRANCH IF NOT\n         AP    PLNCT,=P'1'        ADD TO LINE COUNT\n         CLI   PLINE,C'0'         CHECK CONTROL FOR DOUBLE SPACING\n         BNE   *+10               BRANCH IF NOT\n         AP    PLNCT,=P'2'        ADD TO LINE COUNT\n         MVI   PLINE,C' '         PAD PRINT LINE\n         MVC   PLINE+1(132),PLINE   WITH SPACES\n         CP    PLNCT,=P'54'       IF LINE COUNT > 54\n         BNH   *+8\n         BAL   R10,P905HDS          PERFORM HEADINGS\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n*************************************************************\n*        8 - BUILD DIRECTORY PRINT LINE                     *\n*************************************************************\n         SPACE\nP908PBLD EQU   *\n         ST    R10,STK10          SAVE REG10\n         BAL   R10,P909ASTK       STACK RETURN ADDRESS\n         MVC   PLINE+50(8),MEMBER MOVE MEMBER NAME TO PRINT LINE\n         TM    OPTFLG1,DSNOPT     CHECK FOR DSN REQUIRED\n         BZ    P908A                BRANCHING IF NOT\n         ST    R3,STK3            SAVE REG3\n         L     R3,JFCBAD          LOAD ADDRESS OF JFCB\n         MVC   PLINE+88(44),JFCBDSNM  ELSE MOVE DSN TO PRINT LINE\n         L     R3,STK3            RESTORE REG3\nP908A    EQU   *\n         BAL   R10,P907PRNT       PERFORM MEMBER LIST\n         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS\n         L     R10,STK10          RESTORE REG10\n         BR    R10                RETURN\n         EJECT\n*****************************************************************\n*        9 - STACK AND UNSTACK                                  *\n*****************************************************************\n         SPACE\nP909ASTK EQU   *\n         ST    R2,STK2            SAVE REG2\n         L     R2,STKADDR         LOAD STACK ADDRESS\n         A     R2,=F'4'           INCREMENT TO NEXT ENTRY\n         MVC   0(4,R2),STK10      MOVE REG10 TO STACK\n         ST    R2,STKADDR         SAVE STACK ADDRESS\n         L     R2,STK2            RESTORE REG2\n         BR    R10                RETURN\n         SPACE\nP909BUST EQU   *\n         ST    R2,STK2            SAVE REG2\n         L     R2,STKADDR         LOAD STACK ADDRESS\n         MVC   STK10(4),0(R2)     MOVE STACK TO REG10\n         S     R2,=F'4'           DECREMENT TO LAST ENTRY\n         ST    R2,STKADDR         SAVE STACK ADDRESS\n         L     R2,STK2\n         BR    R10                RETURN\n         EJECT\n*****************************************************************\n*        ABORT                                                  *\n*****************************************************************\n         SPACE\nP910ABRT EQU   *\n         ABEND 152,DUMP           ABEND WITH DUMP\n         EJECT\n*************************************************************\n*        11 - GET EXIT NAME AND LOAD IT                     *\n*************************************************************\n         SPACE\nP911EXIT DS    0H\n         ST    R10,STK10\n         BAL   R10,P909ASTK\n         LA    R1,3(R3)           R1 -> EXIT NAME IN PARM STRING\n         LR    R8,R7              COPY REMAINING PARM BYTE COUNT\n         SH    R8,=H'3'           Q - ANY PARM LEFT AFTER ADJUSTING FOR\n*                                     'E.=' ?\n         BP    P911A              Y CONTINUE\n         ABEND 104                N GIVE UP\nP911A    C     R8,=F'8'           Q - MORE THAN 8 BYTES OF PARM LEFT ?\n         BNH   P911B              N USE R8 AS IS\n         LA    R8,8               Y TAKE ONLY NEXT 8 BYTES\nP911B    LR    R4,R1              COPY R4 BEFORE TRT\n         BCTR  R8,0               REDUCE R8 TO M/C LENGTH\n         EX    R8,TRTINST1        LOCATE COMMA OR SPACE\n         CR    R4,R1              Q - FOUND EITHER ?\n         BE    P911C              N USE R8 FOR EXIT NAME LENGTH AS IS\n         LR    R8,R1              Y COMPUTE MEMBER NAME LENGTH\n         SR    R8,R4\n         BCTR  R8,0               REDUCE TO M/C LENGTH\nP911C    EX    R8,MVCINST7        MOVE EXIT NAME FROM PARM STRING\n         LA    R3,0(R4,R8)        POINT R3 PAST STRING\n         SR    R7,R8              DECREMENT REMAINING PARM BYTE COUNT\n*                                 BUT ALLOWING FOR P00BUMP TO OPERATE\n         SH    R7,=H'3'\n         CLC   =C'NO',0(R9)       Q - NULL EXIT INDICATED ?\n         BE    P911D              Y IGNORE IT\n         LOAD  EPLOC=(R9)         LOAD EXIT\n         ST    R0,8(R9)           STORE ADDRESS OF EXIT\nP911D    BAL   R10,P909BUST\n         L     R10,STK10\n         BR    R10\n         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - TERMINATION'\n*****************************************************************\n*        END OF JOB                                             *\n*****************************************************************\n         SPACE\nPEOJ     EQU   *\n         CLC   RETCODE,=F'0'      CHECK FOR GOOD EOJ\n         BE    PEJOK                BRANCHING IF FOUND\n         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER\n         MVC   PLINE+35(41),ERRMSG    AND LITERAL\n         BAL   R10,P907PRNT           AND PRINT IT\n         SPACE\nPEJOK    CLOSE (PDSDIR,,LIST)      CLOSE DIRECTORY AND LIST\n         SPACE\n         TM    DDFLAG1,CARD1DD     CHECK FOR CARDIN1 OPEN\n         BZ    PEJA                  BRANCHING IF NOT\n         CLOSE CARDIN1                 ELSE CLOSE CARDIN1\n         SPACE\nPEJA     EQU   *\n         TM    DDFLAG1,CARD2DD     CHECK FOR CARDIN2 OPEN\n         BZ    PEJB                  BRANCHING IF NOT\n         CLOSE CARDIN2                 ELSE CLOSE CARDIN2\n         SPACE\nPEJB     EQU   *\n         TM    DDFLAG1,XREFDD      CHECK FOR XREF OPEN\n         BZ    PEJC                  BRANCHING IF NOT\n         CLOSE XREFL                   ELSE CLOSE XREF\n         SPACE\nPEJC     EQU   *\n         TM    DDFLAG1,SEQFDD      CHECK FOR SEQF OPEN\n         BZ    PEJD                  BRANCHING IF NOT\n         CLOSE SEQFL                   ELSE CLOSE SEQF\n         SPACE\nPEJD     EQU   *\n         TM    DDFLAG1,PDSDD       CHECK FOR PDS OPEN\n         BZ    PEJE                  BRANCHING IF NOT\n         CLOSE PDS                     ELSE CLOSE PDS\n         SPACE\nPEJE     EQU   *\n         CLC   RETCODE,=F'0'       Q - ANY ERRORS ?\n         BE    PEJF                N RETURN\n         L     R1,RETCODE          Y\n         SVC   13                  ISSUE ABEND\n         SPACE\nPEJF     DS    0H\n         L     R13,SAVEAREA+4      LOAD SAVE ADDRESS\n         LM    R14,R12,12(R13)     RESTORE REGISTERS\n         SR    R15,R15             SET RETURN CODE = 0\n         BR    14\n         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *\n               - DATA'\n*****************************************************************\n*        ADDRESS AND FILE ATTRIBUTE SAVE AREAS                  *\n*****************************************************************\n         SPACE\nRECADDR  DC    F'0'\nTABADDR  DC    F'0'\nENTADDR  DC    F'0'\nSTKADDR  DC    F'0'\nEOTXADR  DC    A(WKTXT+72)\nEODIR    DC    F'0'\nNUMREC   DC    F'0'\nMEMBERA  DC    X'80',AL3(MEMBER)\nWKTXTA   DC    X'80',AL3(WKTXT)\nBLKSIZE  DC    H'0'\n         SPACE\nSYSRC    DC    H'0'               RETURN CODE WORK\n         SPACE\nSTK1     DS    F                  R1 STORE\nSTK2     DS    F                  R2 STORE\nSTK3     DS    F                  R3 STORE\nSTK10    DS    8F                 R10 STORE\n         EJECT\n*****************************************************************\n*        RECORD I-O AREAS AND LITERALS                          *\n*****************************************************************\n         SPACE\nPIEBLIT  DC    C' '\nIEBLIT   DS    0CL80\n         DC    CL12'./ ADD NAME='\nMEMBER   DC    CL8' '\n         DC    CL60' '\nCRDLBL   DC    CL27'* INPUT CHARACTER STRINGS *'\nERRMSG   DC    CL41'* JOB CANCELLED DUE TO PARAMETER ERRORS *'\n         SPACE\nSPACES   DC    80C' '             SPACES LITERAL\nDASHES   DC    80C'-'             DASHES LITERAL\nHIGHVALS DC    80X'FF'            HIGH VALUES LITERAL\n         SPACE\nOUTREC   DC    0CL80' '\n*\nRECBUFF  DS    CL80               OUTPUT I-O AREA\n*\nWKTXT    DS    CL80               INPUT I-O AREA\n         DC    80X'00'\n*\nWKCARD   DS    CL80               WORK AREA FOR MEMBER CARD\n         DC    80X'00'\n*\n         EJECT\n*****************************************************************\n*        HEADINGS AND PRINT LINE WORK AREAS                     *\n*****************************************************************\n         SPACE\nPLNCT    DC    PL2'0'             LINE COUNT\nPLINE    DS    CL133              PRINT LINE\n*\nHD1      DS    CL133              1ST HEAD WORK AREA\nHD2      DS    CL133              2ND HEAD WORK AREA\n*\nLSTHD1   DS    0CL133\n         DC    C'1'\n         DC    CL19' PROGRAM : NCXPDSCN'\n         DC    16C' '\n         DC    CL31'* PARTITIONED DATASET UTILITY *'\n         DC    66C' '\nLSTHD2   DS    0CL133\n         DC    C'0'\n         DC    CL21' REPORT  : NCXPDSCN-B'\n         DC    8C' '\n         DC    CL34'* DIRECTORY LISTING FOR SELECTION='\nLST2SEL  DC    CL8'* *     '\n         DC    61C' '\nLSTTORG  ORG   LST2SEL\nLSTTEMPS DC    69C' '\nPARAHD1  DS    0CL133\n         DC    C'1'\n         DC    CL19' PROGRAM : NCXPDSCN'\n         DC    16C' '\n         DC    CL29'* PARTITIONED DATASET UTILITY *'\n         DC    68C' '\nPARAHD2  DS    0CL133\n         DC    C'0'\n         DC    CL21' REPORT  : NCXPDSCN-A'\n         DC    15C' '\n         DC    CL27'* INPUT PARAMETER LISTING *'\n         DC    69C' '\n*\n*\n         EJECT\n*****************************************************************\n*        FLAG AREA                                              *\n*****************************************************************\n         SPACE\n*\nOPTFLG1  DC    X'00'              OPTION FLAG 1\nALLOPT   EQU   X'80'              FULL FILE OPTION\nCRDOPT   EQU   X'40'              CARD I/P OPTION\nGENOPT   EQU   X'20'              GENERIC SELECT OPTION\nIMGOPT   EQU   X'10'              IMAGE TEXT SCAN OPTION\nFMTOPT   EQU   X'08'              FORMATTED KEYWORD SCAN OPTION\nLSTOPT   EQU   X'04'              LIST OPTION\nDSNOPT   EQU   X'02'              DSN LABEL OPTION\nUNLOPT   EQU   X'01'              UNLOAD OPTION\n*\n*        ERRORS\n*\nALLCRD   EQU   X'C0'              BOTH CARD AND FULL FILE ON\nALLGEN   EQU   X'A0'              BOTH GENERIC AND FULL FILE ON\nCRDGEN   EQU   X'60'              BOTH GENERIC AND CARD ON\nIMGFMT   EQU   X'18'              BOTH IMAGE AND FORMAT ON\n*\nDDFLAG1  DC    X'00'              DDNAME FLAG\n*\nPDSDD    EQU   X'80'              PDS DD REQUIRED\nCARD1DD  EQU   X'40'              CARDIN1 DD REQUIRED\nCARD2DD  EQU   X'20'              CARDIN2 DD REQUIRED\nXREFDD   EQU   X'10'              XREF DD REQUIRED\nSEQFDD   EQU   X'08'              SEQF DD REQUIRED\n*\nGENFLG1  DC    X'00'              GENERAL PURPOSE FLAG\nALIAS    EQU   X'80'              ALIAS CONDITION\nALIASON  EQU   X'80'              TURN ALIAS CONDITION ON\nALIASOFF EQU   X'7F'              TURN ALIAS CONDITION OFF\n*\nTCHAR    DS    H                  CHAR. TEST AREA\nDELIM    DC    X'00'              DELIMITER STORE\n*\nTFLG1    DC    C' '               TEST FLAG 1\nFIRST    DC    X'FF'              FIRST PASS FLAG\nNULL     DC    F'0'               NULL CONSTANT\n*\n* DO NOT MOVE OR MODIFY THE FOLLOWING DECLARATIONS WHICH ARE\n* REFERENCED BY OFFSET IN P911EXIT\n*\n         DS    0F\nE0NAME   DC    CL8' '             EXIT 0 NAME\nE0ADDR   DC    F'0'               EXIT 0 ADDRESS (ZERO IF NOT USED)\nE1NAME   DC    CL8' '             EXIT 1 NAME\nE1ADDR   DC    F'0'               EXIT 1 ADDRESS (ZERO IF NOT USED)\n*\n         DS    0H\nSTGEN    DS    CL12               GENERIC SAVE AREA\n         EJECT\n*****************************************************************\n*        JFCB WORK AREA                                         *\n*****************************************************************\n         SPACE\nJFCBAD   DS    0F\n         DC    X'07'\nJFCBADA  DC    AL3(JFCBSV)\n*\n         DS    0F\nJFCBSV   DS    CL176\n*\n         EJECT\n*****************************************************************\n*        TRANSLATE TABLES                                       *\n*****************************************************************\n         SPACE\nTRTAB    DC    256X'00'           TRANS TABLE FOR CHAR. STRING\n*\nTRTABF   DS    0CL256             TRANS TABLE FOR CARD DELIMITERS\n         DC    64X'00'\n         DC    X'40'              SPACE\n         DC    42X'00'\n         DC    X'6B'              COMMA\n         DC    148X'00'\n*\nTRTABS   DS    0CL256             TRANS TABLE FOR DATA START\n         DC    80X'00'\n         DC    X'FF'              AMPERSAND\n         DC    10X'00'\n         DC    X'FF'              DOLLAR\n         DC    31X'00'\n         DC    2X'FF'             COMMERCIAL AT,HASH\n         DC    68X'00'\n         DC    9X'FF'\n         DC    7X'00'\n         DC    9X'FF'\n         DC    8X'00'\n         DC    8X'FF'\n         DC    6X'00'\n         DC    10X'00'\n         DC    6X'00'\n*\n         EJECT\n*****************************************************************\n*        EXECUTABLE INSTRUCTION AREA                            *\n*****************************************************************\n         SPACE\nTRTINST1 TRT   0(0,R4),TRTABF     TRANSLATE AND TEST INSTRUCTION\n*\nMVCINST2 MVC   RECBUFF+31(0),0(R2)\n*\nMVCINST3 MVC   RECBUFF(0),0(R1)\n*\nMVCINST5 MVC   PLINE+21(0),0(R5)  MOVE INSTRUCTION\n*\nMVCINST4 MVC   STGEN+2(0),0(R5)   MOVE INSTRUCTION\n*\nMVCINST6 MVC   2(0,R9),0(R5)      MOVE INSTRUCTION\n*\nMVCINST7 MVC   0(0,R9),0(R4)      MOVE INSTRUCTION\n*\nCLCINST2 CLC   STGEN+2(0),MEMBER  COMPARE INSTRUCTION\n*\nCLCINST6 CLC   0(0,R1),2(R4)      COMPARE INSTRUCTION\n*\nPDSBLK   DC    CL256' '\n         EJECT\n*****************************************************************\n*        D. C. B. S                                             *\n*****************************************************************\n         SPACE\nPDSDIR   DCB   DDNAME=PDSDIR,BLKSIZE=256,RECFM=F,DSORG=PS,             C\n               MACRF=GM,LRECL=256,EODAD=PEOJ\nPDS      DCB   DDNAME=PDS,DSORG=PS,MACRF=RP,EODAD=P06A,EXLST=JFCBAD\nCARDIN1  DCB   DDNAME=CARDIN1,DSORG=PS,MACRF=GM,EODAD=P05START\nCARDIN2  DCB   DDNAME=CARDIN2,DSORG=PS,MACRF=GM,EODAD=PEOJ\nSEQFL    DCB   DDNAME=SEQFL,DSORG=PS,MACRF=PM,LRECL=80\nXREFL    DCB   DDNAME=XREFL,DSORG=PS,MACRF=PM,LRECL=80\nLIST     DCB   DDNAME=LIST,DSORG=PS,MACRF=PM,LRECL=133,                C\n               RECFM=FBA\n         EJECT\n*****************************************************************\n*        LITERAL POOL                                           *\n*****************************************************************\n         LTORG\n*****************************************************************\n*        DSECTS                                                 *\n*****************************************************************\n         SPACE\nCHARTAB  DSECT\n         DS    CL1880\n         DS    CL1024\n         SPACE 2\nJFCBMAP  DSECT\n         IEFJFCBN LIST=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NCZ93205": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "NCZ93205 TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ93205 - SUBROUTINE TO READ PDS MEMBERS              *\n*                                                                     *\n* NCZ93205.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* THIS PROGRAM CAN BE CALLED AS A SUBROUTINE FROM AN ASSEMBLER OR     *\n* COBOL PROGRAM TO PROVIDE READ ACCESS TO MEMBER(S) OF A PDS. THE     *\n* MEMBER NAME(S) MAY BE SPECIFIED DYNAMICALLY VIA THE PARAMETERS.     *\n* THUS THIS PROGRAM ENABLES A COBOL PROGRAM TO ACCESS MANY MEMBERS    *\n* OF A PDS WHEN THE NAMES OF THE MEMBERS ARE NOT KNOWN UNTIL EXECUTION*\n* TIME.                                                               *\n*                                                                     *\n* ONLY COMBINATIONS OF RECFM = F/B/A ARE SUPPORTED.                   *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ93205.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* PARAMETERS:                                                         *\n* ----------                                                          *\n* THE PROGRAM OBSERVES A STANDARD OS LINKAGE. IT SHOULD ALWAYS BE     *\n* CALLED WITH 3 PARAMETERS WHICH ARE:                                 *\n*                                                                     *\n* P1 - REQUEST CODE      FULLWORD BINARY  COBOL PIC S9(8) COMP.       *\n*      VALUES:                                                        *\n*      0   -  OPEN DDNAME 'PDS'                                       *\n*      4   -  LOCATE MEMBER (DOES NOT READ MEMBER)                    *\n*      8   -  READ NEXT RECORD IN CURRENT MEMBER                      *\n*      12  -  CLOSE DDNAME 'PDS'                                      *\n*                                                                     *\n* P2 - MEMBER NAME      CHARACTER STRING COBOL PIC X(8).              *\n*      CONTAINS NAME OF MEMBER WHEN P1 = 4                            *\n*                                                                     *\n* P3 - INPUT AREA       CHARACTER STRING. IT IS THE RESPONSIBLITY OF  *\n*      WHEN P1 = 8                        THE CALLING PROGRAM TO      *\n*                                         ENSURE THAT THIS AREA WILL  *\n*                                         ACCOMMODATE THE LONGEST     *\n*                                         RECORD TO BE READ.          *\n*                                                                     *\n* RETURN CODE -                                                       *\n*      VALUES:                                                        *\n*      0   - REQUESTED FUNCTION COMPLETED WITHOUT ERROR               *\n*      4   - REQUESTED FUNCTION DID NOT COMPLETE FOR REASON:          *\n*            WHEN P1 = 0  FILE COULD NOT BE OPENED                    *\n*                      4  MEMBER WAS NOT FOUND                        *\n*                      8  END OF FILE ON CURRENT MEMBER               *\n*      8   - SERIOUS ERROR. PROCESSING SHOULD BE TERMINATED.          *\n*                                                                     *\n* EXAMPLE CALL FROM COBOL:                                            *\n*                                                                     *\n*      CALL 'NCZ93205' USING FUNC, MEMBER, INPUT-AREA.                *\n*      IF RETURN-CODE = ZERO GO TO .....                              *\n*                                                                     *\n* THE SPECIAL REGISTER 'RETURN-CODE' SHOULD BE CLEARED TO ZERO BY     *\n* THE APPLICATION PROGRAM BEFORE PROGRAM TERMINATION OTHERWISE        *\n* IT MAY BE PROPAGATED UPWARDS TO OS WITH A NON ZERO VALUE.           *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ93205.3 MESSAGES                                                 *\n*                                                                     *\n* NONE.                                                               *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93205.4 ABEND CODES                                              *\n*                                                                     *\n* NONE. IT IS THE RESPOSIBILITY OF THE CALLING PROGRAM TO TERMINATE   *\n* AFTER A SERIOUS ERROR CONDITION.                                    *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93205.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n* MOVE TO MAC1.ASM AND PASMAL.                                        *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93205.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* MAINTAIN THE RECORD BELOW.                                          *\n*                                                                     *\n* CHANGE HISTORY:                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n*                                                                     *\n* 17 NOV 82 RH    V01     CREATED                                     *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n* NONE YET.                                                           *\n*                                                                     *\n* DD MMM YY WHO : COMMENTS                                            *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ93205.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* SIMPLE LINEAR STRUCTURE.                                            *\n* USES OPEN, FIND, CLOSE, READ, CHECK (BSAM).                         *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93205.8 PROGRAM LOGIC OVERVIEW                                   *\n*                                                                     *\n* OMITTED. IT SHOULD BE NOTED THAT THIS PROGRAM HAS TO BE PRETTY      *\n* RUGGED. DO NOT ASSUME THAT ALL CALLS ARE IN LOGICAL SEQUENCE.       *\n*                                                                     *\n*****                                                             *****\n         TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *\n               - PROGRAM PROLOGUE'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ93205 - SUBROUTINE TO READ PDS MEMBERS              *\n*                                                                     *\n* ENTRY INTFCE: STANDARD OS - SEE ABOVE.                              *\n*                                                                     *\n* EXIT  INTFCE: STANDARD OS - SEE ABOVE.                              *\n*                                                                     *\n* RETURN CODES:RC = 0       - OK                                      *\n*                                                                     *\n*              RC = 4       - REQUESTED FUNCTION DID NOT COMPLETE     *\n*                                                                     *\n*              RC = 8       - SERIOUS ERROR - TERMINATION ADVISED     *\n*                                                                     *\n* REG USAGE:   R0 -                                                   *\n*              R1 -                                                   *\n*              R2 -      -> P1  (FUNCTION)                            *\n*              R3 -      -> P2  (MEMBER)                              *\n*              R4 -      -> P3  (INPUT AREA)                          *\n*              R5 -      WORK: -> BUFFER                              *\n*              R6 -      WORK: -> RECORD                              *\n*              R7 -                                                   *\n*              R8 -                                                   *\n*              R9                                                     *\n*              R10 -                                                  *\n*              R11 -                                                  *\n*              R12 -     -> DCB                                       *\n*              R13 -     SAVE AREA + BASE                             *\n*              R14 -                                                  *\n*              R15 -                                                  *\n*                                                                     *\n*****                                                             *****\n         TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *\n               - PROGRAM CODE'\n         PRINT NOGEN\nNCZ93205 MSETUP 13\n         LA    R12,PDS\n         USING IHADCB,R12\n         LM    R2,R4,0(R1)\n         SPACE\n         L     R15,0(R2)               GET FUNCTION CODE\n         CH    R15,=H'0'               Q - OPEN ?\n         BE    P01                     Y\n         CH    R15,=H'4'               Q - FIND ?\n         BE    P02                     Y\n         CH    R15,=H'8'               Q - READ ?\n         BE    P03                     Y\n         CH    R15,=H'12'              Q - CLOSE ?\n         BE    P04                     Y\n         B     P99                     BAD FUNCTION CODE\n         SPACE\n*        OPEN DATASET\nP01      DS    0H\n         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?\n         BO    P99                      Y BOMB OUT\n         OPEN  (PDS,INPUT)              OPEN IT\n         TM    DCBOFLGS,DCBOFOPN        Q - OK ?\n         BZ    P98                      N EXIT RC=4\n         CLI   DCBDSORG,DCBDSGPO        Q - IS THIS A PDS ?\n         BNE   P0105                    N GO CLOSE\n         TM    DCBRECFM,X'FF'-(DCBRECF+DCBRECBR+DCBRECCA) Q - RECFM ?\n         BZ    P0110                    OK\n         SPACE\nP0105    EQU   *\n         CLOSE PDS\n         B     P99\n         SPACE\nP0110    LH    R0,DCBBLKSI\n         GETMAIN R,LV=(0)               GET A BUFFER\n         ST    R1,BUFA\n         B     P97                      EXIT OK\n         SPACE\n*        FIND MEMBER\nP02      DS    0H\n         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?\n         BZ    P99                      N BOMB OUT\n         FIND  (12),(3),D               LOCATE MEMBER\n         LTR   R15,R15                  Q - OK ?\n         BNZ   P98                      N EXIT RC=4\n         NI    FLAGS,X'FF'-EOM          Y CLEAR END OF MEMBER FLAG\n         OI    FLAGS,DOREAD             SET FLAG TO DO READ\n         B     P97                      EXIT RC=0\n         EJECT\n*        GET NEXT RECORD FOR THIS MEMBER\nP03      DS    0H\n         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?\n         BZ    P99                      N - BOMB OUT\n         SPACE\n         TM    FLAGS,EOM                Q - EOM ALREADY ?\n         BO    P99                      Y BOMB OUT\n         SPACE\nP0305    L     R5,BUFA                  R5 -> INPUT BUFFER\n         L     R6,RECA                  R6 -> NEXT RECORD IN BUFFER\n         TM    FLAGS,DOREAD             Q - SHOULD WE READ NEXT BLOCK ?\n         BZ    P0310                    N\n         SPACE\n         READ  DECB1,                   READ A BLOCK OF RECORDS        *\n               SF,                                                     *\n               (12),                                                   *\n               (5),                                                    *\n               'S'\n         CHECK DECB1                    WAIT FOR IO TO COMPLETE\n         SPACE\n         LH    R10,DCBBLKSI             # OF BYTES WE COULD HAVE READ\n         L     R1,DCBIOBA\n         SH    R10,22(R1)               LESS # OF BYTES WE DID'NT READ\n         BZ    P03EOM                   NOTHING READ - MUST BE EOM\n         AR    R10,R5\n         ST    R10,BLOCKEND             SAVE ADDRESS END OF THIS BLOCK\n         NI    FLAGS,X'FF'-DOREAD       SET FLAG OFF - WE DID A READ\n         LR    R6,R5                    R6 -> FIRST RECORD IN BLOCK\n         SPACE\nP0310    LH    R15,DCBLRECL             GET RECORD LENGTH\n         EX    R15,EXMVC                MOVE RECORD TO INPUT AREA\n         AR    R6,R15                   R6 -> NEXT RECORD IN BUFFER\n         C     R6,BLOCKEND              Q - END OF THIS BLOCK ?\n         BNL   P0320                    Y GO SET FLAG TO DO READ\n         SPACE\n         ST    R6,RECA                  SAVE CURRENT RECORD POINTER\n         B     P97                      EXIT RC=0\n         SPACE\nP0320    OI    FLAGS,DOREAD             DO READ FOR NEXT RECORD\n         B     P97                      EXIT RC=0\n         SPACE\nP03EOM   DS    0H\n         OI    FLAGS,EOM                INDICATE END OF MEMBER\n         B     P98                      EXIT RC = 4\n         EJECT\n*        CLOSE PDS\nP04      DS    0H\n         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?\n         BZ    P99                      N BOMB OUT\n         LH    R0,DCBBLKSI\n         L     R5,BUFA\n         FREEMAIN R,LV=(0),A=(5)\n         CLOSE PDS\n         SPACE\nP97      CLEAR RC=0\nP98      CLEAR RC=4\nP99      CLEAR RC=8\n         SPACE\nPDS      DCB   DDNAME=PDS,DSORG=PO,MACRF=(R),EODAD=P03EOM\nFLAGS    DC    X'00'\nEOM      EQU   X'80'                    REACHED END OF CURRENT MEMBER\nDOREAD   EQU   X'40'                    INDICATES CURRENT BLOCK IS     *\n                                        EXHAUSTED\nEXMVC    MVC   0(0,R4),0(R6)            MOVE RECORD TO INPUT AREA\nBUFA     DS    F                        -> BUFFER\nRECA     DS    F                        -> CURRENT RECORD IN BUFFER\nBLOCKEND DS    F                        -> END OF CURRENT BLOCK\n         DCBD  DSORG=BS,DEVD=DA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NCZ93208": {"ttr": 1541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "NCZ93208 TITLE 'CALCULATE DATASET SPACE UTILISATION                    *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ93208 - CALCULATE DATASET SPACE UTILISATION         *\n*                                                                     *\n* NCZ93208.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* THIS PROGRAM DETERMINES THE SPACE UTILISED IN A PARTITIONED         *\n* DATASET, GIVEN AS A PERCENTAGE OF THE ALLOCATED SPACE.              *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* THE PROGRAM IS INVOKED BY SPF. IT MAY ALSO BE INVOKED FROM A TSO    *\n* CLIST. NO PARAMETRES ARE REQUIRED BUT ALLOCATION MUST HAVE BEEN     *\n* MADE OF THE PDS CONCERNED AS //SPUTIL.                              *\n*                                                                     *\n* THE PERCENTAGE OF ALLOCATED SPACE USED IS COMMUNICATED TO THE USER  *\n* VIA RETURN CODE. RETURN CODES > 100 ARE USED TO INDICATE CONDITIONS *\n* DETECTED WHEN THE PROGRAM CANNOT COMPLETE NORMALLY.                 *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.3 MESSAGES                                                 *\n*                                                                     *\n* NONE                                                                *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.4 ABEND CODES                                              *\n*                                                                     *\n* NONE                                                                *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n* NORMAL ASSEMBLY & LINK-EDIT.                                        *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ93208.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* MAINTAIN THE RECORD BELOW.                                          *\n*                                                                     *\n* CHANGE HISTORY:                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n*                                                                     *\n* 20 JUN 83  AM   V01     CREATED                                     *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n* RECORD DETAILS BELOW.                                               *\n*                                                                     *\n* DD MMM YY WHO : COMMENTS                                            *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* DESCRIBE THE PROGRAM STRUCTURE IF NECESSARY.                        *\n* LIST ANY UNUSUAL SYSTEM MACROS AND SERVICES INVOKED.                *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ93208.8 PROGRAM LOGIC OVERVIEW                                   *\n*                                                                     *\n* OPTIONAL - USE PSEUDO-CODE IF YOU ARE FAMILIAR WITH IT. THIS        *\n* SECTION IS USELESS IF NOT MAINTAINED.                               *\n*                                                                     *\n*****                                                             *****\n         TITLE 'CALCULATE DATASET SPACE UTILISATION                    *\n               - PROGRAM PROLOGUE'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ93208 - CALCULATE DATASET SPACE UTILISATION         *\n*                                                                     *\n* ENTRY INTFCE: FILL IN THIS SECTION IF APPLICABLE.                   *\n*                                                                     *\n* EXIT  INTFCE: FILL IN THIS SECTION IF APPLICABLE.                   *\n*                                                                     *\n* RETURN CODES:RC < 101    THE RC IS % DATASET SPACE UTILISED         *\n*                                                                     *\n*              RC > 100    PROGRAM WAS TERMINATED DUE TO ERROR        *\n*                                                                     *\n*              RC = 101    CANNOT LOCATE TIOT ENTRY FOR DDNAME        *\n*              RC = 102    DEVTYPE FAILED                             *\n*              RC = 103    CANNOT OBTAIN DSCB F1                      *\n*              RC = 104    DATASET IS NOT A PDS                       *\n*              RC = 105    CANNOT OBTAIN DSCB F3                      *\n*                                                                     *\n* REG USAGE:   R0 -                                                   *\n*              R1 -                                                   *\n*              R2 -                                                   *\n*              R3 -                                                   *\n*              R4 - ADDR TIOT ENTRIES                                 *\n*              R5 - WORK REG FOR TIOT SEARCH                          *\n*              R6 - ADDR UCB                                          *\n*              R7 - ADDR DSCB EXTENT DESCRIPTIONS                     *\n*              R8 - WORK REG FOR SPACE CALCULATION                    *\n*              R9 - WORK REG FOR SPACE CALCULATION                    *\n*              R10 -                                                  *\n*              R11 -                                                  *\n*              R12 -                                                  *\n*              R13 - PROGRAM BASE REGISTER                            *\n*              R14 - WORK REG USED WITH R15 FOR RETURN CODE CALC      *\n*              R15 - RETURN CODE                                      *\n*                                                                     *\n*****                                                             *****\n         TITLE 'CALCULATE DATASET SPACE UTILISATION'\n         PRINT NOGEN\nNCZ93208 MSETUP 13\n*\n*                                      ADDRESS TIOT\n*\n         EXTRACT TIOTA,'S',FIELDS=TIOT,MF=(E,EXTRACT)\n         L     R4,TIOTA\n         LA    R4,TIOENTRY-TIOT(R4)\n         USING TIOENTRY,R4\n*\n*                                      LOCATE TIOT ENTRY FOR DDNAME\n*\n         XR    R5,R5\nTIOSRCH  EQU   *\n         CLC   TIOEDDNM,DDNAME\n         BE    ADDRUCB\n         IC    R5,TIOELNGH\n         LA    R4,0(R5,R4)\n         LTR   R5,R5\n         BP    TIOSRCH\n         LA    R15,101                 SET ERROR RETURN CODE\n         B     RETURN\n*\n*                                      ADDRESS UCB & EXTRACT VOL SER\n*\nADDRUCB  EQU   *\n         ICM   R6,B'0111',TIOEFSRT\n         USING UCBCMSEG,R6\n         MVC   VOLSER,UCBVOLI\n*\n*                                      DETERMINE TRK/CYL FOR DEVICE\n*                                                        ( DEVTPC )\n         MVC   DBWD,DDNAME\n         DEVTYPE DBWD,DEVWKA,DEVTAB\n         LTR   R15,R15\n         BZ    READJFCB\n         LA    R15,102                 SET ERROR RETURN CODE\n         B     RETURN\n         EJECT\n*\n*                                      GET DSNAME FOR DDNAME\n*\nREADJFCB RDJFCB (SPUTIL)\n         MVC   DSNAME,JFCBDSNM\n*\n*                                      OBTAIN DSCB FORMAT 1\n*\nOBTAINF1 EQU   *\n         MVC   CAMLST,CAMSRCH\n         LA    R15,DSNAME\n         ST    R15,CAMDSN\n         LA    R15,VOLSER\n         ST    R15,CAMSER\n         LA    R15,OBTWKA\n         ST    R15,CAMWKA\n         XR    R0,R0\n         OBTAIN CAMLST\n         LTR   R15,R15                 OBTAIN OKAY ?\n         BZ    DSORG                   YES, GO CHECK FOR ORG PO\n         LA    R15,103                 NO, SET ERROR RETURN CODE\n         B     RETURN\nDSORG    TM    DS1DSORG,DS1DSGPO       IS DATASET A PDS ?\n         BO    OBTAINF3                YES, GO CHECK FOR DSCB F3\n         LA    R15,104                 NO, SET ERROR RETURN CODE\n         B     RETURN\n*\n*                                      OBTAIN DSCB FORMAT 3\n*\nOBTAINF3 CLI   DS1NOEPV,3              MORE THAN 3 EXTENTS ?\n         BNH   EXTDESC                 NO, SO NO DSCB F3\n         LA    R15,DS1PTRDS\n         ST    R15,CAMDSN\n         LA    R15,F3WKA\n         ST    R15,CAMWKA\n         MVC   CAMLST,CAMSEEK\n         OBTAIN CAMLST\n         LTR   R15,R15                 OBTAIN OKAY ?\n         BZ    EXTDESC                 YES, GO ADDRESS EXTENT DESCS\n         LA    R15,105                 NO, SET ERROR RETURN CODE\n         B     RETURN\n         EJECT\n*\n*                                      CALCULATE SPACE ALLOCATION\n*                                      FROM DSCB EXTENT DESCRIPTIONS\n*\nEXTDESC  EQU   *\n         XR    R15,R15\n         ST    R15,SPALLOC\n         ICM   R15,B'001',DS1NOEPV     EXTRACT NUMBER OF EXTENTS\n         BZ    USECALC\n         MVC   EXTENTS(30),DS1EXT1     MOVE EXTENT DESCRIPTIONS FROM\n         MVC   EXTENTS+30(40),DS3EXTNT      DSCB1 & DSCB3 FOR EASIER\n         MVC   EXTENTS+70(90),DS3ADEXT      EXAMINATION IN ONE BLOCK\n         LA    R7,EXTENTS              POINT TO FIRST EXTENT DESC\nEXTCALC  EQU   *\n         USING EXTENT,R7               ADDR A 10 BYTE EXTENT DESC\n         CLI   EXTTYPE,0\n         BNH   EXTLOOP\n         LH    R9,EXTLOCC\n         MH    R9,DEVTPC               CONVERT START CYL TO TRKS\n         AH    R9,EXTLOHH                  AND ADD START TRKS\n         LH    R8,EXTHICC\n         MH    R8,DEVTPC               CONVERT END CYL TO TRKS\n         AH    R8,EXTHIHH                  AND ADD END TRKS\n         BCTR  R9,0                    ADJUST TRKS RELATIVE TO ZERO\n         SR    R8,R9                   DIFF IS SPACE ALLOCATION IN TRKS\n         A     R8,SPALLOC              ACCUMULATE SPACE\n         ST    R8,SPALLOC                  AND STORE\nEXTLOOP  LA    R7,EXTNEXT              ADDRESS NEXT EXTENT DESCRIPTION\n         BCT   R15,EXTCALC             BRANCH UNTIL ALL PROCESSED\n*\n*                                      CALCULATE SPACE UTILISED AND ITS\n*                                      PERCENTAGE OF ALLOCATED SPACE\n*\nUSECALC  EQU   *\n         LH    R15,DS1LSTAR            LOAD LAST TRACK ADDRESS\n         CLI   DS1LSTAR+2,0            ANY BLOCKS USED ON LAST TRK ?\n         BNH   USEST\n         LA    R15,1(R15)              YES, ADJUST TRKS AS REL TO ZERO\nUSEST    ST    R15,SPUSED\n         L     R15,SPERCENT\n         XR    R14,R14                 CALCULATE % TRACKS USED OF THOSE\n         M     R14,SPUSED                  ALLOCATED WITH RESULT TO R15\n         D     R14,SPALLOC\n*\n*                                      TERMINATE WITH RETURN CODE OF\n*                                      PERCENTAGE ALLOCATED SPACE USED\n*\nRETURN   MCLEAR RC=(15)\n         EJECT\nTIOTA    DS    A\nEXTRACT  EXTRACT TIOTA,FIELDS=TIOT,MF=L\nDDNAME   DC    CL8'SPUTIL  '\nVOLSER   DS    CL6\nDBWD     DS    D\nDEVWKA   DS    5F\nDEVTPC   EQU   DEVWKA+10\nSPUTIL   DCB   DDNAME=SPUTIL,DSORG=PO,MACRF=(E),EXLST=EXLST\nEXLST    DC    X'87',AL3(JFCBAREA)\nJFCBAREA DS    0D\n         DC    176X'00'\n         ORG   JFCBAREA\n         IEFJFCBN\n         ORG   ,\nCAMSRCH  CAMLST SEARCH,*-*,*-*,*-*\nCAMSEEK  CAMLST SEEK,*-*,*-*,*-*\nDSNAME   DS    CL44\nCAMLST   DS    F\nCAMDSN   DS    A\nCAMSER   DS    A\nCAMWKA   DS    A\nOBTWKA   DS    0D,XL140\nF3WKA    DS    0D,XL140\n         ORG   OBTWKA-44\n         IECSDSL1 (1)\n         ORG   F3WKA\n         IECSDSL1 (3)\n         ORG   ,\nEXTENTS  DS    CL160\nSPALLOC  DS    F\nSPUSED   DS    F\nSPERCENT DC    F'100'\n         LTORG\nTIOT     DSECT\n         IEFTIOT1\n         IEFUCBOB\nEXTENT   DSECT                     ONE TEN BYTE EXTENT DESCRIPTION\nEXTTYPE  DS    BL1\nEXTSEQ   DS    XL1\nEXTLOCC  DS    HL2\nEXTLOHH  DS    HL2\nEXTHICC  DS    HL2\nEXTHIHH  DS    HL2\nEXTNEXT  EQU   *\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NCZ96103": {"ttr": 1547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'NCZ96103 - LOCAL VTAM PRINT PROGRAM                    *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ96103 - LOCAL VTAM PRINT PROGRAM                    *\n*                                                                     *\n* NCZ96103.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* A DATASET IS READ AND WRITTEN TO A 3287 TYPE PRINTER.  IF THE DCB   *\n* INDICATES ASA CONTROL CHARACTERS, THESE ARE TRANSLATED TO 3287      *\n* CONTROL CHARACTERS.  THE PROGRAM WILL PERFORM PAGEINATION IF        *\n* REQUESTED IN THE PARMFIELD.  THE PRINTER NODE NAME ALSO USED TO     *\n* CONSTRUCT THE VTAM ACB NAME.                                        *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ96103.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* THE PROGRAM SHOULD BE RUN AS A BATCH JOB.  THE INPUT FILE TO BE     *\n* PRINTED HAS THE DDNAME 'INPUT':                                     *\n*                                                                     *\n*  //STEPNAME  EXEC PGM=NCZ96103,PARM='PPPP,NN'                       *\n*  //STEPLIB  DD  DISP=SHR,DSN=MAC1.LOAD                              *\n*  //INPUT    DD  DISP=SHR,DSN=YOUR.PRINT.FILE                        *\n*                                                                     *\n* PARM INPUT - PPPP - PRINTER NAME - 4 CHARACTER VTAM NODE NAME       *\n*                     (ALSO USED TO CONTRUCT ACB NAME)                *\n*              NN   - NUMBER OF LINES PER PAGE                        *\n*                                                                     *\n* DEFAULTS - NONE                                                     *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ96103.3 MESSAGES                                                 *\n*                                                                     *\n* MC3051I - MC3056I  SEE ISD INFO (MESSAGES)                          *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ96103.4 ABEND CODES                                              *\n*                                                                     *\n* 1 - VTAM ERROR                                                      *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ96103.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n* STANDARD ASSEMBLY AND LINK-EDIT                                     *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ96103.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* MAINTAIN THE RECORD BELOW.                                          *\n*                                                                     *\n* CHANGE HISTORY:                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n*                                                                     *\n* 25 FEB 83 EMM   V01     CREATED (BASED ON NCZ96101)                 *\n* 20 APR 83 EMM   V02     ALTERED TO WAIT FOR PRINTER TO BE RELEASED  *\n*                          FROM ANOTHER SUBSYSTEM.                    *\n* 22 APR 83 EMM   V03     REMOVED RESTRICTION OF LOCAL TERMINALS ONLY *\n* 07 MAY 83 RH    V03     SHOW RPLREQ IN TYPE 2 ERROR MESSAGE         *\n* 19 AUG 83 EMM   V03     VTAM ACB NAME IS CONSTRUCTED FROM NODE NAME *\n* 24 NOV 83 RH    V03     CORRECTED CODING ERROR FOR LRECL < 133      *\n* 19 FEB 85 MKS   V03     ADDED FACILITY TO PRINT DATESETS WHICH ARE  *\n*                         IN MACHINE CODE                             *\n*                                                                     *\n* KNOWN PROBLEM(S):                                                   *\n* 25 FEB 83 EMM: IF 'NO LINE SKIP' IS SPECIFIED ON A LINE, THEN THE   *\n*                LAST CHARACTER OF THE PREVIOUS LINE WILL BE          *\n*                OVERWRITTEN                                          *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ96103.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* RECORD-MODE ACF/VTAM MACROS ARE USED TO WRITE THE DATA TO THE 3287  *\n* REFER TO 'ACF/VTAM PROGRAMMING' FOR DETAILS.                        *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ96103.8 RETURN CODES AND REGISTER USE                            *\n*                                                                     *\n* RETURN CODES:RC = 0   INPUT FILE HAS SUCCESSFULLY BEEN PRINTED      *\n*                                                                     *\n*              RC = 4   FAILURE EITHER TO OPEN VTAM ACB OR ACQUIRE    *\n*                       PRINTER                                       *\n*                                                                     *\n*              RC = 8   ERROR WHEN WRITING TO PRINTER                 *\n*                                                                     *\n* REG USAGE:   R0-R2 - WORK REGISTERS                                 *\n*              R3 -  ADDRESS OF INPUT RECORD                          *\n*              R4 -  LENGTH OF INPUT RECORD                           *\n*              R5 -  ADDRESS OF CURRENT 'SLOT' IN OUTPUT BUFFER       *\n*              R6 -  NO OF BYTES REMAINING IN OUTPUT BUFFER           *\n*              R7 -  NOT USED                                         *\n*              R8-R12 - WORK REGISTERS                                *\n*              R13 - BASE REGISTER                                    *\n*              R14 - LINKAGE                                          *\n*              R15 - ENTRY ADDRESS, RETURN CODE                       *\n*                                                                     *\n*****                                                             *****\n         TITLE 'NCZ96103 - LOCAL VTAM PRINT PROGRAM                    *\n               - PROGRAM CODE'\n         PRINT NOGEN\nNCZ96103 MSETUP 13\n         L     R1,0(R1)\n         ST    R1,PARMADR         SAVE PARMFIELD ADDRESS\n         BAL   R14,INIT           INITIAL PROCESSING\n         LTR   R15,R15            DID IT WORK OK?\n         BNZ   EXIT               - NO, SOMETHING NOT OPENED\n*\n         MVC   INAREA,=CL134' '   CLEAR INPUT AREA\n         GET   INPUT,INAREA       GET FIRST RECORD\n         BAL   R14,PROC           PROCESS THE DATASET\nEXIT     BAL   R14,END            END PROCESSING\n         MCLEAR RC=(15)\n*\n********************\n*\n* INITIAL PROCESSING - OPEN ACB AND INPUT FILE\n*                      SET PRINTER NAME\n*                      ACQUIRE PRINTER\n*                      IF OPENS OR ACQUIRE FAIL, SET RC=4, ELSE 0\n*\nINIT     ST    R14,INITSAV\n*\n* SET PARM OPTIONS\n*\nINI010   MVC   NEWNAME,=CL8' '    CLEAR NEW NAME\n         MVI   PAGEFLAG,0         SET NO PAGE SKIP\n         MVI   PAGFORCE,0\n         BAL   R14,PARM           SET THE FIELDS\n         LTR   R15,R15            OK?\n         BNZ   INIEX4             - NO\n*\n         MVC   ACBNAME+1(4),NEWNAME  MOVE PRINTER ID TO ACBNAME\n         MVC   ACBNAME+5(4),=C'PRNT' COMPLETE ACBNAME\n*\n         MVI   VTAMERR,C'3'       SET VTAM ERROR TYPE\n         OPEN  ACB\n         LTR   R15,R15            WAS OPEN SUCCESSFUL?\n         BNZ   VTAM               - NO\n*\n         OPEN  (INPUT,(INPUT))    OPEN INPUT PRINT FILE\n         TM    INPUT+48,X'10'     WAS OPEN SUCCESSFUL\n         BZ    INIEX4             - NO\n*\n         LH    R2,INPUT+82        CHECK INPUT RECORD LENGTH\n         CH    R2,=H'133'         NO MORE THAN 133 CHARS ALLOWED\n         BL    INI015             - OK\n         BE    INI013             - OK\n         WTO   MF=(E,WTO5)\n         BH    INIEX4             - TOO LONG\n*\n* IF REC LENGTH IS 133, FIRST CHAR MUST BE ASA OR MC CHAR\n*\nINI013   TM    INPUT+36,X'04'     ASA CHARS PRESENT?\n         BNZ   INI015             - YES\n         TM    INPUT+36,X'02'     MACHINE CHARS PRESENT?\n         BNZ   INI015             - YES\n         WTO   MF=(E,WTO6)\n         B     INIEX4             - EXIT\n*\nINI015   MVI   VTAMERR,C'1'       SET VTAM ERROR TYPE\n         MODCB AM=VTAM,                                                *\n               NIB=PRINTER,                                            *\n               NAME=(*,NEWNAME)\n         LTR   R15,R15            DID IT MODIFY OK?\n         BNZ   VTAM\n*\nINI020   MVI   VTAMERR,C'2'       SET VTAM ERROR TYPE\n         SIMLOGON RPL=RPL         INDICATE PRINTER REQUIRED\n         LTR   R15,R15            SIMLOGON OK?\n         BNZ   VTAM               - NO\n         LA    R3,2\n         OPNDST RPL=RPL           COMPLETE SESSION\nINI030   LTR   R15,R15            WAS IT OPENED?\n         BNZ   VTAM               - NO\n         LR    R2,R0\n         LTR   R2,R2\n         BZ    INI040             - YES\n         CH    R2,=H'8'           IS REQUEST RETRIEABLE\n         BNE   VTAM               - NO\n         EXECRPL RPL=(1)          - YES, RETRY\n         BCT   R3,INI030                 MAX OF 2 TIMES\n         B     VTAM\nINI040   MVI   VTAMERR,C'1'       SET VTAM ERROR TYPE\n         TESTCB NIB=PRINTER,      WAS PRINTER ACQUIRED                 *\n               AM=VTAM,                                                *\n               CON=YES\n         BNE   VTAM               - NO\n*\n         ZAP   LCT,LINECT         INITIALIZE LINE COUNT\n*\nINIEX0   LA    R15,0\n         B     INIOUT\nINIEX4   LA    R15,4\nINIOUT   L     R14,INITSAV\n         BR    R14\n*\nINITSAV  DS    A\n*\n********************\n*\n* LOGEXIT - VTAM LOGON EXIT\n*\nLOGEXIT  BR    R14\n*\n********************\n*\n* MAIN PROCESSING - BRANCH TO CLEAR ROUTINE\n*                   READ INPUT RECORD\n*                   BRANCH TO FORMAT ROUTINE\n*                   ADD FORMATTED RECORD TO PRINT BUFFER\n*                   WHEN BUFFER FULL (OR EOD), OUTPUT BUFFER\n*\nPROC     ST    R14,PROCSAV\nPRO010   BAL   R14,CLEAR          CLEAR OUTPUT BUFFER, ETC\nPRO020   LA    R3,INAREA          SET RECORD ADDRESS\n         BAL   R14,FORMAT         FORMAT THE RECORD\n         LR    R1,R4              LOAD RECORD LENGTH\n         BCTR  R1,R0              SUBTRACT 1\n         EX    R1,BUFADD          MOVE RECORD TO PRINT BUFFER\n         LA    R5,0(R4,R5)        INCREASE BUFFER ADDRESS\n         SR    R6,R4              DECREASE BYTES LEFT IN BUFFER\n*\n         MVC   INAREA,=CL134' '   CLEAR INPUT AREA\n         GET   INPUT,INAREA       GET NEXT RECORD\n         TM    INPUT+36,X'04'     ASA CHARS PRESENT?\n         BNZ   PRO024             - YES\n         TM    INPUT+36,X'02'     MACHINE CHARS PRESENT?\n         BNZ   PRO026             - YES\n         B     PRO030             - NO\nPRO024   CLI   INAREA,C'+'        (ASA) IS NEXT LINE NO LINE SKIP\n         BNE   PRO030\n         B     PRO028\nPRO026   CLI   INAREA,X'01'       (MC)  IS NEXT LINE NO LINE SKIP\n         BNE   PRO030\nPRO028   BCTR  R5,R0              - YES, POINT BACK AT END OF LAST LINE\n         MVI   0(R5),X'0D'        OVERWRITE WITH CR\n         LA    R5,1(R5)           RESET R5\n*\nPRO030   CH    R6,=H'134'         ROOM FOR MORE?\n         BNL   PRO020             - YES, GO GET SOME MORE\n*\nPRO040   MVI   0(R5),X'19'        INDICATE END OF MESSAGE\n         LA    R12,OUTPUT         CALC LENGTH OF MESSAGE\n         SR    R5,R12\n         LA    R5,1(R5)           ADD ONE FOR EM CHAR\n*\n         MVI   VTAMERR,C'1'       SET VTAM ERROR TYPE\n         MODCB RPL=RPL,           SET LENGTH OF MESSAGE                *\n               RECLEN=(5)\n         LTR   R15,R15            OK?\n         BNZ   VTAM               - NO, OH DEAR!!!\n*\n         MVI   VTAMERR,C'2'       SET VTAM ERROR TYPE\n         SEND  RPL=RPL,                                                *\n               BRACKET=(BB,EB),                                        *\n               CONTROL=DATA,                                           *\n               POST=RESP,                                              *\n               STYPE=REQ,                                              *\n               RESPOND=(NEX,FME,NRRN),                                 *\n               AREA=OUTPUT\n         LTR   R15,R15            WAS IT OK?\n         BNZ   VTAM               - NO, OH SH.....\n*\n         CLI   EOF,1              ANY MORE TO DO?\n         BNE   PRO010             - YES\n*\nPROEX0   LA    R15,0\n         B     PROOUT\nPROEX8   ABEND 1,DUMP\nPROOUT   L     R14,PROCSAV\n         BR    R14\n*\nPROEOD   MVI   EOF,1              INDICATE END OF FILE\n         B     PRO040             WRITE OUT FINAL MESSAGE\n*\nPROCSAV  DS    A\nBUFADD   MVC   0(0,R5),0(R3)      MOVE INPUT RECORD TO OUTPUT BUFFER\n*\n********************\n*\n* END - RELEASE PRINTER, CLOSE ACB AND INPUT FILE AS NECESSARY\n*       SET FINAL RETURN CODE\n*\nEND      ST    R14,ENDSAV\n         LR    R12,R15            SAVE RETURN CODE\n         TESTCB NIB=PRINTER,      WAS PRINTER ACQUIRED                 *\n               AM=VTAM,                                                *\n               CON=YES\n         BNE   END010             - NO\n         CLSDST RPL=RPL           - YES, RELEASE IT\n*\nEND010   TM    INPUT+48,X'10'     WAS INPUT FILE OPEN\n         BZ    END020             - NO\n         CLOSE INPUT\n*\nEND020   TESTCB ACB=ACB,          WAS ACB OPEN                         *\n               AM=VTAM,                                                *\n               OFLAGS=OPEN\n         BNE   END030             - NO\n         CLOSE ACB                - YES, CLOSE IT\n*\nEND030   LR    R15,R12            RESET RETURN CODE\n         L     R14,ENDSAV\n         BR    R14\n*\nENDSAV   DS    A\n*\n********************\n*\n* VTAM - PRODUCE ERROR MESSAGES FOR VTAM ERRORS\n*\nVTAM     ST    R14,E14            SAVE R14\n         CLI   VTAMERR,C'1'       VTAM ERROR TYPE 1 (MODCB ERROR)\n         BNE   VTA010\n         ST    R15,WK4\n         UNPK  V1R15(3),WK4+3(2)\n         TR    V1R15,HEXTAB-240\n         MVI   V1R15+2,C' '\n         ST    R0,WK4\n         UNPK  V1R0(3),WK4+3(2)\n         TR    V1R0,HEXTAB-240\n         MVI   V1R0+2,C' '\n         WTO   MF=(E,WTO1)\n*\nVTA010   CLI   VTAMERR,C'2'       VTAM ERROR TYPE2 (RPL BASED)\n         BNE   VTA020\n         ST    R15,WK4\n         UNPK  V2R15(3),WK4+3(2)\n         TR    V2R15,HEXTAB-240\n         MVI   V2R15+2,C' '\n         SHOWCB RPL=RPL,          GET ERROR CODES FROM RPL             *\n               AM=VTAM,                                                *\n               FIELDS=(RTNCD,FDBK2,REQ),                               *\n               AREA=VTAMAREA,                                          *\n               LENGTH=12\n         UNPK  V2RCD(3),VTRCD+3(2)\n         TR    V2RCD,HEXTAB-240\n         MVI   V2RCD+2,C' '\n         UNPK  V2FBK(3),VTFBK+3(2)\n         TR    V2FBK,HEXTAB-240\n         MVI   V2FBK+2,C' '\n         UNPK  V2REQ(3),VTREQ+3(2)\n         TR    V2REQ,HEXTAB-240\n         MVI   V2REQ+2,C' '\n         WTO   MF=(E,WTO2)\n*\nVTA020   CLI   VTAMERR,C'3'       VTAM ERROR TYPE3 (ACB BASED)\n         BNE   VTA030\n         ST    R15,WK4\n         UNPK  V3R15(3),WK4+3(2)\n         TR    V3R15,HEXTAB-240\n         MVI   V3R15+2,C' '\n         SHOWCB ACB=ACB,          GET ERROR CODE FROM ACB              *\n               AM=VTAM,                                                *\n               FIELDS=ERROR,                                           *\n               AREA=VTAMAREA,                                          *\n               LENGTH=4\n         UNPK  V3ERR(3),VTAMAREA+3(2)\n         TR    V3ERR,HEXTAB-240\n         MVI   V3ERR+2,C' '\n         WTO   MF=(E,WTO3)\n*\nVTA030   EQU   *\n         ABEND 1,DUMP\n*\n********************\n*\n* PARM - SET PARMFIELD OPTIONS (TERMINAL ID AND PAGE SIZE)\n*\nPARM     ST    R14,PARMSAV\n         L     R1,PARMADR         RELOAD PARMFIELD ADDRESS\n         LH    R2,0(R1)           GET LENGTH\n         CH    R2,=H'7'           CORRECT PARM LENGTH?\n         BNE   PAREX4             - NO\n         LA    R1,2(R1)           POINT AT FIRST FIELD\n*\n*   CHECK PARMFIELD\n*\n         CLI   4(R1),C','         COMMA IN RIGHT PLACE?\n         BNE   PAREX4             - NO\n         TRT   5(2,R1),NUMTAB\n         BNZ   PAREX4\n*\n*   SET OPTIONS\n*\n         MVC   NEWNAME(4),0(R1)   SET PRINTER NAME\n         PACK  LINECT,5(2,R1)     SET PAGESIZE\n         CP    LINECT,=P'0'\n         BE    PAREX0\n         MVI   PAGEFLAG,1\n*\nPAREX0   LA    R15,0\n         B     PAROUT\nPAREX4   WTO   MF=(E,WTO4)\n         LA    R15,4\nPAROUT   L     R14,PARMSAV\n         BR    R14\n*\nPARMSAV  DS    A\n*\n********************\n*\n* CLEAR - CLEAR OUTPUT BUFFER\n*         INITIALIZE POINTER AND COUNT REGISTERS\n*\nCLEAR    ST    R14,CLRSAV\n         LA    R8,OUTPUT          SET UP TO CLEAR OUTPUT AREA\n         LA    R9,LOUTPUT\n         LA    R10,0\n         IC    R11,X'40'\n         SLL   R11,24\n         MVCL  R8,R10\n*\n         LA    R5,OUTPUT          R5 - POINTS TO OUTPUT AREA\n         MVC   0(2,R5),=X'F5C8'   MOVE IN WRITE COMMAND\n         LA    R5,2(R5)           STEP FORWARD IN BUFFER\n         LA    R6,LOUTPUT         R6 - BYTES LEFT IN OUTPUT AREA\n         SH    R6,=H'2'\n*\n         L     R14,CLRSAV\n         BR    R14\n*\nCLRSAV   DS    A\n*\n********************\n*\n* FORMAT - TRANSLATE ASA CHARS TO 3287 CONTROL CHARS\n*          ADD FORM FEED FOR FIRST RECORD (IF NOT THERE)\n*          SET LENGTH OF RECORD\n*\nFORMAT   ST    R14,FORSAV\n         LA    R4,132             SET OUTPUT LENGTH\n         TM    INPUT+36,X'04'     ASA CHARS PRESENT?\n         BNZ   FORA10             - YES\n         TM    INPUT+36,X'02'     MACHINE CHARS PRESENT?\n         BNZ   FORM10             - YES\n         B     FOR050\n*   FORMAT ASA CONTROL CHARACTERS\nFORA10   LA    R4,133             RESET OUTPUT LENGTH\n         CLI   0(R3),C'0'         DOUBLE SPACE?\n         BNE   FORA20\n         MVI   0(R3),X'15'\n         SP    LCT,=P'2'\n         B     FOR060\n*\nFORA20   CLI   0(R3),C'-'         TRIPLE SPACE?\n         BNE   FORA30\n         MVI   0(R5),X'15'        ADD EXTRA LINE FEED TO OUTPUT BUFFER\n         LA    R5,1(R5)\n         BCTR  R6,R0\n         MVI   0(R3),X'15'\n         SP    LCT,=P'3'\n         B     FOR060\n*\n* IF FIRST CHAR IS NEW PAGE OR ANYTHING NOT ABOVE, WIPE IT OFF\n*\nFORA30   CLI   0(R3),C'1'         NEW PAGE?\n         BNE   FORA40\n         MVI   PAGFORCE,1         FORCE NEW PAGE\n         SP    LCT,=P'100'     AND SET LINE COUNT NEGATIVE (MESSY!)\nFORA40   BCTR  R4,R0              RESET LINE LENGTH\n         LR    R2,R4\n         BCTR  R2,R0              SET LENGTH FOR MOVE\n         EX    R2,WIPEMOVE        WIPE OFF FIRST CHAR\n         B     FOR050\n*\n*   FORMAT MACHINE CONTROL CHARACTERS\nFORM10   LA    R4,133             RESET OUTPUT LENGTH\n         CLI   0(R3),X'11'        DOUBLE SPACE?\n         BNE   FORM20\n         MVI   0(R3),X'15'\n         SP    LCT,=P'2'\n         B     FOR060\n*\nFORM20   CLI   0(R3),X'19'        TRIPLE SPACE?\n         BNE   FORM30\n         MVI   0(R5),X'15'        ADD EXTRA LINE FEED TO OUTPUT BUFFER\n         LA    R5,1(R5)\n         BCTR  R6,R0\n         MVI   0(R3),X'15'\n         SP    LCT,=P'3'\n         B     FOR060\n*\n* IF FIRST CHAR IS NEW PAGE OR ANYTHING NOT ABOVE, WIPE IT OFF\n*\nFORM30   CLI   0(R3),X'89'        NEW PAGE?\n         BNE   FORM40\n         MVI   PAGFORCE,1         FORCE NEW PAGE\n         SP    LCT,=P'100'     AND SET LINE COUNT NEGATIVE (MESSY!)\nFORM40   BCTR  R4,R0              RESET LINE LENGTH\n         LR    R2,R4\n         BCTR  R2,R0              SET LENGTH FOR MOVE\n         EX    R2,WIPEMOVE        WIPE OFF FIRST CHAR\n*\nFOR050   SP    LCT,=P'1'          INDICATE ONE LINE\n*\n* INPUT LINE IS NOW IN A FORM WHICH CAN BE SENT TO THE 3287 AND LINE\n* LENGTH HAS BEEN ADJUSTED AS NECESSARY\n* CONDITION CODE HAS BEEN SET FOR TEST FOR NEW PAGE\n*\nFOR060   BP    FOR080             NEW PAGE NOT NEEDED\n         CLI   PAGFORCE,1         NEW PAGE FORCED?\n         BE    FOR070             - YES\n         CLI   PAGEFLAG,1         ARE WE USING LINECT\n         BNE   FOR080             - NO\nFOR070   MVC   0(2,R5),=X'0C0D'   PUT FF AND CR IN BUFFER\n         LA    R5,2(R5)\n         SH    R6,=H'2'\n         ZAP   LCT,LINECT         RESET LINE COUNT\n         MVI   PAGFORCE,0\nFOR080   EQU   *\n         L     R14,FORSAV\n         BR    R14\n*\nFORSAV   DS    A\nWIPEMOVE MVC   0(0,R3),1(R3)      WIPE FIRST CHAR FROM INPUT LINE\n*\n********************\n*\n         TITLE 'NCZ96103 - LOCAL VTAM PRINT PROGRAM                    *\n               - DATA DEFINITION'\n         LTORG\n*\nINPUT    DCB   DDNAME=INPUT,                                           *\n               MACRF=GM,                                               *\n               DSORG=PS,                                               *\n               EODAD=PROEOD\n*\n         DC    CL4'ACB'\nACB      ACB   AM=VTAM,                                                *\n               APPLID=ACBNAME,                                         *\n               EXLST=EXLST,                                            *\n               MACRF=LOGON\n*\n         DC    CL4'RPL'\nRPL      RPL   AM=VTAM,                                                *\n               ACB=ACB,                                                *\n               NIB=PRINTER,                                            *\n               AREA=OUTPUT,                                            *\n               OPTCD=(SYN,ACCEPT)\n*\nPRINTER  NIB   MODE=RECORD\n*\nEXLST    EXLST AM=VTAM,                                                *\n               LOGON=LOGEXIT\n*\nPARMADR  DC    A(0)\nE14      DC    A(0)\nWK4      DC    F'0'\nNEWNAME  DC    CL8' '\nVTAMAREA DC    CL12' '\n         ORG   VTAMAREA\nVTRCD    DC    CL4' '\nVTFBK    DC    CL4' '\nVTREQ    DC    CL4' '\nACBNAME  DC    C'8'\n         DC    CL8' '\nLCT      DC    PL2'0'\nLINECT   DC    PL2'0'\nEOF      DC    X'0'\nPAGEFLAG DC    X'0'\nPAGFORCE DC    X'0'\nVTAMERR  DC    C'0'\nNUMTAB   DC    240X'FF',10X'0',6X'FF'\nHEXTAB   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n*                     1         2         3         4\n*               4567890123456789012345678901234567890123456789012345678\nWTO1     WTO   'MC3051I:TYPE 1 ERROR: R15=XX , R0=XX  ',MF=L\nV1R15    EQU   WTO1+30,2\nV1R0     EQU   WTO1+38,2\nWTO2     WTO   'MC3052I:TYPE 2 ERROR: R15=XX , RTNCD=XX , FDBK2=XX , RE*\n               Q=XX  ',MF=L\nV2R15    EQU   WTO2+30,2\nV2RCD    EQU   WTO2+41,2\nV2FBK    EQU   WTO2+52,2\nV2REQ    EQU   WTO2+61,2\nWTO3     WTO   'MC3053I:TYPE 3 ERROR: R15=XX , ERROR=XX  ',MF=L\nV3R15    EQU   WTO3+30,2\nV3ERR    EQU   WTO3+41,2\nWTO4     WTO   'MC3054I:INVALID PARM FIELD',ROUTCDE=(11),MF=L\nWTO5     WTO   'MC3055I:INVALID LRECL SIZE',ROUTCDE=(11),MF=L\nWTO6     WTO   'MC3056I:INVALID RECFM',ROUTCDE=(11),MF=L\n*\nINAREA   DC    CL134' '\n*\nOUTPUT   DS    CL2                WRITE COMMANDS\n         DS    10CL133            LINES\n         DS    C                  END OF MESSAGE\nLOUTPUT  EQU   *-OUTPUT\n*\n********************\n*\n         END   NCZ96103\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NCZ99002": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "NCZ99002 TITLE 'CHARACTER STRING HANDLER                               *\n               - PROGRAM DOCUMENTATION'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ99002 - CHARACTER STRING HANDLER                    *\n*                                                                     *\n* NCZ99002.1 PROGRAM DESCRIPTION                                      *\n*                                                                     *\n* THIS SUBROUTINE CAN BE CALLED FROM AN ASSEMBLER PROGRAM TO SCAN A   *\n* CHARACTER STRING AND RETURN THE ADDRESSES AND LENGTHS OF FIELDS     *\n* WITHIN THE STRING. A FIELD IS DEFINED AS A STRING OF CHARACTERS     *\n* DELIMITED BY SEPARATOR CHARACTERS WHICH ARE PROVIDED IN A LIST.     *\n* THE INTENTION IS TO ASSIST WITH ANALYSIS OF CONTROL STATEMENTS      *\n* AND PARAMETERS IN ASSEMBLER PROGRAMS.                               *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ99002.2 USER INSTRUCTIONS                                        *\n*                                                                     *\n* THE SUBROUTINE IS INVOKED BY THE NORMAL OS 'CALL' INTERFACE WITH 6  *\n* PARAMETERS:                                                         *\n*                                                                     *\n* P1 - ADDRESS OF CHARACTER STRING TO BE ANALYSED                     *\n* P2 - LENGTH OF CHARACTER STRING                                     *\n* P3 - ADDRESS OF LIST OF SEPARATOR CHARACTERS                        *\n* P4 - NUMBER OF SEPARATOR CHARACTERS IN LIST                         *\n* P5 - ADDRESS OF LIST OF FIELD ADDRESSES AND LENGTHS                 *\n* P6 - NUMBER OF ENTRIES IN FIELD LIST (IE NUMBER OF FIELDS REQUIRED) *\n*                                                                     *\n* P1, P3, P5 ARE FULLWORD ADDRESSES.                                  *\n* P2, P4, P6 ARE HALFWORDS.                                           *\n*                                                                     *\n* THE SUBROUTINE RETURNS THE ADDRESS(ES) OF THE FIELDS IN THE FIELD   *\n* ADDRESS LIST. EACH ENTRY IN THIS LIST HAS THE FORMAT:               *\n* 1 BYTE FIELD LENGTH (ABSOLUTE, NOT 'MACHINE LENGTH')                *\n* 3 BYTES FIELD START ADDRESS                                         *\n*                                                                     *\n* THE SUBROUTINE ZEROISES THE FIELD ENTRIES DURING INITIALISATION.    *\n*                                                                     *\n* THERE ARE SOME RESTRICTIONS:                                        *\n*                                                                     *\n* - THE LENGTH OF A FIELD MAY NOT EXCEED 255 BYTES.                   *\n*                                                                     *\n* - A MAXIMUM OF 64 FIELDS MAY BE REQUESTED.                          *\n*                                                                     *\n* IF INVALID PARAMETERS ARE PASSED THE SUBROUTINE WILL RETURN WITH    *\n* A NON-ZERO RETURN CODE AND INDETERMINATE RESULTS. NO DATA AREAS     *\n* WILL BE MODIFIED EXCEPT FOR THE FIELD ADDRESS LIST.                 *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ99002.3 MESSAGES                                                 *\n*                                                                     *\n* NONE                                                                *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ99002.4 ABEND CODES                                              *\n*                                                                     *\n* NONE                                                                *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ99002.5 IMPLEMENTATION METHOD                                    *\n*                                                                     *\n* MOVE TO MAC1.ASM AND PASMAL.                                        *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ99002.6 AMENDMENT HISTORY                                        *\n*                                                                     *\n* CHANGE HISTORY:                                                     *\n* DATE      INITS VERSION COMMENTS                                    *\n*                                                                     *\n* 01 SEP 83 RH    V01     CREATED                                     *\n*                                                                     *\n* SUGGESTED ENHANCEMENTS:                                             *\n*                                                                     *\n* RECORD DETAILS BELOW.                                               *\n*                                                                     *\n* DD MMM YY WHO : COMMENTS                                            *\n*                                                                     *\n*****                                                             *****\n         EJECT\n*****                                                             *****\n*                                                                     *\n* NCZ99002.7 MODULARISATION DETAILS                                   *\n*                                                                     *\n* SIMPLE STRUCTURE. NO OS CALLS. DOES NOT USE 'TRT'.                  *\n*                                                                     *\n*****                                                             *****\n         SPACE\n*****                                                             *****\n*                                                                     *\n* NCZ99002.8 PROGRAM LOGIC OVERVIEW                                   *\n*                                                                     *\n* OMITTED.\n*                                                                     *\n*                                                                     *\n*****                                                             *****\n         TITLE 'CHARACTER STRING HANDLER                               *\n               - PROGRAM PROLOGUE'\n*****                                                             *****\n*                                                                     *\n* ID:          NCZ99002 - CHARACTER STRING HANDLER                    *\n*                                                                     *\n* ENTRY INTFCE: NORMAL OS.                                            *\n*                                                                     *\n* EXIT  INTFCE: NORMAL OS.                                            *\n*                                                                     *\n* RETURN CODES:RC = 0   - ALL PROCESSING OK                           *\n*                                                                     *\n*              RC = 4   - SERIOUS ERROR                               *\n*                                                                     *\n* REG USAGE:   R0 -                                                   *\n*              R1 -                                                   *\n*              R2 -> CHARACTER STRING                                 *\n*              R3 =  # OF CHARS IN STRING                             *\n*              R4 -> LIST OF SEPARATOR CHARS                          *\n*              R5 =  # OF SEPARATOR CHARS                             *\n*              R6 -> CURRENT FIELD ENTRY                              *\n*              R7 =  # OF FIELDS IN LIST                              *\n*              R8 -                                                   *\n*              R9 -                                                   *\n*              R10 -                                                  *\n*              R11 -                                                  *\n*              R12 -                                                  *\n*              R13 - BASE, SAVE AREA                                  *\n*              R14 -                                                  *\n*              R15 -                                                  *\n*                                                                     *\n*****                                                             *****\n         TITLE 'CHARACTER STRING HANDLER                               *\n               - PROGRAM CODE'\n         PRINT NOGEN\nNCZ99002 MSETUP 13\n         MVI   FLAGS,X'00'     CLEAR FLAGS\n*\n         LM    R2,R7,0(R1)     LOAD ADDRESSES OF P1 TO P6\n         LH    R3,0(R3)        # OF STRING CHARACTERS\n         LH    R5,0(R5)        # OF SEPARATORS\n         LH    R7,0(R7)        # OF FIELDS\n         LTR   R2,R2           Q IS STRING POINTER ZERO?\n         BZ    BADRC           Y\n         LTR   R3,R3           Q IS # OF STRING CHARS ZERO?\n         BZ    BADRC           Y\n         LTR   R4,R4           Q IS FIELD SEP POINTER ZERO?\n         BZ    BADRC           Y\n         LTR   R5,R5           Q IS # OF FIELD SEP CHARS ZERO?\n         BZ    BADRC           Y\n         LTR   R7,R7           Q IS # OF FIELDS ZERO?\n         BZ    BADRC           Y\n         CH    R7,=H'64'       Q MORE THAN 64 FIELDS?\n         BH    BADRC           Y\n         LTR   R6,R6           Q IS FIELD LIST POINTER ZERO?\n         BZ    BADRC           Y\n*\nPARMOK   LR    R8,R7           COPY # OF FIELDS\n         SLL   R8,2            GET # 0F BYTES OCCUPIED BY FIELD ENTRIES\n         BCTR  R8,0            MAKE MACHINE LENGTH\n         EX    R8,EXXC         CLEAR FIELD LIST\n         B     EXAMINE\n         EJECT\nNEXTCHAR LA    R2,1(R2)\n         BCT   R3,EXAMINE\n         TM    FLAGS,INFIELD   Q - IN A FIELD ?\n         BZ    EXIT            N SO WE ARE FINISHED\n         OI    FLAGS,ENDSTRNG  Y INDICATE WE HAVE HIT THE END OF STRING\n         B     COMPUTE\n         SPACE\nEXAMINE  LR    R8,R5           COPY # OF SEP CHAR\n         LR    R9,R4           COPY ADDRESS OF SEP CHARS\nSEPTEST  CLC   0(1,R2),0(R9)   Q IS IT A SEP CHAR?\n         BE    GOTSEP          Y\n         LA    R9,1(R9)        N STEP SEP POINTER\n         BCT   R8,SEPTEST      CHECK NEXT SEP\n*\nNOSEP    TM    FLAGS,INFIELD   Q IN A FIELD?\n         BO    NEXTCHAR        Y CHECK NEXT CHAR\n         OI    FLAGS,INFIELD   N INDICATE START OF FIELD\n         ST    R2,FLDSTART     KEEP ADDRESS OF START OF FIELD\n         B     NEXTCHAR        CHECK NEXT CHAR\n         SPACE\nGOTSEP   TM    FLAGS,INFIELD   Q IN FIELD?\n         BZ    NEXTCHAR        N DO NOT CARE\n*                              Y END OF FIELD\nCOMPUTE  LR    R10,R2          COPY STRING POINTER\n         S     R10,FLDSTART    COMPUTE FIELD LENGTH\n         MVC   0(4,R6),FLDSTART STORE START ADDRESS\n         CH    R10,=H'256'     Q TOO BIG FOR 1 BYTE?\n         BH    BADRC           Y\nLENOK    STC   R10,0(R6)       STORE ADDRESS\n         NI    FLAGS,X'FF'-INFIELD INDICATE END OF FIELD\n         TM    FLAGS,ENDSTRNG  Q HAVE WE PROCESSED ALL CHARS ?\n         BO    EXIT            Y\n         LA    R6,4(R6)\n         BCT   R7,NEXTCHAR     CHECK NEXT CHAR\n         SPACE\nEXIT     MCLEAR RC=0\nBADRC    MCLEAR RC=4\n         EJECT\n         LTORG\nFLAGS    DS    X\nINFIELD  EQU   X'80'\nENDSTRNG EQU   X'40'\nFLDSTART DS    F\n         DS    0H\nEXXC     XC    0(0,R6),0(R6)\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPLE": {"ttr": 2053, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": " THIS IS A SAMPLE OF THE OUTPUT FROM IEFACTRT TAKEN FROM A JOB\n MESSAGE LISTING. THE BOX HAS BEEN CHOPPED IN TWO PIECES TO FIT INTO\n AN 80 BYTE RECORD - IT DOESN'T REALLY LOOK LIKE THIS.\n .\n .\n .\n .\n .\n IEF285I   SYS1.VVDS.VMAS002                            KEPT\n IEF285I   VOL SER NOS= MAS002.\n *******************************************************************************\n *          PROGRAM - DFSRRC00          STEP - MBI1E013    CPU TIME -    22.45 S\n **DDNAME..UNIT.TYPE....BLKSIZE.....I/O'S***DDNAME..UNIT.TYPE....BLKSIZE.....I/O\n * JOBLIB   519 3350     19069          2 * IMSACB   222 3350     19069\n * DFSVSAMP 519 3350      3200          3 * IEFRDER  JES/DUMMY      N/A        N\n * SYS03041 140 3350         0          0 * MADBV03A 140 3350         0        4\n * MADBV06A 140 3350         0          3 * MADBV09A 140 3350         0\n * MADBV04X 140 3350         0          0 * MADBV04A 140 3350         0\n * MADBV10A 140 3350         0        754 * MADBV03B 140 3350         0\n * MADBV03C 140 3350         0          2 * MADBV03D 140 3350         0        1\n * MADBV11A 140 3350         0          0 * MADBV05A 140 3350         0\n * MADBV15A 140 3350         0          0 * MADBV05B 140 3350         0\n * MADBV14A 140 3350         0          4 * MBI1D04A 142 3350      4036\n * SYSOUT   JES/DUMMY      N/A        N/A * SYSUDUMP JES/DUMMY      N/A        N\n * SYS03038 51B 3350         0          0 * SYS03040 140 3350         0\n *******************************************************************************\n  ..  *********************************************\n  ..  EC    SERVICE UNITS -      44,819           *\n  ..  'S***DDNAME..UNIT.TYPE....BLKSIZE.....I/O'S**\n  ..  38 * SYS03039 51B 3350         0          0 *\n  ..  /A * MADBV03X 140 3350         0         74 *\n  ..  95 * MADBV07A 140 3350         0          0 *\n  ..   0 * MADBV12A 140 3350         0          0 *\n  ..   0 * MADBV08A 140 3350         0          0 *\n  ..   2 * MADBV04B 140 3350         0          0 *\n  ..  71 * MADBV01A 140 3350         0          0 *\n  ..   0 * MADBV02A 140 3350         0          0 *\n  ..   0 * MADBV13A 140 3350         0        748 *\n  ..  10 * MBI1R02A JES/DUMMY      N/A        N/A *\n  ..  /A * SYS00002 140 3350         0          0 *\n  ..   0 *                                        *\n  ..  *********************************************\n IEF373I STEP /MBI1E013/ START 85256.0022\n IEF374I STEP /MBI1E013/ STOP  85256.0023 CPU    0MIN 20.52SEC SRB    0MIN 01.93\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SCANINFO": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1**********************************************************************\n *                                                          PAGE  1   *\n *                                                                    *\n *                                                                    *\n * NOTE: THERE IS AN NEWSLETTER TO THIS DOCUMENTATION WHICH YOU       *\n *       WILL FIND AT THE END OF THIS MEMBER.                         *\n *       FOR JCL TO EXECUTE NCXPDSCN SEE THE PROCEDURE SPECIFICATION  *\n *       IN ISD INFO.                                                 *\n *       THIS MEMBER IS RATHER DIFFICULT TO BROWSE. YOU ARE           *\n *       RECOMMENDED TO READ THE ISD INFO LISTING OF THIS MEMBER.     *\n *                                                                    *\n * CHANGE HISTORY:                                                    *\n * 19 MAR 82 RH  : CREATED.                                           *\n * 19 JUL 82 RH  : UPDATED MAIN PART OF TEXT WITH AMENDMENT #1.       *\n * 05 NOV 82 RH  : UPDATED FOR NEW ABEND CODES.                       *\n * 12 NOV 82 RH  : UPDATED FOR EXIT FACILITY AND GENERALLY REWRITTEN. *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                 P A R T I T I O N E D   D A T A S E T              *\n *                 _____________________________________              *\n *                                                                    *\n *                                                                    *\n *                  U T I L I T Y    N C X P D S C N                  *\n *                  ________________________________                  *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                       INVENTOR:     P.LARRETT      *\n *                                                      05.01.81      *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     1     FUNCTIONS                                      PAGE  2   *\n *           ---------                                                *\n *            THIS PROGRAM WILL PERFORM SEVERAL USEFUL FUNCTIONS ON   *\n *            AN 80 BYTE CARD-IMAGE PARTITIONED DATASET (PDS).        *\n *                                                                    *\n *     1.1   TEXT SCAN                                                *\n *           _________                                                *\n *                                                                    *\n *            SCAN ALL OR SOME OF THE MEMBERS OF A PDS FOR THE        *\n *            OCCURRENCES OF UP TO 40 USER-SPECIFIED CHARACTER        *\n *            STRINGS OF UP TO 31 CHARACTERS. CHARACTER STRINGS MAY   *\n *            CONTAIN ANY VALID EBCDIC CHARACTERS.                    *\n *                                                                    *\n *     1.2   MEMBER UNLOAD                                            *\n *           _____________                                            *\n *                                                                    *\n *            UNLOAD ALL OR SOME OF THE MEMBERS OF A PDS TO A         *\n *            SEQUENTIAL DATASET SUITABLE FOR INPUT TO THE IBM        *\n *            UTILITY 'IEBUPDTE' AS THE DATASET DDNAME=SYSIN. MEMBERS *\n *            ARE SEPARATED BY RECORDS IN THE FORMAT:                 *\n *                                                                    *\n *                                                                    *\n *                ./ ADD NAME=MEMBER                                  *\n *                                                                    *\n *             NO RENUMBERING IS PERFORMED.                           *\n *                                                                    *\n *                                                                    *\n *     1.3   DIRECTORY LISTING                                        *\n *           _________________                                        *\n *                                                                    *\n *            LIST ALL OR PART OF A PDS DIRECTORY. ONLY THE MEMBER    *\n *            NAMES ARE LISTED; NO TTR OR USER DATA IS LISTED.        *\n *                                                                    *\n *                                                                    *\n *      1.4  MEMBER SELECTION                                         *\n *           ----------------                                         *\n *                                                                    *\n *            THE SELECTION OF MEMBERS TO BE PROCESSED MAY BE BY THE  *\n *            FOLLOWING CRITERIA:                                     *\n *                                                                    *\n *            GENERIC - THE MEMBERS ARE IDENTIFIED BY A PARTICULAR    *\n *                      PREFIX.                                       *\n *                                                                    *\n *            SPECIFIC - THE MEMBERS ARE IDENTIFIED BY NAME.          *\n *                                                                    *\n *            FULL FILE - ALL MEMBERS IN A PDS ARE PROCESSED.         *\n *                                                                    *\n *      1.5  EXITS                                                    *\n *           -----                                                    *\n *                                                                    *\n *           PROCESSING MAY BE FURTHER CONTROLLED BY TWO EXITS:       *\n *                                                                    *\n *           EXIT 0 MAY BE USED TO REJECT MEMBERS FROM PROCESSING.    *\n *                                                                    *\n *           EXIT 1 MAY BE USED TO REJECT RECORDS FROM PROCESSING.    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     2     PARAMETER OPTIONS                              PAGE  3   *\n *           -----------------                                        *\n *                                                                    *\n *                                                                    *\n *     2.1   OVERVIEW                                                 *\n *           ________                                                 *\n *                                                                    *\n *                                                                    *\n *             PROCESSING OPTIONS ARE SPECIFIED IN THE PROGRAM        *\n *            PARAMETER ON THE EXEC JCL STATEMENT. EACH OPTION IS     *\n *            DESIGNATED A SINGLE CHARACTER:                          *\n *             EG:               PARM='C,K,L'                         *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.2   TEXT SCAN OUTPUT                                         *\n *           ________________                                         *\n *                                                                    *\n *                                                                    *\n *             THERE ARE TWO OPTIONS DICTATING HOW OUTPUT FROM THE    *\n *            TEXT SCAN FACILITY IS PRESENTED; THE LAYOUT OF THE      *\n *            FILES PRODUCED IS DESCRIBED IN FULL IN '4.2  OUTPUT     *\n *            SCAN/CROSS-REFERENCE FILES'. ESSENTIALLY, THE FIRST     *\n *            PROVIDES A CARD (I)MAGE OF ANY RECORD THAT SATISFIES    *\n *            THE SELECTION CRITERIA; THE SECOND PROVIDES A FORMATTED *\n *            RECORD THAT ASSUMES A (K)EYWORD TYPE INPUT THAT         *\n *            REQUIRES A DATA OPERAND. EXAMPLES OF THIS SECOND TYPE   *\n *            MIGHT BE 'DSN' IN A JCL PROC OR 'COPY' IN A COBOL       *\n *            PROGRAM.                                                *\n *                                                                    *\n *                 A)  IMAGE OUTPUT                                   *\n *                       THE CHARACTER 'I' SPECIFIES TEXT SCAN OUTPUT *\n *                      TO BE IN IMAGE FORM                           *\n *                                                                    *\n *                 B)  FORMATTED OUTPUT                               *\n *                       THE CHARACTER 'K' SPECIFIES TEXT SCAN OUTPUT *\n *                      TO BE IN A FORMATTED LAYOUT.                  *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.3   MEMBER SELECTION                                         *\n *           ________________                                         *\n *                                                                    *\n *                                                                    *\n *             MEMBERS MAY BE SELECTED IN THREE MODES :               *\n *                                                                    *\n *                 A)  FULL FILE                                      *\n *                                                                    *\n *                 B)  SELECTED MEMBERS AS SPECIFIED ON CARD INPUT    *\n *                                                                    *\n *                 C)  SELECTED MEMBERS AS SPECIFIED BY A SINGLE      *\n *                     'GENERIC' CRITERION.                           *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 4    *\n *                                                                    *\n *     2.3   MEMBER SELECTION  (CONTD)                                *\n *           ________________                                         *\n *                                                                    *\n *                                                                    *\n *               IN THE FIRST INSTANCE, EVERY MEMBER IN THE           *\n *              SPECIFIED DATASET IS PROCESSED; IN THE SECOND,        *\n *              MEMBER NAMES ARE SPECIFIED ON CARDS. IN THE THIRD,    *\n *              THE PARTITIONED DATASET IS SEARCHED FOR MEMBERS       *\n *              SATISFYING A 'GENERIC' SELECTION CRITERION.           *\n *                                                                    *\n *               PARAMETER OPTIONS FOR A), B), AND C) ARE 'F',        *\n *              'C' AND 'G' RESPECTIVELY.                             *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.4   UNLOAD                                                   *\n *           ______                                                   *\n *                                                                    *\n *                                                                    *\n *               EACH MEMBER SELECTED MAY BE UNLOADED TO A SEQUENTIAL *\n *              FILE OF 80-BYTE RECORDS IF REQUIRED. THE CODE USED TO *\n *              SPECIFY THIS OPTION IS 'U'.                           *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.5   DIRECTORY LIST                                           *\n *           ______________                                           *\n *                                                                    *\n *                                                                    *\n *               A DIRECTORY LIST OF MEMBER NAMES ACCESSED ACCORDING  *\n *              TO THE MEMBER SELECTION CRITERIA MAY OPTIONALLY BE    *\n *              PRODUCED. THE CODE USED TO SPECIFY THIS OPTION IS 'L'.*\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.6   SUMMARY                                                  *\n *           _______                                                  *\n *                                                                    *\n *                                                                    *\n *            PARAMETER CODE       FUNCTION                     NOTES *\n *            ______________       ________                     ----- *\n *                                                                    *\n *                 C           MEMBER SELECTION - CARD INPUT        1 *\n *                 F           MEMBER SELECTION - FULL FILE         1 *\n *                 G           MEMBER SELECTION - GENERIC CRITERION 1 *\n *                 I           TEXT SCAN - IMAGE OUTPUT             2 *\n *                 K           TEXT SCAN - FORMATTED OUTPUT         2 *\n *                 L           DIRECTORY LISTING                      *\n *                 U           UNLOAD                                 *\n *                                                                    *\n *               1  -  MUTUALLY EXCLUSIVE BUT ONE MUST BE SPECIFIED   *\n *               2  -  MUTUALLY EXCLUSIVE AND OPTIONAL; DEFAULT IS    *\n *                     NO TEXT SCAN                                   *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 5    *\n *                                                                    *\n *     2.7   EXITS                                                    *\n *           _____                                                    *\n *                                                                    *\n *                                                                    *\n *           THE NAMES OF THE EXITS ARE SPECIFIED IN THE PROGRAM      *\n *           PARAMETER  WITH THE PROCESSING OPTIONS. THERE IS NO      *\n *           RESTRICTION ON THE ORDER IN WHICH THEY ARE SPECIFIED.    *\n *                                                                    *\n *           THE FORMAT OF THE EXIT SPECIFICATION IS:                 *\n *                                                                    *\n *           E0= | E1= FOLLOWED BY THE NAME OF THE EXIT. AN EXIT NAME *\n *           OF 'NO' IS EQUIVALENT TO NOT SPECIFYING THAT EXIT.       *\n *                                                                    *\n *           EG: PARM='F,I,E0=NCZ93401' PARM='G,E1=NCZ93402,K'        *\n *                                                                    *\n *     2.8   EXIT 0                                                   *\n *           ______                                                   *\n *                                                                    *\n *                                                                    *\n *           INVOKED - BEFORE A MEMBER IS PROCESSED                   *\n *                                                                    *\n *           LINKAGE - STANDARD OS - PARAMETER 1 -> MEMBER NAME       *\n *                                                                    *\n *                     RETURN CODE - 0   = CONTINUE                   *\n *                                  \u00ac0   = DO NOT PROCESS THIS MEMBER *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     2.9   EXIT 1                                                   *\n *           ______                                                   *\n *                                                                    *\n *                                                                    *\n *           INVOKED - BEFORE A RECORD IS PROCESSED                   *\n *                                                                    *\n *           LINKAGE - STANDARD OS - PARAMETER 1 -> RECORD AREA       *\n *                                                                    *\n *                     RETURN CODE - 0   = CONTINUE                   *\n *                                  \u00ac0   = DO NOT PROCESS THIS RECORD *\n *                                                                    *\n *                                                                    *\n *     2.10  AVAILABLE EXITS                                          *\n *           ---------------                                          *\n *                                                                    *\n *           NCZ93401 - EXIT 1 TO IGNORE COMMENTS IN COBOL SCAN       *\n *                                                                    *\n *           NCZ93402 - EXIT 1 TO CONFINE COBOL SCAN TO DATA DIVISION *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     3     INPUT                                          PAGE 6    *\n *           -----                                                    *\n *                                                                    *\n *     3.1   OVERVIEW                                                 *\n *           ________                                                 *\n *                                                                    *\n *                                                                    *\n *              PRIME INPUT TO THE UTILITY CONSISTS OF A PARTITIONED  *\n *             DATASET CONTAINING 80-BYTE RECORDS BLOCKED TO ANY      *\n *             SIZE. THE NEXT TWO SECTIONS COVER THE USER SUPPLIED    *\n *             SPECIFICATIONS.                                        *\n *                                                                    *\n *                                                                    *\n *     3.2   CHARACTER STRING                                         *\n *           ________________                                         *\n *                                                                    *\n *                                                                    *\n *              A)  CHARACTER STRING CARDS ARE SUPPLIED VIA THE       *\n *                 DATASET DDNAME=CARDIN1 AS 80-BYTE RECORDS. EACH    *\n *                 CHARACTER STRING MAY BE UP TO 31 CHARACTERS IN     *\n *                 LENGTH.                                            *\n *                                                                    *\n *                                                                    *\n *              B)  UP TO 40 CHARACTER STRINGS MAY BE SUPPLIED.       *\n *                                                                    *\n *              C)  CHARACTER STRING DATA MUST BEGIN IN COLUMN 1.     *\n *                 DATA ON A SINGLE CARD IS DELIMITED BY A SINGLE     *\n *                 SPACE; MULTIPLE STRINGS ON A SINGLE CARD MAY BE    *\n *                 ENTERED SEPARATED BY COMMAS. FOR EXAMPLE, THE      *\n *                 CARD                                               *\n *                                                                    *\n *                   DSN,DD,SPACE                                     *\n *                                                                    *\n *                 IS EQUIVALENT TO THE CARDS                         *\n *                                                                    *\n *                   DSN                                              *\n *                   DD                                               *\n *                   SPACE                                            *\n *                                                                    *\n *              D)  FOR STRING CONTAINING EMBEDDED SPACES OR COMMAS   *\n *                 A SLIGHTLY DIFFERENT FORMAT IS USED. ANY STRING    *\n *                 MAY BE PRECEDED BY AN EQUAL SIGN (=) AND ENCLOSED  *\n *                 BY ANY DELIMITER EXCEPT FOR SPACE OR COMMA; ANY    *\n *                 OF THE FOLLOWING ARE EQUIVALENT TO THE CARDS       *\n *                 LISTED ABOVE :                                     *\n *                                                                    *\n *                   ='DSN',='DD',='SPACE'                            *\n *                   DSN,=/DD/,SPACE                                  *\n *                   =*DSN*,=IDDI,=6SPACE6                            *\n *                                                                    *\n *                  NOTE THAT COMMAS ARE STILL USED TO SEPARATE THE   *\n *                 ENCLOSED STRINGS, AND THAT THE TWO FORMATS ARE     *\n *                 FREELY INTERCHANGEABLE.                            *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 7    *\n *                                                                    *\n *     3.3   MEMBER SELECTION                                         *\n *           ________________                                         *\n *                                                                    *\n *                                                                    *\n *              A)  MEMBER SELECTION CARDS ARE SUPPLIED VIA THE       *\n *                 DATASET DDNAME=CARDIN2. IF THE PARAMETER OPTION    *\n *                 'F' IS SPECIFIED, NO CARDS ARE REQUIRED.           *\n *                                                                    *\n *              B)  IF THE PARAMETER OPTION 'C' IS SPECIFIED, EACH    *\n *                 MEMBER TO BE INSPECTED MUST BE SPECIFIED IN        *\n *                 COLUMNS 1-8 ON A SEPARATE CARD. THERE IS NO LIMIT  *\n *                 TO THE NUMBER OF MEMBER NAMES THAT MAY BE          *\n *                 SUPPLIED.                                          *\n *                                                                    *\n *              C)  IF THE PARAMETER OPTION 'G' IS SPECIFIED, A       *\n *                 SINGLE CARD DEFINING THE PREFIX OF THE REQUIRED    *\n *                 MEMBERS BEGINNING IN COLUMN 1 AND CONSISTING OF    *\n *                 UP TO 8 CHARACTERS MUST BE SUPPLIED. SECOND AND    *\n *                 SUBSEQUENT CARDS WILL BE IGNORED. MEMBERS SELECTED *\n *                 WILL BE THOSE HAVING A MATCH ON THE NUMBER OF      *\n *                 SIGNIFICANT CHARACTERS CODED; THE PREFIX SUPPLIED  *\n *                 ON THE CARD INPUT WILL BE DELIMITED BY A SPACE.    *\n *                                                                    *\n *                  FOR EXAMPLE, THE INPUT                            *\n *                                                                    *\n *                    NCZ                                             *\n *                                                                    *\n *                 WILL EXTRACT ALL MEMBERS BEGINNING WITH THE        *\n *                 CHARACTERS 'NCZ'; THE INPUT                        *\n *                                                                    *\n *                    NCZ610                                          *\n *                                                                    *\n *                 WILL EXTRACT ALL THOSE BEGINNING 'NCZ610'.         *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     4     OUTPUT                                         PAGE 8    *\n *           ------                                                   *\n *                                                                    *\n *     4.1   OVERVIEW                                                 *\n *           ________                                                 *\n *                                                                    *\n *               OUTPUT IS DIRECTED TO THREE FILES SPECIFIED BY THE   *\n *              FOLLOWING DD STATEMENTS:                              *\n *                                                                    *\n *              XREFL - CROSS REFERENCE / SCAN                        *\n *                                                                    *\n *              SEQFL - UNLOADED MEMBERS                              *\n *                                                                    *\n *              LIST  - PROCESSING REPORT                             *\n *                                                                    *\n *     4.2   SCAN / CROSS-REFERENCE FILES                             *\n *           ____________________________                             *\n *                                                                    *\n *               IF EITHER OF THE PARAMETER OPTIONS 'K' OR 'I' IS     *\n *              SPECIFIED, A SEQUENTIAL FILE OF 80-BYTE RECORDS       *\n *              (DDNAME=XREFL) WILL BE CREATED. A RECORD WILL BE      *\n *              WRITTEN TO THE FILE WHEN A MATCHING CHARACTER STRING  *\n *              TO ONE OF THOSE SPECIFIED IN CARDIN1 IS DETECTED      *\n *              WITHIN THE PARTITIONED DATASET MEMBER BEING           *\n *              INSPECTED. THE PRECISE ACTION THEN TAKEN DEPENDS ON   *\n *              THE OPTION SPECIFIED.                                 *\n *                                                                    *\n *              4.2.1  IMAGE OPTION                                   *\n *                                                                    *\n *                     IF THE PARAMETER OPTION IS 'I', THE FOLLOWING  *\n *                    PROCESS IS EXECUTED :                           *\n *                                                                    *\n *                       A)  THE MEMBER NAME IS PLACED IN COLUMNS     *\n *                           73-80 OF THE SELECTED RECORD             *\n *                       B)  THE SELECTED RECORD IS WRITTEN UNCHANGED *\n *                           TO THE SCAN OUTPUT FILE                  *\n *                       C)  THE NEXT 80-BYTE RECORD OF THE DATASET   *\n *                           MEMBER IS READ.                          *\n *                                                                    *\n *              4.2.2  KEYWORD / FORMATTED OPTION                     *\n *                                                                    *\n *                     IF THE PARAMETER OPTION IS 'K', THE FOLLOWING  *\n *                    PROCESS IS EXECUTED :                           *\n *                                                                    *\n *                       A)  THE MEMBER NAME IS PLACED IN COLUMNS     *\n *                           73-80 OF THE SELECTED RECORD             *\n *                       B)  THE CHARACTER STRING ON WHICH THE        *\n *                           MATCH WAS OBTAINED IS PLACED IN COLUMNS  *\n *                           1-31                                     *\n *                       C)  THE PORTION OF THE SELECTED RECORD       *\n *                           IMMEDIATELY FOLLOWING THE MATCHED        *\n *                           CHARACTER STRING IS INSPECTED FOR ANY OF *\n *                           THE CHARACTERS &, @, $, # OR ANY ALPHA.  *\n *                           IF NONE IS FOUND THE RECORD IS WRITTEN   *\n *                           AS SPECIFIED IN A) AND B) ABOVE WITH     *\n *                           SPACES FILLING COLUMNS 32-72.            *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 9    *\n *                                                                    *\n *     4.2   SCAN / CROSS-REFERENCE FILES   (CONTD)                   *\n *           ____________________________                             *\n *                                                                    *\n *                                                                    *\n *              4.2.2  KEYWORD / FORMATTED OPTION   (CONTD)           *\n *                                                                    *\n *                                                                    *\n *                       D)  IF ONE OF THE ABOVE CHARACTERS IS        *\n *                           FOUND, THE LINE IS NEXT INSPECTED FOR    *\n *                           A DELIMITING COMMA OR SPACE. THE         *\n *                           CHARACTERS FROM THE &, @, $, # OR ALPHA  *\n *                           TO THE DELIMITING COMMA OR SPACE         *\n *                           (EXCLUDING THE FINAL DELIMITER) ARE      *\n *                           PLACED IN COLUMNS 32-72 AND THE RECORD   *\n *                           WRITTEN                                  *\n *                       E)  THE SEARCH FOR MATCHING CHARACTER STRING *\n *                           IS RESUMED ON THE SAME RECORD FROM THE   *\n *                           SECOND CHARACTER OF THE STRING DETECTED. *\n *                           THIS MEANS THAT MULTIPLE RECORDS MAY BE  *\n *                           GENERATED FROM A SINGLE RECORD WITHIN A  *\n *                           PARTITIONED DATASET MEMBER; IT ALSO      *\n *                           MEANS, HOWEVER, THAT A CHARACTER STRING  *\n *                           MATCH ON MEMBER DATA PRECLUDES A         *\n *                           RECOMPARE AGAINST A SECOND STRING. FOR   *\n *                           EXAMPLE, FOR CARDIN1 INPUT               *\n *                             SORT,SORTLIB                           *\n *                           ONLY ONE RECORD WILL BE GENERATED FROM   *\n *                           A MEMBER RECORD CONTAINING THE           *\n *                           CHARACTERS 'SORTLIB'; THIS RECORD WILL   *\n *                           HAVE THE CHARACTERS 'SORTLIB' IN COLUMNS *\n *                           1-7. THE CODING OF CARDIN1 AS            *\n *                             SORTLIB,SORT                           *\n *                           WILL GENERATE EXACTLY THE SAME OUTPUT    *\n *                           WITH FEWER COMPARES, EXCEPT THAT THE     *\n *                           RECORD CONTAINING 'SORTLIB' WILL NOW BE  *\n *                           PREFIXED 'SORT' IN COLUMNS 1-4. IT IS    *\n *                           NOW APPARENT THEREFORE THAT              *\n *                             1) THE CODING OF SORTLIB,SORT IS       *\n *                                IDENTICAL TO SIMPLY CODING SORT  AS *\n *                             2) COMPARISION FOR ITEMS WITH A COMMON *\n *                                LEADING STRING ARE EXECUTED IN THE  *\n *                                REVERSE ORDER TO THAT IN WHICH THEY *\n *                                ARE SUPPLIED.                       *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 10   *\n *                                                                    *\n *     4.3   UNLOADED DATA                                            *\n *           _____________                                            *\n *                                                                    *\n *                                                                    *\n *               MEMBERS UNLOADED FROM THE PARTITIONED DATASET ARE    *\n *              WRITTEN TO THE FILE DDNAME=SEQFL AS 80-BYTE RECORDS.  *\n *              EACH RECORD IS WRITTEN UNCHANGED; MEMBERS ARE         *\n *              SEPARATED BY CARDS OF THE FORM                        *\n *                                                                    *\n *                  ./ ADD NAME=MEMBER                                *\n *                                                                    *\n *               IT SHOULD BE NOTED THAT EACH MEMBER SPECIFIED VIA    *\n *              THE MEMBER SELECTION CRITERIA WILL BE UNLOADED IF     *\n *              VIA DDNAME=CARDIN2 FOR TEXT SCANNING WILL NOT ALTER   *\n *              THE CONTENTS OF THE UNLOADED FILE; ANY SUCH SELECTIVE *\n *              UNLOAD MUST BE PERFORMED IN TWO PASSES. FOR EXAMPLE,  *\n *              TO UNLOAD ONLY THOSE MEMBERS OF A PARTITIONED DATASET *\n *              CONTAINING THE CHARACTERS 0814 WOULD REQUIRE TWO      *\n *              EXECUTIONS :                                          *\n *                                                                    *\n *                 A)  PARM='F,I'                                     *\n *                     CARDIN1   0814                                 *\n *                 B)  PARM='C,U'                                     *\n *                     CARDIN2   MEMBERS IDENTIFIED BY A)             *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     4.4   DIRECTORY LISTING                                        *\n *           _________________                                        *\n *                                                                    *\n *                                                                    *\n *               THE DIRECTORY LISTING (DDNAME=LIST) IS A PRINT FILE  *\n *              OF 133-BYTE RECORDS PREFIXED WITH ASA FORTRAN CONTROL *\n *              CHARACTERS. A TWO LINE HEADING IDENTIFIES THE         *\n *              SELECTION BEING PRINTED. EACH LINE ON THE REPORT      *\n *              CONSISTS ONLY OF THE MEMBER NAMES.                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *     4.5   ERROR / PARAMETER REPORTS                                *\n *           _________________________                                *\n *                                                                    *\n *                                                                    *\n *               REGARDLESS OF WHETHER THE LIST OPTION 'L' IS         *\n *              SPECIFIED, A SINGLE PAGE REPORT IS WRITTEN TO THE     *\n *              LIST FILE SUMMARISING THE OPTIONS IN EFFECT FOR THE   *\n *              RUN. THESE ARE                                        *\n *                                                                    *\n *                 A)  TEXT SCAN OPTIONS                              *\n *                 B)  MEMBER UNLOAD OPTIONS                          *\n *                 C)  LISTING OPTIONS                                *\n *                 D)  CHARACTER STRING INPUT                         *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *                                                          PAGE 11   *\n *                                                                    *\n *     4.5   ERROR / PARAMETER REPORTS                                *\n *           _________________________                                *\n *                                                                    *\n *                                                                    *\n *               THE REPORT DOES NOT PRINT ANY DATA FROM THE MEMBER   *\n *              SELECTION INPUT (DDNAME=CARDIN2); VISIBILITY TO       *\n *              MEMBERS PROCESSED MUST BE OBTAINED VIA THE DIRECTORY  *\n *              LISTING (OPTION 'L').                                 *\n *               IN CERTAIN INSTANCES THE UTILITY WILL DEEM THAT      *\n *              PARAMETER INPUT IS IN ERRROR; PROCESSING WILL STOP    *\n *              WITH AN ABEND CODE CODE IN THESE INSTANCES.           *\n *              VALUES ARE :                                          *\n *                                                                    *\n *                0100 : NO PARAMETER SUPPLIED                        *\n *                0101 : CARD AND GENERIC MEMBER SELECTION SPECIFIED  *\n *                0102 : FORMATTED AND IMAGE TEXT OUTPUT SPECIFIED    *\n *                0103 : SYNTAX ERROR IN CHARACTER STRING PREFIXED BY *\n *                       '='                                          *\n *                0104 : INVALID EXIT NAME.                           *\n *                0152 : INCORRECTLY SPECIFIED GENERIC MEMBER PREFIX. *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     5     JCL                                            PAGE 12   *\n *           ---                                                      *\n *                                                                    *\n *                                                                    *\n *     5.1   PROCEDURE LISTING (FOR EXAMPLE ONLY)                     *\n *           -----------------                                        *\n *                                                                    *\n *                                                                    *\n *             //NCXPDSCN PROC PRE=MAC1,                              *\n *             //             DSN=,                                   *\n *             //             OPT=,                                   *\n *             //             PGM01=NCXPDSCN,                         *\n *             //             SOUT='*'                                *\n *             //******************************************************\n *             //***********  SCAN SELECTED PARTITIONED DATASET *******\n *             //******************************************************\n *             //PDSCN01 EXEC PGM=&PGM01,                             *\n *             //             PARM='&OPT'                             *\n *             //STEPLIB   DD DSN=&PRE..LOAD,DISP=SHR                 *\n *             //PDSDIR    DD DSN=&DSN,DISP=SHR                       *\n *             //PDS       DD DSN=&DSN,DISP=SHR                       *\n *             //CARDIN1   DD DDNAME=CARDIN1                          *\n *             //CARDIN2   DD DDNAME=CARDIN2                          *\n *             //SEQFL     DD UNIT=SYSDA,                             *\n *             //             DISP=(,PASS),                           *\n *             //             SPACE=(CYL,(1,1)),                      *\n *             //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)    *\n *             //XREFL     DD UNIT=SYSDA,                             *\n *             //             DISP=(,PASS),                           *\n *             //             SPACE=(CYL,(1,1)),                      *\n *             //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)    *\n *             //LIST      DD SYSOUT=&SOUT,DCB=BLKSIZE=1995           *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n *     6     EXAMPLES                                       PAGE 13   *\n *           --------                                                 *\n *                                                                    *\n *     6.1   SUMMARY OF EXAMPLES                                      *\n *           ___________________                                      *\n *                                                                    *\n *                                                                    *\n *               FOUR EXAMPLES ARE PROVIDED :                         *\n *                                                                    *\n *                 A)  COPY CROSS-REFERENCE FOR ALL MEMBERS ON A PDS  *\n *                     BEGINNING NCX610                               *\n *                                                                    *\n *                        IN THIS EXAMPLE                             *\n *                            PARM='G,K,L'                            *\n *                            CARDIN1 : COPY                          *\n *                            CARDIN2 : NCX610                        *\n *                                                                    *\n *                        THE OUTPUT FILE DDNAME=XREFL WAS THEN       *\n *                       SORTED :                                     *\n *                            SORT FIELDS=(32,8,CH,A,73,8,CH,A)       *\n *                       AND PRINTED USING THE IBM UTILITY IEBPTPCH   *\n *                                                                    *\n *                                                                    *\n *                 B)  DSN LISTING FOR J.C.L. PROCEDURES NCVC7E00,    *\n *                     NCVC7E01, AND NCVC7E50                         *\n *                                                                    *\n *                        IN THIS EXAMPLE                             *\n *                            PARM='C,K'                              *\n *                            CARDIN1 : DSN                           *\n *                            CARDIN2 : NCVC7E00                      *\n *                                      NCVC7E01                      *\n *                                      NCVC7E50                      *\n *                                                                    *\n *                        THE SORT AND PRINT PROCEDURE USED IN A)     *\n *                       WAS FOLLOWED.                                *\n *                                                                    *\n *                                                                    *\n *                 C)  SEARCH OF CONTROL LIBRARY FOR CHARACTERS 0887  *\n *                     (FULL FILE)                                    *\n *                                                                    *\n *                        IN THIS EXAMPLE                             *\n *                            PARM='F,I'                              *\n *                            CARDIN1 : 0887                          *\n *                                                                    *\n *                        THE IBM UTILITY IEBPTPCH WAS USED TO PRINT  *\n *                       THE FILE DDNAME=XREFL IN THE SEQUENCE IN     *\n *                       WHICH IT WAS CREATED.                        *\n *                                                                    *\n *                                                                    *\n *                 D)  UNLOAD OF ALL MEMBERS BEGINNING NCVC7          *\n *                                                                    *\n *                        IN THIS EXAMPLE                             *\n *                            PARM='G,U,L'                            *\n *                            CARDIN2 : NCVC7                         *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n * EXAMPLE A                                                PAGE  14  *\n *                                                                    *\n * PROGRAM : NCXPDSCN        * PARTITIONED DATASET UTILITY            *\n * REPORT  : NCXPDSCN-A       * INPUT PARAMETER LISTING *             *\n *                     -----------------------------------------      *\n *                 TEXT   :             FORMAT                        *\n *                 ----                                               *\n *                 MEMBER :                GENERIC                    *\n *                 ------                                             *\n *                 OTHER  :              LIST                         *\n *                 -----                                              *\n *         * INPUT CHARACTER STRINGS *                                *\n *         ---------------------------                                *\n *              COPY                                                  *\n *                                                                    *\n *                                                                    *\n * PROGRAM : NCXPDSCN         * PARTITIONED DATASET UTILITY *         *\n * REPORT  : NCXPDSCN-B    * DIRECTORY LISTING FOR SELECTION=NCX610   *\n *                         -----------------------------------------  *\n *                                                NCX610C7            *\n *                                                NCX610X1            *\n *                                                NCX610X2            *\n *                                                NCX610X3            *\n *                                                NCX610X4            *\n *                                                NCX61004            *\n *                                                NCX61005            *\n *                                                NCX61006            *\n *                                                NCX61008            *\n *                                                NCX61009            *\n *                                                NCX61089            *\n *                                                NCX61090            *\n *                                                NCX61091            *\n *                                                NCX61092            *\n *                                                NCX61093            *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *    COPY             NCSSSAS.                          NCX610X1     *\n *    COPY             NCV800C7.                         NCX610C7     *\n *    COPY             NCV800C7.                         NCX610X1     *\n *    COPY             NCV800C7.                         NCX61089     *\n *    COPY             NCV800C7.                         NCX61090     *\n *    COPY             NCV801C7.                         NCX610C7     *\n *    COPY             NCV824C5.                         NCX610X1     *\n *    COPY             NCV824C5.                         NCX61089     *\n *    COPY             NCV824C5.                         NCX61090     *\n *    COPY             NCV850C5.                         NCX610X1     *\n *    COPY             NCV850C5.                         NCX61089     *\n *    COPY             NCV850C5.                         NCX61090     *\n *    COPY             NCV851C5.                         NCX610X1     *\n *    COPY             NCV851C5.                         NCX61089     *\n *    COPY             NCV851C5.                         NCX61090     *\n *    COPY             NCV853C5.                         NCX610X1     *\n *    COPY             NCV853C5.                         NCX61089     *\n *    COPY             NCV853C5.                         NCX61090     *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n * EXAMPLE B                                                PAGE  15  *\n *                                                                    *\n * PROGRAM : NCXPDSCN        * PARTITIONED DATASET UTILITY            *\n * REPORT  : NCXPDSCN-A       * INPUT PARAMETER LISTING *             *\n *                     -----------------------------------------      *\n *                 TEXT   :             FORMAT                        *\n *                 ----                                               *\n *                 MEMBER :           CARD                            *\n *                 ------                                             *\n *                 OTHER  :                                           *\n *                 -----                                              *\n *          * INPUT CHARACTER STRINGS *                               *\n *          ---------------------------                               *\n *               DSN                                                  *\n *                                                                    *\n *    DSN                      &&NCVPSLG1                   NCVC7E50  *\n *    DSN                      &&NCVPSS01                   NCVC7E00  *\n *    DSN                      &&NCVPSS01                   NCVC7E00  *\n *    DSN                      &&NCVPSS02                   NCVC7E00  *\n *    DSN                      &&NCVPSS02                   NCVC7E00  *\n *    DSN                      &&NCVPSS03                   NCVC7E00  *\n *    DSN                      &&NCVPSS03                   NCVC7E00  *\n *    DSN                      &&NCVPSS07                   NCVC7E00  *\n *    DSN                      &&NCVPSS07                   NCVC7E00  *\n *    DSN                      &&NCVPSS04                   NCVC7E00  *\n *    DSN                      &&NCVPSS04                   NCVC7E00  *\n *    DSN                      &&NCVPSS01                   NCVC7E01  *\n *    DSN                      &&NCVPSS01                   NCVC7E01  *\n *    DSN                      &&NCVPSS02                   NCVC7E01  *\n *    DSN                      &&NCVPSS02                   NCVC7E01  *\n *    DSN                      &&NCVPSS03                   NCVC7E01  *\n *    DSN                      &&NCVPSS03                   NCVC7E01  *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n * EXAMPLE C                                                PAGE  16  *\n *                                                                    *\n * PROGRAM : NCXPDSCN        * PARTITIONED DATASET UTILITY            *\n * REPORT  : NCXPDSCN-A       * INPUT PARAMETER LISTING *             *\n *                     -----------------------------------------      *\n *                 TEXT   :       IMAGE                               *\n *                 ----                                               *\n *                 MEMBER :       ALL                                 *\n *                 ------                                             *\n *                 OTHER  :                                           *\n *                 -----                                              *\n *         * INPUT CHARACTER STRINGS *                                *\n *         ---------------------------                                *\n *               0887                                                 *\n *                                                                    *\n *                                                                    *\n *  00B0887                                       0814       NCWRIMHD *\n *  L  00420     FILL02         V0887                        NCW19908 *\n *  L  00420     IDLOC          V0887                        NCW19915 *\n *  L  00420     IDLOC          V0887                        NCW19916 *\n *  L  00420     IDLOC          V0887                        NCW19917 *\n *  0887                                                     NCW61201 *\n *  00B0887                                   00300          NCX21120 *\n *  00B0887                                   00300          NCX80001 *\n *  00B0887010178TMRP                                        TRIMSHDR *\n *  00B0887010178S                                           TRMS1502 *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n * EXAMPLE D                                                PAGE  17  *\n *                                                                    *\n * PROGRAM : NCXPDSCN        * PARTITIONED DATASET UTILITY            *\n * REPORT  : NCXPDSCN-A       * INPUT PARAMETER LISTING *             *\n *                     -----------------------------------------      *\n *                 TEXT   :       IMAGE                               *\n *                 ----                                               *\n *                 MEMBER :                GENERIC                    *\n *                 ------                                             *\n *                 OTHER  :       UNLOAD LIST                         *\n *                 -----                                              *\n *                                                                    *\n *                                                                    *\n *  PROGRAM : NCXPDSCN        * PARTITIONED DATASET UTILITY *         *\n *  REPORT  : NCXPDSCN-B     * DIRECTORY LISTING FOR SELECTION=NCVC7  *\n *                          ----------------------------------------- *\n *                                                NCVC7DTL            *\n *                                                NCVC7E00            *\n *                                                NCVC7E01            *\n *                                                NCVC7E50            *\n *                                                NCVC7E51            *\n *                                                NCVC7E60            *\n *                                                NCVC7E61            *\n *                                                NCVC7E62            *\n *                                                NCVC7E64            *\n *                                                NCVC7E72            *\n *                                                NCVC7E73            *\n *                                                NCVC7E74            *\n *                                                NCVC7E94            *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n * ./ ADD NAME=NCVC7DTL                                               *\n * //NCVC7DTL PROC NXX=,                                  00010000    *\n * //          COND0='(0,LT)',                            00020000    *\n * //          IMZLIB='IMZ.LOAD',                         00030000    *\n * //          IMSLIB='IMS.LOAD',                         00040000    *\n * //          PSBLIB='IMS.PSBLIB',                       00050000    *\n * //          DBDLIB='IMS.DBDLIB',                       00060000    *\n * //          PGMIMS=DFSRRC00,                           00070000    *\n * //          PGM010=DFSDDLT0,                           00080000    *\n * //          REGN010=258K,                              00090000    *\n * //          PSB010=                                    00100000    *\n * //STEP010 EXEC PGM=&PGMIMS,PARM='DLI,&PGM010,&PSB010', 00110000    *\n * //          COND=&COND0,REGION=&REGN010                00120000    *\n * //STEPLIB DD DSN=&IMZLIB,DISP=SHR                      00130000    *\n * //      DD  DSN=&IMSLIB,DISP=SHR                       00140000    *\n * //IMS   DD  DSN=&PSBLIB,DISP=SHR                       00150000    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n1**********************************************************************\n *                                                                    *\n * TO :  R.HICKEN                                            TNL 1    *\n *                                                           _____    *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n * FROM : P.LARRETT                                                   *\n *                                                                    *\n * DATE : JAN 25, 1982                                                *\n *                                                                    *\n * SUBJECT :    PARTITIONED DATASET UTILITY NCXPDSCN                  *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n *      A NUMBER OF ENHANCEMENTS HAVE BEEN APPLIED TO THIS PROGRAM    *\n *     TO REMOVE CERTAIN DEFICIENCIES. A LIST OF THE CHANGES APPLIED  *\n *     DURING THE LAST 6 MONTHS FOLLOWS.                              *\n *                                                                    *\n *                                                                    *\n *        1.   SELECTIVE FILE OPENING                                 *\n *                                                                    *\n *              IN GENERAL, ONLY THOSE FILES ACTUALLY REQUIRED BY     *\n *             THE UTILITY TO PROCESS THE OPTIONS IN EFFECT WILL BE   *\n *             OPENED. ONE IMPLICATION IS THAT DIRECTORIES OF         *\n *             PARTITIONED DATASETS OTHER THAN (RECFM=FB,LRECL=80)    *\n *             MAY BE PROCESSED AS LONG AS PARAMETER OPTIONS U, K AND *\n *             I ARE NOT SPECIFIED.                                   *\n *                                                                    *\n *                                                                    *\n *        2.   HEADING CHANGE                                         *\n *                                                                    *\n *              WHEN THE FULL FILE MEMBER SELECTION IS IN EFFECT, THE *\n *             LITERAL 'FILE' WILL NO LONGER APPEAR AS THE            *\n *             'SELECTION' IN THE REPORT HEADINGS. INSTEAD, THE       *\n *             FULL DATASET NAME WILL BE PRINTED.                     *\n *                                                                    *\n *                                                                    *\n *        3.   NEW PARAMETER OPTION                                   *\n *                                                                    *\n *              A NEW PARAMETER OPTION IS NOW AVAILABLE TO SUPPORT    *\n *             EXERCISES INVOLVING THE USE OF MORE THAN ONE           *\n *             PARTITIONED DATASET. SPECIFICATION OF THE OPTION 'D'   *\n *             IN PLACE OF THE OPTION 'L' WILL CAUSE THE DDNAME=LIST  *\n *             DATASET TO WRITTEN WITH THE DSNAME OF THE PDS APPENDED *\n *             TO EACH LINE (COLUMN 89 ONWARDS); HEADINGS WILL BE     *\n *             SUPPRESSED. BY WRITING THE LIST DATASET TO DISK, AND   *\n *             REITERATING THE PROCESS FOR MULTIPLE PARTITIONED       *\n *             DATASETS WITH DISP=MOD ON THE LIST OUTPUT, A FILE      *\n *             OF MEMBER BY DSN INFORMATION MAY BE ASSEMBLED.         *\n *              IT SHOULD BE NOTED THAT THE OPTIONS IN EFFECT PORTION *\n *             OF THE OUTPUT IS STILL PRODUCED AT THE HEAD OF THE     *\n *             REPORT. A MODIFICATION IS PLANNED TO SEPARATE THE TWO  *\n *             PORTIONS OF THE LIST OUTPUT ON TO SEPARATE DDS TO      *\n *             FACILITATE THE REMOVAL OF SUPERFLUOUS DATA FROM THE    *\n *             DSN LABELLED OUTPUT.                                   *\n *                                                                    *\n *                                                                    *\n *                                                                    *\n **********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USSTAB": {"ttr": 2563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "USSTAB   TITLE 'MCEVOY WOODCHESTER ACF/VTAM USS TABLE'\n***********************************************************************\n*\n* NOTE: THIS TABLE MUST BE ASSEMBLED AND LINK-EDITED WITH THE 'RENT'\n*       ATTRIBUTE.\n*\n* NOTE: THAT THIS MEMBER CONTAINS LOWER CASE CHARACTERs\n*\n* THE LOAD MODULE MUST BE PLACED IN SYS1.VTAMLIB.\n*\n* CHANGE HISTORY:\n* 24 JUN 81 RH : CREATED FROM IPO SAMPLE\n* 02 SEP 82 EMM: ADDED PARM=PROC FOR TSO LOGONS\n* 09 NOV 82 EMM: CHANGED MSG10 TO ADD LOWER CASE\n* 08 MAR 83 EMM: HEAVILY MODIFIED TO GIVE A LOGON MENU (TESTAB)\n* 23 MAR 83 RH : IMPLEMENTED AS USSTAB - FAILS WITH REMOTES\n* 29 JUN 83 EMM: REMOVED 'ISD STAFF ONLY' FROM OPTION 4\n* 29 JUN 83 AJB: ADDED CICS4 TO LOGON MENU\n* 14 FEB 84 RH : CICS4 OPTION NOT DESCRIBED\n* 28 MAR 84 RH : ADDED COMPUTER BASED EDUCATION OPTION 6\n* 24 APR 84 RH : OPTION '3' (MAS DEMO) NOT DESCRIBED\n*  7 JAN 85 RH : ADDED 'E' AND 'ER' COMMANDS FOR LOGOFF\n*                CHANGED MESSAGES  0,1,2 TEXT\n*  7 MAR 85 RH : ADDED OPTIONSs FOR CICS9, MCS AND CDB\n*                LOWER CASE\n*\nUSSTAB   USSTAB\n* COMMANDS HAVE TO BEGIN WITH AN ALPHABETIC\nC1       USSCMD  CMD=A1,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=CICS1\nC2       USSCMD  CMD=A2,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=CICS2\nC3       USSCMD  CMD=A3,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=CICS3\nC4       USSCMD  CMD=A4,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=CICS4\nTSO      USSCMD  CMD=A5,REP=LOGON,FORMAT=BAL\n         USSPARM PARM=P1,REP=DATA\n         USSPARM PARM=APPLID,DEFAULT=TSO\nCBE      USSCMD  CMD=A6,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=PHOENIX\nMULTSESS USSCMD  CMD=A7,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=MULTSESS\nC9       USSCMD  CMD=A9,REP=LOGON,FORMAT=PL1\n         USSPARM PARM=APPLID,DEFAULT=CICS9\nLOGOFF   USSCMD  CMD=E,REP=LOGOFF,FORMAT=PL1\n         USSPARM PARM=P1,REP=APPLID\nLOGOFFR  USSCMD  CMD=ER,REP=LOGOFF,FORMAT=PL1\n         USSPARM PARM=P1,REP=APPLID\n         USSPARM PARM=P2,REP=TYPE,DEFAULT=COND\n*\nMSG0     USSMSG  MSG=0,BUFFER=BM0\nMSG1     USSMSG  MSG=1,BUFFER=BM1\nMSG2     USSMSG  MSG=2,BUFFER=BM2\nMSG3     USSMSG  MSG=3,BUFFER=BM3\nMSG4     USSMSG  MSG=4,BUFFER=BM4\nMSG5     USSMSG  MSG=5,BUFFER=BM5\nMSG6     USSMSG  MSG=6,BUFFER=BM6\nMSG7     USSMSG  MSG=7,BUFFER=BM7\nMSG8     USSMSG  MSG=8,BUFFER=BM8\n*\nMSG10    USSMSG  MSG=10,BUFFER=BM10\n*\n*        NOTE: KEEP ALL MESSAGE TEXT THE SAME LENGTH\n*\nBM0      DC    AL2(BM0END-BM0-2)\n         DC    X'F1'               WRITE\n         DC    X'C0'               DON'T FREE KEYBD\n         DC    X'115CF3'           L24/C04\n         DC    X'1DE8'             PROT + HIGH\n         DC    C'Request processed OK                    '\nBM0END   EQU   *\n*\nBM1      DC    AL2(BM1END-BM1-2)\n         DC    X'F1'\n         DC    X'C6'               FREE KEYBD + SOUND ALARM\n         DC    X'115CF3'\n         DC    X'1DE8'\n         DC    C'Invalid data                            '\n*                                  (INVALID COMMAND SYNTAX)\nBM1END   EQU   *\n*\nBM2      DC    AL2(BM2END-BM2-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Request not recognised                  '\n*                                  (COMMAND UNRECOGNISED)\nBM2END   EQU   *\n*\nBM3      DC    AL2(BM3END-BM3-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Parameter unrecognised                  '\nBM3END   EQU   *\n*\nBM4      DC    AL2(BM4END-BM4-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'System unavailable                      '\n*                                  (PARAMETER INVALID)\nBM4END   EQU   *\n*\nBM5      DC    AL2(BM5END-BM5-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Unsupported function                    '\nBM5END   EQU   *\n*\nBM6      DC    AL2(BM6END-BM6-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Sequence error                          '\nBM6END   EQU   *\n*\nBM7      DC    AL2(BM7END-BM7-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Connection refused                      '\n*                                   (SESSION NOT BOUND)\nBM7END   EQU   *\n*\nBM8      DC    AL2(BM8END-BM8-2)\n         DC    X'F1C6115CF31DE8'\n         DC    C'Insufficient storage                    '\nBM8END   EQU   *\n*\nBM10     DC    AL2(BM10END-BM10-2)\n         DC    X'F5'               ERASE/WRITE\n         DC    X'C2'\n         DC    X'114040'           L01/C01\n         DC    X'1D68'             PROT + HIGH\n         DC    X'1140D3'           L01/C20\n         DC    C'SII McEvoy (Woodchester) Online Systems'\n         DC    X'1D60'             PROT + NORMAL\n         DC    X'11C4C3'           L04/C20\n         DC    C'1  -  Production CICS'\n         DC    X'11C5D3'           L05/C20\n         DC    C'2  -  Test CICS (I.S.D. staff only)'\n         DC    X'11C6E3'           L06/C20\n         DC    C'3  -  MCS demonstration system (I.S.D. staff only)'\n         DC    X'11C7F3'           L07/C20\n         DC    C'4  -  CDB demonstration system (I.S.D. staff only)'\n         DC    X'11C9C3'           L08/C20\n         DC    C'5  -  TSO (enter userid/password)'\n         DC    X'114AD3'           L09/C20\n         DC    C'6  -  Computer based education (I.S.D. staff only)'\n*        DC    X'114BE3'           L10/C20\n*        DC    C'7  -  Multsess trial system'\n*        DC    X'114CF3'           L12/C20\n*        DC    C'8  -  ????????'\n         DC    X'114EC3'           L12/C20\n         DC    C'9  -  Overnight enquiry only CICS'\n         DC    X'11D3C3'           L16/C20\n         DC    C'To connect to the system you wish to use'\n         DC    X'11D4D3'           L17/C20\n         DC    C'key its code from the list above and press enter'\n         DC    X'11D660'           L19/C01\n         DC    X'1D6D'             PROT + DARK + MDT ON\n         DC    X'C1'               'A'\n         DC    X'1DF0'             PROT + SKIP\n         DC    X'11D6F3'           L19/C20\n         DC    X'1DE8'             PROT + HIGH\n         DC    C'System         :'\n         DC    X'1DC8'             UNPROT + HIGH\n         DC    X'13'               IC\n         DC    X'40'               BLANK\n         DC    X'1DF1'             PROT + AUTO + MDT ON\n         DC    X'40'               BLANK\n         DC    X'1DF0'             PROT + AUTO\n         DC    X'11D8C3'           L20/C20\n         DC    X'1DE8'             PROT + HIGH\n         DC    C'Userid/password:'\n         DC    X'1DC8'\n         DC    X'11D940'           L21/C01\n         DC    X'1D60'\n         DC    X'115BF3'           L23/C20\n         DC    C'If you need help contact Service Admin, ext. 265'\nBM10END  EQU   *\nEND      USSEND\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT430/FILE430.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT430", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}