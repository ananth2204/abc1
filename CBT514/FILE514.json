{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012238000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE514.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE514.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\r'", "DS1TRBAL": "b'^\\x08'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xda\\x00\\x0e\\x03\\xdb\\x00\\x01\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x10o\\x01\\x01\\x10o\\x10G\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-16T00:00:00", "modifydate": "2001-04-16T10:47:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 434    FILE:  514\n\n    ORIGINAL DSNAME:  WSBG.CBT434.FILE514\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   4 MEMBERS COUNTED; CUMULATIVE SIZE IS 301 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/16/01    10:47:51    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x10\\x0f\\x01\\x01\\x10\\x0f\\x07!\\x002\\x002\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-10T00:00:00", "modifydate": "2001-04-10T07:21:00", "lines": 50, "newlines": 50, "modlines": 0, "user": "WSBG"}, "text": "Subject: CBT submission...\nDate: Fri, 6 Apr 2001 10:25:23 -0600\nFrom: lwilliams@unitechsys.com (Larry Williams)\nTo: sbgolob@attglobal.net, lwilliams@unitechsys.com (Larry Williams)\n\n  Hi Sam!\n\n     I have attached what I think is a pretty interesting piece\n     of code (of course no one else may think so, we shall see)\n\n     The problem this code solved was this:\n\n     I work for a software vendor.  We were having problems where\n     versions of code that had already been shipped to customers\n     was being accidentally updated.  (Once shipped, of course\n     the code should NEVER be updated again, so we can refer to\n     what the customer had been sent)\n\n     RACF was no real help, since the Special users could still\n     update the darn datasets.\n\n     So I set up a special volume named HIST01, and copied the\n     datasets there.\n\n     This SAF router exit (ICHRTX00) is a pre-RACF exit, and\n     allows me to blow out all users (except very special users)\n     who try to do ANY updates to that VOLSER.\n\n     Other interesting possibilities? Freeze the pack with\n     SYS1.PARMLIB on it to keep sticky fingers off of it perhaps?\n\n     Of course the usual disclaimer: Use at your own risk, blah,\n     blah, blah.  I put it in an LPALIB by itself, so I can use a\n     special SYSPARM at IPL to disable it, in case something\n     horrible happens.\n\n     In any case...\n\n     Regards,\n\n     Larry Williams\n     Senior OS/390 System Programmer\n     Unitech Systems, Inc.\n\n\n    ---------------------------------------------------------------------\n                      Name: ichrtx00.xmi\n   ichrtx00.xmi       Type: unspecified type (application/octet-stream)\n                  Encoding: base64\n               Description: Unknown data type\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE514": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x10o\\x10 \\x00!\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-04-16T10:20:00", "lines": 33, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 514 is from Larry Williams and contains an ICHRTX00 SAF   *   FILE 514\n//*           router to allow a volume or volumes to be treated     *   FILE 514\n//*           as special read only volume(s).  Not even RACF        *   FILE 514\n//*           \"Special\" users can update files there.               *   FILE 514\n//*                                                                 *   FILE 514\n//*           This was designed to solve a problem with code that   *   FILE 514\n//*           had been shipped to our customers (which should       *   FILE 514\n//*           have then  been \"frozen\" forever) being updated at    *   FILE 514\n//*           our site (a software vendor) by mistake, disrupting   *   FILE 514\n//*           the \"audit trail\" of what had actually been shipped   *   FILE 514\n//*           to our customers.                                     *   FILE 514\n//*                                                                 *   FILE 514\n//*           This made it very difficult to debug programs at      *   FILE 514\n//*           the customer site, since the code no longer           *   FILE 514\n//*           matched.                                              *   FILE 514\n//*                                                                 *   FILE 514\n//*           The code contains a table of the allowed users who    *   FILE 514\n//*           can do the updates.  All other users will ABEND       *   FILE 514\n//*           913-0C (or DASDM alloc fail) trying to update.        *   FILE 514\n//*                                                                 *   FILE 514\n//*           You'll probably find this code interesting to look    *   FILE 514\n//*           at, if you need protect some volume(s) from           *   FILE 514\n//*           alteration by (almost) all users regardless of RACF   *   FILE 514\n//*           authority.  I haven't tested the idea yet, but        *   FILE 514\n//*           perhaps this might be an interesting way to lock up   *   FILE 514\n//*           a \"SYS1.PARMLIB\" perhaps...                           *   FILE 514\n//*                                                                 *   FILE 514\n//*           The usual disclaimer applies: You use this at your    *   FILE 514\n//*           own risk.  It has worked well at my site, your        *   FILE 514\n//*           mileage may vary.                                     *   FILE 514\n//*                                                                 *   FILE 514\n//*           email:   larryw@ix.netcom.com                         *   FILE 514\n//*                                                                 *   FILE 514\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICHRTX00": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x10\\x0f\\x01\\x01\\x10\\x0f\\x07\\x06\\x00\\xce\\x00\\xce\\x00\\x00\\xd3\\xe6\\xc9\\xd3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-10T00:00:00", "modifydate": "2001-04-10T07:06:00", "lines": 206, "newlines": 206, "modlines": 0, "user": "LWIL"}, "text": "//... YOUR JOB CARD HERE ...\n//*\n//* SAMPLE OF ICHRTX00 TO BLOCK UPDATE ACCESS TO CERTAIN VOLUME(S)\n//*\n//* WRITTEN BY LARRY WILLIAMS (EMAIL: LARRYW@IX.NETCOM.COM)\n//*\n//* ONLY ONE LINE (MARKED <--- CHANGE) SHOULD NEED TO BE UPDATED\n//* TO MAKE THIS JCL WORK - THE CODE WILL ALSO WORK FINE IF IEV90\n//* IS USED INSTEAD.\n//*\n//ASMLKED  PROC OUTDS='UNKNOWN.LIBRARY'\n//ASM      EXEC PGM=ASMA90,REGION=6144K,PARM='NOOBJ,DECK,TERM,RENT'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=32720\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSALLDA,SPACE=(CYL,(5,5))\n//SYSPRINT DD  SYSOUT=*\n//SYSTERM  DD  SYSOUT=*\n//SYSPUNCH DD  DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(CYL,(1,1),RLSE),\n//             DISP=(NEW,PASS)\n//*\n//LKED     EXEC PGM=IEWL,REGION=2048K,COND=(0,NE),\n//         PARM='LIST,MAP,XREF,RENT,NCAL'\n//SYSLMOD  DD  DISP=SHR,DSN=&OUTDS\n//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSALLDA,SPACE=(1024,(50,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)\n//         DD  DDNAME=SYSIN\n//         PEND\n//*\n//STEP0001 EXEC ASMLKED,OUTDS='USER.LPALIB.HERE' <--- CHANGE\n//ASM.SYSIN  DD *\nICHRTX00 TITLE 'ICHRXT00 - SAF ROUTER EXIT'\n***********************************************************************\n*                                                                     *\n*    MODULE NAME:  ICHRTX00 - SAF ROUTER EXIT                         *\n*                                                                     *\n*    DESCRIPTIVE NAME:  INTERCEPT PRE-RACF CALLS, IF UPDATE ACCESS    *\n*    TO DATASET ON HISTXX PACK, VALIDATE ACCESS.                      *\n*                                                                     *\n*    FUNCTION AND OPERATION:                                          *\n*             IF ALLOCATE DATASET, OR ATTEMPT TO UPDATE DATASET ON    *\n*             HISTXX PACK, LOOK FOR SYSPROG ID OR OTHER SUPERUSER     *\n*             AS USERID, IF NOT FAIL CALL.                            *\n*                                                                     *\n*    DEPENDENCIES:  ASSEMBLE ASSEMBLER H OR HIGHER ONLY               *\n*                                                                     *\n*    RESTRICTIONS:  STANDARD RESTRICTIONS FOR ICHRTX00, FOR EXAMPLE   *\n*                   NO GETMAIN FOR SAVEAREA                           *\n*                                                                     *\n*    REGISTER USE:  STANDARD CONVENTIONS.                             *\n*                                                                     *\n*             R6:  HOLD REG FOR RETURN CODE                           *\n*                                                                     *\n*    AT ENTRY R1 CONTAINS:                                            *\n*             +0   SAFP PARMLIST                                      *\n*             +4   WORKAREA FOR EXIT                                  *\n*                                                                     *\n*    AT EXIT  R15 CONTAINS THE FOLLOWING RETURN CODE(S)               *\n*             0    CONTINUE - NORMAL RACF VALIDATION                  *\n*             208  DIE NOW  - INVALID ACCESS                          *\n*                                                                     *\n*    OUTPUT:  NONE                                                    *\n*                                                                     *\n*    EXTERNAL REFERENCES:  NONE                                       *\n*                                                                     *\n*    NOTES:  SEE RESTRICTIONS FOR THIS EXIT IN RACF EXITS GUIDE       *\n*                                                                     *\n*    ABEND CODES:  NONE                                               *\n*                                                                     *\n*    CHANGE ACTIVITY:                                                 *\n*                                                                     *\n*    06-APR-98   INITIAL PROGRAM WRITTEN (LRW)                        *\n*    29-MAR-01   ADDED CODE FOR DASD ALLOCATE TO HIST PACKS.          *\n*                THE WAY IT USED TO WORK ALLOWED USERS TO ALLOCATE    *\n*                BUT THEN NOT UPDATE OR DELETE THE DATASET (LRW)      *\n*                                                                     *\n***********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\nICHRTX00 CSECT\nICHRTX00 AMODE ANY\nICHRTX00 RMODE 24\n         USING *,R15\n         B     START\n         DC    CL8'ICHRTX00',CL1'.',CL8'&SYSDATE',CL1'.',CL8'&SYSTIME'\nSTART    EQU   *\n         DROP  R15\n         STM   R14,R12,12(R13)     STORE CALLERS REGS\n         LR    R12,R15\n         USING ICHRTX00,R12        PROGRAM BASE\n         USING PSA,0\n         LR    R12,R15             COPY FROM EP REG\n         L     R9,4(R1)            ADDRESS ICHRTX00 WORK AREA\n         USING WORKSAVE,R9         (DON'T DO A GETMAIN, NOT ALLOWED)\n         XC    WORKAREA(WORKAREL),WORKAREA CLEAR WORKAREA\n         ST    R13,WORKSAVE+4      SET STANDARD LINKAGE\n         ST    R9,8(R13)\n         LR    R13,R9              ADDRESS SAVE AREA\n         DROP  R9                  DROP OLD ADDRESSING\n         USING WORKSAVE,R13        ESTABLISH NEW ADDRESSING\n*\n         L     R9,0(R1)            GET ADDR. OF SAF PARAMETER LIST\n         USING SAFP,R9             BASE FOR SAFP PARAMETER LIST\n*----------------------------------------------------------------\n*\n* THIS SECTION TO CHECK DASD ALLOC ADDED 29-MAR-01 LRW\n*\n*----------------------------------------------------------------\n         CLC   =AL2(SAFPDEF),SAFPREQT  RACDEF?\n         BNE   CHECK2              IF NOT RACDEF, DROP TO NEXT CHECK\n         L     R8,SAFPRACP         OFFSET TO RACDEF PARAMETER LIST\n         AR    R8,R9               ADDR. OF RACDEF  PARAMETER LIST.\n         LA    R8,0(R8)            PURIFY ADDRESS\n         USING RDXPL,R8\n         L     R2,RDXENTIT         GET ENTITY, IN THIS CASE, VOLSER\n         LA    R2,0(R2)            PURIFY ADDRESS\n         DROP  R8\n         B     GETUSER\nCHECK2   DS    0H\n*\n*------------------ END OF 29-MAR-01 ADDED CODE -----------------\n*\n         CLC   =AL2(SAFPAU),SAFPREQT RACHECK?\n         BNE   RETURN0             NEITHER RACDEF OR RACHECK? GO AWAY\n         L     R8,SAFPRACP         OFFSET TO RACHECK PARAMETER LIST\n         AR    R8,R9               ADDR. OF RACHECK PARAMETER LIST.\n         LA    R8,0(R8)            PURIFY ADDRESS\n         USING ACHKLIST,R8\n         TM    ACHKFLG2,ACHKTALT+ACHKTUPD ALTER OR UPDATE?\n         BZ    RETURN0             NOTHING ON, LEAVE.\n         TM    ACHKFLG1,ACHK31IN   31 BIT MODE?\n         BNO   MODE24              GET 24 BIT VOLUME\n         L     R2,ACHKVS31         GET 31 BIT VOLUME\n         B     GETUSER             GO GET USERID\nMODE24   DS    0H\n         XR    R2,R2               CLEAR R2\n         ICM   R2,B'0111',ACHKOVOL GET VOLUME\n         DROP  R8\n*\nGETUSER  DS    0H\n         CLC   =CL4'HIST',0(R2)    VOLUME WE CARE ABOUT?\n         BNE   RETURN0             NOT HIST, GO AWAY\n         L     R3,PSAAOLD          OUR ASCB\n         L     R4,ASCBASXB-ASCB(R3) OUR ASXB\n*\n         CLC   =CL4'SYSP',ASXBUSER-ASXB(R4) USERID\n         BE    RETURN0             IS SYSPROG? OK TO PROCEED\n         CLC   =CL4'P390',ASXBUSER-ASXB(R4) USERID\n         BE    RETURN0             IS P390 SUPERUSER? OK TO PROCEED\n         CLC   =CL7'IBMUSER',ASXBUSER-ASXB(R4) USERID\n         BE    RETURN0             IS IBMUSER SUPERUSER? OK TO PROCEED\n         B     RET208              KILL EVERY ONE ELSE\n*\n***********************************************************************\n*    SET A RETURN CODE BASED ON PROGRAM FUNCTION                      *\n***********************************************************************\nRETURN0  SR    R6,R6                   SETUP RETURN CODE = 0\n         B     RETURN                  AND RETURN\nRET208   LA    R6,208                  SETUP RC=208\n         MVC   SAFPRRET,=F'8'          RETURN CODE 8 IN SAFP LIST\n         MVC   SAFPRREA,=XL4'0000000C' WITH C REASON CODE\n         B     RETURN                  AND RETURN\n***********************************************************************\n*    STANDARD EXIT LINKAGE                                            *\n***********************************************************************\nRETURN   EQU   *\n         L     R13,4(R13)              RESTORE R13 FROM SAVEAREA\n         L     R14,12(R13)             RESTORE R14 FROM OLD SAVEAREA\n         LR    R15,R6                  SET RETURN CODE REGISTER\n         LM    R0,R12,20(R13)          RESTORE REST OF REGS\n         BSM   0,R14                   RESTORE CALLER MODE AND RETURN\n         LTORG\nWORKAREA DSECT                     150 BYTE AREA\nWORKSAVE DS    18F                 SAVE AREA\n         DS    CL78                MAX AVAIL WORKAREA\nWORKAREL EQU   150                 SHOULD BE 150 (DOCUMENTED MAXIMUM)\n         ICHACHKL\n         ICHRDXP\n         ICHPRCVT\n         ICHRDDFL\n         ICHSAFP\n         CVT    DSECT=YES,LIST=NO\n         IHAPSA DSECT=YES,LIST=NO\n         IHAASCB DSECT=YES,LIST=NO\n         IHAASXB DSECT=YES,LIST=NO\n         END\n//LKED.SYSIN DD *\n         ENTRY     ICHRTX00\n         NAME      ICHRTX00(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT514/FILE514.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT514", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}