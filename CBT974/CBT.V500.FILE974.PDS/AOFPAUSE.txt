          TITLE 'AOF ROUTINE TO WAIT FOR MESSAGE'
*PROCESS  USING(NOWARN)
AOFPAUSE  CSECT ,
AOFPAUSE  AMODE 31
AOFPAUSE  RMODE ANY
***********************************************************************
* This is the AOFPAUSE REXX function.                                 *
***********************************************************************
* command syntax:                                                     *
*                                                                     *
* AOFPAUSErc = AOFPAUSE(seconds)                                      *
*                                                                     *
* Where seconds is the amount of time in seconds to pause execution   *
*                                                                     *
*                                                                     *
* This command is designed to be used with the AOF application. It is *
* intended to provide an AOF automation exec  with the capability of  *
* waiting a given number of seconds.                                  *
*                                                                     *
***********************************************************************
*---------------------------------------------------------------------*
*- Register usage                                                    -*
*---------------------------------------------------------------------*
R0      EQU    0                  Work reg
R1      EQU    1                  Work and parm reg
R2      EQU    2                  Work reg
R3      EQU    3                  Work reg
R4      EQU    4                  Work reg
R5      EQU    5
R6      EQU    6
R7      EQU    7
R8      EQU    8
R9      EQU    9
R10     EQU    10
R11     EQU    11                 Work area base
R12     EQU    12                 Module base
R13     EQU    13                 Linkage
R14     EQU    14                 Linkage
R15     EQU    15                 Linkage
***********************************************************************
* Begin linkage convention
       STM     R14,R12,12(R13)
       LR      R2,R13             Save savearea
       LR      R10,R1             Save parm pointer
       LA      R12,0(R15)         base and address regs
       USING   AOFPAUSE,R12
       USING   PSA,0
       MODID   ,                  eye catcher and date
       STORAGE OBTAIN,LENGTH=DYNL get dynamic storage
       LA      R11,0(0,R1)        use R11 as dyn base
       USING   DYNAREA,R11        map model over dynamic area
       LA      R13,SAVEAREA
       ST      R13,8(R2)          Link saveareas
       ST      R2,SAVEAREA+4
******************************************************************
       L       R1,16(R10)          let's get our argument
       CLC     0(L'PARMEND,R1),PARMEND    is there an argument
       BE      BAD_PAUSE           no, then send error
       ICM     R3,15,4(R1)         get the length of argument
       BZ      BAD_PAUSE           if none send error
       CH      R3,=H'3'            verify it's not too long
       BH      BAD_PAUSE           It is, send error
       L       R7,0(R1)            point to the argument
       LR      R0,R3
       LR      R1,R7
TEST_PAUSE_LOOP EQU     *
       CLC     0(1,R1),=C'0'
       BL      BAD_PAUSE
       CLC     0(1,R1),=C'9'
       BH      BAD_PAUSE
       LA      R1,1(,R1)
       BCT     R0,TEST_PAUSE_LOOP
       BCTR    R3,0
       EX      R3,PACK
       B       CONVERT_PAUSE
PACK   DS      0H
       PACK    DWORD,0(*-*,R7)
CONVERT_PAUSE EQU     *
       CVB     R3,DWORD              convert to binary
       C       R3,=F'1'
       BL      BAD_PAUSE
       C       R3,=F'7200'           two hours
       BH      BAD_PAUSE
       M       R2,=F'100'            change to hundreths
       ST      R3,PAUSEVAL
       B       DO_STIMER
***********************************************************************
*                                                                     *
* Set up STIMER
*
***********************************************************************
DO_STIMER DS 0H
       STIMER WAIT,BINTVL=PAUSEVAL   ** DO IT **
       MVC     RETCODE(2),=CL2'00'    set return code
       B       PAUSE_OK
***********************************************************************
*                                                                     *
* SET REPLY
*
***********************************************************************
PAUSE_OK       EQU   *
       MVC     REPLY_AREA(L'OK_FUNCTION),OK_FUNCTION
       L       R8,=A(L'OK_FUNCTION)
       MVC     RETCODE(2),=CL2'00'    set return code
       B       SETERRORMSG
BAD_PAUSE      EQU   *
       MVC     REPLY_AREA(L'ERROR_FUNCTION),ERROR_FUNCTION
       L       R8,=A(L'ERROR_FUNCTION)
       MVC     RETCODE(2),=CL2'08'    set return code
       B       SETERRORMSG
SETERRORMSG DS    0H
       LA      R1,IRXSHVBSTG
       USING   SHVBLOCK,R1
       LA      R5,KAOFPAUSE_ERROR
       ST      R5,SHVNAMA
       LA      R5,REPLY_AREA
       ST      R5,SHVVALA
       LA      R5,L'KAOFPAUSE_ERROR
       ST      R5,SHVNAML
       ST      R8,SHVVALL
       SR      R0,R0        No environment block
       ST      R0,SHVNEXT
       MVI     SHVCODE,SHVSTORE
       DROP    R1
       LINK       EP=IRXEXCOM,DCB=0,MF=(E,CALLIST),SF=(E,LINKLIST),    *
               PARAM=(EYEC,DUMMY,DUMMY,IRXSHVBSTG),VL=1
       B       SETRETCODE
SETRETCODE DS  0H
       L       R7,20(R10)
       L       R7,0(R7)
       USING   EVALBLOCK,R7
       MVC     EVALBLOCK_EVLEN,=F'2'
       MVC     EVALBLOCK_EVDATA(2),RETCODE
ENDPROG EQU    *
       L       R3,SAVEAREA+4
       STORAGE RELEASE,           Free dynamic storage                 X
               LENGTH=DYNL,                                            X
               ADDR=(R11)
       SLR     R15,R15
       L       R14,12(R3)
       LM      R0,R12,20(R3)
       BR      R14
*
PARMEND           DC    X'FFFFFFFFFFFFFFFF'
ERROR_FUNCTION    DC    C'ERROR IN SPECIFYING AOFPAUSE FUNCTION'
OK_FUNCTION       DC    C'OK'
KAOFPAUSE_ERROR   DC    C'AOFPAUSE_ERROR'
EYEC              DC    CL8'IRXEXCOM'
DUMMY             DC    A(0)
              LTORG
*================================================================
DYNAREA       DSECT
SAVEAREA      DS    18F
REPLY_AREA    DS    CL120
DWORD         DS    D
PAUSEVAL      DS    F
**
RETCODE       DS    H
**
LINKLIST      LINK    EP=IRXEXCOM,DCB=0,SF=L
CALLIST       CALL    ,(EYEC,DUMMY,DUMMY,IRXSHVBSTG),VL,MF=L
IRXSHVBSTG    DS      CL(SHVBLEN)
**
*
DYNL          EQU  *-SAVEAREA
         IRXSHVB
         IRXEVALB
         IEANTASM
         PRINT ON
         CVT   DSECT=YES
         IHAPSA
         END
