          TITLE 'AOF PARSE ROUTINE'
*PROCESS  USING(NOWARN)
AOFPARS CSECT ,
AOFPARS AMODE 31
AOFPARS RMODE ANY
***********************************************************************
* Subroutine name -
*
*         AOFPARS
*
* Function -
*
*         Parse almost any string
*
* Attributes -
*
*         Serially reusable, resident, called via BALR
*
* Entry points -
*
*         AOFPARS - Parse string
*
* Entry conditions -
*
* 0(R1)- Points to the string to be deciphered.
* 4(R1)- A fullword containing the length of the string
* 8(R1)  An array of sixtyfour byte entries. The first 2 bytes of the
*        array contain a count of the maximum number of entries in the
*        array
* 12(R1) A 4 Byte string of seperator characters. any of the characters
*        in the string may be used as the separator.
*
* Exit conditions -
*
* R15 = 0:
* 0(ARRAY): AOFPARS will return the number of entries in the array in
*           the first two bytes.
*
* Calls to other routines -
*
*         None
*
* External references -
*
*         None
*
*.
*---------------------------------------------------------------------*
*- register usage                                                    -*
*---------------------------------------------------------------------*
R0      EQU    0                  Work reg
R1      EQU    1                  Work and parm reg
R2      EQU    2                  Work reg
R3      EQU    3                  Work reg
R4      EQU    4                  Work reg
R5      EQU    5                  Work reg
R6      EQU    6                  Work reg
R7      EQU    7
R8      EQU    8
R9      EQU    9
R10     EQU    10
R11     EQU    11                 Dynamic storage base
R12     EQU    12                 Module base
R13     EQU    13                 Linkage
R14     EQU    14                 Linkage
R15     EQU    15                 Linkage
***********************************************************************
* begin linkage convention
       BAKR    R14,0              Save regs
       LR      R10,R1             Save parm pointer
       LA      R12,0(R15,0)       Base and address regs
       USING   AOFPARS,R12        Addressability
       MODID   ,                  Eye catcher and date
       STORAGE OBTAIN,LENGTH=DYNL Get dynamic storage
       LA      R11,0(0,R1)        Use R11 as dyn base
       USING   DYNAREA,R11        Map over dynamic area
***********************************************************************
***********************************************************************
         LR    R1,R10
         L     R2,0(,R1)              Get address of string
         L     R7,8(,R1)              Get address of array
         ST    R7,ARRAY               Put it away for later
         LH    R3,0(,R7)              Get maximum 64 byte entries
         STH   R3,MAXCOUNT
         LA    R7,2(,R7)              Now point to start of array
         L     R4,4(,R1)              Get length of string
         LA    R4,0(R2,R4)            End of string + 1
         BCTR  R4,0                   End of string
         L     R3,12(,R1)             Point to sepchars
         MVC   SEPCHARS(4),0(R3)
         XC    ARRCOUNT(2),ARRCOUNT   Zero out ARRCOUNT
*
PRSELOOP DS    0H
***********************************************************************
* R7 - Next position in array
* R2 - Current position in string
***********************************************************************
         BAL   R14,FNDNBLNK           Find next non blank
         LTR   R15,R15                 What happened ?
         BNZ   ALLBLANK              It was all blank !
* R2 points to first non blank character in rest of string
         LR    R5,R2                 Remember (Spock to McCoy)
         BAL   R14,FNDBLANK          Get next blank character
         CH    R15,=H'0'             What happened this time ?
         BE    GOTBLNK               Got a blank
         CH    R15,=H'4'             How about now ?
         BE    NOBLANKS              No more blanks left !
         CH    R15,=H'8'             What about this ?
         BE    TOBIG                 More then sixteen tokens !
*
GOTBLNK  DS    0H
* R2 PTS TO ENDING BLANK
* R5 PTS TO START OF STRING
* R3 HAS COUNT OF CHARS
* R7 HAS CURRENT TOKEN POSITION
         BCTR  R3,0
         EX    R3,MOVEIT
         B     AR1
MOVEIT   MVC   0(*-*,R7),0(R5)         ** Executed **
AR1      DS    0H
         LA    R7,64(,R7)             Point to next token position
         LH    R3,ARRCOUNT
         LA    R3,1(,R3)
         STH   R3,ARRCOUNT
         B     NEXTTOKE              Check for next token...
*
NOBLANKS DS    0H
* No blanks found at end of string.. process this last token and exit
* R2 - end of string
* R3 - length
* R5 - start of string
* R7 - current token position
         BCTR  R3,0
         EX    R3,MOVEIT
         LH    R3,ARRCOUNT
         LA    R3,1(,R3)
         STH   R3,ARRCOUNT
         B     PARSEND
*
ALLBLANK DS    0H
         B     LASTTOKE
*
TOBIG    DS    0H
         MVC   0(64,R7),0(R5)
         LA    R2,1(,R2)             Point to next character
         LA    R7,64(,R7)
         LH    R3,ARRCOUNT
         LA    R3,1(,R3)
         STH   R3,ARRCOUNT
         B     NEXTTOKE
*
NEXTTOKE DS    0H
         LH    R3,ARRCOUNT           Get ARRCOUNT
         CH    R3,MAXCOUNT           Are we at end of rope ?
         BNL   LASTTOKE
         B     PRSELOOP              Go around again
LASTTOKE DS    0H
         B     PARSEND
PARSEND  DS    0H
         LH    R1,ARRCOUNT
         L     R2,ARRAY
         STH   R1,0(,R2)         Put number of tokens away
ENDPROG  DS   0H
         SLR    R15,R15
       STORAGE RELEASE,           Free dynamic storage                 X
               LENGTH=DYNL,                                            X
               ADDR=(R11)
         PR                         Exit program
*
*
FNDBLANK DS    0H
* R2- a non blank
* R4- a(last character in string)
         LA    R3,1             Include first character found
BLNKLOOP DS    0H
         CR    R2,R4            At end of string
         BE    LASTWD           Yup, last word...
         LA    R2,1(,R2)         Scan next character
         CLC   0(1,R2),SEPCHARS   Got a separator ?
         BE    FNDBLK           Yup- got one
         CLC   0(1,R2),SEPCHARS+1    Got a separator ?
         BE    FNDBLK           Yup- got one
         CLC   0(1,R2),SEPCHARS+2    Got a separator ?
         BE    FNDBLK           Yup- got one
         CLC   0(1,R2),SEPCHARS+3    Got a separator ?
         BE    FNDBLK           Yup- got one
         CLI   0(R2),X'00'      Is this zeros ?
         BE    FNDBLK
         LA    R3,1(R3)         Increment count
         CH    R3,=H'64'        Token to big ?
         BE    WORD64           Yup- quite sad..
         B     BLNKLOOP
*
FNDBLK   DS    0H
         XR    R15,R15
         BR    R14
*
LASTWD   DS    0H
         LA    R15,4
         BR    R14
*
WORD64   DS    0H
         LA    R15,8
         BR    R14
*
*
FNDNBLNK DS    0H
* Find next non blank character in string
* R2- points to current position in string
* R4- points to end of string
         CLC   0(1,R2),SEPCHARS   Got a separator ?
         BE    NGOTIT           Yup- got one
         CLC   0(1,R2),SEPCHARS+1    GOt a separator ?
         BE    NGOTIT           Yup- got one
         CLC   0(1,R2),SEPCHARS+2    Got a separator ?
         BE    NGOTIT           Yup- got one
         CLC   0(1,R2),SEPCHARS+3    Got a separator ?
         BE    NGOTIT           Yup- got one
         CLI   0(R2),X'00'      Zeros count as blanks...
         BE    NGOTIT
         B     GOTIT             No, got next non-blanK
NGOTIT   DS    0H
         LA    R2,1(,R2)         Increment
         CR    R2,R4             At end of string ?
         BH    ENDOSTR           Yup- quite sad.
         B     FNDNBLNK
GOTIT    DS    0H
         XR    R15,R15
         BR    R14
ENDOSTR  DS    0H
         LA    R15,4
         BR    R14
*
         EJECT
         LTORG ,
         EJECT
*---------------------------------------------------------------------*
*- Dynamic area                                                      -*
*---------------------------------------------------------------------*
DYNAREA  DSECT
SEPCHARS DS    CL4               Separator characters
ARRCOUNT DS    H
MAXCOUNT DS    H
ARRAY    DS    A                 Address of array
DUMMY    DS    F
*
DYNL    EQU    *-DYNAREA          Dynamic area length
         END   AOFPARS
