          TITLE 'AOF ROUTINE TO WAIT FOR MESSAGE'
*PROCESS  USING(NOWARN)
AOFWTO    CSECT ,
AOFWTO    AMODE 31
AOFWTO    RMODE ANY
***********************************************************************
* This is the AOFWTO REXX function.                                   *
***********************************************************************
* command syntax:                                                     *
*                                                                     *
* aofwtorc = AOFWTO(text)                                             *
*                                                                     *
* Where text is the text to put out with the wto.                     *
*                                                                     *
*                                                                     *
* This command is designed to be used with the AOF application. It is *
* intended to provide an AOF automation exec  with the capability of  *
* issuing  a WTO.                                                     *
*                                                                     *
***********************************************************************
*---------------------------------------------------------------------*
*- register usage                                                    -*
*---------------------------------------------------------------------*
R0      EQU    0                  work reg
R1      EQU    1                  work and parm reg
R2      EQU    2                  work reg
R3      EQU    3                  work reg
R4      EQU    4                  work reg
R5      EQU    5
R6      EQU    6
R7      EQU    7
R8      EQU    8
R9      EQU    9
R10     EQU    10
R11     EQU    11                 work area base
R12     EQU    12                 module base
R13     EQU    13                 linkage
R14     EQU    14                 linkage
R15     EQU    15                 linkage
***********************************************************************
* begin linkage convention
       STM     R14,R12,12(R13)
       LR      R2,R13             Save savearea
       LR      R10,R1             Save parm pointer
       LA      R12,0(R15)         base and address regs
       USING   AOFWTO,R12
       MODID   ,                  eye catcher and date
       STORAGE OBTAIN,LENGTH=DYNL get dynamic storage
       LA      R11,0(0,R1)        use R11 as dyn base
       USING   DYNAREA,R11        map model over dynamic area
       LA      R13,SAVEAREA
       ST      R13,8(R2)          Link saveareas
       ST      R2,SAVEAREA+4
******************************************************************
       L       R1,16(R10)          let's get our argument
       CLC     0(L'PARMEND,R1),PARMEND    is there an argument
       BE      BAD_WTO             no, then send error
       ICM     R3,15,4(R1)         get the length of argument
       BZ      BAD_WTO             if none send error
       CH      R3,=AL2(L'WTO_TEXT) verify it's not too long
       BNH     SAVE_LENGTH         No, set length
       LH      R3,=AL2(L'WTO_TEXT) set length to max
SAVE_LENGTH DS 0H
       STH     R3,WTO_TEXT_LENGTH  save the length of WTO
       BCTR    R3,0                decrement for executed mvc
       L       R7,0(R1)            and address the argument
       EX      R3,MOVEWTO          MVC   WTO_TEXT(0),0(R7)
       B       DO_WTO
MOVEWTO DS     0H
       MVC     WTO_TEXT(*-*),0(R7) executed
******************************************************************
***********************************************************************
*                                                                     *
* Issue WTO
*
***********************************************************************
DO_WTO EQU     *
       LA      R4,WTO_TEXT_LENGTH
       WTO     TEXT=((4)),DESC=12
       B       OK
***********************************************************************
*                                                                     *
* SET REPLY
*
***********************************************************************
OK     EQU     *
       MVC     ERROR(L'OK_FUNCTION),OK_FUNCTION
       L       R8,=A(L'OK_FUNCTION)
       MVC     RETCODE(2),=CL2'00'    set return code
       B       SETERRORMSG
BAD_WTO        EQU   *
       MVC     ERROR(L'ERROR_FUNCTION),ERROR_FUNCTION
       L       R8,=A(L'ERROR_FUNCTION)
       MVC     RETCODE(2),=CL2'08'    set return code
       B       SETERRORMSG
SETERRORMSG DS    0H
       LA      R1,IRXSHVBSTG
       USING   SHVBLOCK,R1
       LA      R5,KAOFWTO_ERROR
       ST      R5,SHVNAMA
       LA      R5,ERROR
       ST      R5,SHVVALA
       LA      R5,L'KAOFWTO_ERROR
       ST      R5,SHVNAML
       ST      R8,SHVVALL
       SR      R0,R0        NO ENVIRONMENT BLOCK
       ST      R0,SHVNEXT
       MVI     SHVCODE,SHVSTORE
       DROP    R1
       LINK       EP=IRXEXCOM,DCB=0,MF=(E,CALLIST),SF=(E,LINKLIST),    *
               PARAM=(EYEC,DUMMY,DUMMY,IRXSHVBSTG),VL=1
       B       SETRETCODE
SETRETCODE DS  0H
       L       R7,20(R10)
       L       R7,0(R7)
       USING   EVALBLOCK,R7
       MVC     EVALBLOCK_EVLEN,=F'2'
       MVC     EVALBLOCK_EVDATA(2),RETCODE
ENDPROG EQU    *
       L       R3,SAVEAREA+4
       STORAGE RELEASE,           free dynamic storage                 X
               LENGTH=DYNL,                                            X
               ADDR=(R11)
       SLR     R15,R15
       L       R14,12(R3)
       LM      R0,R12,20(R3)
       BR      R14
*
PARMEND           DC    X'FFFFFFFFFFFFFFFF'
ERROR_FUNCTION    DC    C'ERROR IN SPECIFYING AOFWTO FUNCTION'
OK_FUNCTION       DC    C'OK'
KAOFWTO_ERROR     DC    C'AOFWTO_ERROR'
EYEC              DC    CL8'IRXEXCOM'
DUMMY             DC    A(0)
              LTORG
*================================================================
DYNAREA       DSECT
SAVEAREA      DS    18F
ERROR         DS    CL120
DWORD         DS    D
WTO_TEXT_LENGTH   DS  H
WTO_TEXT      DS  CL122
**
RETCODE       DS    H
**
LINKLIST      LINK    EP=IRXEXCOM,DCB=0,SF=L
CALLIST       CALL    ,(EYEC,DUMMY,DUMMY,IRXSHVBSTG),VL,MF=L
IRXSHVBSTG    DS      CL(SHVBLEN)
**
**
*
DYNL          EQU  *-SAVEAREA
         IRXSHVB
         IRXEVALB
         IEANTASM
         END
