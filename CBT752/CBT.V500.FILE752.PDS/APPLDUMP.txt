/* REXX - Dump the specified/current profile(s) and related
          ISPPROF tables to a (series of) sequential file(s) named
          userid.applid.APPLDUMP.  The specified applid can
          contain wildcard values "*" and/or "%";  e.g. TSO
          %APPLDUMP IS*

          This exec must be named APPLDUMP for recursive execution.

          Requires function/subroutine SCCPDSD                        */

'SUBCOM ISPEXEC'
if rc \= 0 then
  do
     say 'APPLDUMP:  Usage must be from within ISPF.'
     exit 16
  end
address 'ISPEXEC'
'CONTROL ERRORS RETURN'
'VGET ZAPPLID'
Parse arg appl options
libdef_d = options \= ''
parse upper value appl zapplid with appl .
call sccpdsd 'ISPPROF', appl'PROF', 'D.'
if d.0 = 0 then
  do
     say 'APPLDUMP:  ',
                   appl'PROF is not a saved ISPF profile/table.'
     exit 12
  end
if wordpos(appl,zapplid 'ISPS') = 0 then
  do
     do d# = 1 to d.0
          parse var d.d# appl 'PROF'
          newappl = appl
          if newappl = 'ISPS' then newappl = 'ISP'
         'SELECT CMD(%APPLDUMP' appl') NEWAPPL('newappl') PASSLIB'
     end
     if rc > 0 then say zerrlm
     exit rc
  end

max_len = 251
r# = 0
if libdef_d then
  do
     d.0 = 1
     d.1 = appl'PROF'
     tablenam = d.1
  end
else
  do
    'LIBDEF ISPTLIB LIBRARY ID(ISPPROF)'
     call sccpdsd 'ISPPROF', appl'*', 'D.'
  end
do d# = 1 to d.0
     parse var d.d# tablenam 9
     tbopened = 0
'TBTOP ' tablenam
if rc > 8 then
  do
    'TBOPEN' tablenam 'NOWRITE'
     if rc > 8 then
       do
          r# = r# + 1
          r.r# = 'APPLDUMP: TBOPEN' tablenam 'rc=' rc'.' zerrlm
          iterate d#
       end
     tbopened = 1
    'TBTOP ' tablenam
  end
'TBSTATS' tablenam 'CDATE(CDATE) UDATE(UDATE) UTIME(UTIME) ROWCURR(ROWS)',
         'STATUS1(STAT) STATUS2(STAT2) STATUS3(STAT3) LIBRARY(ISPPROF)'
var_names = ''
key_lit = ''
if tablenam = appl'PROF' then
  do
    'TBSKIP' tablenam 'SAVENAME(VVVV)'
     var_names = substr(vvvv,2,length(vvvv)-2)
  end
else
  do
    'TBQUERY' tablenam 'KEYS(KKKK) NAMES(VVVV)'
     if length(vvvv) > 2 then var_names = substr(vvvv,2,length(vvvv)-2)
     if length(kkkk) > 2 then key_lit = '   Keys:' substr(kkkk,2,length(kkkk)-2)
    'TBSKIP' tablenam
  end
r# = r# + 1
r.r# = left(tablenam':',9),
      '  Variables:' right(words(var_names),3),
      '  Created:' cdate,
      '  Updated:' udate utime
r# = r# + 1
r.r# = '            Rows:' rows '  Stati:' stat stat2 stat3 key_lit
max_len = max(max_len,length(r.r#))
do rw# = 1 to rows
saves = var_names
r# = r# + 1
r.r# = left('--------' tablenam 'row:' right(rw#,5),72,'-')
tlen = 0;
Do While saves \= ''
     r# = r# + 1
     Parse Var saves wwww saves
     tlen = tlen + length(wwww)
     Interpret 'val =' wwww
     r.r# = left(wwww,9)right(length(val),5) val
     max_len = max(max_len,length(r.r#))
end
drop value(var_names)
if appl'PROF' = tablenam then
  do
    'TBSKIP' tablenam 'SAVENAME(VVVV)'
     var_names = substr(vvvv,2,length(vvvv)-2)
  end
else 'TBSKIP' tablenam
if rc > 0 then leave rw#

end
if tbopened then do; 'TBTOP' tablenam; 'TBCLOSE' tablenam; end
end
r.0 = r#

'LIBDEF ISPTLIB'
address 'TSO'
prefix = sysvar('SYSPREF')
if prefix = '' then dsn = userid()'.'appl'.APPLDUMP'
else dsn = appl'.APPLDUMP'
'ALLOC F(TBLDUMP) DA('dsn') MOD DEL UNIT(SYSDA) REU'
'ALLOC F(TBLDUMP) DA('dsn') NEW CAT TR SPA(20,20) RELEASE REUSE',
  'DSORG(PS) RECFM(V B) LRECL('max_len+4') BLKSIZE(0) UNIT(SYSDA)'
'EXECIO' r.0 'DISKW TBLDUMP (FINIS STEM R.'
'FREE FILE(TBLDUMP)'
exit 0
