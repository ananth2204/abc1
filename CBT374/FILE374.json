{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011853000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1234506, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 25, "INMDSNAM": "CBT.V500.FILE374.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE374.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x15\\x0f'", "DS1TRBAL": "b'0\\xbe'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xb2\\x00\\x05\\x02\\xb3\\x00\\x0b\\x00\\x16'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$AUTHOR": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x11o\\x00\\x99\\x11o\\x10\\x04\\x00\\x0c\\x00\\x0b\\x00\\x01\\xe7\\xe2\\xc4\\xd4\\xd5@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-04-26T00:00:00", "modifydate": "1999-04-26T10:04:00", "lines": 12, "newlines": 11, "modlines": 1, "user": "XSDMN"}, "text": " DAVID MARSDEN\n CURRENTLY WORKING AT CSC AUSTRALIA (EAST PERTH DATA CENTRE)\n\n EMAIL : DMARSDEN@ONE.NET.AU\n   WEB : WWW2.ONE.NET.AU/~DMARSDEN\n\n  MAIL : P O BOX 244\n         HILLARYS\n         WESTERN AUSTRALIA 6923\n\n PHONE : 61 08 9421 6405 (WORK)\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOCM": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x99\\x11o\\x00\\x99 o\\x18\\x01\\x00\\x12\\x00\\x0b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-04-26T00:00:00", "modifydate": "1999-07-25T18:01:00", "lines": 18, "newlines": 11, "modlines": 0, "user": "SBGOLOB"}, "text": "SAS PROGRAMS TO READ SMF MAINLY.\nUSEFUL IF YOU DON'T HAVE MXG AND WANT TO DO YOUR OWN.\nYOU NEED THE IBM SMF MANUAL TO UNDERSTAND WHAT IS BEING READ. IF YOU\nCANNOT LOCATE A COPY THERE ARE VERSIONS ON THE WEB YOU CAN FREELY\nACCESS.\n\nTHE TECHNIQUE OF USING THE TRIPLETS (OFFSET, LENGTH, NUMBER) TO GET\nREPEATING DATA HAS CAUSED MUCH GRIEF TO THOSE WHO WANT TO READ SMF\nUSING COBOL ETC.\n\nMANY OF THESE WERE WRITTEN YEARS AGO AND MAY REQUIRE SOME WORK TO GET\nTHEM UP TO DATE - BUT SMF IS GENERALLY UPWARD COMPATIBLE.\nTHUS THEY ARE MOST LIKELY TO BE WRONG IN SO FAR AS THEY MISS THE STUFF\nTHAT HAS BEEN ADDED AT THE END OR IN THE GAPS THAT ARE SOMETIMES LEFT.\n\nSOME OTHER NON-SMF JOBS, USING CODE AS SUPPLIED BY SAS AS EXAMPLES TO\nREAD DISK VTOCS , PDS DIRECTORIES.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$MARSDEN": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x11\\x7f\\x01\\x00$?\\x188\\x009\\x009\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-04-27T00:00:00", "modifydate": "2000-08-30T18:38:00", "lines": 57, "newlines": 57, "modlines": 0, "user": "WSBG"}, "text": "Subject: Re: Donation to CBT tape.\nDate: Tue, 27 Apr 1999 18:51:57 +0800\nFrom: \"david marsden\" <dmarsden@one.net.au>\nTo: \"Sam Golob\" <sbgolob@attglobal.net>\n\nSam,\n\nI've redone the SAS file as sas1.exe which is attached.\n\nsas2.exe is an additional small collection of SAS programs to read\nHuron v2 / Object Star v3 SMF.\n\nAlso redone the zdf file to add a little more documentation and\nremove one line from one program that indicated it might not be for\npublic distribution.\n\nAll 3 files are zipped up transmit format now and the PDSs they\nrepresent all have $$docm members and $$author members with my\npersonal details.  The documentation is minimal unfortunately but\nthose who might be interested should be able to get the programs\nworking  - not that difficult if you have familiarity with SAS (or\nassembler for ZDF).\n\nCheers .\n\nDavid Marsden\n\n\n   -----Original Message-----\n   From: Sam Golob <sbgolob@ibm.net>\n\n\n   David Marsden wrote: (with his original file shipment)\n\n  >   Sam, Here are 2 files I would like to donate to CBT tape.  Both\n  >  are in zipped up transmit format. smf1.exe contains SAS\n  >  programs to read nearly all common SMF records. zdf.exe contains\n  >  a pds with ZDF program (member zdfesa).  Compile and link this\n  >  changing dataset name in text of program to be the pds name as\n  >  used to receive into  (it also functions as a dataset for\n  >  ispplib libdef). ZDF lists ASCBs in a handy ISPF display.  Other\n  >  programs may be called off the zdf menu - udf listing devices\n  >  from UCBs being the most useful.   Nearly all available programs\n  >  work up to OS/390 2.6 with little modification. ZDF was XDF on\n  >  share tapes back in SP 1.3 days. Any further info. you may\n  >  require, just reply to this address.\n  >  (dmarsden@one.net.au)\n  >                            David Marsden\n\n     --\n\n         Name: sas1.EXE               (This became File 374)\n\n         Name: sas2.EXE               (This became File 375)\n\n         Name: zdf.EXE                (This became File 376)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISKMAP": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x843O\\x00\\x980/\\x16\\x15\\x00\\xd7\\x00\\xb4\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1984-11-29T00:00:00", "modifydate": "1998-10-29T16:15:00", "lines": 215, "newlines": 180, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMM JOB C4SYS000,'DMAP',MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM,\n//  MSGLEVEL=(0,0)\n//*MAIN PROC=C4\n//*\n//SAS     EXEC EDSAS609,OPTIONS='NODATE NOSOURCE NONOTES'\n//VTOC    DD DSN=VTOC,UNIT=3380,VOL=SER=C48095,DISP=SHR\n//SYSIN   DD *\n*-------------------------------- MAPDISK ----------------------------*\n|  THIS CODE READS IN THE DSCBS OF THE VTOC AND PRODUCES A LISTING    |\n|  OF ALL DATA SETS WITH THEIR ATTRIBUTES AND ALLOCATION DATA.        |\n|                                                                     |\n|  A VTOC DD STATEMENT SHOULD BE IN THE JCL LIKE:                     |\n|     //VTOC DD DSN=VTOC,VOL=SER=THISVOL,UNIT=DISK,DISP=SHR           |\n|                                                                     |\n*---------------------------------------------------------------------*\n|                                                                     |\n| THE CCHHR OPTION ON THE INFILE STATEMENT BRINGS IN THE COUNT        |\n| FIELD AS WELL AS THE KEY AND DATA IN THE RECORD.  THIS IS WHY       |\n| OFFSETS ARE 5 MORE THAN INDICATED IN THE SYSTEMS CONTROL BLOCKS.    |\n|                                                                     |\n| THE DATA SET SERIAL NUMBER AT TUCC IS USED TO STORE THE USAGE       |\n| COUNT AND DATE OF LAST USE.                                         |\n|                                                                     |\n|  DATA SETS WITH MORE THAN 3 EXTENTS HAVE EXTENSION DSCVS.           |\n|  FORMAT 1 AND FORMAT 2 DSCBS THAT POINT TO FORMAT 3 DSCBS ARE OUTPUT|\n|  TO SEPARATE DATASETS SO THAT THEY CAN BE MERGED TO FIND OUT        |\n|  ALL THE ALLOCATION DATA.                                           |\n|                                                                     |\n*---------------------------------------------------------------------*;\n\nDATA DSN(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n              EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n              LRECL SECALOC TT R TRACKS VOLSER)\n     TRACKM(KEEP=CCLO HHLO CCHI HHHI DSNAME FRST LST CCHHR)\n     FREE(KEEP=LOC CYL TRACK TOTAL RECN TRKCYL)\n     FMT1(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n      EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n      LRECL SECALOC TT R TRACKS CCHHR VOLSER)\n     FMT2(KEEP=CCHHR TOCCHHR)\n     FMT3(KEEP=CCHHR ALLOC3);  LENGTH DEFAULT=4;\n     LENGTH DSNAME $ 44;\n\n*--------------------- READ DSCB AND DETERMINE WHICH FORMAT --------*;\nINFILE VTOC VTOC CVAF CCHHR COLUMN=COL;\nINPUT @50 DSCBTYPE ?1. @;\n     IF DSCBTYPE=1 THEN GOTO FORMAT1;\nELSE IF DSCBTYPE=2 THEN GOTO FORMAT2;\nELSE IF DSCBTYPE=3 THEN GOTO FORMAT3;\nELSE IF DSCBTYPE=5 THEN GOTO FORMAT5;\nELSE IF DSCBTYPE=4 THEN DO;\n                        INPUT @70 TRKCYL PIB2. @111 @;\n                        DSNAME = '** VTOC **';\n       INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;\n      *IF IND=0 THEN RETURN;\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n       OUTPUT TRACKM;\n                        END;\nELSE IF DSCBTYPE=. THEN NULL+1; _ERROR_=0;\n     IF NULL>500 THEN STOP; RETURN;\nRETAIN TRKCYL;\n\nFORMAT1:                                 *-- REGULAR DCB TYPE --*;\n  INPUT DSNAME $CHAR44.\n        @81 YU PIB1.  DAYU PIB2.  COUNT PIB2.  IND PIB1.\n        @59 YC PIB1.  DAYC PIB2.\n            YE PIB1.  DAYE PIB2.\n         EXTENTS PIB1. @88 DSORG PIB1. @90 RECFM0 PIB1.\n         @92 BLKSIZE PIB2. LRECL PIB2. KEYLENG PIB1.\n         @100 ALO PIB1. SECALOC PIB3. TT PIB2. R PIB1. @ ;\n\nIF YC>0 THEN CREATED=DATEJUL(1000*YC+DAYC);\nIF YE>0 THEN EXPIRES=DATEJUL(1000*YE+DAYE);\nIF YU>0 THEN LASTUSE=DATEJUL(1000*YU+DAYU);\nFORMAT CREATED EXPIRES LASTUSE DATE7.;\n*--------------- COUNT AND LAST USE ARE TUCC SPECIALS ----------;\nIF NOT (IND=0 | IND=64) THEN COUNT=.;\nIF NOT (IND=0 | IND=64) THEN LASTUSE=.;\n*--------- DSORG RECODING ----------; DSORG1='  ';\nIF MOD(INT(DSORG/2),2) THEN DSORG1='PO';\nIF DSORG>=32 THEN DSORG1='DA'; IF DSORG>=64 THEN DSORG1='PS';\nIF DSORG>=128 THEN DSORG1='IS';\n*---------- RECFM RECODING ------------;\nRECFM1=' '; Z=INT(RECFM0/64);\nIF Z=1 THEN RECFM1='V'; IF Z=2 THEN RECFM1='F';\nIF Z=3 THEN RECFM1='U';\nRECFM2=' '; IF MOD(INT(RECFM0/16),2) THEN RECFM2='B';\nRECFM3=' '; IF MOD(INT(RECFM0/4),2) THEN RECFM3='A';\nRECFM4=' '; IF MOD(INT(RECFM0/8),2) THEN RECFM4='S';\n\n*---------- ALLOC TYPE RECODING -------------;\nALOC='   '; Z=INT(ALO/64);     IF Z=1 THEN ALOC='BLK';\nIF Z=2 THEN ALOC='TRK';        IF Z=3 THEN ALOC='CYL';\n*---------- ALLOCATED SPACE ---------;\nIF EXTENTS>3 THEN INPUT @141 CCHHR $5. @; ELSE CCHHR='     ';\nINPUT @111@;\nTRACKS=0; DO I=1 TO 3; LINK EXL; END;\nIF EXTENTS>3 THEN DO;  INPUT CCHHR $5. ;\n    OUTPUT FMT1;\n    END;\n ELSE\n OUTPUT DSN;\nRETURN;\n\n*------- ROUTINES TO COLLECT EXTENT INFORMATION --------*;\nEXL:   INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;\n       IF IND=0 THEN RETURN;\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n       OUTPUT TRACKM;\n       TRACKS+  TRKCYL  *(CCHI-CCLO)+HHHI-HHLO+1;\n       RETURN;\n\nFORMAT2:                                 *----- ISAM DSCB -------*;\n       INPUT @1 CCHHR $CHAR5. @141 TOCCHHR $CHAR5.\n                              @141 Z IB5. ;\n       IF Z\u00ac=0 THEN OUTPUT FMT2; RETURN;\n\nFORMAT3:  TRACKS=0;                       *----- CONTINUATION DSCB --*;\n       DSNAME='000000';\n       INPUT @1 CCHHR $CHAR5. @10@;\n       DO I=1 TO 13;\n         IF I=5 THEN INPUT +1 @;\n         LINK EXL;\n         IF IND<=0 THEN I=13;\n         END;\n       ALLOC3=TRACKS; OUTPUT FMT3; RETURN;\n       FORMAT CCHHR $HEX10.;\n\nFORMAT5: INPUT @10@; RECN+1;          *----- FREE SPACE EXTENTS ----*;\nEXT:  INPUT LOC PIB2. CYL PIB2. TRACK PIB1. @ ;\n      IF LOC=0 THEN RETURN; IF COL=50 THEN INPUT +1@;\n      TOTAL=TRKCYL*CYL+TRACK;\n      OUTPUT FREE;\n      CCLO=INT(LOC/TRKCYL);\n      HHLO=MOD(LOC,TRKCYL);\n      LOC=LOC+TOTAL-1;\n      CCHI=INT(LOC/TRKCYL);\n      HHHI=MOD(LOC,TRKCYL);\n      DSNAME='* * * * * FREE SPACE * * * * *';\n      CCHHR='     ';\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n      OUTPUT TRACKM;\n      IF COL<140 THEN GOTO EXT;\n  RETURN;\n\nPROC SORT DATA=TRACKM; BY CCHHR DSNAME;\nDATA DMAP;\nRETAIN DAS;\nSET TRACKM;\nIF DSNAME = '000000' THEN DSNAME=DAS ;\nELSE DAS=DSNAME;\nPROC SORT DATA=DMAP; BY CCLO HHLO;\nDATA _NULL_;\nSET DMAP;\n  FILE PRINT HEADER=H;\n  TRKS=LST-FRST+1;\n  PUT @1 DSNAME\n                @50 CCLO 4. @55 CCLO HEX4.  @65 HHLO 4.  @70 HHLO HEX4.\n                @80 CCHI 4. @85  CCHI HEX4. @95  HHHI 4. @100 HHHI HEX4.\n                @110 FRST 5. @116 LST 5. @122 TRKS 5.\n                 ;\n  RETURN;\nH:\n  PUT @1 'DATASET NAME ------------------------------'\n      @50 '-- LO CYL ------ LO TRACK --'\n      @80 '-- HI CYL ------ HI TRACK --'\n      @110 'FIRST'\n      @116 ' LAST'\n      @122 '#TRKS'\n      ;\n  RETURN;\n  RUN;\n\nPROC PRINT DATA=FREE; TITLE3 FREE SPACE EXTENTS;\n\nPROC SORT DATA=DSN; BY DSNAME;\n*----- COMBINE FMT1 AND FMT2 TO GET REFERENCE TO FMT3 -----*;\nPROC SORT DATA=FMT1; BY CCHHR;\nPROC SORT DATA=FMT2; BY CCHHR;\nDATA FMT1;\n     MERGE FMT1(IN=I1) FMT2(IN=I2); BY CCHHR;\n     IF I2 THEN CCHHR=TOCCHHR;\n     IF I1;   DROP TOCCHHR;     RUN;\n*------- COMBINE NEW FMT1 WITH FMT3 TO GET REST OF ALLOCATION INFO --*;\nPROC SORT DATA=FMT1; BY CCHHR;\nPROC SORT DATA=FMT3; BY CCHHR;\nDATA FMT1;  MERGE FMT1(IN=I1) FMT3; BY CCHHR;\n     IF I1; TRACKS=TRACKS+ALLOC3;  RUN;\n*------ COMBINE FMT1 WITH DSN DATASETS (INTERLEAVE)------*;\nPROC SORT DATA=FMT1; BY DSNAME;\nDATA DSN; SET DSN FMT1; BY DSNAME;\nRUN;\n\n*------- WRITE THE REPORTS FOR THE VOLUME ----------*;\nTITLE3 ALPHABETICAL LISTING OF DATA SETS AND THEIR ATTRIBUTES;\nDATA _NULL_; SET DSN END=EOF; FILE PRINT HEADER=H; M=-1;\n     PUT DSNAME $44. +1 DSORG1 $2. +2\n      (RECFM1-RECFM4) (:$1.+M)\n      @55 (LRECL BLKSIZE) (5. +1) +1\n     (CREATED EXPIRES LASTUSE) (DATE7.+1) +1\n     COUNT 5. +2 ALOC $3.+1 SECALOC 4. +2\n     EXTENTS 5.+1 TRACKS 6. TT 5. R 4.;\n     TOTAL+TRACKS;\n     IF EOF THEN PUT // 'TOTAL NUMBER OF DATASETS =' _N_\n                      / 'TOTAL NUMBER OF TRACKS   =' TOTAL;\n     RETURN;\n\nH:   PUT 'VOL=SER=' VOLSER $6.;\n     PUT / 'DATA SET NAME'\n     @43 'DSORG RECFM LRECL BLKSZ CREATED EXPIRES LASTUSE '\n     ' USES SECONDARY'\n     @108 'EXTENTS TRACKS   TT---R' /; RETURN; RUN;\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DMAPQ": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x86\\x03O\\x00\\x980/\\x16\\x17\\x00\\xaf\\x00\\xad\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1986-02-03T00:00:00", "modifydate": "1998-10-29T16:17:00", "lines": 175, "newlines": 173, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMV JOB C4SYS000,MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM,\n//  MSGLEVEL=(0,0)\n//*MAIN PROC=C4\n//*\n//SAS     EXEC EDSAS609,OPTIONS='NODATE   SOURCE   NOTES HSWORK'\n//VTOC    DD DSN=VTOC,UNIT=DISK,VOL=SER=C48095,DISP=SHR\n//SYSIN   DD *\n*-------------------------------- MAPDISK ----------------------------*\n|  THIS CODE READS IN THE DSCBS OF THE VTOC AND PRODUCES A LISTING    |\n|  OF ALL DATA SETS WITH THEIR ATTRIBUTES AND ALLOCATION DATA.        |\n|                                                                     |\n|  A VTOC DD STATEMENT SHOULD BE IN THE JCL LIKE:                     |\n|     //VTOC DD DSN=VTOC,VOL=SER=THISVOL,UNIT=DISK,DISP=SHR           |\n|                                                                     |\n*---------------------------------------------------------------------*\n|                                                                     |\n| THE CCHHR OPTION ON THE INFILE STATEMENT BRINGS IN THE COUNT        |\n| FIELD AS WELL AS THE KEY AND DATA IN THE RECORD.  THIS IS WHY       |\n| OFFSETS ARE 5 MORE THAN INDICATED IN THE SYSTEMS CONTROL BLOCKS.    |\n|                                                                     |\n| THE DATA SET SERIAL NUMBER AT TUCC IS USED TO STORE THE USAGE       |\n| COUNT AND DATE OF LAST USE.                                         |\n|                                                                     |\n|  DATA SETS WITH MORE THAN 3 EXTENTS HAVE EXTENSION DSCVS.           |\n|  FORMAT 1 AND FORMAT 2 DSCBS THAT POINT TO FORMAT 3 DSCBS ARE OUTPUT|\n|  TO SEPARATE DATASETS SO THAT THEY CAN BE MERGED TO FIND OUT        |\n|  ALL THE ALLOCATION DATA.                                           |\n|                                                                     |\n*---------------------------------------------------------------------*;\n\nDATA DSN(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n              EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n              LRECL SECALOC TT R TRACKS VOLSER)\n     TRACKM(KEEP=CCLO HHLO CCHI HHHI DSNAME FRST LST CCHHR)\n     FREE(KEEP=LOC CYL TRACK TOTAL RECN TRKCYL)\n     FMT1(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n      EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n      LRECL SECALOC TT R TRACKS CCHHR VOLSER)\n     FMT2(KEEP=CCHHR TOCCHHR)\n     FMT3(KEEP=CCHHR ALLOC3);  LENGTH DEFAULT=4;\n     LENGTH DSNAME $ 44;\n\n*--------------------- READ DSCB AND DETERMINE WHICH FORMAT --------*;\nINFILE VTOC VTOC CVAF CCHHR COLUMN=COL;\nINPUT @50 DSCBTYPE ?1. @;\n     IF DSCBTYPE=1 THEN GOTO FORMAT1;\nELSE IF DSCBTYPE=2 THEN GOTO FORMAT2;\nELSE IF DSCBTYPE=3 THEN GOTO FORMAT3;\nELSE IF DSCBTYPE=5 THEN GOTO FORMAT5;\nELSE IF DSCBTYPE=4 THEN DO;\n                        INPUT @70 TRKCYL PIB2. @111 @;\n                        DSNAME = '** VTOC **';\n       INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;\n      *IF IND=0 THEN RETURN;\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n       OUTPUT TRACKM;\n                        END;\nELSE IF DSCBTYPE=. THEN NULL+1; _ERROR_=0;\n     IF NULL>500 THEN STOP; RETURN;\nRETAIN TRKCYL;\n\nFORMAT1:                                 *-- REGULAR DCB TYPE --*;\n  INPUT @6 DSNAME $44.\n        @81 YU PIB1.  DAYU PIB2.  COUNT PIB2.  IND PIB1.\n        @59 YC PIB1.  DAYC PIB2.\n            YE PIB1.  DAYE PIB2.\n         EXTENTS PIB1. @88 DSORG PIB1. @90 RECFM0 PIB1.\n         @92 BLKSIZE PIB2. LRECL PIB2. KEYLENG PIB1.\n         @100 ALO PIB1. SECALOC PIB3. TT PIB2. R PIB1. @ ;\n\nIF YC>0 THEN CREATED=DATEJUL(1000*YC+DAYC);\nIF DAYE=366 THEN DAYE=365;\nIF YE>0 THEN EXPIRES=DATEJUL(1000*YE+DAYE);\nIF YU>0 THEN LASTUSE=DATEJUL(1000*YU+DAYU);\nFORMAT CREATED EXPIRES LASTUSE DATE7.;\n*--------------- COUNT AND LAST USE ARE TUCC SPECIALS ----------;\nIF NOT (IND=0 | IND=64) THEN COUNT=.;\nIF NOT (IND=0 | IND=64) THEN LASTUSE=.;\n*--------- DSORG RECODING ----------; DSORG1='  ';\nIF MOD(INT(DSORG/2),2) THEN DSORG1='PO';\nIF DSORG>=32 THEN DSORG1='DA'; IF DSORG>=64 THEN DSORG1='PS';\nIF DSORG>=128 THEN DSORG1='IS';\n*---------- RECFM RECODING ------------;\nRECFM1=' '; Z=INT(RECFM0/64);\nIF Z=1 THEN RECFM1='V'; IF Z=2 THEN RECFM1='F';\nIF Z=3 THEN RECFM1='U';\nRECFM2=' '; IF MOD(INT(RECFM0/16),2) THEN RECFM2='B';\nRECFM3=' '; IF MOD(INT(RECFM0/4),2) THEN RECFM3='A';\nRECFM4=' '; IF MOD(INT(RECFM0/8),2) THEN RECFM4='S';\n\n*---------- ALLOC TYPE RECODING -------------;\nALOC='   '; Z=INT(ALO/64);     IF Z=1 THEN ALOC='BLK';\nIF Z=2 THEN ALOC='TRK';        IF Z=3 THEN ALOC='CYL';\n*---------- ALLOCATED SPACE ---------;\nIF EXTENTS>3 THEN INPUT @141 CCHHR $5. @; ELSE CCHHR='     ';\nINPUT @111@;\nTRACKS=0; DO I=1 TO 3; LINK EXL; END;\nIF EXTENTS>3 THEN DO;  INPUT CCHHR $5. ;\n    OUTPUT FMT1;\n    END;\n ELSE\n OUTPUT DSN;\nRETURN;\n\n*------- ROUTINES TO COLLECT EXTENT INFORMATION --------*;\nEXL:   INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;\n       IF IND=0 THEN RETURN;\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n       OUTPUT TRACKM;\n       TRACKS+  TRKCYL  *(CCHI-CCLO)+HHHI-HHLO+1;\n       RETURN;\n\nFORMAT2:                                 *----- ISAM DSCB -------*;\n       INPUT @1 CCHHR $CHAR5. @141 TOCCHHR $CHAR5.\n                              @141 Z IB5. ;\n       IF Z\u00ac=0 THEN OUTPUT FMT2; RETURN;\n\nFORMAT3:  TRACKS=0;                       *----- CONTINUATION DSCB --*;\n       DSNAME='000000';\n       INPUT @1 CCHHR $CHAR5. @10@;\n       DO I=1 TO 13;\n         IF I=5 THEN INPUT +1 @;\n         LINK EXL;\n         IF IND<=0 THEN I=13;\n         END;\n       ALLOC3=TRACKS; OUTPUT FMT3; RETURN;\n       FORMAT CCHHR $HEX10.;\n\nFORMAT5: INPUT @10@; RECN+1;          *----- FREE SPACE EXTENTS ----*;\nEXT:  INPUT LOC PIB2. CYL PIB2. TRACK PIB1. @ ;\n      IF LOC=0 THEN RETURN; IF COL=50 THEN INPUT +1@;\n      TOTAL=TRKCYL*CYL+TRACK;\n      OUTPUT FREE;\n      CCLO=INT(LOC/TRKCYL);\n      HHLO=MOD(LOC,TRKCYL);\n      LOC=LOC+TOTAL-1;\n      CCHI=INT(LOC/TRKCYL);\n      HHHI=MOD(LOC,TRKCYL);\n      DSNAME='* * * * * FREE SPACE * * * * *';\n      CCHHR='     ';\n       FRST=CCLO*TRKCYL+HHLO;\n       LST=CCHI*TRKCYL+HHHI;\n      OUTPUT TRACKM;\n      IF COL<140 THEN GOTO EXT;\n  RETURN;\n\nPROC SORT DATA=TRACKM; BY CCHHR DSNAME;\nDATA DMAP;\nRETAIN DAS;\nSET TRACKM;\nIF DSNAME = '000000' THEN DSNAME=DAS ;\nELSE DAS=DSNAME;\nPROC SORT DATA=DMAP; BY CCLO HHLO;\nDATA _NULL_;\nSET DMAP;\n  FILE PRINT HEADER=H;\n  TRKS=LST-FRST+1;\n  PUT @1 DSNAME\n                @50 CCLO 4. @55 CCLO HEX4.  @65 HHLO 4.  @70 HHLO HEX4.\n                @80 CCHI 4. @85  CCHI HEX4. @95  HHHI 4. @100 HHHI HEX4.\n                @110 FRST 5. @116 LST 5. @122 TRKS 5.\n                 ;\n  RETURN;\nH:\n  PUT @1 'DATASET NAME ------------------------------'\n      @50 '-- LO CYL ------ LO TRACK --'\n      @80 '-- HI CYL ------ HI TRACK --'\n      @110 'FIRST'\n      @116 ' LAST'\n      @122 '#TRKS'\n      ;\n  RETURN;\n  RUN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADXREF": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01;\\x00\\x00\\x00\\x84#O\\x00\\x984\\x9f\\x159\\x00\\x99\\x00\\xa1\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.59", "flags": 0, "createdate": "1984-08-21T00:00:00", "modifydate": "1998-12-15T15:39:00", "lines": 153, "newlines": 161, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDML JOB C4SYS000,'LOD1',MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM\n//*\n//SAS     EXEC   SAS609,OPTIONS=NODATE\n//LIB     DD DISP=SHR,DSN=HEDBT.DOBIS.LOADLIB\n//*IB     DD DSN=EDI1.TEST.PGMLIB,DISP=SHR\n//*IB     DD DSN=EDED.PROD.ADFLOAD,DISP=SHR\n//SYSIN   DD *\n*------------------- LOADMAP -----------------------------------------*\n| THIS SAMPLE CODE READS IN THE ESD AND RLD RECORDS OF A LOAD MODULE, |\n| AND CREATES: (1) A MODULE MAP ALMOST IDENTICAL TO THE ONE PRODUCED  |\n| BY THE LINKAGE EDITOR, (2) THE OVERLAY STATEMENTS NECESSARY TO      |\n| RECREATE THE LOAD MODULE, AND (3) CROSS REFERENCES BY CALLER AND    |\n| CALLEE. TO USE THIS CODE FOR ANY PARICULAR MODULE, JUST CHANGE      |\n| THE INFILE STATEMENT AND INCLUDE THE FOLLOWING DD CARD:             |\n|                                                                     |\n| //LIB DD SAS.LIBRARY,DISP=SHR                                       |\n*---------------------------------------------------------------------*;\nTITLE SAS LOAD MODULE;\n  DATA\n  ESD   (KEEP=NAME TYPE ESDID ADDR SEGMENT LENGTH HEXLENG ALIGN ID)\n  RLD   (KEEP=RESDID PESDID RLDTYPE OFFSET LENG SIGN);\n  INFILE LIB(DBSFILES) COLUMN=COL;\n  INPUT RECTYPE PIB1. +3 ESDID PIB2. LREC PIB2. @ ;\n        IF RECTYPE=32 THEN GOTO ESD;\n        IF RECTYPE=1  THEN GOTO CNTL;\n        IF RECTYPE=2 | RECTYPE=6 | RECTYPE=14\n         | RECTYPE=3 | RECTYPE=7 | RECTYPE=15 THEN GOTO RLD;\n        RETURN;\nCNTL: INPUT; INPUT; RETURN; * SEQUENCE PAST TEXT RECORD;\nESD:; *------- EXTERNAL SYMBOL DICTIONARY RECORD;\n      MAXCOL=LREC+8;\nLOOP: INPUT NAME $8. ESDTYPE PIB1. ADDR PIB3. SEGMENT PIB1.\n      LENGTH  IB3. @;\n      HEXLENG=LENGTH;  ESDTYPE=MOD(ESDTYPE,32);\n      TYPE='  ';\n      IF ESDTYPE=0 THEN TYPE='SD';   IF ESDTYPE=1 THEN TYPE='LD';\n      IF ESDTYPE=2 THEN TYPE='ER';   IF ESDTYPE=3 THEN TYPE='LR';\n      IF ESDTYPE=4 THEN TYPE='PC';   IF ESDTYPE=5 THEN TYPE='CM';\n      IF ESDTYPE=6 THEN TYPE='PR';   IF ESDTYPE=10 THEN TYPE='WX';\n      IF ESDTYPE=7 | ESDTYPE>15 THEN GOTO ESDN;\n      IF TYPE='LR' THEN ID=LENGTH/256; IF TYPE='LR' THEN LENGTH=.;\n      ALIGN=.; IF TYPE='PR' THEN ALIGN=SEGMENT;\n      IF TYPE='PR' THEN SEGMENT=.;\n      OUTPUT ESD;\nESDN: ESDID=ESDID+1;\n      IF COL<=MAXCOL THEN GOTO LOOP;\n      RETURN;\nRLD: ; *------------ RELOCATION DICTIONARY RECORD;\n      MAXCOL=LREC+16;\n      INPUT @17 @;\nES:  INPUT (RESDID PESDID) (PIB2.) @;\nRPT: INPUT FLAG PIB1.  OFFSET PIB3. @;\n     RLDTYPE=' '; Z=INT(FLAG/16);\n     *UT FLAG 6.  +5 Z 6.;\n     IF Z=0 THEN RLDTYPE='A';  IF Z=1 THEN RLDTYPE='V';\n     IF Z=2 THEN RLDTYPE='D';  IF Z=3 THEN RLDTYPE='C';\n     LENG=MOD(INT(FLAG/4),4)+1;\n     SIGN=MOD(INT(FLAG/2),2);  * 1 FOR NEGATIVE;\n     NXT=MOD(FLAG,2);\n     OUTPUT RLD;\n     IF NXT=1 THEN GOTO RPT;\n     IF COL<MAXCOL THEN GOTO ES;\n     IF MOD(RECTYPE,2) THEN LINK CNTL;\nFORMAT ADDR HEXLENG OFFSET HEX6.;\nDATA;  SET ESD; IF TYPE='SD' | TYPE='LR' | TYPE='PR';\n       IF TYPE='PR' THEN SEGMENT=100; * TO SORT HIGH;\nPROC SORT OUT=ESDS; BY SEGMENT ADDR DESCENDING TYPE;\nRUN;\n *----------------------- PRINT THE MODULE MAP --------*;\nDATA _NULL_; SET ESDS; BY SEGMENT; RETAIN;\n    FILE PRINT HEADER=HEAD NOTITLES; OPTIONS PS=56;\n    IF FIRST.SEGMENT & _N_>1 THEN PUT /;\n    IF TYPE='PR' THEN GOTO PR;\n    IF TYPE='LR' THEN GOTO LR;\n*----------- PROCESS SD TYPE ENTRYS (CSECTS);\n    IF COL>41 THEN PUT;\n    PUT +2    NAME $8. @13 ADDR HEX6. @21 LENGTH HEX6. SEGMENT 6.;\n    COL=41; RETURN;\n*----------- PROCESS LR TYPE ENTRYS (ENTRYPOINTS);\nLR:  PUT @COL NAME $8. +2 ADDR HEX6. @; COL=COL+20;\n     IF COL<110 THEN RETURN; COL=41; PUT; RETURN;\n*----------- PROCESS PR TYPE ENTRYS (PSEUDO REGISTERS);\nPR:  NPR=SUM(NPR,1); IF NPR>1 THEN GOTO PRNXT;\n     PUT ' PSEUDO REGISTERS' /; LINK PRHEAD;\nPRNXT: PUT @COL NAME $8. +5 ADDR HEX3. +6 LENGTH HEX2. @;\n       COL=COL+30; IF COL<=110 THEN RETURN; PUT; COL=3;\n       RETURN;\n*------------ ROUTINE TO PRINT PAGE HEADINGS;\nHEAD: IF NPR>0 THEN GOTO PRHEAD;\n      IF _N_<=1 THEN PUT @55 'MODULE MAP'// @4 'CONTROL SECTION'\n       @41 'ENTRY';\n      PUT / '    NAME    ORIGIN  LENGTH  SEG. NO.  '\n          4*'    NAME   LOCATION ' /;\n      COL=41; RETURN;\n*---------------- PAGE HEADINGS FOR PSEUDO REGISTER PRINT OUT;\nPRHEAD: PUT 4*'    NAME    ORIGIN  LENGTH    ' //;\n        COL=3; RETURN;\n*-------------------- CREATE OVERLAY STATEMENTS ------------*;\nDATA _NULL_; SET ESDS; BY SEGMENT;\n      IF SEGMENT=1 | TYPE='SD' THEN RETURN;\n      FILE PRINT COLUMN=COL HEADER=HH;\n      TITLE 'OVERLAY STATEMENTS FOR LOAD MODULE';\n      IF \u00acFIRST.SEGMENT THEN GOTO INSERT;\n      PUT;\n      PUT @7 'OVERLAY'   @16 'X' ADDR HEX6.\n      /   @7 'INSERT'    @16 @@;\nINSERT:\n      IF COL<=60 THEN GOTO INS;\n      PUT @72 '*' / @16 @@;\nINS:  PUT NAME @@; C=COL-1; PUT @C @@;\n      IF \u00acLAST.SEGMENT THEN PUT ',' @@;\n      RETURN;\nHH:   PUT // 8*'1234567890' /; RETURN;\n*------------------- DO THE CROSS REFERENCE ------------------*;\nDATA ESDD; SET ESDS; IF TYPE='SD' THEN SD=NAME;\n                     IF TYPE='PR' THEN SD=' ';\n                     RETAIN;\nPROC SORT DATA=ESDD OUT=ESDD; BY ESDID;\n*ROC PRINT DATA=RLD;\nDATA RLD; SET RLD; IF RLDTYPE='V';\n    IF PESDID*RESDID;\nPROC SORT DATA=RLD OUT=RLDP; BY PESDID;\nDATA RLDP;\n     MERGE ESDD (KEEP=ESDID NAME SEGMENT\n        RENAME=(ESDID=PESDID NAME=PNAME SEGMENT=PSEGMENT))\n      RLDP (IN=R); BY PESDID; IF R THEN OUTPUT;\n*ROC PRINT DATA=RLDP;\nPROC SORT DATA=RLDP OUT=RLDR; BY RESDID;\nDATA RLDR;\n   MERGE ESDD (KEEP=ESDID NAME SEGMENT SD\n         RENAME=(ESDID=RESDID NAME=RNAME SEGMENT=RSEGMENT))\n      RLDR(IN=R) ; BY RESDID; IF R THEN OUTPUT;\n*ROC PRINT DATA=RLDR;\n*ROC PRINT DATA=ESDD;\nPROC SORT OUT=RLDR1; BY RSEGMENT SD PSEGMENT PNAME;\n*ROC PRINT DATA=RLDR1;\nDATA _NULL_; SET; BY RSEGMENT SD PSEGMENT PNAME;\n    IF \u00acFIRST.PNAME THEN RETURN;\n    FILE PRINT COLUMN=COL HEADER=H;\n    IF FIRST.SD THEN PUT / SD $8. RSEGMENT 3. +2 @;\n    IF COL>122 THEN PUT / @14 @;\n    PUT +1 PNAME $8. PSEGMENT 3. +1 @;  RETURN;\nH:  PUT 'CSECT   SEG' / 'WAS CALLED BY' 9*' CSECT   SEG ' /; RETURN;\n    TITLE CROSS REFERENCE BY CALLEE;\nPROC SORT DATA=RLDR1; BY PSEGMENT PNAME RSEGMENT SD;\nDATA _NULL_; SET; BY PSEGMENT PNAME RSEGMENT SD;\n  IF \u00acFIRST.SD THEN RETURN;\n  FILE PRINT COLUMN=COL HEADER=H;\n  IF FIRST.PNAME THEN PUT / PNAME $8. PSEGMENT 3. +2 @;\n  IF COL>122 THEN PUT  / @14 @;\n  PUT +1 SD $8. RSEGMENT 3. +1 @; RETURN;\nH: PUT 'CSECT   SEG' / 'DOES CALLS TO' 9*' CSECT   SEG '/; RETURN;\nTITLE CROSS REFERENCE BY CALLER;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSCOMP": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x08/\\x00\\x93\\x08/\\x10V\\x00`\\x00`\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-23T00:00:00", "modifydate": "1993-03-23T10:56:00", "lines": 96, "newlines": 96, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMP JOB EDPCSBS1,'PDS2',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//        EXEC EDSAS607,OPTIONS='NODATE LINESIZE=80)'\n//PDS1    DD DSN=EDS1.PROD.MXG99.USERMOD.SOURCLIB,DISP=SHR,DCB=DSORG=PS\n//PDS2    DD DSN=EDS1.PROD.MXG99.SOURCLIB,DISP=SHR,DCB=DSORG=PS\n//T1      DD DSN=&&TEMP,UNIT=3380,SPACE=(CYL,(2,2,9)),DISP=(NEW,PASS),\n//           DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=9040)\n//SYSIN   DD *\nDATA DIR1 (KEEP = MEMBER SIZE ALIAS N1);\nLENGTH N1 $ 44;\nLENGTH Y1 $ 44;\n   INFILE PDS1 RECFM=U  BLKSIZE=256 LRECL=256 FILENAME=Y1; COL=3;\n   N1=Y1;\n   INPUT COUNT PIB2. @;  IF COUNT < 14 THEN STOP;\n\n   DO WHILE (COL < COUNT);\n      INPUT @COL MEMBER $8. TT PIB2. R PIB1. IND PIB1. @;\n      IF MEMBER>'99999999' THEN STOP;\n      ALIAS=' '; IF IND > 128 THEN ALIAS='*';\n      SSICOL=COL+34; SSI='     ';\n      ATTRIB=.; SIZE=.;\n      COL = COL +12 + 2*MOD(IND,32);\n      IF MOD(INT(IND/32),4) NE 0 THEN DO;\n         INPUT +8 ATTRIB PIB2. SIZE PIB3. @;\n         IF MOD(INT(ATTRIB/977 ),2) THEN SSICOL=SSICOL+8;\n         IF ALIAS='*' | INT(ATTRIB/16384) THEN SSICOL=SSICOL+11;\n         IF SSICOL<COL-2 THEN INPUT @SSICOL SSI $CHAR4. @;\n      END;\n    HSIZ = SIZE;\n    OUTPUT;\n   END;\nDROP COUNT IND COL SSICOL;\nRETURN;\nDATA DIR2 (KEEP = MEMBER SIZE ALIAS N2);\nLENGTH N2 $ 44;\nLENGTH Y2 $ 44;\n   INFILE PDS2 RECFM=U  BLKSIZE=256 LRECL=256 FILENAME=Y2; COL=3;\n   N2=Y2;\n   INPUT COUNT PIB2. @;  IF COUNT < 14 THEN STOP;\n\n   DO WHILE (COL < COUNT);\n      INPUT @COL MEMBER $8. TT PIB2. R PIB1. IND PIB1. @;\n      IF MEMBER>'99999999' THEN STOP;\n      ALIAS=' '; IF IND > 128 THEN ALIAS='*';\n      SSICOL=COL+34; SSI='     ';\n      ATTRIB=.; SIZE=.;\n      COL = COL +12 + 2*MOD(IND,32);\n      IF MOD(INT(IND/32),4) NE 0 THEN DO;\n         INPUT +8 ATTRIB PIB2. SIZE PIB3. @;\n         IF MOD(INT(ATTRIB/977 ),2) THEN SSICOL=SSICOL+8;\n         IF ALIAS='*' | INT(ATTRIB/16384) THEN SSICOL=SSICOL+11;\n         IF SSICOL<COL-2 THEN INPUT @SSICOL SSI $CHAR4. @;\n      END;\n    HSIZ = SIZE;\n    OUTPUT;\n   END;\nDROP COUNT IND COL SSICOL;\nRETURN;\n*ORMAT ATTRIB HEX4. SSI $HEX8.;\n*ROC PRINT; *ITLE MEMBERS IN LIBRARY IN ALPABETICAL ORDER;\nPROC SORT DATA=DIR1; BY MEMBER;\nPROC SORT DATA=DIR2; BY MEMBER;\nDATA A (KEEP=MEMBER ALIAS) B (KEEP=MEMBER ALIAS)\n     C (KEEP=MEMBER ALIAS N1 N2);\nMERGE DIR1(IN=S1) DIR2(IN=S2); BY MEMBER;\nIF S1 AND NOT S2 THEN OUTPUT A;\nIF S2 AND NOT S1 THEN OUTPUT B;\nIF S1 AND S2 THEN OUTPUT C;\nRETURN;\nPROC PRINT DATA=A;\nTITLE 'NEW MEMBERS';\nPROC PRINT DATA=B;\nTITLE 'DELETED MEMBERS';\n*ROC PRINT DATA=C;\n*ITLE 'SAME MEMBERS';\nDATA;\nSET C;\nIF ALIAS = '*' THEN DELETE;\nFILE T1(WRK);\nPUT +2 'IEBCOM' +1 MEMBER $CHAR8. ' ,';\nPUT +2  N1 ' ,';\nPUT +2  N2;\nRETURN;\n//*\n//   EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=&&TEMP(WRK)\n//SYSIN DD *\n//*\n//TSO      EXEC  PGM=IKJEFT01,DYNAMNBR=40,PARM='WRK'\n//SYSTSPRT DD SYSOUT=*\n//SYSEXEC  DD DISP=(OLD,DELETE),DSN=&&TEMP\n//         DD DISP=SHR,DSN=ED115DM.PROD.REXX\n//SYSTSIN  DD DUMMY\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS1": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x84\"\\x9f\\x00\\x97!\\x7f\\x101\\x00\\x13\\x00\\x0e\\x00\\x0b\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1984-08-16T00:00:00", "modifydate": "1997-08-05T10:31:00", "lines": 19, "newlines": 14, "modlines": 11, "user": "ED115DM"}, "text": "//C4SYSDMR JOB EDPCSBS1,'PDS1',MSGCLASS=X,CLASS=0,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS609,OPTIONS='NODATE LINESIZE=80 HSWORK'\n//PDS     DD DSN=ED115DM.PZ,DISP=SHR,DCB=DSORG=PS\n//SYSIN   DD *\nDATA DIRECTRY;\n   INFILE PDS RECFM=F  LRECL=256 BLKSIZE=256; COL=3;\n   *ILE OREC;\n   INPUT COUNT PIB2. @;  IF COUNT < 14 THEN STOP;\n   *UT _INFILE_;\n   DO WHILE (COL < COUNT);\n      INPUT @COL MEMBER $8. +3 IND PIB1. @;\n      COL = COL +12 + 2*MOD(IND,32);\n      OUTPUT;\n           PUT MEMBER $CHAR8. ;\n   END;\nRETURN;\nPROC SORT;   BY  MEMBER;\nPROC PRINT;  VAR MEMBER;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASMF4": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x84$\\x0f\\x00\\x861\\x1f\\x13\\x02\\x00*\\x00*\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1984-08-27T00:00:00", "modifydate": "1986-11-07T13:02:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//SMFTAPE DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SASMF4;\n  DATA STEPS;\n  KEEP TYPE TIMEOUT JOBNAME JOBSTART TIMEIN CCODE PROGNAME CPUTIME\n       PAGEIN PAGEOUT ELAPSED HOUR;\n  INFILE SMFTAPE;\n  INPUT @1 SMFXXLEN PIB2. SMFXXSEG PIB2.\n           SMFXXFLG PIB1. TYPE PIB1. TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  IF TYPE = 4;\n  INPUT JOBNAME  $CHAR8.     JOBSTART  SMFSTAMP8.   SMF04UIF $CHAR8.\n        SMF04STN PIB1.\n        TIMEIN   SMFSTAMP8.  SMF04NCI  PIB4.        CCODE    PIB2.\n        SMF4PRTY PIB1.       PROGNAME  $CHAR8.      SMF4STMN $CHAR8.\n        SMF4RSH0 PIB2.       SMF4SYST  PIB2.        SMF4HOST PIB2.\n        SMF4RV1  PIB6.       SMF4SPK   PIB1.        SMF4STI  PIB1.\n        SMF4RV2  PIB2.       SMF4AST   PIB4.        SMF4PPST PIB4.\n        SMF4RV3  PIB1.       SMF4SRBT  PIB3.        SMF4RIN  PIB2.\n        COLREL   PIB2.       DEVLEN    PIB2. @;\n N = (DEVLEN -2)/8;\n        INPUT @107+DEVLEN SMF4LNTH PIB1.  @;\n   IF SMF4LNTH > 0 THEN DO;\n        INPUT      CPUTIME  PIB3.2 SMF4NAF PIB1.  @;\n   END;\n        OFF = COLREL   +5 ;\nINPUT @OFF PAGEIN   PIB4.    PAGEOUT  PIB4. @ ;\nELAPSED = TIMEOUT - TIMEIN;\nHOUR = MOD(INT(TIMEOUT/3600),24);\nFORMAT JOBSTART TIMEOUT TIMEIN DATETIME. ELAPSED TIME. ;\nFORMAT CCODE HEX4.;\n\nPROC PRINT DATA=STEPS;\nPROC CHART;\n      HBAR PROGNAME;\n      HBAR PROGNAME / SUMVAR=CPUTIME;\n      HBAR CCODE / DISCRETE;\n      VBAR ELAPSED;\n      VBAR HOUR/SUMVAR=CPUTIME DISCRETE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASMF4#2": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x84$\\x0f\\x00\\x88\\x13?\\x12P\\x00>\\x001\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1984-08-27T00:00:00", "modifydate": "1988-05-12T12:50:00", "lines": 62, "newlines": 49, "modlines": 0, "user": "C4SYSDM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=0,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN3,DISP=SHR\n//SYSIN   DD *\nTITLE 'SASMF4#2';\n  DATA STEPS (\n  KEEP=JOBNAME JOBSTART TIMEOUT TIMEIN CCODE PROGNAME CPUTIME\n       PAGEIN PAGEOUT ELAPSED EXCPTOT)\n  DATA DEV   (\n  KEEP=JOBNAME JOBSTART DEVCLASS UNITTYPE CHANADDR EXCPS) ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER VSAM;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  * PUT    TIMEOUT DATETIME. +1 SMFXXSID $CHAR4. +1 SMFXXRTY;\n  IF SMFXXRTY = 4;\n  INPUT JOBNAME  $CHAR8.     JOBSTART  SMFSTAMP8.   SMF04UIF $CHAR8.\n        SMF04STN PIB1.\n        TIMEIN   SMFSTAMP8.  SMF04NCI  PIB4.        CCODE    PIB2.\n        SMF4PRTY PIB1.       PROGNAME  $CHAR8.      SMF4STMN $CHAR8.\n        SMF4RSH0 PIB2.       SMF4SYST  PIB2.        SMF4HOST PIB2.\n        SMF4RV1  PIB6.       SMF4SPK   PIB1.        SMF4STI  PIB1.\n        SMF4RV2  PIB2.       SMF4AST   PIB4.        SMF4PPST PIB4.\n        SMF4RV3  PIB1.       SMF4SRBT  PIB3.        SMF4RIN  PIB2.\n        COLREL   PIB2.       DEVLEN    PIB2. @;\n        INPUT  @107+DEVLEN SMF4LNTH PIB1.  @;\n   IF SMF4LNTH > 0 THEN DO;\n        INPUT      CPUTIME  PIB3.2 SMF4NAF PIB1.  @;\n   END;\n        OFF = COLREL   +5 ;\nINPUT @OFF PAGEIN   PIB4.    PAGEOUT  PIB4. @ ;\nELAPSED = TIMEOUT - TIMEIN;\n\n*------ LOOP THRU DEVICES USED --------;\n NDEV = (DEVLEN -2)/8;  EXCPTOT=0;\n INPUT @109 @;\n DO I=1 TO NDEV;\n   INPUT DEVCLASS PIB1.  UNITTYPE PIB1.\n         CHANADDR PIB2.  EXCPS    PIB4. @;\n   EXCPTOT+EXCPS;\n   IF EXCPS>0 THEN OUTPUT DEV;\n END;\n OUTPUT STEPS;\n\nFORMAT JOBSTART TIMEOUT TIMEIN DATETIME. ELAPSED TIME. ;\nFORMAT CCODE HEX4. CHANADDR HEX4. ;\n\nPROC PRINT DATA=DEV;\nPROC PRINT DATA=STEPS;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASMF45": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x84$\\x0f\\x00\\x861\\x0f\\tD\\x00O\\x00O\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1984-08-27T00:00:00", "modifydate": "1986-11-06T09:44:00", "lines": 79, "newlines": 79, "modlines": 0, "user": "C4SYSDM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//SMFTAPE DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE ----- SELECTING MULTIPLE RECORDS --------;\n  DATA STEPS (\n  KEEP= TIMEOUT TIMEIN CCODE PROGNAME CPUTIME ELAPSED\n        JOBNAME JOBSTART)\n  DATA JOBS  (\n  KEEP=TERMTIME JOBNAME JOBSTART NSTEPS STTIME JOBCC JOBPRTY JOBCLASS\n       RDETIME JOBTERM JOBCPUS PGMRNAME JOBCPUT READTIME WAITTIME\n       RUNTIME);\n  INFILE SMFTAPE;\n  INPUT @1 SMFXXLEN PIB2. SMFXXSEG PIB2.\n           SMFXXFLG PIB1. TYPE PIB1.\n                         @;\n\n*-----TYPE 4 RECORDS ------;\n  IF TYPE = 4 THEN DO;\n  INPUT TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4.\n        JOBNAME  $CHAR8.     JOBSTART  SMFSTAMP8.   SMF04UIF $CHAR8.\n        SMF04STN PIB1.\n        TIMEIN   SMFSTAMP8.  SMF04NCI  PIB4.        CCODE    PIB2.\n        SMF4PRTY PIB1.       PROGNAME  $CHAR8.      SMF4STMN $CHAR8.\n        SMF4RSH0 PIB2.       SMF4SYST  PIB2.        SMF4HOST PIB2.\n        SMF4RV1  PIB6.       SMF4SPK   PIB1.        SMF4STI  PIB1.\n        SMF4RV2  PIB2.       SMF4AST   PIB4.        SMF4PPST PIB4.\n        SMF4RV3  PIB1.       SMF4SRBT  PIB3.        SMF4RIN  PIB2.\n        COLREL   PIB2.       DEVLEN    PIB2. @;\n        INPUT  @107+DEVLEN SMF4LNTH PIB1.  @;\n   IF SMF4LNTH > 0 THEN DO;\n        INPUT      CPUTIME  PIB3.2 SMF4NAF PIB1.  @;\n   END;\n        OFF = COLREL   +5 ;\nINPUT @OFF PAGEIN   PIB4.    PAGEOUT  PIB4. @ ;\nELAPSED = TIMEOUT - TIMEIN;\nFORMAT JOBSTART TIMEOUT TIMEIN DATETIME. ELAPSED TIME. ;\nFORMAT CCODE HEX4. ;\n OUTPUT STEPS;\nEND;\n\n*-----TYPE 5 RECORDS ------;\n  IF TYPE = 5 THEN DO;\n  INPUT TERMTIME SMFSTAMP8.\n        SMFXXSID $CHAR4.\n        JOBNAME  $CHAR8.     JOBSTART  SMFSTAMP8.   SMF05UIF $CHAR8.\n        NSTEPS   PIB1.       STTIME    SMFSTAMP8.   SMF05NCI PIB4.\n        JOBCC    PIB2.       JOBPRTY   PIB1.        RDETIME  SMFSTAMP8.\n        JOBTERM  PIB1.       SMF5SMCI  PIB1.        SMF5TRAN PIB4.\n        SMF5CKRE PIB1.       SMF5RDCL  PIB1.        SMF5RUTY PIB1.\n        JOBCLASS $CHAR1.     SMF5SPK   PIB1.        JOBCPUS  PIB3.2\n        SMF5TJS  PIB4.       SMF5TTAT  PIB4.        SMF5RV2  PIB4.\n        SMF5PGNO PIB2.       SMF5RV3   PIB2.        SMF5TLEN PIB1.\n        PGMRNAME $CHAR20.    JOBCPUT   PIB3.2       SMF5ACTF PIB1.\n                 @;\n READTIME = RDETIME - JOBSTART;\n WAITTIME =  STTIME - RDETIME ;\n  RUNTIME = TERMTIME- STTIME ;\n OUTPUT JOBS;\nEND;\n\nFORMAT TERMTIME JOBSTART STTIME RDETIME DATETIME.\n       READTIME WAITTIME RUNTIME TIME. ;\n\nPROC PRINT DATA=JOBS(OBS=100);\n           TITLE3 TYPE 5 DATA --- JOB TERMINATION;\nPROC CHART DATA=JOBS;\n           HBAR JOBCLASS;\n           HBAR JOBPRTY /DISCRETE;\nPROC PRINT DATA=STEPS(OBS=100);\n           TITLE3 TYPE 4 DATA --- STEP TERMINATION;\nPROC SORT DATA=JOBS; BY JOBNAME JOBSTART;\nPROC SORT DATA=STEPS; BY JOBNAME JOBSTART;\nDATA JOBSTEP;\n     MERGE JOBS STEPS; BY JOBNAME JOBSTART;\nPROC PRINT DATA=JOBSTEP(OBS=200);\n           TITLE3 MERGED TYPE TYPE 4 DATA AND TYPE 5 DATA;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASVTOC": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x84#o\\x00\\x86\"\\x9f\\x10\\x16\\x00\\xb4\\x00\\xb1\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1984-08-23T00:00:00", "modifydate": "1986-08-17T10:16:00", "lines": 180, "newlines": 177, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMV JOB EDPCSBS1,'SASVTOC',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SASV5,OPTIONS=NODATE\n//VTOC    DD DSN=VTOC,UNIT=DISK,VOL=SER=C48030,DISP=SHR\n//SYSIN   DD *\n*-------------------------------- MAPDISK ----------------------------*\n|  THIS CODE READS IN THE DSCBS OF THE VTOC AND PRODUCES A LISTING    |\n|  OF ALL DATA SETS WITH THEIR ATTRIBUTES AND ALLOCATION DATA.        |\n|                                                                     |\n|  A VTOC DD STATEMENT SHOULD BE IN THE JCL LIKE:                     |\n|     //VTOC DD DSN=VTOC,VOL=SER=THISVOL,UNIT=DISK,DISP=SHR           |\n|                                                                     |\n*---------------------------------------------------------------------*\n|                                                                     |\n| THE CCHHR OPTION ON THE INFILE STATEMENT BRINGS IN THE COUNT        |\n| FIELD AS WELL AS THE KEY AND DATA IN THE RECORD.  THIS IS WHY       |\n| OFFSETS ARE 5 MORE THAN INDICATED IN THE SYSTEMS CONTROL BLOCKS.    |\n|                                                                     |\n| THE DATA SET SERIAL NUMBER AT TUCC IS USED TO STORE THE USAGE       |\n| COUNT AND DATE OF LAST USE.                                         |\n|                                                                     |\n|  DATA SETS WITH MORE THAN 3 EXTENTS HAVE EXTENSION DSCVS.           |\n|  FORMAT 1 AND FORMAT 2 DSCBS THAT POINT TO FORMAT 3 DSCBS ARE OUTPUT|\n|  TO SEPARATE DATASETS SO THAT THEY CAN BE MERGED TO FIND OUT        |\n|  ALL THE ALLOCATION DATA.                                           |\n|                                                                     |\n*---------------------------------------------------------------------*;\n\nDATA DSN(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n              EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n              LRECL SECALOC TT R TRACKS VOLSER)\n     FREE(KEEP=LOC CYL TRACK TOTAL RECN TRKCYL)\n     FMT1(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT\n      EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE\n      LRECL SECALOC TT R TRACKS CCHHR VOLSER)\n     FMT2(KEEP=CCHHR TOCCHHR)\n     FMT3(KEEP=CCHHR ALLOC3);  LENGTH DEFAULT=4;\n\n*--------------------- READ DSCB AND DETERMINE WHICH FORMAT --------*;\nINFILE VTOC CVAF CCHHR COLUMN=COL;\nINPUT @50 DSCBTYPE ?1. @;\n     IF DSCBTYPE=1 THEN GOTO FORMAT1;\nELSE IF DSCBTYPE=2 THEN GOTO FORMAT2;\nELSE IF DSCBTYPE=3 THEN GOTO FORMAT3;\nELSE IF DSCBTYPE=5 THEN GOTO FORMAT5;\nELSE IF DSCBTYPE=4 THEN INPUT @70 TRKCYL PIB2. ;\nELSE IF DSCBTYPE=. THEN NULL+1; _ERROR_=0;\n     IF NULL>500 THEN STOP; RETURN;\nRETAIN TRKCYL;\n\nFORMAT1:                                 *-- REGULAR DCB TYPE --*;\n  INPUT DSNAME $6-49.\n        @81 YU PIB1.  DAYU PIB2.  COUNT PIB2.  IND PIB1.\n        @59 YC PIB1.  DAYC PIB2.\n            YE PIB1.  DAYE PIB2.\n         EXTENTS PIB1. @88 DSORG PIB1. @90 RECFM0 PIB1.\n         @92 BLKSIZE PIB2. LRECL PIB2. KEYLENG PIB1.\n         @100 ALO PIB1. SECALOC PIB3. TT PIB2. R PIB1. @ ;\n\nIF YC>0 THEN CREATED=DATEJUL(1000*YC+DAYC);\nIF YE>0 THEN EXPIRES=DATEJUL(1000*YE+DAYE);\nIF YU>0 THEN LASTUSE=DATEJUL(1000*YU+DAYU);\nFORMAT CREATED EXPIRES LASTUSE DATE7.;\n*--------------- COUNT AND LAST USE ARE TUCC SPECIALS ----------;\nIF NOT (IND=0 | IND=64) THEN COUNT=.;\nIF NOT (IND=0 | IND=64) THEN LASTUSE=.;\n*--------- DSORG RECODING ----------; DSORG1='  ';\nIF MOD(INT(DSORG/2),2) THEN DSORG1='PO';\nIF DSORG>=32 THEN DSORG1='DA'; IF DSORG>=64 THEN DSORG1='PS';\nIF DSORG>=128 THEN DSORG1='IS';\n*---------- RECFM RECODING ------------;\nRECFM1=' '; Z=INT(RECFM0/64);\nIF Z=1 THEN RECFM1='V'; IF Z=2 THEN RECFM1='F';\nIF Z=3 THEN RECFM1='U';\nRECFM2=' '; IF MOD(INT(RECFM0/16),2) THEN RECFM2='B';\nRECFM3=' '; IF MOD(INT(RECFM0/4),2) THEN RECFM3='A';\nRECFM4=' '; IF MOD(INT(RECFM0/8),2) THEN RECFM4='S';\n\n*---------- ALLOC TYPE RECODING -------------;\nALOC='   '; Z=INT(ALO/64);     IF Z=1 THEN ALOC='BLK';\nIF Z=2 THEN ALOC='TRK';        IF Z=3 THEN ALOC='CYL';\n*---------- ALLOCATED SPACE ---------; INPUT @111@;\nTRACKS=0; DO I=1 TO 3; LINK EXL; END;\nIF EXTENTS>3 THEN DO;  INPUT CCHHR $5. ;\n    OUTPUT FMT1;\n    END;\n ELSE\n OUTPUT DSN;\nRETURN;\n\n*------- ROUTINES TO COLLECT EXTENT INFORMATION --------*;\nEXL:   INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;\n       IF IND=0 THEN RETURN;\n       TRACKS+  TRKCYL  *(CCHI-CCLO)+HHHI-HHLO+1;\n       RETURN;\n\nFORMAT2:                                 *----- ISAM DSCB -------*;\n       INPUT @1 CCHHR $CHAR5. @141 TOCCHHR $CHAR5.\n                              @141 Z IB5. ;\n       IF Z\u00ac=0 THEN OUTPUT FMT2; RETURN;\n\nFORMAT3:  TRACKS=0;                       *----- CONTINUATION DSCB --*;\n       INPUT @1 CCHHR $CHAR5. @10@;\n       DO I=1 TO 13;\n         IF I=5 THEN INPUT +1 @;\n         LINK EXL;\n         IF IND<=0 THEN I=13;\n         END;\n       ALLOC3=TRACKS; OUTPUT FMT3; RETURN;\n       FORMAT CCHHR $HEX10.;\n\nFORMAT5: INPUT @10@; RECN+1;          *----- FREE SPACE EXTENTS ----*;\nEXT:  INPUT LOC PIB2. CYL PIB2. TRACK PIB1. @ ;\n      IF LOC=0 THEN RETURN; IF COL=50 THEN INPUT +1@;\n      TOTAL=TRKCYL*CYL+TRACK;\n      OUTPUT FREE;\n      IF COL<140 THEN GOTO EXT;\n  RETURN;\n\nPROC PRINT DATA=FREE; TITLE3 FREE SPACE EXTENTS;\n\nPROC SORT DATA=DSN; BY DSNAME;\n*----- COMBINE FMT1 AND FMT2 TO GET REFERENCE TO FMT3 -----*;\nPROC SORT DATA=FMT1; BY CCHHR;\nPROC SORT DATA=FMT2; BY CCHHR;\nDATA FMT1;\n     MERGE FMT1(IN=I1) FMT2(IN=I2); BY CCHHR;\n     IF I2 THEN CCHHR=TOCCHHR;\n     IF I1;   DROP TOCCHHR;     RUN;\n*------- COMBINE NEW FMT1 WITH FMT3 TO GET REST OF ALLOCATION INFO --*;\nPROC SORT DATA=FMT1; BY CCHHR;\nPROC SORT DATA=FMT3; BY CCHHR;\nDATA FMT1;  MERGE FMT1(IN=I1) FMT3; BY CCHHR;\n     IF I1; TRACKS=TRACKS+ALLOC3;  RUN;\n*------ COMBINE FMT1 WITH DSN DATASETS (INTERLEAVE)------*;\nPROC SORT DATA=FMT1; BY DSNAME;\nDATA DSN; SET DSN FMT1; BY DSNAME;\nRUN;\n\n*------- WRITE THE REPORTS FOR THE VOLUME ----------*;\nTITLE3 ALPHABETICAL LISTING OF DATA SETS AND THEIR ATTRIBUTES;\nDATA _NULL_; SET DSN END=EOF; FILE PRINT HEADER=H; M=-1;\n     PUT DSNAME $44. +1 DSORG1 $2. +2\n      (RECFM1-RECFM4) (:$1.+M)\n      @55 (LRECL BLKSIZE) (5. +1) +1\n     (CREATED EXPIRES LASTUSE) (DATE7.+1) +1\n     COUNT 5. +2 ALOC $3.+1 SECALOC 4. +2\n     EXTENTS 5.+1 TRACKS 6. TT 5. R 4.;\n     TOTAL+TRACKS;\n     IF EOF THEN PUT // 'TOTAL NUMBER OF DATASETS =' _N_\n                      / 'TOTAL NUMBER OF TRACKS   =' TOTAL;\n     RETURN;\n\nH:   PUT 'VOL=SER=' VOLSER $6.;\n     PUT / 'DATA SET NAME'\n     @43 'DSORG RECFM LRECL BLKSZ CREATED EXPIRES LASTUSE '\n     ' USES SECONDARY'\n     @108 'EXTENTS TRACKS   TT---R' /; RETURN; RUN;\n\n*---- WRITE MISCELLANEOUS REPORTS ACCORDING TO YOUR DESIRES -----*;\nPROC SORT DATA=DSN OUT=TRKS; BY DESCENDING TRACKS;\nPROC PRINT DATA=TRKS(OBS=40);\n   VAR TRACKS DSNAME DSORG1 EXTENTS TT R COUNT;\n   TITLE3 THE FORTY LARGEST DATA SETS ON THIS PACK;\nDATA NONUSE; SET TRKS(OBS=500); UNUSED=TRACKS-TT-1;\n   IF UNUSED=. THEN DELETE;\nPROC SORT DATA=NONUSE; BY DESCENDING UNUSED;\nPROC PRINT DATA=NONUSE(OBS=40);\n   VAR UNUSED DSNAME DSORG1 TRACKS TT R EXTENTS COUNT;\n   TITLE3 THE FORTY DATA SETS WITH THE MOST UNUSED SPACE (APPROX);\nPROC SORT DATA=DSN; BY DESCENDING COUNT;\nPROC PRINT DATA=DSN(OBS=40);\n   VAR COUNT DSNAME DSORG1 CREATED LASTUSE TRACKS;\n   TITLE3 THE FORTY MOST USED DATASETS;\nPROC SORT DATA=DSN; BY LASTUSE;\nDATA DISUSE; SET DSN; IF LASTUSE>.; N+1;\n   OUTPUT; IF N>=40 THEN STOP;\nPROC PRINT;\n   VAR LASTUSE DSNAME DSORG1 CREATED COUNT TRACKS;\n   TITLE3 THE FORTY LEAST RECENTLY USED DATASETS;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAS4PGM": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x85%\\x9f\\x00\\x85&\\x0f\\x16%\\x00;\\x00&\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1985-09-16T00:00:00", "modifydate": "1985-09-17T16:25:00", "lines": 59, "newlines": 38, "modlines": 0, "user": "C4SYSDM"}, "text": "//E0115DMS JOB EDPCSBS1,'PGM',MSGCLASS=X,CLASS=A,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//SMFTAPE DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//        DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//SYSIN   DD *\nTITLE SASMF4;\n  DATA STEPS;\n  KEEP TYPE TIMEOUT JOBNAME PROGNAME CPUTIME ;\n  INFILE SMFTAPE;\n  INPUT @1\n           SMFXXFLG PIB1. TYPE PIB1. TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  IF TYPE = 4;\n  INPUT JOBNAME  $CHAR8.     JOBSTART  SMFSTAMP8.   SMF04UIF $CHAR8.\n        SMF04STN PIB1.\n        TIMEIN   SMFSTAMP8.  SMF04NCI  PIB4.        CCODE    PIB2.\n        SMF4PRTY PIB1.       PROGNAME  $CHAR8.      SMF4STMN $CHAR8.\n        SMF4RSH0 PIB2.       SMF4SYST  PIB2.        SMF4HOST PIB2.\n        SMF4RV1  PIB6.       SMF4SPK   PIB1.        SMF4STI  PIB1.\n        SMF4RV2  PIB2.       SMF4AST   PIB4.        SMF4PPST PIB4.\n        SMF4RV3  PIB1.       SMF4SRBT  PIB3.        SMF4RIN  PIB2.\n        COLREL   PIB2.       DEVLEN    PIB2. @;\n N = (DEVLEN -2)/8;\n        INPUT @107+DEVLEN SMF4LNTH PIB1.  @;\n   IF SMF4LNTH > 0 THEN DO;\n        INPUT      CPUTIME  PIB3.2 SMF4NAF PIB1.  @;\n   END;\n        OFF = COLREL   +5 ;\nINPUT @OFF PAGEIN   PIB4.    PAGEOUT  PIB4. @ ;\nELAPSED = TIMEOUT - TIMEIN;\nHOUR = MOD(INT(TIMEOUT/3600),24);\nFORMAT TIMEOUT DATETIME. ;\n\nPROC SORT  DATA=STEPS; BY PROGNAME JOBNAME ;\nDATA FRED (KEEP = PGM JBN C    );\nRETAIN JBN '       ';\nRETAIN PGM '        ';\nRETAIN C 0;\nSET ;\nCJOB = SUBSTR(JOBNAME,1,7);\nIF          (CJOB = JBN) THEN DO;\n                          C+1;\n                          DELETE;\n                          END;\nIF          _N_ = 1       THEN DO;\n                          C+1;\n                          JBN = CJOB;\n                          PGM = PROGNAME ;\n                          DELETE;\n                          END;\nOUTPUT;\nJBN = CJOB;\nPGM = PROGNAME ;\nC = 1;\nDELETE;\nPROC PRINT;\nPROC CHART;\n      HBAR PGM;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x86\\x12/\\x00\\x91\\x05\\x0f\\x16\\x07\\x00-\\x00\\x10\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1986-05-02T00:00:00", "modifydate": "1991-02-19T16:07:00", "lines": 45, "newlines": 16, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=3,NOTIFY=ED115DM\n//*\n//  EXEC SAS606\n//DATLIB DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN DD *\nDATA SMF25 (KEEP =\n       SMF25JBN         SMF25RST       SMF25RSD      SMF25UIF\n       SMF25IND             SMF25NTF\n       SMF25NDF             SMF25FST\n       SMF25FSD             SMF25SST\n       SMF25SSD             SMF25NTM\n       SMF25NDM             SMF25MST\n       SMF25MSD             SMF25VVT\n       SMF25VVD             SMF25NMV\n                  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 25;\n INPUT SMF25JBN $CHAR8. SMF25RST PIB4. SMF25RSD PD4. SMF25UIF $CHAR8. @;\n INPUT SMF25IND PIB2.       SMF25NTF PIB4.\n       SMF25NDF PIB4.       SMF25FST PIB4.\n       SMF25FSD PD4.        SMF25SST PIB4.\n       SMF25SSD PD4.        SMF25NTM PIB4.\n       SMF25NDM PIB4.       SMF25MST PIB4.\n       SMF25MSD PD4.        SMF25VVT PIB4.\n       SMF25VVD PD4.        SMF25NMV PIB4.\n       ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFCNT": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x84#o\\x00\\x98\\x00_\\x11P\\x00k\\x00\\x10\\x00\\x00\\xc3\\xf4\\xc1\\xc4\\xd4\\xc4\\xd4@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1984-08-23T00:00:00", "modifydate": "1998-01-05T11:50:00", "lines": 107, "newlines": 16, "modlines": 0, "user": "C4ADMDM"}, "text": "//C4SYSDM@ JOB C4ADM000,'SMFCNT',MSGCLASS=X,CLASS=A,NOTIFY=C4ADMDM\n//*\n//SAS    EXEC   SAS609,OPTIONS='NODATE'\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD,\n//*  UNIT=CART,VOL=SER=610381\n//DATLIB  DD DSN=T1H1.PROD.SMFDUMPW.HOLD,DISP=OLD,\n//   UNIT=CART,VOL=SER=906555,LABEL=EXPDT=98000\n//*ATLIB  DD DSN=EDO4.TEST.BB.IMAGC4#3.CPMOUT2,DISP=OLD\n//*UNIT=DISK,VOL=SER=C48021\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW.TEST,DISP=OLD,\n//*  UNIT=CART,VOL=SER=(611415,611552)\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD,\n//*       DCB=(BUFNO=255)\n//*ATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFHIST.JUL95.COPY1,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.RMFMAY95,DISP=OLD\n//*LAY     DD DISP=(NEW,DELETE),UNIT=VIO,SPACE=(CYL,(5,5))\n//*        DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA)\n//SYSIN   DD *\nTITLE SMF REC COUNT;\n  DATA CONTER (KEEP = X1-X255 TOT)\n       DDAT (KEEP = LTME TME DTE RECS)\n  ;\n  ARRAY XC(I) X1-X255;\n  RETAIN X1-X255;\n  RETAIN DTE 0;\n  RETAIN TME 0;\n  RETAIN LTME 0;\n  RETAIN DDTE 0;\n  RETAIN TTTE 0;\n  RETAIN NN 0;\n  RETAIN RECS 0;\n  RETAIN V;\n  INFILE DATLIB      JFCB=JF EOF=OU;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V='Y'; ELSE V='N';\n                  END;\n  IF V='Y' THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    DATTIM SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  I=SMFXXRTY;\n  IF I=0 THEN I=129;\n  XC +1;\n  NN +1;\n  LTME = TTTE;\n  DDTE = DATEPART(DATTIM);\n  TTTE = TIMEPART(DATTIM);\n  IF NN  = 1 THEN DO; TME = TTTE; LTME = TTTE; DTE = DDTE; END;\n  IF DTE \u00ac= DDTE   THEN DO;\n                        OUTPUT DDAT;\n                        RECS = 0;\n                        * DTE AND TME ARE FIRST DATE AND TIME;\n                        * LTME IS LAST TIME FOR PREV DATE;\n                        DTE = DDTE ;\n                        TME = TTTE ;\n                        END;\n  RECS +1;\n  DELETE;\nOU:\n                        N_RECS + RECS;\n                        OUTPUT DDAT;\n                        RECS = 0;\n                        DTE = DDTE ;\n                        TME = TTTE ;\n  TOT=0;\n  DO OVER XC; TOT+XC; END;\n  OUTPUT CONTER;\n  STOP;\n  PROC PRINT DATA=CONTER;\n  PROC SORT DATA=DDAT; BY DTE TME;\n  DATA;\n  DROP RECS TME LTME;\n  RETAIN N_RECS 0;\n  RETAIN R_CNT  0;\n  RETAIN FIRSTIME 0;\n  RETAIN LASTTIME 0;\n  SET; BY DTE TME;\n  IF FIRST.DTE THEN DO;\n                    R_CNT =0;\n                    FIRSTIME = 86400;\n                    LASTTIME = 0;\n                    END;\n  R_CNT+1;\n  IF TME < FIRSTIME THEN FIRSTIME = TME;\n  IF LTME > LASTTIME THEN LASTTIME = LTME;\n  IF LAST.DTE THEN DO;\n                   N_RECS + RECS;\n                   OUTPUT;\n                   N_RECS = 0;\n                   END; ELSE\n                   DO;\n                   N_RECS + RECS;\n                   END;\n  DELETE;\n  PROC PRINT;\n  FORMAT DTE DATE.;\n  FORMAT FIRSTIME TIME11.3;\n  FORMAT LASTTIME TIME11.3;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFCPYD": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x861_\\x00\\x92\\x16?\\x11A\\x00\\x11\\x00\\x0f\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1986-11-11T00:00:00", "modifydate": "1992-06-11T11:41:00", "lines": 17, "newlines": 15, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM# JOB EDPCSBS1,'SMFDMP',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS    EXEC SAS,OPTIONS='NODATE'\n//DATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD,\n//  UNIT=(CART,,DEFER),\n//  VOL=SER=(605382,605012)\n//DATOUT  DD DSN=EDH1.PROD.SMFDUMPW,DISP=(NEW,CATLG),\n//  UNIT=(CART,,DEFER),DCB=(EDH1.PROD.SMFDUMPW.MODDSCB),\n//  LABEL=RETPD=65,VOL=(,RETAIN,,10)\n//SYSIN   DD *\nTITLE SMF BLK CPY;\nDATA _NULL_;\n  INFILE DATLIB;\n    FILE DATOUT;\n  INPUT ;\n  PUT _INFILE_;\nRETURN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFXTR": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01>\\x00\\x00\\x00\\x843_\\x00\\x99\\x05?\\tA\\x00\\x1f\\x00\\x11\\x00\\x00\\xe7\\xe2\\xc4\\xd4\\xd5@@@@@'", "ispf": {"version": "01.62", "flags": 0, "createdate": "1984-11-30T00:00:00", "modifydate": "1999-02-22T09:41:00", "lines": 31, "newlines": 17, "modlines": 0, "user": "XSDMN"}, "text": "//XSDMNDMX JOB MSGCLASS=X,CLASS=A,NOTIFY=XSDMN\n//*\n//SAS     EXEC   SAS609,OPTIONS=NODATE\n//DATLIB  DD DSN=SMFDUMP.D99046,DISP=SHR\n//OUTLIB  DD DSN=XSDMN.SMFDUMPW,DISP=OLD\n//*UTLIB  DD SYSOUT=*\n//SYSIN   DD *\nTITLE SMF EXTRACT;\n  DATA _NULL_;\n  RETAIN V SLNO 74 ;\n  INFILE DATLIB JFCB=JF START=S;\n    FILE OUTLIB;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY  = SLNO;\n    S=V+1;\n  * IF DATEPART(TIMEOUT) > '23JAN90'D;\n    PUT   _INFILE_;\nRETURN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF0": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x84 \\x1f\\x00\\x85(\\x7f\\x15\\x00\\x00\\x13\\x00\\x0b\\x00\\r\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1984-07-19T00:00:00", "modifydate": "1985-10-14T15:00:00", "lines": 19, "newlines": 11, "modlines": 13, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF0',MSGCLASS=X,CLASS=A,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//        DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 1;\n  DATA;\n  V=0;   * 0 NVSAM 4 VSAM;\n  INFILE DATLIB;\n  INPUT @1+V SMFXXFLG PIB1.    SMFXXRTY PIB1.    TIMEOUT SMFSTAMP8. @;\n  IF SMFXXRTY = 0;\n  INPUT\n        SMFXXSID $CHAR4.     SMF0JWT PIB4.     SMF0BUF PIB4.\n            SMF0VST PIB4.     SMF0OPT PIB1.     SMF0RST PIB4.;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF10": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x84\"/\\x00\\x90&?\\tT\\x00&\\x00\\x18\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1984-08-09T00:00:00", "modifydate": "1990-09-20T09:54:00", "lines": 38, "newlines": 24, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 10;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 10;\n  INPUT SMF10JBN $CHAR8. SMF10RST PIB4. SMF10RSD PD4.\n        SMF10JIF $CHAR8.\n          @ ;\n  INPUT SMF10LN PIB2. @ ;\n  N = (SMF10LN -2)/ 4;\n  PUT SMFXXRTY TIMEOUT SMFXXSID SMF10JBN SMF10RST SMF10RSD SMF10JIF\n                               SMF10LN\n            ;\n  IF N = 0 THEN RETURN;\n  DO I = 0 TO (N -1) ;\n   INPUT SMF10AD1 PIB1. SMF10AD2 PIB1. SMF10AD3 PIB1. SMF10AD4 PIB1.\n   @ ;\n   PUT SMF10AD1 SMF10AD2 SMF10AD3 SMF10AD4 HEX2.;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF11": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x84\"/\\x00\\x90&?\\x10H\\x00\"\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-08-09T00:00:00", "modifydate": "1990-09-20T10:48:00", "lines": 34, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 11;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 11;\n  INPUT SMF11LN PIB2. @ ;\n  N = (SMF11LN -2)/ 4;\n  PUT SMFXXRTY TIMEOUT DATETIME. SMFXXSID @19 SMF11LN @25 N\n            ;\n  IF N = 0 THEN RETURN;\n  DO I = 0 TO (N -1) ;\n   INPUT SMF11AD1 PIB1. SMF11AD2 PIB1. SMF11AD3 PIB1. SMF11AD4 PIB1.\n   @ ;\n   PUT SMF11AD1 SMF11AD2 SMF11AD3 SMF11AD4 HEX2.;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF129": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x05/\\x00\\x91\\x05/\\x14%\\x00\\x01\\x00\\x01\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1991-02-21T14:25:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "ED115DM"}, "text": "DON'T KNOW WHAT THIS IS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415": {"ttr": 1047, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x93$?\\x00\\x98)_\\x08\\x14\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-08-31T00:00:00", "modifydate": "1998-10-22T08:14:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "C4SYSDM"}, "text": "//ED115DMH JOB C4SYS000,MSGCLASS=X,CLASS=J,REGION=4M,NOTIFY=C4SYSDM\n//*MAIN PROC=C4\n// EXEC EDMXGSAS\n//*MF    DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//SMF    DD DISP=SHR,DSN=C4SYSDM.C4MS.SMF700A(0)\n//PDB    DD DISP=OLD,DSN=C4SYSDM.SAS.WORK\n//SYSIN DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(TYPE1415)\n//      DD *\nPROC APPEND BASE=PDB.TYPE1415 DATA=TYPE1415;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415A": {"ttr": 1049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93%/\\x00\\x95\\x12\\x9f\\x15\\x17\\x00\\x16\\x00\\x0b\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-09-09T00:00:00", "modifydate": "1995-05-09T15:17:00", "lines": 22, "newlines": 11, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMH JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDMXGSAS\n//SMF    DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//SMD    DD DISP=OLD,DSN=EDH1.PROD.DISASTER\n//SYSIN DD DISP=SHR,DSN=EDS1.PROD.MXG1111.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=EDS1.PROD.MXG1111.SOURCLIB(TYPE1415)\n//      DD *\nDATA SMD.DS (KEEP = DDNAME DISP DSNAME DSORG JOB);\nSET;\nIF DISP = 'NEW' THEN DELETE;\nIF SUBSTR(DSNAME,1,5) = 'SYS94' THEN DELETE;\nIF SUBSTR(DSNAME,1,9) = 'EDH2.HMIG' THEN DELETE;\nIF SUBSTR(VOLSER,1,2) = 'C4';\nI = INDEX(DSNAME,'.');\nIF I < 6\nOR SUBSTR(DSNAME,1,8) = 'CATINDEX'\nOR SUBSTR(DSNAME,1,6) = 'EDBBOP'\n;\nRETURN;\nPROC SORT NODUP; BY JOB DSNAME;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415B": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93%o\\x00\\x93%o\\x12(\\x00\\x08\\x00\\x08\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-13T00:00:00", "modifydate": "1993-09-13T12:28:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n//*\n//  EXEC EDSAS607\n//PK   DD DISP=OLD,DSN=EDH1.PROD.PACK.DB\n//LIBRARY DD DISP=SHR,DSN=EDS1.PROD.FMTS1010\n//SYSIN DD *\nPROC SORT OUT=FRED DATA=PK.DS; BY DESCENDING EXCPCNT;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415X": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x19\\x9f\\x00\\x975o\\x083\\x00\\x10\\x00\\x12\\x00\\x00\\xc3\\xf4\\xc1\\xc4\\xd4\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-07-18T00:00:00", "modifydate": "1997-12-22T08:33:00", "lines": 16, "newlines": 18, "modlines": 0, "user": "C4ADMDM"}, "text": "//ED115DMH JOB C4ADM000,MSGCLASS=X,CLASS=A,REGION=4M,NOTIFY=C4ADMDM\n//*MAIN PROC=C4\n// EXEC EDMXGSAS\n//SMF    DD DSN=T1H1.PROD.SMFDUMPW.HOLD,DISP=OLD,\n//  UNIT=CART,VOL=SER=907087,\n//  LABEL=EXPDT=98000\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//SMD    DD DISP=OLD,DSN=C4ADMDM.WORK.MDF\n//SYSIN DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(TYPE1415)\n//      DD *\nDATA SMD.DS (KEEP = DDNAME DISP DSNAME DSORG JOB);\nSET;\nRETURN;\nPROC SORT NODUP; BY DSNAME JOB;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415Y": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x94\\x19\\x9f\\x00\\x94 \\x0f\\tV\\x00|\\x00\\x0c\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-07-18T00:00:00", "modifydate": "1994-07-19T09:56:00", "lines": 124, "newlines": 12, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMQ JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDSAS607\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//SMD    DD DISP=OLD,DSN=EDH1.PROD.DISASTER\n//PK     DD DISP=OLD,DSN=EDH1.PROD.PACK.DB\n//SYSIN DD *\nDATA Y (KEEP = DSNAME TRACKS);\nSET PK.MRGDSN;\nRETURN;\nPROC SORT; BY DSNAME;\n*;\nDATA X;\nSET  SMD.DS;\nIF JOB = 'ACF2'\nOR JOB = 'C4C1D0X7'\nOR JOB = 'C4C1T0X7'\nOR JOB = 'C4C1T0X5'\nOR JOB = 'C4C1P0X7'\nOR JOB = 'C4C1P0X5'\nOR JOB = 'C4JARS'\nOR JOB = 'EDADAD'\nOR JOB = 'EDADAP'\nOR JOB = 'EDADAT'\nOR JOB = 'EDBBCS'\nOR JOB = 'EDBBVTM'\nOR JOB = 'EDCICSM'\nOR JOB = 'EDCSMON'\nOR JOB = 'EDDSDISP'\nOR JOB = 'EDFTP'\nOR JOB = 'EDGATE'\nOR JOB = 'EDIDLOG'\nOR JOB = 'EDMVSPAS'\nOR JOB = 'EDNET'\nOR JOB = 'EDNF'\nOR JOB = 'EDNM'\nOR JOB = 'EDNMAILP'\nOR JOB = 'EDOMS'\nOR JOB = 'EDPDBRC'\nOR JOB = 'EDPDLS'\nOR JOB = 'EDPIMSCR'\nOR JOB = 'EDPIMSR1'\nOR JOB = 'EDPIMSR2'\nOR JOB = 'EDPIMSR3'\nOR JOB = 'EDPORT'\nOR JOB = 'EDROSC'\nOR JOB = 'EDSNALNK'\nOR JOB = 'EDS9'\nOR JOB = 'EDTCPIP'\nOR JOB = 'EDVPS'\nOR JOB = 'LLA'\nOR JOB = 'JES3'\nOR JOB = 'JES3CI'\nOR JOB = 'JES3WTR'\nOR JOB = 'JES3WTR2'\nOR JOB = 'MSTJCL00'\n;\nIF SUBSTR(DSNAME,1,8) = 'UNKNOWN ' THEN DO;\nSUBSTR(DSNAME,1,8) = JOB;\nSUBSTR(DSNAME,11,8) = DDNAME;\nSUBSTR(DSNAME,19,4) = ' CAT';\n                                        END;\nIF JOB = 'EDROSC' AND SUBSTR(DDNAME,1,5) = 'ROS00' THEN DELETE;\nIF JOB = 'EDBBVTM' AND DDNAME = 'USERLIB'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDO4.PROD.BB.BBLOAD';\nIF JOB = 'EDCICSM' AND DDNAME = 'BBIPARM'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDJ1.INST.V33.BBPARM';\nIF JOB = 'EDNM'     AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAST.EXEC.COMMS';\nIF JOB = 'EDNMAILP' AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAIL.EXEC.COMMS';\nIF JOB = 'EDNM'     AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    3') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAST.EXEC';\nIF JOB = 'EDNMAILP' AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    3') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAIL.EXEC.MAIL';\nIF JOB = 'EDNM'     AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    4') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAST.EXEC.USER';\nIF JOB = 'EDNMAILP' AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    4') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAST.EXEC';\nIF JOB = 'EDNMAILP' AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    5') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAIL.EXEC.USER.OLDFORMS';\nIF JOB = 'EDNMAILP' AND DDNAME = 'COMMANDS'\nAND INDEX(DSNAME,'BPAM    6') \u00ac= 0 THEN\nDSNAME = 'EDV1.PROD.NMAIL.EXEC.USER';\nIF JOB = 'EDOMS' AND DDNAME = 'JCLMASTR'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDEP.TEST.SCHEDULE';\nIF JOB = 'EDOMS' AND DDNAME = 'JCLMASTR'\nAND INDEX(DSNAME,'BPAM    3') \u00ac= 0 THEN\nDSNAME = 'EDED.PROD.SCHEDULE';\nIF JOB = 'EDOMS' AND DDNAME = 'JCLMASTR'\nAND INDEX(DSNAME,'BPAM    4') \u00ac= 0 THEN\nDSNAME = 'EDED.TEST.SCHEDULE';\nIF JOB = 'EDOMS' AND DDNAME = 'JCLMASTR'\nAND INDEX(DSNAME,'BPAM    5') \u00ac= 0 THEN\nDSNAME = 'EDSL.PROD.SCHD.SCHDJCL';\nIF JOB = 'EDPORT' AND DDNAME = 'STEPLIB'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDT1.PROD.V2R2M1.SIBMLINK';\nIF JOB = 'EDPORT' AND DDNAME = 'STEPLIB'\nAND INDEX(DSNAME,'BPAM    3') \u00ac= 0 THEN\nDSNAME = 'EDT1.PROD.V1R2M0.SEDCLINK';\nIF JOB = 'EDS9' AND DDNAME = 'STEPLIB'\nAND INDEX(DSNAME,'BPAM    2') \u00ac= 0 THEN\nDSNAME = 'EDDI.PROD.CAILIB';\nIF JOB = 'EDS9' AND DDNAME = 'STEPLIB'\nAND INDEX(DSNAME,'BPAM    3') \u00ac= 0 THEN\nDSNAME = 'EDL1.TEST.CAILIB';\nRETURN;\nPROC SORT; BY DSNAME JOB;\nDATA;\nSET; BY DSNAME;\nIF FIRST.DSNAME;\nRETURN;\nPROC SORT; BY DSNAME;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF1415Z": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x19\\x9f\\x00\\x94\\x19\\x9f\\x14\\x13\\x00\\n\\x00\\n\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-07-18T00:00:00", "modifydate": "1994-07-18T14:13:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMQ JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDSAS607\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//SMD    DD DISP=OLD,DSN=EDH1.PROD.DISASTER\n//SYSIN DD *\nDATA X (KEEP = JOB);\nSET  SMD.DS;\nRETURN;\nPROC SORT NODUP; BY JOB;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF15": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x85\"\\x8f\\x00\\x97#\\x1f\\x15&\\x00O\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1985-08-16T00:00:00", "modifydate": "1997-08-19T15:26:00", "lines": 79, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS609,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*       DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 1415';\n  DATA  HDR (KEEP =\n        SMF15JBN          SMF15RST        SMF15RSD\n        SMF15UID          SMF15RIN        SMF15SDC\n        SMF15NUC          SMF15SUC        SMF15SET\n        SMF15OPE )\n        TIOT (KEEP =\n        SMFTIOE1          SMFTIOE2        SMFTIOE3\n        SMFTIOE4          SMFTIOE5         SMFTIOE6\n        SMFTIOE7 )\n        JFCB (KEEP =\n        JFCBDSNM              JFCBELNM\n        JFCBTSDM              JFCBDSCB\n        JFCFCBID              JFCBFRID\n        JFCRBIDO              JFCAMCRO\n        JFCAMSTR              JFCBADFO\n        JFCNLREC              JFCBTDSI\n        )\n        DCBDEB (KEEP =\n        SMFDCBOR         SMFDCBRF         SMFDCBMF\n        SMFDCBFL         SMFDCBOP         SMF15RV2\n        SMFDEBFL         SMFDEBOP         SMFDEBVL )\n        ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 14\n  OR SMFXXRTY = 15;\n  INPUT SMF15JBN $CHAR8.  SMF15RST PIB4.  SMF15RSD PD4.\n        SMF15UID $CHAR8.  SMF15RIN PIB2.  SMF15SDC PIB1.\n        SMF15NUC PIB1.    SMF15SUC PIB1.  SMF15SET PIB1.\n        SMF15OPE PIB4. @;\n  OUTPUT HDR;\n  INPUT SMFTIOE1 PIB1.    SMFTIOE2 PIB1.  SMFTIOE3 PIB1.\n        SMFTIOE4 PIB1.    SMFTIOE5 $CHAR8. SMFTIOE6 PIB3.\n        SMFTIOE7 PIB1.\n        @ ;\n  OUTPUT TIOT;\n  INPUT JFCBDSNM $CHAR44.     JFCBELNM $CHAR8.\n        JFCBTSDM PIB1.        JFCBDSCB $CHAR3.\n        JFCFCBID $CHAR4.      JFCBFRID $CHAR4.\n        JFCRBIDO $CHAR4.      JFCAMCRO PIB2.\n        JFCAMSTR PIB2.        JFCBADFO PIB2.\n        JFCNLREC PIB2.        JFCBTDSI PIB2.\n        OTHER $98.\n  @ ;\n  OUTPUT JFCB;\n  INPUT SMFDCBOR PIB2.   SMFDCBRF PIB1.   SMFDCBMF PIB2.\n        SMFDCBFL PIB1.   SMFDCBOP PIB1.   SMF15RV2 PIB1.\n        SMFDEBFL PIB1.   SMFDEBOP PIB1.   SMFDEBVL PIB2.\n        @ ;\nOUTPUT DCBDEB;\n*I=INDEX(SMFJFCB1,'PSPB'); *IF I=0 THEN DELETE;\n*F SMF14RIN = '..0.....' THEN DO;         *TAPE;\nRETURN;\nPROC PRINT DATA=HDR;\nPROC PRINT DATA=TIOT;\nPROC PRINT DATA=JFCB;\nPROC PRINT DATA=DCBDEB;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF15ALL": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x86\\x03\\x7f\\x00\\x90&?\\x08V\\x002\\x00!\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1986-02-06T00:00:00", "modifydate": "1990-09-20T08:56:00", "lines": 50, "newlines": 33, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC VSAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMF1285,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFHIST(0),DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMF0885,DISP=SHR\n//*       DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 15;\n  DATA W (KEEP = TIMEOUT SMF15JBN JFCB1)\n  ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 15;\n  INPUT SMF15JBN $CHAR8.  SMF15RST PIB4.  SMF15RSD PD4.\n        SMF15UID $CHAR8.  SMF15RIN PIB2.  SMF15SDC PIB1.\n        SMF15NUC PIB1.    SMF15SUC PIB1.  SMF15SET PIB1.\n        SMF15OPN PIB4. @;\n  INPUT SMFTIOE1 PIB1.    SMFTIOE2 PIB1.  SMFTIOE3 PIB1.\n        SMFTIOE4 PIB1.    SMFTIOE5 $CHAR8. SMFTIOE6 PIB1.\n        SMFTIOE7 PIB1.\n        @ ;\n  INPUT SMFJFCB1 $176. @ ;\n  INPUT SMFDCBOR PIB2.   SMFDCBRF PIB1.   SMFDCBMF PIB2.\n        SMFDCBFL PIB1.   SMFDCBOP PIB1.   SMF15RV2 PIB1.\n        SMFDEBFL PIB1.   SMFDEBOP PIB1.   SMFDEBVL PIB2.\n        @ ;\nJFCB1 = SUBSTR(SMFJFCB1,1,44);\nTIM = TIMEPART(TIMEOUT);\nIF TIM     > '00:00'T;\nIF TIM     < '23:59'T;\nIF SMF15JBN = 'C4C1P0X7';\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF15DS": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x853/\\x00\\x90&?\\t&\\x00.\\x00$\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1985-11-28T00:00:00", "modifydate": "1990-09-20T09:26:00", "lines": 46, "newlines": 36, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC VSAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 15;\n  DATA W (KEEP = TIMEOUT SMF15JBN SMFJFCB1)\n  ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 14;\n  INPUT SMF15JBN $CHAR8.  SMF15RST PIB4.  SMF15RSD PD4.\n        SMF15UID $CHAR8.  SMF15RIN PIB2.  SMF15SDC PIB1.\n        SMF15NUC PIB1.    SMF15SUC PIB1.  SMF15SET PIB1.\n        SMF15OPN PIB4. @;\n  INPUT SMFTIOE1 PIB1.    SMFTIOE2 PIB1.  SMFTIOE3 PIB1.\n        SMFTIOE4 PIB1.    SMFTIOE5 $CHAR8. SMFTIOE6 PIB1.\n        SMFTIOE7 PIB1.\n        @ ;\n  INPUT SMFJFCB1 $176. @ ;\n  INPUT SMFDCBOR PIB2.   SMFDCBRF PIB1.   SMFDCBMF PIB2.\n        SMFDCBFL PIB1.   SMFDCBOP PIB1.   SMF15RV2 PIB1.\n        SMFDEBFL PIB1.   SMFDEBOP PIB1.   SMFDEBVL PIB2.\n        @ ;\nFRED1 = 'SYS1.MAN1';\nI1=INDEX(SMFJFCB1,FRED1);\nIF I1 \u00ac= 0 ;\n*F SMF14RIN = '..0.....' THEN DO;         *TAPE;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF15WHO": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x97#\\x1f\\x00\\x97#\\x1f\\x15'\\x007\\x007\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1997-08-19T00:00:00", "modifydate": "1997-08-19T15:27:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS609,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*       DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 1415';\n  DATA  WHO (KEEP =\n        SMF15JBN\n        JFCBDSNM              JFCBELNM\n        )\n        ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 14\n  OR SMFXXRTY = 15;\n  INPUT SMF15JBN $CHAR8.  SMF15RST PIB4.  SMF15RSD PD4.\n        SMF15UID $CHAR8.  SMF15RIN PIB2.  SMF15SDC PIB1.\n        SMF15NUC PIB1.    SMF15SUC PIB1.  SMF15SET PIB1.\n        SMF15OPE PIB4. @;\n  INPUT SMFTIOE1 PIB1.    SMFTIOE2 PIB1.  SMFTIOE3 PIB1.\n        SMFTIOE4 PIB1.    SMFTIOE5 $CHAR8. SMFTIOE6 PIB3.\n        SMFTIOE7 PIB1.\n        @ ;\n  INPUT JFCBDSNM $CHAR44.     JFCBELNM $CHAR8.\n        JFCBTSDM PIB1.        JFCBDSCB $CHAR3.\n        JFCFCBID $CHAR4.      JFCBFRID $CHAR4.\n        JFCRBIDO $CHAR4.      JFCAMCRO PIB2.\n        JFCAMSTR PIB2.        JFCBADFO PIB2.\n        JFCNLREC PIB2.        JFCBTDSI PIB2.\n        OTHER $98.\n  @ ;\n  INPUT SMFDCBOR PIB2.   SMFDCBRF PIB1.   SMFDCBMF PIB2.\n        SMFDCBFL PIB1.   SMFDCBOP PIB1.   SMF15RV2 PIB1.\n        SMFDEBFL PIB1.   SMFDEBOP PIB1.   SMFDEBVL PIB2.\n        @ ;\nOUTPUT WHO;\nRETURN;\nPROC SORT; BY SMF15JBN;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF17": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00\\x00\\x00\\x85\\t?\\x00\\x94(o\\x12R\\x00#\\x00\\x1b\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "1985-04-03T00:00:00", "modifydate": "1994-10-13T12:52:00", "lines": 35, "newlines": 27, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SCRD',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 17;\n  DATA _NULL_;\n  IF _N_ = 1 THEN DO;\n                  PUT _PAGE_;\n                  PUT '****** SMF 17 ******';\n                  PUT 'SCRATCH DATASET STATUS';\n                  PUT;\n                  END;\n  V=0;    *0 NVSAM, 4 VSAM;\n  INFILE DATLIB MISSOVER LENGTH=LEN;\n  INPUT @1+V SMFXXFLG PIB1.  SMFXXRTY PIB1.    DATTIM SMFSTAMP8.\n        SMFXXSID $CHAR4. @ ;\n  IF SMFXXRTY = 17;\n    PUT @1  DATTIM DATETIME. @;\nINPUT SMF17JBN $CHAR8.  SMF17RS SMFSTAMP8.    SMF17UID $CHAR8.\n      SMF17RIN PIB2.    SMF17DSN $CHAR44.     SMF17RV1 PIB3.\n      SMF17NVL PIB1. @;\n  PUT +1 SMF17JBN $8.  +1 SMF17RS DATETIME.   +1 SMF17UID $8.\n                       +1 SMF17DSN $44.\n                       +1 SMF17NVL 6. @;\nDO I=0 TO (SMF17NVL-1);\n   INPUT SMF17RV2 PIB2. @;\n   INPUT SMF17FVL $CHAR6. @;\n   PUT +2 SMF17FVL $6. @;\nEND;\nPUT;\nDELETE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF17DS": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x87\\x02\\x0f\\x00\\x94(o\\x11V\\x00$\\x00#\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1987-01-20T00:00:00", "modifydate": "1994-10-13T11:56:00", "lines": 36, "newlines": 35, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SCRD',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFHIST.NOV86.COPY1,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY.COPY1,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 17;\n  DATA _NULL_;\n  IF _N_ = 1 THEN DO;\n                  PUT _PAGE_;\n                  PUT '****** SMF 17 ******';\n                  PUT 'SCRATCH DATASET STATUS';\n                  PUT;\n                  END;\n  V=0;    *0 NVSAM, 4 VSAM;\n  INFILE DATLIB MISSOVER LENGTH=LEN;\n  INPUT @1+V SMFXXFLG PIB1.  SMFXXRTY PIB1.    DATTIM SMFSTAMP8.\n        SMFXXSID $CHAR4. @ ;\n  IF SMFXXRTY = 17;\n    PUT @1  DATTIM DATETIME. @;\nINPUT SMF17JBN $CHAR8.  SMF17RS SMFSTAMP8.    SMF17UID $CHAR8.\n      SMF17RIN PIB2.    SMF17DSN $CHAR44.     SMF17RV1 PIB3.\n      SMF17NVL PIB1. @;\n  PUT +1 SMF17JBN $8.  +1 SMF17RS DATETIME.   +1 SMF17UID $8.\n                       +1 SMF17DSN $44.\n                       +1 SMF17NVL 6. @;\nDO I=0 TO (SMF17NVL-1);\n   INPUT SMF17RV2 PIB2. @;\n   INPUT SMF17FVL $CHAR6. @;\n   PUT +2 SMF17FVL $6. @;\nEND;\nPUT;\nDELETE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF18": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x85\\t\\x1f\\x00\\x93\\x16_\\x10$\\x00.\\x00\\x10\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1985-04-01T00:00:00", "modifydate": "1993-06-14T10:24:00", "lines": 46, "newlines": 16, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'REND',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*       DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFHIST.JUN93.COPY1,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//*       DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 18;\n  DATA _NULL_;\n  IF _N_=1 THEN DO;\n                PUT _PAGE_;\n                PUT '****** SMF 18 ******';\n                PUT 'RENAME DATASET STATUS';\n                PUT;\n                END;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER LENGTH=LEN;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 18;\nPUT @1 TIMEOUT DATETIME. @;\nINPUT SMF18JBN $CHAR8.   SMF18RS SMFSTAMP8.   SMF18UID $CHAR8.\n      SMF18RIN PIB2.     SMF18ODS $CHAR44.    SMF18NDS $CHAR44.\n      SMF18RV1 PIB3.     SMF18NVL PIB1. @;\n  PUT +1 SMF18JBN $8.  +1   SMF18RS DATETIME. +1 SMF18UID $8. ;\n  PUT               SMF18ODS $44. +2 SMF18NDS $44. +9\n                         SMF18NVL 6.     +9 @;\nDO I=0 TO (SMF18NVL-1);\n      INPUT SMF18RV2   PIB2.   SMF18FVL $CHAR6. @;\n        PUT                 +1 SMF18FVL $6.  ;\nEND;\nDELETE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF20": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#o\\x00\\x854\\x7f\\x14R\\x00&\\x00$\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-23T00:00:00", "modifydate": "1985-12-13T14:52:00", "lines": 38, "newlines": 36, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF20',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF  20;\n  DATA SM20 (KEEP =\n           SMFXXFLG       SMFXXRTY       TIMEOUT\n      SMFXXSID\n            SMF20JBN         SMF20DT\n      SMF20UID          SMF20RLO\n      SMF20PGM          SMF20NAF\n           SMF20GRP            SMF20RUD           SMF20TID\n       );\n  V=4; *4 VSAM 0 NVSAM;\n  INFILE DATLIB;\n  INPUT    @1+V\n           SMFXXFLG PIB1. SMFXXRTY PIB1. TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 20 THEN RETURN;\n      INPUT SMF20JBN $CHAR8. SMF20DT SMFSTAMP8.\n      SMF20UID $CHAR8.  SMF20RLO PIB2.\n      SMF20PGM $CHAR20. SMF20NAF PIB1.\n      @ ;\nIF SMF20NAF > 0 THEN\n    DO I=0 TO (SMF20NAF-1);\n    INPUT N PIB1. @;\n    IF N>0 THEN\n    DO J=0 TO (N-1) ;  INPUT ACT $CHAR1. @ ;\n       END;\n    END;\nOFF = SMF20RLO +V-3;\nINPUT @OFF SMF20GRP $CHAR8.    SMF20RUD $CHAR8.   SMF20TID $CHAR8. @;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF20DT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF21": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x84\"/\\x00\\x854\\x7f\\x15\\x19\\x00\\x1e\\x00\\x16\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-08-09T00:00:00", "modifydate": "1985-12-13T15:19:00", "lines": 30, "newlines": 22, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF21',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 21;\n  DATA SM21 (KEEP =\n             SMF21FLG SMFXXRTY   TIMEOUT\n        SMFXXSID\n        SMF21LGH       SMF21VOL         SMF21CA       SMF21UA\n        SMF21UCB       SMF21TR          SMF21TW       SMF21SIO\n        SMF21PR        SMF21PW          SMF21NB       SMF21ERG\n        SMF21CLN       SMF21DEN         SMF21BLS       SMF21RVO\n            );\n  V=4;   * 4 VSAM 0 NVSAM;\n  INFILE DATLIB;\n  INPUT @1+V   SMF21FLG PIB1. SMFXXRTY PIB1. TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @ ;\n  IF SMFXXRTY = 21;\n  INPUT SMF21LGH PIB2. SMF21VOL $CHAR6. SMF21CA PIB1. SMF21UA PIB1.\n        SMF21UCB PIB4. SMF21TR  PIB1.   SMF21TW PIB1. SMF21SIO PIB2.\n        SMF21PR  PIB1. SMF21PW  PIB1.   SMF21NB PIB1. SMF21ERG PIB2.\n        SMF21CLN PIB2. SMF21DEN PIB1.   SMF21BLS PIB2. SMF21RVO PIB2.\n  @ ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF21CA SMF21UA SMF21DEN HEX2.;\nFORMAT SMF21UCB HEX8.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF22": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x84\"\\x9f\\x00\\x961\\x7f\\x15\\x15\\x00K\\x00\\x0f\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1984-08-16T00:00:00", "modifydate": "1996-11-12T15:15:00", "lines": 75, "newlines": 15, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMA JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS609,OPTIONS=NODATE\n//DATLIB  DD DISP=SHR,DSN=EDS1.PROD.SMFDUMPW\n//SYSIN   DD *\nTITLE SMF 22;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 22;\n  INPUT SMF22IND PIB2. SMF22ECT PIB2.\n  @ ;\n    PUT SMFXXRTY +5 TIMEOUT DATETIME.\n    +5 SMFXXSID +5 SMF22IND  +5   SMF22ECT\n    ;\n  INPUT SMF22RV0 PIB1.     SMF22PID PIB1.      SMF22CPN PIB2.\n        SMF22RV1 PIB1.     SMF22CPA PIB1.\n  @ ;\n    PUT SMF22RV0   +5      SMF22PID    +5      SMF22CPN   +5\n        SMF22RV1   +5      SMF22CPA\n    ;\n  INPUT SMF22CSD PIB1.     SMF22CID PIB1.      SMF22CHN PIB2.\n        SMF22CHA PIB1.     SMF22CPD PIB1.\n  @ ;\n    PUT SMF22CSD   +5      SMF22CID   +5       SMF22CHN   +5\n        SMF22CHA   +5      SMF22CPD\n    ;\n  INPUT SMF22RV3 PIB1.     SMF22TID PIB1.      SMF22PGL PIB2.\n        SMF22NPG PIB2.\n  @ ;\n    PUT SMF22RV3   +5      SMF22TID    +5      SMF22PGL   +5\n        SMF22NPG\n    ;\n  INPUT SMF22RV4 PIB1.     SMF22IID PIB1.\n  @ ;\n    PUT SMF22RV4   +5      SMF22IID\n  @ ;\n  INPUT SMF22IN1 PIB1.     SMF22IN2 PIB1.      SMF22IN3 PIB2.\n        SMF22IN4 PIB2.     SMF22IN5 PIB1.      SMF22IN6 PIB1.\n        SMF22IN7 PIB4.     SMF22IN8 PIB4.      SMF22IN9 PIB4.\n        SMF22INA PIB4.     SMF22INB PIB4.      SMF22INC PIB4.\n        SMF22IND PIB4.     SMF22INE PIB3.      SMF22INF PIB1.\n  @ ;\n    PUT SMF22IN1   +5      SMF22IN2    +5      SMF22IN3    +5\n        SMF22IN4   +5      SMF22IN5    +5      SMF22IN6    +5\n        SMF22IN7   +5      SMF22IN8    +5      SMF22IN9    +5\n        SMF22INA   +5      SMF22INB    +5      SMF22INC    +5\n        SMF22IND   +5      SMF22INE    +5      SMF22INF\n    ;\n  INPUT SMF22RV5  PIB1.    SMF22NID  PIB1.     SMF22RVA  PIB1.\n        SMF22NSI  PIB3.\n  @ ;\n    PUT SMF22RV5    +5     SMF22NID    +5      SMF22RVA    +5\n        SMF22NSI\n    ;\n  INPUT SMF22RV6  PIB1.    SMF22FID  PIB1.     SMF22RVB  PIB1.\n        SMF22FSI  PIB3.\n  @ ;\n    PUT SMF22RV6    +5     SMF22FID    +5      SMF22RVB    +5\n        SMF22FSI\n    ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF220": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x91\\x05/\\x00\\x93!\\x0f\\x12T\\x00\\x16\\x00\\x01\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1993-07-29T12:54:00", "lines": 22, "newlines": 1, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMH JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDSAS607\n//SMF    DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//SOURCLIB DD DSN=EDS1.PROD.MXG1010.USERMOD.SOURCLIB,DISP=SHR\n//         DD DSN=EDS1.PROD.MXG1010.SOURCLIB,DISP=SHR\n//LIBRARY  DD DSN=EDS1.PROD.FMTS1010,DISP=SHR\n//SYSIN DD DISP=SHR,DSN=EDS1.PROD.MXG1010.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=EDS1.PROD.MXG1010.SOURCLIB(TYPEHSM)\n//      DD *\nPROC PRINT DATA=HSMDSRST;\nTITLE 'HSMDSRST';\nPROC PRINT DATA=HSMDSRFU;\nTITLE 'HSMDSRFU';\nPROC PRINT DATA=HSMVSRST;\nTITLE 'HSMVSRST';\nPROC PRINT DATA=HSMVSRFU;\nTITLE 'HSMVSRFU';\nPROC PRINT DATA=HSMFSRST;\nTITLE 'HSMFSRST';\nPROC PRINT DATA=HSMFSRTP;\nTITLE 'HSMFSRTP';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF221": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91\\x05/\\x00\\x91\\x13_\\x12Q\\x00*\\x00%\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1991-05-15T12:51:00", "lines": 42, "newlines": 37, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=3,NOTIFY=ED115DM\n//*\n//*    SEE SMF 220\n//*\n//*    DO NOT KNOW WHERE 221 RECORDS COME FROM\n//*    BUT THE FOLLOWING GETS SOME USEFUL DATA FROM THEM.\n//*\n//*    IT WOULD APPEAR THEY ARE TO DO WITH HSM ACTIVITY.\n//*    REQ. MANUALS SH35-0083-2 OR SH19-6737-1\n//*\n//  EXEC SAS606\n//*ATLIB DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN DD *\nDATA SMF221 (KEEP =\n     TIMEOUT JOB OWNER DATASET V1 V2 V3\n                  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER LENGTH=LEN;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 221;\n INPUT @15 JOB $CHAR8.  @31 OWNER $CHAR7.\n       @41 DATASET $CHAR44. @;\n INPUT @85 V1 $CHAR6.  @95 V2 $CHAR6.   @297 V3 $CHAR6. ;\n       ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF223": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x017\\x00\\x00\\x00\\x91\\x05/\\x00\\x91\\x17\\x9f\\x14\\x01\\x01P\\x00\\x01\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.55", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1991-06-28T14:01:00", "lines": 336, "newlines": 1, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMX JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n//*\n// EXEC SAS606,WORK='1000,1000',OPTIONS='LINESIZE=132'\n//*ATLIB DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//DATLIB DD DSN=EDS1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN DD *\nDATA SMF223R (KEEP = TIMEOUT SMFXXSID\n       JSIOPTPC  RECTYPE     RES                  JSIOPTHJ\n       JSIOPTH1              JSIOPTH2             JSIOPTHU\n       JSIOPTR_              JSIOPTCI             JSIOPTSR\n       JSIOPTSI              JSIOPTSQ             JSIOPTRX\n       JSIOPTR0              JSIOPTSK             JSIOPTXF\n       JSIOPTSZ              JSIOPTK2             JSIOPTDV\n       N\n                  )\n     SMFFILE (KEEP = TIMEOUT\n       JSIOPTF_              JSIOPTF0\n       NF                                         N\n                  )\n     SMF223F (KEEP = TIMEOUT\n       JSIOPTFX\n       JSIOPTFR              JSIOPTFW             JSIOPTFF\n       JSIOFIOW              JSIOFOTW             JSIOFIOC\n       JSIOFOTN              JSIOFSTC             JSIOFBFC\n       JSIOFENC              JSIOFGET             JSIOFPUT\n       JSIOFBRS              JSIOFADD             JSIOFDEL\n       JSIOFOTH\n                                                  N\n                  )\n     SMFPRGM (KEEP = TIMEOUT\n       JSIOPTP_              JSIOPTP0\n       NP                                         N\n                  )\n     SMF223P (KEEP = TIMEOUT\n       JSIOPTPX              JSIOPTPU             JSIOPTPB\n       JSIOPTPH              JSIOPTP1             JSIOPTPT\n       JSIOPTPF              JSIOPTZZ             JSIOPTPR\n       JSIOPTPI              JSIOPTPO             JSIOPTPJ\n       JSIOGMPR              JSIOPWTS             JSIOPSUS\n                                                  N\n                  )\n     SMFTERM (KEEP = TIMEOUT\n       JSIOPTT_              JSIOPTT0\n       NT                                         N\n                  )\n     SMF223T (KEEP = TIMEOUT\n       JSIOPTT0              JSIOPTT_             JSIOPTTD\n       JSIOPTTP              JSIOPTTT             JSIOPTTI\n       JSIOPTTO              JSIOPTTR             JSIOPTTW\n       JSIOPTRA              JSIOPTRY             JSIOPTRZ\n       JSIOPTRS                                   JSIOPTRT\n       JSIOPTR2              JSIOPTTN             JSIOPTTA\n       JSIOPTTF              JSIOPTTU             JSIOPTT1\n       JSIOPTRR              JSIOPTRW             JSIOPTRG\n       JSIOPTRP              JSIOPTD1             JSIOPTD2\n       JSIOPTD3              JSIOPTD4             JSIOPTD5\n       JSIOPTD6              JSIOPTD7             JSIOPTD8\n       JSIOPTD9              JSIOPTLU             JSIOPTLN\n       JSIOPTXR\n       JSIOPTCA              JSIOPTCS             JSIOPTRI\n       JSIOPTRO              JSIOPTSP             JSIOPTSO\n       JSIOPTTJ              JSIOPTTK             JSIOPTTY\n       JSIOPTTM              JSIOPTAM             JSIOMXCO\n       JSIONBRG              JSIONDIS             JSIONSUS\n       JSIOSUTM              JSIOTSPA             JSIOTSPM\n       JSIOSTRW              JSIOBUFW             JSIOENWQ\n       JSIOTSF1              JSIOTSFO             JSIOZSCI\n       JSIOZSCO              JSIOOTWT             JSIOOTCT\n       JSIODSWT              JSIODSCT             JSIOFCWT\n       JSIOFCCT              JSIOFOWT             JSIOFOCT\n       JSIOZPWT              JSIOZPCT             JSIOZSWT\n       JSIOZSCT              JSIOTSWT             JSIOTSCT\n       JSIOJCWT              JSIOJCCT             JSIOICCT\n       JSIOSYCT              JSIOENQC             JSIOLICT\n       JSIOLOCT              JSIOXCCT             JSIOBMCT\n       JSIOBICT              JSIOBOCT             JSIOBTCT\n       JSIOTOCT              JSIOTACT             JSIOPANL\n       JSIOUSER              JSIOWTBM             JSIOOPBC\n       JSIOUOWN              JSIOUOWS             JSIOLUNM\n       JSIOSCWT              JSIOSCCT             JSIOPCWT\n       JSIOPCCT              JSIOEQWT             JSIOEQCT\n       JSIOTOWT              JSIOTNCT             JSIOIPWT\n       JSIOIPCT              JSIODLWT             JSIODLCT\n                                                  N\n                  )\n    INTERVAL (KEEP = TIMEOUT\n                EXOPTR1 EXOPTRS\n                EXOPTR2 EXOPTRT\n                EXOPTTU\n                EXELAPSE EXSRBTM EXAPPRA\n                EXAPPCA EXAPPRI EXAPPRO\n                EXKCPRA EXKCPCA EXKCPRI\n                EXKCPRO EXTCPRA EXTCPCA\n                EXTCPRI EXTCPRO EXJCPRA\n                EXJCPCA EXJCPRI EXJCPRO\n                EXSUBRA EXSUBCA EXSUBRI\n                EXSUBRO EXSCPCT\n                  )\n                  ;\n  RETAIN V N 0;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING'; *EOF MARK;\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 223;      * JARS/CICS SMF REC ID; * MAP JSIDS OPT=DS;\n  N+1;\n  *F TIMEPART(TIMEOUT) > '12:45'T;\n INPUT JSIOPTPC $CHAR1.     RECTYPE PIB1.\n       RES $CHAR2.          JSIOPTHJ $CHAR8. @;\n *F JSIOPTHJ = 'C4C1R0X7';\n *F N > 25 THEN STOP;\n INPUT JSIOPTH1 PIB4.        JSIOPTH2 PD4.        JSIOPTHU $CHAR8.\n       JSIOPTR_ PIB2.        JSIOPTCI $CHAR4.     JSIOPTSR PIB1.\n       JSIOPTSI PIB1.        JSIOPTSQ PIB4.       JSIOPTRX $CHAR4.\n       JSIOPTR0 PIB4.        JSIOPTSK PIB3.       JSIOPTXF PIB1.\n       JSIOPTSZ PIB2.        JSIOPTK2 PIB1.       JSIOPTDV PIB4. @;\n       JSIOPTH1 = JSIOPTH1 / 100;\n       JSIOPTDV = JSIOPTDV / 100;\n       OUTPUT SMF223R;\n       IF RECTYPE = 201 THEN DO;            * CHAR I;\n          INPUT\n                EXOPTR1 PD4.\n                EXOPTRS PIB4.\n                EXOPTR2 PD4.\n                EXOPTRT PIB4.\n                EXOPTTU PIB4.\n                EXELAPSE PD8.\n                EXSRBTM  PD8.\n                EXAPPRA  PD8.\n                EXAPPCA  PD8.\n                EXAPPRI  PIB4.\n                EXAPPRO  PIB4.\n                EXKCPRA  PD8.\n                EXKCPCA  PD8.\n                EXKCPRI  PIB4.\n                EXKCPRO  PIB4.\n                EXTCPRA  PD8.\n                EXTCPCA  PD8.\n                EXTCPRI  PIB4.\n                EXTCPRO  PIB4.\n                EXJCPRA  PD8.\n                EXJCPCA  PD8.\n                EXJCPRI  PIB4.\n                EXJCPRO  PIB4.\n                EXSUBRA  PD8.\n                EXSUBCA  PD8.\n                EXSUBRI  PIB4.\n                EXSUBRO  PIB4.\n                EXSCPCT  PIB4.\n                        @;\n       EXOPTRS  = EXOPTRS /100;\n       EXOPTRT  = EXOPTRT /100;\n       EXELAPSE = EXELAPSE /100;\n       EXSRBTM  = EXSRBTM /100;\n       EXAPPRA  = EXAPPRA /100;\n       EXAPPCA  = EXAPPCA /100;\n       EXKCPRA  = EXKCPRA /100;\n       EXKCPCA  = EXKCPCA /100;\n       EXTCPRA  = EXTCPRA /100;\n       EXTCPCA  = EXTCPCA /100;\n       EXJCPRA  = EXJCPRA /100;\n       EXJCPCA  = EXJCPCA /100;\n       EXSUBRA  = EXSUBRA /100;\n       EXSUBCA  = EXSUBCA /100;\n          OUTPUT INTERVAL;\n                             END; ELSE\n                             DO;\nINPUT  JSIOPTF_ PIB2.        JSIOPTF0 PIB2.  @;\n       NF = (JSIOPTF_ - 4) / JSIOPTF0;\n       OUTPUT SMFFILE;\n IF NF > 0 THEN\n DO I = 1 TO NF;\n INPUT JSIOPTFX $CHAR8.\n       JSIOPTFR PIB2.        JSIOPTFW PIB2.       JSIOPTFF PIB4.\n       JSIOFIOW PIB4.        JSIOFOTW PIB4.       JSIOFIOC PIB2.\n       JSIOFOTN PIB2.        JSIOFSTC PIB2.       JSIOFBFC PIB2.\n       JSIOFENC PIB2.        JSIOFGET PIB2.       JSIOFPUT PIB2.\n       JSIOFBRS PIB2.        JSIOFADD PIB2.       JSIOFDEL PIB2.\n       JSIOFOTH PIB2.                        @;\n       JSIOFIOW = JSIOFIOW/10/1024;\n       JSIOFOTW = JSIOFOTW/10/1024;\n       OUTPUT SMF223F;\n END;\nINPUT  JSIOPTP_ PIB2.        JSIOPTP0 PIB2.  @;\n       NP = (JSIOPTP_ - 4) / JSIOPTP0;\n       OUTPUT SMFPRGM;\n IF NP > 0 THEN\n DO I = 1 TO NP;\n INPUT JSIOPTPX $CHAR8.      JSIOPTPU PIB2.       JSIOPTPB PIB2.\n       JSIOPTPH PIB4.        JSIOPTP1 PIB2.       JSIOPTPT PIB4.\n       JSIOPTPF PIB1.        JSIOPTZZ PIB1.       JSIOPTPR PIB4.\n       JSIOPTPI PIB4.        JSIOPTPO PIB4.       JSIOPTPJ PIB4.\n       JSIOGMPR PIB2.        JSIOPWTS PIB2.       JSIOPSUS PIB2. @;\n       JSIOPTPT = JSIOPTPT/10/1024;\n       JSIOPTPR = JSIOPTPR/10/1024;\n       OUTPUT SMF223P;\n END;\n INPUT JSIOPTT_ PIB2.        JSIOPTT0 PIB2.  @;\n       NT = (JSIOPTT_ - 4) / JSIOPTT0;\n       OUTPUT SMFTERM;\n IF NT > 0 THEN\n DO I = 1 TO NT;\n INPUT JSIOPTTD $CHAR4.\n       JSIOPTTP $CHAR3.      JSIOPTTT PD3.        JSIOPTTI PD3.\n       JSIOPTTO PD3.         JSIOPTTR PIB4.       JSIOPTTW PIB4.\n       JSIOPTRA PIB4.        JSIOPTRY PIB4.       JSIOPTRZ PIB4.\n       JSIOPTRS SMFSTAMP8.\n       JSIOPTRT SMFSTAMP8.   JSIOPTTN PIB4.       JSIOPTTA $CHAR4.\n       JSIOPTTF PIB4.        JSIOPTTU PIB2.       JSIOPTT1 PIB2.\n       JSIOPTRR PIB2.        JSIOPTRW PIB2.       JSIOPTRG PIB2.\n       JSIOPTRP PIB2.        JSIOPTD1 PIB2.       JSIOPTD2 PIB2.\n       JSIOPTD3 PIB2.        JSIOPTD4 PIB2.       JSIOPTD5 PIB2.\n       JSIOPTD6 PIB2.        JSIOPTD7 PIB2.       JSIOPTD8 PIB2.\n       JSIOPTD9 PIB2.        JSIOPTLU PIB1.       JSIOPTLN PIB1.\n       JSIOPTXR PIB4.\n       JSIOPTCA PIB4.        JSIOPTCS PIB4.       JSIOPTRI PIB4.\n       JSIOPTRO PIB4.        JSIOPTSP PIB4.       JSIOPTSO PIB4.\n       JSIOPTTJ PIB4.        JSIOPTTK PIB3.       JSIOPTTY PIB1.\n       JSIOPTTM PIB1.        JSIOPTAM PIB1.       JSIOMXCO PIB4.\n       JSIONBRG PIB2.        JSIONDIS PIB2.       JSIONSUS PIB2.\n       JSIOSUTM PIB4.        JSIOTSPA PIB2.       JSIOTSPM PIB2.\n       JSIOSTRW PIB2.        JSIOBUFW PIB2.       JSIOENWQ PIB2.\n       JSIOTSF1 PIB2.        JSIOTSFO PIB2.       JSIOZSCI PIB4.\n       JSIOZSCO PIB4.        JSIOOTWT PIB4.       JSIOOTCT PIB2.\n       JSIODSWT PIB4.        JSIODSCT PIB2.       JSIOFCWT PIB4.\n       JSIOFCCT PIB2.        JSIOFOWT PIB4.       JSIOFOCT PIB2.\n       JSIOZPWT PIB4.        JSIOZPCT PIB2.       JSIOZSWT PIB4.\n       JSIOZSCT PIB2.        JSIOTSWT PIB4.       JSIOTSCT PIB2.\n       JSIOJCWT PIB4.        JSIOJCCT PIB2.       JSIOICCT PIB2.\n       JSIOSYCT PIB2.        JSIOENQC PIB2.       JSIOLICT PIB2.\n       JSIOLOCT PIB2.        JSIOXCCT PIB2.       JSIOBMCT PIB2.\n       JSIOBICT PIB2.        JSIOBOCT PIB2.       JSIOBTCT PIB2.\n       JSIOTOCT PIB2.        JSIOTACT PIB2.       JSIOPANL $CHAR8.\n       JSIOUSER $CHAR16.     JSIOWTBM PIB4.       JSIOOPBC $CHAR8.\n       JSIOUOWN $CHAR16.     JSIOUOWS $CHAR8.     JSIOLUNM $CHAR8.\n       JSIOSCWT PIB4.        JSIOSCCT PIB2.       JSIOPCWT PIB4.\n       JSIOPCCT PIB2.        JSIOEQWT PIB4.       JSIOEQCT PIB2.\n       JSIOTOWT PIB4.        JSIOTNCT PIB2.       JSIOIPWT PIB4.\n       JSIOIPCT PIB2.        JSIODLWT PIB4.       JSIODLCT PIB2.\n       @;\n       JSIOPTRA = JSIOPTRA/10/1024;\n       JSIOPTRY = JSIOPTRY/10/1024;\n       JSIOPTRZ = JSIOPTRZ/10/1024;\n       JSIOPTTN = JSIOPTTN/10/1024;\n       JSIOPTXR = JSIOPTXR/10/1024;\n       JSIOPTCA = JSIOPTCA/10/1024;\n       JSIOPTCS = JSIOPTCS/10/1024;\n       JSIOSUTM = JSIOSUTM/10/1024;\n       JSIOOTWT = JSIOOTWT/10/1024;\n       JSIODSWT = JSIODSWT/10/1024;\n       JSIOZPWT = JSIOZPWT/10/1024;\n       JSIOZSWT = JSIOZSWT/10/1024;\n       JSIOTSWT = JSIOTSWT/10/1024;\n       JSIOJCWT = JSIOJCWT/10/1024;\n       JSIOEQWT = JSIOEQWT/10/1024;\n       JSIOTOWT = JSIOTOWT/10/1024;\n       OUTPUT SMF223T;\n END;\n                             END;\n  * FILE DATOUT; * PUT _INFILE_;\nRETURN;\nPROC PRINT DATA=SMF223R;\nTITLE 'ROOT SEGMENT';\nFORMAT TIMEOUT DATETIME.;\nFORMAT JSIOPTH1 TIME11.2;\nFORMAT JSIOPTDV TIME11.2;\nPROC PRINT DATA=SMFFILE;\nTITLE 'FILE INFO';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SMF223F;\nTITLE 'FILE DATA';\nFORMAT TIMEOUT DATETIME.;\nFORMAT JSIOFIOW TIME11.2;\nFORMAT JSIOFOTW TIME11.2;\nPROC PRINT DATA=SMFPRGM;\nTITLE 'PGM INFO';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SMF223P;\nTITLE 'PGM DATA';\nFORMAT TIMEOUT DATETIME.;\nFORMAT JSIOPTPT TIME11.2;\nFORMAT JSIOPTPR TIME11.2;\nPROC SORT DATA=SMF223T; BY JSIOPTTT;\nPROC PRINT DATA=SMFTERM;\nTITLE 'TERM INFO';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SMF223T;\nTITLE 'TERM DATA';\nFORMAT TIMEOUT DATETIME.;\nFORMAT JSIOPTRA TIME11.2;\nFORMAT JSIOPTRY TIME11.2;\nFORMAT JSIOPTRZ TIME11.2;\nFORMAT JSIOPTRS DATETIME.;\nFORMAT JSIOPTRT DATETIME.;\nFORMAT JSIOPTTN TIME11.2;\nFORMAT JSIOPTXR TIME11.2;\nFORMAT JSIOPTCA TIME11.2;\nFORMAT JSIOPTCS TIME11.2;\nFORMAT JSIOSUTM TIME11.2;\nFORMAT JSIOOTWT TIME11.2;\nFORMAT JSIODSWT TIME11.2;\nFORMAT JSIOZPWT TIME11.2;\nFORMAT JSIOZSWT TIME11.2;\nFORMAT JSIOTSWT TIME11.2;\nFORMAT JSIOJCWT TIME11.2;\nFORMAT JSIOEQWT TIME11.2;\nFORMAT JSIOTOWT TIME11.2;\nPROC PRINT DATA=INTERVAL;\nTITLE 'INTERVAL DATA';\nFORMAT TIMEOUT DATETIME.;\nFORMAT EXOPTRS  TIME11.2;\nFORMAT EXOPTRT  TIME11.2;\nFORMAT EXELAPSE TIME11.2;\nFORMAT EXSRBTM  TIME11.2;\nFORMAT EXAPPRA  TIME11.2;\nFORMAT EXAPPCA  TIME11.2;\nFORMAT EXKCPRA  TIME11.2;\nFORMAT EXKCPCA  TIME11.2;\nFORMAT EXTCPRA  TIME11.2;\nFORMAT EXTCPCA  TIME11.2;\nFORMAT EXJCPRA  TIME11.2;\nFORMAT EXJCPCA  TIME11.2;\nFORMAT EXSUBRA  TIME11.2;\nFORMAT EXSUBCA  TIME11.2;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF23": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&?\\x12H\\x00>\\x001\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-20T12:48:00", "lines": 62, "newlines": 49, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMA JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 23;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 23;\n  INPUT SMF23FIL PIB2.   SMF23POF PIB4. SMF23PLN PIB2.  SMF23PON PIB2.\n        SMF23SOF PIB4.   SMF23SLN PIB2. SMF23SON PIB2.  SMF23ROF PIB4.\n        SMF23RLN PIB2.   SMF23RON PIB2.\n        @;\n  PUT SMFXXRTY TIMEOUT SMFXXSID SMF23FIL\n               SMF23POF SMF23PLN SMF23PON\n               SMF23SOF SMF23SLN SMF23SON\n               SMF23ROF SMF23RLN SMF23RON\n         ;\n   IF SMF23PON > 0 THEN DO;\n      DO I = 0 TO (SMF23PON - 1);\n        OFF = SMF23POF -3 + I*SMF23PLN;\n        INPUT @OFF SMF23TID PIB2. SMF23RVN $CHAR2. SMF23PNM $CHAR8.\n        @ ;\n        PUT SMF23TID +5 SMF23RVN +5 SMF23PNM\n         ;\n      END;\n   END;\n   IF SMF23SON > 0 THEN DO;\n      DO I = 0 TO (SMF23SON - 1);\n        OFF = SMF23SOF -3 + I*SMF23SLN;\n        INPUT @OFF SMF23INT $CHAR6. SMF23RLS $CHAR4.\n        @ ;\n          PUT SMF23INT +5 SMF23RLS\n         ;\n      END;\n   END;\n   IF SMF23RON > 0 THEN DO;\n      DO I = 0 TO (SMF23RON - 1);\n        OFF = SMF23ROF -3 + I*SMF23RLN;\n        INPUT @OFF SMF23BFW PIB4.   SMF23BFQ PIB4.   SMF23SUS PIB4.\n                   SMF23RCW PIB4.\n        @ ;\n          PUT SMF23BFW +5   SMF23BFQ +5   SMF23SUS +5\n                   SMF23RCW\n         ;\n      END;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF230": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x91\\x05/\\x00\\x98\\x15_\\x16\\x06\\x00\\x13\\x00\\x01\\x00\\x00\\xc3\\xf4\\xc1\\xc4\\xd4\\xc4\\xd4@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1998-06-04T16:06:00", "lines": 19, "newlines": 1, "modlines": 0, "user": "C4ADMDM"}, "text": "//ED115DMA JOB C4ADM000,MSGCLASS=X,CLASS=J,REGION=4M,NOTIFY=C4ADMDM\n//*MAIN PROC=C4\n// EXEC EDMXGSAS\n//SMF    DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*MF    DD DSN=SYS1.MAN1,DISP=SHR\n//*MF    DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=SHR\n//SYSIN DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(TYPEACF2)\n//      DD *\nPROC PRINT DATA=ACF2AR;\nPROC PRINT DATA=ACF2CR;\nPROC PRINT DATA=ACF2DR;\nPROC PRINT DATA=ACF2ER;\nPROC PRINT DATA=ACF2JR;\nPROC PRINT DATA=ACF2JRL;\nPROC PRINT DATA=ACF2NRA;\nPROC PRINT DATA=ACF2NRB;\nPROC PRINT DATA=ACF2PR;\nPROC PRINT DATA=ACF2TR;\nPROC PRINT DATA=ACF2VR;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF239": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1c\\x00\\x00\\x00\\x91\\x04/\\x00\\x953\\x8f\\x10Y\\x00-\\x00\\x1c\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.28", "flags": 0, "createdate": "1991-02-11T00:00:00", "modifydate": "1995-12-04T10:59:00", "lines": 45, "newlines": 28, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF239',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS607,OPTIONS='NODATE'\n//*ATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//SYSIN   DD *\n  DATA X239 (KEEP = DATE TI LU US MG TEXT);\n  RETAIN V;\n  INFILE DATLIB MISSOVER JFCB=JF COL=S LENGTH=LEN;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  DATE = DATEPART(TIMEOUT);\n  IF SMFXXRTY = 239;\n  INPUT TI TIME11. @;\n  INPUT LU :$CHAR8. @;\n  INPUT US :$CHAR8. @;\n  INPUT MG :$CHAR8. @;\n  RL = LEN -S +1;\n  INPUT TEXT $VARYING100. RL;\n  RETURN;\n  PROC SORT; BY DATE TI;\n  *ROC PRINT; *D TI;\n  FORMAT DATE DATE.;\n  FORMAT TI   TIME.;\n  PROC SORT; BY LU US;\n  DATA LU (KEEP = LU US);\n  SET; BY LU US;\n  IF FIRST.US THEN\n  IF US \u00ac= '-' THEN\n  IF US \u00ac= 'HAS' THEN\n                   OUTPUT;\n  RETURN;\n  PROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF239TC": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x94'\\x9f\\x00\\x94)\\x9f\\x08G\\x00&\\x00&\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-10-06T00:00:00", "modifydate": "1994-10-26T08:47:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF239',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS607,OPTIONS='NODATE'\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//SYSIN   DD *\n  DATA X239 (KEEP = DATE TI LU US MG TEXT);\n  RETAIN V;\n  INFILE DATLIB MISSOVER JFCB=JF COL=S LENGTH=LEN;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  DATE = DATEPART(TIMEOUT);\n  IF SMFXXRTY = 239;\n  INPUT TI TIME11. @;\n  INPUT LU :$CHAR8. @;\n  INPUT US :$CHAR8. @;\n  INPUT MG :$CHAR8. @;\n  RL = LEN -S +1;\n  INPUT TEXT $VARYING100. RL;\n  IF INDEX(LU,'CEATC') \u00ac= 0\n  OR INDEX(TEXT,'CEATC') \u00ac= 0;\n  RETURN;\n  PROC SORT; BY DATE TI;\n  PROC PRINT; ID TI;\n  FORMAT DATE DATE.;\n  FORMAT TI   TIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF240": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x91\\x05/\\x00\\x98\\x12\\x0f\\x13\\x18\\x01\\x10\\x00\\x01\\x01\\x10\\xc3\\xf4\\xc1\\xc4\\xd4\\xc4\\xd4@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1991-02-21T00:00:00", "modifydate": "1998-04-30T13:18:00", "lines": 272, "newlines": 1, "modlines": 272, "user": "C4ADMDM"}, "text": "//C4SYSDMT JOB C4ADM000,MSGCLASS=X,CLASS=Q,NOTIFY=C4ADMDM\n//*\n//SAS     EXEC SAS609\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 240;\n  DATA CMF01CPU (KEEP = C4DATE C4TIME\n    CMF01USE\n    CMF01NST\n    CMF01NSX\n    CMF01NSM\n    CMF01ABS\n    CMF01TSN\n    CMF01TSM\n    CMF01TST\n    CMF01IDL\n    CMF01CST\n    CMF01B00\n    CMF01B01\n    CMF01B02\n    CMF01B03\n    CMF01B04\n    CMF01B05\n    CMF01B06\n    CMF01B07\n    CMF01B08\n    CMF01B09\n    CMF01B10\n    CMF01B11\n    CMF01B12\n    CMF01B13\n    CMF01B14\n    CMF01B15\n    CMF01B16\n  )\n  DATA CMF01CHN (KEEP = C4DATE C4TIME\n    CMF01ID\n    CMF01SER\n    CMF01DIE\n    CMF01SIG\n    CMF01BSY\n    CMF01VR\n    CMF01MLS\n    CMF01MGS\n    CMF01MTC\n    CMF01SUP\n    CMF01ESU\n    CMF01DSU\n    CMF01ESR\n    CMF01DSR\n    CMF01ESG\n    CMF01DSG\n    CMF01BCH\n    CMF01TSO\n    CMF01STA\n    CMF01KE0\n    CMF01K0P\n    CMF01KE1\n    CMF01K1P\n    CMF01KE2\n    CMF01K2P\n    CMF01KE3\n    CMF01K3P\n    CMF01KE4\n    CMF01K4P\n    CMF01KE5\n    CMF01K5P\n    CMF01KE6\n    CMF01K6P\n    CMF01KE7\n    CMF01K7P\n    CMF01KE8\n    CMF01K8P\n    CMF01KE9\n    CMF01K9P\n    CMF01KEA\n    CMF01KAP\n    CMF01KEB\n    CMF01KBP\n    CMF01KEC\n    CMF01KCP\n    CMF01KED\n    CMF01KDP\n    CMF01KEE\n    CMF01KEP\n    CMF01KEF\n    CMF01KFP\n    CMF01DCT\n    CMF01SCT\n    CMF01NCH\n    CMF01ACH\n    CMF01ACB\n    CMF01RV1\n    CMF01WCH\n  )\n  ;\n  RETAIN CMF01 0;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4  ; ELSE V=0  ;\n                  END;\n  IF V= 4  THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT TIMEOUT SMFSTAMP8.\n      SYSTEM $CHAR4. @;\n  C4DATE = DATEPART(TIMEOUT);\n  C4TIME = TIMEPART(TIMEOUT);\n  INFILE DATLIB;\n  IF SMFXXRTY = 240;\n  INPUT @V+25\n        CMFPRS PIB4. CMFPRL PIB2. CMFPRN PIB2. @;\n\n   POFFSET = CMFPRS + V - 3;\n  INPUT\n    @POFFSET     CMF01MFV PD2.\n    @POFFSET+2   CMF01PRD $8.\n    @POFFSET+10  CMF01IST PD4.\n    @POFFSET+14  CMF01DAT PD4.\n    @POFFSET+18  CMF01INT PD4.\n    @POFFSET+28  CMF01SUB PIB1.\n    @POFFSET+29  CMF01CFL PIB1.\n    @POFFSET+40  CMF01MVS $8.\n  @;\n*;\n** FILTER RECORDS FOR SUBTYPE 01;\n*;\n  IF CMF01SUB NE 01 THEN DELETE;\n\n   CMF01 = CMF01 + 1;        /* COUNT CMF01 RECORDS */\n\n   INPUT @V+25   +8    /* THE FIRST NON-PRODUCT-SECTION TRIPLET */\n    CMF01QSS  PIB4.     /* AL4(CMF01#DO) OFFSET TO CPU QUEUE SECTION  */\n    CMF01QSL  PIB2.     /* AL2(CMF01QLN) LENGTH OF CPU QUEUE SECTION  */\n    CMF01QSN  PIB2.     /* H'1' NUMBER OF CPU QUEUE SECTIONS          */\n    CMF01CSS  PIB4.     /* AL4(CMF01#CO) OFFSET TO CPU/CHANNEL SECTION*/\n    CMF01CSL  PIB2.     /* AL2(CMF01CCL) LENGTH OF CPU/CHANNEL SECTION*/\n    CMF01CSN  PIB2.     /* H'0' NUMBER OF CPU/CHANNEL SECTIONS        */\n /* CMF01#PO  EQU *-CMF01HDR (00034) OFFSET TO PRODUCT SECTION        */\n   @;                                  /* TRIPLETS ARE INPUT */\n       ******************************;\n       *  CPU QUEUE COUNTS SECTION.  ;\n       ******************************;\n          /* CHANGE FROM REL 0 IN REC TO REL 1 IN DATA */\n   CMF01QSS = CMF01QSS - 4 + 1;\n   DO WHILE ( CMF01QSN > 0 );         /* BEGIN SECTION */\n    INPUT @CMF01QSS+V\n /* CMF01Q    DS 0F                                                   */\n    CMF01USE  PIB4.     /* F'0' NUMBER OF MILLI SECS USED BY CMF      */\n    CMF01NST  PIB4.     /* F'0' IN AND NONSWAPPABLE - TOTAL           */\n    CMF01NSX  PIB4.     /* F'0' IN AND NONSWAPPABLE - MIN             */\n    CMF01NSM  PIB4.     /* F'0' IN AND NONSWAPPABLE - MAX             */\n    CMF01ABS  PIB4.     /* F'0' COUNT OF TIMES ALL CPUS BUSY          */\n    CMF01TSN  PIB4.     /* F'0' COUNT OF READY TCB'S MIN              */\n    CMF01TSM  PIB4.     /* F'0' COUNT OF READY TCB'S MAX              */\n    CMF01TST  PIB4.     /* F'0' COUNT OF READY TCB'S TOT              */\n    CMF01IDL  PIB4.     /* F'0' COUNT OF TIMES ALL CPUS IDLE          */\n    CMF01CST  PIB4.     /* F'0' COUNT OF TIMES A CPU QUEUE EXSIST     */\n    CMF01B00  PIB4.     /* F'0' NUMBER SAMPLES WITH  0 CPUS BUSY      */\n    CMF01B01  PIB4.     /* F'0' NUMBER SAMPLES WITH  1 CPU  BUSY      */\n    CMF01B02  PIB4.     /* F'0' NUMBER SAMPLES WITH  2 CPUS BUSY      */\n    CMF01B03  PIB4.     /* F'0' NUMBER SAMPLES WITH  3 CPUS BUSY      */\n    CMF01B04  PIB4.     /* F'0' NUMBER SAMPLES WITH  4 CPUS BUSY      */\n    CMF01B05  PIB4.     /* F'0' NUMBER SAMPLES WITH  5 CPUS BUSY      */\n    CMF01B06  PIB4.     /* F'0' NUMBER SAMPLES WITH  6 CPUS BUSY      */\n    CMF01B07  PIB4.     /* F'0' NUMBER SAMPLES WITH  7 CPUS BUSY      */\n    CMF01B08  PIB4.     /* F'0' NUMBER SAMPLES WITH  8 CPUS BUSY      */\n    CMF01B09  PIB4.     /* F'0' NUMBER SAMPLES WITH  9 CPUS BUSY      */\n    CMF01B10  PIB4.     /* F'0' NUMBER SAMPLES WITH 10 CPUS BUSY      */\n    CMF01B11  PIB4.     /* F'0' NUMBER SAMPLES WITH 11 CPUS BUSY      */\n    CMF01B12  PIB4.     /* F'0' NUMBER SAMPLES WITH 12 CPUS BUSY      */\n    CMF01B13  PIB4.     /* F'0' NUMBER SAMPLES WITH 13 CPUS BUSY      */\n    CMF01B14  PIB4.     /* F'0' NUMBER SAMPLES WITH 14 CPUS BUSY      */\n    CMF01B15  PIB4.     /* F'0' NUMBER SAMPLES WITH 15 CPUS BUSY      */\n    CMF01B16  PIB4.     /* F'0' NUMBER SAMPLES WITH 16 CPUS BUSY      */\n /* CMF01QLN  EQU *-CMF01Q (0006C) LENTH OF CPU QUEUE COUNTERS        */\n       @;                        /* END INPUT CMF01QSS */\n       OUTPUT CMF01CPU;\n       CMF01QSS = CMF01QSS + CMF01QSL;\n       CMF01QSN = CMF01QSN - 1;\n   END;                       /* END SECTION CMF01QSN  */\n         *******************************;\n         * CPU AND CHANNEL SAMPLE DATA  ;\n         *******************************;\n          /* CHANGE FROM REL 0 IN REC TO REL 1 IN DATA */\n   CMF01CSS = CMF01CSS - 4 + 1;\n   DO WHILE ( CMF01CSN > 0 );         /* BEGIN SECTION */\n    INPUT @CMF01CSS+V\n /* CMF01#CO  EQU *-CMF01HDR (000D4) OFFSET TO THIS SECTION           */\n /* CMF01C    DS 0F                                                   */\n    CMF01ID   $CHAR2.   /* XL2'0' CPU ID FROM CSD                     */\n    CMF01SER  $CHAR6.   /* CL6'40' CPU SERIAL NUMBER                  */\n    CMF01DIE  PIB4.     /* F'0' NUMBER OF MIRCO SECS DIE DELAYED      */\n    CMF01SIG  PIB4.     /* F'0' TOTAL SIG DELAY LOW BIT=1 MIRCO       */\n    CMF01BSY  PIB4.     /* F'0' COUNT OF TIMES CPU BUSY               */\n    CMF01VR   PIB4.     /* F'0' COUNT OF TIMES CPU IN V=R ADDRESS     */\n    CMF01MLS  PIB4.     /* F'0' COUNT OF TIMES MODE IS LOCAL SRB      */\n    CMF01MGS  PIB4.     /* F'0' COUNT OF TIMES MODE IS GLOBAL SRB     */\n    CMF01MTC  PIB4.     /* F'0' COUNT OF TIMES MODE IS TCB            */\n    CMF01SUP  PIB4.     /* F'0' COUNT OF SUPERVISOR STATE OBSERVAT    */\n    CMF01ESU  PIB4.     /* F'0' COUNT OF TIMES ENABLED SUPERV(TCB)    */\n    CMF01DSU  PIB4.     /* F'0' COUNT OF TIMES DISABLED SUPERV(TCB)   */\n    CMF01ESR  PIB4.     /* F'0' COUNT OF TIMES ENABLED L/SRB          */\n    CMF01DSR  PIB4.     /* F'0' COUNT OF TIMES DISABLED L/SRB         */\n    CMF01ESG  PIB4.     /* F'0' COUNT OF TIMES ENABLED G/SRB          */\n    CMF01DSG  PIB4.     /* F'0' COUNT OF TIMES DISABLED G/SRB         */\n    CMF01BCH  PIB4.     /* F'0' COUNT OF TIMES BATCH USER IN CONTR    */\n    CMF01TSO  PIB4.     /* F'0' COUNT OF TIMES TSO USER IN CONTROL    */\n    CMF01STA  PIB4.     /* F'0' COUNT OF TIMES STARTED TASK IN CON    */\n    CMF01KE0  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 0      */\n    CMF01K0P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K0 - PRB   */\n    CMF01KE1  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 1      */\n    CMF01K1P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K1 - PRB   */\n    CMF01KE2  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 2      */\n    CMF01K2P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K2 - PRB   */\n    CMF01KE3  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 3      */\n    CMF01K3P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K3 - PRB   */\n    CMF01KE4  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 4      */\n    CMF01K4P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K4 - PRB   */\n    CMF01KE5  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 5      */\n    CMF01K5P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K5 - PRB   */\n    CMF01KE6  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 6      */\n    CMF01K6P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K6 - PRB   */\n    CMF01KE7  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 7      */\n    CMF01K7P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K7 - PRB   */\n    CMF01KE8  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 8      */\n    CMF01K8P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K8 - PRB   */\n    CMF01KE9  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY 9      */\n    CMF01K9P  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN K9 - PRB   */\n    CMF01KEA  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY A      */\n    CMF01KAP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KA - PRB   */\n    CMF01KEB  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY B      */\n    CMF01KBP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KB - PRB   */\n    CMF01KEC  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY C      */\n    CMF01KCP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KC - PRB   */\n    CMF01KED  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY D      */\n    CMF01KDP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KD - PRB   */\n    CMF01KEE  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY E      */\n    CMF01KEP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KE - PRB   */\n    CMF01KEF  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KEY F      */\n    CMF01KFP  PIB4.     /* F'0' COUNT OF TIMES OBSERVED IN KF - PRB   */\n    CMF01DCT  PIB4.     /* F'0' NUM OF TIMES CPU HAD A DIE DELAY      */\n    CMF01SCT  PIB4.     /* F'0' NUM OF TIMES CPU HAD A SIG DELAY      */\n    CMF01NCH  PIB4.     /* F'0' COUNT OF TIMES NO CHAN BUSY & CPU BSY */\n    CMF01ACH  PIB4.     /* F'0' COUNT OF TIMES ANY CHAN BUSY & CPU WAI*/\n    CMF01ACB  PIB4.     /* F'0' COUNT OF TIMES ANY CHAN BUSY & CPU BSY*/\n    CMF01RV1  PIB4.     /* F'0' RESERVED FIELD                        */\n    CMF01WCH  PIB4.     /* F'0' COUNT OF TIMES CPU IN WAIT & CHAN'S IN*/\n /* CMF01CLN  EQU *-CMF01NCH (00014) LENGTH OF CHAN DATA SEC.         */\n /* CMF01CCL  EQU *-CMF01C (000E8) LENGTH OF CPU AND CHAN DATA SEC.   */\n       @;                        /* END INPUT CMF01CSS */\n       OUTPUT CMF01CHN;\n       CMF01CSS = CMF01CSS + CMF01CSL;\n       CMF01CSN = CMF01CSN - 1;\n   END;                       /* END SECTION CMF01CSN  */\n      FORMAT CMF01ID HEX4.;\nRETURN;\n*ROC PRINT;\nPROC PRINT DATA=CMF01CPU;\nFORMAT C4DATE DATE.;\nFORMAT C4TIME TIME.;\nPROC PRINT DATA=CMF01CHN;\nFORMAT C4DATE DATE.;\nFORMAT C4TIME TIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF241": {"ttr": 1806, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87\\x12\\x1f\\x00\\x87\\x12\\x1f\\x13@\\x00 \\x00 \\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-05-01T00:00:00", "modifydate": "1987-05-01T13:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMA JOB (EDPCSBS1),MSGCLASS=X,CLASS=A,NOTIFY=ED115DM\n//SAS     EXEC SAS,OPTIONS='NODATE'\n//DATLIB  DD DSN=SYS1.MAN3,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY.COPY1,DISP=OLD,UNIT=TAPE,\n//*       VOL=SER=702786\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD\n//OUT DD DSN=ED115DM.PROD.SMFDUMPW,DISP=OLD\n//SYSIN   DD *\nTITLE SMF 241;\n  DATA _NULL_\n      ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 241;\n  INPUT TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  FILE OUT; PUT _INFILE_;\n  RETURN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF25": {"ttr": 1808, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x05\\x0f\\x00\\x91\\x05\\x0f\\x16\\x10\\x00-\\x00-\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-02-19T00:00:00", "modifydate": "1991-02-19T16:10:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=3,NOTIFY=ED115DM\n//*\n//  EXEC SAS606\n//DATLIB DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN DD *\nDATA SMF25 (KEEP =\n       SMF25JBN         SMF25RST       SMF25RSD      SMF25UIF\n       SMF25IND             SMF25NTF\n       SMF25NDF             SMF25FST\n       SMF25FSD             SMF25SST\n       SMF25SSD             SMF25NTM\n       SMF25NDM             SMF25MST\n       SMF25MSD             SMF25VVT\n       SMF25VVD             SMF25NMV\n                  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 25;\n INPUT SMF25JBN $CHAR8. SMF25RST PIB4. SMF25RSD PD4. SMF25UIF $CHAR8. @;\n INPUT SMF25IND PIB2.       SMF25NTF PIB4.\n       SMF25NDF PIB4.       SMF25FST PIB4.\n       SMF25FSD PD4.        SMF25SST PIB4.\n       SMF25SSD PD4.        SMF25NTM PIB4.\n       SMF25NDM PIB4.       SMF25MST PIB4.\n       SMF25MSD PD4.        SMF25VVT PIB4.\n       SMF25VVD PD4.        SMF25NMV PIB4.\n       ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF250": {"ttr": 1810, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x93!\\x7f\\x00\\x96'\\x1f\\x15H\\x00\\r\\x00\\r\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-08-05T00:00:00", "modifydate": "1996-09-27T15:48:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMH JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDSAS607\n//*MF    DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD\n//*MF    DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//SMF    DD DSN=SYS1.MAN4,DISP=SHR\n//SOURCLIB DD DSN=EDS1.PROD.MXG1313.USERMOD.SOURCLIB,DISP=SHR\n//         DD DSN=C4S2.PROD.MXG.SOURCLIB,DISP=SHR\n//LIBRARY  DD DSN=C4S2.PROD.MXG.SASLIB,DISP=SHR\n//SYSIN DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(TYPESPMS)\n//      DD *\nPROC PRINT DATA=SPMSCED;\nPROC PRINT DATA=SPMSEXT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF251": {"ttr": 1812, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x96'\\x1f\\x00\\x96'\\x1f\\x15T\\x00\\x10\\x00\\x0c\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1996-09-27T00:00:00", "modifydate": "1996-09-27T15:54:00", "lines": 16, "newlines": 12, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMH JOB EDPCSBS1,MSGCLASS=X,CLASS=L,REGION=4M,NOTIFY=ED115DM\n// EXEC EDMXGSAS,OPTIONS='MACRO'\n//*MF    DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD\n//*MF    DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//SMF    DD DSN=SYS1.MAN4,DISP=SHR\n//SOURCLIB DD DSN=EDS1.PROD.MXG1313.USERMOD.SOURCLIB,DISP=SHR\n//         DD DSN=C4S2.PROD.MXG.SOURCLIB,DISP=SHR\n//LIBRARY  DD DSN=C4S2.PROD.MXG.SASLIB,DISP=SHR\n//SYSIN DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(VMXGFOR)\n//      DD DISP=SHR,DSN=C4S2.PROD.MXG.SOURCLIB(TYPEICE)\n//      DD *\nPROC PRINT DATA=ICEBRGSY;\nPROC PRINT DATA=ICEBRGCH;\nPROC PRINT DATA=ICEBRGDV;\nPROC PRINT DATA=ICEBRGDR;\nPROC PRINT DATA=ICEBRGDE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF26": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x84#_\\x00\\x87\"\\x9f\\x13\"\\x00[\\x00@\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1987-08-17T13:22:00", "lines": 91, "newlines": 64, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMA JOB EDPCSBS1,'SMF26',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//* XA\n//* JES3\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY(0),DISP=SHR\n//SYSIN   DD *\nTITLE SMF 26;\n  DATA X (KEEP = SMFXXFLG SMFXXRTY TIMEOUT SMFXXSID\n        SMF26JBN         SMF26RST       SMF26RSD        SMF26UIF\n        SMF26RSV         SMF26SBS       SMF26IND        SMF26IN1\n              SMF26LN1          SMF26RV1          SMF26IN3\n              SMF26INF          SMF26JNM          SMF26JID\n              SMF26NAM          SMF26MSG          SMF26CLS\n              SMF26XPI          SMF26XPS          SMF26RV8\n              SMF26DEV          SMF26RVA          SMF26XTM\n              SMF26ELN          SMF26EPU          SMF26DTY\n              SMF26RV6          SMF26IGP          SMF26PD3\n              SMF26NJO          SMF26NJI          SMF26NET\n              SMF26DTM          SMF26DDT          SMF26CLN\n              SMF26LN2          SMF26RV2          SMF26RPT\n              SMF26RPD          SMF26CST          SMF26CSD\n              SMF26CPT          SMF26CPD          SMF26XST\n              SMF26XSD          SMF26XPT          SMF26XPD\n              SMF26OST          SMF26OSD          SMF26OPT\n              SMF26OPD\n              SMF26LN3          SMF26RV4          SMF26ICD\n              SMF26XLN          SMF26XPU          SMF26RID\n              SMF26CID          SMF26XID          SMF26OID\n              SMF26JAF          NJEJMRID          NJEJMRLN\n              NJEJOBNO          NJEJOBNM          NJEXEQM\n              NJEPRGMR          NJEUSRID          NJEACCT\n              NJEDEPT           NJEBLDG           NJEROOM\n              NJEXEQU           NJETRANS\n         );\n  INFILE DATLIB JFCB=JF;\n  RETAIN V;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 26;\n  INPUT SMF26JBN $CHAR8. SMF26RST PIB4. SMF26RSD PD4.   SMF26UIF $CHAR8.\n        SMF26RSV PIB4.   SMF26SBS PIB2. SMF26IND PIB1.  SMF26IN1 PIB1.\n        @;\n   IF SMF26IND = '1.......'B THEN DO;\n        INPUT SMF26LN1 PIB2.    SMF26RV1 PIB2.    SMF26IN3 PIB1.\n              SMF26INF PIB1.    SMF26JNM $CHAR4.  SMF26JID $CHAR8.\n              SMF26NAM $CHAR20. SMF26MSG $CHAR1.  SMF26CLS $CHAR1.\n              SMF26XPI PIB1.    SMF26XPS PIB1.    SMF26RV8 PIB4.\n              SMF26DEV $CHAR8.  SMF26RVA PIB8.    SMF26XTM PIB4.\n              SMF26ELN PIB4.    SMF26EPU PIB4.    SMF26DTY $CHAR1.\n              SMF26RV6 PIB3.    SMF26IGP $CHAR8.  SMF26PD3 $CHAR8.\n              SMF26NJO $CHAR8.  SMF26NJI $CHAR8.  SMF26NET $CHAR8.\n              SMF26DTM PIB4.    SMF26DDT PD4.     SMF26CLN $CHAR8.\n        @ ;\n   END;\n   IF SMF26IND = '.1......'B THEN DO;\n        INPUT SMF26LN2 PIB2.    SMF26RV2 PIB2.    SMF26RPT PIB4.\n              SMF26RPD PD4.     SMF26CST PIB4.    SMF26CSD PD4.\n              SMF26CPT PIB4.    SMF26CPD PD4.     SMF26XST PIB4.\n              SMF26XSD PD4.     SMF26XPT PIB4.    SMF26XPD PD4.\n              SMF26OST PIB4.    SMF26OSD PD4.     SMF26OPT PIB4.\n              SMF26OPD PD4.\n        @ ;\n   END;\n   IF SMF26IND = '..1.....'B THEN DO;\n        INPUT SMF26LN3 PIB2.    SMF26RV4 PIB2.    SMF26ICD PIB4.\n              SMF26XLN PIB4.    SMF26XPU PIB4.    SMF26RID $CHAR4.\n              SMF26CID $CHAR4.  SMF26XID $CHAR4.  SMF26OID $CHAR4.\n              SMF26JAF $CHAR42. NJEJMRID $CHAR8.  NJEJMRLN PIB2.\n              NJEJOBNO $CHAR2.  NJEJOBNM $CHAR8.  NJEXEQM  $CHAR8.\n              NJEPRGMR $CHAR20. NJEUSRID $CHAR8.  NJEACCT  $CHAR8.\n              NJEDEPT  $CHAR8.  NJEBLDG  $CHAR8.  NJEROOM  $CHAR8.\n              NJEXEQU  $CHAR8.  NJETRANS PIB4.\n        @ ;\n   END;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF26J2": {"ttr": 2052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x87#?\\x00\\x87#?\\x15\\x18\\x00k\\x00\\\\\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1987-08-21T00:00:00", "modifydate": "1987-08-21T15:18:00", "lines": 107, "newlines": 92, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMA JOB EDPCSBS1,'SMF26',MSGCLASS=X,CLASS=A,NOTIFY=ED115DM\n//* XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE,WORK='9,2'\n//DATLIB  DD DSN=C4P2.PROD.JOBS.AUG86,DISP=OLD\n//SYSIN   DD *\nTITLE SMF 26;\n  DATA X (KEEP = SMFXXFLG SMFXXRTY TIMEOUT SMFXXSID\n        SMF26JBN         SMF26RST       SMF26RSD        SMF26UIF\n        SMF26RSV         SMF26SBS       SMF26IND        SMF26ND1\n              SMF26LN1          SMF26RV1          SMF26IN2\n              SMF26INF          SMF26JNM          SMF26JID\n              SMF26NAM          SMF26MSG          SMF26CLS\n              SMF26XP1          SMF26XPS          SMF26OPI\n              SMF26OPS          SMF26LOC          SMF26DEV\n              SMF26ACT          SMF26ROM          SMF26XTM\n              SMF26ELN          SMF26EPU          SMF26FRM\n              SMF26CYP          SMF26LIN          SMF26PRR\n              SMF26PUR          SMF26PDD\n              SMF26LN2          SMF26RV2          SMF26RPT\n              SMF26RPD          SMF26CST          SMF26CSD\n              SMF26CPT          SMF26CPD          SMF26XST\n              SMF26XSD          SMF26XPT          SMF26XPD\n              SMF26OST          SMF26OSD          SMF26OPT\n              SMF26OPD\n              SMF26LN3          SMF26RV4          SMF26ICD\n              SMF26XLN          SMF26XPU          SMF26RID\n              SMF26CID          SMF26XID          SMF26OID\n              SMF26LN4          SMF26RV5          SMF26NID\n              SMF26NST          SMF26NSD          SMF26NPT\n              SMF26NPD          SMF26NAC          SMF26NJB\n              SMF26NDV          SMF26NON          SMF26NXN\n              SMF26NNM          SMF26NLN\n              SMF26LN5          SMF26INR          SMF26PRD\n              SMF26PUD\n              SMF26LN6          SMF26EBT          SMF26XBT\n              SMF26EPG          SMF26XPG\n         );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 26;\n  INPUT SMF26JBN $CHAR8. SMF26RST PIB4. SMF26RSD PD4.   SMF26UIF $CHAR8.\n        SMF26RSV PIB4.   SMF26SBS PIB2. SMF26IND PIB1.  SMF26ND1 PIB1.\n        @;\n  IF SMF26SBS = 0002X;\n   IF SMF26IND = '1.......'B THEN DO;\n        INPUT SMF26LN1 PIB2.    SMF26RV1 PIB2.    SMF26IN2 PIB1.\n              SMF26INF PIB1.    SMF26JNM $CHAR4.  SMF26JID $CHAR8.\n              SMF26NAM $CHAR20. SMF26MSG $CHAR1.  SMF26CLS $CHAR1.\n              SMF26XP1 PIB1.    SMF26XPS PIB1.    SMF26OPI PIB1.\n              SMF26OPS PIB1.    SMF26LOC PIB2.    SMF26DEV $CHAR8.\n              SMF26ACT $CHAR4.  SMF26ROM $CHAR4.  SMF26XTM PIB4.\n              SMF26ELN PIB4.    SMF26EPU PIB4.    SMF26FRM $CHAR4.\n              SMF26CYP PIB2.    SMF26LIN PIB2.    SMF26PRR PIB2.\n              SMF26PUR PIB2.    SMF26PDD $CHAR8.\n        @ ;\n   END;\n   IF SMF26IND = '.1......'B THEN DO;\n        INPUT SMF26LN2 PIB2.    SMF26RV2 PIB2.    SMF26RPT PIB4.\n              SMF26RPD PD4.     SMF26CST PIB4.    SMF26CSD PD4.\n              SMF26CPT PIB4.    SMF26CPD PD4.     SMF26XST PIB4.\n              SMF26XSD PD4.     SMF26XPT PIB4.    SMF26XPD PD4.\n              SMF26OST PIB4.    SMF26OSD PD4.     SMF26OPT PIB4.\n              SMF26OPD PD4.\n        @ ;\n   END;\n   IF SMF26IND = '..1.....'B THEN DO;\n        INPUT SMF26LN3 PIB2.    SMF26RV4 PIB2.    SMF26ICD PIB4.\n              SMF26XLN PIB4.    SMF26XPU PIB4.    SMF26RID $CHAR4.\n              SMF26CID $CHAR4.  SMF26XID $CHAR4.  SMF26OID $CHAR4.\n        @ ;\n   END;\n   IF SMF26IND = '...1....'B THEN DO;\n        INPUT SMF26LN4 PIB2.    SMF26RV5 PIB2.    SMF26NID $CHAR4.\n              SMF26NST PIB4.    SMF26NSD PD4.     SMF26NPT PIB4.\n              SMF26NPD PD4.     SMF26NAC $CHAR8.  SMF26NJB $CHAR8.\n              SMF26NDV $CHAR8.  SMF26NON $CHAR8.  SMF26NXN $CHAR8.\n              SMF26NNM $CHAR8.  SMF26NLN $CHAR8.\n        @ ;\n   END;\n   IF SMF26IND = '....1...'B THEN DO;\n        INPUT SMF26LN5 PIB2.    SMF26INR PIB4.    SMF26PRD PIB4.\n              SMF26PUD PIB4.\n        @ ;\n   END;\n   IF SMF26IND = '.....1..'B THEN DO;\n        INPUT SMF26LN6 PIB2.    SMF26EBT PIB4.    SMF26XBT PIB4.\n              SMF26EPG PIB4.    SMF26XPG PIB4.\n        @ ;\n   END;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF30": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01;\\x00\\x00\\x00\\x85\"\\x8f\\x00\\x98(\\x1f\\x116\\x01;\\x00\\xf9\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.59", "flags": 0, "createdate": "1985-08-16T00:00:00", "modifydate": "1998-10-08T11:36:00", "lines": 315, "newlines": 249, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMZ JOB (C4SYS000),MSGCLASS=X,CLASS=A,NOTIFY=C4SYSDM\n//* XA FORMAT\n//* THERE SEEMS TO BE SOMETHING FUNNY ABOUT EXCPS IN PARTICULAR\n//* WHEN INTERVAL RECORDS ARE PUT OUT. TYPE 5 SMF30 MAY BE ZERO FOR\n//* CICS ETC. - MAYBE INTERVAL DATA IS NOT SUMMED IN TYPE 30.\n//*\n//SAS     EXEC   SAS609,OPTIONS='NOSOURCE NODATE'\n//*ATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//DATLIB  DD DISP=OLD,DSN=C4SYSDM.C4MS.SMF700A(0)\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD\n//*       VOL=SER=702786\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD\n//*ATLIB  DD DSN=C4P2.PROD.JOBS.OCT86,DISP=OLD\n//SYSIN   DD *\nTITLE SMF 30;\n  DATA\n STARTER (KEEP = SMF30JBN TIMEOUT  SMFXXSID\n                 SMF30WID SMF30STP  SMF30SOF  SMF30SLN\n                 SMF30SON SMF30IOF  SMF30ILN  SMF30ION\n                 SMF30UOF SMF30ULN  SMF30UON  SMF30TOF\n                 SMF30TIN SMF30TON  SMF30COF  SMF30CLN\n                 SMF30CON SMF30AOF  SMF30ALN  SMF30AON\n                 SMF30ROF SMF30RLN  SMF30RON  SMF30POF\n                 SMF30PLN SMF30PON  SMF30OOF  SMF30OLN\n                 SMF30OON SMF30EOF  SMF30ELN  SMF30EON\n                 SMF30EOR\n        )\n  SUBSYS (KEEP = SMF30JBN I TIMEOUT\n                            SMF30TYP SMF30RS1 SMF30RVN SMF30PNM)\n  IDENT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30PGM SMF30STM SMF30UIF SMF30JNM SMF30STN\n                SMF30CLS SMF30IF1 SMF30PGN SMF30JPT SMF30AST SMF30PPS\n                SMF30SIT SMF30SDT SMF30EDT SMF30USR SMF30GRP SMF30RUD\n                SMF30TID READTIME WAITTIME RUNTIME )\n  IOACT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30INP SMF30TEP SMF30TPT SMF30TGT SMF30RDR\n                SMF30RDT SMF30TCN SMF30MFL)\n  COMPL (KEEP = SMF30JBN I TIMEOUT SMF30SCC SMF30ST1 )\n  PRACC (KEEP = SMF30JBN I TIMEOUT\n                SMF30PTY SMF30RV3 SMF30CPT SMF30CPS SMF30ICU SMF30ISB\n                   SMF30JVU         SMF30IVU          SMF30JVA\n                   SMF30IVA         SMF30IST          SMF30IDT\n                   SMF30IIP         SMF30RCT          SMF30HPT\n                   SMF30CSC )\n  ACCNT (KEEP = SMF30JBN I TIMEOUT SMF30ACL          )\n  STOR  (KEEP = SMF30JBN I TIMEOUT\n                SMF30RSV SMF30SFL SMF30SPK SMF30PRV SMF30SYS SMF30PGI\n                SMF30PGO SMF30REC SMF30NSW SMF30PSI SMF30PSO SMF30VPI\n                SMF30VPO SMF30VPR SMF30CPI SMF30CPR SMF30LPI SMF30LPR\n                SMF30PST SMF30PSC SMF30RGB SMF30ERG SMF30ARB SMF30EAR\n                SMF30URB SMF30EUR SMF30RGN SMFRTPGI SMFRTPGO SMFRTREC\n                SMFRTNSW SMFRTPSI SMFRTPSO SMFRTVPI SMFRTVPO SMFRTVPR\n                SMFRTCPI SMFRTCPR SMFRTLPI SMFRTLPR SMFRTPST SMFRTPSC\n                )\n  PERFM (KEEP = SMF30JBN I TIMEOUT\n                SMF30SRV SMF30CSU SMF30SRB SMF30IO  SMF30MSO SMF30TAT\n                SMFRTSRV SMFRTCSU SMFRTSRB SMFRTIO  SMFRTMSO\n                SMF30TET SMF30RES SMF30TRS WSET)\n  OPER  (KEEP = SMF30JBN I TIMEOUT\n                SMF30PDM SMF30PRD SMF30PTM SMF30TPR SMF30MTM SMF30MSR)\n  EXCP  (KEEP = SMF30JBN I TIMEOUT CUMEXCP\n                SMF30DEV SMF30UTP SMF30CUA SMF30DDN SMF30BLK SMF30BSZ\n                SMF30DCT )\n      ;\n  CUMEXCP=0;\n  WW=0;\n  W=4;\n  JOBT1='TOSTAR  ';\n  JOBT2='TOSTARN ';\n  JOBT3='~~~~~~~~';\n  JOBT4='~~~~~~~~';\n  JOBT5='~~~~~~~~';\n  JOBT6='~~~~~~~~';\n  JOBT7='~~~~~~~~';\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 30;\n  INPUT TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  INPUT SMF30WID $CHAR4. SMF30STP PIB2. SMF30SOF PIB4.  SMF30SLN PIB2.\n        SMF30SON PIB2.   SMF30IOF PIB4. SMF30ILN PIB2.  SMF30ION PIB2.\n        SMF30UOF PIB4.   SMF30ULN PIB2. SMF30UON PIB2.  SMF30TOF PIB4.\n        SMF30TIN PIB2.   SMF30TON PIB2. SMF30COF PIB4.  SMF30CLN PIB2.\n        SMF30CON PIB2.   SMF30AOF PIB4. SMF30ALN PIB2.  SMF30AON PIB2.\n        SMF30ROF PIB4.   SMF30RLN PIB2. SMF30RON PIB2.  SMF30POF PIB4.\n        SMF30PLN PIB2.   SMF30PON PIB2. SMF30OOF PIB4.  SMF30OLN PIB2.\n        SMF30OON PIB2.   SMF30EOF PIB4. SMF30ELN PIB2.  SMF30EON PIB2.\n        SMF30EOR PIB2.\n        @;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30SIT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF30JBN \u00ac= JOBT1 THEN\n   IF SMF30JBN \u00ac= JOBT2 THEN\n   IF SMF30JBN \u00ac= JOBT3 THEN\n   IF SMF30JBN \u00ac= JOBT4 THEN\n   IF SMF30JBN \u00ac= JOBT5 THEN\n   IF SMF30JBN \u00ac= JOBT6 THEN\n   IF SMF30JBN \u00ac= JOBT7 THEN DELETE;\n   QDATE = DATEPART(TIMEOUT);\n   QTIME = TIMEPART(TIMEOUT);\n   * IF QDATE <= '01JAN00'D OR QDATE >= '31DEC99'D THEN DELETE;\n   * IF QTIME <= '00:00:00'T OR QTIME >= '24:00:00'T THEN DELETE;\n   OUTPUT STARTER;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n        OUTPUT SUBSYS;\n        IF W=SMF30TYP THEN WW+1;\n      END;\n   END;\n   IF WW=0 THEN DELETE;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30SIT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n             READTIME = SMF30EDT - SMF30SDT;\n             WAITTIME = SMF30SIT - SMF30SDT;\n              RUNTIME = TIMEOUT  - SMF30SIT;\n        OUTPUT IDENT;\n      END;\n   END;\n   IF SMF30UON > 0 THEN DO;\n      DO I = 0 TO (SMF30UON - 1);\n        OFF = SMF30UOF -3+V + I*SMF30ULN;\n        INPUT @OFF SMF30INP PIB4.   SMF30TEP PIB4.   SMF30TPT PIB4.\n                   SMF30TGT PIB4.   SMF30RDR PIB1.   SMF30RDT PIB1.\n                   SMF30TCN PIB4.   SMF30MFL PIB4.\n        @ ;\n        OUTPUT IOACT;\n      END;\n   END;\n   IF SMF30TON > 0 THEN DO;\n      DO I = 0 TO (SMF30TON - 1);\n        OFF = SMF30TOF -3+V + I*SMF30TIN;\n        INPUT @OFF SMF30SCC PIB2.   SMF30ST1 PIB2.\n        @ ;\n        OUTPUT COMPL;\n      END;\n   END;\n   IF SMF30CON > 0 THEN DO;\n      DO I = 0 TO (SMF30CON - 1);\n        OFF = SMF30COF -3+V + I*SMF30CLN;\n        INPUT @OFF SMF30PTY PIB2.   SMF30RV3 PIB2.    SMF30CPT PIB4.2\n                   SMF30CPS PIB4.2  SMF30ICU PIB4.2   SMF30ISB PIB4.2\n                   SMF30JVU PIB4.2  SMF30IVU PIB4.2   SMF30JVA PIB4.2\n                   SMF30IVA PIB4.2  SMF30IST $CHAR4.  SMF30IDT $CHAR4.\n                   SMF30IIP PIB4.2  SMF30RCT PIB4.2   SMF30HPT PIB4.2\n                   SMF30CSC PIB4.\n        @ ;\n        OUTPUT PRACC;\n      END;\n   END;\n   IF SMF30AON > 0 THEN DO;\n      DO I = 0 TO (SMF30AON - 1);\n        OFF = SMF30AOF -3+V + I*SMF30ALN;\n        INPUT @OFF SMF30ACL PIB1.\n        @ ;\n       *SMF30ACT = '';\n       *IF SMF30ACL > 0 THEN DO J = 0 TO (SMF30ACL-1);\n       *                     INPUT SMFXXACT $CHAR1. @;\n       *                     SMF30ACT = SMF30ACT || SMFXXACT  ;\n       *                     END;\n        OUTPUT ACCNT;\n      END;\n   END;\n   IF SMF30RON > 0 THEN DO;\n      DO I = 0 TO (SMF30RON - 1);\n        OFF = SMF30ROF -3+V + I*SMF30RLN;\n        INPUT @OFF SMF30RSV PIB2.   SMF30SFL PIB1.    SMF30SPK PIB1.\n                   SMF30PRV PIB2.\n                   SMF30SYS PIB2.   SMF30PGI PIB4.    SMF30PGO PIB4.\n                   SMF30REC PIB4.   SMF30NSW PIB4.    SMF30PSI PIB4.\n                   SMF30PSO PIB4.   SMF30VPI PIB4.    SMF30VPO PIB4.\n                   SMF30VPR PIB4.   SMF30CPI PIB4.    SMF30CPR PIB4.\n                   SMF30LPI PIB4.   SMF30LPR PIB4.    SMF30PST PIB4.\n                   SMF30PSC PIB8.   SMF30RGB PIB4.    SMF30ERG PIB4.\n                   SMF30ARB PIB4.   SMF30EAR PIB4.    SMF30URB PIB4.\n                   SMF30EUR PIB4.   SMF30RGN PIB4.\n        @ ;\n        IF RUNTIME \u00ac=0 THEN DO;\n        SMFRTPGI = SMF30PGI / RUNTIME;\n        SMFRTPGO = SMF30PGO / RUNTIME;\n        SMFRTREC = SMF30REC / RUNTIME;\n        SMFRTNSW = SMF30NSW / RUNTIME;\n        SMFRTPSI = SMF30PSI / RUNTIME;\n        SMFRTPSO = SMF30PSO / RUNTIME;\n        SMFRTVPI = SMF30VPI / RUNTIME;\n        SMFRTVPO = SMF30VPO / RUNTIME;\n        SMFRTVPR = SMF30VPR / RUNTIME;\n        SMFRTCPI = SMF30CPI / RUNTIME;\n        SMFRTCPR = SMF30CPR / RUNTIME;\n        SMFRTLPI = SMF30LPI / RUNTIME;\n        SMFRTLPR = SMF30LPR / RUNTIME;\n        SMFRTPST = SMF30PST / RUNTIME;\n        SMFRTPSC = SMF30PSC / RUNTIME;\n                            END;\n        OUTPUT STOR;\n      END;\n   END;\n   IF SMF30PON > 0 THEN DO;\n      DO I = 0 TO (SMF30PON - 1);\n        OFF = SMF30POF -3+V + I*SMF30PLN;\n        INPUT @OFF SMF30SRV PIB4.   SMF30CSU PIB4.    SMF30SRB PIB4.\n                   SMF30IO  PIB4.   SMF30MSO PIB4.    SMF30TAT PIB4.\n                   SMF30TET PIB4.   SMF30RES PIB4.    SMF30TRS PIB4.\n        @ ;\n        SMF30TAT=SMF30TAT/977 ;\n        SMF30RES=SMF30RES/977 ;\n        SMFRTSRV=SMF30SRV / RUNTIME;\n        SMFRTCSU=SMF30CSU / RUNTIME;\n        SMFRTSRB=SMF30SRB / RUNTIME;\n        SMFRTIO =SMF30IO  / RUNTIME;\n        SMFRTMSO=SMF30MSO / RUNTIME;\n        WSET = (SMF30MSO / SMF30CSU) * 500/3;\n        OUTPUT PERFM;\n      END;\n   END;\n   IF SMF30OON > 0 THEN DO;\n      DO I = 0 TO (SMF30OON - 1);\n        OFF = SMF30OOF -3+V + I*SMF30OLN;\n        INPUT @OFF SMF30PDM PIB4.   SMF30PRD PIB4.    SMF30PTM PIB4.\n                   SMF30TPR PIB4.   SMF30MTM PIB4.    SMF30MSR PIB4.\n        @ ;\n        OUTPUT OPER;\n      END;\n   END;\n   IF SMF30EON > 0 THEN DO;\n   IF SMF30EOR \u00ac= 0 THEN PUT '***** EOR NEQ 0 ***** JOB WAS ' SMF30JBN;\n      DO I = 0 TO (SMF30EON - 1);\n        OFF = SMF30EOF -3+V + I*SMF30ELN;\n        INPUT @OFF SMF30DEV PIB1.   SMF30UTP PIB1.    SMF30CUA PIB2.\n                   SMF30DDN $CHAR8. SMF30BLK PIB4.    SMF30BSZ PIB2.\n                   SMF30DCT PIB2.\n        @ ;\n        SMF30DCT = SMF30DCT * 128 / 1000000;\n        CUMEXCP + SMF30BLK;\n        OUTPUT EXCP;\n      END;\n   END;\nFORMAT TIMEOUT SMF30SIT SMF30SDT SMF30EDT DATETIME.\n       READTIME WAITTIME RUNTIME\n       SMF30AST SMF30PPS SMF30TAT SMF30RES\n       SMF30CPT SMF30CPS SMF30ICU SMF30ISB TIME.\n       SMF30CUA SMF30SCC HEX4.\n       ;\nPROC PRINT DATA=STARTER;\nTITLE STARTER SECTION;\nPROC PRINT DATA=SUBSYS;\nTITLE SUBSYSTEM SECTION;\nPROC PRINT DATA=IDENT;\nTITLE IDENTIFICATION SECTION;\nPROC PRINT DATA=IOACT;\nTITLE I/O ACTIVITY SECTION;\nPROC PRINT DATA=COMPL;\nTITLE COMPLETION SECTION;\nPROC PRINT DATA=PRACC;\nTITLE PROCESSOR ACCOUNTING SECTION;\nPROC PRINT DATA=ACCNT;\nTITLE ACCOUNTING SECTION;\nPROC PRINT DATA=STOR;\nTITLE STORAGE AND PAGING SECTION;\nPROC PRINT DATA=PERFM;\nTITLE PERFORMANCE SECTION;\nPROC PRINT DATA=OPER;\nTITLE OPERATOR SECTION;\nPROC PRINT DATA=EXCP;\nTITLE EXCP SECTION;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF30DL": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x953_\\x00\\x96)_\\x11H\\x01<\\x01<\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-12-01T00:00:00", "modifydate": "1996-10-21T11:48:00", "lines": 316, "newlines": 316, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMD JOB (EDPCSBS1),MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//* XA FORMAT\n//* THERE SEEMS TO BE SOMETHING FUNNY ABOUT EXCPS IN PARTICULAR\n//* WHEN INTERVAL RECORDS ARE PUT OUT. TYPE 5 SMF30 MAY BE ZERO FOR\n//* CICS ETC. - MAYBE INTERVAL DATA IS NOT SUMMED IN TYPE 30.\n//*\n//SAS     EXEC EDSAS609,OPTIONS='NOSOURCE NODATE'\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFHIST.NOV95.COPY1,DISP=OLD\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=OLD\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD\n//*       VOL=SER=702786\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD\n//*ATLIB  DD DSN=C4P2.PROD.JOBS.OCT86,DISP=OLD\n//FT13F001 DD SYSOUT=X\n//FT14F001 DD SYSOUT=X\n//FT15F001 DD SYSOUT=X\n//FT16F001 DD SYSOUT=X\n//FT17F001 DD SYSOUT=X\n//FT18F001 DD SYSOUT=X\n//FT19F001 DD SYSOUT=X\n//FT20F001 DD SYSOUT=X\n//FT21F001 DD SYSOUT=X\n//FT22F001 DD SYSOUT=X\n//FT23F001 DD SYSOUT=X\n//SYSIN   DD *\nTITLE SMF 30;\n  DATA\n STARTER (KEEP = SMF30JBN TIMEOUT  SMFXXSID\n                 SMF30WID SMF30STP  SMF30SOF  SMF30SLN\n                 SMF30SON SMF30IOF  SMF30ILN  SMF30ION\n                 SMF30UOF SMF30ULN  SMF30UON  SMF30TOF\n                 SMF30TIN SMF30TON  SMF30COF  SMF30CLN\n                 SMF30CON SMF30AOF  SMF30ALN  SMF30AON\n                 SMF30ROF SMF30RLN  SMF30RON  SMF30POF\n                 SMF30PLN SMF30PON  SMF30OOF  SMF30OLN\n                 SMF30OON SMF30EOF  SMF30ELN  SMF30EON\n                 SMF30EOR\n        )\n  SUBSYS (KEEP = SMF30JBN I TIMEOUT\n                            SMF30TYP SMF30RS1 SMF30RVN SMF30PNM)\n  IDENT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30PGM SMF30STM SMF30UIF SMF30JNM SMF30STN\n                SMF30CLS SMF30IF1 SMF30PGN SMF30JPT SMF30AST SMF30PPS\n                SMF30IDT SMF30SDT SMF30EDT SMF30USR SMF30GRP SMF30RUD\n                SMF30TID READTIME WAITTIME RUNTIME )\n  IOACT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30INP SMF30TEP SMF30TPT SMF30TGT SMF30RDR\n                SMF30RDT SMF30TCN SMF30MFL)\n  COMPL (KEEP = SMF30JBN I TIMEOUT SMF30SCC SMF30ST1 )\n  PRACC (KEEP = SMF30JBN I TIMEOUT\n                SMF30PTY SMF30RV3 SMF30CPT SMF30CPS SMF30ICU SMF30ISB)\n  ACCNT (KEEP = SMF30JBN I TIMEOUT SMF30ACL SMF30ACT )\n  STOR  (KEEP = SMF30JBN I TIMEOUT\n                SMF30RSV SMF30SFL SMF30SPK SMF30PRV SMF30SYS SMF30PGI\n                SMF30PGO SMF30REC SMF30NSW SMF30PSI SMF30PSO SMF30VPI\n                SMF30VPO SMF30VPR SMF30CPI SMF30CPR SMF30LPI SMF30LPR\n                SMF30PST SMF30PSC SMF30RGB SMF30ERG SMF30ARB SMF30EAR\n                SMF30URB SMF30EUR SMF30RGN SMFRTPGI SMFRTPGO SMFRTREC\n                SMFRTNSW SMFRTPSI SMFRTPSO SMFRTVPI SMFRTVPO SMFRTVPR\n                SMFRTCPI SMFRTCPR SMFRTLPI SMFRTLPR SMFRTPST SMFRTPSC\n                )\n  PERFM (KEEP = SMF30JBN I TIMEOUT\n                SMF30SRV SMF30CSU SMF30SRB SMF30IO  SMF30MSO SMF30TAT\n                SMFRTSRV SMFRTCSU SMFRTSRB SMFRTIO  SMFRTMSO\n                SMF30TET SMF30RES SMF30TRS WSET)\n  OPER  (KEEP = SMF30JBN I TIMEOUT\n                SMF30PDM SMF30PRD SMF30PTM SMF30TPR SMF30MTM SMF30MSR)\n     EXCP  (KEEP = SMF30JBN I TIMEOUT CUMEXCP\n                SMF30DEV SMF30UTP SMF30CUA SMF30DDN SMF30BLK SMF30BSZ\n                SMF30DCT )\n      ;\n  CUMEXCP=0;\n  WW=0;\n  W=4;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 30;\n  INPUT TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  INPUT SMF30WID $CHAR4. SMF30STP PIB2. SMF30SOF PIB4.  SMF30SLN PIB2.\n        SMF30SON PIB2.   SMF30IOF PIB4. SMF30ILN PIB2.  SMF30ION PIB2.\n        SMF30UOF PIB4.   SMF30ULN PIB2. SMF30UON PIB2.  SMF30TOF PIB4.\n        SMF30TIN PIB2.   SMF30TON PIB2. SMF30COF PIB4.  SMF30CLN PIB2.\n        SMF30CON PIB2.   SMF30AOF PIB4. SMF30ALN PIB2.  SMF30AON PIB2.\n        SMF30ROF PIB4.   SMF30RLN PIB2. SMF30RON PIB2.  SMF30POF PIB4.\n        SMF30PLN PIB2.   SMF30PON PIB2. SMF30OOF PIB4.  SMF30OLN PIB2.\n        SMF30OON PIB2.   SMF30EOF PIB4. SMF30ELN PIB2.  SMF30EON PIB2.\n        SMF30EOR PIB2.\n        @;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30IDT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SUBSTR(SMF30JBN,1,8) = 'C4C1P0X5';\n   QDATE = DATEPART(TIMEOUT);\n   QTIME = TIMEPART(TIMEOUT);\n   * IF QDATE <= '01JAN00'D OR QDATE >= '31DEC99'D THEN DELETE;\n   * IF QTIME <= '00:00:00'T OR QTIME >= '24:00:00'T THEN DELETE;\n   OUTPUT STARTER;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n        OUTPUT SUBSYS;\n        IF W=SMF30TYP THEN WW+1;\n      END;\n   END;\n   IF WW=0 THEN DELETE;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30IDT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n             READTIME = SMF30EDT - SMF30SDT;\n             WAITTIME = SMF30IDT - SMF30SDT;\n              RUNTIME = TIMEOUT  - SMF30IDT;\n        OUTPUT IDENT;\n      END;\n   END;\n   IF SMF30UON > 0 THEN DO;\n      DO I = 0 TO (SMF30UON - 1);\n        OFF = SMF30UOF -3+V + I*SMF30ULN;\n        INPUT @OFF SMF30INP PIB4.   SMF30TEP PIB4.   SMF30TPT PIB4.\n                   SMF30TGT PIB4.   SMF30RDR PIB1.   SMF30RDT PIB1.\n                   SMF30TCN PIB4.   SMF30MFL PIB4.\n        @ ;\n        OUTPUT IOACT;\n      END;\n   END;\n   IF SMF30TON > 0 THEN DO;\n      DO I = 0 TO (SMF30TON - 1);\n        OFF = SMF30TOF -3+V + I*SMF30TIN;\n        INPUT @OFF SMF30SCC PIB2.   SMF30ST1 PIB2.\n        @ ;\n        OUTPUT COMPL;\n      END;\n   END;\n   IF SMF30CON > 0 THEN DO;\n      DO I = 0 TO (SMF30CON - 1);\n        OFF = SMF30COF -3+V + I*SMF30CLN;\n        INPUT @OFF SMF30PTY PIB2.   SMF30RV3 PIB2.    SMF30CPT PIB4.2\n                   SMF30CPS PIB4.2  SMF30ICU PIB4.2   SMF30ISB PIB4.2\n        @ ;\n        OUTPUT PRACC;\n      END;\n   END;\n   IF SMF30AON > 0 THEN DO;\n      DO I = 0 TO (SMF30AON - 1);\n        OFF = SMF30AOF -3+V + I*SMF30ALN;\n        INPUT @OFF SMF30ACL PIB1.\n        @ ;\n       *SMF30ACT = '';\n       *IF SMF30ACL > 0 THEN DO J = 0 TO (SMF30ACL-1);\n       *                     INPUT SMFXXACT $CHAR1. @;\n       *                     SMF30ACT = SMF30ACT || SMFXXACT  ;\n       *                     END;\n        OUTPUT ACCNT;\n      END;\n   END;\n   IF SMF30RON > 0 THEN DO;\n      DO I = 0 TO (SMF30RON - 1);\n        OFF = SMF30ROF -3+V + I*SMF30RLN;\n        INPUT @OFF SMF30RSV PIB2.   SMF30SFL PIB1.    SMF30SPK PIB1.\n                   SMF30PRV PIB2.\n                   SMF30SYS PIB2.   SMF30PGI PIB4.    SMF30PGO PIB4.\n                   SMF30REC PIB4.   SMF30NSW PIB4.    SMF30PSI PIB4.\n                   SMF30PSO PIB4.   SMF30VPI PIB4.    SMF30VPO PIB4.\n                   SMF30VPR PIB4.   SMF30CPI PIB4.    SMF30CPR PIB4.\n                   SMF30LPI PIB4.   SMF30LPR PIB4.    SMF30PST PIB4.\n                   SMF30PSC PIB8.   SMF30RGB PIB4.    SMF30ERG PIB4.\n                   SMF30ARB PIB4.   SMF30EAR PIB4.    SMF30URB PIB4.\n                   SMF30EUR PIB4.   SMF30RGN PIB4.\n        @ ;\n        IF RUNTIME \u00ac=0 THEN DO;\n        SMFRTPGI = SMF30PGI / RUNTIME;\n        SMFRTPGO = SMF30PGO / RUNTIME;\n        SMFRTREC = SMF30REC / RUNTIME;\n        SMFRTNSW = SMF30NSW / RUNTIME;\n        SMFRTPSI = SMF30PSI / RUNTIME;\n        SMFRTPSO = SMF30PSO / RUNTIME;\n        SMFRTVPI = SMF30VPI / RUNTIME;\n        SMFRTVPO = SMF30VPO / RUNTIME;\n        SMFRTVPR = SMF30VPR / RUNTIME;\n        SMFRTCPI = SMF30CPI / RUNTIME;\n        SMFRTCPR = SMF30CPR / RUNTIME;\n        SMFRTLPI = SMF30LPI / RUNTIME;\n        SMFRTLPR = SMF30LPR / RUNTIME;\n        SMFRTPST = SMF30PST / RUNTIME;\n        SMFRTPSC = SMF30PSC / RUNTIME;\n                            END;\n        OUTPUT STOR;\n      END;\n   END;\n   IF SMF30PON > 0 THEN DO;\n      DO I = 0 TO (SMF30PON - 1);\n        OFF = SMF30POF -3+V + I*SMF30PLN;\n        INPUT @OFF SMF30SRV PIB4.   SMF30CSU PIB4.    SMF30SRB PIB4.\n                   SMF30IO  PIB4.   SMF30MSO PIB4.    SMF30TAT PIB4.\n                   SMF30TET PIB4.   SMF30RES PIB4.    SMF30TRS PIB4.\n        @ ;\n        SMF30TAT=SMF30TAT/977 ;\n        SMF30RES=SMF30RES/977 ;\n        SMFRTSRV=SMF30SRV / RUNTIME;\n        SMFRTCSU=SMF30CSU / RUNTIME;\n        SMFRTSRB=SMF30SRB / RUNTIME;\n        SMFRTIO =SMF30IO  / RUNTIME;\n        SMFRTMSO=SMF30MSO / RUNTIME;\n        IF SMF30CSU > 0 THEN\n        WSET = (SMF30MSO / SMF30CSU) * 500/3; ELSE WSET=0;\n        OUTPUT PERFM;\n      END;\n   END;\n   IF SMF30OON > 0 THEN DO;\n      DO I = 0 TO (SMF30OON - 1);\n        OFF = SMF30OOF -3+V + I*SMF30OLN;\n        INPUT @OFF SMF30PDM PIB4.   SMF30PRD PIB4.    SMF30PTM PIB4.\n                   SMF30TPR PIB4.   SMF30MTM PIB4.    SMF30MSR PIB4.\n        @ ;\n        OUTPUT OPER;\n      END;\n   END;\n   IF SMF30EON > 0 THEN DO;\n   IF SMF30EOR \u00ac= 0 THEN PUT '***** EOR NEQ 0 ***** JOB WAS ' SMF30JBN;\n      DO I = 0 TO (SMF30EON - 1);\n        OFF = SMF30EOF -3+V + I*SMF30ELN;\n        INPUT @OFF SMF30DEV PIB1.   SMF30UTP PIB1.    SMF30CUA PIB2.\n                   SMF30DDN $CHAR8. SMF30BLK PIB4.    SMF30BSZ PIB2.\n                   SMF30DCT PIB2.\n        @ ;\n        SMF30DCT = SMF30DCT * 128 / 1000000;\n        CUMEXCP + SMF30BLK;\n        OUTPUT    EXCP;\n      END;\n   END;\nFORMAT TIMEOUT SMF30IDT SMF30SDT SMF30EDT DATETIME.\n       READTIME WAITTIME RUNTIME\n       SMF30AST SMF30PPS SMF30TAT SMF30RES\n       SMF30CPT SMF30CPS SMF30ICU SMF30ISB TIME.\n       SMF30CUA SMF30SCC HEX4.\n       ;\nPROC PRINTTO UNIT=13;\nPROC PRINT DATA=STARTER;\nTITLE STARTER SECTION;\nPROC PRINTTO UNIT=14;\nPROC PRINT DATA=SUBSYS;\nTITLE SUBSYSTEM SECTION;\nPROC PRINTTO UNIT=15;\nPROC PRINT DATA=IDENT;\nTITLE IDENTIFICATION SECTION;\nPROC PRINTTO UNIT=16;\nPROC PRINT DATA=IOACT;\nTITLE I/O ACTIVITY SECTION;\nPROC PRINTTO UNIT=17;\nPROC PRINT DATA=COMPL;\nTITLE COMPLETION SECTION;\nPROC PRINTTO UNIT=18;\nPROC PRINT DATA=PRACC;\nTITLE PROCESSOR ACCOUNTING SECTION;\nPROC PRINTTO UNIT=19;\nPROC PRINT DATA=ACCNT;\nTITLE ACCOUNTING SECTION;\nPROC PRINTTO UNIT=20;\nPROC PRINT DATA=STOR;\nTITLE STORAGE AND PAGING SECTION;\nPROC PRINTTO UNIT=21;\nPROC PRINT DATA=PERFM;\nTITLE PERFORMANCE SECTION;\nPROC PRINTTO UNIT=22;\nPROC PRINT DATA=OPER;\nTITLE OPERATOR SECTION;\nPROC PRINTTO UNIT=23;\nPROC PRINT DATA=EXCP;\nTITLE EXCP SECTION;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF30SP": {"ttr": 2310, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x90\\x15o\\x00\\x94\\x13o\\x12(\\x01<\\x01%\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1990-06-05T00:00:00", "modifydate": "1994-05-16T12:28:00", "lines": 316, "newlines": 293, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMA JOB (EDPCSBS1),MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//* XA FORMAT\n//* THERE SEEMS TO BE SOMETHING FUNNY ABOUT EXCPS IN PARTICULAR\n//* WHEN INTERVAL RECORDS ARE PUT OUT. TYPE 5 SMF30 MAY BE ZERO FOR\n//* CICS ETC. - MAYBE INTERVAL DATA IS NOT SUMMED IN TYPE 30.\n//*\n//SAS     EXEC SAS606,OPTIONS='NOSOURCE NODATE'\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=OLD\n//*       VOL=SER=702786\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD\n//*ATLIB  DD DSN=C4P2.PROD.JOBS.OCT86,DISP=OLD\n//FT13F001 DD SYSOUT=X\n//FT14F001 DD SYSOUT=X\n//FT15F001 DD SYSOUT=X\n//FT16F001 DD SYSOUT=X\n//FT17F001 DD SYSOUT=X\n//FT18F001 DD SYSOUT=X\n//FT19F001 DD SYSOUT=X\n//FT20F001 DD SYSOUT=X\n//FT21F001 DD SYSOUT=X\n//FT22F001 DD SYSOUT=X\n//FT23F001 DD SYSOUT=X\n//SYSIN   DD *\nTITLE SMF 30;\n  DATA\n STARTER (KEEP = SMF30JBN TIMEOUT  SMFXXSID\n                 SMF30WID SMF30STP  SMF30SOF  SMF30SLN\n                 SMF30SON SMF30IOF  SMF30ILN  SMF30ION\n                 SMF30UOF SMF30ULN  SMF30UON  SMF30TOF\n                 SMF30TIN SMF30TON  SMF30COF  SMF30CLN\n                 SMF30CON SMF30AOF  SMF30ALN  SMF30AON\n                 SMF30ROF SMF30RLN  SMF30RON  SMF30POF\n                 SMF30PLN SMF30PON  SMF30OOF  SMF30OLN\n                 SMF30OON SMF30EOF  SMF30ELN  SMF30EON\n                 SMF30EOR\n        )\n  SUBSYS (KEEP = SMF30JBN I TIMEOUT\n                            SMF30TYP SMF30RS1 SMF30RVN SMF30PNM)\n  IDENT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30PGM SMF30STM SMF30UIF SMF30JNM SMF30STN\n                SMF30CLS SMF30IF1 SMF30PGN SMF30JPT SMF30AST SMF30PPS\n                SMF30IDT SMF30SDT SMF30EDT SMF30USR SMF30GRP SMF30RUD\n                SMF30TID READTIME WAITTIME RUNTIME )\n  IOACT (KEEP = SMF30JBN I TIMEOUT\n                           SMF30INP SMF30TEP SMF30TPT SMF30TGT SMF30RDR\n                SMF30RDT SMF30TCN SMF30MFL)\n  COMPL (KEEP = SMF30JBN I TIMEOUT SMF30SCC SMF30ST1 )\n  PRACC (KEEP = SMF30JBN I TIMEOUT\n                SMF30PTY SMF30RV3 SMF30CPT SMF30CPS SMF30ICU SMF30ISB)\n  ACCNT (KEEP = SMF30JBN I TIMEOUT SMF30ACL SMF30ACT )\n  STOR  (KEEP = SMF30JBN I TIMEOUT\n                SMF30RSV SMF30SFL SMF30SPK SMF30PRV SMF30SYS SMF30PGI\n                SMF30PGO SMF30REC SMF30NSW SMF30PSI SMF30PSO SMF30VPI\n                SMF30VPO SMF30VPR SMF30CPI SMF30CPR SMF30LPI SMF30LPR\n                SMF30PST SMF30PSC SMF30RGB SMF30ERG SMF30ARB SMF30EAR\n                SMF30URB SMF30EUR SMF30RGN SMFRTPGI SMFRTPGO SMFRTREC\n                SMFRTNSW SMFRTPSI SMFRTPSO SMFRTVPI SMFRTVPO SMFRTVPR\n                SMFRTCPI SMFRTCPR SMFRTLPI SMFRTLPR SMFRTPST SMFRTPSC\n                )\n  PERFM (KEEP = SMF30JBN I TIMEOUT\n                SMF30SRV SMF30CSU SMF30SRB SMF30IO  SMF30MSO SMF30TAT\n                SMFRTSRV SMFRTCSU SMFRTSRB SMFRTIO  SMFRTMSO\n                SMF30TET SMF30RES SMF30TRS WSET)\n  OPER  (KEEP = SMF30JBN I TIMEOUT\n                SMF30PDM SMF30PRD SMF30PTM SMF30TPR SMF30MTM SMF30MSR)\n     EXCP  (KEEP = SMF30JBN I TIMEOUT CUMEXCP\n                SMF30DEV SMF30UTP SMF30CUA SMF30DDN SMF30BLK SMF30BSZ\n                SMF30DCT )\n      ;\n  CUMEXCP=0;\n  WW=0;\n  W=4;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 30;\n  INPUT TIMEOUT SMFSTAMP8.\n        SMFXXSID $CHAR4. @;\n  INPUT SMF30WID $CHAR4. SMF30STP PIB2. SMF30SOF PIB4.  SMF30SLN PIB2.\n        SMF30SON PIB2.   SMF30IOF PIB4. SMF30ILN PIB2.  SMF30ION PIB2.\n        SMF30UOF PIB4.   SMF30ULN PIB2. SMF30UON PIB2.  SMF30TOF PIB4.\n        SMF30TIN PIB2.   SMF30TON PIB2. SMF30COF PIB4.  SMF30CLN PIB2.\n        SMF30CON PIB2.   SMF30AOF PIB4. SMF30ALN PIB2.  SMF30AON PIB2.\n        SMF30ROF PIB4.   SMF30RLN PIB2. SMF30RON PIB2.  SMF30POF PIB4.\n        SMF30PLN PIB2.   SMF30PON PIB2. SMF30OOF PIB4.  SMF30OLN PIB2.\n        SMF30OON PIB2.   SMF30EOF PIB4. SMF30ELN PIB2.  SMF30EON PIB2.\n        SMF30EOR PIB2.\n        @;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30IDT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SUBSTR(SMF30JBN,1,8) = 'EDSPDY92';\n   QDATE = DATEPART(TIMEOUT);\n   QTIME = TIMEPART(TIMEOUT);\n   * IF QDATE <= '01JAN00'D OR QDATE >= '31DEC99'D THEN DELETE;\n   * IF QTIME <= '00:00:00'T OR QTIME >= '24:00:00'T THEN DELETE;\n   OUTPUT STARTER;\n   IF SMF30SON > 0 THEN DO;\n      DO I = 0 TO (SMF30SON - 1);\n        OFF = SMF30SOF -3+V + I*SMF30SLN;\n        INPUT @OFF SMF30TYP PIB2. SMF30RS1 PIB2. SMF30RVN $CHAR2.\n        SMF30PNM $CHAR8.\n        @ ;\n        OUTPUT SUBSYS;\n        IF W=SMF30TYP THEN WW+1;\n      END;\n   END;\n   IF WW=0 THEN DELETE;\n   IF SMF30ION > 0 THEN DO;\n      DO I = 0 TO (SMF30ION - 1);\n        OFF = SMF30IOF -3+V + I*SMF30ILN;\n        INPUT @OFF SMF30JBN $CHAR8. SMF30PGM $CHAR8. SMF30STM $CHAR8.\n                   SMF30UIF $CHAR8. SMF30JNM $CHAR8. SMF30STN PIB2.\n                   SMF30CLS $CHAR1. SMF30IF1 PIB1.   SMF30PGN PIB2.\n                   SMF30JPT PIB2.   SMF30AST PIB4.2  SMF30PPS PIB4.2\n                   SMF30IDT SMFSTAMP8.\n                   SMF30SDT SMFSTAMP8.\n                   SMF30EDT SMFSTAMP8.\n                  SMF30USR $CHAR20. SMF30GRP $CHAR8. SMF30RUD $CHAR8.\n                   SMF30TID $CHAR8.\n        @ ;\n             READTIME = SMF30EDT - SMF30SDT;\n             WAITTIME = SMF30IDT - SMF30SDT;\n              RUNTIME = TIMEOUT  - SMF30IDT;\n        OUTPUT IDENT;\n      END;\n   END;\n   IF SMF30UON > 0 THEN DO;\n      DO I = 0 TO (SMF30UON - 1);\n        OFF = SMF30UOF -3+V + I*SMF30ULN;\n        INPUT @OFF SMF30INP PIB4.   SMF30TEP PIB4.   SMF30TPT PIB4.\n                   SMF30TGT PIB4.   SMF30RDR PIB1.   SMF30RDT PIB1.\n                   SMF30TCN PIB4.   SMF30MFL PIB4.\n        @ ;\n        OUTPUT IOACT;\n      END;\n   END;\n   IF SMF30TON > 0 THEN DO;\n      DO I = 0 TO (SMF30TON - 1);\n        OFF = SMF30TOF -3+V + I*SMF30TIN;\n        INPUT @OFF SMF30SCC PIB2.   SMF30ST1 PIB2.\n        @ ;\n        OUTPUT COMPL;\n      END;\n   END;\n   IF SMF30CON > 0 THEN DO;\n      DO I = 0 TO (SMF30CON - 1);\n        OFF = SMF30COF -3+V + I*SMF30CLN;\n        INPUT @OFF SMF30PTY PIB2.   SMF30RV3 PIB2.    SMF30CPT PIB4.2\n                   SMF30CPS PIB4.2  SMF30ICU PIB4.2   SMF30ISB PIB4.2\n        @ ;\n        OUTPUT PRACC;\n      END;\n   END;\n   IF SMF30AON > 0 THEN DO;\n      DO I = 0 TO (SMF30AON - 1);\n        OFF = SMF30AOF -3+V + I*SMF30ALN;\n        INPUT @OFF SMF30ACL PIB1.\n        @ ;\n       *SMF30ACT = '';\n       *IF SMF30ACL > 0 THEN DO J = 0 TO (SMF30ACL-1);\n       *                     INPUT SMFXXACT $CHAR1. @;\n       *                     SMF30ACT = SMF30ACT || SMFXXACT  ;\n       *                     END;\n        OUTPUT ACCNT;\n      END;\n   END;\n   IF SMF30RON > 0 THEN DO;\n      DO I = 0 TO (SMF30RON - 1);\n        OFF = SMF30ROF -3+V + I*SMF30RLN;\n        INPUT @OFF SMF30RSV PIB2.   SMF30SFL PIB1.    SMF30SPK PIB1.\n                   SMF30PRV PIB2.\n                   SMF30SYS PIB2.   SMF30PGI PIB4.    SMF30PGO PIB4.\n                   SMF30REC PIB4.   SMF30NSW PIB4.    SMF30PSI PIB4.\n                   SMF30PSO PIB4.   SMF30VPI PIB4.    SMF30VPO PIB4.\n                   SMF30VPR PIB4.   SMF30CPI PIB4.    SMF30CPR PIB4.\n                   SMF30LPI PIB4.   SMF30LPR PIB4.    SMF30PST PIB4.\n                   SMF30PSC PIB8.   SMF30RGB PIB4.    SMF30ERG PIB4.\n                   SMF30ARB PIB4.   SMF30EAR PIB4.    SMF30URB PIB4.\n                   SMF30EUR PIB4.   SMF30RGN PIB4.\n        @ ;\n        IF RUNTIME \u00ac=0 THEN DO;\n        SMFRTPGI = SMF30PGI / RUNTIME;\n        SMFRTPGO = SMF30PGO / RUNTIME;\n        SMFRTREC = SMF30REC / RUNTIME;\n        SMFRTNSW = SMF30NSW / RUNTIME;\n        SMFRTPSI = SMF30PSI / RUNTIME;\n        SMFRTPSO = SMF30PSO / RUNTIME;\n        SMFRTVPI = SMF30VPI / RUNTIME;\n        SMFRTVPO = SMF30VPO / RUNTIME;\n        SMFRTVPR = SMF30VPR / RUNTIME;\n        SMFRTCPI = SMF30CPI / RUNTIME;\n        SMFRTCPR = SMF30CPR / RUNTIME;\n        SMFRTLPI = SMF30LPI / RUNTIME;\n        SMFRTLPR = SMF30LPR / RUNTIME;\n        SMFRTPST = SMF30PST / RUNTIME;\n        SMFRTPSC = SMF30PSC / RUNTIME;\n                            END;\n        OUTPUT STOR;\n      END;\n   END;\n   IF SMF30PON > 0 THEN DO;\n      DO I = 0 TO (SMF30PON - 1);\n        OFF = SMF30POF -3+V + I*SMF30PLN;\n        INPUT @OFF SMF30SRV PIB4.   SMF30CSU PIB4.    SMF30SRB PIB4.\n                   SMF30IO  PIB4.   SMF30MSO PIB4.    SMF30TAT PIB4.\n                   SMF30TET PIB4.   SMF30RES PIB4.    SMF30TRS PIB4.\n        @ ;\n        SMF30TAT=SMF30TAT/977 ;\n        SMF30RES=SMF30RES/977 ;\n        SMFRTSRV=SMF30SRV / RUNTIME;\n        SMFRTCSU=SMF30CSU / RUNTIME;\n        SMFRTSRB=SMF30SRB / RUNTIME;\n        SMFRTIO =SMF30IO  / RUNTIME;\n        SMFRTMSO=SMF30MSO / RUNTIME;\n        IF SMF30CSU > 0 THEN\n        WSET = (SMF30MSO / SMF30CSU) * 500/3; ELSE WSET=0;\n        OUTPUT PERFM;\n      END;\n   END;\n   IF SMF30OON > 0 THEN DO;\n      DO I = 0 TO (SMF30OON - 1);\n        OFF = SMF30OOF -3+V + I*SMF30OLN;\n        INPUT @OFF SMF30PDM PIB4.   SMF30PRD PIB4.    SMF30PTM PIB4.\n                   SMF30TPR PIB4.   SMF30MTM PIB4.    SMF30MSR PIB4.\n        @ ;\n        OUTPUT OPER;\n      END;\n   END;\n   IF SMF30EON > 0 THEN DO;\n   IF SMF30EOR \u00ac= 0 THEN PUT '***** EOR NEQ 0 ***** JOB WAS ' SMF30JBN;\n      DO I = 0 TO (SMF30EON - 1);\n        OFF = SMF30EOF -3+V + I*SMF30ELN;\n        INPUT @OFF SMF30DEV PIB1.   SMF30UTP PIB1.    SMF30CUA PIB2.\n                   SMF30DDN $CHAR8. SMF30BLK PIB4.    SMF30BSZ PIB2.\n                   SMF30DCT PIB2.\n        @ ;\n        SMF30DCT = SMF30DCT * 128 / 1000000;\n        CUMEXCP + SMF30BLK;\n        OUTPUT    EXCP;\n      END;\n   END;\nFORMAT TIMEOUT SMF30IDT SMF30SDT SMF30EDT DATETIME.\n       READTIME WAITTIME RUNTIME\n       SMF30AST SMF30PPS SMF30TAT SMF30RES\n       SMF30CPT SMF30CPS SMF30ICU SMF30ISB TIME.\n       SMF30CUA SMF30SCC HEX4.\n       ;\nPROC PRINTTO UNIT=13;\nPROC PRINT DATA=STARTER;\nTITLE STARTER SECTION;\nPROC PRINTTO UNIT=14;\nPROC PRINT DATA=SUBSYS;\nTITLE SUBSYSTEM SECTION;\nPROC PRINTTO UNIT=15;\nPROC PRINT DATA=IDENT;\nTITLE IDENTIFICATION SECTION;\nPROC PRINTTO UNIT=16;\nPROC PRINT DATA=IOACT;\nTITLE I/O ACTIVITY SECTION;\nPROC PRINTTO UNIT=17;\nPROC PRINT DATA=COMPL;\nTITLE COMPLETION SECTION;\nPROC PRINTTO UNIT=18;\nPROC PRINT DATA=PRACC;\nTITLE PROCESSOR ACCOUNTING SECTION;\nPROC PRINTTO UNIT=19;\nPROC PRINT DATA=ACCNT;\nTITLE ACCOUNTING SECTION;\nPROC PRINTTO UNIT=20;\nPROC PRINT DATA=STOR;\nTITLE STORAGE AND PAGING SECTION;\nPROC PRINTTO UNIT=21;\nPROC PRINT DATA=PERFM;\nTITLE PERFORMANCE SECTION;\nPROC PRINTTO UNIT=22;\nPROC PRINT DATA=OPER;\nTITLE OPERATOR SECTION;\nPROC PRINTTO UNIT=23;\nPROC PRINT DATA=EXCP;\nTITLE EXCP SECTION;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF32": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x84\"o\\x00\\x90&?\\x12V\\x00Q\\x00C\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1984-08-13T00:00:00", "modifydate": "1990-09-20T12:56:00", "lines": 81, "newlines": 67, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMA JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=ESYS1.SMFDUMPW.TEST,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 32;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 32;\n  INPUT SMF32WID $CHAR4. SMF32F1 PIB2.  SMF32POF PIB4.  SMF32PLN PIB2.\n        SMF32PON PIB2.   SMF32IOF PIB4. SMF32ILN PIB2.  SMF32ION PIB2.\n        SMF32COF PIB4.   SMF32CLN PIB2. SMF32CON PIB2.\n        @;\n    PUT SMF32WID +5 SMF32F1   +5  SMF32POF +5  SMF32PLN +5\n        SMF32PON +5 SMF32IOF  +5  SMF32ILN +5  SMF32ION +5\n        SMF32COF +5 SMF32CLN  +5   SMF32CON\n        ;\n   IF SMF32PON > 0 THEN DO;\n      DO I = 0 TO (SMF32PON - 1);\n        OFF = SMF32POF -3 + I*SMF32PLN +V;\n        INPUT @OFF SMF32TYP PIB2. SMF32RVN $CHAR2.\n        SMF32PNM $CHAR8.\n        @ ;\n          PUT SMF32TYP +5 SMF32RVN +5\n        SMF32PNM\n         ;\n      END;\n   END;\n   IF SMF32ION > 0 THEN DO;\n      DO I = 0 TO (SMF32ION - 1);\n        OFF = SMF32IOF -3 + I*SMF32ILN +V;\n        INPUT @OFF SMF32JBN $CHAR8. SMF32PGM $CHAR8. SMF32STM $CHAR8.\n                   SMF32UIF $CHAR8. SMF32JNM $CHAR8. SMF32STN PIB2.\n                   SMF32ND1 PIB2.   SMF32PGN PIB2.\n                   SMF32JPT PIB2.   SMF32AST PIB4.   SMF32PPS PIB4.\n                   SMF32SIT PIB4.   SMF32STD PD4.    SMF32RST PIB4.\n                   SMF32RSD PD4.    SMF32RET PIB4.   SMF32RED PD4.\n                  SMF32USR $CHAR20. SMF32GRP $CHAR8. SMF32RUD $CHAR8.\n                   SMF32TID $CHAR8.\n        @ ;\n          PUT      SMF32JBN +1      SMF32PGM +1      SMF32STM +1\n                   SMF32UIF +1      SMF32JNM +1      SMF32STN +1\n                   SMF32ND1 +1      SMF32PGN +1\n                   SMF32JPT +1      SMF32AST +1      SMF32PPS +1\n                   SMF32SIT +1      SMF32STD +1      SMF32RST ;\n          PUT      SMF32RSD +1      SMF32RET +1      SMF32RED +1\n                   SMF32USR +1      SMF32GRP +1      SMF32RUD +1\n                   SMF32TID\n          ;\n      END;\n   END;\n   IF SMF32CON > 0 THEN DO;\n      DO I = 0 TO (SMF32CON - 1);\n        OFF = SMF32COF -3 + I*SMF32CLN +V;\n        INPUT @OFF SMF32CMD $CHAR8. SMF32CNT PIB4. @ ;\n          PUT      SMF32CMD +5      SMF32CNT ;\n        IF (SMF32TYP =3) | (SMF32TYP =4) THEN DO;\n              INPUT  SMF32TCB PIB4. SMF32SRB PIB4. SMF32TGT PIB4.\n                     SMF32TPT PIB4. SMF32TRN PIB4. SMF32EXP PIB4.\n             PUT @20 SMF32TCB +5    SMF32SRB +5    SMF32TGT +5\n                     SMF32TPT +5    SMF32TRN +5    SMF32EXP\n          ;\n        END;\n      END;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF34": {"ttr": 2564, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x84#o\\x00\\x90&?\\x13V\\x00c\\x00+\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1984-08-23T00:00:00", "modifydate": "1990-09-20T13:56:00", "lines": 99, "newlines": 43, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE,WORK='9,9'\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF V34;\n  DATA _NULL_;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 34 THEN RETURN;\n    PUT    SMFXXLEN +2    SMFXXSEG +2\n           SMFXXFLG +2    SMFXXRTY @25  TIMEOUT DATETIME. +2\n      SMFXXSID  ;\n      INPUT TIVUIF $CHAR8. TIVONDT SMFSTAMP8.\n      TIVUDATA $CHAR8.  TIVINVSQ PIB1.\n      TIVSIT   PIB4.    TIVOUTCT PIB4.\n      TIVINCT  PIB4.    TIVSTAT  PIB2.\n      TIVPRI   PIB1.    TIVPRGNM $CHAR8.\n      TIVINVNM $CHAR8.  TIVEFRGN PIB2.\n      TIVSYST  PIB2.    TIVMCRE  PIB2.\n      TIVRVC   PIB6.    TIVSPK   PIB1.\n      TIVST1   PIB1.    TIVRV1   PIB2.\n      TIVAST   PIB4.    TIVPPST  PIB4.\n      TIVRV2   PIB1.    TIVSRBT  PIB3.\n      TIVRIN   PIB2.    TIVRLCT  PIB2.\n      TIVVAR   PIB2.\n       @;\n        PUT TIVUIF +1      TIVONDT DATETIME. +1\n      TIVUDATA +1       TIVINVSQ +1\n      TIVSIT   @45      TIVOUTCT @50\n      TIVINCT  @55      TIVSTAT  @60\n      TIVPRI   @65      TIVPRGNM +1\n      TIVINVNM +1       TIVEFRGN +1\n      TIVSYST  +1       TIVMCRE  +1\n      TIVRVC   +1       TIVSPK   +1\n      TIVST1   +1       TIVRV1   ;\n      PUT TIVAST   +1       TIVPPST  +1\n      TIVRV2   +1       TIVSRBT  +1\n      TIVRIN   +1       TIVRLCT  +1\n      TIVVAR\n        ;\n N = (TIVVAR -2)/8;\n   IF N > 0 THEN DO;\n      DO I = 0 TO (N - 1);\n        INPUT      TIVDEVC  PIB1.   TIVUTYP  PIB1.   TIVCUA1 PIB1.\n                   TIVCUA2  PIB1.   TIVNEXCP PIB4.  @ ;\n          PUT       TIVDEVC +1      TIVUTYP +1       TIVCUA1 HEX2. +1\n                    TIVCUA2 HEX2. +1  TIVNEXCP     ;\n      END;\n   END;\n        INPUT      TIVVARA  PIB1.  @;\n          PUT      TIVVARA    ;\n   IF TIVVARA  > 0 THEN DO;\n        INPUT      TIVCPUTM PIB3.  TIVNBRAC PIB1.  @;\n          PUT      TIVCPUTM +1     TIVNBRAC        ;\n   IF TIVNBRAC > 0 THEN;\n      DO I = 0 TO (TIVNBRAC- 1);\n        INPUT TIVACFLD PIB1.\n        @ ;\n          PUT TIVACFLD ;\n       IF TIVACFLD > 0 THEN DO J = 0 TO (TIVACFLD-1);\n                             INPUT  TIVCACT $CHAR1. @;\n                               PUT  TIVCACT         @;\n                             END;\n                             PUT;\n      END;\n   END;\n        OFF = TIVRLCT +5 ;\nINPUT @OFF  TIVPGIN PIB4.    TIVPGOUT PIB4.    TIVRGNS PIB4.\n           TIVSIN   PIB4.    TIVSOUT  PIB4.    TIVVPI  PIB4.\n           TIVVPO   PIB4.    TIVSST   PIB4.    TIVACT  PIB4.\n           TIVPGNO PIB2.     TIVTRANT PIB4.    TIVRECLM PIB4.\n           TIVRCLAM PIB4.    TIVCPIN  PIB4.    TIVCRECL PIB4.\n           TIVPGSTL PIB4.    TIVPGSEC PIB8.    TIVLPAI  PIB4.\n           TIVLPAR  PIB4.     TIVCPUS PIB4.     TIVIOCS PIB4.\n           TIVMSOS  PIB4.     TIVSRBS PIB4.    @ ;\n  PUT       TIVPGIN +1       TIVPGOUT +1       TIVRGNS +1\n           TIVSIN   +1       TIVSOUT  +1       TIVVPI  +1\n           TIVVPO   +1       TIVSST   +1       TIVACT  +1\n           TIVPGNO  +1       TIVTRANT +1       TIVRECLM +1\n           TIVRCLAM +1       TIVCPIN  +1       TIVCRECL +1\n           TIVPGSTL +1       TIVPGSEC +1       TIVLPAI  +1\n           TIVLPAR  +1        TIVCPUS +1        TIVIOCS +1\n           TIVMSOS  +1        TIVSRBS            ;\nPUT 80*'-';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF35": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x84#_\\x00\\x90&?\\tV\\x00A\\x00\"\\x00A\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-20T09:56:00", "lines": 65, "newlines": 34, "modlines": 65, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=0,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE SMF V35;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 35 THEN RETURN;\n    PUT    SMFXXLEN +2    SMFXXSEG +2\n       SMFXXFLG +2    SMFXXRTY @25   TIMEOUT DATETIME. +2\n      SMFXXSID  ;\n      INPUT TLGUIF $CHAR8. TLGONDT SMFSTAMP8.\n      TLGUDATA $CHAR8.  TLGSTPCT PIB1.\n      TLGCRTME PIB4.    TLGOUTCT PIB4.\n      TLGINCT  PIB4.    TLGSTAT  PIB2.\n      TLGPRI   PIB1.    TLGNQDT  SMFSTAMP8.\n      TLGTRMI  PIB1.    TLGOUTCL PIB1. TLGTRANT PIB4.\n      TLGRVC   PIB4.    TLGSPK   PIB1.\n      TLGSRBT  PIB3.    TLGTJS   PIB4.\n      TLGTTAT  PIB4.    TLGNTSN  PIB4.\n      TLGPGNO  PIB2.    TLGRV2   PIB2.\n      TLGVAR   PIB1.    TLGRVB   $CHAR20.\n      TLGCPUTM PIB3.    TLGNBRAC PIB1.\n       @;\n        PUT TLGUIF +1      TLGONDT DATETIME. +1\n      TLGUDATA +1       TLGSTPCT +1\n      TLGCRTME +1       TLGOUTCT +1\n      TLGINCT  +1       TLGSTAT  +1\n      TLGPRI   +1       TLGNQDT  DATETIME. +1\n      TLGTRMI  +1       TLGOUTCL +1 TLGTRANT +1\n      TLGRVC   +1       TLGSPK   +1\n      TLGSRBT  +1       TLGTJS   +1\n      TLGTTAT  +1       TLGNTSN  +1\n      TLGPGNO  +1       TLGRV2   +1\n      TLGVAR   +1       TLGRVB   +1\n      TLGCPUTM +1       TLGNBRAC\n         ;\n        NAC  = TLGNBRAC;\n   IF NAC  > 0 THEN\n   DO I = 0 TO (NAC -1);\n      INPUT  ACFLD   PIB1.  @;\n        PUT  ACFLD   +2      ;\n   IF ACFLD > 0 THEN\n   DO I = 0 TO (ACFLD -1);\n      INPUT  ACFLDX $CHAR1. @;\n        PUT  ACFLDX    @ ;\n   END;\n   PUT;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF37": {"ttr": 2569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x89\\x16?\\x00\\x89\\x16O\\t&\\x00\\x97\\x00/\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1989-06-12T00:00:00", "modifydate": "1989-06-13T09:26:00", "lines": 151, "newlines": 47, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SCRD',MSGCLASS=X,CLASS=2,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFHIST.NOV86.COPY1,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 37;\n  DATA I (KEEP =\n           TIMEOUT\n      SMFXXSID\n      BRFRWID           BRFRSUBT\n      BRFRPRDI          BRFRPRLN         BRFRPRNO\n      BRFALLDI          BRFALLLN         BRFALLNO\n      BRFEVTDI          BRFEVLN          BRFEVNO\n      BRFSTADI          BRFSTALN         BRFSTANO\n      BRFMODDI          BRFMODLN         BRFMODNO\n      BRFLPDDI          BRFLPDLN         BRFLPDNO\n      BRFLANDI          BRFLANLN         BRFLANNO\n         )\n      PRODUCT ( KEEP =\n                   BRFSUBTY         BRFREVLT          BRFPRONM\n                   BRFTIMS1 BRFTIMS2\n         )\n      COMMON  ( KEEP =\n                   BRFDOMNM         BRFLRNM           BRFLRTY\n                   BRFHINM1         BRFHITY1\n                   BRFHINM2         BRFHITY2\n                   BRFHINM3         BRFHITY3\n                   BRFHINM4         BRFHITY4\n                   BRFHINM5         BRFHITY5\n                   BRFCPL           BRFALT\n         )\n      EVENT   ( KEEP =\n                   BRFALRTT         BRFGENCA          BRFSPECA\n                   BRFBLKID         BRFUACD\n                   BRFUAQL1         BRFUAQL2\n                   BRFUAQL3         BRF48TXT\n                   BRFDBKID         BRFDUACD\n                   BRFNMVTY\n         )\n      STATS   ( KEEP =\n                   BRFTRFCC         BRFTEMPS\n         )\n      MODEM   ( KEEP =\n                   BRFFAIL          BRFLNKTY\n                   BRFLMSIN         BRFRMSIN\n                   BRFMODOD         BRFMODTP\n                   BRFMODSP         BRFLNQUL\n                   BRFHTCTL         BRFLDBIN\n                   BRFLDBNO         BRFLNQUR\n                   BRFHTCTR         BRFRDBIN\n                   BRFRDBNO\n         )\n         ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 37;\nINPUT BRFRWID  $CHAR4.  BRFRSUBT $CHAR2.\n      BRFRPRDI PIB4.    BRFRPRLN PIB2.   BRFRPRNO PIB2.\n      BRFALLDI PIB4.    BRFALLLN PIB2.   BRFALLNO PIB2.\n      BRFEVTDI PIB4.    BRFEVLN  PIB2.   BRFEVNO  PIB2.\n      BRFSTADI PIB4.    BRFSTALN PIB2.   BRFSTANO PIB2.\n      BRFMODDI PIB4.    BRFMODLN PIB2.   BRFMODNO PIB2.\n      BRFLPDDI PIB4.    BRFLPDLN PIB2.   BRFLPDNO PIB2.\n      BRFLANDI PIB4.    BRFLANLN PIB2.   BRFLANNO PIB2.\n      @ ;\n      OUTPUT I;\n   IF BRFRPRNO > 0 THEN DO;\n      DO I = 0 TO (BRFRPRNO - 1);\n        OFF = BRFRPRDI -3+V + I*BRFRPRLN;\n        INPUT @OFF BRFSUBTY PIB2.   BRFREVLT PIB1.    BRFPRONM $CHAR4.\n                   BRFTIMS1 PD4.    BRFTIMS2 PD4.\n        @ ;\n        OUTPUT PRODUCT;\n      END;\n   END;\n   IF BRFALLNO > 0 THEN DO;\n      DO I = 0 TO (BRFALLNO - 1);\n        OFF = BRFALLDI -3+V + I*BRFALLLN;\n        INPUT @OFF BRFDOMNM $CHAR8. BRFLRNM  $CHAR8.  BRFLRTY  $CHAR4.\n                   BRFHINM1 $CHAR8. BRFHITY1 $CHAR4.\n                   BRFHINM2 $CHAR8. BRFHITY2 $CHAR4.\n                   BRFHINM3 $CHAR8. BRFHITY3 $CHAR4.\n                   BRFHINM4 $CHAR8. BRFHITY4 $CHAR4.\n                   BRFHINM5 $CHAR8. BRFHITY5 $CHAR4.\n                   BRFCPL   PIB1.   BRFALT   PIB1.\n        @ ;\n        OUTPUT COMMON ;\n      END;\n   END;\n   IF BRFEVNO > 0 THEN DO;\n      DO I = 0 TO (BRFEVNO - 1);\n        OFF = BRFEVTDI -3+V + I*BRFEVLN;\n        INPUT @OFF BRFALRTT PIB1.   BRFGENCA PIB1.    BRFSPECA PIB1.\n                   BRFBLKID PIB2.   BRFUACD  PIB1.\n                   BRFUAQL1 $CHAR8. BRFUAQL2 $CHAR8.\n                   BRFUAQL3 $CHAR8. BRF48TXT $CHAR48.\n                   BRFDBKID PIB2.   BRFDUACD PIB1.\n                   BRFNMVTY PIB1.\n        @ ;\n        OUTPUT EVENT  ;\n      END;\n   END;\n   IF BRFSTANO > 0 THEN DO;\n      DO I = 0 TO (BRFSTANO - 1);\n        OFF = BRFSTADI -3+V + I*BRFSTALN;\n        INPUT @OFF BRFTRFCC PIB4.   BRFTEMPS PIB2.\n        @ ;\n        OUTPUT STATS  ;\n      END;\n   END;\n   IF BRFMODNO > 0 THEN DO;\n      DO I = 0 TO (BRFMODNO - 1);\n        OFF = BRFMODDI -3+V + I*BRFMODLN;\n        INPUT @OFF BRFFAIL  PIB1.   BRFLNKTY PIB1.\n                   BRFLMSIN PIB1.   BRFRMSIN PIB1.\n                   BRFMODOD $CHAR2. BRFMODTP $CHAR6.\n                   BRFMODSP $CHAR4. BRFLNQUL PIB2.\n                   BRFHTCTL PIB2.   BRFLDBIN PIB2.\n                   BRFLDBNO PIB2.   BRFLNQUR PIB2.\n                   BRFHTCTR PIB2.   BRFRDBIN PIB2.\n                   BRFRDBNO PIB2.\n        @ ;\n        OUTPUT MODEM  ;\n      END;\n   END;\nRETURN;\nPROC PRINT DATA=I;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nPROC PRINT DATA=COMMON;\nPROC PRINT DATA=EVENT;\nPROC PRINT DATA=STATS;\nPROC PRINT DATA=MODEM;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF4": {"ttr": 2573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x84#\\x7f\\x00\\x90!\\x1f\\x13\\x07\\x00^\\x00=\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1984-08-24T00:00:00", "modifydate": "1990-07-30T13:07:00", "lines": 94, "newlines": 61, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF4',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY(0),DISP=SHR\n//SYSIN   DD *\nTITLE SMF 4;\n  DATA  DEV (KEEP =\n                                         TIMEOUT\n        SMFXXSID\n        SMF04JBN             SMF04RDT               SMF04UIF\n        SMF04STN\n        SMF04SDT             SMF04NCI               SMF04SCC\n        SMF4PRTY             SMF4PGMN               SMF4STMN\n        SMF4RSH0             SMF4SYST               SMF4HOST\n        SMF4RV1              SMF4SPK                SMF4STI\n        SMF4RV2              SMF4AST                SMF4PPST\n        SMF4RV3              SMF4SRBT               SMF4RIN\n        SMF4RLCT             SMF4LENN\n                   SMF4DEVC         SMF4UTYP         SMF4CUA1\n                   SMF4CUA2         SMF4EXCP\n  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 4;\n  INPUT SMF04JBN $CHAR8.     SMF04RDT  SMFSTAMP8.   SMF04UIF $CHAR8.\n        SMF04STN PIB1.\n        SMF04SDT SMFSTAMP8.  SMF04NCI  PIB4.        SMF04SCC PIB2.\n        SMF4PRTY PIB1.       SMF4PGMN  $CHAR8.      SMF4STMN $CHAR8.\n        SMF4RSH0 PIB2.       SMF4SYST  PIB2.        SMF4HOST PIB2.\n        SMF4RV1  PIB6.       SMF4SPK   PIB1.        SMF4STI  PIB1.\n        SMF4RV2  PIB2.       SMF4AST   PIB4.        SMF4PPST PIB4.\n        SMF4RV3  PIB1.       SMF4SRBT  PIB3.        SMF4RIN  PIB2.\n        SMF4RLCT PIB2.       SMF4LENN  PIB2. @;\n N = (SMF4LENN -2)/8;\n   IF N > 0 THEN DO;\n      DO I = 0 TO (N - 1);\n        INPUT      SMF4DEVC PIB1.   SMF4UTYP PIB1.   SMF4CUA1 PIB1.\n                   SMF4CUA2 PIB1.   SMF4EXCP PIB4.  @ ;\n                   OUTPUT DEV;\n      END;\n   END;\n        INPUT      SMF4LNTH PIB1.  @;\n          PUT      SMF4LNTH   ;\n   IF SMF4LNTH > 0 THEN DO;\n        INPUT      SMF4SETM PIB3.  SMF4NAF PIB1.  @;\n          PUT      SMF4SETM +1     SMF4NAF         ;\n   IF SMF4NAF  > 0 THEN;\n      DO I = 0 TO (SMF4NAF - 1);\n        INPUT SMF4ACF PIB1.\n        @ ;\n          PUT SMF4ACF ;\n        IF SMF4ACF > 0 THEN DO J = 0 TO (SMF4ACF-1);\n                             INPUT SMF4CACT $CHAR1. @;\n                               PUT SMF4CACT         @;\n                             END;\n                             PUT;\n      END;\n   END;\n        OFF = SMF4RLCT -3+V ;\nINPUT @OFF SMF4PGIN PIB4.    SMF4PGOT PIB4.    SMF4NSW PIB4.\n           SMF4PSI  PIB4.    SMF4PSO  PIB4.    SMF4VPI PIB4.\n           SMF4VPO  PIB4.    SMF4SST  PIB4.    SMF4ACT PIB4.\n           SMF4PGNO PIB2.    SMF4TRAN PIB4.    SMF4RECL PIB4.\n           SMF4RCLM PIB4.    SMF4CPGN PIB4.    SMF4CRCL PIB4.\n           SMF4PGST PIB4.    SMF4PSEC PIB8.    SMF4LPAI PIB4.\n           SMF4LPAR PIB4.    SMF4CPUS PIB4.    SMF4IOCS PIB4.\n           SMF4MSOS PIB4.    SMF4SRBS PIB4.    @ ;\n  PUT      SMF4PGIN +1       SMF4PGOT +1       SMF4NSW  +1\n           SMF4PSI  +1       SMF4PSO  +1       SMF4VPI  +1\n           SMF4VPO  +1       SMF4SST  +1       SMF4ACT  +1\n           SMF4PGNO +1       SMF4TRAN +1       SMF4RECL +1\n           SMF4RCLM +1       SMF4CPGN +1       SMF4CRCL +1\n           SMF4PGST +1       SMF4PSEC +1       SMF4LPAI +1\n           SMF4LPAR +1       SMF4CPUS +1       SMF4IOCS +1\n           SMF4MSOS +1       SMF4SRBS            ;\nPUT 80*'-';\nRETURN;\nPROC PRINT DATA=DEV;\nFORMAT TIMEOUT DATETIME. ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF40": {"ttr": 2576, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\x08S\\x00.\\x00#\\x00.\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T08:53:00", "lines": 46, "newlines": 35, "modlines": 46, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 40;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 40 THEN RETURN;\n    PUT    SMFXXLEN +2    SMFXXSEG +2\n           SMFXXFLG +2    SMFXXRTY @25  TIMEOUT DATETIME. +2\n      SMFXXSID  ;\n      INPUT TDDUIF $CHAR8. TDDONDT SMFSTAMP8.\n      TDDUDATA $CHAR8.  TDDINVSQ PIB1.\n      TDDFLG   PIB1.    TDDRIN PIB2.\n      TDDRV1   PIB8.    TDDRV2 PIB8.    TDDRVA PIB2.\n      TDDVAR   PIB2.\n       @;\n        PUT TDDUIF +2      TDDONDT DATETIME.\n      TDDUDATA +2       TDDINVSQ +2\n      TDDFLG   +2       TDDRIN   +2\n      TDDVAR\n        ;\n        NDEV = (TDDVAR -2) / 8;\n   IF NDEV > 0 THEN\n   DO I = 0 TO (NDEV-1);\n      INPUT  TDDDEVC PIB1.  TDDUTYP PIB1.\n             TDDCUA1 PIB1.  TDDCUA2 PIB1.  TDDNEXCP PIB4. @ ;\n        PUT  TDDDEVC +2     TDDUTYP +2\n             TDDCUA1 HEX1.  TDDCUA2 HEX1.  TDDNEXCP   ;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF43": {"ttr": 2578, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x84\"\\x9f\\x00\\x90&O\\t!\\x00\\x1f\\x00\\x11\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-08-16T00:00:00", "modifydate": "1990-09-21T09:21:00", "lines": 31, "newlines": 17, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 43;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 43;\n  INPUT SMF43SBS   PIB2. SMF43RSV PIB2.   SMF43LRR PIB2. @ ;\n PUT SMFXXRTY +5 TIMEOUT DATETIME. +5 SMFXXSID +5\n SMF43SBS +5 SMF43RSV +5 SMF43LRR;\n  IF SMF43LRR \u00ac= 0 THEN DO;\n  INPUT SMF43RV1 PIB2. SMF43RST PIB1. SMF43OPT PIB1. SMF43EID $CHAR4. ;\n    PUT SMF43RV1 +5    SMF43RST +5    SMF43OPT +5    SMF43EID ;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF45": {"ttr": 2818, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\x08U\\x00 \\x00\\x12\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T08:55:00", "lines": 32, "newlines": 18, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 45;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 45;\n  INPUT SMF45SBS   PIB2. SMF45RSV PIB2.   SMF45LRR PIB2. @ ;\n PUT SMFXXRTY +5 TIMEOUT DATETIME. +5\n SMFXXSID +5 SMF45SBS +5 SMF45RSV +5 SMF45LRR;\n  IF SMF45LRR \u00ac= 0 THEN DO;\n  INPUT SMF45IND PIB2.  SMF45CC PIB2. @ ;\n    PUT SMF45IND   +2    SMF45CC\n     ;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF47": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x05\\x0f\\x00\\x91\\x05\\x0f\\x16\\x17\\x00&\\x00&\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-02-19T00:00:00", "modifydate": "1991-02-19T16:17:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=3,NOTIFY=ED115DM\n//*\n//  EXEC SAS606\n//DATLIB DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN DD *\nDATA SMF47 (KEEP =\n       SMF47SBS         SMF47RSV       SMF47LRR\n       SMF47EVT         SMF47LN1       SMF47RMT\n       SMF47LIN         SMF47PSW\n       SMF47LN2         SMF47MSG\n       SMF47RVJ         SMF47RVU\n                  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 47;\n INPUT SMF47SBS PIB2.   SMF47RSV PIB2. SMF47LRR PIB2.\n       SMF47EVT PIB2.   SMF47LN1 PIB2. SMF47RMT $CHAR8.\n       SMF47LIN $CHAR8. SMF47PSW $CHAR8. @;\n INPUT SMF47LN2 PIB2.   SMF47MSG $CHAR36.\n       SMF47RVJ PIB8.   SMF47RVU PIB4.;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF48": {"ttr": 2822, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x05\\x1f\\x00\\x91\\x05\\x1f\\x08U\\x00+\\x00+\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-02-20T00:00:00", "modifydate": "1991-02-20T08:55:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMA JOB EDPCSBS1,MSGCLASS=X,CLASS=3,NOTIFY=ED115DM\n//*\n//  EXEC SAS606\n//DATLIB DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN DD *\nDATA SMF48 (KEEP =\n       SMF48SBS         SMF48RSV       SMF48LRR\n       SMF48EVT         SMF48RV1       SMF48RMT\n       SMF48LIN         SMF48PSW\n       SMF48TRN         SMF48TOT\n       SMF48NKS         SMF48SO1       SMF48SO2\n       SMF48S1          SMF48S21       SMF48S22\n       SMF48S3\n                  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 48;\n INPUT SMF48SBS PIB2.   SMF48RSV PIB2. SMF48LRR PIB2.\n       SMF48EVT PIB2.   SMF48RV1 PIB2. SMF48RMT $CHAR8.\n       SMF48LIN $CHAR8. SMF48PSW $CHAR8. @;\n INPUT SMF48TRN PIB4.   SMF48TOT PIB2.\n       SMF48NKS PIB2.   SMF48SO1 PIB1. SMF48SO2 PIB2.\n       SMF48S1  PIB1.   SMF48S21 PIB1. SMF48S22 PIB2.\n       SMF48S3  PIB1.\n       ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF5": {"ttr": 2824, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x84#\\x7f\\x00\\x90 _\\x15E\\x00;\\x00O\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1984-08-24T00:00:00", "modifydate": "1990-07-24T15:45:00", "lines": 59, "newlines": 79, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF V5;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 5;\n    PUT    SMFXXFLG +2    SMFXXRTY +2    TIMEOUT DATETIME. +2\n        SMFXXSID   ;\n  INPUT SMF05JBN $CHAR8.     SMF05RDT  SMFSTAMP8.   SMF05UIF $CHAR8.\n        SMF05NST PIB1.       SMF05JDT  SMFSTAMP8.   SMF05NCI PIB4.\n        SMF5JCC  PIB2.       SMF5JPTY  PIB1.        SMF5SDT  SMFSTAMP8.\n        SMF5JBTI PIB1.       SMF5SMCI  PIB1.        SMF5TRAN PIB4.\n        SMF5CKRE PIB1.       SMF5RDCL  PIB1.        SMF5RUTY PIB1.\n        SMF5JICL $CHAR1.     SMF5SPK   PIB1.        SMF5SRBT PIB3.\n        SMF5TJS  PIB4.       SMF5TTAT  PIB4.        SMF5RV2  PIB4.\n        SMF5PGNO PIB2.       SMF5RV3   PIB2.        SMF5TLEN PIB1.\n        SMF5PRGN $CHAR20.    SMF5JCPU  PIB3.        SMF5ACTF PIB1.\n                 @;\n    PUT SMF05JBN  +1         SMF05RDT  DATETIME. +1 SMF05UIF +1\n        SMF05NST  +1         SMF05JDT  DATETIME. +1 SMF05NCI +1\n        SMF5JCC   +1         SMF5JPTY  +1           SMF5SDT  +1\n        SMF5JBTI  +1         SMF5SMCI  +1           SMF5TRAN +1\n        SMF5CKRE  +1         SMF5RDCL  +1           SMF5RUTY +1\n        SMF5JICL  +1         SMF5SPK   +1           SMF5SRBT +1\n        SMF5TJS   +1         SMF5TTAT  +1           SMF5RV2  +1\n        SMF5PGNO  +1         SMF5RV3   +1           SMF5TLEN +1\n        SMF5PRGN  +1         SMF5JCPU  +1           SMF5ACTF\n                  ;\n N = SMF5ACTF;\n   IF N  > 0 THEN;\n      DO I = 0 TO (N - 1);\n        INPUT SMF5JSAF PIB1.\n        @ ;\n          PUT SMF5JSAF;\n        IF SMF5JSAF>0 THEN  DO J = 0 TO (SMF5JSAF-1);\n                             INPUT SMF5CACT $CHAR1. @;\n                               PUT SMF5CACT         @;\n                             END;\n                             PUT;\n      END;\nPUT 80*'-';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF50": {"ttr": 2826, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x84#O\\x00\\x91\\x17/\\x10\\x01\\x00\"\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1984-08-21T00:00:00", "modifydate": "1991-06-21T10:01:00", "lines": 34, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,MSGCLASS=X,CLASS=2,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS606,OPTIONS=NODATE\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 50;\n  DATA;\n  DROP V SMFXXLEN SMFXXSEG SMFXXFLG SMFXXRTY;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;  * MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 50;\n  INPUT SMF50NME $CHAR8. SMF50DLR PIB4.    SMF50CWR PIB4.\n        SMF50CRD   PIB4. SMF50ATN PIB4.    SMF50ATR PIB4.\n        SMF50PUI   PIB4. SMF50PUO PIB4.    SMF50BUF PIB4.\n        SMF50SLD   PIB4.\n   @ ;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF52": {"ttr": 2828, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x84\"o\\x00\\x90&O\\x08W\\x004\\x00\\x11\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-08-13T00:00:00", "modifydate": "1990-09-21T08:57:00", "lines": 52, "newlines": 17, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 52;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 52;\n  INPUT SMFPROFF   PIB2. SMFPRLEN PIB2.    SMFPRNUM PIB2.\n        SMFIDOFF   PIB2. SMFIDLEN PIB2.    SMFIDNUM PIB2.\n   @ ;\n    PUT SMFPROFF   +5    SMFPRLEN +5       SMFPRNUM +5\n        SMFIDOFF   +5    SMFIDLEN +5       SMFIDNUM +5\n     ;\n   IF SMFPRNUM > 0 THEN DO;\n      DO I = 0 TO (SMFPRNUM - 1);\n        OFF = SMFPROFF -3 + I*SMFPRLEN;\n        INPUT @OFF SMFSUBID PIB2. SMFVERNO $CHAR2.\n        SMFSYSNM $CHAR8.\n        @ ;\n          PUT SMFSUBID +5 SMFVERNO +5\n        SMFSYSNM\n         ;\n      END;\n   END;\n   IF SMFIDNUM > 0 THEN DO;\n      DO I = 0 TO (SMFIDNUM - 1);\n        OFF = SMFIDOFF -3 + I*SMFIDLEN;\n        INPUT @OFF SMF52RMT $CHAR8. SMF52LIN $CHAR8.\n        SMF52PSW $CHAR8.\n        @ ;\n          PUT SMF52RMT +5 SMF52LIN +5\n        SMF52PSW\n         ;\n      END;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF53": {"ttr": 2830, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\t\\x02\\x007\\x00*\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T09:02:00", "lines": 55, "newlines": 42, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 53;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 53;\n  INPUT SMFPROFF   PIB2. SMFPRLEN PIB2.    SMFPRNUM PIB2.\n        SMFIDOFF   PIB2. SMFIDLEN PIB2.    SMFIDNUM PIB2.\n   @ ;\n    PUT SMFPROFF   +5    SMFPRLEN +5       SMFPRNUM +5\n        SMFIDOFF   +5    SMFIDLEN +5       SMFIDNUM +5\n     ;\n   IF SMFPRNUM > 0 THEN DO;\n      DO I = 0 TO (SMFPRNUM - 1);\n        OFF = SMFPROFF -3 + I*SMFPRLEN;\n        INPUT @OFF SMFSUBID PIB2. SMFVERNO $CHAR2.\n        SMFSYSNM $CHAR8.\n        @ ;\n          PUT SMFSUBID +5 SMFVERNO +5\n        SMFSYSNM\n         ;\n      END;\n   END;\n   IF SMFIDNUM > 0 THEN DO;\n      DO I = 0 TO (SMFIDNUM - 1);\n        OFF = SMFIDOFF -3 + I*SMFIDLEN;\n        INPUT @OFF SMF53RMT $CHAR8. SMF53LIN $CHAR8.\n        SMF53PSW $CHAR8.    SMF53CTR PIB4.     SMF53A4 PIB4.\n        SMF53A8  PIB4.      SMF53A12 PIB4.     SMF53A16  PIB4.\n        SMF53ADP $CHAR3.\n        @ ;\n          PUT SMF53RMT +5 SMF53LIN +5 SMF53PSW +5 SMF53CTR\n           +5 SMF53A4  +5 SMF53A8  +5 SMF53A12 +5 SMF53A16\n           +5 SMF53ADP\n         ;\n      END;\n   END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF55": {"ttr": 2832, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\t\\x06\\x00 \\x00\\x13\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T09:06:00", "lines": 32, "newlines": 19, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 55;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 55;\n  INPUT SMF55RSV   PIB2. SMF55LEN PIB2.    SMF55NNM $CHAR8.\n        SMF55MEM   PIB1. SMF55FLG PIB1.    SMF55LPW $CHAR8.\n        SMF55NPW $CHAR8. SMF55LNM $CHAR8.\n   @ ;\n    PUT SMF55RSV   +5    SMF55LEN +5       SMF55NNM +5\n        SMF55MEM   +5    SMF55FLG +5       SMF55LPW +5\n        SMF55NPW   +5    SMF55LNM\n     ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF57": {"ttr": 2834, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\t\"\\x00)\\x00\\x1b\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T09:22:00", "lines": 41, "newlines": 27, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 57;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 57;\n  INPUT SMFSSRSV   PIB2. SMFSSLEN PIB2.    @ ;\n    PUT SMFXXRTY +5 TIMEOUT DATETIME. +5 SMFXXSID +5\n  SMFSSRSV   +5    SMFSSLEN ;\n  IF SMFSSLEN \u00ac= 0 THEN DO;\n  INPUT SMF57JID $CHAR8.\n        SMF57CJD $CHAR8. SMF57ONN $CHAR8.  SMF57ENN $CHAR8.\n        SMF57NNN $CHAR8. SMF57DVN $CHAR8.  SMF57TSS PIB4.\n        SMF57DSS PD4.    SMF57TPS PIB4.    SMF57OPS PD4.\n        SMF57ACN $CHAR8. SMF57SID $CHAR4.  SMF57CNT PIB4.\n   @ ;\n    PUT SMFSSRSV   +2    SMFSSLEN   +2     SMF57JID    +2\n        SMF57CJD   +2    SMF57ONN   +2     SMF57ENN    +2\n        SMF57NNN   +2    SMF57DVN   +2     SMF57TSS    +2\n        SMF57DSS   +2    SMF57TPS   +2     SMF57OPS    +2\n        SMF57ACN   +2    SMF57SID   +2     SMF57CNT\n     ;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF58": {"ttr": 2836, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\x12P\\x00#\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T12:50:00", "lines": 35, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 58;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 58;\n  INPUT SMFSSID PIB2.  SMFSSRSV   PIB2. SMFSSLEN PIB2.    @ ;\n  PUT SMFXXRTY +5 TIMEOUT DATETIME. +5 SMFXXSID +5\n  SMFSSID +5 SMFSSRSV +5 SMFSSLEN;\n  IF SMFSSLEN \u00ac= 0 THEN DO;\n  INPUT SMF58NNM $CHAR8. SMF58MEM PIB1.    SMF58RV1 PIB1.\n        SMF58LNM $CHAR8.\n   @ ;\n    PUT SMF58NNM +5      SMF58MEM +5       SMF58RV1 +5\n        SMF58LNM\n     ;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF6": {"ttr": 2838, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x84!/\\x00\\x99\\x00\\x8f\\x126\\x00+\\x00\\x1b\\x00\\x1f\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1984-07-30T00:00:00", "modifydate": "1999-01-08T12:36:00", "lines": 43, "newlines": 27, "modlines": 31, "user": "C4SYSDM"}, "text": "//C4SYSDMT JOB C4SYS000,'SMF6',MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM\n//*\n//*MAIN PROC=C4\n//SAS     EXEC EDSAS609,OPTIONS=NODATE\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//SYSIN   DD *\nTITLE SMF 6;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V='Y'; ELSE V='N';\n                  END;\n  IF V='Y' THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  DTE = DATEPART(TIMEOUT);\n  TME = TIMEPART(TIMEOUT);\n  INFILE DATLIB;\n  IF SMFXXRTY = 6;\n  INPUT     SMF6JBN $CHAR8. SMF6RST PIB4. SMF6RSD PD4. SMF6UIF $CHAR8.\n            SMF6OWC $CHAR1. SMF6WST PIB4. SMF6WSD PD4. SMF6NLR PIB4.\n            SMF6IOE PIB1.   SMF6NDS PIB1. SMF6FMN $CHAR4.\n            SMF6PAD1 PIB1.  SMF6SBS PIB2. SMF6LN1 PIB2.\n            SMF6DCI PIB2.   SMF6JNM $CHAR4. SMF6OUT $CHAR8.\n            SMF6FCB $CHAR4. SMF6UCS $CHAR4. SMF6PGE PIB4.\n            SMF6RTE PIB2.\n            ;\nRETURN;\nPROC PRINT;\nFORMAT DTE     DATE.;\nFORMAT TME     TIME.;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF60": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x850_\\x00\\x96$o\\x11\\x00\\x00E\\x00\\x14\\x00=\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1985-11-01T00:00:00", "modifydate": "1996-09-02T11:00:00", "lines": 69, "newlines": 20, "modlines": 61, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'SMF60',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*       DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.C4#1.SMFDAILY.COPY1,DISP=OLD,UNIT=CART,\n//* VOL=SER=(600658,603061)\n//SYSIN   DD *\nTITLE SMF 60;\n  DATA  INIT (KEEP =   TIMEOUT SMFXXSID\n        SMF60SBS       SMF60SUB\n        SMF60POF       SMF60PLN       SMF60PNO\n        SMF60DOF       SMF60DLN       SMF60DNO )\n      PROD (KEEP = SMF60VER\n                   SMF60PNM )\n      DAT  (KEEP = SMF60JNM\n                   SMF60DT\n                   SMF60UID\n                   SMF60FNC\n                   SMF60CNM )\n        ;\n  RETAIN V;\n  INFILE DATLIB      JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 60;\n  INPUT SMF60SBS PIB4. SMF60SUB $CHAR2.\n        SMF60POF PIB4. SMF60PLN PIB2. SMF60PNO PIB2.\n        SMF60DOF PIB4. SMF60DLN PIB2. SMF60DNO PIB2.  @;\n   IF SMF60PNO > 0 THEN DO;\n      DO I = 0 TO (SMF60PNO - 1);\n        OFF = SMF60POF -3+V + I*SMF60PLN;\n        INPUT @OFF SMF60VER   $CHAR2.\n                   SMF60PNM   $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF60DNO > 0 THEN DO;\n      DO I = 0 TO (SMF60DNO - 1);\n        OFF = SMF60DOF -3+V + I*SMF60DLN;\n        INPUT @OFF SMF60JNM   $CHAR8.\n                   SMF60DT    SMFSTAMP8.\n                   SMF60UID   $CHAR8.\n                   SMF60FNC   PIB1.\n                   SMF60CNM   $CHAR44.\n        @ ;\n      END;\n   END;\nRETURN;\nPROC PRINT DATA=INIT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PROD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DAT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF60DT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF61": {"ttr": 3075, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x88\\x14_\\x00\\x96$o\\x11$\\x00I\\x00I\\x00\\x07\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1988-05-24T00:00:00", "modifydate": "1996-09-02T11:24:00", "lines": 73, "newlines": 73, "modlines": 7, "user": "ED115DM"}, "text": "//C4SYSDM1 JOB EDPCSBS1,'SMF61',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.C4#1.SMFDAILY.COPY1,DISP=OLD,UNIT=CART,\n//* VOL=SER=(600658,603061)\n//SYSIN   DD *\nTITLE SMF 61;\n  DATA  INIT (KEEP =   TIMEOUT SMFXXSID\n        SMF61SBS       SMF61SUB\n        SMF61POF       SMF61PLN       SMF61PNO\n        SMF61DOF       SMF61DLN       SMF61DNO )\n      PROD (KEEP = SMF61VER\n                   SMF61PNM )\n      DAT  (KEEP = SMF61JNM\n                   SMF61DT\n                   SMF61UID\n                   SMF61FNC\n                   SMF61CNM\n                   SMF61TYP\n                   SMF61ENM )\n        ;\n  RETAIN V;\n  INFILE DATLIB      JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 61;\n  INPUT SMF61SBS PIB4. SMF61SUB $CHAR2.\n        SMF61POF PIB4. SMF61PLN PIB2. SMF61PNO PIB2.\n        SMF61DOF PIB4. SMF61DLN PIB2. SMF61DNO PIB2.  @;\n   IF SMF61PNO > 0 THEN DO;\n      DO I = 0 TO (SMF61PNO - 1);\n        OFF = SMF61POF -3+V + I*SMF61PLN;\n        INPUT @OFF SMF61VER   $CHAR2.\n                   SMF61PNM   $CHAR8.\n        @ ;\n      END;\n   END;\n   IF SMF61DNO > 0 THEN DO;\n      DO I = 0 TO (SMF61DNO - 1);\n        OFF = SMF61DOF -3+V + I*SMF61DLN;\n        INPUT @OFF SMF61JNM   $CHAR8.\n                   SMF61DT    SMFSTAMP8.\n                   SMF61UID   $CHAR8.\n                   SMF61FNC   PIB1.\n                   SMF61CNM   $CHAR44.\n                   SMF61TYP   $CHAR1.\n                   SMF61ENM   $CHAR44.\n        @ ;\n      END;\n   END;\nRETURN;\nPROC PRINT DATA=INIT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PROD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DAT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF61DT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF62": {"ttr": 3078, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90&?\\x00\\x96$o\\x11\\x00\\x00,\\x00,\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-09-20T00:00:00", "modifydate": "1996-09-02T11:00:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SMF62',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 62;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 62;\n    PUT    SMFXXFLG +2    SMFXXRTY +2    TIMEOUT DATETIME. +2\n        SMFXXSID   ;\n  INPUT SMF62JBN $CHAR8.     SMF62RST  PIB4.        SMF62RSD PD4.\n        SMF62UIF $CHAR8.     SMF62IND  PIB4.        SMF62CNM $CHAR44.\n        SMF62CVS $CHAR6.     SMF62DNM  $CHAR44.     SMF62VCT PIB2.\n        @ ;\n    SMF62RST=SMF62RST/100;\n    PUT SMF62JBN +1          SMF62RST      TIME. +1 SMF62RSD +1\n        SMF62UIF +1          SMF62IND  +1           SMF62CNM +1\n        SMF62CVS +1          SMF62DNM  +1           SMF62VCT +1\n          ;\n   N = SMF62VCT;\n   IF N > 0 THEN DO;\n      DO I = 0 TO (N - 1);\n      INPUT      SMF62VSR $CHAR6.   SMF62DTY PIB4.\n                 @ ;\n        PUT      SMF62VSR   +1      SMF62DTY HEX8.\n                   ;\n                 END;\nPUT 80*'-';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF63": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x96$o\\x00\\x96$o\\x11G\\x00&\\x00\\x1e\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-09-02T00:00:00", "modifydate": "1996-09-02T11:47:00", "lines": 38, "newlines": 30, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SMF63',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 63;\n  DATA D63 (KEEP =\n           TIMEOUT\n      SMFXXSID\n        SMF63SMI             SMF63JBN               SMF63RST\n        SMF63RSD             SMF63UIF               SMF63FDT\n        SMF63TYP             SMF63NSZ               SMF63OSZ\n        SMF63CNM             SMF63ENM\n  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 63;\n  INPUT SMF63SMI $CHAR2.     SMF63JBN  $CHAR8.      SMF63RST PIB4.\n        SMF63RSD PD4.        SMF63UIF  $CHAR8.      SMF63FDT PIB1.\n        SMF63TYP PIB1.       SMF63NSZ  PIB2.        SMF63OSZ PIB2.\n        SMF63CNM $CHAR44.    SMF63ENM  $CHAR44.\n        @ ;\nRETURN;\nPROC PRINT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF64": {"ttr": 3082, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x05\\x1f\\x00\\x96$o\\x11\\x00\\x00W\\x00K\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-02-20T00:00:00", "modifydate": "1996-09-02T11:00:00", "lines": 87, "newlines": 75, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SMF64',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS    EXEC  EDSAS608,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 64;\n  DATA SMF64 (KEEP =\n           TIMEOUT\n      SMFXXSID\n        SMF64JBN             SMF64RST               SMF64RSD\n        SMF64JIF             SMF64RIN               SMF64DTY\n        SMF64CNM             SMF64DNM               SMF64NTR\n        SMF64CHR             SMF64ESL\n        )\n  XTENT (KEEP =  SMF64FCC           SMF64TCC\n                 SMF64VSN           SMF64CUU\n                                    SMF64IND\n                 SMF64UTY           SMF64RV1\n           TIMEOUT\n  )\n  STATS (KEEP =\n           TIMEOUT\n        SMF64SLN         SMF64NIL          SMF64NEX\n        SMF64NLR         SMF64NDE          SMF64NIN\n        SMF64NUP         SMF64NRE          SMF64NFS\n        SMF64NCS         SMF64NAS          SMF64NEP\n                         SMF64DIL          SMF64DEX\n        SMF64DLR         SMF64DDE          SMF64DIN\n        SMF64DUP         SMF64DRE          SMF64DFS\n        SMF64DCS         SMF64DAS          SMF64DEP\n        SMF64DBS         SMF64DCI          SMF64DLS\n        SMF64DKL         SMF64DDN\n        )\n    ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 64;\n  INPUT SMF64JBN $CHAR8.     SMF64RST  PIB4.        SMF64RSD PD4.\n        SMF64JIF $CHAR8.     SMF64RIN  PIB1.        SMF64DTY PIB1.\n        SMF64CNM $CHAR44.    SMF64DNM  $CHAR44.     SMF64NTR PIB2.\n        SMF64CHR PIB4.       SMF64ESL  PIB2.\n        @ ;\n   N = SMF64ESL/26;\n   IF N > 0 THEN\n      DO I = 0 TO (N - 1);\n      INPUT      SMF64FCC PIB4.     SMF64TCC PIB4.\n                 SMF64VSN $CHAR6.   SMF64CUU PIB2.\n                                    SMF64IND PIB2.\n                 SMF64UTY PIB4.     SMF64RV1 PIB4.\n                 @ ;\n      OUTPUT XTENT;\n      END;\nOUTPUT SMF64;\n  INPUT SMF64SLN PIB4.   SMF64NIL PIB4.    SMF64NEX PIB4.\n        SMF64NLR PIB4.   SMF64NDE PIB4.    SMF64NIN PIB4.\n        SMF64NUP PIB4.   SMF64NRE PIB4.    SMF64NFS PIB4.\n        SMF64NCS PIB4.   SMF64NAS PIB4.    SMF64NEP PIB4.\n                         SMF64DIL PIB4.    SMF64DEX PIB4.\n        SMF64DLR PIB4.   SMF64DDE PIB4.    SMF64DIN PIB4.\n        SMF64DUP PIB4.   SMF64DRE PIB4.    SMF64DFS PIB4.\n        SMF64DCS PIB4.   SMF64DAS PIB4.    SMF64DEP PIB4.\n        SMF64DBS PIB4.   SMF64DCI PIB4.    SMF64DLS PIB4.\n        SMF64DKL PIB2.   SMF64DDN $CHAR8.\n        @;\nOUTPUT STATS;\nRETURN;\nPROC PRINT DATA=SMF64;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=XTENT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=STATS;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF65": {"ttr": 3085, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00\\x87'\\x9f\\x00\\x96$o\\x11\\x01\\x00@\\x00A\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1987-10-06T00:00:00", "modifydate": "1996-09-02T11:01:00", "lines": 64, "newlines": 65, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMS JOB EDPCSBS1,'SMF65',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//*\n//SAS    EXEC  EDSAS608,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//*ATLIB  DD DSN=EDH1.PROD.C4#3.SMFDAILY.COPY1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 65;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 65;\n  INPUT SMF65SBS PIB4.       SMF65SUB  $CHAR2.      SMF65POF PIB4.\n        SMF65PLN PIB2.       SMF65PNO  PIB2.        SMF65DOF PIB4.\n        SMF65DLN PIB2.       SMF65DNO  PIB2.\n        @ ;\n    PUT SMF65SBS +1          SMF65SUB  +1           SMF65POF +1\n        SMF65PLN +1          SMF65PNO  +1           SMF65DOF +1\n        SMF65DLN +1          SMF65DNO\n          ;\n   N = SMF65PNO;\n   IF N > 0 THEN\n      DO I = 0 TO (N - 1);\n      INPUT      SMF65VER $CHAR2.   SMF65PNM $CHAR8.\n                 @ ;\n        PUT      SMF65VER   +1      SMF65PNM +1\n                   ;\n                 END;\n   N = SMF65DNO;\n   IF N > 0 THEN\n      DO I = 0 TO (N - 1);\n      INPUT      SMF65JNM $CHAR8.   SMF65RST PIB4.\n                 SMF65RDT PD4.      SMF65UID $CHAR8.\n                 SMF65FNC $CHAR1.   SMF65CNM $CHAR44.\n                 SMF65TYP $CHAR1.   SMF65ENM $CHAR44.\n                 SMF65NNM $CHAR44.  SMF65CRC PIB2.\n                 @ ;\n      SMF65RST=SMF65RST/100;\n        PUT      SMF65JNM   +1      SMF65RST TIME. +1\n                 SMF65RDT   +1      SMF65UID       +1\n                 SMF65FNC   +1      SMF65CNM       +1\n                 SMF65TYP   +1      SMF65ENM       +1\n                 SMF65NNM   +1      SMF65CRC       +1\n                   ;\n      SMF65CRC=SMF65CRC-2;\n      IF SMF65CRC >0 THEN DO;\n                          INPUT SMF65CTE  $VARYING120. SMF65CRC ;\n                            PUT SMF65CTE  ;\n                          END;\n                 END;\nPUT 80*'-';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF66": {"ttr": 3087, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x843_\\x00\\x96$o\\x11\\x01\\x00B\\x006\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1984-11-30T00:00:00", "modifydate": "1996-09-02T11:01:00", "lines": 66, "newlines": 54, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB  DD DSN=IPOSAV.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 66;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF; * MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 66;\n    PUT    SMFXXFLG +2    SMFXXRTY +2    TIMEOUT DATETIME. +2\n        SMFXXSID   ;\n  INPUT SMF66SBS PIB4.       SMF66SUB  $CHAR2.      SMF66POF PIB4.\n        SMF66PLN PIB2.       SMF66PNO  PIB2.        SMF66DOF PIB4.\n        SMF66DLN PIB2.       SMF66DNO  PIB2.\n        @ ;\n    PUT SMF66SBS +1          SMF66SUB  +1           SMF66POF +1\n        SMF66PLN +1          SMF66PNO  +1           SMF66DOF +1\n        SMF66DLN +1\n          ;\n   N = SMF66PNO;\n   IF N > 0 THEN\n      DO I = 0 TO (N - 1);\n      INPUT      SMF66VER $CHAR2.   SMF66PNM $CHAR8.\n                 @ ;\n        PUT      SMF66VER   +1      SMF66PNM +1\n                   ;\n                 END;\n   N = SMF66DNO;\n   IF N > 0 THEN\n      DO I = 0 TO (N - 1);\n      INPUT      SMF66JNM $CHAR8.   SMF66RST PIB4.\n                 SMF66RDT PD4.      SMF66UID $CHAR8.\n                 SMF66FNC $CHAR1.   SMF66CNM $CHAR44.\n                 SMF66TYP $CHAR1.   SMF66ENM $CHAR44.\n                 SMF66NNM $CHAR44.  SMF66CRC PIB2.\n                 @ ;\n      SMF66RST=SMF66RST/100;\n        PUT      SMF66JNM   +1      SMF66RST TIME. +1\n                 SMF66RDT   +1      SMF66UID       +1\n                 SMF66FNC   +1      SMF66CNM       +1\n                 SMF66TYP   +1      SMF66ENM       +1\n                 SMF66NNM   +1      SMF66CRC       +1\n                   ;\n      SMF66CRC=SMF66CRC-2;\n      IF SMF66CRC >0 THEN DO;\n                          INPUT SMF66CTE  $VARYING120. SMF66CRC ;\n                            PUT SMF66CTE  ;\n                          END;\n                 END;\nPUT 80*'-';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF70": {"ttr": 3089, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\"\\x00\\x00\\x00\\x84\"\\x8f\\x00\\x963?\\tQ\\x00\\xfe\\x00\\x1b\\x00\\xfe\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.34", "flags": 0, "createdate": "1984-08-15T00:00:00", "modifydate": "1996-11-28T09:51:00", "lines": 254, "newlines": 27, "modlines": 254, "user": "ED115DM"}, "text": "//C4SYSDM0 JOB EDPCSBS1,'RMF70',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB DD DSN=EDH1.PROD.SMFHIST.DEC95.COPY1,DISP=SHR,DCB=(BUFNO=19)\n//*ATLIB DD DSN=EDH1.PROD.RMFFEB96,DISP=SHR,DCB=(BUFNO=19)\n//*ATLIB DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR,DCB=(BUFNO=19)\n//DATLIB DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 70';\nDATA T70 (KEEP = TIMEOUT SMFXXSID\n        SMF70SSI          SMF70STY        SMF70TRN\n        SMF70RV1          SMF70PRS        SMF70PRL\n        SMF70PRN          SMF70CCS        SMF70CCL\n        SMF70CCN          SMF70CPS        SMF70CPL\n        SMF70CPN          SMF70ASS        SMF70ASL\n        SMF70ASN          SMF70BCS        SMF70BCL\n        SMF70BCN          SMF70BVS        SMF70BVL\n        SMF70BVN\n        )\n     PRODUCT (KEEP = TIMEOUT\n             SMF70MFV          SMF70PRD           SMF70IST\n             SMF70DAT          SMF70INT           SMF70MFL\n             SMF70SAM          SMF70RV2           SMF70FLA\n             SMF70RLS          SMF70CYC           SMF70MVS\n             SMF70IML          SMF70PRF           SMF70PTN\n             SMF70SRL          SMF70IET\n             )\n     CCONTROL (KEEP = TIMEOUT\n             SMF70MOD          SMF70VER\n             SMF70BNP          SMF70INB\n             SMF70RVA          SMF70GTS\n             )\n     CDATA    (KEEP = TIMEOUT\n             SMF70WAT          SMF70CID           SMF70CNF\n             SMF70RV3          SMF70SER           SMF70RV4\n             SMF70SLH          SMF70TPI           CPUBSYPC\n             SMF70VFS          SMF70V             SMF70AL1\n             )\n     ASID     (KEEP = TIMEOUT\n         SMF70RMN           SMF70RMM            SMF70RTT\n         SMF70R00           SMF70R01            SMF70R02\n         SMF70R03           SMF70R04            SMF70R05\n         SMF70R06           SMF70R07            SMF70R08\n         SMF70R09           SMF70R10            SMF70R11\n         SMF70R12           SMF70R13            SMF70R14\n         SMF70R15           SMF70IMN            SMF70IMM\n         SMF70ITT           SMF70I00            SMF70I01\n         SMF70I02           SMF70I03            SMF70I04\n         SMF70I05           SMF70I06            SMF70I07\n         SMF70I08           SMF70I09            SMF70I10\n         SMF70I11           SMF70OMN            SMF70OMM\n         SMF70OTT           SMF70O00            SMF70O01\n         SMF70O02           SMF70O03            SMF70O04\n         SMF70O05           SMF70O06            SMF70O07\n         SMF70O08           SMF70O09            SMF70O10\n         SMF70O11           SMF70WMN            SMF70WMM\n         SMF70WTT           SMF70W00            SMF70W01\n         SMF70W02           SMF70W03            SMF70W04\n         SMF70W05           SMF70W06            SMF70W07\n         SMF70W08           SMF70W09            SMF70W10\n         SMF70W11           SMF70BMN            SMF70BMM\n         SMF70BTT           SMF70B00            SMF70B01\n         SMF70B02           SMF70B03            SMF70B04\n         SMF70B05           SMF70B06            SMF70B07\n         SMF70B08           SMF70B09            SMF70B10\n         SMF70B11           SMF70SMN            SMF70SMM\n         SMF70STT           SMF70S00            SMF70S01\n         SMF70S02           SMF70S03            SMF70S04\n         SMF70S05           SMF70S06            SMF70S07\n         SMF70S08           SMF70S09            SMF70S10\n         SMF70S11           SMF70TMN            SMF70TMM\n         SMF70TTT           SMF70T00            SMF70T01\n         SMF70T02           SMF70T03            SMF70T04\n         SMF70T05           SMF70T06            SMF70T07\n         SMF70T08           SMF70T09            SMF70T10\n         SMF70T11           SMF70LMN            SMF70LMM\n         SMF70LTT           SMF70L00            SMF70L01\n         SMF70L02           SMF70L03            SMF70L04\n         SMF70L05           SMF70L06            SMF70L07\n         SMF70L08           SMF70L09            SMF70L10\n         SMF70L11           SMF70AMN            SMF70AMM\n         SMF70ATT           SMF70A00            SMF70A01\n         SMF70A02           SMF70A03            SMF70A04\n         SMF70A05           SMF70A06            SMF70A07\n         SMF70A08           SMF70A09            SMF70A10\n         SMF70A11           SMF70PMN            SMF70PMM\n         SMF70PTT           SMF70P00            SMF70P01\n         SMF70P02           SMF70P03            SMF70P04\n         SMF70P05           SMF70P06            SMF70P07\n         SMF70P08           SMF70P09            SMF70P10\n         SMF70P11\n             )\n     PRSM     (KEEP = TIMEOUT\n             SMF70LPM          SMF70LPN           SMF70PFG\n             SMF70BDN          SMF70BDS\n             )\n     LOGP     (KEEP = TIMEOUT\n             SMF70PDT          SMF70VPA           SMF70BPS\n             SMF70VPF          SMF70RVX           SMF70EDT\n                               SMF70RVY\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 70;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF70SSI $CHAR4.  SMF70STY PIB2.  SMF70TRN PIB2.\n        SMF70RV1 PIB2.    SMF70PRS PIB4.  SMF70PRL PIB2.\n        SMF70PRN PIB2.    SMF70CCS PIB4.  SMF70CCL PIB2.\n        SMF70CCN PIB2.    SMF70CPS PIB4.  SMF70CPL PIB2.\n        SMF70CPN PIB2.    SMF70ASS PIB4.  SMF70ASL PIB2.\n        SMF70ASN PIB2.    SMF70BCS PIB4.  SMF70BCL PIB2.\n        SMF70BCN PIB2.    SMF70BVS PIB4.  SMF70BVL PIB2.\n        SMF70BVN PIB2.\n        @ ;\n  OUTPUT T70;\n  DO I=1 TO SMF70PRN;\n  OFF = V -3 + SMF70PRS + (I-1)*SMF70PRL;\n  INPUT @OFF SMF70MFV $CHAR2.  SMF70PRD $CHAR8.   SMF70IST PD4.\n             SMF70DAT PD4.     SMF70INT RMFDUR.   SMF70MFL PIB2.\n             SMF70SAM PIB4.    SMF70RV2 PIB2.     SMF70FLA PIB2.\n             SMF70RLS $CHAR4.  SMF70CYC PD4.      SMF70MVS $CHAR8.\n             SMF70IML PIB1.    SMF70PRF PIB1.     SMF70PTN PIB1.\n             SMF70SRL PIB1.    SMF70IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF70CCN;\n  OFF = V -3 + SMF70CCS + (I-1)*SMF70CCL;\n  INPUT @OFF SMF70MOD PIB2.    SMF70VER PIB1.\n             SMF70BNP PIB1.    SMF70INB PIB1.\n             SMF70RVA PIB1.    SMF70GTS PIB2.\n  @;\n  OUTPUT CCONTROL;\n  END;\n  DO I=1 TO SMF70CPN;\n  OFF = V -3 + SMF70CPS + (I-1)*SMF70CPL;\n  INPUT @OFF SMF70WAT PIB8.    SMF70CID PIB2.     SMF70CNF PIB1.\n             SMF70RV3 PIB1.    SMF70SER PIB3.     SMF70RV4 PIB1.\n             SMF70SLH PIB4.    SMF70TPI PIB4.\n             SMF70VFS PIB4.    SMF70V   PIB1.     SMF70AL1 PIB1.\n  @;\n  CPUBSYPC = 100 * (1 - ((SMF70WAT/4096E6) / SMF70INT) );\n  OUTPUT CDATA;\n  END;\n  DO I=1 TO SMF70ASN;\n  OFF = V -3 + SMF70ASS + (I-1)*SMF70ASL;\n  INPUT @OFF\n         SMF70RMN PIB2.     SMF70RMM PIB2.      SMF70RTT PIB4.\n         SMF70R00 PIB4.     SMF70R01 PIB4.      SMF70R02 PIB4.\n         SMF70R03 PIB4.     SMF70R04 PIB4.      SMF70R05 PIB4.\n         SMF70R06 PIB4.     SMF70R07 PIB4.      SMF70R08 PIB4.\n         SMF70R09 PIB4.     SMF70R10 PIB4.      SMF70R11 PIB4.\n         SMF70R12 PIB4.     SMF70R13 PIB4.      SMF70R14 PIB4.\n         SMF70R15 PIB4.     SMF70IMN PIB2.      SMF70IMM PIB2.\n         SMF70ITT PIB4.     SMF70I00 PIB4.      SMF70I01 PIB4.\n         SMF70I02 PIB4.     SMF70I03 PIB4.      SMF70I04 PIB4.\n         SMF70I05 PIB4.     SMF70I06 PIB4.      SMF70I07 PIB4.\n         SMF70I08 PIB4.     SMF70I09 PIB4.      SMF70I10 PIB4.\n         SMF70I11 PIB4.     SMF70OMN PIB2.      SMF70OMM PIB2.\n         SMF70OTT PIB4.     SMF70O00 PIB4.      SMF70O01 PIB4.\n         SMF70O02 PIB4.     SMF70O03 PIB4.      SMF70O04 PIB4.\n         SMF70O05 PIB4.     SMF70O06 PIB4.      SMF70O07 PIB4.\n         SMF70O08 PIB4.     SMF70O09 PIB4.      SMF70O10 PIB4.\n         SMF70O11 PIB4.     SMF70WMN PIB2.      SMF70WMM PIB2.\n         SMF70WTT PIB4.     SMF70W00 PIB4.      SMF70W01 PIB4.\n         SMF70W02 PIB4.     SMF70W03 PIB4.      SMF70W04 PIB4.\n         SMF70W05 PIB4.     SMF70W06 PIB4.      SMF70W07 PIB4.\n         SMF70W08 PIB4.     SMF70W09 PIB4.      SMF70W10 PIB4.\n         SMF70W11 PIB4.     SMF70BMN PIB2.      SMF70BMM PIB2.\n         SMF70BTT PIB4.     SMF70B00 PIB4.      SMF70B01 PIB4.\n         SMF70B02 PIB4.     SMF70B03 PIB4.      SMF70B04 PIB4.\n         SMF70B05 PIB4.     SMF70B06 PIB4.      SMF70B07 PIB4.\n         SMF70B08 PIB4.     SMF70B09 PIB4.      SMF70B10 PIB4.\n         SMF70B11 PIB4.     SMF70SMN PIB2.      SMF70SMM PIB2.\n         SMF70STT PIB4.     SMF70S00 PIB4.      SMF70S01 PIB4.\n         SMF70S02 PIB4.     SMF70S03 PIB4.      SMF70S04 PIB4.\n         SMF70S05 PIB4.     SMF70S06 PIB4.      SMF70S07 PIB4.\n         SMF70S08 PIB4.     SMF70S09 PIB4.      SMF70S10 PIB4.\n         SMF70S11 PIB4.     SMF70TMN PIB2.      SMF70TMM PIB2.\n         SMF70TTT PIB4.     SMF70T00 PIB4.      SMF70T01 PIB4.\n         SMF70T02 PIB4.     SMF70T03 PIB4.      SMF70T04 PIB4.\n         SMF70T05 PIB4.     SMF70T06 PIB4.      SMF70T07 PIB4.\n         SMF70T08 PIB4.     SMF70T09 PIB4.      SMF70T10 PIB4.\n         SMF70T11 PIB4.     SMF70LMN PIB2.      SMF70LMM PIB2.\n         SMF70LTT PIB4.     SMF70L00 PIB4.      SMF70L01 PIB4.\n         SMF70L02 PIB4.     SMF70L03 PIB4.      SMF70L04 PIB4.\n         SMF70L05 PIB4.     SMF70L06 PIB4.      SMF70L07 PIB4.\n         SMF70L08 PIB4.     SMF70L09 PIB4.      SMF70L10 PIB4.\n         SMF70L11 PIB4.     SMF70AMN PIB2.      SMF70AMM PIB2.\n         SMF70ATT PIB4.     SMF70A00 PIB2.      SMF70A01 PIB2.\n         SMF70A02 PIB4.     SMF70A03 PIB4.      SMF70A04 PIB4.\n         SMF70A05 PIB4.     SMF70A06 PIB4.      SMF70A07 PIB4.\n         SMF70A08 PIB4.     SMF70A09 PIB4.      SMF70A10 PIB4.\n         SMF70A11 PIB4.     SMF70PMN PIB2.      SMF70PMM PIB2.\n         SMF70PTT PIB4.     SMF70P00 PIB2.      SMF70P01 PIB2.\n         SMF70P02 PIB4.     SMF70P03 PIB4.      SMF70P04 PIB4.\n         SMF70P05 PIB4.     SMF70P06 PIB4.      SMF70P07 PIB4.\n         SMF70P08 PIB4.     SMF70P09 PIB4.      SMF70P10 PIB4.\n         SMF70P11 PIB4.\n  @;\n  OUTPUT ASID;\n  END;\n  *;\n  DO I=1 TO SMF70BCN;\n  OFF = V -3 + SMF70BCS + (I-1)*SMF70BCL;\n  INPUT @OFF SMF70LPM $CHAR8.  SMF70LPN PIB1.     SMF70PFG PIB1.\n             SMF70BDN PIB2.    SMF70BDS PIB4.\n  @;\n  OUTPUT PRSM;\n  END;\n  *;\n  DO I=1 TO SMF70BVN;\n  OFF = V -3 + SMF70BVS + (I-1)*SMF70BVL;\n  INPUT @OFF SMF70PDT PIB8.    SMF70VPA PIB2.     SMF70BPS PIB2.\n             SMF70VPF PIB1.    SMF70RVX PIB3.     SMF70EDT PIB8.\n                               SMF70RVY PIB8.\n  @;\n  SMF70PDT = SMF70PDT / 1000000;\n  SMF70EDT = SMF70EDT / 1000000;\n  OUTPUT LOGP;\n  END;\nRETURN;\nPROC PRINT DATA=T70;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF70INT TIME.;\nPROC PRINT DATA=CCONTROL;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF70MOD HEX4.;\nPROC PRINT DATA=CDATA;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF70SER HEX6.;\nPROC PRINT DATA=ASID;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRSM;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=LOGP;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF70A": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x952_\\x00\\x952_\\x13\\t\\x00\\xc4\\x00\\xc4\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-21T00:00:00", "modifydate": "1995-11-21T13:09:00", "lines": 196, "newlines": 196, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM0 JOB EDPCSBS1,'RMF70',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR,DCB=(BUFNO=19)\n//DATLIB  DD DISP=SHR,DCB=(BUFNO=19),DSN=EDH1.PROD.RMFOCT95\n//*ATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//DS      DD DISP=OLD,DSN=ED115DM.CPU\n//SYSIN   DD *\nTITLE 'SMF 70';\nDATA T70 (KEEP = TIMEOUT SMFXXSID\n        SMF70SSI          SMF70STY        SMF70TRN\n        SMF70RV1          SMF70PRS        SMF70PRL\n        SMF70PRN          SMF70CCS        SMF70CCL\n        SMF70CCN          SMF70CPS        SMF70CPL\n        SMF70CPN          SMF70ASS        SMF70ASL\n        SMF70ASN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF70MFV          SMF70PRD           SMF70IST\n             SMF70DAT          SMF70INT           SMF70MFL\n             SMF70SAM          SMF70RV2           SMF70FLA\n             SMF70RLS          SMF70CYC           SMF70MVS\n             SMF70IML          SMF70RV9\n             )\n     CCONTROL (KEEP = TIMEOUT\n             SMF70MOD          SMF70VER\n             )\n     CDATA    (KEEP = TIMEOUT  SMF70SER           CPUBSYPC\n             )\n     ASID     (KEEP = TIMEOUT\n         SMF70RMN           SMF70RMM            SMF70RTT\n         SMF70R00           SMF70R01            SMF70R02\n         SMF70R03           SMF70R04            SMF70R05\n         SMF70R06           SMF70R07            SMF70R08\n         SMF70R09           SMF70R10            SMF70R11\n         SMF70R12           SMF70R13            SMF70R14\n         SMF70R15           SMF70IMN            SMF70IMM\n         SMF70ITT           SMF70I00            SMF70I01\n         SMF70I02           SMF70I03            SMF70I04\n         SMF70I05           SMF70I06            SMF70I07\n         SMF70I08           SMF70I09            SMF70I10\n         SMF70I11           SMF70OMN            SMF70OMM\n         SMF70OTT           SMF70O00            SMF70O01\n         SMF70O02           SMF70O03            SMF70O04\n         SMF70O05           SMF70O06            SMF70O07\n         SMF70O08           SMF70O09            SMF70O10\n         SMF70O11           SMF70WMN            SMF70WMM\n         SMF70WTT           SMF70W00            SMF70W01\n         SMF70W02           SMF70W03            SMF70W04\n         SMF70W05           SMF70W06            SMF70W07\n         SMF70W08           SMF70W09            SMF70W10\n         SMF70W11           SMF70BMN            SMF70BMM\n         SMF70BTT           SMF70B00            SMF70B01\n         SMF70B02           SMF70B03            SMF70B04\n         SMF70B05           SMF70B06            SMF70B07\n         SMF70B08           SMF70B09            SMF70B10\n         SMF70B11           SMF70SMN            SMF70SMM\n         SMF70STT           SMF70S00            SMF70S01\n         SMF70S02           SMF70S03            SMF70S04\n         SMF70S05           SMF70S06            SMF70S07\n         SMF70S08           SMF70S09            SMF70S10\n         SMF70S11           SMF70TMN            SMF70TMM\n         SMF70TTT           SMF70T00            SMF70T01\n         SMF70T02           SMF70T03            SMF70T04\n         SMF70T05           SMF70T06            SMF70T07\n         SMF70T08           SMF70T09            SMF70T10\n         SMF70T11           SMF70LMN            SMF70LMM\n         SMF70LTT           SMF70L00            SMF70L01\n         SMF70L02           SMF70L03            SMF70L04\n         SMF70L05           SMF70L06            SMF70L07\n         SMF70L08           SMF70L09            SMF70L10\n         SMF70L11           SMF70AMN            SMF70AMM\n         SMF70ATT           SMF70A00            SMF70A01\n         SMF70A02           SMF70A03            SMF70A04\n         SMF70A05           SMF70A06            SMF70A07\n         SMF70A08           SMF70A09            SMF70A10\n         SMF70A11\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 70;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF70SSI $CHAR4.  SMF70STY PIB2.  SMF70TRN PIB2.\n        SMF70RV1 PIB2.    SMF70PRS PIB4.  SMF70PRL PIB2.\n        SMF70PRN PIB2.    SMF70CCS PIB4.  SMF70CCL PIB2.\n        SMF70CCN PIB2.    SMF70CPS PIB4.  SMF70CPL PIB2.\n        SMF70CPN PIB2.    SMF70ASS PIB4.  SMF70ASL PIB2.\n        SMF70ASN PIB2. @;\n  OUTPUT T70;\n  DO I=1 TO SMF70PRN;\n  OFF = V -3 + SMF70PRS + (I-1)*SMF70PRL;\n  INPUT @OFF SMF70MFV $CHAR2.  SMF70PRD $CHAR8.   SMF70IST PD4.\n             SMF70DAT PD4.     SMF70INT RMFDUR.   SMF70MFL PIB2.\n             SMF70SAM PIB4.    SMF70RV2 PIB2.     SMF70FLA PIB2.\n             SMF70RLS $CHAR4.  SMF70CYC PD4.      SMF70MVS $CHAR8.\n             SMF70IML PIB1.    SMF70RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF70CCN;\n  OFF = V -3 + SMF70CCS + (I-1)*SMF70CCL;\n  INPUT @OFF SMF70MOD PIB2.    SMF70VER PIB1.\n  @;\n  OUTPUT CCONTROL;\n  END;\n  DO I=1 TO SMF70CPN;\n  OFF = V -3 + SMF70CPS + (I-1)*SMF70CPL;\n  INPUT @OFF SMF70WAT PIB8.    SMF70CID PIB2.     SMF70CNF PIB1.\n             SMF70RV3 PIB1.    SMF70SER PIB3.     SMF70RV4 PIB1.\n             SMF70SLH PIB4.    SMF70TPI PIB4.\n  @;\n  CPUBSYPC = 100 * (1 - ((SMF70WAT/4096E6) / SMF70INT) );\n  OUTPUT CDATA;\n  END;\n  DO I=1 TO SMF70ASN;\n  OFF = V -3 + SMF70ASS + (I-1)*SMF70ASL;\n  INPUT @OFF\n         SMF70RMN PIB2.     SMF70RMM PIB2.      SMF70RTT PIB4.\n         SMF70R00 PIB4.     SMF70R01 PIB4.      SMF70R02 PIB4.\n         SMF70R03 PIB4.     SMF70R04 PIB4.      SMF70R05 PIB4.\n         SMF70R06 PIB4.     SMF70R07 PIB4.      SMF70R08 PIB4.\n         SMF70R09 PIB4.     SMF70R10 PIB4.      SMF70R11 PIB4.\n         SMF70R12 PIB4.     SMF70R13 PIB4.      SMF70R14 PIB4.\n         SMF70R15 PIB4.     SMF70IMN PIB2.      SMF70IMM PIB2.\n         SMF70ITT PIB4.     SMF70I00 PIB4.      SMF70I01 PIB4.\n         SMF70I02 PIB4.     SMF70I03 PIB4.      SMF70I04 PIB4.\n         SMF70I05 PIB4.     SMF70I06 PIB4.      SMF70I07 PIB4.\n         SMF70I08 PIB4.     SMF70I09 PIB4.      SMF70I10 PIB4.\n         SMF70I11 PIB4.     SMF70OMN PIB2.      SMF70OMM PIB2.\n         SMF70OTT PIB4.     SMF70O00 PIB4.      SMF70O01 PIB4.\n         SMF70O02 PIB4.     SMF70O03 PIB4.      SMF70O04 PIB4.\n         SMF70O05 PIB4.     SMF70O06 PIB4.      SMF70O07 PIB4.\n         SMF70O08 PIB4.     SMF70O09 PIB4.      SMF70O10 PIB4.\n         SMF70O11 PIB4.     SMF70WMN PIB2.      SMF70WMM PIB2.\n         SMF70WTT PIB4.     SMF70W00 PIB4.      SMF70W01 PIB4.\n         SMF70W02 PIB4.     SMF70W03 PIB4.      SMF70W04 PIB4.\n         SMF70W05 PIB4.     SMF70W06 PIB4.      SMF70W07 PIB4.\n         SMF70W08 PIB4.     SMF70W09 PIB4.      SMF70W10 PIB4.\n         SMF70W11 PIB4.     SMF70BMN PIB2.      SMF70BMM PIB2.\n         SMF70BTT PIB4.     SMF70B00 PIB4.      SMF70B01 PIB4.\n         SMF70B02 PIB4.     SMF70B03 PIB4.      SMF70B04 PIB4.\n         SMF70B05 PIB4.     SMF70B06 PIB4.      SMF70B07 PIB4.\n         SMF70B08 PIB4.     SMF70B09 PIB4.      SMF70B10 PIB4.\n         SMF70B11 PIB4.     SMF70SMN PIB2.      SMF70SMM PIB2.\n         SMF70STT PIB4.     SMF70S00 PIB4.      SMF70S01 PIB4.\n         SMF70S02 PIB4.     SMF70S03 PIB4.      SMF70S04 PIB4.\n         SMF70S05 PIB4.     SMF70S06 PIB4.      SMF70S07 PIB4.\n         SMF70S08 PIB4.     SMF70S09 PIB4.      SMF70S10 PIB4.\n         SMF70S11 PIB4.     SMF70TMN PIB2.      SMF70TMM PIB2.\n         SMF70TTT PIB4.     SMF70T00 PIB4.      SMF70T01 PIB4.\n         SMF70T02 PIB4.     SMF70T03 PIB4.      SMF70T04 PIB4.\n         SMF70T05 PIB4.     SMF70T06 PIB4.      SMF70T07 PIB4.\n         SMF70T08 PIB4.     SMF70T09 PIB4.      SMF70T10 PIB4.\n         SMF70T11 PIB4.     SMF70LMN PIB2.      SMF70LMM PIB2.\n         SMF70LTT PIB4.     SMF70L00 PIB4.      SMF70L01 PIB4.\n         SMF70L02 PIB4.     SMF70L03 PIB4.      SMF70L04 PIB4.\n         SMF70L05 PIB4.     SMF70L06 PIB4.      SMF70L07 PIB4.\n         SMF70L08 PIB4.     SMF70L09 PIB4.      SMF70L10 PIB4.\n         SMF70L11 PIB4.     SMF70AMN PIB2.      SMF70AMM PIB2.\n         SMF70ATT PIB4.     SMF70A00 PIB2.      SMF70A01 PIB2.\n         SMF70A02 PIB4.     SMF70A03 PIB4.      SMF70A04 PIB4.\n         SMF70A05 PIB4.     SMF70A06 PIB4.      SMF70A07 PIB4.\n         SMF70A08 PIB4.     SMF70A09 PIB4.      SMF70A10 PIB4.\n         SMF70A11 PIB4.\n  @;\n  OUTPUT ASID;\n  END;\nRETURN;\n*ROC PRINT DATA=T70;\n*ORMAT TIMEOUT DATETIME.;\n*ROC PRINT DATA=PRODUCT;\n*ORMAT TIMEOUT DATETIME.;\n*ORMAT SMF70INT TIME.;\n*ROC PRINT DATA=CCONTROL;\n*ORMAT TIMEOUT DATETIME.;\n*ORMAT SMF70MOD HEX4.;\nPROC PRINT DATA=CDATA;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF70SER HEX6.;\n*ROC PRINT DATA=ASID;\n*ORMAT TIMEOUT DATETIME.;\nPROC APPEND BASE=DS.CDATA DATA=CDATA;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF70B": {"ttr": 3337, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x952_\\x00\\x952_\\x14 \\x00\\x16\\x00\\x0e\\x00\\t\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-11-21T00:00:00", "modifydate": "1995-11-21T14:20:00", "lines": 22, "newlines": 14, "modlines": 9, "user": "ED115DM"}, "text": "//C4SYSDM0 JOB EDPCSBS1,'RMF70',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//DS      DD DISP=OLD,DSN=ED115DM.CPU\n//SYSIN   DD *\nDATA;\nSET DS.CDATA;\nC4DATE = DATEPART(TIMEOUT);\nRETURN;\nPROC SORT OUT=C; BY C4DATE DESCENDING CPUBSYPC;\nDATA;\nRETAIN N 0;\nSET; BY C4DATE;\nIF FIRST.C4DATE THEN N=0;\nN+1;\nIF N> 50 THEN DELETE;\nRETURN;\nPROC PRINT; BY C4DATE;\nFORMAT TIMEOUT DATETIME.;\nFORMAT C4DATE  WEEKDATE.;\nFORMAT SMF70SER HEX6.   ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF71ESA": {"ttr": 3339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x956/\\x00\\x956/\\x158\\x00\\xb1\\x00\\x8a\\x00(\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-12-28T00:00:00", "modifydate": "1995-12-28T15:38:00", "lines": 177, "newlines": 138, "modlines": 40, "user": "ED115DM"}, "text": "//C4SYSDM1 JOB EDPCSBS1,'RMF71',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 71';\nDATA T71 (KEEP = TIMEOUT SMFXXSID\n        SMF71SSI          SMF71STY        SMF71TRN\n        SMF71RV1          SMF71PRS        SMF71PRL\n        SMF71PRN          SMF71PDS        SMF71PDL\n        SMF71PDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF71MFV          SMF71PRD           SMF71IST\n             SMF71DAT          SMF71INT           SMF71MFL\n             SMF71SAM          SMF71RV2           SMF71FLA\n             SMF71RLS          SMF71CYC           SMF71MVS\n             SMF71IML          SMF71RV9\n             )\n     PD       (KEEP = TIMEOUT\n               SMF71PIN       SMF71POT         SMF71PRC\n               SMF71SSQ       SMF71SIN         SMF71SOT\n               SMF71VIN       SMF71VOT         SMF71VRC\n               SMF71SNI       SMF71SNO         SMF71SNR\n               SMF71LNI       SMF71LNR\n               SMF71AFC       SMF71TFC         SMF71TSC\n               SMF71DSC       SMF71VSC         SMF71NSC\n               SMF71FIN       SMF71MNF         SMF71MXF\n               SMF71AVF       SMF71MNP         SMF71MXP\n               SMF71AVP       SMF71MNS         SMF71MXS\n               SMF71AVS       SMF71MNT         SMF71MXT\n               SMF71AVT       SMF71MNQ         SMF71MXQ\n               SMF71AVQ       SMF71MNC         SMF71MXC\n               SMF71AVC       SMF71MNR         SMF71MXR\n               SMF71AVR       SMF71MNX         SMF71MXX\n               SMF71AVX       SMF71MNU         SMF71MXU\n               SMF71AVU       SMF71MNV         SMF71MXV\n               SMF71AVV       SMF71MNM         SMF71MXM\n               SMF71AVM       SMF71MNB         SMF71MXB\n               SMF71AVB       SMF71MNA         SMF71MXA\n\n               SMF71IS1       SMF71IS2         SMF71VME\n               SMF71VMG       SMF71VRE         SMF71MVE\n               SMF71XVE       SMF71AVE         SMF71RSS\n               SMF71EXS       SMF71EES         SMF71TOS\n               SMF71TXS       SMF71LGS         SMF71LFS\n               SMF71LSS       SMF71LSE         SMF71NLP\n               SMF71XLP       SMF71ALP         SMF71NLF\n               SMF71XLF       SMF71ALF         SMF71NLS\n               SMF71XLS       SMF71ALS         SMF71MNL\n               SMF71MXL       SMF71AVL         SMF71PMV\n               SMF71OPT                        SMF71PES\n               SMF71PEA       SMF71AMN         SMF71AMX\n               SMF71ASA       SMF71LIC         SMF71HIC\n               SMF71ACA       SMF71LMA         SMF71HMA\n               SMF71AMA       SMF71CF          SMF71OLE\n               SMF71RES       SMF71MSR         SMF71XSR\n               SMF71ASR       SMF71MSE         SMF71XSE\n               SMF71ASE       SMF71LME         SMF71LXE\n               SMF71LAE       SMF71CME         SMF71CXE\n               SMF71CAE       SMF71MLR         SMF71XLR\n               SMF71ALR       SMF71MLE         SMF71XLE\n               SMF71ALE       SMF71RME         SMF71RXE\n               SMF71RAE       SMF71ISC         SMF71HME\n               SMF71HRE       SMF71HMG         SMF71HOT\n               SMF71HIN       SMF71MHE         SMF71XHE\n               SMF71AHE       SMF71BLP         SMF71BLK\n               SMF71PWS       SMF71FNM         SMF71PMT\n             )\n     SW       (KEEP = TIMEOUT\n               SMF71TOT       SMF71AXD         SMF71LES\n               SMF71LAX       SMF71ESD         SMF71MIG\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 71;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF71SSI $CHAR4.  SMF71STY PIB2.  SMF71TRN PIB2.\n        SMF71RV1 PIB2.    SMF71PRS PIB4.  SMF71PRL PIB2.\n        SMF71PRN PIB2.    SMF71PDS PIB4.  SMF71PDL PIB2.\n        SMF71PDN PIB2. @;\n  OUTPUT T71;\n  DO I=1 TO SMF71PRN;\n  OFF = V -3 + SMF71PRS + (I-1)*SMF71PRL;\n  INPUT @OFF SMF71MFV $CHAR2.  SMF71PRD $CHAR8.   SMF71IST PD4.\n             SMF71DAT PD4.     SMF71INT RMFDUR.   SMF71MFL PIB2.\n             SMF71SAM PIB4.    SMF71RV2 PIB2.     SMF71FLA PIB2.\n             SMF71RLS $CHAR4.  SMF71CYC PD4.      SMF71MVS $CHAR8.\n             SMF71IML PIB1.    SMF71RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF71PDN;\n  OFF = V -3 + SMF71PDS + (I-1)*SMF71PDL;\n  INPUT @OFF   SMF71PIN PIB4. SMF71POT PIB4.   SMF71PRC PIB4.\n               SMF71SSQ PIB4. SMF71SIN PIB4.   SMF71SOT PIB4.\n               SMF71VIN PIB4. SMF71VOT PIB4.   SMF71VRC PIB4.\n               SMF71SNI PIB4. SMF71SNO PIB4.   SMF71SNR PIB4.\n               SMF71LNI PIB4. SMF71LNR PIB4.\n               SMF71AFC PIB4. SMF71TFC PIB4.   SMF71TSC PIB4.\n               SMF71DSC PIB4. SMF71VSC PIB4.   SMF71NSC PIB4.\n               SMF71FIN PIB4. SMF71MNF PIB4.   SMF71MXF PIB4.\n               SMF71AVF PIB4. SMF71MNP PIB4.   SMF71MXP PIB4.\n               SMF71AVP PIB4. SMF71MNS PIB4.   SMF71MXS PIB4.\n               SMF71AVS PIB4. SMF71MNT PIB4.   SMF71MXT PIB4.\n               SMF71AVT PIB4. SMF71MNQ PIB4.   SMF71MXQ PIB4.\n               SMF71AVQ PIB4. SMF71MNC PIB4.   SMF71MXC PIB4.\n               SMF71AVC PIB4. SMF71MNR PIB4.   SMF71MXR PIB4.\n               SMF71AVR PIB4. SMF71MNX PIB4.   SMF71MXX PIB4.\n               SMF71AVX PIB4. SMF71MNU PIB4.   SMF71MXU PIB4.\n               SMF71AVU PIB4. SMF71MNV PIB4.   SMF71MXV PIB4.\n               SMF71AVV PIB4. SMF71MNM PIB4.   SMF71MXM PIB4.\n               SMF71AVM PIB4. SMF71MNB PIB4.   SMF71MXB PIB4.\n               SMF71AVB PIB4. SMF71MNA PIB4.   SMF71MXA PIB4.\n               SMF71IS1 PIB2. SMF71IS2 PIB2.   SMF71VME PIB4.\n               SMF71VMG PIB4. SMF71VRE PIB4.   SMF71MVE PIB4.\n               SMF71XVE PIB4. SMF71AVE PIB4.   SMF71RSS PIB4.\n               SMF71EXS PIB4. SMF71EES PIB4.   SMF71TOS PIB4.\n               SMF71TXS PIB4. SMF71LGS PIB4.   SMF71LFS PIB4.\n               SMF71LSS PIB4. SMF71LSE PIB4.   SMF71NLP PIB4.\n               SMF71XLP PIB4. SMF71ALP PIB4.   SMF71NLF PIB4.\n               SMF71XLF PIB4. SMF71ALF PIB4.   SMF71NLS PIB4.\n               SMF71XLS PIB4. SMF71ALS PIB4.   SMF71MNL PIB4.\n               SMF71MXL PIB4. SMF71AVL PIB4.   SMF71PMV PIB4.\n               SMF71OPT $CHAR8.                SMF71PES PIB4.\n               SMF71PEA PIB4. SMF71AMN PIB4.   SMF71AMX PIB4.\n               SMF71ASA PIB4. SMF71LIC PIB4.   SMF71HIC PIB4.\n               SMF71ACA PIB4. SMF71LMA PIB4.   SMF71HMA PIB4.\n               SMF71AMA PIB4. SMF71CF  PIB4.   SMF71OLE PIB4.\n               SMF71RES PIB4. SMF71MSR PIB4.   SMF71XSR PIB4.\n               SMF71ASR PIB4. SMF71MSE PIB4.   SMF71XSE PIB4.\n               SMF71ASE PIB4. SMF71LME PIB4.   SMF71LXE PIB4.\n               SMF71LAE PIB4. SMF71CME PIB4.   SMF71CXE PIB4.\n               SMF71CAE PIB4. SMF71MLR PIB4.   SMF71XLR PIB4.\n               SMF71ALR PIB4. SMF71MLE PIB4.   SMF71XLE PIB4.\n               SMF71ALE PIB4. SMF71RME PIB4.   SMF71RXE PIB4.\n               SMF71RAE PIB4. SMF71ISC PIB4.   SMF71HME PIB4.\n               SMF71HRE PIB4. SMF71HMG PIB4.   SMF71HOT PIB4.\n               SMF71HIN PIB4. SMF71MHE PIB4.   SMF71XHE PIB4.\n               SMF71AHE PIB4. SMF71BLP PIB4.   SMF71BLK PIB4.\n               SMF71PWS PIB4. SMF71FNM PIB4.   SMF71PMT PIB8.\n        @ ;\n  OUTPUT PD;\n  END;\n  DO I=1 TO SMF71SWN;\n  OFF = V -3 + SMF71SWS + (I-1)*SMF71SWL;\n  INPUT @OFF   SMF71TOT PIB4. SMF71AXD PIB4.   SMF71LES PIB4.\n               SMF71LAX PIB4. SMF71ESD PIB4.   SMF71MIG PIB4.\n        @ ;\n  OUTPUT SW;\n  END;\nRETURN;\nPROC PRINT DATA=T71;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF71INT TIME.;\nPROC PRINT DATA=PD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SW;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF71XA": {"ttr": 3585, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x956/\\x00\\x956/\\x14\\x08\\x00\\x82\\x00\\x82\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-12-28T00:00:00", "modifydate": "1995-12-28T14:08:00", "lines": 130, "newlines": 130, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM1 JOB EDPCSBS1,'RMF71',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 71';\nDATA T71 (KEEP = TIMEOUT SMFXXSID\n        SMF71SSI          SMF71STY        SMF71TRN\n        SMF71RV1          SMF71PRS        SMF71PRL\n        SMF71PRN          SMF71PDS        SMF71PDL\n        SMF71PDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF71MFV          SMF71PRD           SMF71IST\n             SMF71DAT          SMF71INT           SMF71MFL\n             SMF71SAM          SMF71RV2           SMF71FLA\n             SMF71RLS          SMF71CYC           SMF71MVS\n             SMF71IML          SMF71RV9\n             )\n     PD       (KEEP = TIMEOUT\n               SMF71PIN       SMF71POT         SMF71PRC\n               SMF71SSQ       SMF71SIN         SMF71SOT\n               SMF71VIN       SMF71VOT         SMF71VRC\n               SMF71SNI       SMF71SNO         SMF71SNR\n               SMF71LNI       SMF71LNR\n               SMF71AFC       SMF71TFC         SMF71TSC\n               SMF71DSC       SMF71VSC         SMF71NSC\n               SMF71FIN       SMF71MNF         SMF71MXF\n               SMF71AVF       SMF71MNP         SMF71MXP\n               SMF71AVP       SMF71MNS         SMF71MXS\n               SMF71AVS       SMF71MNT         SMF71MXT\n               SMF71AVT       SMF71MNQ         SMF71MXQ\n               SMF71AVQ       SMF71MNC         SMF71MXC\n               SMF71AVC       SMF71MNR         SMF71MXR\n               SMF71AVR       SMF71MNX         SMF71MXX\n               SMF71AVX       SMF71MNU         SMF71MXU\n               SMF71AVU       SMF71MNV         SMF71MXV\n               SMF71AVV       SMF71MNM         SMF71MXM\n               SMF71AVM       SMF71MNB         SMF71MXB\n               SMF71AVB       SMF71MNA         SMF71MXA\n\n               SMF71AVA       SMF71TIS         SMF71LWS\n               SMF71DWS       SMF71ULS         SMF71NRS\n               SMF71ASS       SMF71RSS         SMF71EXS\n               SMF71EES       SMF71TOS         SMF71TXS\n               SMF71LGS       SMF71LFS         SMF71LSS\n               SMF71LSE       SMF71NLP         SMF71XLP\n               SMF71ALP       SMF71NLF         SMF71XLF\n               SMF71ALF       SMF71NLS         SMF71XLS\n               SMF71ALS       SMF71MNL         SMF71MXL\n               SMF71AVL       SMF71PMV\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 71;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF71SSI $CHAR4.  SMF71STY PIB2.  SMF71TRN PIB2.\n        SMF71RV1 PIB2.    SMF71PRS PIB4.  SMF71PRL PIB2.\n        SMF71PRN PIB2.    SMF71PDS PIB4.  SMF71PDL PIB2.\n        SMF71PDN PIB2. @;\n  OUTPUT T71;\n  DO I=1 TO SMF71PRN;\n  OFF = V -3 + SMF71PRS + (I-1)*SMF71PRL;\n  INPUT @OFF SMF71MFV $CHAR2.  SMF71PRD $CHAR8.   SMF71IST PD4.\n             SMF71DAT PD4.     SMF71INT RMFDUR.   SMF71MFL PIB2.\n             SMF71SAM PIB4.    SMF71RV2 PIB2.     SMF71FLA PIB2.\n             SMF71RLS $CHAR4.  SMF71CYC PD4.      SMF71MVS $CHAR8.\n             SMF71IML PIB1.    SMF71RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF71PDN;\n  OFF = V -3 + SMF71PDS + (I-1)*SMF71PDL;\n  INPUT @OFF   SMF71PIN PIB4. SMF71POT PIB4.   SMF71PRC PIB4.\n               SMF71SSQ PIB4. SMF71SIN PIB4.   SMF71SOT PIB4.\n               SMF71VIN PIB4. SMF71VOT PIB4.   SMF71VRC PIB4.\n               SMF71SNI PIB4. SMF71SNO PIB4.   SMF71SNR PIB4.\n               SMF71LNI PIB4. SMF71LNR PIB4.\n               SMF71AFC PIB4. SMF71TFC PIB4.   SMF71TSC PIB4.\n               SMF71DSC PIB4. SMF71VSC PIB4.   SMF71NSC PIB4.\n               SMF71FIN PIB4. SMF71MNF PIB4.   SMF71MXF PIB4.\n               SMF71AVF PIB4. SMF71MNP PIB4.   SMF71MXP PIB4.\n               SMF71AVP PIB4. SMF71MNS PIB4.   SMF71MXS PIB4.\n               SMF71AVS PIB4. SMF71MNT PIB4.   SMF71MXT PIB4.\n               SMF71AVT PIB4. SMF71MNQ PIB4.   SMF71MXQ PIB4.\n               SMF71AVQ PIB4. SMF71MNC PIB4.   SMF71MXC PIB4.\n               SMF71AVC PIB4. SMF71MNR PIB4.   SMF71MXR PIB4.\n               SMF71AVR PIB4. SMF71MNX PIB4.   SMF71MXX PIB4.\n               SMF71AVX PIB4. SMF71MNU PIB4.   SMF71MXU PIB4.\n               SMF71AVU PIB4. SMF71MNV PIB4.   SMF71MXV PIB4.\n               SMF71AVV PIB4. SMF71MNM PIB4.   SMF71MXM PIB4.\n               SMF71AVM PIB4. SMF71MNB PIB4.   SMF71MXB PIB4.\n               SMF71AVB PIB4. SMF71MNA PIB4.   SMF71MXA PIB4.\n               SMF71AVA PIB4. SMF71TIS PIB4.   SMF71LWS PIB4.\n               SMF71DWS PIB4. SMF71ULS PIB4.   SMF71NRS PIB4.\n               SMF71ASS PIB4. SMF71RSS PIB4.   SMF71EXS PIB4.\n               SMF71EES PIB4. SMF71TOS PIB4.   SMF71TXS PIB4.\n               SMF71LGS PIB4. SMF71LFS PIB4.   SMF71LSS PIB4.\n               SMF71LSE PIB4. SMF71NLP PIB4.   SMF71XLP PIB4.\n               SMF71ALP PIB4. SMF71NLF PIB4.   SMF71XLF PIB4.\n               SMF71ALF PIB4. SMF71NLS PIB4.   SMF71XLS PIB4.\n               SMF71ALS PIB4. SMF71MNL PIB4.   SMF71MXL PIB4.\n               SMF71AVL PIB4. SMF71PMV PIB4.\n        @ ;\n  OUTPUT PD;\n  END;\nRETURN;\nPROC PRINT DATA=T71;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF71INT TIME.;\nPROC PRINT DATA=PD;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72BAT": {"ttr": 3588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x85'_\\x00\\x86&\\x8f\\x13I\\x00\\x87\\x00\\x86\\x00%\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1985-10-02T00:00:00", "modifydate": "1986-09-25T13:49:00", "lines": 135, "newlines": 134, "modlines": 37, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'BAT72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//*\n//*\n//SAS     EXEC SAS,OPTIONS='NODATE NOSOURCE'\n//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//        DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN3,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA PGPDS (KEEP= PP SDEV XXX H N1 N2 N3 N4\n                   TIMEOUT              SMFXXSID    SMF72SIZ\n       SMF72IST     SMF72DAT     SMF72INT\n       SMF72RV0     SMF72SUB     SMF72SAM     SMF72MFV\n       SMF72RV1     SMF72RLS     SMF72CYC\n           SMF72SWC         SMF72PGP         SMF72SPD\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72MSD         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS           SMF72USR         SMF72NAM\n           SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM       SMF72LEV       SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ET1\n           SMF72ET2 )\n         ;\n      ;\n  V=0; *4 VSAM , 0 NVSAM;\n  RETAIN N1 0 N2 0 N3 0 N4 0;\n  INFILE DATLIB;\n  INPUT @1+V SMFXXFLG PIB1.    SMFXXRTY PIB1.    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 72 THEN DELETE;\n      INPUT SMF72SIZ PIB2. SMF72IST PD4. SMF72DAT PD4.\n      SMF72INT RMFDUR. SMF72RV0 PIB1.\n      SMF72FG1 PIB1.   SMF72SUB PIB2. SMF72SAM PIB4.  SMF72MFV $CHAR2.\n      SMF72RV1 PIB2.   SMF72RLS $CHAR4.\n      SMF72CYC PD4. @ ;\n     INPUT SMF72SWC PIB2.   SMF72PGP PIB2.   SMF72SPD PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n      @ ;\n IF SMF72SUB = 140 | SMF72SUB = 141 ;\n   DO PP = 1 TO SMF72PGP;\n      INPUT  SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n       IF SMF72TTX \u00ac=0 THEN DO;\n       IF PP=1 THEN N1+SMF72TTX; ELSE\n       IF PP=2 THEN N2+SMF72TTX; ELSE\n       IF PP=3 THEN N3+SMF72TTX; ELSE\n       IF PP=4 THEN N4+SMF72TTX;\n       SMF72SER = SMF72SER / SMF72TTX;\n       SMF72CTS = SMF72CTS / SMF72TTX;\n       SMF72ITS = SMF72ITS / SMF72TTX;\n       SMF72MTS = SMF72MTS / SMF72TTX;\n       SMF72STS = SMF72STS / SMF72TTX;\n       RT = SMF72TTM / SMF72TTX;\n       SMF72TTM = SMF72TTM * 1024 /1000000;\n       SMF72TAT = SMF72TAT * 1024 /1000000;\n       SMF72ACT = SMF72ACT * 1024 /1000000;\n       SMF72TTM = SMF72TTM / SMF72TTX;\n       SMF72TAT = SMF72TAT / SMF72TTX;\n       SMF72ACT = SMF72ACT / SMF72TTX;\n       SMF72LEV = SMF72LEV / 256;\n     * SMF72LEV = SMF72LEV / SMF72TTX;\n       SMF72SPP = SMF72SPP / SMF72TTX;\n       SDEV     = SMF72ET1*(2**32) + SMF72ET2;\n       SDEV     = SDEV     / SMF72TTX;\n       SDEV = SQRT(SDEV - RT**2);\n       SDEV = SDEV *1024 / 1000000;\n       XXX = '   ';\n       H = HOUR(TIMEOUT);\n       DO I=1 TO SMF72TTX;\n       OUTPUT PGPDS;\n       END;\n       END;\n   END;\nDELETE;\n*ROC PRINT;\n*ORMAT TIMEOUT DATETIME.;\n*ROC SORT DATA=PGPDS; BY PP;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE TOTAL SERVICE UNITS';\nHBAR SMF72SER / MIDPOINTS = 5000 TO 500000 BY 5000;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE CPU SERVICE UNITS';\nHBAR SMF72CTS / MIDPOINTS = 5000 TO 500000 BY 5000;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE IO SERVICE UNITS';\nHBAR SMF72ITS / MIDPOINTS = 5000 TO 500000 BY 5000;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE MSO SERVICE UNITS';\nHBAR SMF72MTS / MIDPOINTS = 5000 TO 500000 BY 5000;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE SRB SERVICE UNITS';\nHBAR SMF72STS / MIDPOINTS = 5000 TO 500000 BY 5000;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE ACTIVE TIME IN SECONDS';\nHBAR SMF72ACT / MIDPOINTS = 10 TO 4000 BY 10;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE ELAPSED TIME IN SECONDS';\nHBAR SMF72TTM / MIDPOINTS = 10 TO 4000 BY 10;\nPROC CHART DATA=PGPDS;\nTITLE 'STANDARD DEVIATION OF ELAPSED TIME IN SECONDS';\nHBAR SDEV     / MIDPOINTS = 10 TO 4000 BY 10;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE TRANSACTION RESIDENCY TIME IN SECONDS';\nHBAR SMF72TAT / MIDPOINTS = 10 TO 4000 BY 10;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE WORKLOAD LEVEL';\nHBAR SMF72LEV;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE SWAPS PER TRANSACTION';\nHBAR SMF72SPP;\nPROC CHART DATA=PGPDS;\nTITLE 'DOMAIN NUMBER';\nHBAR SMF72CDN;\nPROC CHART DATA=PGPDS;\nTITLE 'PERFORMANCE OBJECTIVE NUMBER';\nHBAR SMF72PON;\n*ROC PLOT DATA=PGPDS;\n*ITLE 'CUMULATIVE NUMBER OF TRANSACTIONS IN PP';\n*LOT N1*H='1';\n*LOT N2*H='2';\n*LOT N3*H='3';\n*LOT N4*H='4';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72ESA": {"ttr": 3591, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x956?\\x00\\x956?\\x08Q\\x00\\xad\\x00t\\x00:\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-12-29T00:00:00", "modifydate": "1995-12-29T08:51:00", "lines": 173, "newlines": 116, "modlines": 58, "user": "ED115DM"}, "text": "//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB  DD DSN=EDH1.PROD.RMFDEC94,DISP=SHR\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA T72 (KEEP =\n      TIMEOUT\n      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL\n      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)\n      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD\n      SMF72IST         SMF72DAT\n      SMF72INT         SMF72MFL       SMF72SAM\n      SMF72RV2         SMF72FLA       SMF72RLS\n      SMF72CYC         SMF72MVS\n             SMF72IML          SMF72PRF           SMF72PTN\n             SMF72SRL          SMF72IET\n             )\n      WORKLOAD (KEEP = TIMEOUT\n           SMF72FGI         SMF72RV3         SMF72SUB\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72RV4         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS          SMF72USR          SMF72NAM\n         SMF72ADJ          SM72MSD\n             )\n      WRKLOAD2 (KEEP = TIMEOUT\n                R722TSR          R7222RV3         R722TOT\n           R722NXT          R722IPS\n             )\n         PG (KEEP = TIMEOUT\n             SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM         SMF72LEV         SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ET1\n           SMF72ET2       SMF72PIN       SMF72FT1\n           SMF72FT2       SMF72HIN       SMF72HRM\n           SMF72BPI       SMF72PIE       SMF72BPE\n           SMF72BKA       SMF72BKE       SMF72ER1\n           SMF72ER2       SMF72RCT       SMF72IIT\n           SMF72HST       SMF72TST\n  )\n         PG2 (KEEP = TIMEOUT\n                 R722PG         R722DMN        R722USER\n           R722ACTV         R722PAGE         R722SWAP\n           R722OUTR       R722ACTF       R722ACTS\n           R722IDLE       R722IDLS       R722PGIN\n           R722SLOT       R722DIV        R722DIVS\n           R722FIX        R722ET         R722QT\n           R722END        R722UPRO       R722UDEV\n           R722DPRO       R722DDEV       R722DSTO\n           R722DJES       R722DHSM       R722DXCF\n           R722DENQ       R722DMNT       R722DMSG\n           R722UNKN       R722VALD       R722LSCT\n           R722ESCT       R722PSCT       R722LSCF\n           R722LSEF       R722LSSA       R722PSEF\n           R722PSSA       R722VECT       R722ACFF\n           R722IDLF       R722SLTF       R722DIVF\n           R722FIXF\n  )\n  ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 72;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.\n        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.\n        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.\n        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.\n        SMF72PGN PIB2. @;\n  OUTPUT T72;\n  DO I=1 TO SMF72PRN;\n  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;\n  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.\n             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.\n             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.\n             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.\n             SMF72IML PIB1.    SMF72PRF PIB1.     SMF72PTN PIB1.\n             SMF72SRL PIB1.    SMF72IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  IF SMF72STY = 1 THEN DO;   * TYPE 1;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72RV4 $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n         SMF72ADJ PIB4.    SM72MSD  $CHAR8.\n      @ ;\n       OUTPUT WORKLOAD;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.\n           SMF72ET2 PIB4. SMF72PIN PIB4. SMF72FT1 PIB4.\n           SMF72FT2 PIB4. SMF72HIN PIB4. SMF72HRM PIB4.\n           SMF72BPI PIB4. SMF72PIE PIB4. SMF72BPE PIB4.\n           SMF72BKA PIB4. SMF72BKE PIB4. SMF72ER1 PIB4.\n           SMF72ER2 PIB4. SMF72RCT PIB4. SMF72IIT PIB4.\n           SMF72HST PIB4. SMF72TST PIB4.\n       @ ;\n       OUTPUT PG;\n   END;\n   END;  * TYPE 1;\n  IF SMF72STY = 2 THEN DO;   * TYPE 2;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF R722TSR  PIB2.   R7222RV3 PIB2.   R722TOT  PIB4.\n           R722NXT  PIB4.   R722IPS $CHAR8.\n      @ ;\n       OUTPUT WRKLOAD2;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF R722PG   PIB2. R722DMN  PIB2. R722USER PIB4.\n           R722ACTV PIB4.   R722PAGE PIB4.   R722SWAP PIB4.\n           R722OUTR PIB4. R722ACTF PIB4. R722ACTS PIB4.\n           R722IDLE PIB4. R722IDLS PIB4. R722PGIN PIB4.\n           R722SLOT PIB4. R722DIV  PIB4. R722DIVS PIB4.\n           R722FIX  PIB4. R722ET   PIB8. R722QT   PIB8.\n           R722END  PIB4. R722UPRO PIB4. R722UDEV PIB4.\n           R722DPRO PIB4. R722DDEV PIB4. R722DSTO PIB4.\n           R722DJES PIB4. R722DHSM PIB4. R722DXCF PIB4.\n           R722DENQ PIB4. R722DMNT PIB4. R722DMSG PIB4.\n           R722UNKN PIB4. R722VALD PIB4. R722LSCT PIB4.\n           R722ESCT PIB4. R722PSCT PIB4. R722LSCF PIB4.\n           R722LSEF PIB4. R722LSSA PIB4. R722PSEF PIB4.\n           R722PSSA PIB4. R722VECT PIB4. R722ACFF PIB4.\n           R722IDLF PIB4. R722SLTF PIB4. R722DIVF PIB4.\n           R722FIXF PIB4.\n       @ ;\n       OUTPUT PG2;\n   END;\n   END;  * TYPE 2;\nRETURN;\nPROC PRINT DATA=T72;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=WORKLOAD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=WRKLOAD2;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PG;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PG2;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72SP": {"ttr": 3595, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x88\\x07_\\x00\\x88\\x07\\x7f\\x12P\\x00]\\x00b\\x00\\r\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1988-03-15T00:00:00", "modifydate": "1988-03-17T12:50:00", "lines": 93, "newlines": 98, "modlines": 13, "user": "C4SYSDM"}, "text": "//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE,WORK='99,2'\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//DATLIB  DD DSN=C4H1.PROD.RMFDEC87,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA T72 (KEEP =\n      TIMEOUT\n      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL\n      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)\n      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD\n      SMF72IST         SMF72DAT\n      SMF72INT         SMF72MFL       SMF72SAM\n      SMF72RV2         SMF72FLA       SMF72RLS\n      SMF72CYC         SMF72MVS       SMF72IML   SMF72RV3 )\n      WORKLOAD (KEEP = TIMEOUT SMFXXSID SMF72ADJ)\n         PG (KEEP = TIMEOUT\n             SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM         SMF72LEV         SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ETI\n           SMF72ET2\n  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 72;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.\n        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.\n        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.\n        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.\n        SMF72PGN PIB2. @;\n *OUTPUT T72;\n  DO I=1 TO SMF72PRN;\n  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;\n  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.\n             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.\n             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.\n             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.\n             SMF72IML PIB1.    SMF72RV9 PIB3.\n  @;\n *OUTPUT PRODUCT;\n  END;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n         SMF72ADJ PIB4.\n      @ ;\n       OUTPUT WORKLOAD;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ETI PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n      *OUTPUT PG;\n   END;\nRETURN;\n PROC SORT DATA=WORKLOAD; BY SMFXXSID TIMEOUT SMF72ADJ;\n DATA;\n RETAIN LASTSP 0;\n SET;\n IF LASTSP \u00ac= SMF72ADJ THEN OUTPUT;\n LASTSP = SMF72ADJ;\n RETURN;\n PROC PRINT;\n FORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72SPR": {"ttr": 3841, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x88\\x08\\x9f\\x00\\x88\\x08\\x9f\\x12Q\\x00[\\x00[\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1988-03-29T00:00:00", "modifydate": "1988-03-29T12:51:00", "lines": 91, "newlines": 91, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE,WORK='99,2'\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//DATLIB  DD DSN=C4H1.PROD.RMFFEB88,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA T72 (KEEP =\n      TIMEOUT\n      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL\n      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)\n      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD\n      SMF72IST         SMF72DAT\n      SMF72INT         SMF72MFL       SMF72SAM\n      SMF72RV2         SMF72FLA       SMF72RLS\n      SMF72CYC         SMF72MVS       SMF72IML   SMF72RV3 )\n      WORKLOAD (KEEP = TIMEOUT SMFXXSID SMF72ADJ)\n         PG (KEEP = TIMEOUT\n             SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM         SMF72LEV         SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ETI\n           SMF72ET2\n  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 72;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.\n        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.\n        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.\n        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.\n        SMF72PGN PIB2. @;\n *OUTPUT T72;\n  DO I=1 TO SMF72PRN;\n  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;\n  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.\n             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.\n             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.\n             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.\n             SMF72IML PIB1.    SMF72RV9 PIB3.\n  @;\n *OUTPUT PRODUCT;\n  END;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n         SMF72ADJ PIB4.\n      @ ;\n       OUTPUT WORKLOAD;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ETI PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n      *OUTPUT PG;\n   END;\nRETURN;\n PROC SORT DATA=WORKLOAD; BY SMFXXSID TIMEOUT SMF72ADJ;\n DATA X (KEEP = TIMEOUT SMF72ADJ);\n SET;\n IF SMFXXSID = 'C4#3';\n RETURN;\n PROC PRINT;\n FORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72TSO": {"ttr": 3844, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x10\\x00\\x00\\x00\\x85'\\x0f\\x00\\x88#o\\x10'\\x00\\x88\\x007\\x00l\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.16", "flags": 0, "createdate": "1985-09-27T00:00:00", "modifydate": "1988-08-23T10:27:00", "lines": 136, "newlines": 55, "modlines": 108, "user": "ED115DM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'TSO72',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//*** RESULTS NOT WEIGHTED BY ACTUAL NUMBERS IN EACH REPORTING PERIOD\n//*\n//SAS     EXEC SAS,OPTIONS='NODATE NOSOURCE'\n//*ATLIB  DD DSN=ESYS1.SMFDUMPW.TEST,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR,UNIT=3380,VOL=SER=C48120\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA PGPDS (KEEP= PP SDEV XXX H N1 N2 N3 N4\n                   TIMEOUT              SMFXXSID    SMF72SIZ\n       SMF72IST     SMF72DAT     SMF72INT\n       SMF72RV0     SMF72SUB     SMF72SAM     SMF72MFV\n       SMF72RV1     SMF72RLS     SMF72CYC\n           SMF72SWC         SMF72PGP         SMF72SPD\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72MSD         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS           SMF72USR         SMF72NAM\n           SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM       SMF72LEV       SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ET1\n           SMF72ET2 )\n         ;\n      ;\n  V=4; *4 VSAM , 0 NVSAM;\n  RETAIN N1 0 N2 0 N3 0 N4 0;\n  INFILE DATLIB VSAM;\n  INPUT @1+V SMFXXFLG PIB1.    SMFXXRTY PIB1.    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 72 THEN DELETE;\n      INPUT SMF72SIZ PIB2. SMF72IST PD4. SMF72DAT PD4.\n      SMF72INT RMFDUR. SMF72RV0 PIB1.\n      SMF72FG1 PIB1.   SMF72SUB PIB2. SMF72SAM PIB4.  SMF72MFV $CHAR2.\n      SMF72RV1 PIB2.   SMF72RLS $CHAR4.\n      SMF72CYC PD4. @ ;\n     INPUT SMF72SWC PIB2.   SMF72PGP PIB2.   SMF72SPD PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n      @ ;\n IF SMF72SUB >= 200;\n   DO PP = 1 TO SMF72PGP;\n      INPUT  SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n       IF SMF72TTX \u00ac=0 THEN DO;\n       IF PP=1 THEN N1+SMF72TTX; ELSE\n       IF PP=2 THEN N2+SMF72TTX; ELSE\n       IF PP=3 THEN N3+SMF72TTX; ELSE\n       IF PP=4 THEN N4+SMF72TTX;\n       SMF72SER = SMF72SER / SMF72TTX;\n       SMF72CTS = SMF72CTS / SMF72TTX;\n       SMF72ITS = SMF72ITS / SMF72TTX;\n       SMF72MTS = SMF72MTS / SMF72TTX;\n       SMF72STS = SMF72STS / SMF72TTX;\n       RT = SMF72TTM / SMF72TTX;\n       SMF72TTM = SMF72TTM * 1024 /1000000;\n       SMF72TAT = SMF72TAT * 1024 /1000000;\n       SMF72ACT = SMF72ACT * 1024 /1000000;\n       SMF72TTM = SMF72TTM / SMF72TTX;\n       SMF72TAT = SMF72TAT / SMF72TTX;\n       SMF72ACT = SMF72ACT / SMF72TTX;\n       SMF72LEV = SMF72LEV / 256;\n     * SMF72LEV = SMF72LEV / SMF72TTX;\n       SMF72SPP = SMF72SPP / SMF72TTX;\n       SDEV     = SMF72ET1*(2**32) + SMF72ET2;\n       SDEV     = SDEV     / SMF72TTX;\n       SDEV = SQRT(SDEV - RT**2);\n       SDEV = SDEV *1024 / 1000000;\n       XXX = '   ';\n       IF PP = 1 AND SMF72SER > 200 THEN XXX = '***'; ELSE\n       IF PP = 2 AND SMF72SER > 2000 THEN XXX = '***'; ELSE\n       IF PP = 3 AND SMF72SER > 12000 THEN XXX = '***';\n       H = HOUR(TIMEOUT);\n       OUTPUT PGPDS;\n       END;\n   END;\nDELETE;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nPROC SORT DATA=PGPDS; BY PP;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE TOTAL SERVICE UNITS';\nHBAR SMF72SER;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE CPU SERVICE UNITS';\nHBAR SMF72CTS;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE IO SERVICE UNITS';\nHBAR SMF72ITS;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE MSO SERVICE UNITS';\nHBAR SMF72MTS;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE SRB SERVICE UNITS';\nHBAR SMF72STS;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE ACTIVE TIME IN SECONDS';\nHBAR SMF72ACT;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE ELAPSED TIME IN SECONDS';\nHBAR SMF72TTM;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'STANDARD DEVIATION OF ELAPSED TIME IN SECONDS';\nHBAR SDEV;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE TRANSACTION RESIDENCY TIME IN SECONDS';\nHBAR SMF72TAT;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE WORKLOAD LEVEL';\nHBAR SMF72LEV;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'AVERAGE SWAPS PER TRANSACTION';\nHBAR SMF72SPP;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'DOMAIN NUMBER';\nHBAR SMF72CDN;\nPROC CHART DATA=PGPDS; BY PP;\nTITLE 'PERFORMANCE OBJECTIVE NUMBER';\nHBAR SMF72PON;\nPROC PLOT DATA=PGPDS;\nTITLE 'CUMULATIVE NUMBER OF TRANSACTIONS IN PP';\nPLOT N1*H='1';\nPLOT N2*H='2';\nPLOT N3*H='3';\nPLOT N4*H='4';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72TS1": {"ttr": 3847, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00\\x00\\x00\\x85'O\\x00\\x86&\\x8f\\x13P\\x00\\x90\\x00\\x87\\x00\\x1c\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "1985-10-01T00:00:00", "modifydate": "1986-09-25T13:50:00", "lines": 144, "newlines": 135, "modlines": 28, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'TSO72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM\n//*********************************************************************\n//* DOC:   SAS INSTALLATION\n//* REFER: C4S1.PROD.SAS.CNTL(BTSAS)\n//* DATE:  30/09/1983          AK\n//*********************************************************************\n//*\n//*\n//SAS    EXEC VSAS,OPTIONS='NODATE NOSOURCE'\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN3,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA PGPDS (KEEP= PP SDEV XXX H N1 N2 N3 N4\n                   TIMEOUT              SMFXXSID    SMF72SIZ\n       SMF72IST     SMF72DAT     SMF72INT\n       SMF72RV0     SMF72SUB     SMF72SAM     SMF72MFV\n       SMF72RV1     SMF72RLS     SMF72CYC\n           SMF72SWC         SMF72PGP         SMF72SPD\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72MSD         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS           SMF72USR         SMF72NAM\n           SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM       SMF72LEV       SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ET1\n           SMF72ET2 )\n         ;\n      ;\n  V=0; *4 VSAM , 0 NVSAM;\n  RETAIN N1 0 N2 0 N3 0 N4 0;\n  INFILE DATLIB;\n  INPUT @1+V SMFXXFLG PIB1.    SMFXXRTY PIB1.    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY \u00ac= 72 THEN DELETE;\n      INPUT SMF72SIZ PIB2. SMF72IST PD4. SMF72DAT PD4.\n      SMF72INT RMFDUR. SMF72RV0 PIB1.\n      SMF72FG1 PIB1.   SMF72SUB PIB2. SMF72SAM PIB4.  SMF72MFV $CHAR2.\n      SMF72RV1 PIB2.   SMF72RLS $CHAR4.\n      SMF72CYC PD4. @ ;\n     INPUT SMF72SWC PIB2.   SMF72PGP PIB2.   SMF72SPD PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n      @ ;\n IF SMF72SUB >= 200;\n   DO PP = 1 TO SMF72PGP;\n      INPUT  SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n       IF SMF72TTX \u00ac=0 THEN DO;\n       IF PP=1 THEN N1+SMF72TTX; ELSE\n       IF PP=2 THEN N2+SMF72TTX; ELSE\n       IF PP=3 THEN N3+SMF72TTX; ELSE\n       IF PP=4 THEN N4+SMF72TTX;\n       SMF72SER = SMF72SER / SMF72TTX;\n       SMF72CTS = SMF72CTS / SMF72TTX;\n       SMF72ITS = SMF72ITS / SMF72TTX;\n       SMF72MTS = SMF72MTS / SMF72TTX;\n       SMF72STS = SMF72STS / SMF72TTX;\n       RT = SMF72TTM / SMF72TTX;\n       SMF72TTM = SMF72TTM * 1024 /1000000;\n       SMF72TAT = SMF72TAT * 1024 /1000000;\n       SMF72ACT = SMF72ACT * 1024 /1000000;\n       SMF72TTM = SMF72TTM / SMF72TTX;\n       SMF72TAT = SMF72TAT / SMF72TTX;\n       SMF72ACT = SMF72ACT / SMF72TTX;\n       SMF72LEV = SMF72LEV / 256;\n     * SMF72LEV = SMF72LEV / SMF72TTX;\n       SMF72SPP = SMF72SPP / SMF72TTX;\n       SDEV     = SMF72ET1*(2**32) + SMF72ET2;\n       SDEV     = SDEV     / SMF72TTX;\n       SDEV = SQRT(SDEV - RT**2);\n       SDEV = SDEV *1024 / 1000000;\n       XXX = '   ';\n       IF PP = 1 AND SMF72SER > 200 THEN XXX = '***'; ELSE\n       IF PP = 2 AND SMF72SER > 2000 THEN XXX = '***'; ELSE\n       IF PP = 3 AND SMF72SER > 12000 THEN XXX = '***';\n       H = HOUR(TIMEOUT);\n       IF SMF72SER > 20000 THEN DELETE;\n       DO  I=1 TO SMF72TTX;\n       OUTPUT PGPDS;\n       END;\n       END;\n   END;\nDELETE;\n*ROC PRINT;\n*ORMAT TIMEOUT DATETIME.;\n*ROC SORT DATA=PGPDS; BY PP;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE TOTAL SERVICE UNITS';\nHBAR SMF72SER / MIDPOINTS = 100 TO 10000 BY 100;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE CPU SERVICE UNITS';\nHBAR SMF72CTS / MIDPOINTS = 100 TO 10000 BY 100;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE IO SERVICE UNITS';\nHBAR SMF72ITS / MIDPOINTS = 100 TO 10000 BY 100;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE MSO SERVICE UNITS';\nHBAR SMF72MTS / MIDPOINTS = 100 TO 10000 BY 100;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE SRB SERVICE UNITS';\nHBAR SMF72STS / MIDPOINTS = 100 TO 10000 BY 100;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE ACTIVE TIME IN SECONDS';\nHBAR SMF72ACT;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE ELAPSED TIME IN SECONDS';\nHBAR SMF72TTM / MIDPOINTS = 0.1 TO 30.0 BY 0.1;\nPROC CHART DATA=PGPDS;\nTITLE 'STANDARD DEVIATION OF ELAPSED TIME IN SECONDS';\nHBAR SDEV;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE TRANSACTION RESIDENCY TIME IN SECONDS';\nHBAR SMF72TAT;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE WORKLOAD LEVEL';\nHBAR SMF72LEV;\nPROC CHART DATA=PGPDS;\nTITLE 'AVERAGE SWAPS PER TRANSACTION';\nHBAR SMF72SPP;\nPROC CHART DATA=PGPDS;\nTITLE 'DOMAIN NUMBER';\nHBAR SMF72CDN;\nPROC CHART DATA=PGPDS;\nTITLE 'PERFORMANCE OBJECTIVE NUMBER';\nHBAR SMF72PON;\n*ROC PLOT DATA=PGPDS;\n*ITLE 'CUMULATIVE NUMBER OF TRANSACTIONS IN PP';\n*LOT N1*H='1';\n*LOT N2*H='2';\n*LOT N3*H='3';\n*LOT N4*H='4';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72XA": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x956?\\x00\\x956?\\x08\\x08\\x00b\\x00b\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-12-29T00:00:00", "modifydate": "1995-12-29T08:08:00", "lines": 98, "newlines": 98, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//DATLIB  DD DSN=EDH1.PROD.RMFDEC94,DISP=SHR\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA T72 (KEEP =\n      TIMEOUT\n      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL\n      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)\n      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD\n      SMF72IST         SMF72DAT\n      SMF72INT         SMF72MFL       SMF72SAM\n      SMF72RV2         SMF72FLA       SMF72RLS\n      SMF72CYC         SMF72MVS       SMF72IML   SMF72RV3 )\n      WORKLOAD (KEEP = TIMEOUT\n           SMF72FGI         SMF72RV3         SMF72SUB\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72MSD         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS          SMF72USR          SMF72NAM SMF72ADJ)\n         PG (KEEP = TIMEOUT\n             SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM         SMF72LEV         SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ETI\n           SMF72ET2\n  );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 72;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.\n        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.\n        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.\n        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.\n        SMF72PGN PIB2. @;\n  OUTPUT T72;\n  DO I=1 TO SMF72PRN;\n  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;\n  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.\n             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.\n             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.\n             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.\n             SMF72IML PIB1.    SMF72RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n         SMF72ADJ PIB4.\n      @ ;\n       OUTPUT WORKLOAD;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ETI PIB4.\n           SMF72ET2 PIB4.\n       @ ;\n       OUTPUT PG;\n   END;\nRETURN;\nPROC PRINT DATA=T72;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=WORKLOAD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PG;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF72X7": {"ttr": 3854, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x956?\\x00\\x956?\\t\\x10\\x00\\xaa\\x00\\xaa\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-12-29T00:00:00", "modifydate": "1995-12-29T09:10:00", "lines": 170, "newlines": 170, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB  DD DSN=EDH1.PROD.RMFDEC94,DISP=SHR\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 72;\n  DATA T72 (KEEP =\n      TIMEOUT\n      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL\n      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)\n      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD\n      SMF72IST         SMF72DAT\n      SMF72INT         SMF72MFL       SMF72SAM\n      SMF72RV2         SMF72FLA       SMF72RLS\n      SMF72CYC         SMF72MVS\n             SMF72IML          SMF72PRF           SMF72PTN\n             SMF72SRL          SMF72IET\n             )\n      WORKLOAD (KEEP = TIMEOUT\n           SMF72FGI         SMF72RV3         SMF72SUB\n           SMF72HGP         SMF72IPS         SMF72IRF\n           SMF72CRF         SMF72ERF         SMF72ISD\n           SMF72CSD         SMF72RV4         SMF72SSD\n           SMF72OPT         SMF72ICS         SMF72SYS\n         SMF72CLS          SMF72USR          SMF72NAM\n         SMF72ADJ          SM72MSD\n             )\n      WRKLOAD2 (KEEP = TIMEOUT\n                R722TSR          R7222RV3         R722TOT\n           R722NXT          R722IPS\n             )\n         PG (KEEP = TIMEOUT\n             SMF72TTX       SMF72ACT       SMF72SER\n           SMF72TTM         SMF72LEV         SMF72MTS\n           SMF72ITS       SMF72CTS       SMF72TAT\n           SMF72SPP       SMF72CDN       SMF72PON\n           SMF72TSG       SMF72STS       SMF72ET1\n           SMF72ET2       SMF72PIN       SMF72FT1\n           SMF72FT2       SMF72HIN       SMF72HRM\n           SMF72BPI       SMF72PIE       SMF72BPE\n           SMF72BKA       SMF72BKE       SMF72ER1\n           SMF72ER2       SMF72RCT       SMF72IIT\n           SMF72HST       SMF72TST\n  )\n         PG2 (KEEP = TIMEOUT\n                 R722PG         R722DMN        R722USER\n           R722ACTV         R722PAGE         R722SWAP\n           R722OUTR       R722ACTF       R722ACTS\n           R722IDLE       R722IDLS       R722PGIN\n           R722SLOT       R722DIV        R722DIVS\n           R722FIX        R722ET         R722QT\n           R722END        R722UPRO       R722UDEV\n           R722DPRO       R722DDEV       R722DSTO\n           R722DJES       R722DHSM       R722DXCF\n           R722DENQ       R722DMNT       R722DMSG\n           R722UNKN       R722VALD       R722LSCT\n           R722ESCT       R722PSCT       R722LSCF\n           R722LSEF       R722LSSA       R722PSEF\n           R722PSSA       R722VECT       R722ACFF\n           R722IDLF       R722SLTF       R722DIVF\n           R722FIXF\n  )\n  ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 72;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.\n        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.\n        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.\n        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.\n        SMF72PGN PIB2. @;\n  OUTPUT T72;\n  DO I=1 TO SMF72PRN;\n  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;\n  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.\n             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.\n             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.\n             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.\n             SMF72IML PIB1.    SMF72PRF PIB1.     SMF72PTN PIB1.\n             SMF72SRL PIB1.    SMF72IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  IF SMF72STY = 1 THEN DO;   * TYPE 1;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.\n           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.\n           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.\n           SMF72CSD $CHAR4. SMF72RV4 $CHAR4. SMF72SSD $CHAR4.\n           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.\n         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.\n         SMF72ADJ PIB4.    SM72MSD  $CHAR8.\n      @ ;\n  IF SMF72SUB = 170;\n       OUTPUT WORKLOAD;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.\n           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.\n           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.\n           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.\n           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.\n           SMF72ET2 PIB4. SMF72PIN PIB4. SMF72FT1 PIB4.\n           SMF72FT2 PIB4. SMF72HIN PIB4. SMF72HRM PIB4.\n           SMF72BPI PIB4. SMF72PIE PIB4. SMF72BPE PIB4.\n           SMF72BKA PIB4. SMF72BKE PIB4. SMF72ER1 PIB4.\n           SMF72ER2 PIB4. SMF72RCT PIB4. SMF72IIT PIB4.\n           SMF72HST PIB4. SMF72TST PIB4.\n       @ ;\n       OUTPUT PG;\n   END;\n   END;  * TYPE 1;\n  IF SMF72STY = 2 THEN DO;   * TYPE 2;\n   DO I = 0 TO (SMF72WLN-1);\n     OFF = V - 3 + SMF72WLS + I * SMF72WLL;\n     INPUT @OFF R722TSR  PIB2.   R7222RV3 PIB2.   R722TOT  PIB4.\n           R722NXT  PIB4.   R722IPS $CHAR8.\n      @ ;\n       OUTPUT WRKLOAD2;\n   END;\n   DO I = 0 TO (SMF72PGN-1);\n     OFF = V - 3 + SMF72PGS + I * SMF72PGL;\n      INPUT @OFF R722PG   PIB2. R722DMN  PIB2. R722USER PIB4.\n           R722ACTV PIB4.   R722PAGE PIB4.   R722SWAP PIB4.\n           R722OUTR PIB4. R722ACTF PIB4. R722ACTS PIB4.\n           R722IDLE PIB4. R722IDLS PIB4. R722PGIN PIB4.\n           R722SLOT PIB4. R722DIV  PIB4. R722DIVS PIB4.\n           R722FIX  PIB4. R722ET   PIB8. R722QT   PIB8.\n           R722END  PIB4. R722UPRO PIB4. R722UDEV PIB4.\n           R722DPRO PIB4. R722DDEV PIB4. R722DSTO PIB4.\n           R722DJES PIB4. R722DHSM PIB4. R722DXCF PIB4.\n           R722DENQ PIB4. R722DMNT PIB4. R722DMSG PIB4.\n           R722UNKN PIB4. R722VALD PIB4. R722LSCT PIB4.\n           R722ESCT PIB4. R722PSCT PIB4. R722LSCF PIB4.\n           R722LSEF PIB4. R722LSSA PIB4. R722PSEF PIB4.\n           R722PSSA PIB4. R722VECT PIB4. R722ACFF PIB4.\n           R722IDLF PIB4. R722SLTF PIB4. R722DIVF PIB4.\n           R722FIXF PIB4.\n       @ ;\n       OUTPUT PG2;\n   END;\n   END;  * TYPE 2;\nRETURN;\n*ROC PRINT DATA=T72;\nFORMAT TIMEOUT DATETIME.;\n*ROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=WORKLOAD;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PG;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF73ESA": {"ttr": 4100, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x956?\\x00\\x956?\\x129\\x00`\\x00W\\x00\\x0f\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-12-29T00:00:00", "modifydate": "1995-12-29T12:39:00", "lines": 96, "newlines": 87, "modlines": 15, "user": "ED115DM"}, "text": "//C4SYSDM3 JOB EDPCSBS1,'RMF73',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 73';\nDATA T73 (KEEP = TIMEOUT SMFXXSID\n        SMF73SSI          SMF73STY        SMF73TRN\n        SMF73RV1          SMF73PRS        SMF73PRL\n        SMF73PRN          SMF73HIS        SMF73HIL\n        SMF73HIN          SMF73HPS        SMF73HPL\n        SMF73HPN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF73MFV          SMF73PRD           SMF73IST\n             SMF73DAT          SMF73INT           SMF73MFL\n             SMF73SAM          SMF73RV2           SMF73FLA\n             SMF73RLS          SMF73CYC           SMF73MVS\n             SMF73IML          SMF73PRF\n             SMF73PTN          SMF73SRL           SMF73IET\n             )\n     PCONTROL (KEEP = TIMEOUT\n             SMF73SMP          SMF73CFL          SMF73RS3\n             SMF73TNM          SMF73TSF          SMF73RS4\n             SMF73TOK          SMF73TDT          SMF73TTM\n             SMF73CRC          SMF73CSC\n             )\n     CHPID    (KEEP = TIMEOUT\n             SMF73PID          SMF73FG2\n             SMF73FG3\n             SMF73FG4          SMF73BSY           SMF73PBY\n             SMF73PTI\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 73;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF73SSI $CHAR4.  SMF73STY PIB2.  SMF73TRN PIB2.\n        SMF73RV1 PIB2.    SMF73PRS PIB4.  SMF73PRL PIB2.\n        SMF73PRN PIB2.    SMF73HIS PIB4.  SMF73HIL PIB2.\n        SMF73HIN PIB2.    SMF73HPS PIB4.  SMF73HPL PIB2.\n        SMF73HPN PIB2. @;\n  OUTPUT T73;\n  DO I=1 TO SMF73PRN;\n  OFF = V -3 + SMF73PRS + (I-1)*SMF73PRL;\n  INPUT @OFF SMF73MFV $CHAR2.  SMF73PRD $CHAR8.   SMF73IST PD4.\n             SMF73DAT PD4.     SMF73INT RMFDUR.   SMF73MFL PIB2.\n             SMF73SAM PIB4.    SMF73RV2 PIB2.     SMF73FLA PIB2.\n             SMF73RLS $CHAR4.  SMF73CYC PD4.      SMF73MVS $CHAR8.\n             SMF73IML PIB1.    SMF73PRF PIB1.\n             SMF73PTN PIB1.    SMF73SRL PIB1.     SMF73IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF73HIN;\n  OFF = V -3 + SMF73HIS + (I-1)*SMF73HIL;\n  INPUT @OFF SMF73SMP PIB4.    SMF73CFL  PIB1.   SMF73RS3 PIB3.\n             SMF73TNM $CHAR44. SMF73TSF  $CHAR2. SMF73RS4 PIB2.\n             SMF73TOK $CHAR16. SMF73TDT  $CHAR8. SMF73TTM  $CHAR8.\n             SMF73CRC PIB4.    SMF73CSC  PIB4.\n  @;\n  OUTPUT PCONTROL;\n  END;\n  DO I=1 TO SMF73HPN;\n  OFF = V -3 + SMF73HPS + (I-1)*SMF73HPL;\n  INPUT @OFF SMF73PID PIB1.    SMF73FG2 PIB1.     SMF73FG3 PIB1.\n             SMF73FG4 PIB1.    SMF73BSY PIB4.     SMF73PBY PIB4.\n             SMF73PTI PIB4.\n  @;\n  OUTPUT CHPID;\n  END;\nRETURN;\nPROC PRINT DATA=T73;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF73INT TIME.;\nPROC PRINT DATA=PCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=CHPID;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF73XA": {"ttr": 4103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x956?\\x00\\x956?\\x11I\\x00U\\x00U\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-12-29T00:00:00", "modifydate": "1995-12-29T11:49:00", "lines": 85, "newlines": 85, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM3 JOB EDPCSBS1,'RMF73',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 73';\nDATA T73 (KEEP = TIMEOUT SMFXXSID\n        SMF73SSI          SMF73STY        SMF73TRN\n        SMF73RV1          SMF73PRS        SMF73PRL\n        SMF73PRN          SMF73HIS        SMF73HIL\n        SMF73HIN          SMF73HPS        SMF73HPL\n        SMF73HPN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF73MFV          SMF73PRD           SMF73IST\n             SMF73DAT          SMF73INT           SMF73MFL\n             SMF73SAM          SMF73RV2           SMF73FLA\n             SMF73RLS          SMF73CYC           SMF73MVS\n             SMF73IML          SMF73RV9\n             )\n     PCONTROL (KEEP = TIMEOUT\n             SMF73SMP\n             )\n     CHPID    (KEEP = TIMEOUT\n             SMF73PID          SMF73FG2           SMF73RV5\n             SMF73BSY\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 73;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF73SSI $CHAR4.  SMF73STY PIB2.  SMF73TRN PIB2.\n        SMF73RV1 PIB2.    SMF73PRS PIB4.  SMF73PRL PIB2.\n        SMF73PRN PIB2.    SMF73HIS PIB4.  SMF73HIL PIB2.\n        SMF73HIN PIB2.    SMF73HPS PIB4.  SMF73HPL PIB2.\n        SMF73HPN PIB2. @;\n  OUTPUT T73;\n  DO I=1 TO SMF73PRN;\n  OFF = V -3 + SMF73PRS + (I-1)*SMF73PRL;\n  INPUT @OFF SMF73MFV $CHAR2.  SMF73PRD $CHAR8.   SMF73IST PD4.\n             SMF73DAT PD4.     SMF73INT RMFDUR.   SMF73MFL PIB2.\n             SMF73SAM PIB4.    SMF73RV2 PIB2.     SMF73FLA PIB2.\n             SMF73RLS $CHAR4.  SMF73CYC PD4.      SMF73MVS $CHAR8.\n             SMF73IML PIB1.    SMF73RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF73HIN;\n  OFF = V -3 + SMF73HIS + (I-1)*SMF73HIL;\n  INPUT @OFF SMF73SMP PIB4.\n  @;\n  OUTPUT PCONTROL;\n  END;\n  DO I=1 TO SMF73HPN;\n  OFF = V -3 + SMF73HPS + (I-1)*SMF73HPL;\n  INPUT @OFF SMF73PID PIB1.    SMF73FG2 PIB1.     SMF73RV5 PIB2.\n             SMF73BSY PIB4.\n  @;\n  OUTPUT CHPID;\n  END;\nRETURN;\nPROC PRINT DATA=T73;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF73INT TIME.;\nPROC PRINT DATA=PCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=CHPID;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF74COM": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x90 \\x7f\\x00\\x90 \\x7f\\x13'\\x00n\\x00m\\x00\\x02\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-07-26T00:00:00", "modifydate": "1990-07-26T13:27:00", "lines": 110, "newlines": 109, "modlines": 2, "user": "ED115DM"}, "text": "//C4SYSDM4 JOB EDPCSBS1,'RMF74',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS606,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 74';\nDATA T74 (KEEP = TIMEOUT SMFXXSID\n        SMF74SSI          SMF74STY        SMF74TRN\n        SMF74RV1          SMF74PRS        SMF74PRL\n        SMF74PRN          SMF74DCS        SMF74DCL\n        SMF74DCN          SMF74DDS        SMF74DDL\n        SMF74DDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF74MFV          SMF74PRD           SMF74IST\n             SMF74DAT          SMF74INT           SMF74MFL\n             SMF74SAM          SMF74RV2           SMF74FLA\n             SMF74RLS          SMF74CYC           SMF74MVS\n             SMF74IML          SMF74RV9\n             )\n     DCONTROL (KEEP = TIMEOUT\n             SMF74NXT          SMF74TOT           SMF74GEN\n             SMF74SUB\n             )\n     DEVICE   (KEEP = TIMEOUT\n             SMF74NUM          SMF74LCU           SMF74RV3\n             SMF74CNF          SMF74SER\n             SMF74NUX          SMF74SSC           SMF74MEC\n             SMF74CNN          SMF74PEN           SMF74ATV\n             SMF74DIS          SMF74QUE           SMF74UTL\n             SMF74RSV          SMF74DSO           SMF74ALC\n             SMF74MTP          SMF74NRD           SMF74COF\n             SMF74RV8\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF; * MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 74;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF TIMEPART(TIMEOUT) > '12:00'T THEN STOP;\n  INPUT SMF74SSI $CHAR4.  SMF74STY PIB2.  SMF74TRN PIB2.\n        SMF74RV1 PIB2.    SMF74PRS PIB4.  SMF74PRL PIB2.\n        SMF74PRN PIB2.    SMF74DCS PIB4.  SMF74DCL PIB2.\n        SMF74DCN PIB2.    SMF74DDS PIB4.  SMF74DDL PIB2.\n        SMF74DDN PIB2. @;\n  *UTPUT T74;\n  DO I=1 TO SMF74PRN;\n  OFF = V -3 + SMF74PRS + (I-1)*SMF74PRL;\n  INPUT @OFF SMF74MFV $CHAR2.  SMF74PRD $CHAR8.   SMF74IST PD4.\n             SMF74DAT PD4.     SMF74INT RMFDUR.   SMF74MFL PIB2.\n             SMF74SAM PIB4.    SMF74RV2 PIB2.     SMF74FLA PIB2.\n             SMF74RLS $CHAR4.  SMF74CYC PD4.      SMF74MVS $CHAR8.\n             SMF74IML PIB1.    SMF74RV9 PIB3.\n  @;\n  *UTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF74DCN;\n  OFF = V -3 + SMF74DCS + (I-1)*SMF74DCL;\n  INPUT @OFF SMF74NXT PIB2.    SMF74TOT PIB2.     SMF74GEN PIB2.\n             SMF74SUB PIB2.\n  @;\n  *UTPUT DCONTROL;\n  END;\n  DO I=1 TO SMF74DDN;\n  OFF = V -3 + SMF74DDS + (I-1)*SMF74DDL;\n  INPUT @OFF SMF74NUM PIB2.    SMF74LCU PIB2.     SMF74RV3 PIB1.\n             SMF74CNF PIB1.    SMF74SER $CHAR6.   SMF74TYP PIB4.\n             SMF74NUX PIB4.    SMF74SSC PIB4.     SMF74MEC PIB4.\n             SMF74CNN PIB4.    SMF74PEN PIB4.     SMF74ATV PIB4.\n             SMF74DIS PIB4.    SMF74QUE PIB4.     SMF74UTL PIB4.\n             SMF74RSV PIB4.    SMF74DSO PIB4.     SMF74ALC PIB4.\n             SMF74MTP PIB4.    SMF74NRD PIB4.     SMF74COF PIB2.\n             SMF74RV8 PIB2.\n  @;\n        SMF74CNN = SMF74CNN * 128 / 1000000;\n        SMF74PEN = SMF74PEN * 128 / 1000000;\n        SMF74ATV = SMF74ATV * 128 / 1000000;\n        SMF74DIS = SMF74DIS * 128 / 1000000;\n  IF SMF74TYP = 1342193905 THEN OUTPUT DEVICE;\n  *F SMF74SER = 'C48078'   THEN OUTPUT DEVICE;\n  END;\nRETURN;\n*ROC PRINT DATA=T74;\n*ORMAT TIMEOUT DATETIME.;\n*ROC PRINT DATA=PRODUCT;\n*ORMAT TIMEOUT DATETIME.;\n*ORMAT SMF74INT TIME.;\n*ROC PRINT DATA=DCONTROL;\n*ORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DEVICE;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF74CNN TIME.;\nFORMAT SMF74PEN TIME.;\nFORMAT SMF74ATV TIME.;\nFORMAT SMF74DIS TIME.;\nFORMAT SMF74NUM HEX4.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF74DSK": {"ttr": 4109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91&\\x9f\\x00\\x91&\\x9f\\x13\\x16\\x00m\\x00f\\x00\\x0b\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-09-26T00:00:00", "modifydate": "1991-09-26T13:16:00", "lines": 109, "newlines": 102, "modlines": 11, "user": "ED115DM"}, "text": "//C4SYSDM4 JOB EDPCSBS1,'RMF74',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 74';\nDATA T74 (KEEP = TIMEOUT SMFXXSID\n        SMF74SSI          SMF74STY        SMF74TRN\n        SMF74RV1          SMF74PRS        SMF74PRL\n        SMF74PRN          SMF74DCS        SMF74DCL\n        SMF74DCN          SMF74DDS        SMF74DDL\n        SMF74DDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF74MFV          SMF74PRD           SMF74IST\n             SMF74DAT          SMF74INT           SMF74MFL\n             SMF74SAM          SMF74RV2           SMF74FLA\n             SMF74RLS          SMF74CYC           SMF74MVS\n             SMF74IML          SMF74RV9\n             )\n     DCONTROL (KEEP = TIMEOUT\n             SMF74NXT          SMF74TOT           SMF74GEN\n             SMF74SUB\n             )\n     DEVICE   (KEEP = TIMEOUT\n             SMF74NUM          SMF74LCU           SMF74RV3\n             SMF74CNF          SMF74SER           SMF74TYP\n             SMF74NUX          SMF74SSC           SMF74MEC\n             SMF74CNN          SMF74PEN           SMF74ATV\n             SMF74DIS          SMF74QUE           SMF74UTL\n             SMF74RSV          SMF74DSO           SMF74ALC\n             SMF74MTP          SMF74NRD           SMF74COF\n             SMF74RV8          IORATE\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 74;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF74SSI $CHAR4.  SMF74STY PIB2.  SMF74TRN PIB2.\n        SMF74RV1 PIB2.    SMF74PRS PIB4.  SMF74PRL PIB2.\n        SMF74PRN PIB2.    SMF74DCS PIB4.  SMF74DCL PIB2.\n        SMF74DCN PIB2.    SMF74DDS PIB4.  SMF74DDL PIB2.\n        SMF74DDN PIB2. @;\n  OUTPUT T74;\n  DO I=1 TO SMF74PRN;\n  OFF = V -3 + SMF74PRS + (I-1)*SMF74PRL;\n  INPUT @OFF SMF74MFV $CHAR2.  SMF74PRD $CHAR8.   SMF74IST PD4.\n             SMF74DAT PD4.     SMF74INT RMFDUR.   SMF74MFL PIB2.\n             SMF74SAM PIB4.    SMF74RV2 PIB2.     SMF74FLA PIB2.\n             SMF74RLS $CHAR4.  SMF74CYC PD4.      SMF74MVS $CHAR8.\n             SMF74IML PIB1.    SMF74RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF74DCN;\n  OFF = V -3 + SMF74DCS + (I-1)*SMF74DCL;\n  INPUT @OFF SMF74NXT PIB2.    SMF74TOT PIB2.     SMF74GEN PIB2.\n             SMF74SUB PIB2.\n  @;\n  OUTPUT DCONTROL;\n  END;\n  DO I=1 TO SMF74DDN;\n  OFF = V -3 + SMF74DDS + (I-1)*SMF74DDL;\n  INPUT @OFF SMF74NUM PIB2.    SMF74LCU PIB2.     SMF74RV3 PIB1.\n             SMF74CNF PIB1.    SMF74SER $CHAR6.   SMF74TYP PIB4.\n             SMF74NUX PIB4.    SMF74SSC PIB4.     SMF74MEC PIB4.\n             SMF74CNN PIB4.    SMF74PEN PIB4.     SMF74ATV PIB4.\n             SMF74DIS PIB4.    SMF74QUE PIB4.     SMF74UTL PIB4.\n             SMF74RSV PIB4.    SMF74DSO PIB4.     SMF74ALC PIB4.\n             SMF74MTP PIB4.    SMF74NRD PIB4.     SMF74COF PIB2.\n             SMF74RV8 PIB2.\n  @;\n  IF SMF74MEC > 0 THEN DO;\n  SMF74CNN = SMF74CNN * 128 / 1000 / SMF74MEC;\n  SMF74PEN = SMF74PEN * 128 / 1000 / SMF74MEC;\n  SMF74ATV = SMF74ATV * 128 / 1000 / SMF74MEC;\n  SMF74DIS = SMF74DIS * 128 / 1000 / SMF74MEC;\n                       END;\n  IORATE = SMF74MEC / 10 / 60;\n  Z= TIMEPART(TIMEOUT);\n  IF (Z > '00:00'T AND Z < '01:00'T ) THEN\n  IF SMF74TYP = 808460302 THEN OUTPUT DEVICE;\n  END;\nRETURN;\nPROC PRINT DATA=T74;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF74INT TIME.;\nPROC PRINT DATA=DCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DEVICE;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF74NUM HEX4.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF74ESA": {"ttr": 4112, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x96\\x00?\\x00\\x96\\x13\\x8f\\x15!\\x00}\\x00n\\x00\\x18\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1996-01-03T00:00:00", "modifydate": "1996-05-17T15:21:00", "lines": 125, "newlines": 110, "modlines": 24, "user": "ED115DM"}, "text": "//C4SYSDM4 JOB EDPCSBS1,'RMF74',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 74';\nDATA T74 (KEEP = TIMEOUT SMFXXSID\n        SMF74SSI          SMF74STY        SMF74TRN\n        SMF74RV1          SMF74PRS        SMF74PRL\n        SMF74PRN          SMF74DCS        SMF74DCL\n        SMF74DCN          SMF74DDS        SMF74DDL\n        SMF74DDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF74MFV          SMF74PRD           SMF74IST\n             SMF74DAT          SMF74INT           SMF74MFL\n             SMF74SAM          SMF74RV2           SMF74FLA\n             SMF74RLS          SMF74CYC           SMF74MVS\n             SMF74IML          SMF74PRF           SMF74PTN\n             SMF74SRL          SMF74EIT\n             )\n     DCONTROL (KEEP = TIMEOUT\n             SMF74NXT          SMF74TOT           SMF74GEN\n             SMF74SUB          SMF74DCF           SMF74DMS\n             RES1              SMF74S15           SMF74SRC\n             SMF74SRS          SMF74TSR           SMF74CFL\n             RES2              SMF74TNM           SMF74TSF\n             RES3              SMF74TOK           SMF74TDT\n             SMF74TTM          RES4               SMF74MCT\n             )\n     DEVICE   (KEEP = TIMEOUT\n             SMF74NUM          SMF74LCU           SMF74RV3\n             SMF74CNF          SMF74SER           SMF74TYP\n             SMF74NUX          SMF74SSC           SMF74MEC\n             SMF74CNN          SMF74PEN           SMF74ATV\n             SMF74DIS          SMF74QUE           SMF74UTL\n             SMF74RSV          SMF74DSO           SMF74ALC\n             SMF74MTP          SMF74NRD           SMF74COF\n             SMF74ICT          SMF74DVB           SMF74CUB\n             SMF74CLF          RES5               SMF74SGN\n             SMF74NDA          SMF74DEV           SMF74CU\n             SMF74DPB          SMF74CNX           RES6\n             SMF74MTC\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 74;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF74SSI $CHAR4.  SMF74STY PIB2.  SMF74TRN PIB2.\n        SMF74RV1 PIB2.    SMF74PRS PIB4.  SMF74PRL PIB2.\n        SMF74PRN PIB2. @;\n  IF SMF74STY =1 THEN DO;   * SUB TYPE 1;\n  INPUT\n        SMF74DCS PIB4.  SMF74DCL PIB2.\n        SMF74DCN PIB2.    SMF74DDS PIB4.  SMF74DDL PIB2.\n        SMF74DDN PIB2. @;\n                     END; ELSE\n  IF SMF74STY =2 THEN DO;   * SUB TYPE 2;\n                     END;\n  OUTPUT T74;\n  DO I=1 TO SMF74PRN;\n  OFF = V -3 + SMF74PRS + (I-1)*SMF74PRL;\n  INPUT @OFF SMF74MFV $CHAR2.  SMF74PRD $CHAR8.   SMF74IST PD4.\n             SMF74DAT PD4.     SMF74INT RMFDUR.   SMF74MFL PIB2.\n             SMF74SAM PIB4.    SMF74RV2 PIB2.     SMF74FLA PIB2.\n             SMF74RLS $CHAR4.  SMF74CYC PD4.      SMF74MVS $CHAR8.\n             SMF74IML PIB1.    SMF74PRF PIB3.     SMF74PTN PIB1.\n             SMF74SRL PIB1.    SMF74EIT $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF74DCN;\n  OFF = V -3 + SMF74DCS + (I-1)*SMF74DCL;\n  INPUT @OFF SMF74NXT PIB2.    SMF74TOT PIB2.     SMF74GEN PIB2.\n             SMF74SUB PIB2.    SMF74DCF PIB1.     SMF74DMS PIB1.\n             RES1     PIB2.    SMF74S15 PIB4.     SMF74SRC PIB4.\n             SMF74SRS PIB4.    SMF74TSR PIB2.     SMF74CFL PIB1.\n             RES2     PIB3.    SMF74TNM $CHAR44.  SMF74TSF $CHAR2.\n             RES3     PIB2.    SMF74TOK $CHAR16.  SMF74TDT $CHAR8.\n             SMF74TTM $CHAR8.  RES4     PIB2.     SMF74MCT PIB4.\n  @;\n  OUTPUT DCONTROL;\n  END;\n  DO I=1 TO SMF74DDN;\n  OFF = V -3 + SMF74DDS + (I-1)*SMF74DDL;\n  INPUT @OFF SMF74NUM PIB2.    SMF74LCU PIB2.     SMF74RV3 PIB1.\n             SMF74CNF PIB1.    SMF74SER $CHAR6.   SMF74TYP PIB4.\n             SMF74NUX PIB4.    SMF74SSC PIB4.     SMF74MEC PIB4.\n             SMF74CNN PIB4.    SMF74PEN PIB4.     SMF74ATV PIB4.\n             SMF74DIS PIB4.    SMF74QUE PIB4.     SMF74UTL PIB4.\n             SMF74RSV PIB4.    SMF74DSO PIB4.     SMF74ALC PIB4.\n             SMF74MTP PIB4.    SMF74NRD PIB4.     SMF74COF PIB2.\n             SMF74ICT PIB2.    SMF74DVB PIB4.     SMF74CUB PIB4.\n             SMF74CLF PIB1.    RES5     PIB3.     SMF74SGN $CHAR8.\n             SMF74NDA PIB4.    SMF74DEV $CHAR8.   SMF74CU  $CHAR8.\n             SMF74DPB PIB4.    SMF74CNX PIB1.     RES6     PIB1.\n             SMF74MTC PIB2.\n  @;\n  OUTPUT DEVICE;\n  END;\nRETURN;\nPROC PRINT DATA=T74;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF74INT TIME.;\nPROC PRINT DATA=DCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DEVICE;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF74MX": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x99\\x05?\\x00\\x99\\x05?\\x12C\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe7\\xe2\\xc4\\xd4\\xd5@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-02-22T00:00:00", "modifydate": "1999-02-22T12:43:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "XSDMN"}, "text": "//XSDMNDMA JOB MSGCLASS=X,CLASS=A,REGION=4M,NOTIFY=XSDMN\n// EXEC MXGSAS\n//SMF    DD DSN=XSDMN.SMFDUMPW,DISP=SHR\n//SOURCLIB DD DSN=SAS.PROD.MXG.USERMOD.SOURCLIB,DISP=SHR\n//         DD DSN=SAS.PROD.MXG.SOURCLIB,DISP=SHR\n//LIBRARY  DD DSN=SAS.PROD.MXG.SASLIB,DISP=SHR\n//WRK      DD DSN=XSDMN.WRK.SAS,DISP=OLD\n//SYSIN DD DISP=SHR,DSN=SAS.PROD.MXG.SOURCLIB(TYPE74)\n//      DD *\nDATA WRK.TYPE74; SET TYPE74; RETURN;\nPROC PRINT DATA=TYPE74;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF74XA": {"ttr": 4357, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00?\\x00\\x96\\x00?\\x12G\\x00c\\x00c\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-03T00:00:00", "modifydate": "1996-01-03T12:47:00", "lines": 99, "newlines": 99, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM4 JOB EDPCSBS1,'RMF74',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 74';\nDATA T74 (KEEP = TIMEOUT SMFXXSID\n        SMF74SSI          SMF74STY        SMF74TRN\n        SMF74RV1          SMF74PRS        SMF74PRL\n        SMF74PRN          SMF74DCS        SMF74DCL\n        SMF74DCN          SMF74DDS        SMF74DDL\n        SMF74DDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF74MFV          SMF74PRD           SMF74IST\n             SMF74DAT          SMF74INT           SMF74MFL\n             SMF74SAM          SMF74RV2           SMF74FLA\n             SMF74RLS          SMF74CYC           SMF74MVS\n             SMF74IML          SMF74RV9\n             )\n     DCONTROL (KEEP = TIMEOUT\n             SMF74NXT          SMF74TOT           SMF74GEN\n             SMF74SUB\n             )\n     DEVICE   (KEEP = TIMEOUT\n             SMF74NUM          SMF74LCU           SMF74RV3\n             SMF74CNF          SMF74SER           SMF74TYP\n             SMF74NUX          SMF74SSC           SMF74MEC\n             SMF74CNN          SMF74PEN           SMF74ATV\n             SMF74DIS          SMF74QUE           SMF74UTL\n             SMF74RSV          SMF74DSO           SMF74ALC\n             SMF74MTP          SMF74NRD           SMF74COF\n             SMF74RV8\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 74;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF74SSI $CHAR4.  SMF74STY PIB2.  SMF74TRN PIB2.\n        SMF74RV1 PIB2.    SMF74PRS PIB4.  SMF74PRL PIB2.\n        SMF74PRN PIB2.    SMF74DCS PIB4.  SMF74DCL PIB2.\n        SMF74DCN PIB2.    SMF74DDS PIB4.  SMF74DDL PIB2.\n        SMF74DDN PIB2. @;\n  OUTPUT T74;\n  DO I=1 TO SMF74PRN;\n  OFF = V -3 + SMF74PRS + (I-1)*SMF74PRL;\n  INPUT @OFF SMF74MFV $CHAR2.  SMF74PRD $CHAR8.   SMF74IST PD4.\n             SMF74DAT PD4.     SMF74INT RMFDUR.   SMF74MFL PIB2.\n             SMF74SAM PIB4.    SMF74RV2 PIB2.     SMF74FLA PIB2.\n             SMF74RLS $CHAR4.  SMF74CYC PD4.      SMF74MVS $CHAR8.\n             SMF74IML PIB1.    SMF74RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF74DCN;\n  OFF = V -3 + SMF74DCS + (I-1)*SMF74DCL;\n  INPUT @OFF SMF74NXT PIB2.    SMF74TOT PIB2.     SMF74GEN PIB2.\n             SMF74SUB PIB2.\n  @;\n  OUTPUT DCONTROL;\n  END;\n  DO I=1 TO SMF74DDN;\n  OFF = V -3 + SMF74DDS + (I-1)*SMF74DDL;\n  INPUT @OFF SMF74NUM PIB2.    SMF74LCU PIB2.     SMF74RV3 PIB1.\n             SMF74CNF PIB1.    SMF74SER $CHAR6.   SMF74TYP PIB4.\n             SMF74NUX PIB4.    SMF74SSC PIB4.     SMF74MEC PIB4.\n             SMF74CNN PIB4.    SMF74PEN PIB4.     SMF74ATV PIB4.\n             SMF74DIS PIB4.    SMF74QUE PIB4.     SMF74UTL PIB4.\n             SMF74RSV PIB4.    SMF74DSO PIB4.     SMF74ALC PIB4.\n             SMF74MTP PIB4.    SMF74NRD PIB4.     SMF74COF PIB2.\n             SMF74RV8 PIB2.\n  @;\n  OUTPUT DEVICE;\n  END;\nRETURN;\nPROC PRINT DATA=T74;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF74INT TIME.;\nPROC PRINT DATA=DCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DEVICE;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF75ESA": {"ttr": 4360, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00O\\x00\\x96\\x00O\\t!\\x00U\\x00U\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "1996-01-04T09:21:00", "lines": 85, "newlines": 85, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM5 JOB EDPCSBS1,'RMF75',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN5,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 75';\nDATA T75 (KEEP = TIMEOUT SMFXXSID\n        SMF75SSI          SMF75STY        SMF75TRN\n        SMF75PRS          SMF75PRL        SMF75PRN\n        SMF75PSS          SMF75PSL        SMF75PSN\n        )\n     PRODUCT (KEEP = TIMEOUT\n             SMF75MFV          SMF75PRD           SMF75IST\n             SMF75DAT          SMF75INT           SMF75MFL\n             SMF75SAM          SMF75RV2           SMF75FLA\n             SMF75RLS          SMF75CYC           SMF75MVS\n             SMF75IML          SMF75PRF           SMF75PTN\n             SMF75SRL          SMF75IET\n             )\n     PGSPC    (KEEP = TIMEOUT\n             SMF75DSN          SMF75PST           SMF75FL2\n             SMF75RV5          SMF75TYP           SMF75CHA\n             SMF75VOL          SMF75RV3           SMF75SLA\n             SMF75MXU          SMF75MNU           SMF75AVU\n             SMF75BDS          SMF75USE           SMF75REQ\n             SMF75SIO          SMF75PGX           SMF75DEV\n             SMF75CU\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 75;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF75SSI $CHAR4.  SMF75STY PIB2.  SMF75TRN PIB2.\n        SMF75RV  PIB2.    SMF75PRS PIB4.  SMF75PRL PIB2.\n        SMF75PRN PIB2.    SMF75PSS PIB4.  SMF75PSL PIB2.\n        SMF75PSN PIB2.\n         @;\n  OUTPUT T75;\n  DO I=1 TO SMF75PRN;\n  OFF = V -3 + SMF75PRS + (I-1)*SMF75PRL;\n  INPUT @OFF SMF75MFV $CHAR2.  SMF75PRD $CHAR8.   SMF75IST PD4.\n             SMF75DAT PD4.     SMF75INT RMFDUR.   SMF75MFL PIB2.\n             SMF75SAM PIB4.    SMF75RV2 PIB2.     SMF75FLA PIB2.\n             SMF75RLS $CHAR4.  SMF75CYC PD4.      SMF75MVS $CHAR8.\n             SMF75IML PIB1.    SMF75PRF PIB1.     SMF75PTN PIB1.\n             SMF75SRL PIB1.    SMF75IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF75PSN;\n  OFF = V -3 + SMF75PSS + (I-1)*SMF75PSL;\n  INPUT @OFF SMF75DSN $CHAR44. SMF75PST PIB1.     SMF75FL2 PIB1.\n             SMF75RV5 PIB1.    SMF75TYP PIB4.     SMF75CHA PIB2.\n             SMF75VOL $CHAR6.  SMF75RV3 PIB5.     SMF75SLA PIB4.\n             SMF75MXU PIB4.    SMF75MNU PIB4.     SMF75AVU PIB4.\n             SMF75BDS PIB4.    SMF75USE PIB4.     SMF75REQ PIB4.\n             SMF75SIO PIB4.    SMF75PGX PIB4.     SMF75DEV $CHAR8.\n             SMF75CU  $CHAR8.\n  @;\n  OUTPUT PGSPC;\n  END;\nRETURN;\nPROC PRINT DATA=T75;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF75INT TIME.;\nPROC PRINT DATA=PGSPC;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF75XA": {"ttr": 4363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00O\\x00\\x96\\x00O\\t\\x17\\x00Q\\x00Q\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "1996-01-04T09:17:00", "lines": 81, "newlines": 81, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM5 JOB EDPCSBS1,'RMF75',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 75';\nDATA T75 (KEEP = TIMEOUT SMFXXSID\n        SMF75SSI          SMF75STY        SMF75TRN\n        SMF75PRS          SMF75PRL        SMF75PRN\n        SMF75PSS          SMF75PSL        SMF75PSN\n        )\n     PRODUCT (KEEP = TIMEOUT\n             SMF75MFV          SMF75PRD           SMF75IST\n             SMF75DAT          SMF75INT           SMF75MFL\n             SMF75SAM          SMF75RV2           SMF75FLA\n             SMF75RLS          SMF75CYC           SMF75MVS\n             SMF75IML          SMF75RV9\n             )\n     PGSPC    (KEEP = TIMEOUT\n             SMF75DSN          SMF75PST           SMF75FL2\n             SMF75RV5          SMF75TYP           SMF75CHA\n             SMF75VOL          SMF75RV3           SMF75SLA\n             SMF75MXU          SMF75MNU           SMF75AVU\n             SMF75BDS          SMF75USE           SMF75REQ\n             SMF75SIO          SMF75PGX           SMF75RV8\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 75;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF75SSI $CHAR4.  SMF75STY PIB2.  SMF75TRN PIB2.\n        SMF75RV  PIB2.    SMF75PRS PIB4.  SMF75PRL PIB2.\n        SMF75PRN PIB2.    SMF75PSS PIB4.  SMF75PSL PIB2.\n        SMF75PSN PIB2.\n         @;\n  OUTPUT T75;\n  DO I=1 TO SMF75PRN;\n  OFF = V -3 + SMF75PRS + (I-1)*SMF75PRL;\n  INPUT @OFF SMF75MFV $CHAR2.  SMF75PRD $CHAR8.   SMF75IST PD4.\n             SMF75DAT PD4.     SMF75INT RMFDUR.   SMF75MFL PIB2.\n             SMF75SAM PIB4.    SMF75RV2 PIB2.     SMF75FLA PIB2.\n             SMF75RLS $CHAR4.  SMF75CYC PD4.      SMF75MVS $CHAR8.\n             SMF75IML PIB1.    SMF75RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF75PSN;\n  OFF = V -3 + SMF75PSS + (I-1)*SMF75PSL;\n  INPUT @OFF SMF75DSN $CHAR44. SMF75PST PIB1.     SMF75FL2 PIB1.\n             SMF75RV5 PIB1.    SMF75TYP PIB4.     SMF75CHA PIB2.\n             SMF75VOL $CHAR6.  SMF75RV3 PIB5.     SMF75SLA PIB4.\n             SMF75MXU PIB4.    SMF75MNU PIB4.     SMF75AVU PIB4.\n             SMF75BDS PIB4.    SMF75USE PIB4.     SMF75REQ PIB4.\n             SMF75SIO PIB4.    SMF75PGX PIB4.     SMF75RV8 PIB4.\n  @;\n  OUTPUT PGSPC;\n  END;\nRETURN;\nPROC PRINT DATA=T75;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF75INT TIME.;\nPROC PRINT DATA=PGSPC;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF76ESA": {"ttr": 4366, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00O\\x00\\x96\\x00O\\t)\\x00i\\x00i\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "1996-01-04T09:29:00", "lines": 105, "newlines": 105, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM6 JOB EDPCSBS1,'RMF76',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN5,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 76';\nDATA T76 (KEEP = TIMEOUT SMFXXSID\n        SMF76SSI          SMF76STY        SMF76TRN\n        SMF76RV1          SMF76PRS        SMF76PRL\n        SMF76PRN          SMF76TCS        SMF76TCL\n        SMF76TCN          SMF76TDS        SMF76TDL\n        SMF76TDN          SMF76VFS        SMF76VFL\n        SMF76VFN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF76MFV          SMF76PRD           SMF76IST\n             SMF76DAT          SMF76INT           SMF76MFL\n             SMF76SAM          SMF76RV2           SMF76FLA\n             SMF76RLS          SMF76CYC           SMF76MVS\n             SMF76IML          SMF76PTN           SMF76SRL\n             SMF76IET\n             )\n     TCONTROL (KEEP = TIMEOUT\n             SMF76NUM          SMF76RV4\n             )\n     TDATA    (KEEP = TIMEOUT\n             SMF76NAM          SMF76OPT         SMF76OP1\n             SMF76SLN          SMF76DLN         SMF76SSS\n             SMF76SSL          SMF76MIN         SMF76MAX\n             SMF76AVG          S1F76STD         S2F76STD\n                               S3F76STD         SMF76ENV\n             )\n     TDATAV   (KEEP = TIMEOUT  SMF76C\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 76;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF76SSI $CHAR4.  SMF76STY PIB2.  SMF76TRN PIB2.\n        SMF76RV1 PIB2.    SMF76PRS PIB4.  SMF76PRL PIB2.\n        SMF76PRN PIB2.    SMF76TCS PIB4.  SMF76TCL PIB2.\n        SMF76TCN PIB2.    SMF76TDS PIB4.  SMF76TDL PIB2.\n        SMF76TDN PIB2.    SMF76VFS PIB4.  SMF76VFL PIB2.\n        SMF76VFN PIB2. @;\n  OUTPUT T76;\n  DO I=1 TO SMF76PRN;\n  OFF = V -3 + SMF76PRS + (I-1)*SMF76PRL;\n  INPUT @OFF SMF76MFV $CHAR2.  SMF76PRD $CHAR8.   SMF76IST PD4.\n             SMF76DAT PD4.     SMF76INT RMFDUR.   SMF76MFL PIB2.\n             SMF76SAM PIB4.    SMF76RV2 PIB2.     SMF76FLA PIB2.\n             SMF76RLS $CHAR4.  SMF76CYC PD4.      SMF76MVS $CHAR8.\n             SMF76IML PIB1.    SMF76PTN PIB1.     SMF76SRL PIB1.\n             SMF76IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF76TCN;\n  OFF = V -3 + SMF76TCS + (I-1)*SMF76TCL;\n  INPUT @OFF SMF76NUM PIB2.    SMF76RV4 PIB2.\n  @;\n  OUTPUT TCONTROL;\n  END;\n  DO I=1 TO SMF76TDN;\n  OFF = V -3 + SMF76TDS + (I-1)*SMF76TDL;\n  INPUT @OFF SMF76NAM $CHAR6.  SMF76OPT PIB1.   SMF76OP1 PIB1.\n             SMF76SLN PIB1.    SMF76DLN PIB1.   SMF76SSS PIB2.\n             SMF76SSL PIB2.    SMF76MIN PIB4.   SMF76MAX PIB4.\n             SMF76AVG PIB8.    S1F76STD PIB4. S2F76STD PIB4.\n                               S3F76STD PIB4.   SMF76ENV PIB4.\n  @;\n  OUTPUT TDATA;\n  END;\n  DO I=1 TO SMF76VFN;\n  OFF = V -3 + SMF76VFS + (I-1)*SMF76VFL;\n  INPUT @OFF SMF76C   PIB4.\n  @;\n  OUTPUT TDATAV;\n  END;\nRETURN;\nPROC PRINT DATA=T76;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF76INT TIME.;\nPROC PRINT DATA=TCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=TDATA;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=TDATAV;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF76XA": {"ttr": 4369, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00O\\x00\\x96\\x00O\\t&\\x00g\\x00g\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "1996-01-04T09:26:00", "lines": 103, "newlines": 103, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM6 JOB EDPCSBS1,'RMF76',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 76';\nDATA T76 (KEEP = TIMEOUT SMFXXSID\n        SMF76SSI          SMF76STY        SMF76TRN\n        SMF76RV1          SMF76PRS        SMF76PRL\n        SMF76PRN          SMF76TCS        SMF76TCL\n        SMF76TCN          SMF76TDS        SMF76TDL\n        SMF76TDN          SMF76VFS        SMF76VFL\n        SMF76VFN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF76MFV          SMF76PRD           SMF76IST\n             SMF76DAT          SMF76INT           SMF76MFL\n             SMF76SAM          SMF76RV2           SMF76FLA\n             SMF76RLS          SMF76CYC           SMF76MVS\n             SMF76IML          SMF76RV9\n             )\n     TCONTROL (KEEP = TIMEOUT\n             SMF76NUM          SMF76RV4\n             )\n     TDATA    (KEEP = TIMEOUT\n             SMF76NAM          SMF76OPT         SMF76OP1\n             SMF76SLN          SMF76DLN         SMF76SSS\n             SMF76SSL          SMF76MIN         SMF76MAX\n             SMF76AVG          S1F76STD         S2F76STD\n                               S3F76STD         SMF76ENV\n             )\n     TDATAV   (KEEP = TIMEOUT  SMF76C\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 76;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF76SSI $CHAR4.  SMF76STY PIB2.  SMF76TRN PIB2.\n        SMF76RV1 PIB2.    SMF76PRS PIB4.  SMF76PRL PIB2.\n        SMF76PRN PIB2.    SMF76TCS PIB4.  SMF76TCL PIB2.\n        SMF76TCN PIB2.    SMF76TDS PIB4.  SMF76TDL PIB2.\n        SMF76TDN PIB2.    SMF76VFS PIB4.  SMF76VFL PIB2.\n        SMF76VFN PIB2. @;\n  OUTPUT T76;\n  DO I=1 TO SMF76PRN;\n  OFF = V -3 + SMF76PRS + (I-1)*SMF76PRL;\n  INPUT @OFF SMF76MFV $CHAR2.  SMF76PRD $CHAR8.   SMF76IST PD4.\n             SMF76DAT PD4.     SMF76INT RMFDUR.   SMF76MFL PIB2.\n             SMF76SAM PIB4.    SMF76RV2 PIB2.     SMF76FLA PIB2.\n             SMF76RLS $CHAR4.  SMF76CYC PD4.      SMF76MVS $CHAR8.\n             SMF76IML PIB1.    SMF76RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF76TCN;\n  OFF = V -3 + SMF76TCS + (I-1)*SMF76TCL;\n  INPUT @OFF SMF76NUM PIB2.    SMF76RV4 PIB2.\n  @;\n  OUTPUT TCONTROL;\n  END;\n  DO I=1 TO SMF76TDN;\n  OFF = V -3 + SMF76TDS + (I-1)*SMF76TDL;\n  INPUT @OFF SMF76NAM $CHAR6.  SMF76OPT PIB1.   SMF76OP1 PIB1.\n             SMF76SLN PIB1.    SMF76DLN PIB1.   SMF76SSS PIB2.\n             SMF76SSL PIB2.    SMF76MIN PIB4.   SMF76MAX PIB4.\n             SMF76AVG PIB8.    S1F76STD PIB4. S2F76STD PIB4.\n                               S3F76STD PIB4.   SMF76ENV PIB4.\n  @;\n  OUTPUT TDATA;\n  END;\n  DO I=1 TO SMF76VFN;\n  OFF = V -3 + SMF76VFS + (I-1)*SMF76VFL;\n  INPUT @OFF SMF76C   PIB4.\n  @;\n  OUTPUT TDATAV;\n  END;\nRETURN;\nPROC PRINT DATA=T76;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF76INT TIME.;\nPROC PRINT DATA=TCONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=TDATA;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=TDATAV;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF77ESA": {"ttr": 4609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x96\\x00_\\x00\\x96\\x01\\x1f\\x12H\\x00g\\x00g\\x00\\x03\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-01-05T00:00:00", "modifydate": "1996-01-11T12:48:00", "lines": 103, "newlines": 103, "modlines": 3, "user": "ED115DM"}, "text": "//C4SYSDM7 JOB EDPCSBS1,'RMF77',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//DATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR\n//*ATLIB  DD DSN=SYS1.MAN5,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 77';\nDATA T77 (KEEP = TIMEOUT SMFXXSID\n        SMF77SSI          SMF77STY        SMF77TRN\n        SMF77RV1          SMF77PRS        SMF77PRL\n        SMF77PRN          SMF77EQS        SMF77EQL\n        SMF77EQN          SMF77EDS        SMF77EDL\n        SMF77EDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF77MFV          SMF77PRD           SMF77IST\n             SMF77DAT          SMF77INT           SMF77MFL\n             SMF77SAM          SMF77RV2           SMF77FLA\n             SMF77RLS          SMF77CYC           SMF77MVS\n             SMF77IML          SMF77PRF           SMF77PTN\n             SMF77IET\n             )\n     ECONTROL (KEEP = TIMEOUT\n             SMF77FG1          SMF77RF2\n             )\n     ENQD     (KEEP = TIMEOUT\n             SMF77QNM          SMF77RNM           SMF77WTM\n             SMF77WTX          SMF77WTT           SMF77RV3\n             SMF77QL1          SMF77QL2           SMF77QL3\n             SMF77QL4          SMF77QLT           SMF77EXM\n             SMF77EXX          SMF77SHM           SMF77SHX\n             SMF77EVT          SMF77RLN           SMF77DFG\n             SMF77DOW          SMF77DWR           SMF77DO1\n             SMF77DO2          SMF77DW1           SMF77DW2\n             SMF77SY1          SMF77SY2           SMF77SY3\n             SMF77SY4          SMF77AQL\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 77;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF77SSI $CHAR4.  SMF77STY PIB2.  SMF77TRN PIB2.\n        SMF77RV1 PIB2.    SMF77PRS PIB4.  SMF77PRL PIB2.\n        SMF77PRN PIB2.    SMF77EQS PIB4.  SMF77EQL PIB2.\n        SMF77EQN PIB2.    SMF77EDS PIB4.  SMF77EDL PIB2.\n        SMF77EDN PIB2. @;\n  OUTPUT T77;\n  DO I=1 TO SMF77PRN;\n  OFF = V -3 + SMF77PRS + (I-1)*SMF77PRL;\n  INPUT @OFF SMF77MFV $CHAR2.  SMF77PRD $CHAR8.   SMF77IST PD4.\n             SMF77DAT PD4.     SMF77INT RMFDUR.   SMF77MFL PIB2.\n             SMF77SAM PIB4.    SMF77RV2 PIB2.     SMF77FLA PIB2.\n             SMF77RLS $CHAR4.  SMF77CYC PD4.      SMF77MVS $CHAR8.\n             SMF77IML PIB1.    SMF77PRF PIB1.     SMF77PTN PIB1.\n             SMF77IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF77EQN;\n  OFF = V -3 + SMF77EQS + (I-1)*SMF77EQL;\n  INPUT @OFF SMF77FG1 PIB1.    SMF77RF2 PIB1.\n  @;\n  OUTPUT ECONTROL;\n  END;\n  DO I=1 TO SMF77EDN;\n  OFF = V -3 + SMF77EDS + (I-1)*SMF77EDL;\n  INPUT @OFF SMF77QNM $CHAR8.  SMF77RNM $CHAR44.  SMF77WTM PIB4.\n             SMF77WTX PIB4.    SMF77WTT PIB4.     SMF77RV3 PIB2.\n             SMF77QL1 PIB2.    SMF77QL2 PIB2.     SMF77QL3 PIB2.\n             SMF77QL4 PIB2.    SMF77QLT PIB2.     SMF77EXM PIB2.\n             SMF77EXX PIB2.    SMF77SHM PIB2.     SMF77SHX PIB2.\n             SMF77EVT PIB2.    SMF77RLN PIB1.     SMF77DFG PIB1.\n             SMF77DOW PIB2.    SMF77DWR PIB2.     SMF77DO1 $CHAR8.\n             SMF77DO2 $CHAR8.  SMF77DW1 $CHAR8.   SMF77DW2 $CHAR8.\n             SMF77SY1 $CHAR8.  SMF77SY2 $CHAR8.   SMF77SY3 $CHAR8.\n             SMF77SY4 $CHAR8.  SMF77AQL PIB4.\n  @;\n  OUTPUT ENQD;\n  END;\nRETURN;\nPROC PRINT DATA=T77;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF77INT TIME.;\nPROC PRINT DATA=ECONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=ENQD;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF77XA": {"ttr": 4612, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00_\\x00\\x96\\x00_\\x14\\x14\\x00e\\x00e\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-05T00:00:00", "modifydate": "1996-01-05T14:14:00", "lines": 101, "newlines": 101, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM7 JOB EDPCSBS1,'RMF77',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//DATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 77';\nDATA T77 (KEEP = TIMEOUT SMFXXSID\n        SMF77SSI          SMF77STY        SMF77TRN\n        SMF77RV1          SMF77PRS        SMF77PRL\n        SMF77PRN          SMF77EQS        SMF77EQL\n        SMF77EQN          SMF77EDS        SMF77EDL\n        SMF77EDN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF77MFV          SMF77PRD           SMF77IST\n             SMF77DAT          SMF77INT           SMF77MFL\n             SMF77SAM          SMF77RV2           SMF77FLA\n             SMF77RLS          SMF77CYC           SMF77MVS\n             SMF77IML          SMF77RV9\n             )\n     ECONTROL (KEEP = TIMEOUT\n             SMF77FG1          SMF77RF2\n             )\n     ENQD     (KEEP = TIMEOUT\n             SMF77QNM          SMF77RNM           SMF77WTM\n             SMF77WTX          SMF77WTT           SMF77RV3\n             SMF77QL1          SMF77QL2           SMF77QL3\n             SMF77QL4          SMF77QLT           SMF77EXM\n             SMF77EXX          SMF77SHM           SMF77SHX\n             SMF77EVT          SMF77RLN           SMF77DFG\n             SMF77DOW          SMF77DWR           SMF77DO1\n             SMF77DO2          SMF77DW1           SMF77DW2\n             SMF77SY1          SMF77SY2           SMF77SY3\n             SMF77SY4\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 77;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF77SSI $CHAR4.  SMF77STY PIB2.  SMF77TRN PIB2.\n        SMF77RV1 PIB2.    SMF77PRS PIB4.  SMF77PRL PIB2.\n        SMF77PRN PIB2.    SMF77EQS PIB4.  SMF77EQL PIB2.\n        SMF77EQN PIB2.    SMF77EDS PIB4.  SMF77EDL PIB2.\n        SMF77EDN PIB2. @;\n  OUTPUT T77;\n  DO I=1 TO SMF77PRN;\n  OFF = V -3 + SMF77PRS + (I-1)*SMF77PRL;\n  INPUT @OFF SMF77MFV $CHAR2.  SMF77PRD $CHAR8.   SMF77IST PD4.\n             SMF77DAT PD4.     SMF77INT RMFDUR.   SMF77MFL PIB2.\n             SMF77SAM PIB4.    SMF77RV2 PIB2.     SMF77FLA PIB2.\n             SMF77RLS $CHAR4.  SMF77CYC PD4.      SMF77MVS $CHAR8.\n             SMF77IML PIB1.    SMF77RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF77EQN;\n  OFF = V -3 + SMF77EQS + (I-1)*SMF77EQL;\n  INPUT @OFF SMF77FG1 PIB1.    SMF77RF2 PIB1.\n  @;\n  OUTPUT ECONTROL;\n  END;\n  DO I=1 TO SMF77EDN;\n  OFF = V -3 + SMF77EDS + (I-1)*SMF77EDL;\n  INPUT @OFF SMF77QNM $CHAR8.  SMF77RNM $CHAR44.  SMF77WTM PIB4.\n             SMF77WTX PIB4.    SMF77WTT PIB4.     SMF77RV3 PIB2.\n             SMF77QL1 PIB2.    SMF77QL2 PIB2.     SMF77QL3 PIB2.\n             SMF77QL4 PIB2.    SMF77QLT PIB2.     SMF77EXM PIB2.\n             SMF77EXX PIB2.    SMF77SHM PIB2.     SMF77SHX PIB2.\n             SMF77EVT PIB2.    SMF77RLN PIB1.     SMF77DFG PIB1.\n             SMF77DOW PIB2.    SMF77DWR PIB2.     SMF77DO1 $CHAR8.\n             SMF77DO2 $CHAR8.  SMF77DW1 $CHAR8.   SMF77DW2 $CHAR8.\n             SMF77SY1 $CHAR8.  SMF77SY2 $CHAR8.   SMF77SY3 $CHAR8.\n             SMF77SY4 $CHAR8.\n  @;\n  OUTPUT ENQD;\n  END;\nRETURN;\nPROC PRINT DATA=T77;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF77INT TIME.;\nPROC PRINT DATA=ECONTROL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=ENQD;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF78ESA": {"ttr": 4615, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x96\\x00\\x8f\\x00\\x96\\x00\\x9f\\x11!\\x01\\xaa\\x01\\x89\\x00*\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1996-01-08T00:00:00", "modifydate": "1996-01-09T11:21:00", "lines": 426, "newlines": 393, "modlines": 42, "user": "ED115DM"}, "text": "//C4SYSDM8 JOB EDPCSBS1,'RMF78',MSGCLASS=X,CLASS=L,NOTIFY=ED115DM\n//** ESA FORMAT\n//** ARRAYS :  BELOW 16 MB = 20 BYTES (5*4)\n//** VSDBMIN   MIN VALUE FOR BELOW 16 MB           PIB4.\n//** VSDBNTIME TIME STAMP FOR MINIMUM              PIB4.\n//** VSDBMAX   MAX VALUE FOR BELOW 16 MB           PIB4.\n//** VSDBXTME  TIME STAMP FOR MAXIMUM              PIB4.\n//** VSDBTOTL  TOTAL FOR ALL SAMPLES BELOW 16 MB   PIB4.\n//** ARRAYS :  ABOVE 16 MB = 20 BYTES (5*4)\n//**           MIN VALUE FOR ABOVE 16 MB\n//**           TIME STAMP FOR MINIMUM\n//**           MAX VALUE FOR ABOVE 16 MB\n//**           TIME STAMP FOR MAXIMUM\n//**           TOTAL FOR ALL SAMPLES ABOVE 16 MB\n//*\n//SAS     EXEC EDSAS608,OPTIONS=NODATE\n//*AS.WORK   DD UNIT=SYSDA,SPACE=(CYL,(100,9),,,ROUND)\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR,DCB=(BUFNO=15)\n//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 78';\nDATA T78 (KEEP = TIMEOUT SMFXXSID\n        SMF78SSI          SMF78STY        SMF78TRN\n        SMF78RV1          SMF78PRS        SMF78PRL\n        SMF78PRN          SMF78DCS        SMF78DCL\n        SMF78DCN          SMF78ASS        SMF78ASL\n        SMF78ASN          SMF78SPS        SMF78SPL\n        SMF78SPN          SMF78QDS        SMF78QDL\n        SMF78QDN\n        )\n     PRODUCT (KEEP = TIMEOUT\n             SMF78MFV          SMF78PRD           SMF78IST\n             SMF78DAT          SMF78INT           SMF78MFL\n             SMF78SAM          SMF78RV2           SMF78FLA\n             SMF78RLS          SMF78CYC           SMF78MVS\n             SMF78IML          SMF78PRF           SMF78PTN\n             SMF78SRL          SMF78IET\n             )\n         IOQCNTL (KEEP = TIMEOUT\n             R781IDI           R781NTR\n             R781CPDS          R781CPDL\n             R781CPDN\n             )\n         IOQCONF (KEEP = TIMEOUT\n               R781CPID          R781CPST\n               R781CUN           R781CU1\n               R781CU2           R781CU3\n               R781CU4\n             )\n         IOQDATA (KEEP = TIMEOUT\n             R781ID2           R781DST\n             R781ICT           R781ABY\n             R781TIS           R781SIS\n             R781CUB           R781DVB\n             R781QUE           R781DVB\n             )\n     VSCOMMON (KEEP = TIMEOUT\n             R782PA             R782PS\n             R782EPA            R782EPS\n             R782CA             R782CS\n             R782ECA            R782ECS\n             R782BA             R782BS\n             R782MLA            R782MLS\n             R782EMLA           R782EMLS\n             R782FLA            R782FLS\n             R782EFLA           R782EFLS\n             R782PLA            R782PLS\n             R782EPLA           R782EPLS\n             R782SA             R782SS\n             R782ESA            R782ESS\n             R782NA             R782NS\n             R782ENA            R782ENS\n             R782NL             R782ENL\n             R782LPA1           R782ELP1\n             R782MR             R782EMR\n             SQA1-SQA10\n             CSA1-CSA10\n             CSK1-CSK90\n             CSF1-CSF10\n             CSL1-CSL10\n             CSZ1-CSZ10\n             SQF1-SQF10\n             SQL1-SQL10\n             SQZ1-SQZ10\n             SQE1-SQE10\n             K227K1-K227K50\n             K228K1-K228K50\n             K231K1-K231K50\n             K241K1-K241K50\n             K226K1-K226K5\n             K239K1-K239K5\n             K245K1-K245K5\n             )\n     PVDAT    (KEEP = TIMEOUT\n    R782JOBN            R782RDTM\n    R782RDDT            R782SUBI\n    R782SUBN            R782STEP\n    R782PGMN            R782FLGS\n    R782RSV             R782SAMP\n    R782REGR            R782RGAB\n    R782RGAA            R782GMLB\n    R782RGLA            R782URAB          R782URAA\n    LSFP1-LSFP10\n    LSFB1-LSFB10\n    LSAL1-LSAL10\n    LSPA1-LSPA10\n    USFP1-USFP10\n    USFB1-USFB10\n    USAL1-USAL10\n    USPA1-USPA10\n             )\n     PVSP     (KEEP = TIMEOUT R782SPN R782SPRS\n                      R782SPZ1-R782SPZ5\n             )\n     IOQG (KEEP =\n  TIMEOUT    R783GFLG           R783R1\n             R783GNTR           R783GIDS\n             R783GIDL           R783GIDN\n             R783GSAM           R783GTSR\n             R783R2             R783GTOT\n             R783NXT            R783CFL\n             R783R3             R783TNM\n             R783TSF            R783R4\n             R783TOK            R783TDT\n             R783TTM\n  )\n          ;\n  ARRAY R782SQAU(SQAI)  SQA1-SQA10;\n  ARRAY R782CSAU(CSAI)  CSA1-CSA10;\n  ARRAY R782CSAK(CSKI)  CSK1-CSK90;\n  ARRAY R782CSAF(CSFI)  CSF1-CSF10;\n  ARRAY R782CSLF(CSFI)  CSL1-CSL10;\n  ARRAY R782CSAL(CSZI)  CSZ1-CSZ10;\n  ARRAY R782SQAF(SQFI)  SQF1-SQF10;\n  ARRAY R782SQLF(SQLI)  SQL1-SQL10;\n  ARRAY R782SQAL(SQZI)  SQZ1-SQZ10;\n  ARRAY R782SQEX(SQEI)  SQE1-SQE10;\n  ARRAY R782227K(K227I)  K227K1-K227K50;\n  ARRAY R782228K(K228I)  K228K1-K228K50;\n  ARRAY R782231K(K231I)  K231K1-K231K50;\n  ARRAY R782241K(K241I)  K241K1-K241K50;\n  ARRAY R782226(K226I)  K226K1-K226K5;\n  ARRAY R782239(K239I)  K239K1-K239K5;\n  ARRAY R782245(K245I)  K245K1-K245K5;\n  ARRAY R782LSFP(LSFPI)  LSFP1-LSFP10;\n  ARRAY R782LSFB(LSFBI)  LSFB1-LSFB10;\n  ARRAY R782LSAL(LSALI)  LSAL1-LSAL10;\n  ARRAY R782LSPA(LSPAI)  LSPA1-LSPA10;\n  ARRAY R782USFP(USFPI)  USFP1-USFP10;\n  ARRAY R782USFB(USFBI)  USFB1-USFB10;\n  ARRAY R782USAL(USALI)  USAL1-USAL10;\n  ARRAY R782USPA(USPAI)  USPA1-USPA10;\n  ARRAY R782SPD(SPDI)  R782SPZ1-R782SPZ5;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 78;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF78SSI $CHAR4.  SMF78STY PIB2.  SMF78TRN PIB2.\n        SMF78RV1 PIB2.    SMF78PRS PIB4.  SMF78PRL PIB2.\n        SMF78PRN PIB2.    SMF78DCS PIB4.  SMF78DCL PIB2.\n        SMF78DCN PIB2.    SMF78ASS PIB4.  SMF78ASL PIB2.\n        SMF78ASN PIB2. @;\n  IF SMF78STY =2 THEN DO;\n        INPUT             SMF78SPS PIB4.  SMF78SPL PIB2.\n        SMF78SPN PIB2. @;\n                      END;\n  IF SMF78STY =3 THEN DO;\n        INPUT             SMF78QDS PIB4.  SMF78QDL PIB2.\n        SMF78QDN PIB2. @;\n                      END;\n  OUTPUT T78;\n  IF SMF78PRN > 0 THEN\n  DO I=1 TO SMF78PRN;\n  OFF = V -3 + SMF78PRS + (I-1)*SMF78PRL;\n  INPUT @OFF SMF78MFV $CHAR2.  SMF78PRD $CHAR8.   SMF78IST PD4.\n             SMF78DAT PD4.     SMF78INT RMFDUR.   SMF78MFL PIB2.\n             SMF78SAM PIB4.    SMF78RV2 PIB2.     SMF78FLA PIB2.\n             SMF78RLS $CHAR4.  SMF78CYC PD4.      SMF78MVS $CHAR8.\n             SMF78IML PIB1.    SMF78PRF PIB1.     SMF78PTN PIB1.\n             SMF78SRL PIB1.    SMF78IET $CHAR8.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  IF SMF78STY =1 THEN DO;\n  IF SMF78DCN > 0 THEN\n  DO I=1 TO SMF78DCN;\n  OFF = V -3 + SMF78DCS + (I-1)*SMF78DCL;\n  OFFH = OFF;\n  INPUT @OFF R781IDI  PIB2.    R781NTR  PIB2.\n             R781CPDS PIB4.    R781CPDL PIB2.\n             R781CPDN PIB2.\n  @;\n  OUTPUT IOQCNTL;\n  IF R781CPDN > 0 THEN\n      DO J=1 TO R781CPDN;\n      OFF = OFFH + R781CPDS + (J-1)*R781CPDL;\n      INPUT @OFF R781CPID PIB1.    R781CPST PIB1.\n                 R781CUN  PIB2.    R781CU1  PIB2.\n                 R781CU2  PIB2.    R781CU3  PIB2.\n                 R781CU4  PIB2.\n      @;\n      OUTPUT IOQCONF;\n      END;\n  END;\n  IF SMF78ASN > 0 THEN\n  DO I=1 TO SMF78ASN;\n  OFF = V -3 + SMF78ASS + (I-1)*SMF78ASL;\n  INPUT @OFF R781ID2  PIB1.    R781DST  PIB1.\n             R781ICT  PIB2.    R781ABY  PIB4.\n             R781TIS  PIB4.    R781SIS  PIB4.\n             R781CUB  PIB4.    R781DVB  PIB4.\n             R781QUE  PIB4.    R781DVB  PIB4.\n  @;\n  OUTPUT IOQDATA;\n  END;\n                      END;\n  ****************************** ; * OF =1;\n  IF SMF78STY =2 THEN DO;\n  IF SMF78DCN > 0 THEN\n  DO I=1 TO SMF78DCN;\n  OFF = V -3 + SMF78DCS + (I-1)*SMF78DCL;\n  INPUT @OFF R782PA   PIB4.     R782PS   PIB4.\n             R782EPA  PIB4.     R782EPS  PIB4.\n             R782CA   PIB4.     R782CS   PIB4.\n             R782ECA  PIB4.     R782ECS  PIB4.\n             R782BA   PIB4.     R782BS   PIB4.\n             R782MLA  PIB4.     R782MLS  PIB4.\n             R782EMLA PIB4.     R782EMLS PIB4.\n             R782FLA  PIB4.     R782FLS  PIB4.\n             R782EFLA PIB4.     R782EFLS PIB4.\n             R782PLA  PIB4.     R782PLS  PIB4.\n             R782EPLA PIB4.     R782EPLS PIB4.\n             R782SA   PIB4.     R782SS   PIB4.\n             R782ESA  PIB4.     R782ESS  PIB4.\n             R782NA   PIB4.     R782NS   PIB4.\n             R782ENA  PIB4.     R782ENS  PIB4.\n             R782NL   PIB4.     R782ENL  PIB4.\n             R782LPA1 PIB4.     R782ELP1 PIB4.\n             R782MR   PIB4.     R782EMR  PIB4.\n  @;\n           DO OVER R782SQAU;\n           INPUT R782SQAU PIB4. @;\n           END;\n           DO OVER R782CSAU;\n           INPUT R782CSAU PIB4. @;\n           END;\n           DO OVER R782CSAK;\n           INPUT R782CSAK PIB4. @;\n           END;\n           DO OVER R782CSAF;\n           INPUT R782CSAF PIB4. @;\n           END;\n           DO OVER R782CSLF;\n           INPUT R782CSLF PIB4. @;\n           END;\n           DO OVER R782CSAL;\n           INPUT R782CSAL PIB4. @;\n           END;\n           DO OVER R782SQAF;\n           INPUT R782SQAF PIB4. @;\n           END;\n           DO OVER R782SQLF;\n           INPUT R782SQLF PIB4. @;\n           END;\n           DO OVER R782SQAL;\n           INPUT R782SQAL PIB4. @;\n           END;\n           DO OVER R782SQEX;\n           INPUT R782SQEX PIB4. @;\n           END;\n           DO OVER R782227K;\n           INPUT R782227K PIB4. @;\n           END;\n           DO OVER R782228K;\n           INPUT R782228K PIB4. @;\n           END;\n           DO OVER R782231K;\n           INPUT R782231K PIB4. @;\n           END;\n           DO OVER R782241K;\n           INPUT R782241K PIB4. @;\n           END;\n           DO OVER R782226;\n           INPUT R782226 PIB4. @;\n           END;\n           DO OVER R782239;\n           INPUT R782239 PIB4. @;\n           END;\n           DO OVER R782245;\n           INPUT R782245 PIB4. @;\n           END;\n  OUTPUT VSCOMMON;\n  END;\n  IF SMF78ASN > 0 THEN\n  DO I=1 TO SMF78ASN;\n  OFF = V -3 + SMF78ASS + (I-1)*SMF78ASL;\n  INPUT @OFF\n    R782JOBN $CHAR8.    R782RDTM  PIB4.\n    R782RDDT PD4.       R782SUBI  PIB4.\n    R782SUBN PIB2.      R782STEP  $CHAR8.\n    R782PGMN $CHAR8.    R782FLGS  PIB2.\n    R782RSV  PIB2.      R782SAMP  PIB4.\n    R782REGR PIB4.      R782RGAB  PIB4.\n    R782RGAA PIB4.      R782GMLB  PIB4.\n    R782RGLA PIB4.      R782URAB  PIB4.   R782URAA  PIB4.\n  @;\n           DO OVER R782LSFP;\n           INPUT R782LSFP PIB4. @;\n           END;\n           DO OVER R782LSFB;\n           INPUT R782LSFB PIB4. @;\n           END;\n           DO OVER R782LSAL;\n           INPUT R782LSAL PIB4. @;\n           END;\n           DO OVER R782LSPA;\n           INPUT R782LSPA PIB4. @;\n           END;\n           DO OVER R782USFP;\n           INPUT R782USFP PIB4. @;\n           END;\n           DO OVER R782USFB;\n           INPUT R782USFB PIB4. @;\n           END;\n           DO OVER R782USAL;\n           INPUT R782USAL PIB4. @;\n           END;\n           DO OVER R782USPA;\n           INPUT R782USPA PIB4. @;\n           END;\n  OUTPUT PVDAT;\n  END;\n  IF SMF78SPN > 0 THEN\n  DO I=1 TO SMF78SPN;\n  OFF = V -3 + SMF78SPS + (I-1)*SMF78SPL;\n  INPUT @OFF\n      R782SPN   PIB2.     R782SPRS   PIB2.\n  @;\n           DO OVER R782SPD;\n           INPUT R782SPD PIB4. @;\n           END;\n  OUTPUT PVSP;\n  END;\n                      END; * IF =2;\n  ****************************** ;\n  IF SMF78STY =3 THEN DO;\n  IF SMF78QDN > 0 THEN\n  DO I=1 TO SMF78QDN;\n  OFF = V -3 + SMF78QDS + (I-1)*SMF78QDL;\n  INPUT @OFF R783GFLG PIB1.     R783R1   PIB1.\n             R783GNTR PIB2.     R783GIDS PIB4.\n             R783GIDL PIB2.     R783GIDN PIB2.\n             R783GSAM PIB4.     R783GTSR PIB2.\n             R783R2   PIB4.     R783GTOT PIB4.\n             R783NXT  PIB4.     R783CFL  PIB1.\n             R783R3   PIB3.     R783TNM  $CHAR44.\n             R783TSF  $CHAR2.   R783R4   PIB2.\n             R783TOK  $CHAR16.  R783TDT  $CHAR8.\n             R783TTM  $CHAR8.\n  @ ;\n  OUTPUT IOQG;\n  END;\n                      END;\n  ****************************** ; * OF =3;\nRETURN;\n PROC PRINT DATA=T78;\n FORMAT TIMEOUT DATETIME.;\n PROC PRINT DATA=PRODUCT;\n FORMAT TIMEOUT DATETIME.;\n*FORMAT SMF78INT TIME.;\n*PROC PRINT DATA=IOQCNTL;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=IOQCONF;\n*FORMAT TIMEOUT DATETIME.;\n*FORMAT R781CPID R781CPST HEX2.;\n*FORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\n*PROC PRINT DATA=IOQDATA;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=VSCOMMON;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=PVDAT;\n*FORMAT TIMEOUT DATETIME.;\n PROC PRINT DATA=IOQG ;\n FORMAT TIMEOUT DATETIME.;\nDATA X;\nSET IOQCONF;\nIF R781CUN=0 THEN DELETE;\nIF R781CPST \u00ac= 0C0X THEN DELETE;\nRETURN;\nPROC SORT DATA=X; BY R781CU1 R781CPID;\nDATA;\nRETAIN N;\nSET; BY R781CU1 R781CPID;\nIF FIRST.R781CPID THEN N=0;\nN+1;\nIF  LAST.R781CPID THEN OUTPUT;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT R781CPID R781CPST HEX2.;\nFORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\nPROC SORT DATA=X; BY R781CPID R781CU1;\nDATA;\nRETAIN N;\nSET; BY R781CPID R781CU1;\nIF FIRST.R781CU1 THEN N=0;\nN+1;\nIF  LAST.R781CU1 THEN OUTPUT;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT R781CPID R781CPST HEX2.;\nFORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF78XA": {"ttr": 4868, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x96\\x00\\x8f\\x00\\x96\\x00\\x8f\\x153\\x01\\x81\\x01\\x81\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-08T00:00:00", "modifydate": "1996-01-08T15:33:00", "lines": 385, "newlines": 385, "modlines": 0, "user": "ED115DM"}, "text": "//C4SYSDM8 JOB EDPCSBS1,'RMF78',MSGCLASS=X,CLASS=A,NOTIFY=ED115DM\n//** XA FORMAT\n//** ARRAYS :  BELOW 16 MB = 20 BYTES (5*4)\n//** VSDBMIN   MIN VALUE FOR BELOW 16 MB           PIB4.\n//** VSDBNTIME TIME STAMP FOR MINIMUM              PIB4.\n//** VSDBMAX   MAX VALUE FOR BELOW 16 MB           PIB4.\n//** VSDBXTME  TIME STAMP FOR MAXIMUM              PIB4.\n//** VSDBTOTL  TOTAL FOR ALL SAMPLES BELOW 16 MB   PIB4.\n//** ARRAYS :  ABOVE 16 MB = 20 BYTES (5*4)\n//**           MIN VALUE FOR ABOVE 16 MB\n//**           TIME STAMP FOR MINIMUM\n//**           MAX VALUE FOR ABOVE 16 MB\n//**           TIME STAMP FOR MAXIMUM\n//**           TOTAL FOR ALL SAMPLES ABOVE 16 MB\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*AS.WORK   DD UNIT=SYSDA,SPACE=(CYL,(100,9),,,ROUND)\n//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR,DCB=(BUFNO=15)\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 78';\nDATA T78 (KEEP = TIMEOUT SMFXXSID\n        SMF78SSI          SMF78STY        SMF78TRN\n        SMF78RV1          SMF78PRS        SMF78PRL\n        SMF78PRN          SMF78DCS        SMF78DCL\n        SMF78DCN          SMF78ASS        SMF78ASL\n        SMF78ASN          SMF78SPS        SMF78SPL\n        SMF78SPN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF78MFV          SMF78PRD           SMF78IST\n             SMF78DAT          SMF78INT           SMF78MFL\n             SMF78SAM          SMF78RV2           SMF78FLA\n             SMF78RLS          SMF78CYC           SMF78MVS\n             SMF78IML          SMF78RV9\n             )\n         IOQCNTL (KEEP = TIMEOUT\n             R781IDI           R781RV1            R781NTR\n             R781CPDS          R781CPDL\n             R781CPDN\n             )\n         IOQCONF (KEEP = TIMEOUT\n               R781CPID          R781CPST\n               R781CUN           R781CU1\n               R781CU2           R781CU3\n               R781CU4\n             )\n         IOQDATA (KEEP = TIMEOUT\n             R781ID2           R781DST\n             R781ICT           R781ABY\n             R781TIS           R781SIS\n             R781CUB           R781DVB\n             R781QUE           R781DVB\n             )\n     VSCOMMON (KEEP = TIMEOUT\n             R782PA             R782PS\n             R782EPA            R782EPS\n             R782CA             R782CS\n             R782ECA            R782ECS\n             R782BA             R782BS\n             R782MLA            R782MLS\n             R782EMLA           R782EMLS\n             R782FLA            R782FLS\n             R782EFLA           R782EFLS\n             R782PLA            R782PLS\n             R782EPLA           R782EPLS\n             R782SA             R782SS\n             R782ESA            R782ESS\n             R782NA             R782NS\n             R782ENA            R782ENS\n             R782NL             R782ENL\n             R782LPA1           R782ELP1\n             R782MR             R782EMR\n             SQA1-SQA10\n             CSA1-CSA10\n             CSK1-CSK90\n             CSF1-CSF10\n             CSL1-CSL10\n             CSZ1-CSZ10\n             SQF1-SQF10\n             SQL1-SQL10\n             SQZ1-SQZ10\n             SQE1-SQE10\n             K227K1-K227K50\n             K228K1-K228K50\n             K231K1-K231K50\n             K241K1-K241K50\n             K226K1-K226K5\n             K239K1-K239K5\n             K245K1-K245K5\n             )\n     PVDAT    (KEEP = TIMEOUT\n    R782JOBN            R782RDTM\n    R782RDDT            R782SUBI\n    R782SUBN            R782STEP\n    R782PGMN            R782FLGS\n    R782RSV             R782SAMP\n    R782REGR            R782RGAB\n    R782RGAA            R782GMLB\n    R782RGLA            R782URAB          R782URAA\n    LSFP1-LSFP10\n    LSFB1-LSFB10\n    LSAL1-LSAL10\n    LSPA1-LSPA10\n    USFP1-USFP10\n    USFB1-USFB10\n    USAL1-USAL10\n    USPA1-USPA10\n             )\n     PVSP     (KEEP = TIMEOUT R782SPN R782SPRS\n                      R782SPZ1-R782SPZ5\n             )\n          ;\n  ARRAY R782SQAU(SQAI)  SQA1-SQA10;\n  ARRAY R782CSAU(CSAI)  CSA1-CSA10;\n  ARRAY R782CSAK(CSKI)  CSK1-CSK90;\n  ARRAY R782CSAF(CSFI)  CSF1-CSF10;\n  ARRAY R782CSLF(CSFI)  CSL1-CSL10;\n  ARRAY R782CSAL(CSZI)  CSZ1-CSZ10;\n  ARRAY R782SQAF(SQFI)  SQF1-SQF10;\n  ARRAY R782SQLF(SQLI)  SQL1-SQL10;\n  ARRAY R782SQAL(SQZI)  SQZ1-SQZ10;\n  ARRAY R782SQEX(SQEI)  SQE1-SQE10;\n  ARRAY R782227K(K227I)  K227K1-K227K50;\n  ARRAY R782228K(K228I)  K228K1-K228K50;\n  ARRAY R782231K(K231I)  K231K1-K231K50;\n  ARRAY R782241K(K241I)  K241K1-K241K50;\n  ARRAY R782226(K226I)  K226K1-K226K5;\n  ARRAY R782239(K239I)  K239K1-K239K5;\n  ARRAY R782245(K245I)  K245K1-K245K5;\n  ARRAY R782LSFP(LSFPI)  LSFP1-LSFP10;\n  ARRAY R782LSFB(LSFBI)  LSFB1-LSFB10;\n  ARRAY R782LSAL(LSALI)  LSAL1-LSAL10;\n  ARRAY R782LSPA(LSPAI)  LSPA1-LSPA10;\n  ARRAY R782USFP(USFPI)  USFP1-USFP10;\n  ARRAY R782USFB(USFBI)  USFB1-USFB10;\n  ARRAY R782USAL(USALI)  USAL1-USAL10;\n  ARRAY R782USPA(USPAI)  USPA1-USPA10;\n  ARRAY R782SPD(SPDI)  R782SPZ1-R782SPZ5;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 78;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF78SSI $CHAR4.  SMF78STY PIB2.  SMF78TRN PIB2.\n        SMF78RV1 PIB2.    SMF78PRS PIB4.  SMF78PRL PIB2.\n        SMF78PRN PIB2.    SMF78DCS PIB4.  SMF78DCL PIB2.\n        SMF78DCN PIB2.    SMF78ASS PIB4.  SMF78ASL PIB2.\n        SMF78ASN PIB2. @;\n  IF SMF78STY =2 THEN DO;\n        INPUT             SMF78SPS PIB4.  SMF78SPL PIB2.\n        SMF78SPN PIB2. @;\n                      END;\n  OUTPUT T78;\n  IF SMF78PRN > 0 THEN\n  DO I=1 TO SMF78PRN;\n  OFF = V -3 + SMF78PRS + (I-1)*SMF78PRL;\n  INPUT @OFF SMF78MFV $CHAR2.  SMF78PRD $CHAR8.   SMF78IST PD4.\n             SMF78DAT PD4.     SMF78INT RMFDUR.   SMF78MFL PIB2.\n             SMF78SAM PIB4.    SMF78RV2 PIB2.     SMF78FLA PIB2.\n             SMF78RLS $CHAR4.  SMF78CYC PD4.      SMF78MVS $CHAR8.\n             SMF78IML PIB1.    SMF78RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  IF SMF78STY =1 THEN DO;\n  IF SMF78DCN > 0 THEN\n  DO I=1 TO SMF78DCN;\n  OFF = V -3 + SMF78DCS + (I-1)*SMF78DCL;\n  OFFH = OFF;\n  INPUT @OFF R781IDI  PIB1.    R781RV1  PIB1.   R781NTR PIB2.\n             R781CPDS PIB4.    R781CPDL PIB2.\n             R781CPDN PIB2.\n  @;\n  OUTPUT IOQCNTL;\n  IF R781CPDN > 0 THEN\n      DO J=1 TO R781CPDN;\n      OFF = OFFH + R781CPDS + (J-1)*R781CPDL;\n      INPUT @OFF R781CPID PIB1.    R781CPST PIB1.\n                 R781CUN  PIB2.    R781CU1  PIB2.\n                 R781CU2  PIB2.    R781CU3  PIB2.\n                 R781CU4  PIB2.\n      @;\n      OUTPUT IOQCONF;\n      END;\n  END;\n  IF SMF78ASN > 0 THEN\n  DO I=1 TO SMF78ASN;\n  OFF = V -3 + SMF78ASS + (I-1)*SMF78ASL;\n  INPUT @OFF R781ID2  PIB1.    R781DST  PIB1.\n             R781ICT  PIB2.    R781ABY  PIB4.\n             R781TIS  PIB4.    R781SIS  PIB4.\n             R781CUB  PIB4.    R781DVB  PIB4.\n             R781QUE  PIB4.    R781DVB  PIB4.\n  @;\n  OUTPUT IOQDATA;\n  END;\n                      END;\n  ****************************** ; * OF =1;\n  IF SMF78STY =2 THEN DO;\n  IF SMF78DCN > 0 THEN\n  DO I=1 TO SMF78DCN;\n  OFF = V -3 + SMF78DCS + (I-1)*SMF78DCL;\n  INPUT @OFF R782PA   PIB4.     R782PS   PIB4.\n             R782EPA  PIB4.     R782EPS  PIB4.\n             R782CA   PIB4.     R782CS   PIB4.\n             R782ECA  PIB4.     R782ECS  PIB4.\n             R782BA   PIB4.     R782BS   PIB4.\n             R782MLA  PIB4.     R782MLS  PIB4.\n             R782EMLA PIB4.     R782EMLS PIB4.\n             R782FLA  PIB4.     R782FLS  PIB4.\n             R782EFLA PIB4.     R782EFLS PIB4.\n             R782PLA  PIB4.     R782PLS  PIB4.\n             R782EPLA PIB4.     R782EPLS PIB4.\n             R782SA   PIB4.     R782SS   PIB4.\n             R782ESA  PIB4.     R782ESS  PIB4.\n             R782NA   PIB4.     R782NS   PIB4.\n             R782ENA  PIB4.     R782ENS  PIB4.\n             R782NL   PIB4.     R782ENL  PIB4.\n             R782LPA1 PIB4.     R782ELP1 PIB4.\n             R782MR   PIB4.     R782EMR  PIB4.\n  @;\n           DO OVER R782SQAU;\n           INPUT R782SQAU PIB4. @;\n           END;\n           DO OVER R782CSAU;\n           INPUT R782CSAU PIB4. @;\n           END;\n           DO OVER R782CSAK;\n           INPUT R782CSAK PIB4. @;\n           END;\n           DO OVER R782CSAF;\n           INPUT R782CSAF PIB4. @;\n           END;\n           DO OVER R782CSLF;\n           INPUT R782CSLF PIB4. @;\n           END;\n           DO OVER R782CSAL;\n           INPUT R782CSAL PIB4. @;\n           END;\n           DO OVER R782SQAF;\n           INPUT R782SQAF PIB4. @;\n           END;\n           DO OVER R782SQLF;\n           INPUT R782SQLF PIB4. @;\n           END;\n           DO OVER R782SQAL;\n           INPUT R782SQAL PIB4. @;\n           END;\n           DO OVER R782SQEX;\n           INPUT R782SQEX PIB4. @;\n           END;\n           DO OVER R782227K;\n           INPUT R782227K PIB4. @;\n           END;\n           DO OVER R782228K;\n           INPUT R782228K PIB4. @;\n           END;\n           DO OVER R782231K;\n           INPUT R782231K PIB4. @;\n           END;\n           DO OVER R782241K;\n           INPUT R782241K PIB4. @;\n           END;\n           DO OVER R782226;\n           INPUT R782226 PIB4. @;\n           END;\n           DO OVER R782239;\n           INPUT R782239 PIB4. @;\n           END;\n           DO OVER R782245;\n           INPUT R782245 PIB4. @;\n           END;\n  OUTPUT VSCOMMON;\n  END;\n  IF SMF78ASN > 0 THEN\n  DO I=1 TO SMF78ASN;\n  OFF = V -3 + SMF78ASS + (I-1)*SMF78ASL;\n  INPUT @OFF\n    R782JOBN $CHAR8.    R782RDTM  PIB4.\n    R782RDDT PD4.       R782SUBI  PIB4.\n    R782SUBN PIB2.      R782STEP  $CHAR8.\n    R782PGMN $CHAR8.    R782FLGS  PIB2.\n    R782RSV  PIB2.      R782SAMP  PIB4.\n    R782REGR PIB4.      R782RGAB  PIB4.\n    R782RGAA PIB4.      R782GMLB  PIB4.\n    R782RGLA PIB4.      R782URAB  PIB4.   R782URAA  PIB4.\n  @;\n           DO OVER R782LSFP;\n           INPUT R782LSFP PIB4. @;\n           END;\n           DO OVER R782LSFB;\n           INPUT R782LSFB PIB4. @;\n           END;\n           DO OVER R782LSAL;\n           INPUT R782LSAL PIB4. @;\n           END;\n           DO OVER R782LSPA;\n           INPUT R782LSPA PIB4. @;\n           END;\n           DO OVER R782USFP;\n           INPUT R782USFP PIB4. @;\n           END;\n           DO OVER R782USFB;\n           INPUT R782USFB PIB4. @;\n           END;\n           DO OVER R782USAL;\n           INPUT R782USAL PIB4. @;\n           END;\n           DO OVER R782USPA;\n           INPUT R782USPA PIB4. @;\n           END;\n  OUTPUT PVDAT;\n  END;\n  IF SMF78SPN > 0 THEN\n  DO I=1 TO SMF78SPN;\n  OFF = V -3 + SMF78SPS + (I-1)*SMF78SPL;\n  INPUT @OFF\n      R782SPN   PIB2.     R782SPRS   PIB2.\n  @;\n           DO OVER R782SPD;\n           INPUT R782SPD PIB4. @;\n           END;\n  OUTPUT PVSP;\n  END;\n                      END; * IF =2;\n  ****************************** ;\nRETURN;\n*PROC PRINT DATA=T78;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=PRODUCT;\n*FORMAT TIMEOUT DATETIME.;\n*FORMAT SMF78INT TIME.;\n*PROC PRINT DATA=IOQCNTL;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=IOQCONF;\n*FORMAT TIMEOUT DATETIME.;\n*FORMAT R781CPID R781CPST HEX2.;\n*FORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\n*PROC PRINT DATA=IOQDATA;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=VSCOMMON;\n*FORMAT TIMEOUT DATETIME.;\n*PROC PRINT DATA=PVDAT;\n*FORMAT TIMEOUT DATETIME.;\nDATA X;\nSET IOQCONF;\nIF R781CUN=0 THEN DELETE;\nIF R781CPST \u00ac= 0C0X THEN DELETE;\nRETURN;\nPROC SORT DATA=X; BY R781CU1 R781CPID;\nDATA;\nRETAIN N;\nSET; BY R781CU1 R781CPID;\nIF FIRST.R781CPID THEN N=0;\nN+1;\nIF  LAST.R781CPID THEN OUTPUT;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT R781CPID R781CPST HEX2.;\nFORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\nPROC SORT DATA=X; BY R781CPID R781CU1;\nDATA;\nRETAIN N;\nSET; BY R781CPID R781CU1;\nIF FIRST.R781CU1 THEN N=0;\nN+1;\nIF  LAST.R781CU1 THEN OUTPUT;\nRETURN;\nPROC PRINT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT R781CPID R781CPST HEX2.;\nFORMAT R781CU1 R781CU2 R781CU3 R781CU4 HEX4.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF79": {"ttr": 4875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x866_\\x00\\x87\\x10?\\x14\\x01\\x01\\xaf\\x00S\\x01_\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1986-12-31T00:00:00", "modifydate": "1987-04-13T14:01:00", "lines": 431, "newlines": 83, "modlines": 351, "user": "C4SYSDM"}, "text": "//C4SYSDM9 JOB EDPCSBS1,'RMF79',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//** XA FORMAT\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR\n//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR\n//SYSIN   DD *\nTITLE 'SMF 79';\nDATA T79 (KEEP = TIMEOUT SMFXXSID\n        SMF79SSI          SMF79STY        SMF79TRN\n        SMF79RV1          SMF79PRS        SMF79PRL\n        SMF79PRN          SMF79MCS        SMF79MCL\n        SMF79MCN          SMF79ASS        SMF79ASL\n        SMF79ASN          SMF79DCS        SMF79DCL\n        SMF79DCN)\n     PRODUCT (KEEP = TIMEOUT\n             SMF79MFV          SMF79PRD           SMF79IST\n             SMF79DAT          SMF79INT           SMF79MFL\n             SMF79SAM          SMF79RV2           SMF79FLA\n             SMF79RLS          SMF79CYC           SMF79MVS\n             SMF79IML          SMF79RV9\n             )\n     M2CNTL (KEEP = TIMEOUT\n  R79GTOD           R79LF2            R79PAR\n  R79RV1            R79SES            R79RSV\n  R79USER           R79RID            R79CTXTL\n  R79CTEXT          R79DTXTL          R79DTEXT\n  R79IST\n             )\n     DSUB1    (KEEP = TIMEOUT\n  R791ASID                   R791JBN\n  R791DMN                    R791NPG\n  R791PGP                    R791TTOD\n  R791CL                     R791TAS\n  R791SRC                    R791DP\n  R791SEQN                   R791FMCT\n  R791WSS                    R791SWC\n  R791SWMR                   R791SCRV\n  R791SIOC                   R791WMS\n  R791TCPU                   R791SSRV\n             )\n     DSUB2    (KEEP = TIMEOUT\n  R792ASID                   R792JBN\n  R792DMN                    R792NPG\n  R792CL                     R792TAS\n  R792TRC                    R792TTOD\n  R792PRFX                   R792ARS\n  R792SVAR                   R792TCPU\n  R792PSS1                   R792PSS2\n  R792EJST                   R792TSRM\n  R79RTM                     R792EXCP\n  R792CMNI                   R792PNV\n  R792PVIO                   R792FXBL\n  R792PSWP                   R792LPAI\n  R792CSAI                   R792LSQA\n  R792NQF                    R792TDEV\n  R792TWSS                   R792TPIN\n  R792TRTM                   R792FLG\n             )\n     DSUB3    (KEEP = TIMEOUT\n  R793AFC                    R793CRI\n  R793SQA                    R793CMNF\n  R793CMFF                   R793PRFX\n  R793CPUU                   R793DQ\n  R793INC                    R793OUTU\n  R793LCU                    R793ASMQ\n  R793LPAF                   R793CSAF\n  R793LPFX                   R793CSFX\n  R793LSQA                   R793NLQF\n  R793LOUT\n             )\n     DSUB4    (KEEP = TIMEOUT\n  R794CMNI                   R794CMNO\n  R794CMNR                   R794SWPI\n  R794PSPI                   R794PSPO\n  R794PRVI                   R794PRVO\n  R794PRVR                   R794VIO\n  R794AFC                    R794CRI\n  R794ACRI                   R794RV1\n  R794LPAI                   R794CLSAI\n  R794LPAR                   R794CSAR\n  R794TWSS\n             )\n     DSUB5    (KEEP = TIMEOUT\n  R795ASID                   R795JBN\n  R795DMN                    R795NPG\n  R795PGP                    R795TTOD\n  R795CL                     R795TAS\n  R795TROD                   R795TCNT\n  R795SWC                    R795CPUS\n  R795MSOS                   R795IOCS\n  R795WMS                    R795TOTL\n  R795TOT                    R795SRBS\n             )\n     DSUB6    (KEEP = TIMEOUT\n  R796ASID                   R796MAJ\n  R796MIN                    R796JBN\n  R796VOLS                   R796UCB\n  R796REQ                    R796MINL\n  R796FLG                    R796SID\n             )\n     DSUB7    (KEEP = TIMEOUT\n  R797MAJ\n  R797MIN                    R797FLG\n  R797MINL                   R797OWN\n  R797EXCW                   R797SHRW\n  R797REQ                    R797JBN\n  R797ASID                   R797SCOP\n  R797RES                    R797SID\n             )\n     DSUB8    (KEEP = TIMEOUT\n  R798ICSI                   R798IPSI\n  R798PGN                    R798PGP\n  R798SYS                    R798TTX\n  R798TTM                    R798CLS\n  R798USR                    R798NAM\n  R798FL1\n             )\n     DSUB9    (KEEP = TIMEOUT\n  R799NUM                    R799LCU\n  R799RVO                    R799CNF\n  R799SER                    R799TYP\n  R799NUX                    R799SSC\n  R799MEC                    R799CNN\n  R799PEN                    R799ATV\n  R799DIS                    R799QUE\n  R799UTL                    R799RSV\n  R799DSO                    R799ALC\n             )\n     DSUB10   (KEEP = TIMEOUT\n  R79ATWSR                   R79AMPLT\n  R79ARUA                    R79AGOOU\n  R79ACMPL                   R79AOUTU\n  R79AINCU                   R79ATCTL\n  R79ACIDX                   R79ANSW\n  R79ADMNO                   R79ADMLO\n  R79ADMHI                   R79ATYPE\n  R79AIPS                    R79ACPU\n  R79AIOS                    R79AMSO\n  R79ASRB                    R79ATWET\n  R79ARESV\n             )\n     DSUB11C  (KEEP = TIMEOUT\n  R79BETYPE                  R79BRV1\n             )\n     DSUB11D  (KEEP = TIMEOUT\n  R79BSALC                   R79BSAVL\n  R79BSLBD                   R79BSUSE\n  R79BSIOS                   R79BREQS\n  R79BFLG                    R79BDEV\n  R79BDADR                   R79BVSER\n  R79BDSN                    R79BFL2E\n  R79BRES1                   R79BRES2\n  R79BRES3\n             )\n     DSUB12   (KEEP = TIMEOUT\n             )\n     DSUB13   (KEEP = TIMEOUT\n             )\n          ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  IF SMFXXRTY = 79;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SMF79SSI $CHAR4.  SMF79STY PIB2.  SMF79TRN PIB2.\n        SMF79RV1 PIB2.    SMF79PRS PIB4.  SMF79PRL PIB2.\n        SMF79PRN PIB2.    SMF79MCS PIB4.  SMF79MCL PIB2.\n        SMF79MCN PIB2.    SMF79ASS PIB4.  SMF79ASL PIB2.\n        SMF79ASN PIB2. @;\n  INPUT SMF79DCS PIB4.    SMF79DCL PIB2.  SMF79DCN PIB2. @;\n  OUTPUT T79;\n  DO I=1 TO SMF79PRN;\n  OFF = V -3 + SMF79PRS + (I-1)*SMF79PRL;\n  INPUT @OFF SMF79MFV $CHAR2.  SMF79PRD $CHAR8.   SMF79IST PD4.\n             SMF79DAT PD4.     SMF79INT RMFDUR.   SMF79MFL PIB2.\n             SMF79SAM PIB4.    SMF79RV2 PIB2.     SMF79FLA PIB2.\n             SMF79RLS $CHAR4.  SMF79CYC PD4.      SMF79MVS $CHAR8.\n             SMF79IML PIB1.    SMF79RV9 PIB3.\n  @;\n  OUTPUT PRODUCT;\n  END;\n  DO I=1 TO SMF79MCN;\n  OFF = V -3 + SMF79MCS + (I-1)*SMF79MCL;\n  INPUT @OFF\n  R79GTOD  PD4.     R79LF2   PIB1.    R79PAR   PIB1.\n  R79RV1   PIB1.    R79SES   $CHAR2.  R79RSV   PIB2.\n  R79USER  PIB2.    R79RID   $CHAR8.  R79CTXTL PIB2.\n  R79CTEXT $CHAR32. R79DTXTL PIB2.    R79DTEXT $CHAR32.\n  R79IST   PD4.\n  @;\n  OUTPUT M2CNTL;\n  END;\n  IF SMF79STY = 1 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R791ASID    PIB2.          R791JBN $CHAR8.\n  R791DMN     PIB2.          R791NPG PIB2.\n  R791PGP     PIB2.          R791TTOD PIB4.\n  R791CL      $CHAR2.        R791TAS  PIB2.\n  R791SRC     $CHAR2.        R791DP   PIB2.\n  R791SEQN    PIB2.          R791FMCT PIB2.\n  R791WSS     PIB2.          R791SWC  PIB2.\n  R791SWMR    PIB2.          R791SCRV PIB2.\n  R791SIOC    PIB2.          R791WMS  PIB4.\n  R791TCPU    PIB4.          R791SSRV PIB2.\n  @;\n  OUTPUT DSUB1;\n  END;\n  IF SMF79STY = 2 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R792ASID    PIB2.          R792JBN $CHAR8.\n  R792DMN     PIB2.          R792NPG PIB2.\n  R792CL      $CHAR2.        R792TAS  PIB2.\n  R792TRC     PIB2.          R792TTOD PIB4.\n  R792PRFX    PIB4.          R792ARS  PIB2.\n  R792SVAR    PIB4.          R792TCPU PIB4.\n  R792PSS1    PIB4.          R792PSS2 PIB4.\n  R792EJST    PIB4.          R792TSRM PIB4.\n  R79RTM      PIB4.          R792EXCP PIB2.\n  R792CMNI    PIB4.          R792PNV  PIB4.\n  R792PVIO    PIB4.          R792FXBL PIB4.\n  R792PSWP    PIB4.          R792LPAI PIB4.\n  R792CSAI    PIB4.          R792LSQA PIB4.\n  R792NQF     PIB4.          R792TDEV PIB4.\n  R792TWSS    PIB4.          R792TPIN PIB4.\n  R792TRTM    PIB4.          R792FLG  PIB2.\n  @;\n  OUTPUT DSUB2;\n  END;\n  IF SMF79STY = 3 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R793AFC     PIB2.          R793CRI PIB2.\n  R793SQA     PIB2.          R793CMNF PIB2.\n  R793CMFF    PIB2.          R793PRFX PIB2.\n  R793CPUU    PIB2.          R793DQ   PIB2.\n  R793INC     PIB2.          R793OUTU PIB2.\n  R793LCU     PIB2.          R793ASMQ PIB2.\n  R793LPAF    PIB2.          R793CSAF PIB2.\n  R793LPFX    PIB2.          R793CSFX PIB2.\n  R793LSQA    PIB2.          R793NLQF PIB2.\n  R793LOUT    PIB2.\n  @;\n  OUTPUT DSUB3;\n  END;\n  IF SMF79STY = 4 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R794CMNI    PIB4.          R794CMNO PIB4.\n  R794CMNR    PIB4.          R794SWPI PIB4.\n  R794PSPI    PIB4.          R794PSPO PIB4.\n  R794PRVI    PIB4.          R794PRVO PIB4.\n  R794PRVR    PIB4.          R794VIO  PIB4.\n  R794AFC     PIB2.          R794CRI  PIB2.\n  R794ACRI    PIB2.          R794RV1  PIB2.\n  R794LPAI    PIB4.          R794CLSAI PIB4.\n  R794LPAR    PIB4.          R794CSAR PIB4.\n  R794TWSS    PIB2.\n  @;\n  OUTPUT DSUB4;\n  END;\n  IF SMF79STY = 5 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R795ASID    PIB2.          R795JBN  $CHAR8.\n  R795DMN     PIB2.          R795NPG  PIB2.\n  R795PGP     PIB2.          R795TTOD PIB4.\n  R795CL      $CHAR2.        R795TAS  PIB2.\n  R795TROD    PIB4.          R795TCNT PIB2.\n  R795SWC     PIB2.          R795CPUS PIB4.\n  R795MSOS    PIB4.          R795IOCS PIB4.\n  R795WMS     PIB4.          R795TOTL PIB4.\n  R795TOT     PIB4.          R795SRBS PIB4.\n  @;\n  OUTPUT DSUB5;\n  END;\n  IF SMF79STY = 6 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R796ASID    PIB2.          R796MAJ  $CHAR8.\n  R796MIN     $CHAR44.       R796JBN  $CHAR6.\n  R796VOLS    $CHAR6.        R796UCB  $CHAR3.\n  R796REQ     $CHAR2.        R796MINL PIB2.\n  R796FLG     PIB1.          R796SID  $CHAR8.\n  @;\n  OUTPUT DSUB6;\n  END;\n  IF SMF79STY = 7 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R797MAJ     $CHAR8.\n  R797MIN     $CHAR44.       R797FLG  PIB1.\n  R797MINL    PIB4.          R797OWN  PIB2.\n  R797EXCW    PIB2.          R797SHRW PIB2.\n  R797REQ     $CHAR2.        R797JBN  $CHAR8.\n  R797ASID    PIB2.          R797SCOP $CHAR4.\n  R797RES     $CHAR2.        R797SID  $CHAR8.\n  @;\n  OUTPUT DSUB7;\n  END;\n  IF SMF79STY = 8 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R798ICSI    $CHAR2.        R798IPSI $CHAR2.\n  R798PGN     PIB2.          R798PGP  PIB2.\n  R798SYS     $CHAR4.        R798TTX  PIB4.\n  R798TTM     PIB4.          R798CLS  $CHAR10.\n  R798USR     $CHAR10.       R798NAM  $CHAR10.\n  R798FL1     PIB1.\n  @;\n  OUTPUT DSUB8;\n  END;\n  IF SMF79STY = 9 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R799NUM     PD2.           R799LCU  PIB2.\n  R799RVO     PIB1.          R799CNF  PIB1.\n  R799SER     $CHAR6.        R799TYP  PIB4.\n  R799NUX     PIB4.          R799SSC  PIB4.\n  R799MEC     PIB4.          R799CNN  PIB4.\n  R799PEN     PIB4.          R799ATV  PIB4.\n  R799DIS     PIB4.          R799QUE  PIB4.\n  R799UTL     PIB4.          R799RSV  PIB4.\n  R799DSO     PIB4.          R799ALC  PIB4.\n  @;\n  OUTPUT DSUB9;\n  END;\n  IF SMF79STY = 10 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R79ATWSR    PIB4.          R79AMPLT PIB2.\n  R79ARUA     PIB2.          R79AGOOU PIB2.\n  R79ACMPL    PIB2.          R79AOUTU PIB2.\n  R79AINCU    PIB2.          R79ATCTL PIB2.\n  R79ACIDX    PIB2.          R79ANSW  PIB2.\n  R79ADMNO    PIB1.          R79ADMLO PIB1.\n  R79ADMHI    PIB1.          R79ATYPE PIB1.\n  R79AIPS     $CHAR2.        R79ACPU  $CHAR4.\n  R79AIOS     $CHAR4.        R79AMSO  $CHAR4.\n  R79ASRB     $CHAR4.        R79ATWET PIB4.\n  R79ARESV    PIB4.\n  @;\n  OUTPUT DSUB10;\n  END;\n  IF SMF79STY = 11 THEN\n  IF SMF79ASN > 0 THEN\n  DO I=1 TO SMF79ASN;\n  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;\n  INPUT @OFF\n  R79BETYPE   $CHAR1.        R79BRV1  PIB3.\n  OUTPUT DSUB11C;\n  INPUT\n  R79BSALC    PIB4.          R79BSAVL PIB4.\n  R79BSLBD    PIB4.          R79BSUSE PIB4.\n  R79BSIOS    PIB4.          R79BREQS PIB4.\n  R79BFLG     PIB1.          R79BDEV  PIB1.\n  R79BDADR    $CHAR3.        R79BVSER $CHAR6.\n  R79BDSN     $CHAR44.       R79BFL2E PIB1.\n  R79BRES1    PIB4.          R79BRES2 PIB4.\n  R79BRES3    PIB4.\n  @;\n  OUTPUT DSUB11D;\n  END;\nRETURN;\nPROC PRINT DATA=T79;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF79INT TIME.;\nPROC PRINT DATA=M2CNTL;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB1;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB2;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB3;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB4;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB5;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB6;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB7;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB8;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB9;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB10;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB11;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB12;\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DSUB13;\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF8": {"ttr": 5127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x84\"\\x9f\\x00\\x90&?\\x10&\\x00\"\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1984-08-16T00:00:00", "modifydate": "1990-09-20T10:26:00", "lines": 34, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 8;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 8;\n  INPUT SMF8LENN PIB2. @ ;\n  N = (SMF8LENN -2)/ 4;\n  PUT SMFXXRTY TIMEOUT SMFXXSID @18 SMF8LENN @25 N\n            ;\n  IF N = 0 THEN RETURN;\n  DO I = 0 TO (N -1) ;\n   INPUT SMF8IOD1 PIB1. SMF8IOD2 PIB1. SMF8IOD3 PIB1. SMF8IOD4 PIB1.\n   @ ;\n   PUT SMF8IOD1 SMF8IOD2 SMF8IOD3 SMF8IOD4 HEX2.;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF80": {"ttr": 5129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x84#O\\x00\\x90&O\\x14\\x08\\x000\\x00!\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1984-08-21T00:00:00", "modifydate": "1990-09-21T14:08:00", "lines": 48, "newlines": 33, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 80;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 80;\n  INPUT     SMF80DES   PIB2.  SMF80EVT PIB1.    SMF80EVQ PIB1.\n            SMF80USR  $CHAR8. SMF80GRP $CHAR8.  SMF80REL PIB2.\n            SMF80CNT  PIB2.   SMF80ATH  PIB1.   SMF80REA PIB1.\n            SMF80TLV  PIB1.   SMF80ERR  PIB1.   SMF80TRM $CHAR8.\n          SMF80JBN  $CHARZB8. SMF80RST  PIB4.   @ ;\n      IF SMF80RST =0 THEN INPUT SMF80RSD PIB4. @;\n                     ELSE INPUT  SMF80RSD PD4. @;\n   INPUT  SMF80UID  $CHARZB8. SMF80VER  PIB1.\n            @ ;\n    PUT     SMF80DES   @10    SMF80EVT   +1     SMF80EVQ +1\n            SMF80USR   +1     SMF80GRP   @40    SMF80REL +1\n            SMF80CNT   @48    SMF80ATH   +1     SMF80REA +1\n            SMF80TLV   +1     SMF80ERR   @64    SMF80TRM +1\n            SMF80JBN   @88    SMF80RST   +1     SMF80RSD +1\n            SMF80UID   @115   SMF80VER\n              ;\nOFF=SMF80REL+1;\nIF SMF80CNT>0 THEN DO;\nDO I=0 TO (SMF80CNT-1);\nINPUT @OFF SMF80DTP PIB1. SMF80DLN PIB1. @ ;\n   PUT      SMF80DTP +2    SMF80DLN ;\n   OFF = OFF + 2 + SMF80DLN;\nEND;\nEND;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF80DS": {"ttr": 5131, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x85\\x08_\\x00\\x86\\x11\\x9f\\x10\\x15\\x00\\x1b\\x00\\r\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1985-03-26T00:00:00", "modifydate": "1986-04-29T10:15:00", "lines": 27, "newlines": 13, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'RACF',MSGCLASS=X,CLASS=T,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=OLD\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 80;\n  DATA _NULL_;\n  V=4;    *0 NVSAM, 4 VSAM;\n  INFILE DATLIB MISSOVER LENGTH=LEN;\n  INPUT @1+V SMFXXFLG PIB1.  SMFXXRTY PIB1.    DATTIM SMFSTAMP8.\n        SMFXXSID $CHAR4. @ ;\n  IF SMFXXRTY = 80;\n  I=15; J=LEN-14;\nLOOP:\n  IF J >= 80 THEN\n  INPUT @I STR $80. @; ELSE\n  INPUT @I STR $VARYING80. J @;\n  I=I+60;\n  J=J-60;\n  T=INDEX(STR,'EBDB.');\n  IF T \u00ac= 0 THEN DO;\n                 PUT DATTIM DATETIME.;\n                 PUT _INFILE_;\n                 END;\n  IF J>0 THEN GOTO LOOP;\nDELETE;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF81": {"ttr": 5133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x84#O\\x00\\x90&O\\x14\\x10\\x00 \\x00!\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1984-08-21T00:00:00", "modifydate": "1990-09-21T14:10:00", "lines": 32, "newlines": 33, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SMF     DD DSN=ED115DM.PROD.SAS(SMF),DISP=SHR\n//SYSIN   DD *\nTITLE SMF 81;\n  DATA;\n  %INCLUDE SMF;\n  IF SMFXXRTY = 81;\n  INPUT     SMF81RDS $CHAR44. SMF81RVL $CHAR6.  SMF81RUN $CHAR3.\n            SMF81UDS $CHAR44. SMF81UVL $CHAR6.  SMF81OPT PIB1.\n            SMF81OP2 PIB1.    SMF81OP3 PIB1.    SMF81AOP PIB1.\n            SMF81A02 PIB1.    SMF81TMO PIB1.    SMF81PIV PIB1.\n            SMF81REL PIB2.    SMF81CNT PIB2.    SMF81VER PIB1.\n            SMF81QL  $CHAR8.\n            @ ;\n    PUT     SMF81RDS   @50    SMF81RVL   @60    SMF81RUN ;\n    PUT     SMF81UDS   @50    SMF81UVL   @60    SMF81OPT +1\n            SMF81OP2   +1     SMF81OP3   +1     SMF81AOP +1\n            SMF81A02   +1     SMF81TMO   +1     SMF81PIV +1\n            SMF81REL   +1     SMF81CNT   +1     SMF81VER +1\n            SMF81QL\n              ;\nOFF = SMF81REL +1 ;\nIF SMF81CNT > 0 THEN DO;\nDO I=0 TO (SMF81CNT-1) ;\n     INPUT @OFF SMF81DTP PIB1.   SMF81DLN PIB1.  @ ;\n     PUT        SMF81DTP         SMF81DLN ;\n     OFF = OFF + 2 + SMF81DLN ;\nEND;\nEND;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF84": {"ttr": 5135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00\\x00\\x00\\x95\\x00?\\x00\\x95\\x02\\x0f\\x08'\\x00~\\x00'\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "1995-01-03T00:00:00", "modifydate": "1995-01-20T08:27:00", "lines": 126, "newlines": 39, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC EDSAS607,OPTIONS=NODATE\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//DATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 84;\n  DATA SMF84 (KEEP  =\n            SMF84SBS          SMF84SGN          SMF84FL1\n            FILL1             SMF84STY          SMF84TRN\n            SMF84PRS          SMF84PRL          SMF84PRN\n            SMF84GNS          SMF84GNL          SMF84GNN\n            SMF84J1O          SMF84J1L          SMF84J1N\n            )\n       PRODUCT (KEEP  =\n        R84MFVER          R84PRDNM            R84INTST\n        R84SDATE          R84INTEN            R84EDATE\n        R84INTER          R84MFCYC            FILL2\n        R84SAMPL          R84MFCMD            R84MVSRL\n        R84JESRL          R84CPUM             R84RSTO\n        R84CPUNM          R84CPUID            R84MPNAM\n        R84J3FLG          R84FILL3            R84JPRTY\n        R84JMFMN          R84JMFMX            R84JMFAV\n        R84MVSMN          R84MVSMX            R84MVSAV\n             )\n       GENERAL (KEEP  =\n        R84CPUSC          R84NPA              R84APA\n        R84NPNA           R84APNA             R84NNP\n        R84ANP            R84NNW              R84ANW\n        R84NSLLR          R84ASLLR            R84NSO\n        R84ASO\n             )\n       S5INFO  (KEEP  =\n        R84JBLNG          R84JBNUM            R84WTDO\n        R84JBOF           R84FSUMO            R84PLOTO\n        R84S5FLG\n             )\n       ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 84;\n  INPUT     SMF84SBS   PIB2.  SMF84SGN PIB2.    SMF84FL1   PIB1.\n            FILL1      PIB1.  SMF84STY PIB2.    SMF84TRN   PIB2.\n            SMF84PRS   PIB4.  SMF84PRL PIB2.    SMF84PRN   PIB2.\n            SMF84GNS   PIB4.  SMF84GNL PIB2.    SMF84GNN   PIB2.\n            SMF84J1O   PIB4.  SMF84J1L PIB2.    SMF84J1N   PIB2.\n            @;\n  OUTPUT SMF84;\n  IF SMF84PRN > 0 THEN DO;\n  DO  I=1 TO SMF84PRN;\n                           OFFSET = SMF84PRS + (I-1)*SMF84PRL +V-3;\n                           INPUT @OFFSET\n        R84MFVER  PIB2.   R84PRDNM  $CHAR8.   R84INTST  PD4.\n        R84SDATE  PD4.    R84INTEN  PD4.      R84EDATE  PD4.\n        R84INTER  PIB4.   R84MFCYC  PD4.      FILL2     PIB2.\n        R84SAMPL  PIB4.   R84MFCMD  $CHAR80.  R84MVSRL  $CHAR8.\n        R84JESRL  $CHAR8. R84CPUM   $CHAR4.   R84RSTO   PIB4.\n        R84CPUNM  $CHAR8. R84CPUID  $CHAR4.   R84MPNAM  $CHAR8.\n        R84J3FLG  PIB1.   R84FILL3  PIB1.     R84JPRTY  PIB2.\n        R84JMFMN  PIB4.   R84JMFMX  PIB4.     R84JMFAV  PIB4.\n        R84MVSMN  PIB4.   R84MVSMX  PIB4.     R84MVSAV  PIB4.\n  @;\n                           OUTPUT PRODUCT;\n  END;\n                       END;\n  IF SMF84GNN > 0 THEN DO;\n  DO  I=1 TO SMF84GNN;\n                           OFFSET = SMF84GNS + (I-1)*SMF84GNL +V-3;\n                           INPUT @OFFSET\n        R84CPUSC  PIB4.   R84NPA    PIB4.     R84APA    PIB4.\n        R84NPNA   PIB4.   R84APNA   PIB4.     R84NNP    PIB4.\n        R84ANP    PIB4.   R84NNW    PIB4.     R84ANW    PIB4.\n        R84NSLLR  PIB4.   R84ASLLR  PIB4.     R84NSO    PIB4.\n        R84ASO    PIB4.\n  @;\n                           OUTPUT PRODUCT;\n  END;\n                       END;\nIF SMF84STY =1 THEN DO;\nEND;   * = 1;\nIF SMF84STY =2 THEN DO;\nEND;   * = 2;\nIF SMF84STY =3 THEN DO;\nEND;   * = 3;\nIF SMF84STY =4 THEN DO;\nEND;   * = 4;\nIF SMF84STY =5 THEN DO;\n  IF SMF84J1N > 0 THEN DO;\n  DO  I=1 TO SMF84J1N;\n                           OFFSET = SMF84J1O + (I-1)*SMF84J1L +V-3;\n                           INPUT @OFFSET\n        R84JBLNG  PIB4.   R84JBNUM  PIB4.     R84WTDO   PIB4.\n        R84JBOF   PIB4.   R84FSUMO  PIB4.     R84PLOTO  PIB4.\n        R84S5FLG  PIB4.\n  @;\n  END;\n                       END;\n                           OUTPUT S5INFO ;\nEND;   * = 5;\nIF SMF84STY =6 THEN DO;\nEND;   * = 6;\nIF SMF84STY =7 THEN DO;\nEND;   * = 7;\nIF SMF84STY =8 THEN DO;\nEND;   * = 8;\nIF SMF84STY =9 THEN DO;\nEND;   * = 9;\nRETURN;\nPROC PRINT DATA=SMF84;\nPROC PRINT DATA=PRODUCT;\nPROC PRINT DATA=GENERAL;\nPROC PRINT DATA=S5INFO ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF9": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x84#_\\x00\\x90&O\\x10U\\x00\"\\x00\\x15\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1984-08-22T00:00:00", "modifydate": "1990-09-21T10:55:00", "lines": 34, "newlines": 21, "modlines": 0, "user": "ED115DM"}, "text": "//E0115DMS JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//SYSIN   DD *\nTITLE SMF 9;\n  DATA;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  IF SMFXXRTY = 9;\n  INPUT SMF9LENN PIB2. @ ;\n  N = (SMF9LENN -2)/ 4;\n  PUT SMFXXRTY TIMEOUT DATETIME. SMFXXSID @18 SMF9LENN @25 N\n            ;\n  IF N = 0 THEN RETURN;\n  DO I = 0 TO (N -1) ;\n   INPUT SMF9VAD1 PIB1. SMF9VAD2 PIB1. SMF9VAD3 PIB1. SMF9VAD4 PIB1.\n   @ ;\n   PUT SMF9VAD1 SMF9VAD2 SMF9VAD3 SMF9VAD4 HEX2.;\n  END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMF90": {"ttr": 5379, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x12\\x00\\x00\\x00\\x86!\\x8f\\x00\\x86'?\\x13\\x19\\x01\\x1e\\x00.\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@\"", "ispf": {"version": "01.18", "flags": 0, "createdate": "1986-08-06T00:00:00", "modifydate": "1986-09-30T13:19:00", "lines": 286, "newlines": 46, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMA JOB EDPCSBS1,'SMF90',MSGCLASS=X,CLASS=S,NOTIFY=ED115DM\n//* XA FORMAT\n//SAS     EXEC SAS,OPTIONS='NODATE'\n//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=OLD\n//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=OLD\n//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY.COPY1,DISP=OLD,UNIT=TAPE,\n//*       VOL=SER=702786\n//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD\n//SYSIN   DD *\nTITLE 'SMF 90';\n  DATA\n STARTER (KEEP = SMF30JBN TIMEOUT          SMFXXSID\n                 SMF30RES\n                 SMF30POF\n                 SMF30PLN SMF30PON  SMF30DOF  SMF30DLN\n                 SMF30DON\n        )\n  PRODUCT (KEEP = SMF90TID TIMEOUT SMF30JBN\n                  SMF90RVN SMF90PNM)\n  SELF    (KEEP = SMF90OSM SMF90LSM SMF90NSM SMF90ODA\n                  SMF90LDA SMF90NDA SMF90OWK SMF90LWK\n                  SMF90NWK SMF90OOT SMF90LOT SMF90NOT TIMEOUT SMF30JBN)\n  SETS    (KEEP = SMF90MAX SMF90STA SMF90JWT SMF90SYI\n                  SMF90BUF SMF90BUM SMF90SWT SMF90RV7\n                  SMF90REL SMF90IIT SMF90IDT TIMEOUT SMF30JBN\n                  SMD90DSN)\n  SUBSYS  (KEEP = SMF90WKN SMF90DTL SMF90RV9 SMF90SVL\n                  SMF90SY1 SMF90SY2 SMF90SY3 SMF90SY4\n                  SMF90EXN TIMEOUT SMF30JBN)\n  SWITCH  (KEEP = SMF90SWO SMF90SWN SMF90IT  SMF90DT\n                  TIMEOUT SMF30JBN)\n  IPL     (KEEP = SMF90DTM SMF90RSN SMF90OPR SMF90ITM SMF90DTT\n                  TIMEOUT SMF30JBN)\n  SETDATE (KEEP = SMF90OTM SMF90ODT SMF90NTM SMF90NDT\n                  TIMEOUT SMF30JBN)\n  SETIPS  (KEEP = SMF90TIP SMF90IPO SMF90IPN\n                  TIMEOUT SMF30JBN)\n  SETDMN  (KEEP = SMF90DDT SMF90DMM SMF90DFG SMF90NMI\n                  SMF90NMA SMF90NWT SMF90NAO SMF90NDO SMF90WKL\n                  TIMEOUT SMF30JBN)\n  SRM     (KEEP = SMF90IPT SMF90IPS SMF90OPT SMF90ICS\n                  TIMEOUT SMF30JBN)\n  OPT     (KEEP = SMF90TOP SMF90OPO SMF90OPN TIMEOUT SMF30JBN)\n  ICS     (KEEP = SMF90TIC SMF90ICO SMF90ICN TIMEOUT SMF30JBN)\n  MPF     (KEEP = SMF90TMP SMF90MPO SMF90MPN SMF90MPC TIMEOUT SMF30JBN)\n  DAE     (KEEP = SMF90DAT SMF90DAO SMF90DAN TIMEOUT SMF30JBN)\n                  ;\n  RETAIN V;\n  INFILE DATLIB JFCB=JF;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT   TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INFILE DATLIB;\n  IF SMFXXRTY = 90;\n  INPUT SMF90BLK PIB2.   SMF90POF PIB4. SMF90PLN PIB2.\n        SMF90PON PIB2.   SMF90DOF PIB4. SMF90DLN PIB2.  SMF90DON PIB2.\n        @;\n   IF SMF90PON > 0 THEN DO;\n      DO I = 0 TO (SMF90PON - 1);\n        OFF = SMF90POF -3 + I*SMF90PLN;\n        INPUT @OFF SMF90TID PIB2.      SMF90RVN $CHAR2.\n        SMF90PNM $CHAR8.\n        @ ;\n        OUTPUT PRODUCT;\n      END;\n                        END;\n   IF SMF90TID = 5 OR SMF90TID = 9 OR SMF90TID = 13\n                 OR SMF90TID = 15 THEN\nDO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90OSM PIB4.    SMF90LSM PIB2.    SMF90NSM PIB2.\n                   SMF90ODA PIB4.    SMF90LDA PIB2.    SMF90NDA PIB2.\n                   SMF90OWK PIB4.    SMF90LWK PIB2.    SMF90NWK PIB2.\n                   SMF90OOT PIB4.    SMF90LOT PIB2.    SMF90NOT PIB2.\n        @ ;\n        OUTPUT SELF;\n      END;\n                        END;\n      IF SMF90NSM > 0 THEN DO;\n         DO I = 0 TO (SMF90NSM - 1);\n         OFF = SMF90OSM -3 + I*SMF90LSM;\n         INPUT @OFF SMF90MAX $CHAR4.  SMF90STA $CHAR6.  SMF90JWT $CHAR4.\n                    SMF90SYI $CHAR4.  SMF90BUF PIB1.    SMF90BUM PIB1.\n                    SMF90SWT PIB1.    SMF90RV7 PIB3.    SMF90REL $CHAR4.\n                    SMF90IIT PIB4.    SMF90IDT PD4.\n                    @ ;\n                        IF SMF90NDA > 0 THEN DO;\n                           DO I = 0 TO (SMF90NDA - 1);\n                           OFF = SMF90ODA -3 + I*SMF90LDA;\n                           INPUT @OFF SMF90DSN $CHAR10.\n                                      @ ;\n                           END;\n                                             END;\n        OUTPUT SETS;\n        END;\n                           END;\nEND;\n   IF SMF90TID = 5 OR SMF90TID = 9 OR SMF90TID = 15 THEN DO;\n   IF SMF90NWK > 0 THEN DO;\n      DO I = 0 TO (SMF90NWK - 1);\n        OFF = SMF90OWK -3 + I*SMF90LWK;\n        INPUT @OFF SMF90WKN $CHAR4.  SMF90DTL PIB1.   SMF90RV9 PIB3.\n                   SMF90SVL TODSTAMP. SMF90SY1 PIB8.   SMF90SY2 PIB8.\n                                     SMF90SY3 PIB8.   SMF90SY4 PIB8.\n                                     SMF90EXN $CHAR120.\n                                     @ ;\n      OUTPUT SUBSYS;\n      END;\n                       END;\n                                                         END;\n   IF SMF90TID = 6 OR SMF90TID = 7 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90SWO $CHAR10. SMF90SWN $CHAR10. SMF90IT  PIB4.\n                   SMF90DT  PD4.\n                                     @ ;\n        OUTPUT SWITCH;\n      END;\n                        END;\n                                        END;\n   IF SMF90TID = 8 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90DTM $CHAR8.  SMF90RSN $CHAR65. SMF90OPR $CHAR20.\n                   SMF90ITM PIB4.    SMF90DTT PD4.\n                                     @ ;\n      OUTPUT IPL;\n      END;\n                       END;\n                       END;\n   IF SMF90TID = 1 OR SMF90TID = 2 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90OTM PIB4.    SMF90ODT PIB4     SMF90NTM PIB4.\n                   SMF90NDT PIB4.\n                                     @ ;\n     OUTPUT SETDATE;\n     END;\n                        END;\n                                        END;\n   IF SMF90TID = 4 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90TIP MSEC8.   SMF90IPO $CHAR8.  SMF90IPN $CHAR8.\n                                     @ ;\n        OUTPUT SETIPS;\n     END;\n                        END;\n                        END;\n   IF SMF90TID = 3 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90DDT PIB8.    SMF90DMM PIB1.    SMF90DFG PIB1.\n                   SMF90NMI PIB1.    SMF90NMA PIB1.    SMF90NWT PIB1.\n                   SMF90NAO PIB1.    SMF90NDO PIB1.    SMF90WKL PIB1.\n                                     @ ;\n        OUTPUT SETDMN;\n      END;\n                        END;\n                        END;\n   IF SMF90TID = 10 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90IPT PIB8.    SMF90IPS $CHAR8.  SMF90OPT $CHAR8.\n                   SMF90ICS $CHAR8.\n                                     @ ;\n      OUTPUT SRM;\n      END;\n                        END;\n                         END;\n   IF SMF90TID = 11 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90TOP PIB8.    SMF90OPO $CHAR8.  SMF90OPN $CHAR8.\n                                     @ ;\n        OUTPUT OPT;\n      END;\n                       END;\n                        END;\n   IF SMF90TID = 12 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90TIC PIB8.    SMF90ICO $CHAR8.  SMF90ICN $CHAR8.\n                                     @ ;\n      OUTPUT ICS;\n      END;\n                        END;\n                         END;\n   IF SMF90TID = 14 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90TMP MSEC8.   SMF90MPO $CHAR8.  SMF90MPN $CHAR8.\n                   SMF90MPC $CHAR8.\n                                     @ ;\n     OUTPUT MPF;\n     END;\n                        END;\n                         END;\n   IF SMF90TID = 16 THEN DO;\n   IF SMF90DON > 0 THEN DO;\n      DO I = 0 TO (SMF90DON - 1);\n        OFF = SMF90DOF -3 + I*SMF90DLN;\n        INPUT @OFF SMF90DAT PIB8.    SMF90DAO $CHAR8.  SMF90DAN $CHAR8.\n                                     @ ;\n     OUTPUT DAE;\n     END;\n                        END;\n                         END;\nRETURN;\nPROC PRINT DATA=STARTER;\nTITLE 'STARTER SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=PRODUCT;\nTITLE 'PRODUCT SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SELF;\nTITLE 'SELF DEFINING SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SETS;\nTITLE 'IPL/SMF SECTION';\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF90IIT TIME.;\nFORMAT SMF90IDT DATE.;\nPROC PRINT DATA=SUBSYS;\nTITLE 'SUBSYSTEM SECTION';\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF90SVL TIME.;\nFORMAT SMF90SY1 HEX8.;\nFORMAT SMF90SY2 HEX8.;\nFORMAT SMF90SY3 HEX8.;\nFORMAT SMF90SY4 HEX8.;\nPROC PRINT DATA=SWITCH;\nTITLE 'SWITCH SMF SECTION';\nFORMAT TIMEOUT DATETIME.;\nFORMAT SMF90IT TIME.;\nFORMAT SMF90DT DATE.;\nPROC PRINT DATA=IPL;\nTITLE 'IPL PROMPT SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SETDATE;\nTITLE 'SET DATE SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SETIPS;\nTITLE 'SET IPS SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SETDMN;\nTITLE 'SET DOMAIN SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=SRM;\nTITLE 'SRM COMMAND SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=OPT;\nTITLE 'SET OPT SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=ICS;\nTITLE 'SET IPS SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=MPF;\nTITLE 'SET MPF SECTION';\nFORMAT TIMEOUT DATETIME.;\nPROC PRINT DATA=DAE;\nTITLE 'SET DAE SECTION';\nFORMAT TIMEOUT DATETIME.;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SPMS": {"ttr": 5385, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x90\\x08\\x0f\\x00\\x90\\x08\\x1f\\x123\\x00h\\x00$\\x00\\x00\\xc5\\xc4\\xf1\\xf1\\xf5\\xc4\\xd4@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1990-03-21T00:00:00", "modifydate": "1990-03-22T12:33:00", "lines": 104, "newlines": 36, "modlines": 0, "user": "ED115DM"}, "text": "//ED115DMX JOB EDPCSBS1,'SMFXT',MSGCLASS=X,CLASS=2,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//DATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR\n//SYSIN   DD *\nDATA SPMS (KEEP = TIMEOUT SMFXXSID\n        SSID         SRTP\n        LEN1       NVOL       CTLT         RSV1\n        LEN2       NEXT       VSER         DTYP         RSV2\n          )\n    S6880 (KEEP = TIMEOUT SMFXXSID\n        LEN3       EXTS         ESQN         RSV3\n        NSAMP\n         EL1         EL2          EL3\n         SL1         SL2\n          )\n    S6100 (KEEP = TIMEOUT SMFXXSID\n        LEN3       EXT1 EXT2    ESQN         HRWR\n        NSAMP\n         NAC         NRH          NRM         NWTH\n        NWBH         SAC          SRH          SRM\n        SWTH         SWBH         PSC         PRSC\n        FEMC         ICLC         BCC         ATBC\n        WBC\n          );\n  RETAIN V;\n  INFILE DATLIB JFCB=JF MISSOVER;\n  IF _N_ = 1 THEN DO;\n                  INPUT @;\n                  IF INDEX(JF,'SYS1.MAN') \u00ac=0 THEN V=4; ELSE V=0;\n                  END;\n  IF V=4 THEN\n      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;\n  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.\n                       @;\n  IF SMFXXRTY = 212 THEN DO;\n                        *PUT '212 DETECTED - SKIPPING';\n                         DELETE;\n                         END;\n  INPUT    TIMEOUT SMFSTAMP8.\n      SMFXXSID $CHAR4. @;\n  INPUT SSID $CHAR4. SRTP PIB2. @;\n  INPUT LEN1 PIB2. NVOL PIB2. CTLT PIB1. RSV1 $CHAR1. @;\n  INPUT LEN2 PIB2. NEXT PIB2. VSER $CHAR6. DTYP PIB1. RSV2 $CHAR1. @;\n  OUTPUT SPMS;\n  IF CTLT = 3 THEN DO;\n  INPUT LEN3 PIB2. EXT1 PIB3. EXT2 PIB3. ESQN PIB1. RSV3 $CHAR13.\n        NSAMP PIB4. @;\n  INPUT  NAC PIB4.   NRH  PIB4.   NRM  PIB4.  NWTH  PIB4.\n        NWBH PIB4.   SAC  PIB4.   SRH  PIB4.   SRM  PIB4.\n        SWTH PIB4.   SWBH PIB4.   PSC  PIB4.  PRSC  PIB4.\n        FEMC PIB4.   ICLC PIB4.   BCC  PIB4.  ATBC  PIB4.\n        WBC  PIB4.   @;\n        IF NAC = 0 THEN HRWR = . ; ELSE\n        HRWR = NRH / NAC;\n  OUTPUT S6100;\n                   END;\n  IF CTLT = . THEN DO;\n  INPUT LEN3 PIB2. EXTS PIB6. ESQN PIB1. RSV3 $CHAR13.\n        NSAMP PIB4. @;\n  INPUT  EL1 PIB4.   EL2  PIB4.   EL3  PIB4.\n         SL1 PIB4.   SL2  PIB4.\n                     @;\n  OUTPUT S6880;\n                   END;\nRETURN;\n*;\nPROC SORT  DATA=SPMS; BY TIMEOUT;\nPROC PRINT DATA=SPMS SPLIT='*'; BY TIMEOUT;\nFORMAT TIMEOUT DATETIME.;\n*;\nPROC SORT  DATA=S6100; BY TIMEOUT;\nPROC PRINT DATA=S6100 SPLIT='*'; BY TIMEOUT;\nFORMAT EXT1 HEX6.;\nFORMAT EXT2 HEX6.;\nFORMAT TIMEOUT DATETIME.;\nLABEL HRWR = 'HIT/ACC*RATIO';\nLABEL NAC = 'NORMAL I/O*TRACK*ACCESS COUNT';\nLABEL NRH = 'NORMAL I/O*READ*HIT COUNT';\nLABEL NRM = 'NORMAL I/O*READ MISS*STAGING COUNT';\nLABEL NWTH= 'NORMAL I/O*WRITE-THRU*HIT COUNT';\nLABEL NWBH= 'NORMAL I/O*WRITE-BACK*HIT COUNT';\nLABEL SAC = 'SEQUENTIAL*I/O TRACK*ACCESS COUNT';\nLABEL SRH = 'SEQUENTIAL*I/O READ*HIT COUNT';\nLABEL SRM = 'SEQUENTIAL*I/O READ MISS*STAGING COUNT';\nLABEL SWTH= 'SEQUENTIAL*I/O WRITE-THRU*HIT COUNT';\nLABEL SWBH= 'SEQUENTIAL*I/O WRITE-BACK*HIT COUNT';\nLABEL PSC = 'PRE-STAGING*COUNT';\nLABEL PRSC= 'PRE-STAGING*RE-USE*HIT COUNT';\nLABEL FEMC= 'FRONT-END*PARTIAL*MISS COUNT';\nLABEL ICLC= 'INHIBIT CACHE*LOADING COUNT';\nLABEL BCC = 'BYPASS*CACHE*LOADING COUNT';\nLABEL ATBC= 'ALLOCATED*TRACK*BLOCK COUNT';\nLABEL WBC = 'WRITE-BACK*COUNT';\n*;\nPROC PRINT DATA=S6880 SPLIT='*';\nFORMAT EXT1 HEX6.;\nFORMAT EXT2 HEX6.;\nFORMAT TIMEOUT DATETIME.;\nLABEL EL1 = 'ACCESS*COUNT';\nLABEL EL2 = 'HIT*COUNT';\nLABEL EL3 = 'WRITE-THRU*COUNT';\nLABEL SL1 = 'PRE-STAGE*COUNT';\nLABEL SL2 = 'PRE-STAGE*REUSE HIT*COUNT';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TAPECPY": {"ttr": 5388, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x851\\x9f\\x00\\x851\\x9f\\x15\\x18\\x00\\t\\x00\\t\\x00\\x00\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1985-11-15T00:00:00", "modifydate": "1985-11-15T15:18:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB EDPCSBS1,'TAPECPY',MSGCLASS=X,CLASS=T,NOTIFY=ED115DM\n//*\n//SAS     EXEC SAS,OPTIONS=NODATE\n//SYSUT1 DD UNIT=TAPE,VOL=SER=ES0211,DISP=OLD,\n//       LABEL=(,NL,,,EXPDT=98000)\n//SYSUT2 DD DSN=ED115DM.S211,UNIT=TAPE,DISP=(NEW,CATLG)\n//SYSIN   DD *\nPROC TAPECOPY INDD=SYSUT1 OUTDD=SYSUT2\n FILES 1-418\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TAPELBL": {"ttr": 5390, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x99\\x02/\\x00\\x99\\x04/\\x15A\\x00\\x07\\x00\\x07\\x00\\x01\\xc3\\xf4\\xe2\\xe8\\xe2\\xc4\\xd4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1999-01-22T00:00:00", "modifydate": "1999-02-11T15:41:00", "lines": 7, "newlines": 7, "modlines": 1, "user": "C4SYSDM"}, "text": "//C4SYSDMS JOB C4SYS000,MSGCLASS=X,CLASS=A,NOTIFY=C4SYSDM\n//*\n//SAS     EXEC SAS609\n//SYSUT1 DD UNIT=CART,VOL=SER=800234,DISP=OLD,\n//       LABEL=(,SL,,,EXPDT=98000)\n//SYSIN   DD *\nPROC TAPELABEL DDNAME=SYSUT1;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT374/FILE374.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT374", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}