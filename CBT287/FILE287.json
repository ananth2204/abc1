{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011646000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE287.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE287.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x0b'", "DS1TRBAL": "b' $'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xf9\\x00\\t\\x01\\xfa\\x00\\x02\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@LIST": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n         @LIST &LIST\n.* IF LIST = NO, FORCE PRINT NOGEN\n         AIF  ('&LIST' EQ 'NO' OR '&LIST' EQ '' OR '&LIST' EQ 'YES').L1\n  MNOTE 0,'LIST OPERAND MUST BE ''YES'', ''NO'' OR NULL. SET TO NULL'\n         AGO   .L2\n.L1      AIF   ('&LIST' EQ '').L2\n         PRINT NOGEN\n         MEXIT\n.L2      ANOP\n         PRINT GEN\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CAMLSTD": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00=\\x00=\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 61, "newlines": 61, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n         CAMLSTD &LIST=,&DSECT=\n         PUSH  PRINT\n         AIF   ('&LIST' EQ 'NO').OFF\n         PRINT ON\n         AGO   .GEN\n.OFF     ANOP\n         PRINT OFF\n.GEN     AIF   ('&DSECT' EQ 'NO').NODS\nCAMLSTD  DSECT\n.NODS    ANOP  ,\n         DS    0F\nCAMOPTN1 DS    XL1            * OPTIONS BYTE  1\nCAMCVOL  EQU   X'80'          * CAT IS NOT ON SYSRES\n*              X'40'          * UNKNOWN\nCAMCAT   EQU   X'20'          * CAT OR CATBX SPECIFIED\nCAMRECAT EQU   X'10'          * RECAT SPECIFIED\nCAMUNCAT EQU   X'08'          * UNCAT OR UNCATDX SPECIFIED\n*              X'04'          * UNKNOWN\nCAMBLOCK EQU   X'02'          * LOCATE-BY-BLOCK REQUEST\n*              X'01'          * UNKNOWN\n*\nCAMOPTN2 DS    XL1            * OPTIONS BYTE  2\n*              X'80'          * UNKNOWN\nCAMBLDX  EQU   X'40'          * BLDX OR CATBX SPECIFIED\nCAMBLDG  EQU   X'20'          * BLDG SPECIFIED\nCAMBLDA  EQU   X'10'          * BLDA SPECIFIED\nCAMLNKX  EQU   X'08'          * LNKX SPECIFIED\nCAMDLTX  EQU   X'04'          * DLTX SPECIFIED\nCAMDSCBT EQU   X'02'          * DSCB-TTR SPECIFIED\nCAMDLTA  EQU   X'01'          * DLTA SPECIFIED\n*\nCAMOPTN3 DS    XL1            * OPTIONS BYTE  3\nCAMDRPX  EQU   X'80'          * DISCONNECT CVOLS REQUESTED\nCAMDELET EQU   X'40'          * SCRATCH GDG DATASETS\n*              X'20'          * UNKNOWN\n*              X'10'          * UNKNOWN\nCAMEMPTY EQU   X'08'          * EMPTY GDG INDX WHEN MAX CNT REACHED\nCAMVSCAT EQU   X'04'          * SEARCH VS CAT FIRST\nCAM1CAT  EQU   X'02'          * SEARCH ONLY ONE CATALOG\nCAMAM0   EQU   X'01'          * VSAM CAT. (- VS CAT WHEN '0')\n*\nCAMGEN   DS    XL1            * MAXIMUM GENERATION COUNT\n*\nCAMPTR1  DS    F              * ADDR OF NAME FIELD IN CALLERS AREA.\n*                                 FOR LOCATE-BY-BLOCK, THE NAME FIELD\n*                                 CONTAINS A RELATIVETRACK ADDR.\n*\nCAMCVOLP DS    F              * ADDR OF CVOL VOLSER(A 6-BYTE FIELD)\n*\nCAMPTR3  DS    0A             * ADDR OF CALLER'S 3RD PARM. MEANING\n*                                 DEPENDS ON THE FUNCTION:\nCAMWORKP DS    0A             *  LOCATE    -    CALLER'S 256 BYTE WKA\nCAMALIAP DS    0A             *  BLDA      -    8-BYTE NAME FIELD\nCAMNCVLP DS    0A             *  LNKX      -    10-BYTE VOL.ID.\nCAMVOLLP DS    0A             *  CAT,CATBX,RECAT- VOL LIST ADDR\n         DS    A              *  OTHER     -    NOT USED\n*\nCAMDSCBP DS    F              * ADDR OF 3-BYTE TTR OF F1 DSCB\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DEFAULTA": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x04(\\x04(\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 1064, "newlines": 1064, "modlines": 0, "user": "CBT249"}, "text": "DEFAULTA TITLE 'DEFAULT ALLOCATION'\n         MACRO\n&NAME    NOGO  &RC,&DEST=FREEALL\n         AIF   (T'&RC EQ 'N').NUMERIC\n&NAME    MVI   #PDE,DFRC&RC\n         AGO   .COMMON\n.NUMERIC ANOP  ,\n&NAME    MVI   #PDE,&RC\n.COMMON  B     &DEST\n         MEND\n         SPACE 1                                                  *TSM*\n         MACRO ,                                                  *TSM*\n&L       ICSP  &REG,&SUBPOOL                                      *TSM*\n.*             THIS MACRO INSERTS A SUBPOOL NUMBER INTO A REGISTER*TSM*\n         GBLC  &CPU                                               *TSM*\n         AIF   ('&CPU' EQ '360').S360                             *TSM*\n&L       ICM   &REG,8,=AL1(&SUBPOOL)                              *TSM*\n         MEXIT ,                                                  *TSM*\n.S360    ANOP  ,                                                  *TSM*\n&L       O     &REG,=AL1(&SUBPOOL,0,0,0)                          *TSM*\n         MEND                                                     *TSM*\n         SPACE 1                                                  *TSM*\n******************************************************************\n*\n* THIS PROGRAM IS CALLED BY A PROMPTER TO ALLOCATE DATASETS\n* WHEN THE COMPLETE NAME MAY, OR MAY NOT, BE SUPPLIED\n*\n* THE CALLER COMPLETES A LIST OF POSSIBLE QUALIFIERS\n* TO AID THE ALLOCATION.\n*\n* EXAMPLE  QUALIFIER LIST IS ASM, DATA, CNTL\n*          NAME SUPPLIED PROG\n*\n*          THE ORDER OF ATTEMPTS IS USERID.PROG\n*                                   USERID.PROG.ASM\n*                                   USERID.PROG.DATA\n*                                   USERID.PROG.CNTL\n*          UNTIL ONE IS FOUND\n*\n*          IF THE NAME IS IN APOSTROPHES, THE USERID IS\n*          NOT PREFIXED\n*\n* SEVERAL OPTIONS MAY BE REQUESTED:\n*\n* 1) DFLTONLY IF NONE OF THE LIST EXIST, THE PROGRAM CAN NOT DISPLAY\n*             TO THE USER WHICH QUALIFIERS DO EXIST IN HIS\n*             CATALOG AND LET HIM DECIDE.\n*\n* 2) DFLTPO   THE DATA SET MUST HAVE DSORG=PO.\n*\n* 3) DFLTPS   THE DATA SET MUST HAVE DSORG=PO.\n*             A PARTITIONED DATA SET (DSORG=PO) IS ACCEPTED AS PS ONLY\n*             IF A MEMBER NAME IS SPECIFIED IN THE PDE OR BY DEFAULT.\n*\n* 4) DFLTMEMB A MEMBER NAME MUST BE SPECIFIED.\n*\n* 5) DFLTDDND THE DDNAMES ASSIGNED BY DAIR ARE DISPLAYED TO THE USER.\n*             SINCE PUTLINE IS USED, THE MESSAGES MAY BE ROUTED EITHER\n*             TO THE TERMINAL OR TO A SEQUENTIAL DATA SET.\n*\n* 6) DFLTNEWK IF NONE OF THE NAMES IN THE LIST EXIST, A NEW DATASET\n*          CAN BE ALLOCATED. IN THIS CASE DCB DATA ETC. MUST BE GIVEN.\n*          ALSO, ONLY A SINGLE PDE IS PERMITTED WITH THIS OPTION.\n*\n* 7) DFLTDSNR RETURN THE COMPLETED DSNAMES TO THE CALLER.\n*             IF THIS OPTION IS NOT SELECTED, ONLY THE DDNAMES\n*             ARE RETURNED, AND THE ANSWER AREA ENTRIES ARE SHORTER.\n*\n*    REGISTER USAGE\n*    R15,R0,R1    SVC CALLS AND RETURN CODES\n*    R2           CURRENT PDE & CPPL\n*    R3        DAIR PARM BLOCK BASE\n*    R4        QUALIFIER LIST BASE\n*    R5        DSCB BASE, PGPB BASE\n*    R6        ANSWDSCT DSECT BASE\n*    R7        DCBINFO DSECT BASE\n*    R8\n*    R9        WORK\n*    R10\n*    R11        PARMLIST ON ENTRY\n*    R12        PROGRAM BASE\n*    R13        SAVE AREA\n*    R14        INTERNAL LINKAGE\n*\n*    FOLLOWING (DECIMAL) RETURN CODES PASSED VIA R15\n*    04     DAIR ERROR\n*    08     ANSWER AREA TOO SHORT (TOO MANY PDE'S)\n*    12     NO MATCH FOUND FOR QUALIFIER LIST\n*    16     PO/PS CHECK FAILED, OR MEMBER NAME REQUIRED\n*    20     STRUCTURE OF 'ANSWER' HEADER INCORRECT\n*    24     LOCATE OR OBTAIN ERROR\n*    28     NO DCB INFO SUPPLIED FOR NEW DATASET\n*    32     PUTLINE ERROR\n*    36     PUTGET ERROR\n*    40     CATALOG ERROR\n         SPACE 2                                                  *TSM*\n         GBLC  &SYSTEM                                            *TSM*\n         GBLB  &RETRO36                 OS/VS2 R3.6 SERVICE ROUTINES\n         SPACE 2                                                  *TSM*\n         MTITL 'DEFAULT ALLOCATION'\n         STITL 'INITIALIZATION'\nDEFAULTA SAVEM BIGZERO\n         USING DFLTDSCT,R11\n         USING QUALDSCT,R4\n*        USING ANSWDSCT,R6\n         SPACE 2                                                  *TSM*\n* BUILD DAIR PARAMETER LIST, ONCE ONLY AND INITIALIZE\n         USING CPPL,R2\n         L     R2,DFLTCPPL\n         MVC   DAPLUPT(4),CPPLUPT\n         MVC   DAPLECT(4),CPPLECT\n         MVC   DAPLPSCB(4),CPPLPSCB\n         LA    R9,ECB\n         ST    R9,DAPLECB\n         ST    R9,MYECB                 INITIALIZE IOPLECB        *TSM*\n         LA    R9,MYDAPB\n         ST    R9,DAPLDAPB\n         SPACE 1                                                  *TSM*\n*              BUILD PARAMETER LIST FOR IKJEFF18 (DAIRFAIL)       *TSM*\n         LA    R7,MYDAPL                POINT AT DAIR PARAM LIST  *TSM*\n         ST    R7,FAILDAPL                                        *TSM*\n         LA    R15,DAIRRC               POINT AT DAIR RETURN CODE *TSM*\n         ST    R15,FAILRC                                         *TSM*\n         LA    R15,DAIRMSWR             POINT AT IKJEFF02 ADCON   *TSM*\n         ST    R15,FAILMSWR                                       *TSM*\n         MVI   DAIRID+1,1               SET ID=1                  *TSM*\n         LA    R15,DAIRID               POINT AT DAIR ID          *TSM*\n         ST    R15,FAILID                                         *TSM*\n         SPACE 1                                                  *TSM*\n         MVC   MYUPT,CPPLUPT            IOPL                      *TSM*\n         MVC   MYECT,CPPLECT                                      *TSM*\n         MVC   MYPTPB(PUTLEND),PUTL     PUTLINE PARM BLOCK        *TSM*\n         MVC   MYPGPB(PUTGETLN),PUTGET  PUTGET  PARM BLOCK        *TSM*\n         SPACE 1                                                  *TSM*\n*     SAVE ADDRESS OF TOP OF ANSWER AREA\n         MVC   CURANSW(4),DFLTANSW\n* COUNT NUMBER OF PDE'S IN CHAIN\n         SR    R7,R7\n         TM    DFLTFLG1,DFLTNEWK  IS NEW ALLOWED ?\n         BO    NOCONCAT            YES - CAN'T BE LIST\n         USING PDEDSCT,R2\n         L     R2,DFLTPDE\nLOOKPDE  L     R9,PDENEXT         GET ADDR OF NEXT PDE\n         LTR   R9,R9              IS IT ZERO\n         BNP   @DAIR0C            ALLOC SPACE FOR CONCAT BLOCK   BASTNJ\n         LA    R7,1(,R7)          BUMP PDE COUNT\n         LR    R2,R9             UPDATE PDE BASE\n         B     LOOKPDE            ROUND AGAIN\n@DAIR0C  LTR   R7,R7\n         BZ    NOCONCAT           ZERO IF ONLY ONE PDE\n         LA    R7,1(,R7)          LAST PDE WASN'T INCLUDED\n         STH   R7,#PDE            TEMP SAVE\n         SLL   R7,3               # PDE'S X 8\n         LA    R7,12(,R7)         PLUS 12 = LENGTH DAIR0C BLOCK\n         ST    R7,CONCATLN        STORE LENGTH\n         GETMAIN R,LV=(R7)       GET STORAGE                      *TSM*\n         ST    R1,CONCATPB        SAVE ADDRESS\n         OI    MYFLAGS,CONCAT     SHOW CONCAT NEEDED\n         LH    R7,#PDE            RESTORE # PDE'S\n         B     ANSTEST            MORE CHECKS YET\n         SPACE 1\n* CHECK THAT LENGTH OF ANSWER AREA IS ADEQUATE\n*  SECOND HALF WORD IN ANSWER AREA MUST BE ZERO\nNOCONCAT LA    R7,1               ONE PDE ONLY\n         STH   R7,#PDE            SAVE FOR LATER\nANSTEST  L     R8,DFLTANSW         POINT AT ANSWER AREA\n         USING ANSWDSCT,R8\n         XR    R9,R9\n         CH    R9,ANSWLEN+2       COMPARE SECOND HALFWORD\n         BE    ANS2OK             GOOD, CHECK FIRST HALFWORD\n         NOGO  ANSW\nANS2OK   LA    R9,ANSWSHEL              LENGTH OF SHORT ENTRY\n         TM    DFLTFLG1,DFLTDSNR        ARE DSNAMES TO BE RETURNED ?\n         BZ    *+8                       NO - DON'T NEED LONG ENTRY\n         LA    R9,ANSWENTL              LENGTH OF LONG ENTRY\n         STH   R9,LNANSENT              SAVE LENGTH OF ENTRY\n         MR    R6,R9                    R7 NOW HAS REQUIRED LENGTH\n         LA    R7,4(,R7)                ADJUST FOR PREFIX\n         CH    R7,ANSWLEN               COMPARE TO GIVEN\n         DROP  R8\n         BNH   ANS1OK                   NOT LOW, OK\n         NOGO  SHRT\n         STITL 'MAINLINE'                                         *TSM*\nANS1OK   L     R2,DFLTPDE         POINT AT FIRST PDE AGAIN\nPDELOOP  NI    MYFLAGS,255-SECOND-NEEDMNAM-ISMEMNAM               *TSM*\n         L     R7,PDEDSN                                          *TSM*\n         MVC   QUALNOW(4),DFLTQUAL    INITIALIZE TO REAL QUALLIST\n         MVI   DSNLEN+1,0               ZERO DSNAME LENGTH FIELD  *TSM*\n         MVI   DSNVAL,C' '              BLANK DSNAME              *TSM*\n         MVC   DSNVAL+1(43),DSNVAL                                *TSM*\n         CLI   0(R7),C'*'         TERMINAL?\n         BNE   NOTERM\n         L     R3,DAPLDAPB\n         TM    PDEFLG2,PDEPRES          IS MEMBER SPECIFIED ?     *TSM*\n         BZ    @DAIR1C                   NO  - PROCEED WITH DAIR  *TSM*\n         USING DAPB08,R3                 YES - THAT'S A NO-NO     *TSM*\n         MVC   DA08CD(DA08LEN),DAIR08   SET UP FOR FAKE DAIRFAIL  *TSM*\n         MVI   DSNLEN+1,1               DSN='*'                   *TSM*\n         MVI   DSNVAL,C'*'                                        *TSM*\n         LH    R15,PDEMEML              MEMBER NAME FROM PDE      *TSM*\n         BCTR  R15,0                                              *TSM*\n         L     R1,PDEMEMB\n         EX    R15,MOVEMEMB                                       *TSM*\n         LA    R0,DSNLEN                DA08PDSN<-L(DSN)          *TSM*\n         ST    R0,DA08PDSN                                        *TSM*\n         MVI   DAIRRC+3,DRRCDYNA        DAIR RETURN CODE = 0C     *TSM*\n         MVC   DA08DARC,=X'0330'        MEMBER SPECIFIED          *TSM*\n         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*\n         NOGO  DAIR                                               *TSM*\n         SPACE 1                                                  *TSM*\n         USING DAPB1C,R3\n@DAIR1C  MVC   DA1CCD(DA1CLEN),DAIR1C   ADD DAIR CONSTANTS\n         BAL   R14,DAIRGO         CALL DAIR\n         B     ENDLOOP            GOOD RETURN\n         NOGO  DAIR               BAD RETURN\nNOTERM   EQU   *\n*  COMPLETE THE DSN BUFFER\n         TM    PDEFLG1,PDEAPST            NAME IN '' ?\n         BO    CONT\n         AIF   ('&SYSTEM' NE 'MVS' AND NOT &RETRO36).SVS          *TSM*\n         L     R9,DAPLUPT               ADDRESS UPT               *TSM*\n         USING UPT,R9                                             *TSM*\n         SR    R8,R8                                              *TSM*\n         IC    R8,UPTPREFL              GET AND SAVE THE LENGTH   *TSM*\n         STH   R8,DSNLEN                    OF THE DEFAULT PREFIX *TSM*\n         BCTR  R8,0                     LNE-1 FOR EX OF MVC       *TSM*\n         LA    R5,DSNVAL                TARGET                    *TSM*\n         LA    R6,UPTPREFX              SOURCE                    *TSM*\n         DROP  R9                                                 *TSM*\n         EX    R8,DSNMOVE               MOVE IN PREFIX            *TSM*\n         AGO   .SVSMVS                                            *TSM*\n.SVS     L     R9,DAPLPSCB              ADDRESS PSCB              *TSM*\n         USING PSCB,R9                                            *TSM*\n         SR    R8,R8\n         IC    R8,PSCBUSRL              GET AND SAVE THE LENGTH   *TSM*\n         STH   R8,DSNLEN                    OF THE USERID         *TSM*\n         BCTR  R8,0                     LNE-1 FOR EX OF MVC       *TSM*\n         LA    R5,DSNVAL                TARGET\n         LA    R6,PSCBUSER              SOURCE\n         DROP  R9                                                 *TSM*\n         EX    R8,DSNMOVE               ZAP IN USERID\n.SVSMVS  ANOP  ,                                                  *TSM*\nCONT     LH    R8,PDEDSNL               LENGTH OF NAME IN PDE\n         LTR   R8,R8                    ZERO ?\n         BZ    LOCALIAS                  DONE - PROCESS ALIAS     *TSM*\n         LA    R5,DSNVAL\n         AH    R5,DSNLEN                CURRENT POINTER IN BUFFER\n         TM    PDEFLG1,PDEAPST          NAME IN '' ?\n         BO    NOUID                    YES\n         MVI   0(R5),C'.'               ADD PERIOD\n         LH    R9,DSNLEN                BUMP\n         LA    R9,1(,R9)                DSNLEN\n         STH   R9,DSNLEN                AND\n         LA    R5,1(,R5)                POINTER IN BUFFER\nNOUID    L     R6,PDEDSN                SOURCE\n         LA    R3,255(,R8)              LEN-1 FOR EX OF MVC       *TSM*\n         EX    R3,DSNMOVE               ADD NAME FROM PDE         *TSM*\n         AH    R8,DSNLEN                UPDATE\n         STH   R8,DSNLEN                DSNLEN\n         SPACE 1                                                  *TSM*\n         MNOTE 4,'ADD CODE TO HANDLE VSAM CATALOG'                *TSM*\n         SPACE 1                                                  *TSM*\nLOCALIAS MVI   CAMOPTN1,X'44'           SET FUNNY LOCATE CODE     *TSM*\n         LA    R0,DSNVAL                SET DSN IN CAMLST         *TSM*\n         ST    R0,CAMPTR1                                         *TSM*\n         LA    R0,DSCB                  SET WORK AREA IN CAMLST   *TSM*\n         ST    R0,CAMWORKP                                        *TSM*\n        LOCATE CAMOPTN1                 LOCATE AND TRANSLATE      *TSM*\n         CH    R15,=Y(LCRCINDX)         IS THIS INDEX OR ALIAS ?  *TSM*\n         BZ    ALIASLEN                  YES - CALCULATE NEW LEN  *TSM*\n         LTR   R15,R15                  IS THIS DSPE ?            *TSM*\n         BNZ   @DAIR08                   NO  - NAME UNCHANGED     *TSM*\nALIASLEN LA    R0,44                    CALCULATE NEW DSN LENGTH  *TSM*\n         LA    R1,DSNVAL+43                                       *TSM*\n         CLI   0(R1),C' '                                         *TSM*\n         BNE   *+10                                               *TSM*\n         BCTR  R1,0                                               *TSM*\n         BCT   R0,*-10                                            *TSM*\n         STH   R0,DSNLEN                                          *TSM*\n         LTR   R15,R15                  IS THIS FULL OLD DSNAME ? *TSM*\n         BNZ   @DAIR08                   NO  - SKIP OBTAIN        *TSM*\n         TM    DFLTFLG1,DFLTPS          DSORG CHECK REQUIRED ?    *TSM*\n         BZ    @DAIR08                   NO  - OBTAIN NOT NEEDED  *TSM*\n         MVI   CAMOPTN1,OBFLAG          SET CAMLST FOR OBTAIN     *TSM*\n         LA    R0,DSNVAL                                          *TSM*\n         ST    R0,DSNPTR                                          *TSM*\n         LA    R0,VOLSER                                          *TSM*\n         ST    R0,VOLPTR                                          *TSM*\n         LA    R0,DS1FMTID                                        *TSM*\n         ST    R0,CAMWORKP                                        *TSM*\n        OBTAIN CAMLIST                                            *TSM*\n         LTR   R15,R15                                            *TSM*\n         BNZ   @DAIR08                                            *TSM*\n         TM    DS1DSORG,NWDSPO                                    *TSM*\n         BZ    @DAIR08                                            *TSM*\n         OI    MYFLAGS,NEEDMNAM                                   *TSM*\n         SPACE 1                                                  *TSM*\n         MNOTE 0,'REWRITE USING SUBROUTINES TO REMOVE REDUNDANCY' *TSM*\n         SPACE 1                                                  *TSM*\n* COMPLETE THE DAIR08 PARM BLOCK\n@DAIR08  L     R3,DAPLDAPB\n         USING DAPB08,R3\n         MVC   DA08CD(DA08LEN),DAIR08     ADD CONSTANTS\n         LA    R5,DSNLEN\n         ST    R5,DA08PDSN\n         TM    PDEFLG2,PDEPRES            MEMBER ?\n         BO    MEMB\n         TM    MYFLAGS,NEEDMNAM         SHOULD THERE BE ONE ?     *TSM*\n         BO    *+12                      YES - PER OBTAIN         *TSM*\n         TM    DFLTFLG1,DFLTMEMB        EXPLICITLY REQUESTED ?    *TSM*\n         BZ    @PASS                     NO  - NOT NEEDED         *TSM*\n         MVC   DA08MNM,DFLTMEM          ASSUME DEFAULT MEMBER     *TSM*\n         TM    DFLTMEM,X'3F'            IS THERE ONE ?            *TSM*\n         BNZ   SETISMEM                  YES - USE IT             *TSM*\n         BAL   R9,PRMPTMEM               NO  - PROMPT FOR IT      *TSM*\n         B     SETISMEM                                           *TSM*\n         SPACE 1                                                  *TSM*\nMOVEMEMB MVC   DA08MNM(0),0(R1)                                   *TSM*\nMOVEPASS MVC   DA08PSWD(0),0(R8)                                  *TSM*\nMEMB     LH    R15,PDEMEML              MEMBER NAME FROM PDE      *TSM*\n         BCTR  R15,0                                              *TSM*\n         L     R1,PDEMEMB\n         EX    R15,MOVEMEMB                                       *TSM*\nSETISMEM OI    MYFLAGS,ISMEMNAM         FLAG \"MEMBER SPECIFIED\"   *TSM*\n@PASS    TM    PDEFLG3,PDEPRES            PASSWORD?\n         BZ    NOPASS\n         LH    R15,PDEPASL              PASSWORD FROM PDE         *TSM*\n         BCTR  R15,0                                              *TSM*\n         L     R8,PDEPASS                                         *TSM*\n         EX    R15,MOVEPASS                                       *TSM*\n* IN CASE OF DISP=NEW, ADD DCB INFO\nNOPASS   TM    MYFLAGS,ISNEW            NEW DATASET REQUIRED ?    *TSM*\n         BZ    NOTNEW\n         L     R7,DFLTDCB                  GET ADDRESS OF INFO\n         USING NWDSDSCT,R7\n         LTR   R7,R7                     SUPPLIED?\n         BNZ   DCBOK\n         NOGO  NODC\nDCBOK    MVC   DA08BLK(16),NWDSBLK         SPACE INFO'S\n         OI    DA08DSP1,DFLTNEW\n         OI    DA08DPS2,DFLTCAT\n         OI    DA08DPS3,DFLTCAT\n         MVC   DA08CTL,NWDSFLG1           SPACE UNITS\n         MVC   DA08DSO,NWDSFLG2           DSORG\n         TM    MYFLAGS,ISMEMNAM           IS THERE A MEMBER NAME? *TSM*\n         BZ    *+8                         NO                     *TSM*\n         MVI   DA08DSO,NWDSPO              YES - FORCE DSORG=PO   *TSM*\n         TM    DA08DSO,NWDSPO             DSORG=PO ?              *TSM*\n         BO    *+10                        YES                    *TSM*\n         XC    DA08DQTY,DA08DQTY           NO  - NO DIRECTORY     *TSM*\n         B     D08GO\nNOTNEW   MVC   DA08DSP1,DFLTFLG2\n         MVC   DA08DPS2,DFLTFLG3\n         MVC   DA08DPS3,DFLTFLG4\nD08GO    BAL   R14,DAIRGO                 GO DO DAIR\n         B     CHEKDSCB                  GOOD RETURN\n         NOGO  DAIR                      BAD RETURN\n*                                        ACCEPTABLE RETURN\n         CLI   DA08CTRC+1,LCRCINDX       IS NAME INDEX LEVEL OR ALIAS ?\n         BNE   TESTNEW                    NO - TEST IF NEW DS ALLOWED\n         SPACE 1\n* CHECK IF THIS IS SECOND TIME ROUND. IF YES CATALOG ERROR\n         TM    MYFLAGS,SECOND\n         BZ    DA14GO               NO, OK\n         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*\n         NOGO  CTLG\nDA14GO   L     R3,DAPLDAPB\n         USING DAPB14,R3\n         MVC   DA14CD(DA14LEN),DAIR14   SET DAIR CONSTANTS\n         LA    R5,DSNLEN\n         ST    R5,DA14PDSN        POINT TO DSN BUFFER\n         LA    R5,DSCB            POINT TO LOCATE AREA            *TSM*\n         ST    R5,DA14PRET\n         XC    0(256,R5),0(R5)    DAIR14 SHOULD ZERO WORK AREA\n         LA    R6,256             BUT IT DOESN'T\n         SLL   R6,16              SPACE FOR 32 QUALIFIERS GIVEN\n         ST    R6,CAMWORK         ZAP IN LENGTH OF AREA\n         OI    MYFLAGS,SECOND     INDICATE DAIR14 DONE\n         BAL   R14,DAIRGO         GO DO DAIR\n         B     COMPARE            GOOD RETURN\n         NOGO  DAIR               BAD RETURN\n* NOW COMPARE ACTUAL QUALIFIERS TO REQUIRED LIST\nCOMPARE  CLI   DSCB,0                   ANY QUALIFIER IN CATALOG? *TSM*\n         BE    TESTNEW                   NO  - SEE IF NEW ALLOWED *TSM*\n         L     R4,QUALNOW               FIRST QUALIFIER           *TSM*\nQUALOOP1 LA    R5,DSCB                  FIRST NAME FROM CATALOG   *TSM*\nQUALOOP2 CLC   QUALNAME,0(R5)           QUALIFIER=NAME ?          *TSM*\n         BE    @CONCAT                   YES - USE IT             *TSM*\n         LA    R5,8(,R5)                NEXT NAME FROM CATALOG    *TSM*\n         CLI   0(R5),0                  IS THIS END OF LIST ?     *TSM*\n         BNE   QUALOOP2                  NO  - TRY AGAIN          *TSM*\n         TM    QUALLEN,LAST              YES - LAST QUALIFIER ?   *TSM*\n         LA    R4,10(,R4)                           (IN CASE NO)  *TSM*\n         BNO   QUALOOP1                        NO  - TRY NEXT QUAL*TSM*\n         SPACE 1\n* IF HERE, NO MATCH WAS FOUND\n         TM    DFLTFLG1,DFLTONLY        QUALIFIER LIST REQUIRED ? *TSM*\n         BZ    SHOWLIST                  NO  - CHOOSE FROM CAT.   *TSM*\nTESTNEW  TM    DFLTFLG1,DFLTNEWK        IS DISP=NEW ALLOWED ?     *TSM*\n         BZ    NOMATCH                   NO  - SHOW ERROR         *TSM*\n         L     R4,DFLTQUAL         POINT AT FIRST QUALIFIER\n         OI    MYFLAGS,ISNEW            SIGNAL NEW FOR LATER      *TSM*\n         B     @CONCAT              AND CHEAT\n         SPACE 1                                                  *TSM*\nSHOWLIST LA    R0,SEG1NXT               PTPBOPUT->SEG1            *TSM*\n         ST    R0,MYOPUT                                          *TSM*\n         LA    R0,SEG2NXT               SEG1NEXT->SEG2            *TSM*\n         ST    R0,SEG1NXT                                         *TSM*\n         LA    R0,SEG3NXT               SEG2NEXT->SEG3            *TSM*\n         ST    R0,SEG1NXT                                         *TSM*\n         MVC   SEG1TXT,AMBGUOUS         TSM58600I AMBIGUOUS SPEC  *TSM*\n         MVC   SEG1DDN,DFLTDESC                                   *TSM*\n         MVI   SEG1PFX+1,SEG1END-SEG1PFX                          *TSM*\n         MVC   SEG2TXT,QUALSFOR         IKJ58600I QUALIFIERS FOR  *TSM*\n         MVC   SEG2DSN(45),SEG2DSN-1                              *TSM*\n         LH    R8,DSNLEN                MOVE DSNAME               *TSM*\n         BCTR  R8,0                                               *TSM*\n         EX    R8,SEG2MOVE                                        *TSM*\n         LA    R1,SEG2DSN+2(R8)         ->DSN+L'DSN+1 (1 BL LEFT) *TSM*\n         MVC   0(3,R1),=C'ARE'            '... ARE'               *TSM*\n         LA    R0,SEG2DSN+5-SEG2PFX(,R8)  DSN+L'DSN+4             *TSM*\n         STH   R0,SEG2PFX                                         *TSM*\n         XC    SEG3NXT(8),SEG3NXT                                 *TSM*\n         MVI   SEG3PFX+1,SEG3END-SEG3PFX                          *TSM*\n         MVC   SEG3TXT,SEG2TXT                                    *TSM*\n         LA    R5,DSCB                  FIRST NAME FROM CATALOG   *TSM*\n         MVC   SEG3QUAL(SEG3END-SEG3QUAL),SEG3QUAL-1              *TSM*\nSEG3LOOP LA    R3,7                     MAXIMUM QUALIFIER IN LINE *TSM*\n         LA    R6,SEG3QUAL              FIRST NAME IN MESSAGE     *TSM*\nSEG3NXTQ MVC   0(8,R6),0(R5)                                      *TSM*\n         LA    R5,8(,R5)                                          *TSM*\n         LA    R6,9(,R6)                                          *TSM*\n         CLI   0(R5),0                                            *TSM*\n         BE    SEG3DONE                                           *TSM*\n         BCT   R3,SEG3NXTQ                                        *TSM*\n         SPACE 1                                                  *TSM*\n       PUTLINE PARM=MYPTPB,                                       *TSM**\n               OUTPUT=(,MULTLIN,DATA),MF=(E,MYIOPL)               *TSM*\n         LTR   R15,R15                                            *TSM*\n         BZ    *+12                                               *TSM*\n         NOGO  PTLN                                               *TSM*\n         SPACE 1                                                  *TSM*\n         LA    R0,SEG3NXT               SETUP PUTLINE FOR SEG3    *TSM*\n         ST    R0,MYOPUT                                          *TSM*\n         B     SEG3LOOP                 SHOW NEXT 7 QUALIFIERS    *TSM*\n         SPACE 1                                                  *TSM*\nSEG3DONE LA    R0,SEG3PFX+1             SEG3PFX=END+2-(BEGIN+1)   *TSM*\n         SR    R6,R0                                              *TSM*\n         STH   R6,SEG3PFX                                         *TSM*\n         SPACE 1                                                  *TSM*\n         PUTLINE PARM=MYPTPB,                                     *TSM**\n               OUTPUT=(,MULTLIN,DATA),MF=(E,MYIOPL)               *TSM*\n         LTR   R15,R15                                            *TSM*\n         BZ    *+12                                               *TSM*\n         NOGO  PTLN                                               *TSM*\n         SPACE 1                                                  *TSM*\n         MVI   OLD1NUML+3,1             PROMPT:                   *TSM*\n         LA    R0,ENTQUAL                IKJ58601A ENTER QUALIFIER-\n         ST    R0,OLD1SEG1                                        *TSM*\n         SPACE 1                                                  *TSM*\n         PUTGET PARM=MYPGPB,                                      *TSM**\n               OUTPUT=OLD1NUML,MF=(E,MYIOPL)                      *TSM*\n         LTR   R15,R15                                            *TSM*\n         BZ    FAKEQUAL                                           *TSM*\n         NOGO  PTGT                                               *TSM*\n         SPACE 1                                                  *TSM*\n*              BUILD A PSEUDO QUALIFIER LIST AND PASS BACK        *TSM*\nFAKEQUAL L     R1,MYIBUF                MESSAGE FROM PUTGET       *TSM*\n         LH    R15,0(,R1)               MESSAGE LENGTH+4          *TSM*\n         LR    R0,R15                                    FOR FREE *TSM*\n         SH    R15,=H'4'                              +0          *TSM*\n         BZ    FMNO                     ERROR IF NO QUALIFIER     *TSM*\n         STH   R15,MSGAREA                                        *TSM*\n         OI    MSGAREA,LAST             SIGNAL LAST (ONLY) ENTRY  *TSM*\n         BCTR  R15,0                    MESSAGE LENGTH-1 FOR EX   *TSM*\n         MVI   MSGAREA+2,C' '           BLANK QUALIFIER AREA      *TSM*\n         MVC   MSGAREA+3(7),MSGAREA+2                             *TSM*\n         LA    R5,MSGAREA+2             MOVE QUALIFIER            *TSM*\n         LA    R6,4(,R1)                                          *TSM*\n         EX    R15,DSNMOVE                                        *TSM*\n         EX    R15,TRAN                 TRANSLATE QUALIFIER TO UC *TSM*\n         LA    R4,MSGAREA               QUALNOW->PSEUDO LIST      *TSM*\n         ST    R4,QUALNOW                                         *TSM*\n         LA    R5,DSCB                  RESTORE WORKAREA POINTER  *TSM*\n         ICSP  R0,1                     FREE MESSAGE (SP 1)       *TSM*\n      FREEMAIN R,A=(1),LV=(0)                                     *TSM*\n         B     COMPARE                  BUILD FULL DSNAME         *TSM*\n         SPACE 1                                                  *TSM*\nFMNO     ICSP  R0,1                     FREE MESSAGE (SP 1)       *TSM*\n      FREEMAIN R,A=(1),LV=(0)                FROM PUTGET          *TSM*\nNOMATCH  NOGO  NONE                                               *TSM*\n         SPACE 1                                                  *TSM*\n*  WE NOW HAVE A DSN WITHOUT QUALIFIER AND A QUALIFIER\n*  JOIN THE TWO TOGETHER AND ALLOCATE THE COMPLETED NAME\n         SPACE 1\n@CONCAT  LH    R3,DSNLEN                                          *TSM*\n         LA    R5,DSNVAL(R3)    POINT PAST DSN BUFFER\n         MVI   0(R5),C'.'       ADD PERIOD\n         LA    R5,1(,R5)        TARGET\n         LA    R0,X'7F'         GET LENGTH OF CHOSEN QUALIFIER\n         LH    R8,QUALLEN           (BITS 1-7)\n         NR    R8,R0\n         BCTR  R8,0             DECREMENT\n         LA    R6,QUALNAME      SOURCE\n         EX    R8,DSNMOVE       CONCATENATE TO DSN\n         LA    R5,2(R3,R8)      DSN+L'DSN+L'PER+(L'QUAL-1)+1\n         STH   R5,DSNLEN\n         B     @DAIR08          TRY AGAIN\nCHEKDSCB EQU   *\n*    IF NO CHECKS NEEDED, SKIP LOCATE/OBTAIN\n         TM    DFLTFLG1,DFLTPO+DFLTPS\n         BZ    ENDLOOP                   GOOD, LESS WORK\n         LA    R5,DSCB                 ADDRESS DSECT\n         MVC   CAMLIST(4),LOCFLAG         LOCATE FLAGS\n         LA    R8,DSNVAL\n         ST    R8,DSNPTR\n         ST    R5,WORKPTR\n         LOCATE CAMLIST\n         LTR   R15,R15\n         BZ    LOCATEOK\n         L     R3,DAPLDAPB              POINT TO DAPL (DA08)      *TSM*\n         USING DAPB08,R3                                          *TSM*\n         STH   R15,DA08CTRC             CTRC=  XX                 *TSM*\n         MVI   DA08DARC,X'17'           DARC=17YY                 *TSM*\n         B     FAKEDRFL                 FAKE DAIRFAIL             *TSM*\n         SPACE 1                                                  *TSM*\nLOCATEOK EQU   *\n*  SET UP OBTAIN\n         MVI   CAMLIST,OBFLAG         OBTAIN FLAG\n         LA    R8,VOLSER\n         ST    R8,VOLPTR\n         OBTAIN CAMLIST\n         LTR   R15,R15\n         BZ    OBTAINOK\n         L     R3,DAPLDAPB              POINT TO DAPL (DA08)      *TSM*\n         USING DAPB08,R3                                          *TSM*\n         MVI   DA08DARC,X'67'           DARC=67YY                 *TSM*\nFAKEDRFL MVI   DAIRRC+3,DRRCDYNA        DAIR RETURN CODE = 0C     *TSM*\n         STC   R15,DA08DARC+1           DARC=X7YY                 *TSM*\n         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*\n         NOGO  LCOB\n         DROP  R3                                                 *TSM*\n         SPACE 1                                                  *TSM*\nOBTAINOK TM    DFLTFLG1,DFLTPO          DSORG=PO REQUIRED ?\n         BZ    REQUIRPS                  NO - PS REQUIRED\n         TM    DS1DSORG-DS1FMTID(R5),NWDSPO\n         BO    ENDLOOP             OK\nBUMDSORG LA    R0,OLD2                  OLD1->OLD2                *TSM*\n         ST    R0,OLD1                                            *TSM*\n         MVI   OLD1NUML+3,1             OLDLNUML=1 SEGMENT        *TSM*\n         LA    R0,SEG2PFX               OLD1SEG1->SEG2            *TSM*\n         ST    R0,OLD1SEG1                                        *TSM*\n         XC    OLD2(4),OLD2             OLD2 IS LAST MESSAGE      *TSM*\n         MVI   OLD2NUML+3,1             OLD2NUML=1 SEGMENT        *TSM*\n         LA    R0,SEG1PFX               OLD2SEG1->SEG1            *TSM*\n         ST    R0,OLD2SEG1                                        *TSM*\n         MVI   SEG1PFX+1,MSORGEND-SEG1PFX                         *TSM*\n         MVC   MSORGTXT,INVDSORG        TSM56002I ... MUST HAVE   *TSM*\n         MVC   MSORGDDN,DFLTDESC                                  *TSM*\n         MVC   MSORGTX2,INVDSOR2        MUST HAVE DSORG=PS        *TSM*\n         TM    DFLTFLG1,DFLTPO                                    *TSM*\n         BZ    *+8                                                *TSM*\n         MVI   MSORGEND-1,C'O'                         =PO        *TSM*\n         MVC   MSOR2TXT,INVDATST        IKJ56002I INVALID DATASET *TSM*\n         MVC   MSOR2DSN(45),MSOR2DSN-1                            *TSM*\n         LH    R8,DSNLEN                MOVE DSNAME               *TSM*\n         BCTR  R8,0                                               *TSM*\n         EX    R8,INVDSMOV                                        *TSM*\n         LA    R1,MSOR2DSN+2(R8)        ->DSN+L'DSN+1 (1 BL LEFT) *TSM*\n         MVI   0(R1),C'+'                 '+'                     *TSM*\n         LA    R0,MSGMBDSN+3-SEG2PFX(,R8) DSN+L'DSN+2             *TSM*\n         STH   R0,SEG2PFX                                         *TSM*\n       PUTLINE PARM=MYPTPB,                                       *TSM**\n               OUTPUT=(OLD1,TERM,MULTLVL),MF=(E,MYIOPL)           *TSM*\n         LTR   R15,R15                  IF RETURN CODE BAD,       *TSM*\n         BZ    *+12                                               *TSM*\n         NOGO  PTLN                      SQUAWK                   *TSM*\n         NOGO  POPS\n         SPACE 1                                                  *TSM*\nINVDSMOV MVC   MSOR2DSN(0),DSNVAL                                 *TSM*\n         SPACE 1                                                  *TSM*\nREQUIRPS TM    DS1DSORG-DS1FMTID(R5),NWDSPS+NWDSPO                *TSM*\n         BZ    BUMDSORG\n         TM    DS1DSORG-DS1FMTID(R5),NWDSPO\n         BZ    ENDLOOP\n         TM    MYFLAGS,ISMEMNAM         IS MEMBER NAME SPECIFIED? *TSM*\n         BO    ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*\n         L     R3,DAPLDAPB              POINT TO DAPB08           *TSM*\n         USING DAPB08,R3                                          *TSM*\n         MVC   DA08MNM,DFLTMEM          IS THERE A DEFAULT MEM ?  *TSM*\n         TM    DFLTMEM,X'3F'                                      *TSM*\n         BNZ   ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*\n         BAL   R9,PRMPTMEM               NO  - PROMPT FOR MEMBER  *TSM*\n         DROP  R3                                                 *TSM*\n*        B     ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*\nENDLOOP  TM    DFLTFLG1,DFLTNEWK  IS NEW ALLOWED ?\n         BO    SUCCESS             YES - CAN'T BE LIST\n         NI    MYFLAGS,255-ISNEW-SECOND LOWER FLAG                *TSM*\n         L     R2,PDENEXT         POINT TO NEXT PDE\n         LTR   R2,R2              IS THERE ONE?\n         BP    PDELOOP            YES, BACK FOR MORE             BASTNJ\n         STITL 'CONCAT AND FINAL HOUSEKEEPING'                    *TSM*\n* ALL DATASETS NOW ALLOCATED\n         TM    MYFLAGS,CONCAT      CONCAT NEEDED?\n         BZ    SUCCESS             NO\n         L     R3,CONCATPB         ALTER PARM BLOCK BASE\n         ST    R3,DAPLDAPB\n         USING DAPB0C,R3\n         MVC   DA0CCD(DA0CLEN),DAIR0C      SET DAIR0C CONSTANTS\n         LH    R5,#DSN         LOAD INDEX REG\n         STH   R5,DA0CNUMB\n         L     R6,DFLTANSW         POINT AT FIRST ANSWER\n         USING ANSWDSCT,R6\nDDLOOP   MVC   DA0CDDN(8),ANSWDDN   MOVE IN DDNAME\n         LA    R3,8(,R3)           BUMP DA0C BASE\n         AH    R6,LNANSENT         BUMP ANSWDSCT BASE\n         BCT   R5,DDLOOP           BACK FOR MORE\n         BAL   R14,DAIRGO          CALL DAIR\n         B     SUCCESS             GOOD RETURN\n         NOGO  DAIR                 BAD RETURN\nSUCCESS  NOGO  OK,DEST=FREEAREA\nFREEALL  EQU    *\n*       UNDO ALL THE GOOD WORK\n         LH    R5,#DSN           SET INDEX  REG\n         LTR   R5,R5             ANY GOOD ALLOCATIONS?\n         BZ    FREEAREA          NO\n         LA    R3,MYDAPB          RESTORE\n         ST    R3,DAPLDAPB\n         L     R6,DFLTANSW\n         USING DAPB18,R3\n         MVC   DA18CD(DA18LEN),DAIR18    SET DAIR18 CONSTANTS\n         LA    R8,ANSWDSNL                 POINT TO DSN BUFFER\n         NI    DA18DPS2,DFLTKEEP             DISPOSITION\nFREELOOP MVC   DA18DDN(8),ANSWDDN            DDN TO BE FREED\n         BAL   R14,DAIRGO                GO FREE IT\n         B     @BUMPPDE                  GOOD RETURN\n         NOGO  DAIR,DEST=FREEAREA\n@BUMPPDE AH    R6,LNANSENT          BUMP ANSWER POINTER\n         BCT   R5,FREELOOP          DO NEXT\n         DROP  R6\n         SPACE 1\n*  FREE ALL GETMAINED AREA'S\nFREEAREA L     R5,CONCATPB        IS THERE A CONCAT AREA?\n         LTR   R5,R5                ZERO IF NONE\n         BZ    ENDUP\n         L     R6,CONCATLN          GET LENGTH\n         FREEMAIN R,LV=(R6),A=(R5)                                *TSM*\nENDUP    LH    R7,#DSN\n         LTR   R7,R7         IF NO SUCCESSES, SKIP\n         BZ    EXIT\n         L     R6,DFLTANSW   ADRESS OF ANSWER AREA\n         USING ANSWDSCT,R6\n         MVC   ANSW#DD,#DSN         RETURN NUMBER OF DDNAMES\nEXIT     XR    R15,R15       RETRIEVE RETURN CODE\n         IC    R15,#PDE\n         ENDM  RC=(R15)             GO HOME\n         STITL 'PROMPTING FOR MEMBER NAME'                        *TSM*\n*              R3 MUST POINT TO A DAPB08                          *TSM*\n*              RETURN VIA R9 WITH DA08MNM SET                     *TSM*\n*              TERMINATE IF PROMPT NOT SUCCESSFUL                 *TSM*\n         SPACE 1                                                  *TSM*\n         USING DAPB08,R3                                          *TSM*\nPRMPTMEM MVC   DA08MNM,=CL8' '          BLANK MEMBER NAME         *TSM*\n         LA    R0,OLD2                  OLD1->OLD2                *TSM*\n         ST    R0,OLD1                                            *TSM*\n         MVI   OLD1NUML+3,1             OLDLNUML=1 SEGMENT        *TSM*\n         LA    R0,SEG2PFX               OLD1SEG1->SEG2            *TSM*\n         ST    R0,OLD1SEG1                                        *TSM*\n         XC    OLD2(4),OLD2             OLD2 IS LAST MESSAGE      *TSM*\n         MVI   OLD2NUML+3,1             OLD2NUML=1 SEGMENT        *TSM*\n         LA    R0,SEG1PFX               OLD2SEG1->SEG1            *TSM*\n         ST    R0,OLD2SEG1                                        *TSM*\n         MVC   SEG1TXT,AMBGUOUS         TSM58600I AMBIGUOUS SPEC  *TSM*\n         MVC   SEG1DDN,DFLTDESC                                   *TSM*\n         MVI   SEG1PFX+1,SEG1END-SEG1PFX                          *TSM*\n         MVC   MSGMBTXT,MEMBSFOR        IKJ58600I SPECIFY MEMBERS *TSM*\n         MVC   MSGMBDSN(45),MSGMBDSN-1                            *TSM*\n         LH    R8,DSNLEN                MOVE DSNAME               *TSM*\n         BCTR  R8,0                                               *TSM*\n         EX    R8,MEMBMOVE                                        *TSM*\n         LA    R1,MSGMBDSN+2(R8)        ->DSN+L'DSN+1 (1 BL LEFT) *TSM*\n         MVC   0(2,R1),=C'+-'             ' +-'                   *TSM*\n         LA    R0,MSGMBDSN+4-SEG2PFX(,R8) DSN+L'DSN+3             *TSM*\n         STH   R0,SEG2PFX                                         *TSM*\nREPRMEM PUTGET PARM=MYPGPB,                                       *TSM**\n               OUTPUT=(OLD1,MULTLVL,PROMPT),MF=(E,MYIOPL)         *TSM*\n         LTR   R15,R15                  IF RETURN CODE BAD,       *TSM*\n         BZ    *+12                                               *TSM*\n         NOGO  PTGT                      SQUAWK                   *TSM*\n         L     R1,MYIBUF                GET REPLY BUFFER AND      *TSM*\n         LH    R15,0(,R1)                   LENGTH                *TSM*\n         LR    R0,R15                       LENGTH FOR FREEMAIN   *TSM*\n         ICSP  R0,1                     SP1 FOR FREEMAIN          *TSM*\n         SH    R15,=H'5'                IF NO MEMBER GIVEN,       *TSM*\n         BM    NOMEM                     CALL IT DSORG MISMATCH   *TSM*\n         CH    R15,=H'8'                 IS NAME > 8 BYTES ?      *TSM*\n         BNL   INVME                      KVETCH IF SO            *TSM*\n         EX    R15,MOVEMEMP              MOVE MEMBER NAME         *TSM*\n         EX    R15,TRANMEMP              TRANSLATE TO UPPER CASE  *TSM*\n      FREEMAIN R,A=(1),LV=(0)                                     *TSM*\n         BR    R9                                                 *TSM*\n         SPACE 1                                                  *TSM*\nMOVEMEMP MVC   DA08MNM(0),4(R1)                                   *TSM*\nTRANMEMP OC    DA08MNM(0),=CL8' '                                 *TSM*\nMEMBMOVE MVC   MSGMBDSN(0),DSNVAL                                 *TSM*\n         SPACE 1                                                  *TSM*\nINVME FREEMAIN R,A=(1),LV=(0)                                     *TSM*\n         LA    R0,INVMEM                 SQUAWK                   *TSM*\n         ST    R0,OLD2SEG1                                        *TSM*\n         B     REPRMEM                  REDO PROMPT               *TSM*\n         SPACE 1                                                  *TSM*\nNOMEM FREEMAIN R,A=(1),LV=(0)                                     *TSM*\n         NOGO  POPS                      SQUAWK                   *TSM*\n         STITL 'DAIR INTEREFACE AND ANALYSIS'\n* ALL CALLS TO IKJDAIR FROM HERE\n         SPACE 1\n*              RETURN VIA R14:\n*              +0                    NORMAL\n*              +4                    UNANTICIPATED DAIR ERROR\n*              +C                    DAIR RC 08 - LOCATE RC 08 OR 0C\n         SPACE 1\nDAIRGO   XC    ECB(4),ECB         ZERO ECB\n         ST    R14,DAIRBACK          SAVE RETURN ADDRESS\n         LINK  EP=IKJDAIR,MF=(E,MYDAPL)\n         ST    R15,DAIRRC               STORE RETURN CODE         *TSM*\n         LTR   R15,R15             ENDED OK?\n         L     R14,DAIRBACK        RESTORE RETURN ADDRESS\n         BZ    GOODDAIR\n* ANALYZE DAIR ERRORS\n         L     R3,DAPLDAPB    POINT TO PARM BLOCK\n         CLI   1(R3),X'08'     WAS IT DAIR08 ?\n         BNE   DF             NO, CONTINUE WITH DAIRFAIL\n         USING DAPB08,R3\n         TM    MYFLAGS,ISNEW            IS THIS ALLOC OF NEW DS ? *TSM*\n         BO    DF                        YES - DO DAIRFAIL        *TSM*\n         SPACE 1                                                  *TSM*\n*   CHECK CAUSE OF RETURN. IF DAIRRC IS 8 AND DA08CTRC 12\n*   THIS INDICATES THAT THE GIVEN NAME IS AN INDEX LEVEL\n*   THEREFORE SAFE TO GO AHEAD WITH DAIR14\n*   IF DA08CTRC IS 8, INDEX LEVEL MISSING, SKIP DAIR14\n         CLI   DAIRRC+3,DRRCCTLG        DAIR CATALOG ERROR ?      *TSM*\n         BNE   DF                        NO  - CALL DAIRFAIL      *TSM*\n         CLI   DA08CTRC+1,LCRCNONE      CTLG ERR \"NOT FOUND\" ?    *TSM*\n         BE    12(,R14)                  YES - LEGITIMATE         *TSM*\n         CLI   DA08CTRC+1,LCRCINDX      CTLG ERR \"NAME IS INDEX\"  *TSM*\n         BE    12(,R14)                  YES - LEGITIMATE         *TSM*\n*        B     DF                        NO  - CALL IKJEFF18      *TSM*\n         MNOTE 0,'BYPASS BUG IN DAIRFAIL'                         *TSM*\n         CLI   DA08CTRC+1,LCRCDSPE      CTLG ERR \"DSPE NOT LAST\"  *TSM*\n         BNE   DF                        NO  - DAIRFAIL OK        *TSM*\n         TM    DFLTFLG1,DFLTNEWK        NEW ALLOWED ?             *TSM*\n         BZ    DF                        NO  - WRITE ERRONEOUS MSG*TSM*\n         MVI   DA08DSP1,DA08NEW          YES - LIE TO DAIRFAIL    *TSM*\n*        B     DF                                                 *TSM*\n         SPACE 1                                                  *TSM*\nDF       MVI   SEG1PFX+1,MSGDREND-SEG1PFX                         *TSM*\n         MVC   MSGDRTXT,DAIRFAIL        TSM56001I DAIR FAILURE FOR*TSM*\n         MVC   MSGDRDDN,DFLTDESC                                  *TSM*\n       PUTLINE PARM=MYPTPB,                                       *TSM**\n               OUTPUT=(SEG1PFX,SINGLE,DATA),MF=(E,MYIOPL)         *TSM*\n         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)  DO DAIRFAIL       *TSM*\n         L     R14,DAIRBACK     RESTORE RETURN  ADDRESS\n         B     4(,R14)            BAD RETURN\nGOODDAIR EQU   *\n*  ONLY IN CASE OF DAIR08/1C DO I HAVE TO STORE THE ANSWER\n         L     R3,DAPLDAPB          PARM BLOCK BASE\n         L     R6,CURANSW           CURRENT ANSWER BASE\n         CLI   1(R3),X'08'          DAIR08?\n         BE    IS08\n         CLI   1(R3),X'1C'          DAIR1C?\n         BE    IS1C\n         BR    R14                   NEITHER, RETURN\n         USING DAPB08,R3\nIS08     MVC   ANSWDDN,DA08DDN     UNCONDITIONALLY RETURN DDNAME\n         MVC   MSGALDDN,DA08DDN         MOVE DDNAME TO MESSAGE    *TSM*\n         TM    DFLTFLG1,DFLTDSNR   IS DSN TO BE RETURNED ?\n         BZ    @TELL                NO - DON'T MOVE IT IN\n         MVC   ANSWDSNL(46),DSNLEN WHOLESALE MOVE OF DSN AND ITS LENGTH\n         B     @TELL\n         USING DAPB1C,R3\nIS1C     MVC   ANSWDDN,DA1CDDN     UNCONDITIONALLY RETURN DDNAME\n         MVC   MSGALDDN,DA1CDDN         MOVE DDNAME TO MESSAGE    *TSM*\n         TM    DFLTFLG1,DFLTDSNR   IS DSN TO BE RETURNED ?\n         BZ    @TELL                NO - DON'T MOVE IT IN\n         MVI   ANSWDSN,C'*'        TERMINAL\n         LA    R7,1\n         STH   R7,ANSWDSNL\n@TELL    AH    R6,LNANSENT          BUMP CURANSW\n         ST    R6,CURANSW\n         LH    R6,#DSN              UPDATE COUNT OF SUCCESSES\n         LA    R6,1(,R6)\n         STH   R6,#DSN\n         TM    DFLTFLG1,DFLTDDND     ANNOUNCE\n         BZR   R14               RETURN\n* COPY GHOST PULINE PARM BLOCK\n*  BUILD MESSAGE  IKJ0101I ... DDN... ALLOCATED TO ... DSN ...    *TSM*\n         MVC   MSGID,=C'TSM56002I '                               *TSM*\n         MVC   MSGALTXT,ALLOCATE        ' ALLOCATED TO '          *TSM*\n         CLI   1(R3),X'1C'                       TERMINAL ?\n         BNE   NOT1C\n         MVC   MSGALDSN(L'TERMINAL),TERMINAL 'TERMINAL'           *TSM*\n         LA    R8,MSGALDSN-MSGAREA+L'TERMINAL                     *TSM*\n         B     MSGHEAD\nNOT1C    LH    R8,DSNLEN\n         BCTR  R8,0\n         LA    R5,MSGALDSN              TARGET                    *TSM*\n         LA    R6,DSNVAL                SOURCE                    *TSM*\n         EX    R8,DSNMOVE               ADD DSNAME                *TSM*\n         LA    R8,MSGALDSN-MSGAREA                                *TSM*\n         AH    R8,DSNLEN\nMSGHEAD  SLL   R8,16                    ADD PREFIX                *TSM*\n         ST    R8,MSGPFX                                          *TSM*\n         XC    ECB(4),ECB\n         PUTLINE PARM=MYPTPB,UPT=DAPLUPT,ECT=DAPLECT,ECB=ECB,          X\n               OUTPUT=(MSGAREA,DATA),MF=(E,MYIOPL)\n         LTR   R15,R15                  OK?\n         L     R14,DAIRBACK     RESTORE\n         BER   R14                    RETURN\n         NOGO  PTLN\n         STITL  'CONSTANTS'\nDSNMOVE  MVC   0(,R5),0(R6)\nSEG2MOVE MVC   SEG2DSN(0),DSNVAL                                  *TSM*\nDAIRFAIL DC    C'TSM56001I DAIR FAILURE FOR '                     *TSM*\nTERMINAL DC    C'TERMINAL'\nALLOCATE DC    C' ALLOCATED TO '\nLOCFLAG  DC    AL1(68,0,0,0)\nOBFLAG   EQU   X'C1'\nLAST     EQU   X'80'\nDAIR08   DS    0F            DAIR08 CONSTANTS\n         DC    X'0008'        ENTRY CODE\n         DC    H'0'           FLAGS\n         DC    H'0'           DAIR ERROR CODE\n         DC    H'0'           CATALOG ERROR CODE\n         DC    A(0)           DSN BUFFER\n         DC    CL8' '          DDNAME\n         DC    CL8' '          UNIT NAME\n         DC    CL8' '          VOL SER\n         DC    F'0'           BLOCK SIZE\n         DC    F'0'           PRIMARY QUANTITY\n         DC    F'0'           SECONDARY QUANTITY\n         DC    F'0'           DIRECTORY QUANTITY\n         DC    CL8' '           MEMBER NAME\n         DC    CL8' '          PASSWORD\n         DC    F'0'           FLAGS\n         DC    AL3(0)         RESERVED\n         DC    X'0'           FLAGS\n         DC    CL8' '          ATTRIBUTE LIST NAME\nDA08LEN  EQU   *-DAIR08\nDAIR0C   DS    0F          DAIR0C CONSTANTS\n         DC    X'000C'     ENTRY CODE\n         DC    H'0'        FLAGS\n         DC    H'0'        DAIR RETURN CODE\n         DC    H'0'        RESERVED\n         DC    H'0'        NUMBER OF DATASETS TO CONCAT\n         DC    H'0'        RESERVED\n         DC    CL8' '       FIRST DDNAME\nDA0CLEN  EQU   *-DAIR0C\nDAIR10   DS    0F          DAIR10 CONSTANTS\n         DC    X'0010'     ENTRY CODE\n         DC    H'0'        RESERVED\n         DC    H'0'        DAIR RETURN CODE\n         DC    H'0'        RESERVED\n         DC    CL8' '       DDNAME TO DECONCAT\nDA10LEN  EQU   *-DAIR10\nDAIR14   DS    0F           DAIR14 CONSTANTS\n         DC    X'0014'      ENTRY CODE\n         DC    H'0'         FLAGS\n         DC    A(0)         DSN POINTER\n         DC    A(0)         WORK AREA POINTER\n         DC    X'0'         FLAGS\n         DC    AL3(0)       RESERVED\nDA14LEN  EQU   *-DAIR14\nDAIR18   DS    0F              DAIR18 CONSTANTS\n         DC    X'0018'         ENTRY CODE\n         DC    H'0'            FLAGS\n         DC    H'0'            DAIR RETURN CODE\n         DC    H'0'            CATALOG RETURN CODE\n         DC    A(0)            DSN POINTER\n         DC    D'0'            DDNAME\n         DC    CL8' '           MEMBER NAME\n         DC    2C' '           SYSOUT CLASS\n         DC    H'0'            FLAGS\n         DC    CL8' '           JOBNAME\nDA18LEN  EQU   *-DAIR18\nDAIR1C   DS    0F             DAIR1C CONSTANTS\n         DC    X'001C'        ENTRY CODE\n         DC    H'0'           FLAGS\n         DC    H'0'           DAIR RETURN CODE\n         DC    X'0'           RESERVED\n         DC    X'0'           CONTROL BYTE\n         DC    CL8' '          DDNAME\n         DC    CL8' '          ATTRIBUTE LIST NAME\nDA1CLEN  EQU   *-DAIR1C\nPUTGET   PUTGET OUTPUT=(,SINGLE,PROMPT),TERMGET=(EDIT,WAIT),           *\n               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L            *TSM*\nPUTGETLN EQU    *-PUTGET\nPUTL     PUTLINE TERMPUT=NOHOLD,MF=L                              *TSM*\nPUTLEND  EQU   *-PUTL\n         SPACE 1                                                  *TSM*\nAMBGUOUS DC    C'TSM58600I AMBIGUOUS SPECIFICATION FOR '          *TSM*\nQUALSFOR DC    C'IKJ58600I QUALIFIERS FOR DATA SET '              *TSM*\nMEMBSFOR DC    C'TSM58600I SPECIFY MEMBER FOR '                   *TSM*\nENTQUAL  WTO   'IKJ58601A ENTER QUALIFIER- ',MF=L                 *TSM*\nINVMEM   WTO   'TSM56002I INVALID MEMBER NAME+-'                  *TSM*\nINVDSORG DC    C'TSM56002I '                                      *TSM*\nINVDSOR2 DC    C' MUST HAVE DSORG=PS'                             *TSM*\nINVDATST DC    C'TSM56002I INVALID DATASET '                      *TSM*\n         SPACE 1                                                  *TSM*\nLINKFAIL LINK  EP=IKJEFF18,SF=L                                   *TSM*\n         SPACE 1                                                  *TSM*\n*              OC INSTRUCTION TO CONVERT INPUT TO UPPER CASE      *TSM*\nTRAN     OC    0(,R5),=CL8' '      OBJECT OF EXECUTE              *TSM*\n         LTORG\n         STITL  'CPPL/IOPL/PGPB/PTPB DSECTS'\n         IKJCPPL\n         IKJIOPL                                                  *TSM*\n         IKJPGPB\n         IKJPTPB\n         STITL   'INDIVIDUAL WORK AREA'\nSAVE     DSECT\n* WORK AREA FOR OBTAIN/LOCATE\nDSCB     DS    0D\nCAMWORK  DS    265C\n         ORG   CAMWORK+6\nVOLSER   DS    CL6                VOLSER OF DSN AFTER LOCATE\n         ORG   CAMWORK\n         IECSDSL1 (1)\n         ORG   CAMWORK+272\n         SPACE 3\n#PDE     DS    H                  NUMBER OF PDE'S\n#DSN     DS    H                  COUNT GOOD ALLOCATIONS\nLNANSENT DS    H                  LENGTH OF ANSWER AREA ENTRY\nCURANSW  DS    A                  CURRENT POSITION IN ANSWER AREA\nMYDAPL   EQU   *                   DAIR PARM LIST\nDAPLUPT  DS    A\nDAPLECT  DS    A\nDAPLECB  DS    A\nDAPLPSCB DS    A\nDAPLDAPB DS    A\nMYDAPB   DS    25F                DAIR PARM BLOCK\nMYFLAGS  DS    X                  FLAGS\nCONCAT   EQU   X'80'              MORE THAN 1 PDE, CONCAT NEEDED\nPREFIX   EQU   X'20'              ADD USERID TO DSN\nSECOND   EQU   X'10'              DAIR14 ALREADY DONE\nNEEDMNAM EQU   X'08'              MEMBER REQUIRED DUE TO DSORG    *TSM*\nISMEMNAM EQU   X'04'              MEMBER NAME PRESENT             *TSM*\nISNEW    EQU   X'02'              ALLOCATION IS NEW               *TSM*\nCONCATPB DS    A                  ADDRESS OF CONCAT PARM BLOCK\nCONCATLN DS    F                  AND ITS LENGTH\n         SPACE 1                                                  *TSM*\nMSGAREA  DS    68C                WORK AREA FOR BUILDING MESSAGES *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   MSGAREA                                            *TSM*\nMSGPFX   DS    H,H                Y(LEN),(OFFSET=0)               *TSM*\nMSGID    DS    C'TSM56002I '      MESSAGE ID                      *TSM*\nMSGTEXT  DS    0C                 MESSAGE TEXT                    *TSM*\nMSGALDDN DS    CL8                DDNAME IN ALLOCATION MESSAGE    *TSM*\nMSGALTXT DS    C' ALLOCATED TO '  TEXT   IN ALLOCATION MESSAGE    *TSM*\nMSGALDSN DS    CL44               DSNAME IN ALLOCATION MESSAGE    *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   ,                                                  *TSM*\n       CAMLSTD DSECT=NO                                           *TSM*\nCAMLIST  EQU   CAMOPTN1,4,C'X'    FLAGS ETC\nDSNPTR   EQU   CAMPTR1,4,C'A'\nVOLPTR   EQU   CAMCVOLP,4,C'A'\nWORKPTR  EQU   CAMPTR3\nDSNLEN   DS    H                  CURRENT DSN LENGTH\nDSNVAL   DS    CL45        DSN + GUARD BYTE\nECB      DS    F        ECB OF ATTACHED TASK\nDAIRRC   DS    F        DAIR RETURN CODE\nDAIRMSWR DS    A        ADDRESS OF MESSAGE WRITER (IKJEFF02)\nDAIRID   DS    H        ID FOR DAIRFAIL\n* DAIRFAIL PARMLIST\nFAILDAPL DS    A        ->CURRENT DAPL\nFAILRC   DS    A        -> RC\nFAILMSWR DS    A        -> MESSAGE WRITER\nFAILID   DS    A        -> ID\n         SPACE 1                                                  *TSM*\nSEG1NXT  DC    A(SEG2NXT)                                         *TSM*\nSEG1PFX  DC    Y(SEG1END-SEG1PFX,0)                               *TSM*\nSEG1TXT  DC    C'TSM58600I AMBIGUOUS SPECIFICATION FOR '          *TSM*\nSEG1DDN  DS    CL8                                                *TSM*\nSEG1END  EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   SEG1TXT                                            *TSM*\nMSGDRTXT DS    C'TSM56001I DAIR FAILURE FOR '                     *TSM*\nMSGDRDDN DS    CL8                DDNAME IN DAIR FAIL MESSAGE     *TSM*\nMSGDREND EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   SEG1TXT                                            *TSM*\nMSORGTXT DS    C'TSM56002I '                                      *TSM*\nMSORGDDN DS    CL8                DDNAME IN BAD DSORG MESSAGE     *TSM*\nMSORGTX2 DS    C' MUST HAVE DSORG=PS'                             *TSM*\nMSORGEND EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   ,                                                  *TSM*\nSEG2NXT  DC    A(SEG3NXT)                                         *TSM*\nSEG2PFX  DC    Y(SEG2END-SEG2PFX,0)                               *TSM*\nSEG2TXT  DC    C'IKJ58600I QUALIFIERS FOR DATA SET '              *TSM*\nSEG2DSN  DS    CL44                                               *TSM*\nSEG2ARE  DC    C' ARE'                                            *TSM*\nSEG2END  EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   SEG2TXT                                            *TSM*\nMSGMBTXT DS    C'TSM58600I SPECIFY MEMBER FOR '                   *TSM*\nMSGMBDSN DS    CL44               DSNAME OF PDS                   *TSM*\nMSGMBEND EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\n         ORG   SEG2TXT                                            *TSM*\nMSOR2TXT DS    C'TSM56002I INVALID DATASET '                      *TSM*\nMSOR2DSN DS    CL44               DSNAME OF DS WITH BAD DSORG     *TSM*\nMSOR2END EQU   *                                                  *TSM*\n         ORG   ,                                                  *TSM*\n         SPACE 1                                                  *TSM*\nSEG3NXT  DC    A(0)                                               *TSM*\nSEG3PFX  DC    Y(SEG3END-SEG3PFX,0)                               *TSM*\nSEG3TXT  DC    C'IKJ58600I '                                      *TSM*\nSEG3QUAL DS    CL8,6CL9                                           *TSM*\nSEG3END  EQU   *                                                  *TSM*\n         SPACE 1                                                  *TSM*\nOLD1     DS    A        POINT TO NEXT OUTPUT LINE DESC\nOLD1NUML DS    F        # LINES TO THIS MESSAGE\nOLD1SEG1 DS    A        POINT TO FIRST LINE\nOLD2     DS    A        POINT TO NEXT OUTPUT LINE DESC\nOLD2NUML DS    F        # LINES TO THIS MESSAGE\nOLD2SEG1 DS    A        POINT TO FIRST LINE\nOLD2SEG2 DS    A        POINT TO NEXT LINE\nMYPGPB  PUTGET OUTPUT=(,SINGLE,PROMPT),                           *TSM**\n               TERMGET=(EDIT,WAIT),                               *TSM**\n               TERMPUT=(EDIT,WAIT,HOLD,NOBREAK),MF=L              *TSM*\nMYIBUF   EQU   PGPBIBUF-PGPB+MYPGPB,4,C'A'                        *TSM*\nMYPTPB PUTLINE OUTPUT=(SEG1NXT,TERM,MULTLIN,DATA),                *TSM**\n               TERMPUT=NOHOLD,MF=L                                *TSM*\nMYOPUT   EQU   PTPBOPUT-PTPB+MYPTPB,4,C'A'                        *TSM*\nMYIOPL   DS    4F       I/O PARAMETER LIST FOR PUTGET/PUTLINE\nMYUPT    EQU   IOPLUPT-IOPL+MYIOPL,4,C'A'                         *TSM*\nMYECT    EQU   IOPLECT-IOPL+MYIOPL,4,C'A'                         *TSM*\nMYECB    EQU   IOPLECB-IOPL+MYIOPL,4,C'A'                         *TSM*\nDAIRBACK DS    A        RETURN ADDRESS FROM DAIRGO\nQUALNOW  DS    A        ADDRESS OF CURRENT QUALLIST (REAL OR PSEUDO)\nSAVEND   EQU   *\n         STITL 'EQU''S FOR RETURN CODES'\n      DFLTARTC ,\n         STITL 'DSECTS'\n         DFLTAP\n         SPACE 2\n         DFLTAQ\n         SPACE 2\n         DFLTAAN\n         SPACE 2\n         DFLTAPDE\n         SPACE 2\n         DFLTAD\n         SPACE 3\n         IKJDAP08\n         IKJDAP0C\nDA0CDDN  DS    8C              /ADDED BY DAVID HENRY\n         IKJDAP10\n         IKJDAP14\n         IKJDAP18\n         IKJDAP1C\n         STITL 'PROTECTED STEP CONTROL BLOCK'\n         IKJPSCB\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFLTAAN": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&LABEL   DFLTAAN &PREFIX=ANSW,         PREFIX TO ALL VARIABLES .........\n               &DSECT=,               IF 'NO' THEN NO DSECT ............\n               &EQU=,                 IF NO, SUPPRESS EQU GENERATION....\n               &LIST=                 IF 'NO' THEN PRINT NOGEN\n         LCLC  &A,&B,&C,&D\n         LCLA  &E\n         PUSH  PRINT\n&D       SETC  '&LIST'\n         @LIST &D\n&A       SETC  '&PREFIX'\n&B       SETC  '&DSECT'\n&C       SETC  '&LABEL'\n         DSCTCARD &A,&B,&C\n&E       SETA  K'&PREFIX\n         AIF   (&E LE 4).L0\n&A       SETC  '&PREFIX'(1,4)\n.L0      ANOP\n&A.LEN   DS    Y                 OVERALL LENGTH OF DATA AREA\n&A.#DD   DS    Y                 INITIALLY 0, SET TO # OF PDE S\n&A.DDN   DS    CL8               DDNAME, LEFT JUSTIFIED\n&A.SHEL  EQU   *-&A.DDN          LENGTH OF TRUNCATED ENTRY\n&A.DSNL  DS    H                 LENGTH OF DATASET NAME\n&A.DSN   DS    CL44              DATASET NAME, LEFT JUSTIFIED\n*        DEFAULTA WILL FILL THIS AREA WITH THE RESULTS OF SUCCESFUL\n*        ALLOCATIONS. THE NUMBER OF ENTRIES IN THE LIST WILL BE SET\n*        INTO THE SECOND HALFWORD OF THE AREA.\n&A.ENTL  EQU   *-&A.DDN          LENGTH OF SINGLE ENTRY\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFLTAD": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x002\\x002\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 50, "newlines": 50, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&LABEL   DFLTAD &PREFIX=NWDS,        PREFIX FOR ALL VARIABLES .......  .\n               &DSECT=,              'NO' MEANS NO DSECT ............  .\n               &LIST=,               'NO' MEANS PRINT NOGEN..........  .\n               &EQU=                 'NO' SUPPRESSES EQU'S\n         LCLC  &A,&B,&C,&D\n         LCLB  &E\n         LCLA  &F\n         PUSH  PRINT\n&D       SETC  '&LIST'\n         @LIST &D\n&A       SETC  '&PREFIX'\n&B       SETC  '&DSECT'\n&C       SETC  '&LABEL'\n         DSCTCARD &A,&B,&C\n&F       SETA  K'&PREFIX\n         AIF   (&F LE 4).L0\n&A       SETC  '&PREFIX'(1,4)\n.L0      ANOP\n&E       SETB  0\n         AIF   ('&EQU' EQ '' OR '&EQU' EQ 'NO').L1\n         MNOTE 4,'EQU OPERAND MUST BE ''NO'' OR NULL, SET TO NULL'\n         AGO   .L2\n.L1      AIF   ('&EQU' EQ '').L2\n&E       SETB  1\n.L2      ANOP\n&A.BLK   DS    F      AVERAGE BLOCKSIZE\n&A.PQTY  DS    F      PRIMARY QUANTITY, HIGH ORDER BYTE MUST BE 0\n&A.SQTY  DS    F      SECONDARY QUANTITY, DITTO\n&A.DQTY  DS    F      DIRECTORY QUANTITY, DITTO\n&A.FLG1  DS    X      ALLOCATION\n         AIF   (&E).F1\n&A.ABL   EQU   X'40'  UNITS IN AVERAGE BLOCKSIZE\n&A.TRK   EQU   X'80'  TRACKS\n&A.CYL   EQU   X'C0'  CYLINDERS\n&A.RLSE  EQU   X'10'  RLSE NEEDED\n&A.PERM  EQU   X'08'  DON'T FREE UNTIL EXPLICITLY REQUESTED\n&A.DUMM  EQU   X'04'  DUMMY, DUMMY!\n&A.ATTR  EQU   X'02'  ATTRIBUTE LIST SUPPLIED\n.F1      ANOP\n&A.FLG2  DS    X      DSORG\n         AIF   (&E).F2\n&A.IS    EQU   X'80'  ISAM\n&A.PS    EQU   X'40'  SEQUENTIAL\n&A.DA    EQU   X'20'  DIRECT\n&A.PO    EQU   X'02'  PARTITIONED\n&A.UN    EQU   X'01'  UNMOVEABLE\n.F2      ANOP\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFLTAP": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00?\\x00?\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 63, "newlines": 63, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&LABEL   DFLTAP &PREFIX=DFLT,      PREFIX TO ALL VARIABLE NAMES ........\n               &DSECT=,           IF 'NO' , THEN NO DSECT     ..........\n               &EQU=,            INCLUDE EQU'S FOR FLAG FIELDS    ......\n               &LIST=             IF 'NO' PRINT NOGEN\n         LCLB  &E\n         LCLA  &F\n         LCLC  &A,&B,&C,&D\n         PUSH  PRINT\n&D       SETC  '&LIST'\n         @LIST &D\n&A       SETC  '&PREFIX'\n&B       SETC  '&DSECT'\n&C       SETC  '&LABEL'\n         DSCTCARD &A,&B,&C\n&F       SETA     K'&PREFIX\n         AIF      (&F LE 4).L0\n&A       SETC     '&PREFIX'(1,4)\n.L0      ANOP\n&E       SETB  0\n         AIF   ('&EQU' EQ '' OR '&EQU' EQ 'NO').L1\n         MNOTE 4,'EQU OPERAND MUST BE ''NO'' OR NULL, SET TO NULL'\n         AGO   .L2\n.L1      AIF   ('&EQU' EQ '').L2\n&E       SETB  1\n.L2      ANOP\n&A.PDE   DS    A                  1ST PARM DESCRIPTOR ENTRY\n&A.DESC  DS    CL8                DESCRIPTION FOR PROMPTING MESSAGES\n&A.MEM   DS    CL8                MEMBER NAME IF REQ. AND NONE IN PDE\n&A.CPPL  DS    A                  COMMAND PROC PARM LIST\n&A.FLG1  DS    X\n         AIF   (&E).F2\n&A.ONLY  EQU   X'80'              ACCEPT ONLY FROM LIST\n&A.PO    EQU   X'40'              MUST BE PARTITIONED\n&A.PS    EQU   X'20'              MUST BE SEQUENTIAL\n&A.MEMB  EQU   X'10'              MUST BE A MEMBER\n&A.DDND  EQU   X'08'              DISPLAY DDNAMES TO USER\n&A.NEWK  EQU   X'02'              DISP=NEW ALLOWED.\n&A.DSNR  EQU   X'01'              RETURN DSNAMES WITH DDNAMES\n.F2      ANOP\n&A.FLG2  DS    X                  STATUS\n         AIF   (&E).F3\n&A.SHR   EQU   X'08'\n&A.NEW   EQU   X'04'\n&A.MOD   EQU   X'02'\n&A.OLD   EQU   X'01'\n.F3      ANOP\n&A.FLG3  DS    X                  NORMAL DISPOSITION\n         AIF   (&E).F4\n&A.KEEP  EQU   X'08'\n&A.DEL   EQU   X'04'\n&A.CAT   EQU   X'02'\n&A.UNCT  EQU   X'01'\n.F4      ANOP\n&A.FLG4  DS    X                  ABNORMAL DISPOSITION\n&A.QUAL  DS    A                  POINTER TO QUALIFIER LIST\n&A.ANSW  DS    A                  POINT TO ANSWER AREA\n*        FIRST HALF WORD OF ANSWER AREA MUST CONTAIN IT'S TOTAL LENGTH\n*        IN BYTES. SECOND HALF WORD MUST BE ZERO'\n&A.DCB   DS    A                  AREA WITH SPACE/DSORG INFO\n*        SET TO ZERO IF NO SPACE/DSORG INFORMATION.\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFLTAPDE": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00-\\x00-\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&LABEL   DFLTAPDE &PREFIX=PDE,           PREFIX TO ALL NAMES ...........\n               &DSECT=,                  NO SUPPRESSES DSECT CARD ......\n               &LIST=,                   NO SUPPRESS FORCES PRINT NOGEN.\n               &EQU=                     NO SUPPRESSES EQU'S\n         LCLC  &A,&B,&C,&D\n         LCLB  &E\n         LCLA  &F\n         PUSH  PRINT\n&D       SETC  '&LIST'\n         @LIST &D\n&A       SETC  '&PREFIX'\n&B       SETC  '&DSECT'\n&C       SETC  '&LABEL'\n         DSCTCARD &A,&B,&C\n&F       SETA  K'&PREFIX\n         AIF   (&F LE 4).L0\n&A       SETC  '&PREFIX'(1,4)\n.L0      ANOP\n&E       SETB  0\n         AIF   ('&EQU' EQ '' OR '&EQU' EQ 'NO').L1\n         MNOTE 4,'EQU OPERAND MUST BE ''NO'' OR NULL, SET TO NULL'\n         AGO   .L2\n.L1      AIF   ('&EQU' EQ '').L2\n&E       SETB  1\n.L2      ANOP\n&A.DSN   DS    A                  POINT TO DSN\n&A.DSNL  DS    H                  LENGTH OF DSNAME\n&A.FLG1  DS    X\n&A.FIL1  DS    X\n&A.MEMB  DS    A                  POINT TO MEMBER NAME\n&A.MEML  DS    H                  LENGTH OF MEMBER NAME\n&A.FLG2  DS    X\n&A.FIL2  DS    X\n&A.PASS  DS    A                  POINT TO PASSWORD\n&A.PASL  DS    H                  LENGTH OF PASSWORD\n&A.FLG3  DS    X\n&A.FIL3  DS    X\n         AIF   (&E).L3\n&A.PRES  EQU   X'80'              FIELD IS PRESENT\n&A.APST  EQU   X'40'              NAME IN APOSTROPHES\n.L3      ANOP\n&A.NEXT  DS    A                  POINT TO NEXT PDE\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFLTAQ": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00/\\x00/\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 47, "newlines": 47, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&LABEL   DFLTAQ &PREFIX=QUAL,          PREFIX TO ALL VARIABLE NAMES ....\n               &LIST=,                 'NO' SUPPRESSES LISTING..........\n               &DSECT=,                'NO' SUPPRESSES DSECT ...........\n               &EQU=,                  'NO' SUPPRESSES EQU'S           *\n               &QUAL=\n         LCLC  &A,&B,&C,&D\n         LCLB  &E\n         LCLC  &LEN,&NAME\n         LCLA  &F\n         LCLA  &FLAG,&I,&L\n         PUSH  PRINT\n&D       SETC  '&LIST'\n         @LIST &D\n&A       SETC  '&PREFIX'\n&B       SETC  '&DSECT'\n&C       SETC  '&LABEL'\n         DSCTCARD &A,&B,&C\n&F       SETA  K'&PREFIX\n         AIF   (&F LE 4).L0\n&A       SETC  '&PREFIX'(1,4)\n.L0      ANOP\n&LEN     SETC  '&A.LEN'\n&NAME    SETC  '&A.NAME'\n         AIF   (N'&QUAL NE 0).DOQUAL\n&A.LEN   DS    H                  LENGTH OF NAME\n*  MARK LAST QUALIFIER IN LIST BY SETTING HIGH ORDER BIT OF\n*  LENGTH FIELD .\n&A.NAME  DS    CL8                NAME, LEFT JUSTIFIED, PADDED\n.POP     POP   PRINT\n         MEXIT ,\n.DOQUAL  ANOP\n&I       SETA  &I+1\n&L       SETA  K'&QUAL(&I)\n         AIF   (&I LT N'&QUAL).DOQUAL1\n&FLAG    SETA  1\n.DOQUAL1 ANOP  ,\n&LEN     DC    0H'0',YL.1(&FLAG.),YL.15(&L.)\n&NAME    DC    CL8'&QUAL(&I).'    NAME, LEFT JUSTIFIED, PADDED   *TEMP*\n         AGO   .PADTMP                                           *TEMP*\n&NAME    DC    C'&QUAL(&I).'      NAME, LEFT JUSTIFIED\n.PADTMP  ANOP  ,                                                 *TEMP*\n&LEN     SETC  ''\n&NAME    SETC  ''\n         AIF   (&I LT N'&QUAL).DOQUAL\n         POP   PRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFLTARTC": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00=\\x00=\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 61, "newlines": 61, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n      DFLTARTC &PFX=DFRC,&LOCATE=LCRC,&OBTAIN=OBRC,&DAIR=DRRC\n         LCLC  &PF\n         AIF   (T'&PFX EQ 'O').NODEF\n&PF      SETC  '&PFX'\n&PF.OK   EQUGN 0,INC=4                  NORMAL RETURN\n&PF.DAIR EQUGN ,                        DAIR ERROR\n&PF.SHRT EQUGN ,                        ANSWER AREA TOO SHORT\n&PF.NONE EQUGN ,                        NO MATCH FOUND\n&PF.MEM  EQUGN ,INC=0                   MEMBER NAME REQUIRED\n&PF.POPS EQUGN ,INC=4                   DSORG NOT PO/PS\n&PF.ANSW EQUGN ,                        INVALID ANSWER AREA\n&PF.LCOB EQUGN ,                        LOCATE OR OBTAIN ERROR\n&PF.NODC EQUGN ,                        NO DCB FOR NEW DATA SET\n&PF.PTLN EQUGN ,                        PUTLINE ERROR\n&PF.PTGT EQUGN ,                        PUTGET ERROR\n&PF.CTLG EQUGN ,                        CATALOG ERROR\n         SPACE 2\n.NODEF   AIF   (T'&LOCATE EQ 'O').NOLOC\n&PF      SETC  '&LOCATE'\n&PF.OK   EQUGN 0,INC=4                  NORMAL RETURN\n&PF.NOCV EQUGN ,                        CVOL NOT MOUNTED\n&PF.CVOL EQUGN INC=0                    THE LAST ENTRY FOUND AS A CVOL\n&PF.NONE EQUGN INC=4                    LEVEL NOT FOUND (SEE R0)\n&PF.INDX EQUGN ,                        FINAL LEVEL IS INDEX OR ALIAS\n&PF.DSPE EQUGN ,                        DSPE FOUND BEFORE LAST LEVEL\n&PF.SNTX EQUGN ,                        SYNTAX ERROR IN NAME\n&PF.IO   EQUGN ,                        I/O ERROR\n&PF.TTR  EQUGN ,                        INVALID TTR (OUT OF EXTENT)\n&PF.WORK EQUGN ,                        INVALID WORK AREA ADDRESS\n         EQUGN ,                        RESERVED\n         EQUGN ,                        RESERVED\n         EQUGN ,                        RESERVED\n&PF.INVP EQUGN ,                        INVALID CAMLST\n         SPACE 2\n.NOLOC   AIF   (T'&OBTAIN EQ 'O').NOOBT\n&PF      SETC  '&OBTAIN'\n&PF.OK   EQUGN 0,INC=4                  NORMAL RETURN\n&PF.NMNT EQUGN ,                        VOLUME NOT MOUNTED\n&PF.NFND EQUGN ,                        DSCB1 \u00ac FOUND | DSCB4 \u00ac FOUND\n&PF.IO   EQUGN ,                        PERMANENT I/O ERROR\n&PF.WORK EQUGN ,                        INVALID WORKAREA POINTER\n&PF.CCHH EQUGN ,                        CCHH NOT IN VTOC (SEEK MODE)\n         SPACE 2\n.NOOBT   AIF   (T'&DAIR EQ 'O').NODAIR\n&PF      SETC  '&DAIR'\n&PF.OK   EQUGN 0,INC=4                  NORMAL RETURN\n&PF.INVP EQUGN ,                        INVALID PARAMETER LIST\n&PF.CTLG EQUGN ,                        CATALOG ERROR - CODE IS IN DARC\n&PF.DYNA EQUGN ,                        SVC 99 ERROR -  CODE IS IN DARC\n&PF.TIOT EQUGN ,                        NO TIOT ENTRIES AVAILABLE\n&PF.DDNM EQUGN ,                        REQUESTED DDNAME NOT AVAILABLE\n&PF.CONC EQUGN ,                        REQUESTED DSNAME IN CONCAT.\n&PF.NOTA EQUGN ,                        REQUESTED LIST/DS NOT ALLOCATED\n&PF.NEW  EQUGN ,                        DS STATUS PROHIBITS DISP=NEW\n&PF.CIR  EQUGN ,                        ERROR IN IKJEHCIR\n&PF.ROOM EQUGN ,                        QUALIFIER RETURN AREA EXHAUSTED\n&PF.NONE EQUGN ,                        NO VOLSER GIVEN FOR OLD DS.\n&PF.STAE EQUGN ,                        ABEND IN DAIR - SET BY STAE XIT\n&PF.EXIT EQUGN ,                        REQUEST DENIED BY INSTALLATION\n.NODAIR  MEND  ,\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSCTCARD": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x12\\x00\\x12\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n         DSCTCARD &PREFIX,&DSECT,&NAME\n.* IF DSECT=NO, DO NOT CREATE DSECT CARD\n.* ELSE IF NAME NOT NULL THEN DSECT NAME IS 'NAME'\n.* ELSE DSECT NAME IS 'PREFIX.DSCT'\n         LCLC  &A\n&A       SETC  '&PREFIX'\n         AIF   ('&DSECT' NE 'NO').L1\n         MEXIT\n.L1      AIF   (K'&PREFIX LE 4).L2\n         MNOTE 12,'PREFIX OPERAND TRUNCATED TO FOUR CHARACTERS'\n&A       SETC  '&PREFIX'(1,4)\n.L2      AIF   ('&NAME' EQ '').L3\n&NAME    DSECT\n         MEXIT\n.L3      ANOP\n&A.DSCT  DSECT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ENDM": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00U\\x00U\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 85, "newlines": 85, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&L       ENDM  &DUMMY,&DISP=FREEMAIN,&PFX=SAVE,&NEXT=,&RC=,&RC1=\n.*\n.*             THIS MACRO WAS WRITTEN BY SHMUEL METZ\n.*                                       COMPUTER CENTER\n.*                                       TECHNION,\n.*                                       ISRAEL INSTITUTE OF TECHNOLOGY\n.*                                       TECHNION CITY, HAIFA\n.*                                       ISRAEL\n.*\n.*             IT IS NOT TO BE DISTRIBUTED WITHOUT EXPLICIT PERMISSION.\n.*\n.*             PERMISSION IS GRANTED TO GERHARD POSTPISCHIL\n.*                                      AMS COMPUTER CENTER\n.*\n.*                                      THOMAS A. LITTLE\n.*                                      UNIVERSITY OF CHICAGO\n.*\n.*                                      UNIVERSITY OF WATERLOO\n.*\n.*                                      SHARE,\n.*                                       ALL WORKING GROUPS AND\n.*                                       COMITTEES THEREOF.\n.*\n.*             ANYONE MAKING ENHANCEMENTS IS REQUEST TO FORWARD THEM\n.*             TO ME, IDENTIFIED BY \"** XXX **' IN COLUMN 63,\n.*             WHERE XXX IS THE SHARE INSTALLATION CODE.\n.*\n         LCLC  &LB,&SV\n&LB      SETC  '&L'\n&SV      SETC  '&PFX'\n         AIF   ('&DISP' EQ 'RETAIN').RETAIN\n&L       L     R0,&SV.SPLN\n         LR    R1,R13\n         L     R13,&SV.13\n&LB      SETC  ''\n.RETAIN  AIF   (T'&NEXT NE 'O').XCTL\n         AIF   (T'&RC EQ 'O').T1RC1\n         AIF   ('&RC'(1,1) EQ '(').SVRC\n         AIF   (T'&RC EQ 'N').T1RC1\n         MNOTE 12,'INVALID RETURN CODE &RC'\n         MEXIT\n.SVRC    ANOP  ,\n&LB      ST    &RC(1),&SV.15\n&LB      SETC  ''\n.T1RC1   AIF   (T'&RC1 EQ 'O').EXIT\n         AIF   ('&RC1'(1,1) EQ '(').SVRC1\n         AIF   (T'&RC1 EQ 'N').EXIT\n         MNOTE 12,'INVALID SECONDARY RETURN CODE &RC1'\n         MEXIT\n.SVRC1   ANOP  ,\n&LB      ST    &RC1(1),&SV.1\n&LB      SETC  ''\n         AGO   .EXIT\n.XCTL    AIF   ('&DISP' NE 'FREEMAIN').XCTL2\n&LB   FREEMAIN R,LV=(0),A=(1)\n&LB      SETC  ''\n.XCTL2   ANOP  ,\n&LB      LA    R15,X@&SYSNDX\n         LM    R0,R12,&SV.0\n         MVI   &SV.14,X'FF' .           FLAG AS LAST SAVE AREA\n         XCTL  SF=(E,(15))\nX@&SYSNDX XCTL EP=&NEXT,SF=L\n         MEXIT\n.EXIT    AIF   ('&DISP' NE 'FREEMAIN').NOFM\n&LB   FREEMAIN R,LV=(0),A=(1)\n&LB      SETC  ''\n.NOFM    ANOP  ,\n&LB      LM    R14,R12,&SV.14\n         MVI   &SV.14,X'FF' .           FLAG AS LAST SAVE AREA\n         AIF   (T'&RC NE 'N').T2RC1\n         AIF   ('&RC'(1,1) EQ '(').T2RC1                          *TSM*\n         AIF   ('&RC' EQ '0').EFES\n         LA    R15,&RC\n.T2RC1   AIF   (T'&RC1 NE 'N').BR\n         AIF   ('&RC1' EQ '0').EFES1\n         LA    R1,&RC1\n.BR      BR    R14\n         MEXIT\n.EFES    SR    R15,R15\n         AGO   .T2RC1\n.EFES1   SR    R1,R1\n         BR    R14\n.END     MEND\n         MEXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EQUGN": {"ttr": 1040, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x15\\x00\\x15\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&L       EQUGN &V,&INC=\n         GBLA  &#,&#INC\n         GBLB  &#NOSP,&#NOEQU\n         AIF   (T'&V NE 'N').NEXT\n&#       SETA  &V\n&#INC    SETA  4\n         AIF   (T'&INC EQ 'O').OK\n&#INC    SETA  &INC\n         AGO   .OK\n.NEXT    AIF   (T'&INC EQ 'O').OK\n&#INC    SETA  &INC\n.OK      AIF   (T'&L EQ 'O' OR &#NOEQU).NOEQU\n&L       EQU   &#\n         AIF   (&#NOSP).NOSPACE\n         SPACE 1\n.NOSPACE ANOP\n.*\n.NOEQU   ANOP\n&#       SETA  &#+&#INC\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELP": {"ttr": 1042, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\xd3\\x00\\xd3\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 211, "newlines": 211, "modlines": 0, "user": "CBT249"}, "text": ")F FUNCTION\n    A TSO COMMAND TO EXECUTE 'SCRIPTW'(NSCRIPT), A TEXT FORMATTING\n    PROGRAM.\n)X SYNTAX\n\n   SCRIPT 'TEXT DATASETNAME' 'VALUELIST'\n          NOADjust/ADjust('n')/NOCEnter/CEnter('n')\n          NOCOntinue/COntinue\n          CHannel(m)/DOwn('n')\n          FNSize('n')\n          FOrmatted/UNFOrmatted\n          LINenumber('n')\n          NOMArk/MArk\n          NONUmber/NUmber/NUmber('n')\n          OFfline/ONline/TErminal\n          PAge('m')/PAge('m':'n')/NOSIngle/SIngle\n          ONEPass/TWOPass/PAsses('n')\n          NOQUiet/QUiet\n          RMSIze('n')\n          SCREen/NOSCREen\n          SEQColumn('n')\n          SREference('m')/SRLength('n')\n          NOSTATistics/STATistics\n          NOSTop/STop\n          TMargin('n')\n          NOTRanslate/TRanslate\n          UPper/NOUPper\n          WAit/NOWAit\n\n\n  REQUIRED - 'TEXT DATASETNAME', MUST INCLUDE THE QUALIFIER\n  DEFAULTS - NOADJUST,NOCONTINUE,CHANNEL(1),DOWN(64),FORMATTED,\n             LINUMBER(0),NOMARK,NONUMBER,PAGE(1:32K),PASSES(1),NOQUIET,\n             NOREVERSE,SEQCOLUMN(240),SREFERENCE(200),SRLENGTH(100),\n             NOSTOP,NOTRANSLATE,UPPER,WAIT\n\n             SCREEN IS THE DEFAULT IF THE TERMINAL IS A CRT, OTHERWISE\n             NOSCREEN. THE DETERMINATION IS BASED UPON THE VALUE OF\n             THE SCRSIZE OPERAND OF THE TERM COMMAND.\n  ALIAS    - SCR\n  NOTE     - IF A \"VALUELIST\" IS GIVEN, IT MUST BE ENCLOSED\n             IN SINGLE QUOTES (APOSTROPHES).\n\n)O OPERANDS\n   ANY NUMERIC VALUE WHICH IS A MULTIPLE OF 1024 MAY BE WRITTEN\n   IN THE FORM nK. IF A NAME BEGINS WITH 'NO', THE OPERAND IS DISABLED.\n\n))NOADJUST - CAUSES ALL OUTPUT TO BE FLUSH WITH THE LEFT MARGIN.\n             DEFAULT.\n))ADJUST('n')\n           - CAUSES ALL OUTPUT TO BE OFFSET N COLUMNS, IN RANGE 0:30.\n))BMARGIN('n')\n           - SAME EFFECT AS .BM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS BM(3).\n))NOCENTER - CAUSES ALL OUTPUT TO BE FLUSH WITH THE LEFT MARGIN.\n             DEFAULT. SAME AS NOADJUST.\n))CENTER('n')\n           - CAUSES ALL OUTPUT TO BE OFFSET N COLUMNS, IN RANGE 0:30.\n             SAME AS ADJUST.\n))NOCONTINUE\n           - TERMINATE AFTER FIRST ERROR.\n))CONTINUE - CONTINUE FORMATTING AFTER ERRORS.\n))CHANNEL('n')\n           - SPECIFIES A PRINTER CARRIAGE TAPE CHANNEL FROM 1 TO 9.\n             DEFAULT VALUE IS 1.\n))DEBUG    - FOR SYSTEMS USE ONLY.\n))DOWN('n')\n           - SPECIFIES THE NUMBER OF SPACES TO SKIP TO ARRIVE AT THE\n             TOP OF A NEW PAGE, AFTER SKIPPING TO THE CHANNEL\n             SPECIFIED IN CHANNEL('n').\n))FMARGIN('n')\n           - SAME EFFECT AS .FM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS FM(1).\n))FNSize('n')\n           - 'n' IS THE MAXIMUM NUMBER OF FOOTNOTE LINES THAT MAY BE\n             OUTSTANDING AT ONE TIME, IN THE RANGE 1:1024.\n             DEFAULT IS FNS(200).\n))FORMATTED\n           - SCRIPT FORMATTING TAKES PLACE. DEFAULT.\n))UNFORMATTED\n           - THE FILE IS PRINTED ALONG WITH ALL CONTROL LINES.\n             NO FORMATTING TAKES PLACE.\n))HMARGIN('n')\n           - SAME EFFECT AS .HM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS HM(1).\n))LINENUMBER('n')\n           - CAUSES LINE NUMBER OF RAW TEXT DATA TO BE DISPLAYED\n             ALONGSIDE FORMATTED TEXT, STARTING IN OUTPUT COLUMN 'n' OF\n             THE OUTPUT LINE, IF THAT PORTION OF THE OUTPUT IS BLANK.\n             'n' MAY BE 1:125.\n))LLENGTH('n')\n           - SAME EFFECT AS .LL n. 'n' MUST BE IN THE RANGE 1:120.\n             DEFAULT IS LL(60).\n))NOMARK   - DOES NOT MARK BOUNDARIES OF ORIGINAL INPUT. DEFAULT.\n))MARK     - MARKS THE BEGINNING OF EACH LINE OF ORIGINAL TEXT WITH\n             AN UNDERSCORE.\n))NONUMBER - SUPPRESSES THE FILE INFORMATION DISPLAY. DEFAULT.\n))NUMBER('n')\n           - CAUSES THE LINE NUMBER,FILENAME AND MEMBERNAME OF THE\n             ORIGINAL DATA TO DISPLAYED ALONGSIDE THE FORMATTED OUTPUT.\n             THE FORMATTED OUTPUT. DEFAULT J=0 DISABLES THIS FEATURE.\n))OFFLINE  - FORMATS OUTPUT FOR AN OFF-LINE DEVICE, RECOMMENDED FOR\n             THE PROOF READING STAGE.\n))ONLINE     FORMAT FOR ON-LINE OUTPUT. SAME AS TERMINAL OPERAND.\n             DEFAULT.\n))ONEPASS  - SCRIPTW WILL PROCESS THE INPUT ONLY ONCE. SAME AS PAS(1).\n))PAGE('K')\n  PAGE('K':'L')\n           - STARTS PRINTING FORMATTED OUTPUT AT PAGE 'K' AND CONTINUES\n             TO PAGE 'L'. THE SECOND OPERAND, 'L', IS EQUAL TO 'K' WHEN\n             PRINTING ONLY A SINGLE PAGE. DEFAULTS ARE PAGE(1:32K).\n             SEE EXAMPLE.\n))PASSES('N')\n           - SCRIPTW WILL PROCESS THE INPUT TEXT 'N' TIMES.\n             IN RANGE 1:10, DEFAULT IS 1.\n))PLENGTH('N')\n           - SAME EFFECT AS .PL N. 'N' MUST BE IN THE RANGE 33:132.\n             DEFAULT IS 66.\n))NOQUIET  - WRITES SCRIPTW IDENTIFICATION LINE AFTER ISSUING THE\n             SCRIPT COMMAND. DEFAULT.\n))QUIET    - SUPPRESSES SCRIPTW IDENTIFICATION LINE AFTER ISSUING THE\n             SCRIPT COMMAND.\n))LR       - DO NOT REVERSE OUTPUT TEXT. SAME AS NOREVERSE. DEFAULT.\n))NOREVERSE\n           - DO NOT REVERSE OUTPUT TEXT. DEFAULT.\n))REVERSE<('N')>\n           - REVERSE ALL OUTPUT TEXT AND PAD TO THE LEFT WITH BLANKS.\n             'N', IF SPECIFIED, MUST BE IN THE RANGE 1:144, AND HAS\n             A DEFAULT OF 66. 'N', OR IT'S DEFAULT, GIVES THE LENGTH\n             OF THE LINE TO BE REVERSED: THE TEXT WILL BE TRUNCATED\n             IF IT EXCEEDS THIS LENGTH.\n))RL<('N')>\n           - REVERSE ALL OUTPUT TEXT AND PAD TO THE LEFT WITH BLANKS.\n             'N', IF SPECIFIED, MUST BE IN THE RANGE 1:144, AND HAS\n             A DEFAULT OF 66. 'N', OR IT'S DEFAULT, GIVES THE LENGTH\n             OF THE LINE TO BE REVERSED: THE TEXT WILL BE TRUNCATED\n             IF IT EXCEEDS THIS LENGTH. SAME AS REVERSE('N').\n))RMSIZE('n')\n           - 'n' IS THE MAXIMUM NUMBER OF RECORDS THAT MAY BE IN A\n             SINGLE REMOTE DEFINITION, IN THE RANGE 1:1K.\n             DEFAULT IS RMS(200).\n))SCREEN   - ONLINE OUTPUT IS FORMATTED FOR CRT.\n             OVERPRINT LINES ARE USED RATHER THAN BACKSPACE.\n))NOSCREEN - ONLINE OUTPUT IS FORMATTED FOR NON CRT TERMINALS.\n             BACKSPACES ARE USED RATHER THAN OVERPRINT LINES.\n))NOSINGLE - MULTIPLE PAGES OF OUTPUT ARE TO BE PRODUCED. DEFAULT.\n))SINGLE   - ONLY A SINGLE PAGE OF OUTPUT IS TO BE PRODUCED.\n             PAGE('N'),SINGLE IS EQUIVALENT TO PAGE('N':'N').\n))SEQCOLUMN('S')\n           - 's' SPECIFIES WHERE THE 8 COLUMN LINE SEQUENCE NUMBER IS\n             LOCATED FOR RECFM=V OR VB, in RANGE 0:240. DEFAULT IS 1.\n             SEQC(0) MEANS NO INPUT SEQUENCING.\n))SREFERENCE('n')\n           - MAXIMUM NUMBER OF ENTRIES IN SYMBOLIC REFERENCE\n             DICTIONARY, IN RANGE 1:4096. DEFAULT IS 200.\n))SRLENGTH('n')\n           - 'n' IS THE MAXIMUM LENGTH OF ANY SYMBOLIC REFERENCE NAME,\n             IN THE RANGE 4:240. DEFAULT IS 200.\n))NOST     - DO NOT STOP AT THE BOTTOM OF EACH PAGE. SAME AS NOSTOP.\n             DEFAULT.\n))ST       - PAUSE AT THE BOTTOM OF EACH PAGE. SAME AS STOP.\n             CONTINUE WITH CARRIAGE RETURN.\n))NOSTATISTICS\n           - NO STATISTICS ON STORAGE AND CONTROL WORD USAGE ARE TO\n             BE PRINTED ON SYSTERM. DEFAULT.\n))STATISTICS\n           - STATISTICS ON STORAGE AND CONTROL WORD USAGE ARE TO BE\n             PRINTED ON SYSTERM.\n))NOSTOP   - DO NOT STOP AT THE BOTTOM OF EACH PAGE. DEFAULT.\n))STOP     - PAUSE AT THE BOTTOM OF EACH PAGE.\n             CONTINUE WITH CARRIAGE RETURN.\n))TERMINAL - FORMAT FOR ON-LINE OUTPUT. SAME AS ONLINE OPERAND.\n             DEFAULT.\n))TMARGIN('n')\n           - SAME EFFECT AS .TM n. 'n' MUST BE IN THE RANGE 0:33.\n             DEFAULT IS TM(5).\n))NOTRANSLATE\n           - SUPPRESSS TRANSLATION FROM LOWER CASE TO UPPER CASE.\n             DEFAULT.\n))TRANSLATE\n           - CAUSES TRANSLATION FROM LOWER CASE TO UPPER CASE.\n))TWOPASS  - SCRIPTW WILL PROCESS THE INPUT TWICE. SAME AS PAS(2).\n))UPPER    - CAUSES ALL SET REFERENCE SYMBOLS TO BE CONVERTED TO\n             UPPER CASE BEFORE SYMBOL TABLE LOOKUP. DEFAULT.\n))NOUPPER    CAUSES ALL SET REFERENCE SYMBOLS TO BE LOOKED UP ASIS,\n             WITHOUT BEING CONVERTED FIRST TO UPPER CASE.\n))VALUELIST\n           - THE OPTIONAL SECOND POSITIONAL PARAMETER IS USED TO GIVE\n             DEFAULT VALUES TO SET REFERENCE SYMBOLS. THE SYNTAX IS\n             '+name=value +name=value &&name=value', WHERE THE\n             APOSTROPHES ARE MANDATORY AND PLUS (+) MAY BE FREELY\n             INTERCHANGED WITH AMPERSANDS (&&).\n))WAIT     - PAUSE BEFORE STARTING TO PRINT TO ALLOW PAGE ADJUSTMENT.\n             DEFAULT.\n))NOWAIT   - DO NOT PAUSE BEFORE STARTING PRINTING.\n))EXAMPLE\n  SCRIPT LETTER.TEXT SEQC(1) ON CO\n\n         MEANS FORMAT DATASET LETTER.TEXT FOR ONLINE OUTPUT.\n         LINE SEQUENCE NUMBERS OF RAW INPUT DATA ARE IN COLUMNS\n         1-8 (AS IS USUAL FOR A TEXT DATASET) AND CONTINUE\n         PROCESSING IN CASE OF ERRORS.\n\n   SCR    LETTER.TEXT '+SHAKRAN=HENRYK' PAGE(3:7)\n\n          MEANS FORMAT DATASET LETTER.TEXT AND PRINT PAGES 3-7.\n          THE SET REFERENCE SYMBOL &SHAKRAN IS SET TO THE VALUE HENRYK.\n\n   SCR    LETTER.TEXT PAGE(4:4)\n\n          MEANS FORMAT DATASET LETTER.TEXT AND PRINT ONLY PAGE 4.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LAT": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x000\\x000\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&NM      LAT   &R,&ADDR,&BZ,&BNZ,&LA=\n.*             THIS MACRO IS THE PROPERTY OF GERHARD POSTPISCHIL\n.*             IT IS PART OF EXHIBIT, AND UNAUTHORIZED USERS\n.*             WILL BE PERSECUTED BY MAD MAN METZ:\n.*             YOU WUZ WARNED!\n         GBLC  &MODEL\n&NM      LODESTAR                                             ** TSM **\n         AIF   ('&MODEL' EQ '370').A370\n.DO360   ANOP\n&NM      LODE  &R,&ADDR,OP=L LOAD ADDRESS\n&NM      LODE  &R,0(&R),OP=LA .  CLEAR HIGH BYTE AND LABEL\n         AIF   ('&LA' NE 'FW').LTR                                *TSM*\n&NM      LODENAME                                                 *TSM*\n         AGO   .LTR                                               *TSM*\n         AIF   ('&BZ' EQ '' AND '&BNZ' EQ '').MEX\n.LTR     LTR   &R,&R              TEST FOR ZERO                   *TSM*\n         AGO   .BRT\n.A370    AIF   ('&LA' EQ '').ICM370                           ** TSM **\n         AIF   ('&LA' EQ 'RX').ICMRX                          ** TSM **\n         AIF   ('&LA' EQ '0').ICMSR                           ** TSM **\n         AIF   ('&LA' EQ 'FW').ICMFW                              *TSM*\n         MNOTE 8,'&&LA=&LA INVALID - MUST BE RX, 0, OR FW'        *TSM*\n         MNOTE 8,'&&LA=RX ASSUMED'                                *TSM*\n.ICMRX   ANOP                                                 ** TSM **\n&NM      LODE  &R,&ADDR,OP=LA        OFFSET(X,BASE)           ** TSM **\n         ICM   &R,7,1(&R)                                     ** TSM **\n         AGO   .BRT                                           ** TSM **\n.ICMSR   ANOP                                                 ** TSM **\n&NM      LODE  &R,0                                           ** TSM **\n.ICM370  ANOP                                                 ** TSM **\n&NM      LODENAME                                             ** TSM **\n         ICM   &R,7,1+&ADDR .    LOAD ADDRESS\n         AGO   .BRT                                               *TSM*\n.ICMFW   ANOP                                                     *TSM*\n&NM      LODENAME                                                 *TSM*\n         ICM   &R,15,&ADDR         LOAD FULLWORD                  *TSM*\n.BRT     AIF   ('&BZ' EQ '').BRNT\n         AIF   ('&BZ'(1,1) EQ '(').BRZ\n         BZ    &BZ .         BRANCH IF ZERO\n         AGO   .BRNT\n.BRZ     BZR   &BZ(1) .      BRANCH IF ZERO\n.BRNT    AIF   ('&BNZ' EQ '').MEX\n         AIF   ('&BNZ'(1,1) EQ '(').BRNZ\n         BNZ   &BNZ .        BRANCH IF NOT ZERO\n.MEX     MEXIT\n.BRNZ    BNZR  &BNZ(1) .     BRANCH IF NOT ZERO\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LODE": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00(\\x00(\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&MINE    LODE  &BUCKET,&HONEY,&OP=LA,&OPR=LR,&REV=                *TSM*\n.*             1ST PARAMETER IS A REGISTER #\n.*             2ND PARAMETER IS AN RX EXPRESSION OR (REG)\n.*             OP            IS LA, L, LH, OR N                   *TSM*\n.*             OPR           IS LR OR NR                          *TSM*\n.*             REV=YES       FOR &OPR, REVERSE REGISTERS          *GPP*\n         GBLB  &SLANDER\n         LCLC  &REG,&LIBEL\n&REG     SETC  '&BUCKET'\n         AIF   ('&REG'(1,1) NE 'R').NOSY\n&REG     SETC  '&BUCKET'(2,K'&BUCKET-1)\n.NOSY    AIF   (&SLANDER).NOLAB\n&LIBEL   SETC  '&MINE'\n.NOLAB   AIF   ('&HONEY'(1,1) NE '(').LA\n         AIF   ('&HONEY'(2,1) EQ 'R').SYMBLR\n         AIF   ('&HONEY' EQ '(&REG)').NO\n         AGO   .LR\n.SYMBLR  AIF   ('&HONEY' EQ '(R&REG)').NO\n         AIF   ('&REV' NE 'YES').NOREV                      *TSM* *GPP*\n&LIBEL   &OPR  &HONEY(1),R&REG                                    *GPP*\n         AGO   .GO\n.NOREV   ANOP  ,                                                  *GPP*\n&LIBEL   &OPR  R&REG,&HONEY(1)                                    *TSM*\n         AGO   .GO\n.LR      ANOP\n         AIF   ('&REV' NE 'YES').NOREV2                     *TSM* *GPP*\n&LIBEL   &OPR  &HONEY(1),&BUCKET                                  *GPP*\n         AGO   .GO\n.NOREV2  ANOP  ,                                                  *GPP*\n&LIBEL   &OPR  &BUCKET,&HONEY(1)                                  *TSM*\n         AGO   .GO\n.LA      AIF   ('&OP' EQ 'LA' AND '&HONEY' EQ '0').SR\n&LIBEL   &OP   &BUCKET,&HONEY\n         AGO   .GO\n.SR      ANOP\n&LIBEL   XR    &BUCKET,&BUCKET\n.GO      ANOP\n&SLANDER SETB  1\n.NO      MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LODENAME": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x08\\x00\\x08\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&NM    LODENAME\n         GBLB  &SLANDER\n         AIF   (&SLANDER).MEND   SKIP IF NAME ALREADY EXPANDED\n&SLANDER SETB  1             SET ON JUST IN CASE\n         AIF   ('&NM' EQ '').MEND\n&NM      DS    0H .          DEFINE LABEL\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LODESTAR": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x06\\x00\\x06\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n       LODESTAR\n         GBLB  &SLANDER\n.*       INITIALIZE FOR SUBSEQUENT LODE NAME CALLS\n&SLANDER SETB  0\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MTITL": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00(\\x00(\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 40, "newlines": 40, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&L       MTITL &TIT,&LEN=40\n.*             THIS MACRO IS CALLED AT THE BEGGINING OF AN ASSEMBLY,\n.*             IN ORDER TO SET UP THE LEFT HALF OF THE TITLE.\n.*             IT IS INTENDED TO BE USED IN CONJUNCTION WITH STITL.\n.*             MAIN HALF OF TITLE IS PADDED TO &LEN CHARACTERS.\n.*\n.*             THIS MACRO CAN NOT BE USED WITH ASSEMBLER F.\n.*             USE F EXTENDED(FROM OS/VS), G WITH LSETC=255, OR H.\n         GBLC  &MTITLE\n         LCLA  &I,&LN\n&I       SETA  1\n         AIF   ('&TIT'(1,1) NE '''' OR '&TIT'(K'&TIT,1) NE '''').DEL\n.LOOP    AIF   (&I GE K'&TIT-1).ENDLOOP\n         AIF   (&LN GE &LEN).TOOBIG\n&I       SETA  &I+1\n&LN      SETA  &LN+1\n         AIF   ('&TIT'(&I,1) EQ '''' OR '&TIT'(&I,1) EQ '&&').SPECIAL\n&MTITLE  SETC  '&MTITLE'.'&TIT'(&I,1)\n         AGO   .LOOP\n.*\n.DEL     MNOTE 4,'TITLE NOT DELIMITED BY \"''\" - IGNORED'\n&MTITLE  SETC  'LEARN TO PUT QUOUTES AROUND THINGS'\n.*\n.SPECIAL AIF   (&I EQ K'&TIT).NOTPAIR\n         AIF   ('&TIT'(&I,1) NE '&TIT'(&I+1,1)).NOTPAIR\n&MTITLE  SETC  '&MTITLE'.'&TIT'(&I,2)\n&I       SETA  &I+1\n         AGO   .LOOP\n.*\n.NOTPAIR MNOTE 4,' CHARACTER \"''\" OR \"&&\" NOT PAIRED'\n&MTITLE  SETC  '&MTITLE'.(2)'&TIT'(&I,1)\n         AGO   .LOOP\n.*\n.TOOBIG  MNOTE 4,'TITLE LONGER THAN &LEN - EXCESS TRUNCATED'\n         MEXIT\n.*\n.ENDLOOP AIF   (&LN EQ &LEN).END\n&MTITLE  SETC  '&MTITLE'.(&LEN-&LN)' '\n.END     MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NOTES": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00*\\x00*\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "CBT249"}, "text": "***   START OF 'NOTES' IN 'SCRIPT.TSO'\n***\n*        WE THANK THE AUTHOR FOR PASSING ON THIS TSO PROMPTER\n*        FOR 'SCRIPT'.\n*\n*        MEMBER 'SCRIPT' OF THIS FILE IS THE TSO INTERFACE\n*        ROUTINE PROPER.  TO ASSEMBLE IT REQUIRES ASSEMBLER\n*        (XF) WITH SYSLIB POINTING TO 'SCRIPT.TSO' AND\n*        THE IBM MACROS IN 'SYS1.TSOMAC'.\n*\n*        THE 'SCRIPT' ROUTINE LINKS TO ROUTINE 'DEFAULTA'\n*        FOR DYNAMIC FILE ALLOCATIONS.  THIS ROUTINE MUST\n*        ALSO BE ASSEMBLED IN THE SAME MANNER AS 'SCRIPT'.\n*\n*        MEMBER NAME 'HELP' OF 'SCRIPT.TSO' IS A SUGGESTED\n*        FILE FOR HELP UNDER TSO.\n*\n*        IT IS NO FAULT OF THE AUTHOR THAT THIS INTERFACE ROUTINE\n*        HAS BECOME OUT OF DATE.  IT IS ENTIRELY DUE TO CHANGES\n*        AT WATERLOO THAT THEY COULD NOT HAVE FORSEEN.  SINCE\n*        THE UNIVERSITY OF WATERLOO IS NOT A TSO INSTALLATION\n*        IS WAS DECIDED NOT TO ATTEMPT TO UPDATE SOMETHING WE\n*        COULD NOT THEN TEST, BUT WE FELT OBLIGATED TO POINT\n*        OUT AREAS OF CHANGE --\n*\n*        'WORKSIZE=' IS NO LONGER A RECOGNIZED PARM.\n*        'SREFERENCE=' IS NO LONGER A RECOGNIZED PARM.\n*\n*        'MEMO' OPTION NOT SUPPORTED BY INTERFACE.\n*\n*        MODIFICATIONS BY JACQUES BASTIEN  --  OCTOBER 11, 1977\n*        1)  MODS TO MEMBER 'SCRIPT' TO USE MORE EFFICIENTLY\n*            THE ALLOCATION (DEFAULTA) PROGRAM.  ALL DATASETS\n*            ARE NOW ALLOCATED THROUGH 'DEFAULTA'.  INCLUDED\n*            IS ALSO A BETTER DEALLOCATION ROUTINE.\n*        2)  MODIFICATIONS TO THE ALLOCATION (DEFAULTA) PROGRAM\n*            SO IT CAN RUN WITHOUT ABENDING.\n*        3)  MODIFICATIONS TO THE MACRO 'SAVEM' TO ZERO OUT\n*            COMPLETELY A GETMAIN FIELD AND TO PUT THE GETMAIN\n*            ADDRESS IN A SAFE PLACE IN THE SAVEAREA.\n*\n***   END OF 'NOTES' IN 'SCRIPT.TSO'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPTIONDF": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x1e\\x00\\x1e\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "CBT249"}, "text": "         GBLC  &CPU\n         GBLC  &LOCAL\n         GBLC  &MODEL\n         GBLC  &SYSTEM\n&LOCAL   SETC  'NO'\n&MODEL   SETC  '360'\n&SYSTEM  SETC  'MVT'\n         AIF   ('&SYSPARM' EQ '').OPTNONE\n         AIF   ('&SYSPARM' EQ 'IIH' OR '&SYSPARM' EQ 'TECH').OPTIIH\n         AIF   ('&SYSPARM' EQ 'TSM').OPTTSM\n         AIF   ('&SYSPARM' EQ 'AMS' OR '&SYSPARM' EQ 'GPP').OPTAMS\n         AIF   ('&SYSPARM' EQ 'THOM').OPTTHOM\n         AGO   .OPTNONE\n.OPTIIH  ANOP  ,\n&LOCAL   SETC  'IIH'\n         AGO   .OPTSVS\n.OPTTSM  ANOP  ,\n&LOCAL   SETC  'TSM'\n         AGO   .OPTSVS\n.OPTTHOM ANOP  ,\n&LOCAL   SETC  'THOM'\n.OPTSVS  ANOP  ,\n&SYSTEM  SETC  'SVS'\n.OPT370  ANOP  ,\n&MODEL   SETC  '370'\n         AGO   .OPTNONE\n.OPTAMS  ANOP  ,\n&LOCAL   SETC  'AMS'\n.OPTNONE ANOP  ,\n&CPU     SETC  '&MODEL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REGEQU": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x15\\x00\\x15\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n         REGEQU\n***********************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n***********************************************************************\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAVEM": {"ttr": 1300, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\xf7\\x00\\xf7\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 247, "newlines": 247, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&L       SAVEM &DUMMY,&PFX=SAVE,&END=,&DSECT=,&PARM=R11,&SAVE=*,       *\n               &BASE=R12,&BASE2=,&ID=*,&DATE=,&SP=0\n.*\n.*             THIS MACRO WAS WRITTEN BY SHMUEL METZ\n.*                                       COMPUTER CENTER\n.*                                       TECHNION,\n.*                                       ISRAEL INSTITUTE OF TECHNOLOGY\n.*                                       TECHNION CITY, HAIFA\n.*                                       ISRAEL\n.*\n.*             IT IS NOT TO BE DISTRIBUTED WITHOUT EXPLICIT PERMISSION.\n.*\n.*             PERMISSION IS GRANTED TO GERHARD POSTPISCHIL\n.*                                      AMS COMPUTER CENTER\n.*\n.*                                      THOMAS A. LITTLE\n.*                                      UNIVERSITY OF CHICAGO\n.*\n.*                                      UNIVERSITY OF WATERLOO\n.*\n.*                                      SHARE,\n.*                                       ALL WORKING GROUPS AND\n.*                                       COMITTEES THEREOF.\n.*\n.*             ANYONE MAKING ENHANCEMENTS IS REQUEST TO FORWARD THEM\n.*             TO ME, IDENTIFIED BY \"*XXX*' IN COLUMN 67,\n.*             WHERE XXX IS THE SHARE INSTALLATION CODE.\n.*\n         COPY  OPTIONDF\n         GBLB  &SAV@REG\n         GBLB  &SAV@DYN(10)\n         GBLC  &SAV@NAM(10)\n         LCLA  &I,&J,&N\n         LCLB  &NOT1ST,&DSOPT,&EQUOPT,&BWOPT,&NWOPT,&BZOPT\n         LCLB  &OLDSAVE,&NOSAVE,&NOENTRY\n         LCLB  &ZERO\n         LCLB  &BUMASM\n         LCLC  &LAB,&B@,&N@,&LQ,&SP@,&NAME,&SECT,&C9\n         LCLC  &SV,&ENDG,&DSCTG\n&C9      SETC  '*********'\n&SECT    SETC  '&SYSECT'\n&SV      SETC  '&PFX'\n&DSCTG   SETC  '&PFX'\n&ENDG    SETC  '&PFX'.'ND'\n.*\n         AIF   ('&C9' EQ '*********').ASMVS\n         MNOTE 4,'USE THE OS/VS-DOS/VS-CMS ASSEMBLER,'\n         MNOTE 4,'OR USE ASMG WITH LSETC=80'\n&BUMASM  SETB  1\n.*\n.ASMVS   AIF   ('&DSECT' EQ '').DSGOK\n&DSCTG   SETC  '&DSECT'\n.DSGOK   AIF   ('&END' EQ '').ENDGOK\n&ENDG    SETC  '&END'\n.ENDGOK  ANOP\n.*\n&N       SETA  1\n.NXTSLOT ANOP\n&NOT1ST  SETB  (&NOT1ST OR ('&PFX' EQ '&SAV@NAM(&N)'))\n         AIF   (&NOT1ST).FND1ST\n         AIF   ('&SAV@NAM(&N)' EQ '').FNDSLOT\n&N       SETA  &N+1\n         AIF   (&N LE 10).NXTSLOT\n         MNOTE 12,'TOO MANY SAVEM DSECTS'\n         MEXIT\n.FNDSLOT ANOP\n&SAV@NAM(&N) SETC '&PFX'\n.*\n.FND1ST  AIF   ('&SYSECT' EQ '' AND T'&L EQ 'O').NOL\n&I       SETA  1\n         AIF   (N'&SYSLIST EQ 0).ENDOPT\n.*\n.LOOP    AIF   ('&SYSLIST(&I)' EQ 'NODSECT').NODSECT\n         AIF   ('&SYSLIST(&I)' EQ 'NOEQU').NOEQU\n         AIF   ('&SYSLIST(&I)' EQ 'BIGWORK').BIGWORK\n         AIF   ('&SYSLIST(&I)' EQ 'BIGZERO').BIGZERO\n         AIF   ('&SYSLIST(&I)' EQ 'NOWORK').NOWORK\n         AIF   ('&SYSLIST(&I)' EQ 'NOSAVE').NOSAVE1\n         AIF   ('&SYSLIST(&I)' EQ 'OLDSAVE').OLDSAVE\n         AIF   ('&SYSLIST(&I)' EQ 'NOENTRY').NOENTRY\n         AIF   ('&SYSLIST(&I)' EQ 'ZERO').ZERO\n         AIF   ('&SYSLIST(&I)' EQ '').NXTOPT\n         MNOTE 4,'''&SYSLIST(&I)'' IS AN INVALID OPTION - IGNORED'\n         AGO   .NXTOPT\n.*\n.NOL     MNOTE 12,'LABEL REQUIRED IF  NO  CSECT'\n         MEXIT\n.*\n.NODSECT ANOP\n&DSOPT   SETB  1\n         AGO   .NXTOPT\n.NOEQU   ANOP\n&EQUOPT  SETB  1\n         AGO   .NXTOPT\n.BIGWORK ANOP\n&BWOPT   SETB  1\n&BZOPT   SETB  1\n         AGO   .NXTOPT\n.NOWORK  ANOP\n&NWOPT   SETB  1\n         AGO   .NXTOPT\n.NOSAVE1 ANOP\n&NOSAVE  SETB  1\n         AGO   .NXTOPT\n.OLDSAVE ANOP\n&OLDSAVE SETB  1\n         AGO   .NXTOPT\n.NOENTRY ANOP\n&NOENTRY SETB  1\n         AGO   .NXTOPT\n.BIGZERO ANOP\n&BZOPT   SETB   1\n.ZERO    ANOP\n&ZERO    SETB  1\n.NXTOPT  ANOP\n&I       SETA  &I+1\n         AIF   (&I LE N'&SYSLIST).LOOP\n         AIF   (T'&L EQ 'O').CSECTOK\n.ENDOPT  AIF   ('&SYSECT' EQ '' OR '&L' EQ '&SYSECT').LABOK\n&LAB     SETC  '&L'\n         AIF   (&NOENTRY).LABOK\n         ENTRY &L\n.LABOK   AIF   ('&SYSECT' NE '').CSECTOK\n.*\n&L       CSECT\n&SECT    SETC  '&L'\n.CSECTOK ANOP\n&SAV@DYN(&N) SETB (NOT &NOSAVE)\n         DS    0H\n         AIF   (T'&BASE EQ 'O').NOBASE\n         AIF   (T'&BASE2 EQ 'O').ONEBASE\n         USING *,&BASE,&BASE2\n         AGO   .TWOBASE\n.NOBASE  USING *,R15\n         AGO   .TWOBASE\n.ONEBASE USING *,&BASE\n.TWOBASE USING &DSCTG,R13\n&B@      SETC  'B@&SYSNDX'\n&N@      SETC  'N@&SYSNDX'\n&LQ      SETC  'L'''\n&LAB     B     &B@-*(,R15)\n         DC    AL1(&LQ&N@)\n         AIF   ('&ID' NE '*').USEID\n&NAME    SETC  '&L'\n         AIF   (T'&L NE 'O').USENAME\n&NAME    SETC  '&SYSECT'\n.USENAME AIF   ('&DATE' EQ 'NO' OR &BUMASM).NODATE\n&N@      DC    C'&NAME - &SYSDATE - &SYSTIME'\n         AGO   .NAMEOK\n.NODATE  ANOP\n&N@      DC    C'&NAME'\n         AGO   .NAMEOK\n.USEID   ANOP\n         AIF   ('&ID'(1,1) NE '''').USEIDQ\n&N@      DC    C&ID\n         AGO   .NAMEOK\n.USEIDQ  ANOP\n&N@      DC    C'&ID'\n.NAMEOK  AIF   (&OLDSAVE).OLDSV\n&B@      STM   R14,R12,&SV.14\n&B@      SETC  ''\n.OLDSV   AIF   (T'&BASE EQ 'O').NOBASE2\n&B@      LR    &BASE,R15\n         AIF   (T'&BASE2 EQ 'O').NOBASE2\n         LA    &BASE2,4095\n         LA    &BASE2,1(&BASE2,&BASE)\n.NOBASE2 AIF   (NOT &OLDSAVE).NOLDSV\n         L     R15,&SV.13\n         ST    &BASE,&SV.15-&DSCTG.(,R15)\n         AIF   ('&PARM' EQ '').NOLDSV1\n         L     &PARM,&SV.1-&DSCTG.(,R15)\n         AGO   .NOLDSV1\n.NOLDSV  AIF   (&NOSAVE).NOLDSV1\n         AIF   ('&PARM' EQ '').NOPARM\n         LR    &PARM,R1\n.*\n.NOPARM  AIF   ('&SAVE' NE '*').LA\n         AIF   (NOT &BWOPT).LALEN\n         LH    R15,=Y(&ENDG-&DSCTG)\n         AGO   .NOLA\n.LA      LA    R1,&SAVE\n         XR    R15,R15\n         AGO   .NOGM\n.LALEN   LA    R14,&ENDG-&DSCTG\n.*             NOTE THAT R15 IS DESTROYED (OS/VS2) BY RMAIN\n.NOLA    AIF   ('&SP' EQ '0').GM\n         AIF   ('&MODEL' EQ '360').GM360\n         ICM   R14,8,=AL1(&SP)\n.GM    GETMAIN R,LV=(R14)\n         AGO   .NOGM\n.GM360 GETMAIN R,SP=(&SP),LV=(R14)\n.NOGM    ST    R14,&SV.SPLN-&DSCTG.(R1)\n         ST    R1,&SV.FWD\n         ST    R13,&SV.13-&DSCTG.(R1)\n         LR    R13,R1\n         AIF   (NOT &ZERO).NOLDSV1\n         AIF   (NOT &BZOPT).XC\n         AIF   ('&MODEL' NE '360').MVCL\n         LA    R0,(&ENDG-&SV.FWD)/256-1 ASM ERROR IF LEN<256\n         ORG   *-4\n         LA    R0,(&ENDG-&SV.FWD)/256   NUMBER OF SEGMENTS TO ZERO\n         LA    R1,&SV.FWD               ZERO WORK AREA\n         LA    R15,&ENDG-&SV.FWD-(&ENDG-&SV.FWD)/256\n         XC    0(256,R1),0(R1)          ZERO WORK AREA SEGMENT\n         LA    R1,256(,R1)\n         BCT   R0,*-10\n         SH    R15,=H'1'\n         BM    *+14\n         EX    R15,*+4                  ZERO PARTIAL SEGMENT\n         XC    0(0,R1),0(R1)            EXECUTED TO ZERO WORK AREA\n         AGO   .NOLDSV1\n.XC      XC    &SV.FWD(&ENDG-&SV.FWD),&SV.FWD\n         AGO   .NOLDSV1\n.MVCL    LA    R0,&SV.FWD               ZERO WORK AREA\n         LA    R1,&ENDG-&SV.FWD\n         XR    R15,R15\n         MVCL  R0,R14\n.NOLDSV1 AIF   (&NOT1ST).END\n         AIF   (&DSOPT).DSOPT\n&DSCTG   DSECT\n&SV.SPLN DS    F\n&SV.13   DS    F\n&SV.FWD  DS    A\n&SV.14   DS    A\n&SV.15   DS    A\n&SV.0    DS    A\n&SV.1    DS    A\n&SV.2    DS    A\n&SV.3    DS    A\n&SV.4    DS    A\n&SV.5    DS    A\n&SV.6    DS    A\n&SV.7    DS    A\n&SV.8    DS    A\n&SV.9    DS    A\n&SV.10   DS    A\n&SV.11   DS    A\n&SV.12   DS    A\n         AIF   (NOT &NWOPT).NOEND\n&ENDG    EQU   *\n.NOEND   ANOP\n&SECT   CSECT\n.DSOPT   AIF   (&EQUOPT OR &SAV@REG).END\n&SAV@REG SETB  1\n      REGEQU\n.END     MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCRIPT": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x06\\x9d\\x06\\x9d\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 1693, "newlines": 1693, "modlines": 0, "user": "CBT249"}, "text": "SCR      TITLE 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN'\n*\n*\n*       \"NSCRIPT\"   TSO   PROMPTER\n*\n*\n*    WRITTEN BY:           GABRIEL SILBERMAN\n*                          COMPUTER CENTER\n*                          TECHNION - ISRAEL INSTITUTE OF TECHNOLOGY\n*                          TECHNION CITY - HAIFA\n*                          ISRAEL\n         SPACE 1\n*    CORRECTED BY:         SHMUEL METZ\n*                          COMPUTER CENTER\n*                          TECHNION\n         SPACE 2\n*              THIS PROGRAM MAY NOT BE DISTRIBUTED WITHOUT PERMISSION.\n*              PERMISSION TO DISTRIBUTE IS EXPLICITLY GRANTED TO:\n         SPACE 1\n*                           GERHARD POSTPISCHIL\n*                           AMS COMPUTER CENTER\n         SPACE 1\n*                           SHARE, GUIDE, AND ALL COMMITTEES AND\n*                             WORKING GROUPS THEREOF,\n*                             INCLUDING SPLA AND ALL PROJECTS.\n         SPACE 1\n*                           UNIVERSITY OF WATERLOO\n*                           WATERLOO - ONTARIO\n*                           CANADA\n         EJECT\n         MACRO\n&NAME    RANGE &LOW,&HIGH,&ID\n&NAME    SAVEM NOSAVE,NOENTRY,BASE=,ID=&ID,DSECT=PPL\n         LCLA  &I,&HIGHN\n         LCLC  &H\n&I       SETA  K'&HIGH\n         AIF   ('&HIGH'(&I,1) EQ 'K').K\n&HIGHN   SETA  &HIGH\n         AGO   .BAL\n.K       ANOP\n&H       SETC  '&HIGH'(1,&I-1)\n&HIGHN   SETA  (&H*1024)\n.BAL     BAL   R6,NUMKEYCK\n         DC    AL1(&LOW),AL3(&HIGHN)\n         MEND\n         SPACE 3\n         MACRO\n&L       MCOND &NAME,&LABMVC=\n&L       CLI   ##&NAME.+1,1   /IF NOT SELECTED THEN IGNORE\n         BNE   BP&NAME.\n&LABMVC  MCONS &NAME.\nBP&NAME. EQU   *\n         SPACE 1\n         MEND\n         SPACE 3\n         MACRO\n&L       MCONS &NAME,&SIGN=BLANK\n         LCLA   &LEN\n&LEN     SETA  K'&NAME\n&L       MVC   0(&LEN,R7),=C'&NAME.'    /MOVE PARAMETER TO STRING\n         AIF   ('&SIGN' EQ 'BLANK').NOSIGN\n         MVI   &LEN.(R7),&SIGN            /INSERT SIGN AFTER PARAM.\n.NOSIGN  ANOP\n         LA    R7,1+&LEN.(,R7)          /INCREMENT OFFSET\n         MEND\n         SPACE 3\n         MACRO\n&L       MKEYW &NAME,&TYPE=SINGLE\n         LCLC  &SIGN\n         AIF   ('&TYPE' EQ 'RANGE').RANGE\n&SIGN    SETC  'BLANK'\n.RANGE   ANOP\n&L       TM    ##&NAME.+6,PRESENT\n         BZ    BP&NAME.       /ABSENT,IGNORE\n         MCONS &NAME.,SIGN=EQUAL\n         L     R5,##&NAME.    /PTR. TO NUMBER\n         MVAR  &NAME.,SIGN=&SIGN\n         AIF   ('&TYPE' NE 'RANGE').NORANGE\n         TM    ##&NAME.+8+6,PRESENT\n         BZ    NR&NAME\n         MVI   0(R7),C':'\n         LA    R7,1(,R7)       UPDATE OFFSET\n         L     R5,##&NAME.+8  /PTR. TO NUMBER\n         MVAR  &NAME.2,SIGN=\nNR&NAME  LA    R7,1(,R7)       UPDATE OFFSET\n.NORANGE ANOP\nBP&NAME. EQU   *\n         SPACE 1\n         MEND\n         SPACE 3\n         MACRO\n         MVAR  &NAME,&SIGN=BLANK\n         LH    R4,##&NAME+4   /LENGTH OF NUMBER\n         BCTR  R4,0           /-1 FOR \"EX\"\n         EX    R4,MOVEPR4     /PARM. TO PLACE\n         LA    R7,1(R4,R7)       /UPDATE OFFSET\n         AIF   ('&SIGN' EQ '').NOSIGN\n         AIF   ('&SIGN' EQ 'BLANK').BLSIGN\n         MVI   0(R7),&SIGN    /INSERT SIGN AFTER PARAM.\n.BLSIGN  ANOP\n         LA    R7,1(,R7)      /UPDATE OFFSET\n.NOSIGN  ANOP\n         MEND\n         SPACE 1\n         MTITL 'SCRIPT -- PROMPTER FOR NSCRIPT -- GABRIEL SILBERMAN',  *\n               LEN=55\n         STITL 'INITIALIZATION'\nSCR      SAVEM BIGZERO,DSECT=PPL,END=PPLEND\n         USING CPPL,R11\n         SPACE 1\n*\n***>   CALL IKJPARS\n*\n         SPACE 1\n         ST    R11,DFLTCPPL        /ADD. OF CPPL FOR DEFAULTA\n         MVC   PPLCBUF,CPPLCBUF    /ADD. OF COMMAND BUFFER\n         MVC   PPLUPT,CPPLUPT      /ADD. OF UPT\n         MVC   PPLECT,CPPLECT      /ADD. OF ECT\n         LA    R4,ECB\n         ST    R4,PPLECB           /ADD. OF ECB\n         LA    R4,ANS\n         ST    R4,PPLANS           /ADD. OF ANSWER (FOR PARSE TO FILL)\n         MVC   PPLPCL,=A(PARSE)    /ADD. OF PCL\n         ST    R13,PPLUWA          /ADD. OF UWA (ADD. OF WORK AREA)\n         LA    R1,PPLUPT           /ADD. OF PARAMETER LIST\n         LINK  EP=IKJPARS\n         LTR   R15,R15             /TEST RETURN CODE\n         BNZ   PARSFAIL            /SQUAWK AND EXIT\n         STITL 'PARAMETER CONSTRUCTION AND ALLOCATIONS'\n         L     R10,ANS             /ADD. OF PDL\n         USING IKJPARMD,R10\n         SPACE 5\n*\n***>  PARAMETER EXAMINATION AND CONSTRUCTION OF STRING TO BE PASSED TO\n*    \"NSCRIPT\" .\n*\n*   THE FORMAT FOR THE PARAMETERS PASSED TO \"NSCRIPT\" ARE AS FOLLOWS :\n*\n*    R1 -->|00| P T R| ---> |LENGTH|STRING.........|\n*          |80| P T R| ---> |# OF ENTRIES|\n*                           |DDNAME|REPLACEMENT|\n*                             ............\n*                           |DDNAME|REPLACEMENT|\n*\n*   \"00\" AND \"80\" ARE BYTES , EACH \"PTR\" IS 3 BYTES LONG , ENTRIES IS\n* HALFWORD AND DDNAMES AND THEIR REPLACEMENTS ARE 8 BYTES LONG PADDED\n* WITH BLANKS IN THE RIGHT .\n*\n         EJECT\n         MVC   ALII(ALIEND-ALICONS),ALICONS     /CONSTANT DDNAMES\n         SPACE 1\n*\n*\n***>   ALLOCATE DATA SET(S) TO BE FORMATTED\n*\n*\n         SPACE 2\n         LA    R6,DSN                  ALLOC DSN BY DEFAULTA     BASTNJ\n         ST    R6,DFLTPDE                                        BASTNJ\n         MVC   DFLTDESC,=CL8'SYSIN'                              BASTNJ\n         MVC   DFLTMEM,=CL8'TEMPNAME'                            BASTNJ\n         LA    R6,CPPL                                           BASTNJ\n         ST    R6,DFLTCPPL                                       BASTNJ\n         MVI   DFLTFLG1,ZERO                                     BASTNJ\n         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ\n         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ\n         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ\n         LA    R6,QLINLEN                                        BASTNJ\n         ST    R6,DFLTQUAL                                       BASTNJ\n         LA    R6,PRNTLEN                                        BASTNJ\n         ST    R6,DFLTANSW                                       BASTNJ\n         LA    R6,NWDSBLK                                        BASTNJ\n         ST    R6,DFLTDCB                                        BASTNJ\n         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ\n         LA    R6,DSN                                            BASTNJ\n         USING DSNDSECT,R6                                       BASTNJ\n         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ\n         LTR   R15,R15                                           BASTNJ\n         BZ    STDDNSYS                                          BASTNJ\n         CH    R15,=H'40'                                        BASTNJ\n         BH    BADRC                                             BASTNJ\n         B     ERROR(R15)                                        BASTNJ\n         SPACE 3\n***> KEEP DDNAME\n         SPACE 1\nSTDDNSYS MVC   SYSIN+8(8),PRNTDDN                                BASTNJ\n         MVC   SYSIN+16(2),PRNT#DD                               BASTNJ\n         SPACE 1\n         MVI   PRNTLEN,ZERO                                      BASTNJ\n         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ\n         SPACE 2\n*\n***>  ALLOCATE \"LIB\" DATA SETS AND CONCATENATE THEM IF NECESSARY\n*\n         SPACE 1\n         CLI   LIB+1,1               /CHECK IF \"NOLIB\" SPECIFIED\n         BNE   SYSCON                /\"NOLIB\" SPECIFIED\n         SPACE 1\n         MVC   DFLTDESC,=CL8'SYSLIB'                             BASTNJ\n         MVC   DFLTMEM,=CL8' '                                   BASTNJ\n         LA    R6,CPPL                                           BASTNJ\n         ST    R6,DFLTCPPL                                       BASTNJ\n         MVI   DFLTFLG1,ZERO                                     BASTNJ\n         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ\n         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ\n         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ\n         LA    R6,QLINLEN                                        BASTNJ\n         ST    R6,DFLTQUAL                                       BASTNJ\n         LA    R6,PRNTLEN                                        BASTNJ\n         ST    R6,DFLTANSW                                       BASTNJ\n         LA    R6,NWDSBLK                                        BASTNJ\n         ST    R6,DFLTDCB                                        BASTNJ\n         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ\n         LA    R6,LIBPDE                                         BASTNJ\n         ST    R6,DFLTPDE                                        BASTNJ\n         USING DSNDSECT,R6                                       BASTNJ\n         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ\n         LTR   R15,R15                                           BASTNJ\n         BZ    STDDNLIB                                          BASTNJ\n         CH    R15,=H'40'                                        BASTNJ\n         BH    BADRC                                             BASTNJ\n         B     ERROR(R15)                                        BASTNJ\n         SPACE 2                                                 BASTNJ\nSTDDNLIB MVC   SYSLIB+8(8),PRNTDDN                               BASTNJ\n         MVC   SYSLIB+16(2),PRNT#DD                              BASTNJ\n         MVI   PRNTLEN,ZERO                                      BASTNJ\n         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ\n         SPACE 1\n***>  SIGNAL 5 DDNAMES FOR \"NSCRIPT\"\n         SPACE 1\n         MVI   ALII+1,(ALIEND-ALICONS)/16\n         SPACE 2\n*\n***> ALLOCATE SYSTERM AND SYSCONS TO THE TERMINAL\n         MNOTE 4,'CHANGE TO MAKE SYSCONS AND SYSTERM PARAMETERS'\n*\n         SPACE 1\nSYSCON   MVC   DFLTDESC,=CL8'SYSCONS'                            BASTNJ\n         MVC   DFLTMEM,=CL8' '                                   BASTNJ\n         LA    R6,CPPL                                           BASTNJ\n         ST    R6,DFLTCPPL                                       BASTNJ\n         MVI   DFLTFLG1,ZERO                                     BASTNJ\n         MVI   DFLTFLG2,DFLTSHR                                  BASTNJ\n         MVI   DFLTFLG3,DFLTKEEP                                 BASTNJ\n         MVI   DFLTFLG4,DFLTKEEP                                 BASTNJ\n         LA    R6,QLINLEN                                        BASTNJ\n         ST    R6,DFLTQUAL                                       BASTNJ\n         LA    R6,PRNTLEN                                        BASTNJ\n         ST    R6,DFLTANSW                                       BASTNJ\n         LA    R6,NWDSBLK                                        BASTNJ\n         ST    R6,DFLTDCB                                        BASTNJ\n         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN                        BASTNJ\n         LA    R6,CONPDE                                         BASTNJ\n         ST    R6,DFLTPDE                                        BASTNJ\n         USING DSNDSECT,R6                                       BASTNJ\n         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)                        BASTNJ\n         LTR   R15,R15                                           BASTNJ\n         BZ    STDDNCON                                          BASTNJ\n         CH    R15,=H'40'                                        BASTNJ\n         BH    BADRC                                             BASTNJ\n         B     ERROR(R15)                                        BASTNJ\n         SPACE 2                                                 BASTNJ\nSTDDNCON MVC   SYSCONS+8(8),PRNTDDN                              BASTNJ\n         MVC   SYSCONS+16(2),PRNT#DD                             BASTNJ\n         MVI   PRNTLEN,ZERO                                      BASTNJ\n         MVC   PRNTLEN+1(57),PRNTLEN                             BASTNJ\n         SPACE 2\n*              ALLOCATE SYSTERM VIA DEFAULTA\n         LA    R6,MSGPDE                SET ADDRESSABILITY TO SYSTERM\n         ST    R6,DFLTPDE               SET SYSTERM PDE FOR DEFAULTA\n         USING DSNDSECT,R6\n         MVC   DFLTDESC,=CL8'MESSAGE'\n         MVI   DFLTFLG1,DFLTPS+DFLTNEWK\n         MVI   DFLTFLG2,DFLTOLD\n         MVI   DFLTFLG3,DFLTKEEP\n         MVI   DFLTFLG4,DFLTKEEP\n         LA    R0,QLPRLEN\n         ST    R0,DFLTQUAL\n         LA    R0,PRNTLEN\n         ST    R0,DFLTANSW\n         LA    R0,NWDSBLK\n         ST    R0,DFLTDCB\n         MVI   PRNTLEN+1,PRNTDSNL-PRNTLEN\n         MVC   NWDSBLK(16),=A(1680,7,7,5)\n         TM    DSNFLG2,PRESENT\n         BO    *+10\n         MVC   NWDSPQTY(12),=A(1,1,0)\n         MVI   NWDSFLG1,NWDSABL\n         MVI   NWDSFLG2,NWDSPS\n         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)\n         CH    R15,=H'40'\n         BH    BADRC\n         B     *+4(R15)           /ANALYSE RETURN CODE IF VALID\n         B     STDDNTRM            00 OK - SET DDN FOR SYSTERM\nERROR    EQU   *-4                                               BASTNJ\n         B     BADEND              04 DAIR ERROR\n         B     BADRC               08 ANSWER AREA TOO SHORT\n         B     BADRC               0C NO MATCH FOUND\n         B     BADEND              10 PO/PS CHECK FAILED\n         B     BADRC               14 INVALID ANSWER AREA\n         B     BADEND              18 LOCATE OR OBTAIN ERROR\n         B     BADRC               1C NO DCB FOR NEW DATA SET\n         B     BADRC               20 PUTLINE ERROR\n         B     BADRC               24 PUTGET ERROR\n         B     BADEND              28 CATALOG ERROR\nBADRC    DC    H'0'               /FORCE PROGRAM CHECH IF INVALID RC\nBADEND   LA    R4,12\n         B     SOF\n         SPACE 1\nSTDDNTRM MVC   SYSTERM+8(8),PRNTDDN\n         MVC   SYSTERM+16(2),PRNT#DD                             BASTNJ\n         SPACE 3\n***> ALLOCATION OF \"SYSPRINT\" (OUTPUT) FILE\n         SPACE 1\n         MVC   DFLTDESC,=CL8'PRINT'\n         LA    R6,PRINTT1               SET ADDRESSABILITY FOR SYSPRINT\n         ST    R6,DFLTPDE               SET SYSPRINT PDE FOR DEFAULTA\n         USING DSNDSECT,R6\n         MVC   NWDSPQTY(12),=A(21,21,5)\n         TM    DSNFLG2,PRESENT\n         BO    *+10\n         MVC   NWDSPQTY(12),=A(7,7,0)\n         MVI   PRNT#DD+1,0\n         LA    R6,PRINTT1\n         ST    R6,DFLTPDE\n         USING DSNDSECT,R6\n         LINK  EP=DEFAULTA,MF=(E,DFLTPDE)\n         LTR   R15,R15                                           BASTNJ\n         BZ    STDDNPRT                                          BASTNJ\n         CH    R15,=H'40'\n         BH    BADRC\n         B     ERROR(R15)                                        BASTNJ\n         SPACE 1\nSTDDNPRT MVC   SYSPRINT+8(8),PRNTDDN\n         MVC   SYSPRINT+16(2),PRNT#DD                            BASTNJ\n         SPACE 2                                                 BASTNJ\n         STITL 'CALLING SEQUENCE'\n**> CALL PARAMETER BUILDING ROUTINE .\n         SPACE 1\n         L     R15,=A(BUILDPRM) /ADD. OF ROUTINE\n         BALR  R14,R15       /BRANCH TO ROUTINE\n         SPACE 3\n*\n***>  PUT SECOND PART OF PARAMETER LIST IN PLACE\n*\n         MVC   ALIIDUM,ALII                                      BASTNJ\n         MVC   SYSIN1,SYSIN                                      BASTNJ\n         MVC   SYSTR1,SYSTERM                                    BASTNJ\n         MVC   SYSCO1,SYSCONS                                    BASTNJ\n         MVC   SYSPR1,SYSPRINT                                   BASTNJ\n         MVC   SYSLI1,SYSLIB                                     BASTNJ\n         LA    R7,ALIIDUM                                        BASTNJ\n         ST    R7,PRMSCR+4\n         MVI   PRMSCR+4,X'80'     FLAG AS LAST PARAMETER IN LIST\n         SPACE 2\n*\n***>  SET UP \"STAX\" IN CASE OF ATTENTION\n*\n         SPACE 1\n         LA    R6,STXLST       /ADD. OF LIST FORM\n         L     R4,=A(ATTEN)    /ADD. OF ATTENTION HANDLING ROUTINE\n         STAX  (R4),MF=(E,(R6)),IBUF=(ATTIN,1),OBUF=(ATTOUT,L'ATTOUT), X\n               USADDR=TCBAD\n         SPACE 2\n*\n***> CALL \"NSCRIPT\"\n*\n         SPACE 1\n         MVI   ATTIN,ATT#C       /SIGNAL NORMAL END\n         LA    R1,PRMSCR         /ADD. OF PARM. LIST\n         LA    R2,ABENDC         /ADD. OF ABEND CODES BUFFER\n         MVC   ABENDC(3),BLANKS8 /BLANK BUFFER\n         L     R4,=A(STAEROUT)   /ADD. OF STAE EXIT ROUTINE\n         XC    ECB,ECB\n         LA    R6,ECB        /PTR. TO ECB\n         ATTACH EP=SCRIPTW,ECB=(R6),SF=(E,LATT),STAI=((R4),(R2)),      *\n               PURGE=HALT,ASYNCH=YES,SZERO=NO\n         SPACE 1\n         ST    R1,TCBAD      /KEEP TCB ADD.\n         WAIT  ECB=ECB\n         SPACE 1\n         CLC   ABENDC(3),BLANKS8      /SEE IF \"NSCRIPT\" ABENDED\n         BNE   NSCABND                /ABEND OCURRED\n         SPACE 1\n         CLI   ATTIN,ATT#C   /EXITED NORMALLY ?\n         BNE   ABEXIT        /ABNORMAL EXIT FROM SUBTASK\n         SPACE 1\n         LAT   R15,ECB,,NSCRERR,LA=0    IS SCRIPTW RC NON-ZERO ?  *TSM*\n         SPACE 1\nDTCH     EQU   *\n         SPACE 1\n         DETACH TCBAD\n         SPACE 1\n         B     DONEFREE\n         STITL 'EPILOG '\n*\n***>  FREE DATA SETS\n*\n         SPACE 1\nDONEFREE LH    R5,ALII                                           BASTNJ\n         SH    R5,=H'1'                                          BASTNJ\n         M     R4,=F'18'                                         BASTNJ\n         LA    R3,SYSIN+8                                        BASTNJ\n         LA    R5,0(R3,R5)                                       BASTNJ\n         LA    R4,18                                             BASTNJ\nLOOP1    LH    R6,8(,R3)                                         BASTNJ\n         LTR   R6,R6                                             BASTNJ\n         BZ    NODATAST                                          BASTNJ\n         CH    R6,=H'1'                                          BASTNJ\n         BE    FREEDAIR                                          BASTNJ\n         BAL   R7,DECONCAT                                       BASTNJ\n         SPACE 2                                                 BASTNJ\nFREEDAIR DS    0H                                                BASTNJ\n         MVC   DA18CD(DA18END-DA18CONS),DA18CONS                 BASTNJ\n         LA    R8,DA18CD                                         BASTNJ\n         ST    R8,DAPLDAPB                                       BASTNJ\n         SPACE 2                                                 BASTNJ\nFREEIT   DS    0H                                                BASTNJ\n         MVC   DA18DDN,0(R3)                                     BASTNJ\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)                         BASTNJ\n         LTR   R15,R15                                           BASTNJ\n         BNZ   ERRANAL                                           BASTNJ\n         BCT   R6,FREEAGAN                                       BASTNJ\n         SPACE 2                                                 BASTNJ\nNODATAST DS    0H                                                BASTNJ\n         BXLE  R3,R4,LOOP1                                       BASTNJ\n         SPACE 1\n*\n***>  FREE PARAMETER AREA\n*\n         SPACE 1\n         L     R1,PRMSCR       /ADD. OF AREA\n         LH    R3,EQUS+4\n         LA    R0,MAXLEN(R3)   /LENGTH OF AREA\n         SVC   10              /ISSUE FREEMAIN SVC\n         SPACE 3\nSOF      ENDM  RC=(R4)\n         SPACE 2                                                 BASTNJ\nFREEAGAN DS    0H                                                BASTNJ\n         SR    R7,R7                                             BASTNJ\n         ST    R7,DBLWD                                          BASTNJ\n         ST    R7,DBLWD+4                                        BASTNJ\n         LH    R7,6(,R3)                                         BASTNJ\n         ST    R7,DBLWD+4                                        BASTNJ\n         PACK  DBLWD,DBLWD                                       BASTNJ\n         CVB   R7,DBLWD                                          BASTNJ\n         LA    R7,1(,R7)                                         BASTNJ\n         CVD   R7,DBLWD                                          BASTNJ\n         UNPK  6(2,R3),DBLWD+6(2)                                BASTNJ\n         OI    7(R3),X'F0'                                       BASTNJ\n         B     FREEIT                                            BASTNJ\n         SPACE 2                                                 BASTNJ\nDECONCAT DS    0H                                                BASTNJ\n         MVC   DA10CD(DA10END-DA10CONS),DA10CONS                 BASTNJ\n         MVC   DA10DDN,0(R3)                                     BASTNJ\n         LA    R8,DA10CD                                         BASTNJ\n         ST    R8,DAPLDAPB                                       BASTNJ\n         LINK  EP=IKJDAIR,MF=(E,DAPLUPT)                         BASTNJ\n         LTR   R15,R15                                           BASTNJ\n         BNZ   ERRANAL                                           BASTNJ\n         BR    R7                                                BASTNJ\n         SPACE 3                                                 BASTNJ\n         STITL 'ERROR AND DIAGNOSTIC ROUTINES'\n***> ERROR IN \"NSCRIPT\"\n         SPACE 1\nNSCRERR  LA    R4,12                    RETURN CODE FOR CLISTS    *TSM*\n         LA    R2,ER10     /ADD. OF MESSAGE\n         LA    R0,ER11-ER10  /LENGTH OF MESSAGE\n         B     MESSAGE     /TPUT AND ABORT\n         SPACE 3\n*\n**>  \"NSCRIPT\" ABENDED\n*\n         SPACE 1\nNSCABND  MVC   ABNDMSG(45),ER18      /MOVE TEMPLATE OF MESSAGE\n         SPACE 1\n*  USER CODE\n         ICM   R2,3,ABENDC+1         /LOAD CODE (+)\n         LA    R3,4095\n         NR    R2,R3                 /ELIMINATE GARBAGE\n         CVD   R2,DWORK\n         OI    DWORK+7,COMPF        /PUT \"F\" IN LOWEST HALF BYTE\n         UNPK  ABNDMSG+41(4),DWORK+5(3)\n         SPACE 1\n*  SYSTEM CODE\n         UNPK  DWORK(5),ABENDC(3)   /UNPACK CODE + BYTE\n         MVC   ABNDMSG+28(3),DWORK  /MOVE RELEVANT PART\n         TR    ABNDMSG+28(3),HEXTRTAB /TRANSLATE HEX. CODES\n         LA    R2,ABNDMSG            /ADD. OF MESSAGE\n         LA    R0,45                 /LENGTH OF MESSAGE\n         SPACE 1\n         TPUT  (R2),(0)\n         SPACE 1\n         B     DONEFREE             /FREE AND EXIT\n         SPACE 3\n*\n***>  SUBTASK ABNORMALLY TERMINATED BY ATTENTION\n*\n         SPACE 1\nABEXIT   EQU   *\n         CLI   ATTIN,ATT#F        /FREE REQUESTED ?\n         BE    DONEFREE\n         SPACE 1\n*  \"ABEND\" WAS REQUESTED\n         LA    R4,12              /SIGNAL ABENDED                 *TSM*\n         B     SOF\n         SPACE 3\nPARSFAIL LR    R4,R15             /ERROR CODE\n         LA    R2,ER9           /ERROR MESSAGE\n         LA    R0,ER10-ER9      /LENGTH OF MESSAGE\n         SPACE 3\nMESSAGE  TPUT  (R2),(0)\n         B     SOF\n         SPACE 3\n         EJECT\n*\n***>  ERROR ANALYSIS FOR DAIR USING DAIRFAIL(IKJEFF18)\n*\n         SPACE 2\nERRANAL  EQU   *\n         ST    R15,DAIRRC       /STORE R.C.\n         CVD   R15,DBLWD                                         BASTNJ\n         ED    REG15+1(5),DBLWD+5                                BASTNJ\n         L     R15,DAPLDAPB                                      BASTNJ\n         LH    R15,4(,R15)                                       BASTNJ\n         CVD   R15,DBLWD                                         BASTNJ\n         ED    CODEDAIR+1(5),DBLWD+5                             BASTNJ\n         LA    R1,TPUTLINE                                       BASTNJ\n         LA    R0,TPUTLINL                                       BASTNJ\n         TPUT  (R1),(R0),R                                       BASTNJ\n         L     R4,DAIRRC        /RETURN CODE FROM THE PROGRAM\n         B     SOF             /EXIT\n         SPACE 2                                                 BASTNJ\nTPUTLINE DC    C' DAIR ERROR CODE '                              BASTNJ\nCODEDAIR DC    X'402020202020'                                   BASTNJ\n         DC    C' REG. 15 = '                                    BASTNJ\nREG15    DC    X'402020202020'                                   BASTNJ\nTPUTLINL EQU   *-TPUTLINE                                        BASTNJ\nDBLWD    DS    D                                                 BASTNJ\n         EJECT\n         LTORG\n         STITL 'VALIDITY CHECK ROUTINES (VDCHECK CSECT)'\nVDCHECK  CSECT    ,     /CSECT FOR VALIDITY CHECK AND STAX/STAE .\n         USING VDCHECK,R11\n*\n***> VALIDITY CHECK ROUTINE FOR \"EQUALITIES\" .\n*\n         USING VALPAR,R1          /ADDRESSABILITY FOR PARAM. LIST\nEQUSCK   EQU   *\n*\n***>   VALIDITY CHECK ROUTINE FOR STRINGS OF THE FORM :\n*              +A=B  OR  &A=B\n*\n         STM   R14,R12,12(R13)\n         USING EQUSCK,R15\n         L     R12,=A(SCR)\n         L     R11,=A(VDCHECK)      /ADD. OF START\n         DROP  R15\n         LR    R15,R13\n         L     R13,USERWORD\n         ST    R15,KEEPR\n         L     R10,PDEADR\n         USING QST,R10           /ADDRESSABILITY FOR PDE\n         LH    R9,QSTLNGT        /LOAD LENGTH OF STRING\n         BCTR  R9,0              /LENGTH-1\n         L     R8,QSTSTRP        /START OF STRING\n         DROP  R10\n         LR    R4,R8\n         AR    R4,R9            /END OF STRING ADD.\n         XR    R2,R2\n         EX    R9,TRTSR          /LOOK FOR NEXT DELIMITER\n         SPACE 2\n         B     BTAB1(R2)         /BRANCH WITH CODE RETURNED\nBTAB1    B     INV               /INVALID (NULL?)\n         B     FOP               / + OR & FOUND => START\n         SPACE 2\nINV      EQU   *\n*\n***>   INVALID PARAMETER(S) ENTERED\n*\n*  ERROR MESSAGE\n         LA    R2,ER1\n         LA    R0,L'ER1\n         B     ERRTPUT\n         SPACE 2\nFOP      EQU   *\n*\n***>   FIRST OPERAND START (+ OR &)\n*\n         LR    R7,R1             /ADD. OF + OR &\n         SR    R7,R8             /LENGTH OF STRING PARSED (-1)\nFOP1     LA    R7,1(,R7)\n         SR    R9,R7              /LENGTH REMAINING (-1)\n         LA    R8,1(R1)           /START ADD. FOR NEXT TRT\n         XR    R2,R2\n         EX    R9,TRTSR           /LOOK FOR \"=\"\n         B     BTAB2(R2)\n         SPACE 2\nBTAB2    B     INV                /NOTHING FOUND\n         B     INV                /NO \"=\" FOUND\n*\n***>  EQUAL SIGN\n*\n         LR    R7,R1\n         SR    R7,R8            /LENGTH OF PARAMETER (IDENTIFIER)\n         BNP   INV              /INVALID IF NO IDENTIFIER\n         LA    R7,1(,R7)        /LENGTH PARSED\n         LA    R8,1(R1)         /NEXT START ADD. FOR TRT\n         XR    R2,R2\n         SR    R9,R7            /LENGTH OF STRING TO BE PARSED\n         EX    R9,TRTSR\n         B     BTAB3(R2)\n         SPACE 2\nBTAB3    B     GOOD            /END OF STRING ??\n         B     NEXTEQ          /NEXT EQUALITY\n         B     INV             /INVALID (\"=\" AFTER \"=\")\n         SPACE 2\nGOOD     EQU   *\n         SR    R4,R1           /LENGTH OF  VALUE\n         BNP   INV             /NULL VALUE\n         B     RC0             /RETURN\n         SPACE 1\nNEXTEQ   EQU   *\n*\n***>  NEXT PARAMETER-VALUE PAIR\n*\n         LR    R7,R1\n         SR    R7,R8          /LENGTH OF VALUE\n         BNP   INV            /NULL VALUE\n         B     FOP1           /GO AGAIN TO FIND \"=\"\n         SPACE 1\nTRTSR    TRT   0(0,R8),SYMBTR  TRT ON QSTRING TO FIND '&&\"|'+'|'='\n         SPACE 3\nRC0      XR    R15,R15\n         B     RET\n         SPACE 2\nERRTPUT  TPUT  (R2),(0)\n         SPACE 1\nRC8      LA    R15,8\n         B     RET\n         SPACE 3\n         PUSH  PRINT\n         PRINT NOGEN\n         SPACE 1\nBMCK     RANGE 0,033,BMARGIN\n         SPACE 1\nCENTCK   RANGE 0,030,ADJUST\n         SPACE 1\nCHANCK   RANGE 1,009,CHANNEL\n         SPACE 1\nDOWNCK   RANGE 1,130,DOWN\n         SPACE 1\nFMCK     RANGE 0,033,FMARGIN\n         SPACE 1\nFNSCK    RANGE 1,1024,FNSIZE\n         SPACE 1\nHMCK     RANGE 0,033,HMARGIN\n         SPACE 1\nLINUMCK  RANGE 1,125,LINUMBER\n         SPACE 1\nLLENGCK  RANGE 10,120,LLENGTH\n         SPACE 1\nNUMBCK   RANGE 1,100,NUMBER\n         SPACE 1\nPAGECK   RANGE 1,32767,PAGE\n         SPACE 1\nPASSCK   RANGE 1,010,PASSES\n         SPACE 1\nPLENGTCK RANGE 33,132,PLENGTH\n         SPACE 1\nREVCK    RANGE 1,144,REVERSE\n         SPACE 1\nRMSIZECK RANGE 1,255,RMSIZE\n         SPACE 1\nSEQCCK   RANGE 0,240,SEQCOLUMN\n         SPACE 1\nSREFCK   RANGE 1,4096,SREFERENCE\n         SPACE 1\nSRLCK    RANGE 4,240,SRLENGTH\n         SPACE 1\nTMCK     RANGE 0,033,TMARGIN\n         SPACE 1\n         POP   PRINT\n         SPACE 3\n*\n*             R6   =>AL1(MINIMUM),AL3(MAXIMUM)\n*             R14+4=>AL1(L'NAME),C'NAME'\n*\n         PUSH  USING\n         DROP\n         USING VALPAR,R1\nNUMKEYCK BALR  R2,0                      ALLOW FOR MULTIPLE ENTRIES\n         USING *,2\n         LM    R11,R12,=A(VDCHECK,SCR)\n         USING VDCHECK,R11\n         USING SCR,R12\n         DROP  R2\n         LM    R9,R10,PDEADR\n         USING QST,R9\n         USING PPL,R10\n         L     R7,QSTSTRP\n         LH    R8,QSTLNGT\n         BCTR  R8,0\n         LA    R4,0(R7,R8)\n         XR    R2,R2                    0=NUMERIC 4=INVALID 8='K'\n         EX    R8,NUMBTRT\n         BZ    NOTNNK\n         BM    NOTNUM\n         B     *(R2)                    WHAT IS FUNCTION BYTE?\n         B     NOTNUM                   4 - NON-NUMERIC\n         SH    R8,=H'1'                 8 - 'K'\n         BM    NOTNUM\nNOTNNK   EX    R8,NUMBPACK\n         CVB   R0,DWORK\n         CLI   0(R4),C'K'\n         BNE   *+8\n         SLA   R0,10\n         ST    R0,DWORK\n         SR    R0,R0\n         IC    R0,0(R6)\n         C     R0,DWORK\n         BH    TOOSMALL\n         CLC   1(3,R6),DWORK+1\n         BL    TOOLARGE\n         XR    R15,R15\n         B     VALID\n         SPACE 1\nNOTNUM   LA    R0,L'ERRNUM\n         LA    R1,ERRNUM\n         B     NOTVALID\n         SPACE 1\nTOOSMALL LA    R0,L'ERRSMALL\n         LA    R1,ERRSMALL\n         B     NOTVALID\n         SPACE 1\nTOOLARGE LA    R0,L'ERRLARGE\n         LA    R1,ERRLARGE\n*        B     NOTVALID\n         SPACE 1\nNOTVALID TPUT  (1),(0)\n         LA    R15,8\n         SPACE 1\n         PRINT GEN\nVALID   RETURN (14,12),T,RC=(15)\n         PRINT NOGEN\n         SPACE 1\nNUMBTRT  TRT   0(,R7),NUMBTAB\nNUMBPACK PACK  DWORK,0(,R7)\n         POP   USING\n         SPACE 5\n*\n***>  RETURN SEQUENCE FOR VALIDITY CHECK ROUTINES .\n***>  R15 CONTAINS RETURN CODE , KEEPR   CONTAINS\n*   R13 TO POINT TO THE SAVE AREA .\n*\n         DROP  R1\nRET      EQU   *\n         L     R13,KEEPR      /RESTORE R13\n         ST    R15,16(R13)    /SAVE RETURN CODE\n         LM    R14,R12,12(R13)\n         BR    R14            /RETURN\n*\n         STITL 'ATTENTION HANDLING  (STAX)'\nATTEN    STM   R14,R12,12(R13)\n         USING ATTEN,R15\n         L     R12,=A(SCR)\n         L     R11,=A(VDCHECK)\n         DROP  R15\n         USING ATTPARM,R1        /DSECT FOR ATT. PARM LIST\n         L     R3,ATTIBUF        /PTR. TO INPUT BUFFER\n         L     R5,ATTUSERP       /PTR. TO TCB FOR SUBTASK<9\n         DROP  R1\n         SPACE 1\nATTLOOP  EQU   *\n         SPACE 1\n*   ANALYZE THE INPUT FROM THE USER\n         CLI   0(R3),ATT#Q       /QUESTION MARK ?\n         BE    SECATTN           /SECOND LEVEL MESSAGE\n         SPACE 1\n         OI    0(R3),BLANK       /TRANSLATE TO UPPERCASE\n         CLI   0(R3),ATT#A       /ABEND REQUEST ?\n         BE    ATTABND\n         SPACE 1\n         CLI   0(R3),ATT#C       /CONTINUE ?\n         BE    ATTCONT\n         SPACE 1\n         CLI   0(R3),ATT#F       /FREE REQUEST ?\n         BNE   NWANSATT          /BAD REPLY , GET NEW ANSWER\n         SPACE 3\n*  FREE/ABEND REQUEST\n         SPACE 1\nATTABND  EQU   *\n* BUFFER CONTAINS CODE FOR PARENT TASK TO REACT\n         SPACE 1\n         LR    R1,R5          /PTR. TO ADD. OF SUBTASK'S TCB\n         SVC   62             /ISSUE DETACH SVC\n         B     ATTRET         /RETURN\n         SPACE 2\n*  CONTINUE REQUEST\n         SPACE 1\nATTCONT  EQU   *\n         TPUT  ER16,L'ER16     /WARN FOR MISSING LINES\n         SPACE 1\nATTRET   EQU   *\n         LM    R14,R12,12(R13)\n         BR    R14             /RETURN TO ORIGIN\n         SPACE 3\n*  SECOND LEVEL MESSAGE AND REQUEST FOR NEW ANSWER\n         SPACE 1\nSECATTN  EQU   *\n         TPUT  ER141,L'ER141\n         TPUT  ER142,L'ER142\n         TPUT  ER143,L'ER143\n         SPACE 1\n*  GET NEW ANSWER\n         SPACE 1\nNWANSATT EQU   *\n         SPACE 1\n*  FIRST , PRINT OUT REQUEST ; THEN GET NEW INPUT\n         SPACE 1\n         TPUT  ER15,L'ER15\n         SPACE 1\n         TGET  (R3),1\n         SPACE 1\n         B     ATTLOOP          /GO ANALYZE ANSWER\n         SPACE 5\nSTAEROUT EQU   *\n*\n**>  ABEND INTERCEPTING ROUTINE FOR ATTACHED \"NSCRIPT\"\n*\n         SPACE 1\n         STM   R14,R12,12(R13)\n         USING STAEROUT,R15\n         L     R12,=A(SCR)\n         L     R11,=A(VDCHECK)\n         DROP  R15\n         USING STAEPLST,R1         /PARM. LIST GOTTEN\n         L     R2,STAEPARP         /ADD. OF CODES' BUFFER\n         MVC   0(3,R2),STAECODE    /MOVE CODES\n         DROP  R1\n        RETURN (14,12),T,RC=0      /CONTINUE STAI AND ABEND PROCESSING\n         SPACE 3\n         LTORG\n         SPACE 1\n         DROP  R11\n         STITL 'PARAMETER BUILDING (BUILDPRM CSECT)'\n*\n*  ROUTINE WHICH ANALYSES THE OUTPUT FROM \"PARSE\" AND\n* BUILDS THE PARAMETER TO BE PASSED TO \"NSCRIPT\" .\n*\n*  AT ENTRY :\n*           R14 - RETURN ADDRESS\n*           R15 - ENTRY ADDRESS\n*           R1  - ADDRESS OF PARSE RESULT DSECT\n*\n*  NOTHING RETURNED AT EXIT FROM CSECT . ALL RESULTS STORED IN\n* COMMON WORK AREA POINTED AT BY \"OLD\" R13 .\n*\n         SPACE 2\nBUILDPRM CSECT\n         DS    0H\n         USING BUILDPRM,R11\n         STM   R14,R12,12(R13)\n         LR    R11,R15\n         USING IKJPARMD,R10      /ADDRESSABILITY FOR PDL\n         SPACE 2\n*\n***>  ALLOCATE SPACE FOR PARAMETER STRING TO BE PASSED\n*\n         SPACE 2\n         LH    R4,EQUS+4     /LENGTH OF EQUS' STRING\n         LA    R4,MAXLEN(R4) /ADD MAX. LENGTH OF THE REST + 2(LENGTH)\n         LR    R0,R4         /KEEP LENGTH\n         SPACE 1\n         GETMAIN R,LV=(0)\n         SPACE 1\n         ST    R1,PRMSCR     /TO PARAM. LIST\n         XC    PRMSCR(1),PRMSCR  /ZERO FIRST BYTE\n         LR    R7,R1\n         LA    R7,2(R7)      /START FOR PARAMETERS\n         SPACE 1\n         MVI   0(R7),BLANK   /CLEAN BUFFER\n         SH    R4,HALF3      /SUBTRACT LENGTH FIELD AND 1 FOR \"EX\"\n         EX    R4,CLEANBUF\n         SPACE 1\n         MCOND CO\n         MCOND MA\n         MVI   PRTETR,ZERO        /SIGNAL NOT SPECIFIED\n         CLI   PRINTT2+1,1              PRINT(...,T) OR PR(...) ? *TSM*\n         BL    TESTOFON                  PR(...) - TEST FOR ON|OF *TSM*\n         MVI   PRTETR,PRESENT            T|PC|PS - SIGNAL PRESENT *TSM*\n         BE    PRTEY                     T       - SET ONLINE     *TSM*\n         CLI   PRINTT2+1,3              PC OR PS ?                *TSM*\n         BE    BPOFON                    PS      - SET OFFLINE    *TSM*\n         MVC   0(2,R7),=C'TR'            PC      - SET TRANSLATE  *TSM*\n         LA    R7,1+2(,R7)                                        *TSM*\n         B     BPOFON                              SET OFFLINE    *TSM*\n         SPACE 1\nTESTOFON CLI   OFON+1,3                 OFFLINE ?                 *TSM*\n         BE    BPOFON                    YES - SKIP               *TSM*\n         CLI   OFON+1,0                 OMITTED ?                 *TSM*\n         BNE   PRTEY                     NO  - MUST BE ONLINE     *TSM*\n         LA    R6,PRINTT1               IS SYSPRINT DA(*) ?       *TSM*\n         USING DSNDSECT,R6                                        *TSM*\n         L     R1,DSNPTRN                                         *TSM*\n         CLI   0(R1),C'*'                                         *TSM*\n         BNE   BPOFON                    NO  - SET OFFLINE        *TSM*\n*        B     PRTEY                     YES - SET ONLINE         *TSM*\n         DROP  R6                                                 *TSM*\nPRTEY    MCONS TE                                                 *TSM*\nBPOFON   EQU   *\n         SPACE 1\n         MCOND QU\n         SPACE 1\n         TM    PRTETR,PRESENT    /TEST IF ALREADY DONE IN \"PRINT\"\n         BO    BPTR              /DONE\n         MCOND TR\n         MCOND UN\n         MCOND NOUP\n         MVI   STWAIT,ZERO     /SIGNAL NOT SPECIFIED\n         LH    R4,PAUSE\n         CH    R4,HALFONE\n         BL    BPAUSE1      /NOT SPECIFIED\n         MVI   STWAIT,PRESENT   /SIGNAL SPECIFIED\n         BE    BPAUSE1             /\"PAUSE1\" => \"NOSTOP\" + \"WAIT\"\n         CH    R4,HALF3\n         BNE   BPAUSE\n         MVC   0(2,R7),=C'NO'    /\"NOPAUSE\" => \"NOSTOP\" + \"NOWAIT\"\n         LA    R7,1+2(,R7)       /UPDATE OFFSET\n         B     BPAUSE1\nBPAUSE   EQU   *\n         MVC   0(2,R7),=C'ST'    /\"PAUSE\" => \"STOP\" + \"WAIT\"\n         LA    R7,1+2(,R7)       /UPDATE OFFSET\nBPAUSE1  EQU   *\n         TM    STWAIT,PRESENT\n         BO    BPNOW           /\"STOP\" & \"WAIT\" ALREADY DONE\n         MCOND ST\n         MCOND NOW\n         MCOND STAT\n         MCOND DEBUG\n         MKEYW AD\n         MKEYW BM\n         MKEYW CH\n         MKEYW DO\n         MKEYW FM\n         MKEYW FNS\n         MKEYW HM\n         MKEYW LIN\n         MKEYW NU\n         MKEYW PA,TYPE=RANGE\n         MKEYW PASS\n         MKEYW REV\n         MKEYW RMSI\n         MCOND SCRE\n         MKEYW SRE\n         MKEYW SRL\n         MKEYW TM\n         LR    R6,R7\n         MCONS SEQC,SIGN=EQUAL\n         TM    ##SEQC+6,PRESENT\n         BZ    SEQC1             /ABSENT,CHECK FOR RECFM=V\n         L     R5,##SEQC         /PTR. TO VALUE\n         CLI   0(R5),ASTERISK    /IS IT \"*\" ?\n         BE    BPSEQC1\n         MVAR  SEQC\n         B     BPSEQC\n         SPACE 1\nSEQC1    EQU   *\n*\n***>    CHECK FOR RECFM \"V\"\n*\n         SPACE 1\n         TM    RECFM,RECFMV     /IS IT \"V\" ?\n         BZ    BPSEQC1          /NO\n         MVI   0(R7),ONE        /PUT VALUE \"1\"\n         LA    R7,2(R7)         /UPDATE OFFSET\n         B     BPSEQC           /ENDED\n         SPACE 1\nBPSEQC1  LR    R7,R6\n         SPACE 1\nBPSEQC   EQU   *\n         SPACE 1\n*\n***> ADD \"EQUS\" AND CALCULATE THE ACTUAL LENGTH OF STRING\n*\n         SPACE 1\n         L     R1,PRMSCR             /ADD. OF START OF STRING\n         TM    EQUS+6,PRESENT\n         BZ    FINALEN         /NO EQUS, GO ON\n         LH    R4,EQUS+4       /LENGTH OF \"QSTRING\"\n         L     R5,EQUS         /PTR. TO \"QSTRING\"\n         BCTR  R4,0            /-1 FOR \"EX\"\n         EX    R4,MOVEPR4      /MOVE \"EQUS\" TO PLACE\n         LA    R7,2(R4,R7)     /UPDATE OFFSET\nFINALEN  SR    R7,R1           /END - START (-2)\n         SH    R7,HALF3        /LENGTH OF STRING\n         STH   R7,0(R1)        /STORE IN PLACE\n         SPACE 3\n         LM    R14,R12,12(R13)\n         BR    R14            /RETURN TO MAIN\n         SPACE 3\n         SPACE 1\n         DROP  R11\n         SPACE 2\nSCR      CSECT    ,    /RETURN TO MAIN CSECT\n         STITL 'PARAMETER CONTROL LIST FOR PARSE'\n         PRINT NOGEN\nPARSE    IKJPARM\n         SPACE 1\nDSN      IKJPOSIT DSTHING,LIST,PROMPT='DATA SET NAME'\n         SPACE 1\nEQUS     IKJPOSIT QSTRING,ASIS,VALIDCK=EQUSCK,                         *\n               HELP=('VALUES TO CREATE \".SR\" CONTROL LINES EXTERNALLY')\n*        IKJPOSIT STRING,SQSTRING,ASIS,VALIDCK=EQUSCK,\n*              HELP=('VALUES TO CREATE \".SR\" CONTROL LINES EXTERNALLY')\n         SPACE 1\nCON      IKJKEYWD DEFAULT='SYSCONS'\n         IKJNAME  'SYSCONS',SUBFLD=SCON\n         SPACE 1\nLIB      IKJKEYWD DEFAULT='LIBRARY'\n         IKJNAME 'LIBRARY',SUBFLD=SLIB\n         IKJNAME 'NOLIBRARY'\n         SPACE 1\nMSG      IKJKEYWD DEFAULT='MESSAGE'\n         IKJNAME  'MESSAGE',SUBFLD=SMSG\n         IKJNAME  'MSG',SUBFLD=SMSG\n         SPACE 1\nPRINT    IKJKEYWD DEFAULT='PRINT(*)'                              *TSM*\n         IKJNAME  'PRINT',SUBFLD=SPRINT\n         SPACE 3\nADJUST   IKJKEYWD\n         IKJNAME  'ADJUST',SUBFLD=SADJUST\n         IKJNAME  'NOADJUST'\n         IKJNAME  'CENTRE',SUBFLD=SADJUST\n         IKJNAME  'CE',SUBFLD=SADJUST\n         IKJNAME  'CENTE',SUBFLD=SADJUST\n         IKJNAME  'CENTER',SUBFLD=SADJUST\n         IKJNAME  'NOCENTRE'\n         IKJNAME  'NOCE'\n         IKJNAME  'NOCENTE'\n         IKJNAME  'NOCENTER'\n         SPACE 1\nBMARGIN  IKJKEYWD\n         IKJNAME  'BMARGIN',SUBFLD=SBM\n         SPACE 1\nCHAN     IKJKEYWD\n         IKJNAME  'CHANNEL',SUBFLD=SCHAN\n         SPACE 1\n##CO     IKJKEYWD\n         IKJNAME  'CONTINUE'\n         IKJNAME  'NOCONTINUE'\n         SPACE 1\n##DEBUG  IKJKEYWD\n         IKJNAME  'DEBUG'\n         SPACE 1\nDOWN     IKJKEYWD\n         IKJNAME  'DOWN',SUBFLD=SDOWN\n         SPACE 1\nFMARGIN  IKJKEYWD\n         IKJNAME  'FMARGIN',SUBFLD=SFM\n         SPACE 1\nFNSIZE   IKJKEYWD\n         IKJNAME  'FNSIZE',SUBFLD=SFNSIZE\n         SPACE 1\n##UN     IKJKEYWD\n         IKJNAME  'UNFORMATTED'\n         IKJNAME  'FORMATTED'\n         SPACE 1\nHMARGIN  IKJKEYWD\n         IKJNAME  'HMARGIN',SUBFLD=SHM\n         SPACE 1\nLINUM    IKJKEYWD\n         IKJNAME  'LINUMBER',SUBFLD=SLINUM\n         SPACE 1\nLLEN     IKJKEYWD\n         IKJNAME  'LLENGTH',SUBFLD=SLLENGT\n         SPACE 1\n##MA     IKJKEYWD\n         IKJNAME  'MARK'\n         IKJNAME  'NOMARK'\n         SPACE 1\nNUMB     IKJKEYWD\n         IKJNAME  'NUMBER',SUBFLD=SNUMB\n         IKJNAME  'NONUMBER'\n         SPACE 1\nOFON     IKJKEYWD\n         IKJNAME  'ONLINE'\n         IKJNAME  'TERMINAL'\n         IKJNAME  'OFFLINE'\n         SPACE 1\nPAGE     IKJKEYWD\n         IKJNAME  'PAGE',SUBFLD=SPAGE\n         IKJNAME  'PA',SUBFLD=SPAGE\n         SPACE 1\nPAGELEN  IKJKEYWD\n         IKJNAME  'PLENGTH',SUBFLD=SPLENGTH\n         SPACE 1\n##2P     IKJKEYWD\n         IKJNAME  'ONEPASS'\n         IKJNAME  '1PASS'\n         IKJNAME  'TWOPASS',INSERT='PAS(2)'\n         IKJNAME  '2PASS',INSERT='PAS(2)'\n##PAS    IKJKEYWD\n         IKJNAME  'PASSES',SUBFLD=SPASS\n         SPACE 1\n##QU     IKJKEYWD\n         IKJNAME  'QUIET'\n         IKJNAME  'NOQUIET'\n         SPACE 1\nREVERSE  IKJKEYWD\n         IKJNAME  'REVERSE',SUBFLD=SREV\n         IKJNAME  'NOREVERSE'\n         IKJNAME  'RL',SUBFLD=SREV\n         IKJNAME  'LR'\n         SPACE 1\nRMSIZE   IKJKEYWD\n         IKJNAME  'RMSIZE',SUBFLD=SRMSI\n         SPACE 1\n##SCRE   IKJKEYWD\n         IKJNAME  'SCREEN'\n         IKJNAME  'NOSCREEN'\n         SPACE 1\nSEQC     IKJKEYWD\n         IKJNAME  'SEQCOLUMN',SUBFLD=SSEQC\n         SPACE 1\nSREF     IKJKEYWD\n         IKJNAME  'SREFERENCE',SUBFLD=SSREF\n         SPACE 1\nSLNGT    IKJKEYWD\n         IKJNAME  'SRLENGTH',SUBFLD=SSLNGT\n         SPACE 1\n##STAT   IKJKEYWD\n         IKJNAME  'STATISTICS'\n         IKJNAME  'NOSTATISTICS'\n         SPACE 1\n##STSH   IKJKEYWD\n         IKJNAME  'ST',INSERT='STOP'\n         IKJNAME  'NOST',INSERT='NOSTOP'\n##ST     IKJKEYWD\n         IKJNAME  'STOP'\n         IKJNAME  'NOSTOP'\n         SPACE 1\nTMARGIN  IKJKEYWD\n         IKJNAME  'TMARGIN',SUBFLD=STM\n         SPACE 1\n##TR     IKJKEYWD\n         IKJNAME  'TRANSLATE'\n         IKJNAME  'NOTRANSLATE'\n         SPACE 1\n##NOUP   IKJKEYWD\n         IKJNAME  'NOUPPER'\n         IKJNAME  'UPPER'\n         SPACE 1\n##NOW    IKJKEYWD\n         IKJNAME  'NOWAIT'\n         IKJNAME  'WAIT'\n         SPACE 1\nPAUSE    IKJKEYWD\n         IKJNAME  'PAUSE1'\n         IKJNAME  'PAUSE'\n         IKJNAME  'NOPAUSE'\n         SPACE 5\n*\n****>   SUBFIELDS FOR PARSE\n*\n         SPACE 1\nSCON     IKJSUBF\nCONPDE   IKJPOSIT DSTHING,DEFAULT='*',LIST\n         SPACE 1\nSLIB     IKJSUBF\nLIBPDE   IKJPOSIT DSNAME,DEFAULT='''SYS2.TEXT''',LIST\n         SPACE 1\nSMSG     IKJSUBF\nMSGPDE   IKJPOSIT DSTHING,DEFAULT='*'\n         SPACE 1\nSPRINT   IKJSUBF\nPRINTT1  IKJPOSIT DSTHING,DEFAULT='*'\n         MNOTE 0,'REMOVE DEFAULT WHEN PRINT CODE COMPLETED'       *TSM*\nPRINTT2  IKJKEYWD\n         IKJNAME  'T'\n         IKJNAME  'PC'\n         IKJNAME  'PS'\n         SPACE 1\nSADJUST  IKJSUBF\n##AD     IKJIDENT 'LEFT INDENTATION',MAXLNTH=2,FIRST=NUMERIC,          X\n               OTHER=NUMERIC,VALIDCK=CENTCK,                           X\n               HELP=('OFFSET FROM LEFT MARGIN FOR ALL THE TEXT',       *\n               'IN RANGE 0:30')\n         SPACE 1\nSBM      IKJSUBF\n##BM     IKJIDENT 'BOTTOM MARGIN',                                     *\n               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=BMCK,     *\n               HELP=('NUMBER OF LINES BETWEEN TEXT AND BOTTOM OF PAGE')\n         SPACE 1\nSCHAN    IKJSUBF\n##CH     IKJIDENT 'CHANNEL NUMBER',MAXLNTH=1,FIRST=NUMERIC,            *\n               HELP=('PRINTER CHANNEL FOR ALIGNMENT',                  *\n               'IN RANGE 1:9')\n         SPACE 1\nSDOWN    IKJSUBF\n##DO     IKJIDENT 'DOWN NUMBER',MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC, *\n               HELP=('NUMBER OF SPACES TO PERFORATION AFTER SKIPPING TO*\n                \"CHANNEL\"','USE IN CONJUNCTION WITH CHANNEL')\n         SPACE 1\nSFM      IKJSUBF\n##FM     IKJIDENT 'FOOTING MARGIN',                                    *\n               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=FMCK,     *\n               HELP=('NUMBER OF LINES BETWEEN TEXT AND FIRST FOOTING LI*\n               NE')\n         SPACE 1\nSFNSIZE  IKJSUBF\n##FNS    IKJIDENT 'FOOTNOTE SIZE',                                     *\n               MAXLNTH=4,FIRST=NUMERIC,OTHER=ALPHANUM,VALIDCK=FNSCK,   *\n               HELP=('NUMBER OF FORMATTED FOOTNOTE LINES',             *\n               'IN RANGE 1-1024')\n         SPACE 1\nSHM      IKJSUBF\n##HM     IKJIDENT 'HEADING MARGIN',                                    *\n               MAXLNTH=2,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=HMCK,     *\n               HELP=('NUMBER OF LINES BETWEEN LAST HEADING LINE AND TEX*\n               T')\n         SPACE 1\nSLINUM   IKJSUBF\n##LIN    IKJIDENT 'LINE NUMBER',MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC, *\n               VALIDCK=LINUMCK,                                        *\n               HELP=('DISPLAY NUMBER OF PAGE IN COLUMN \"N\"',           *\n               'IN RANGE 0-125')\n         SPACE 1\nSLLENGT  IKJSUBF\n##LL     IKJIDENT 'LINE LENGTH',MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC, *\n               VALIDCK=LLENGCK,                                        *\n               HELP=('NUMBER OF PRINT POSITIONS ON A LINE',            *\n               'IN RANGE 10-120')\n         MNOTE 0,'THE SCRIPTW DOCUMENTATION CLAIMS 132,'\n         MNOTE 0,'BUT THE CODE ONLY ALLOWS 120.'\n         SPACE 1\nSNUMB    IKJSUBF\n##NU     IKJIDENT 'LINE NUMBER AND FILE NAME FIELDS',MAXLNTH=3,        *\n               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=NUMBCK,             *\n               HELP=('DISPLAY LINE NUMBER,FILENAME,<MEMBERNAME> STARTIN*\n               G AT COLUMN \"N\"',                                       *\n               'IN RANGE 0:100')\n         SPACE 1\nSPAGE    IKJSUBF\n##PA     IKJIDENT 'PAGE RANGE TO BE FORMATTED',RANGE,                  *\n               MAXLNTH=5,FIRST=NUMERIC,OTHER=ALPHANUM,                 *\n               HELP=('STARTING PAGE NUMBER OR \"START:END\"',            *\n               'IN RANGE 1-32767')\n##PA2    EQU   ##PA+8,8,C'X'\n         SPACE 1\nSPASS    IKJSUBF\n##PASS   IKJIDENT 'NUMBER OF PASSES',MAXLNTH=2,FIRST=NUMERIC,          *\n               OTHER=NUMERIC,VALIDCK=PASSCK,                           *\n               HELP=('OUTPUT IS PRINTED ON LAST PASS ONLY',            *\n               'IN RANGE 1-10')\n         SPACE 1\nSPLENGTH IKJSUBF\n##PLEN   IKJIDENT 'NUMBER OF LINES PER PAGE',MAXLNTH=3,FIRST=NUMERIC,  *\n               OTHER=NUMERIC,VALIDCK=PLENGTCK,                         *\n               HELP=('NUMBER OF LINES PER PAGE',                       *\n               'IN RANGE 33-132')\n         SPACE 1\nSRMSI    IKJSUBF\n##RMSI   IKJIDENT 'NUMBER OF \"RM\" ENTRIES PER REMOTE',MAXLNTH=3,       *\n               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=RMSIZECK,           *\n               HELP=('MAXIMUM NUMBER OF CARDS WITHIN SINGLE REMOTE',   *\n               'A REMOTE SEQUENCE CONSISISTS OF ALL CARDS DELIMITED BY *\n               A PAIR OF .RM CARDS',                                   *\n               'IN RANGE 1:255')\n         SPACE 1\nSSEQC    IKJSUBF\n##SEQC   IKJIDENT 'INPUT RECORD SEQUENCE NUMBER FIELD',ASTERISK,       *\n               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=SEQCCK,   *\n               HELP=('PLACE IN RECORD WHERE SEQUENCE NUMBER IS FOUND','*\n               \"*\" TO DEFAULT TO LENGTH OF RECORD - 8 , FOR RECFM=V',  *\n               'IN RANGE 0:240')\n         SPACE 1\nSSREF    IKJSUBF\n##SRE    IKJIDENT 'NUMBER OF \"SR\" ENTRIES',MAXLNTH=4,                  *\n               FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=SREFCK,             *\n               HELP=('MAXIMUM NUMBER OF ENTRIES IN SYMBOLIC REFERENCE D*\n               ICTIONARY',                                             *\n               'IN RANGE 1:4096')\n         SPACE 1\nSSLNGT   IKJSUBF\n##SRL    IKJIDENT 'LENGTH OF AN \"SR\" ENTRY',MAXLNTH=3,FIRST=NUMERIC,   *\n               OTHER=NUMERIC,VALIDCK=SRLCK,                            *\n               HELP=('MAXIMUM LENGTH OF A SYMBOLIC REFERENCE',         *\n               'IN RANGE 4:240')\n         SPACE 1\nSTM      IKJSUBF\n##TM     IKJIDENT 'BOTTOM MARGIN',                                     *\n               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,VALIDCK=TMCK,     *\n               HELP=('NUMBER OF LINES BETWEEN TOP OF PAGE AND TEXT')\n         SPACE 1\nSREV     IKJSUBF\n##REV    IKJIDENT 'LINE WIDTH FOR REVERSE',MAXLNTH=3,FIRST=NUMERIC,    *\n               OTHER=NUMERIC,VALIDCK=REVCK,DEFAULT='66',               *\n               HELP=('MAXIMUM LINE LENGTH PRINTED',                    *\n               'IN RANGE 1:144')\n         SPACE 3\n         IKJENDP\n         PRINT GEN\n         STITL 'CONSTANTS'\nHEX      DC    C'0123456789ABCDEF'\nHEXTRTAB EQU   HEX-C'0',256,C'C'\n         ORG\n         SPACE 3\nSYMBTR   DC    256X'00'      /TRANSLATE TABLE FOR INITIAL SR VALUES\n         ORG   SYMBTR+C'+'\n         DC    X'04'         /SIGNAL \"+\"\n         ORG   SYMBTR+C'&&'\n         DC    X'04'         /SIGNAL \"&\"\n         ORG   SYMBTR+C'='\n         DC    X'08'         /SIGNAL \"=\"\n         ORG\n         SPACE 1\nNUMBTAB  DC    256X'04'      /TRANSLATE TABLE FOR NUMERIC KEYWORDS\n         ORG   NUMBTAB+C'K'  /FLAG \"K\" AS 08, VALID ONLY AT END\n         DC    X'08'\n         ORG   NUMBTAB+C'0'  /FLAG DIGITS AS 00, VALID ANYWHERE\n         DC    10X'00'\n         ORG\n         EJECT\n*   ERROR MESSAGES\n         SPACE 1\nER1      DC    C'**>VALID FORMAT IS ''+K=V'' OR ''&&K=V'''\nER9      DC    C'**>PROBLEMS IN PARSE,NOTIFY THE SYSTEM''S GROUP'\nER10     DC    C'**> \"NSCRIPT\" ENDED DUE TO ERROR .'\nER11     DC    C' ERROR CODE  '\nER12     DC    C'**>OBTAIN'\nER13     DC    C'**>LOCATE'\nER142    DC    C'2) CONTINUE MEANS IGNORE ATTN.'\nER143    DC    C'3) ABEND    MEANS EXIT IMMEDIATELY'\nER141    DC    C'1) FREE     MEANS FREE DATA SETS AND EXIT'\nER15     DC    C'****> ENTER \"F\" , \"C\" OR \"A\" .'\nER16     DC    C'**> WARNING : LINES MAY BE MISSING FROM OUTPUT'\nER18     DC    C'COMPLETION CODES : SYSTEM -     , USER -     '\nEREND    EQU   *\nERRNUM   DC    C'SCR001I OPERAND IS NOT VALID NUMERIC'\nERRSMALL DC    C'SCR002I OPERAND IS LESS THAN PERMITTED RANGE'\nERRLARGE DC    C'SCR003I OPERAND IS LARGER THAN PERMITTED RANGE'\n         SPACE 1\nATTOUT   DC    C'**> ENTER \"F\"(FREE) ,\"C\"(CONTINUE) OR \"A\"(ABEND) +'\n         EJECT\n*\n***>   \"LIST\" FORMS FOR DAIR CODES 18 , 0C , 1C , 08 AND ATTACH\n*\n         SPACE 2\n         DS    0F\n         DS    0F                                                BASTNJ\nDA10CONS DC    X'0010'                                           BASTNJ\n         DC    XL6'00'                                           BASTNJ\n         DC    CL8' '                                            BASTNJ\nDA10END  EQU   *                                                 BASTNJ\n         SPACE 2                                                 BASTNJ\n         SPACE 1\nDA18CONS DC    X'0018'\n         DC    3H'0'\n         DC    F'0'\n         DC    2CL8' '\n         DC    CL2' '\n         DC    X'08'\n         DC    X'10'\n         DC    CL8' '\nDA18END  EQU   *\n         SPACE 2\nCNCONS   DC    X'000C'\n         DC    3H'0'\nCNCEND   EQU   *\n         SPACE 2\nDA1CONS  DC    X'001C'\n         DC    2H'0'\n         DC    X'00'\n         DC    X'08'\n         DC    2CL8' '\nDA1CEND  EQU   *\n         SPACE 2\nDA08CNST DC    X'0008'\n         DC    3H'0'\n         DS    A\n         DC    3CL8' '\n         DC    4F'0'\n         DC    2CL8' '\n         DC    3X'08'\n         DC    X'00'         /NOT PERMANENT\n         DC    AL3(0)\n         DC    X'00'                                              *TSM*\nBLANKS8  DC    CL8' '\n         ATTACH SF=L,SHSPV=78,SZERO=NO\n         DC    F'0'         /ADD. OF MESSAGE WRITER\nHALFONE  DC    H'1'         /I.D. FOR C.P.\nLFORMS   EQU   *\n         SPACE 2\nALICONS  DC    H'4'\n         DC    CL16'SYSIN',H'0'                                  BASTNJ\n         DC    CL16'SYSTERM',H'0'                                BASTNJ\n         DC    CL16'SYSCONS',H'0'                                BASTNJ\n         DC    CL16'SYSPRINT',H'0'                               BASTNJ\n         DC    CL16'SYSLIB',H'0'                                 BASTNJ\nALIEND   EQU   *\nHALF3    DC    H'3'\n         SPACE 2\n*  TEST CONSTANTS FOR DATA SET TO BE ALLOCATED AS \"NEW\" .\n         SPACE 1\nOLDDS1   DC    H'8'\nOLDDS2   DC    X'17080008'\n         SPACE 1\n*   CONSTANTS FOR DAIR \"08\" (NEW DATA SET)\n         SPACE 1\nDAIRNEW  DC    F'1680'      /AVERAGE BLOCK SIZE\n         DC    F'1'         /NUMBER OF PRIMARY TRACKS\n         DC    F'1'         /  \"    \"  SECONDARY TRACKS\n         DC    F'28'        /NUMBER OF DIRECTORY BLOCKS (OPTIONAL)\n         SPACE 2\n*\n***>  FLAGS FOR CAMLST\n*\n         SPACE 1\n         DS    0F\nCAMLSTL  DC    AL1(68)\n         DC    AL1(0)\n         DC    AL1(0)\n         DC    AL1(0)\n         SPACE 1\n*              DEFAULT QUALIFIER LISTS FOR DEFAULTA\nQUALIN   DFLTAQ PREFIX=QLIN,DSECT=NO,QUAL=(TEXT,SCRIPT,MEMO)     BASTNJ\nQUALCN  DFLTAQ PREFIX=QLCN,DSECT=NO,QUAL=(SCRIPT,MEMO,TEXT)\nQUALLB  DFLTAQ PREFIX=QLLB,DSECT=NO,QUAL=(MEMO,SCRIPT,TEXT)\nQUALPR  DFLTAQ PREFIX=QLPR,DSECT=NO,QUAL=(LIST)\n         STITL 'EQUATES'\nZERO     EQU   X'00'\nPREFIX   EQU   X'20'\nBLANK    EQU   C' '\nQUOTES   EQU   X'40'\nPRESENT  EQU   X'80'\nDSNLAST  EQU   X'FF'\nMAXLEN   EQU   120    /MAXIMUM PARAMETER LENGTH\nEQUAL    EQU   C'='\nASTERISK EQU   C'*'\nONE      EQU   C'1'\nRECFMV   EQU   X'40'\nRECFMU   EQU   X'80'\nOBTFLAG  EQU   X'C1'     /FLAGS FOR OBTAIN\nPERIOD   EQU   C'.'\nDSNEW    EQU   X'04'\nUNITSTRK EQU   X'80'\nATT#A    EQU   C'A'\nATT#C    EQU   C'C'\nATT#F    EQU   C'F'\nATT#Q    EQU   C'?'\nCOMPF    EQU   X'03'\n         STITL 'INSTRUCTIONS FOR EX(ECUTE)'\nMOVEDSN  MVC   DSNAMEP+2(0),0(R8)\nMOVEMNM  MVC   DA08MNM(0),0(R8)\nMOVEPSWD MVC   DA08PSWD(0),0(R8)\nMOVEPR4  MVC   0(0,R7),0(R5)\nMOVEDSNW MVC   DA08BLK(0),DAIRNEW\nCLEANBUF MVC   1(0,R7),0(R7)\n         STITL 'STORAGE AREAS AND DSECTS'\n         IKJPPL\n*\n***>   DAPL\n*\n         SPACE 2\nDAPLUPT  EQU   PPLUPT\nDAPLECT  EQU   PPLECT\nDAPLECB  EQU   PPLECB\nDAPLPSCB EQU   PPLPCL\nDAPLDAPB EQU   PPLANS\n         SPACE 3\nECB      DS    F\nANS      DS    F\nKEEPR    DS    F\nTCBAD    DS    F          /ADD. OF TCB FOR ATTACH-DETACH\n         SPACE 5\n        DFLTAP DSECT=NO\n         SPACE 2\n        DFLTAD DSECT=NO\n         SPACE 2\n       DFLTAAN DSECT=NO,PREFIX=PRNT\n         SPACE 2\n*\n***>  LIST FORMS FOR DAIR CODE 08 AND ATTACH\n*\n         SPACE 2\nDA08CD   DS    CL2     /DAIR ENTRY CODE\nDA08FLG  DS    X       /FUNCTIOS TO BE PERFORMED WHEN RC=0\n         DS    X\nDA08DARC DS    H       /DYN ALLOC R.C.\nDA08CTRC DS    H       /CATALOG R.C.\nDA08PDSN DS    A       /PTR TO DSNAME\nDA08DDN  DS    CL8     /DDNAME\nDA08UNIT DS    CL8     /UNIT NAME\nDA08SER  DS    CL8     /VOLUME SERIAL\nDA08BLK  DS    F       /AVERAGE BLOCK LENGTH\nDA08PQTY DS    F       /PRIMARY SPACE QUANTITY\nDA08SQTY DS    F       /SECONDARY SPACE QUANTITY\nDA08DQTY DS    F       /DIRECTORY BLOCK QUANTITY\nDA08MNM  DS    CL8     /MEMBER NAME\nDA08PSWD DS    CL8     /PASSWORD\nDA08DSP1 DS    X       /DATA SET STATUS\nDA08DPS2 DS    X       /DATA SET DISPOSITION\nDA08DPS3 DS    X       /DATA SET CONDITIONAL DISPOSITION\nDA08CTL  DS    X       /FLAGS FOR DAIR\n         DS    CL3     /RESERVED\nDA08DSO  DS    CL1     /DSORG\nDA08ALN  DS    CL8     /ATTR-LIST-NAME\n         SPACE 2\nLATT     ATTACH SF=L,SZERO=NO\n         SPACE 2\nDAIRMSWR DS    F          /ADD. OF MESSAGE WRITER(IKJEFF02)\nDAIRID   DS    H          /I.D. FOR DAIRFAIL\n         SPACE 3\nDSNAMEP  DS    H,CL44     /BUFFER FOR DSNAME TO BE ALLOCATED\n         SPACE 1\nDAIRRC   DS    F         /DAIR RETURN CODE (R15)\n         SPACE 2\n*\n***>  DAIRFAIL PARAMETER LIST\n*\n         SPACE 1\nFAILDAPL DS    A         /PTR TO DAPL\nFAILRC   DS    A         /PTR TO R.C. (R15)\nFAILMSWR DS    A         /PTR TO ADD. OF MESSAGE WRITER\nFAILID   DS    A         /PTR TO I.D. OF C.P.\n         SPACE 2\n*\n***> DAIR CODE \"1C\" (ALLOCATE TERMINAL)\n*\n         SPACE 1\n         ORG   DSNAMEP+2     /OVERLAY ON DSNAME BUFFER (FWRD. BOUND)\nDA1CCD   DS    CL2           /ENTRY CODE \"1C\"\nDA1CFLG  DS    H             /RESERVED FIELD=0\nDA1CDARC DS    H             /R.C. FROM DYNAMIC ALLOC.\n         DS    X             /RESERVED=0\nDA1CCTL  DS    X             /CONTROL BYTE (PERMANENT ALLOC.)\nDA1CDDN  DS    CL8           /DDNAME\nDA1CALN  DS    CL8           /ATTR.-LIST NAME\n         ORG\n         SPACE 2\n*\n***> DAIR CODE \"18\" (FREE)\n*\n         SPACE 1\n         ORG   DA08CD         /OVERLAY DAIR CODE \"08\" (ALLOC.)\nDA18CD   DS    CL2            /ENTRY CODE \"18\"\nDA18FLG  DS    H              /FLAGS FOR DAIR TO SET\nDA18DARC DS    H              /DYNAMIC ALLOC. RETURN CODE\nDA18CTRC DS    H              /CATALOG RETURN CODE\nDA18PDSN DS    A              /PTR. TO DSNAME BUFFER\nDA18DDN  DS    CL8            /DDNAME\nDA18MNM  DS    CL8            /MEMBER NAME\nDA18SCLS DS    CL2            /SYSOUT CLASS (BLANK)\nDA18DPS2 DS    X              /NORMAL DISP. -> KEEP\nDA18CTL  DS    X              /UNALLOCATE PERM. ALLOC.\nDA18JBNM DS    CL8            /JOB NAME (BLANK)\n         ORG\n         SPACE 2                                                 BASTNJ\n         ORG   DA08CD                                            BASTNJ\nDA10CD   DS    CL2                                               BASTNJ\nDA10FLG  DS    H                                                 BASTNJ\nDA10DARC DS    H                                                 BASTNJ\n         DS    CL2                                               BASTNJ\nDA10DDN  DS    CL8                                               BASTNJ\n         ORG\n         SPACE 2                                                 BASTNJ\n         SPACE 2\nCNCTLNGT DS    F                  /FOR LENGTH OF AREA FOR CONCAT.\n         SPACE 1\nCNCTLNG1 DS    F                  /SECOND LEVEL LENGTH FOR CONCAT\n         SPACE 1\nCNCTADD  DS    A                  /SECOND LEVEL ADD. OF CONCAT AREA\n         SPACE 1\nCNCT1    DS    A    /PTR. TO FIRST PDE FOR CONCAT\n         SPACE 1\nPRMSCR   DS    2A   /PARM. LIST FOR \"NSCRIPT\"\n         SPACE 1\nALII     DS    H    /# OF DDNAMES WITH ALII FOLLOWING\nSYSIN    DS    2CL8,H                  PRIMARY INPUT FILE        BASTNJ\nSYSTERM  DS    2CL8,H                  MESSAGE FILE              BASTNJ\nSYSCONS  DS    2CL8,H       SYSCONINPUT FILE (TERMINAL)          BASTNJ\nSYSPRINT DS    2CL8,H                  OUTPUT FILE               BASTNJ\nSYSLIB   DS    2CL8,H                  LIBRARY (IES)             BASTNJ\n         ORG   DA08CD                                            BASTNJ\nALIIDUM  DS    H                                                 BASTNJ\nSYSIN1   DS    CL16                                              BASTNJ\nSYSTR1   DS    CL16                                              BASTNJ\nSYSCO1   DS    CL16                                              BASTNJ\nSYSPR1   DS    CL16                                              BASTNJ\nSYSLI1   DS    CL16                                              BASTNJ\n         ORG\n         SPACE 1\nSTWAIT   DS    X      /\"STOP\" + \"WAIT\" FLAG\n         SPACE 1\nPRTETR   EQU   STWAIT   /\"TE\" + \"TR\" FLAG\n         SPACE 1\nRECFM    DS    X     /FLAG FOR RECFM\n         SPACE 2\n***>   LIST FORM OF \"STAX\" + VARIABLES FOR IT\n         SPACE 1\nSTXLST   STAX  ATTEN,MF=L\n         SPACE 1\n         SPACE 1\nATTIN    DS    C              /INPUT BUFFER FOR ATTENTION\nABENDC   DS    CL3            /BUFFER FOR ABEND CODES\nDWORK    DS    D              /WORK AREA FOR CVD + UNPK\nERRMSG   DC    AL2(ERRMSGE-ERRMSG,0)\nERRMSG1  DC    C'**>VALID RANGE FOR '\nERRMSG2  DC    C'SCHARACTER '\n         DC    C'XX TO XXXXX'\nERRMSGE  EQU   *\nABNDMSG  DS    CL45           /AREA FOR ABEND MESSAGE\n         SPACE 2\nPPLEND   EQU   *\n         EJECT\n         IKJCPPL\n         EJECT\nVALPAR   DSECT  ,       /DSECT FOR PARAMETERS PASSED TO VALIDCK\nPDEADR   DS    A\nUSERWORD DS    A\nVALMSG   DS    A        /ADD. FOR A SECOND LEVEL MESSAGE\n         EJECT\nATTPARM  DSECT   ,       /DSECT FOR PARM. LIST AT ATTENTION INT.\nATTTAIE  DS    A         /ADD. OF TAIE\nATTIBUF  DS    A         /ADD. OF INPUT BUFFER\nATTUSERP DS    A         /ADD. OF USER PTR.\n         EJECT\nQST      DSECT   ,      /DSECT FOR QSTRING PDE\nQSTSTRP  DS    A        /POINTER TO STRING\nQSTLNGT  DS    H        /LENGTH OF STRING\nQSTFLG   DS    X        /FLAGS\nQSTRSVD  DS    X        /RESERVED\n         EJECT\n         IKJDAP0C\nDA0CDDN  EQU   *\n         EJECT\nDSNDSECT DSECT    ,    /DSECT FOR DSTHING PDE (INCLUDING \"LIST\")\nDSNPTRN  DS    A      /POINTER TO DSNAME\nDSNLEN1  DS    H      /LENGTH OF DSNAME\nDSNFLG1  DS    C      /FLAGS\nDSNRSV1  DS    C      /RESERVED\nDSNPTRM  DS    A      /POINTER TO MEMBER NAME\nDSNLEN2  DS    H      /LENGTH OF MEMBER NAME\nDSNFLG2  DS    C      /FLAGS\nDSNRSV2  DS    C      /RESERVED\nDSNPTRP  DS    A      /POINTER TO PASSWORD\nDSNLEN3  DS    H      /LENGTH OF PASSWORD\nDSNFLG3  DS    C      /FLAGS\nDSNRSV3  DS    C      /RESERVED\nDSNNEXT  DS    A      /POINTER TO NEXT ENTRY IN THE LIST\n*                     /  IF LAST THEN X'FF' IN UPPER BYTE\n         EJECT\nDSCBF1   DSECT   ,        /DSECT FOR FORMAT 1 DSCB & LOCATE\nLOCWORK  DS    265C       /WORK AREA FOR LOCATE\n         ORG   LOCWORK+6\nVOLSER   DS    CL6        /VOLUME SERIAL (FROM LOCATE)\n         ORG\n         DS    CL7        /FILLER (FOR DOUBLE-WORD BOUNDARY)\n         SPACE 1\n*\n***>   \"LIST\" FORM FOR CAMLST\n*\n         SPACE 1\nDSCBL    EQU   *\n         DS    AL1         /FLAGS (3 BYTES)\n         DS    AL1\n         DS    AL1\n         DS    AL1         /NO OPTION THREE (0)\nDSNPTR   DS    A           /PTRS. TO PARAMETERS\nVOLPTR   DS    A\nWORKPTR  DS    A\nDSNVAL   DS    CL44        /BUFFER FOR PREFIXING USERID TO DSNAME\n         SPACE 1\n         ORG   LOCWORK\n         IECSDSL1 (1)\n         ORG\nOBTERR   EQU   DS1DSNAM     /WORK AREA FOR ERROR MESSAGE\nPDWORK   EQU   VOLPTR       /WORK AREA FOR \"CVD\"\nDSCBLEND EQU   *\n         EJECT\n         IKJPSCB\n         EJECT\nSTAEPLST DSECT   ,     /PARM. LIST PASSED TO STAI EXIT\nSTAEPARP DS    A       /ADD. OF PARM. LIST\nSTAEFLGS DS    C       /FLAGS\nSTAECODE DS    CL3     /COMPLETION CODES\nSTAEPSW  DS    D       /PSW AT ABEND\nSTAELPSW DS    D       /LAST PSW BEFORE ABEND\nSTAEREGS DS    16F     /REGS. 0-15 AT ABEND\nSTAEVARS DS    CL16    /P.P <=> SV.P.\n         SPACE 3\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STITL": {"ttr": 2058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x965\\x9f\\x00\\x965\\x9f\\x19W\\x00\\x16\\x00\\x16\\x00\\x00\\xc3\\xc2\\xe3\\xf2\\xf4\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-12-24T00:00:00", "modifydate": "1996-12-24T19:57:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "CBT249"}, "text": "         MACRO\n&L       STITL &TIT\n.*             THIS MACRO IS USED IN CONJUNCTION WITH MTITL TO\n.*             SPECIFY THE SUB-TITLE FOR A TITLE CARD.\n.*             THE MAIN PORTION OF THE TITLE IS SPECIFIED ONCE,\n.*             VIA MTITL, WHILE EACH STITL SPECIFIES ITS OWN\n.*             SUB-TITLE, WHICH IS PLACED ON THE RIGHT HAND SIDE.\n.*             AN OPERAND OF OFF GENERATES A TITLE WITH NO SUB-TITLE.\n         GBLC  &MTITLE\n         LCLC  &STIT\n         AIF   (T'&TIT EQ 'O').OFF\n         AIF   ('&TIT' EQ 'OFF').OFF\n         AIF   ('&TIT'(1,1) EQ '''' AND '&TIT'(K'&TIT,1) EQ '''').OK\n         MNOTE 4,'SUBTITLE NOT DELIMITED BY \"''\" - IGNORED'\n&STIT    SETC  '*** INVALID SUBTITLE ***'\n         AGO   .TIT\n.OK      ANOP\n&STIT    SETC  '&TIT'(2,K'&TIT-2)\n.TIT     TITLE '&MTITLE- &STIT'\n         MEXIT\n.OFF     TITLE '&MTITLE'\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT287/FILE287.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT287", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}