{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20190707185512000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 3120, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "GREG.REVIEW.CLIST", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"GREG.REVIEW.CLIST": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 3120, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "190167", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x0f'", "DS1LSTAR": "b'\\x00\\x00$'", "DS1TRBAL": "b'\\x17\\x82'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f,\\xd0\\x00\\x04\\x98\\x90`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f,\\xd0\\x00\\x04\\x98\\x90`'", "b'X\\xf5\\x12\\x00\\x00\\x00\\x02V\\x00\\x0c\\x02V\\x00\\x0c\\x00\\x01'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"GUESS#": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82\\x08_\\x00\\x82\\x08_\\x13C\\x00B\\x00B\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-03-26T00:00:00", "modifydate": "1982-03-26T13:43:00", "lines": 66, "newlines": 66, "modlines": 0, "user": "GREG"}, "text": "/* )STARTHELP\n/* )F FUNCTION -\n/*    GUESS# GIVES YOUR KIDS SOMETHING TO DO WHEN ACCOMPANYING\n/*    PARENT TO DATA CENTER. TEACHES BINARY SEARCH STRATEGY AND\n/*    ALGEBRA OF INEQUALITIES.\n/*    OBJECT: TO GUESS A RANDOM NUMBER 0<N<101 IN FEWEST POSSIBLE TRIES.\n/* )X SYNTAX -\n/*    GUESS#\n/* )O OPERANDS -\n/*    NO OPERANDS\n/* )ENDHELP\n/*\nERROR GOTO STUPID\nSET &BG EQ 0\nREPEAT: +\nSET &TG EQ 0\nSET &LH EQ 101\nSET &HL EQ 0\nSET &Y EQ 0\nSET N EQ 1\nDO WHILE &N LE 2\n  SET &X EQ &SUBSTR(8,&SYSTIME)\n  SET &Y EQ &STR(&Y)&STR(&X)\n  SET M EQ 1\n  DO WHILE &M LE 50\n    SET M EQ &M+1\n  END\n  SET N EQ &N+1\nEND\nSET &Y EQ 1+&Y\nWRITE I'M THINKING OF A NUMBER BETWEEN 0 AND 101\nGUESS: WRITE WHAT'S YOUR GUESS?   &HL < NUMBER < &LH\nREAD &G\nIF &DATATYPE(&G) NE NUM THEN +\nDO\n  STUPID: WRITE &G IS NOT A NUMBER, STUPID.\n  GOTO GUESS\nEND\n  SET &TG EQ &TG+1\nDO WHILE &G = &Y\nWRITE YOU GUESSED IT IN &TG TRIES.\nIF &TG EQ &BG THEN +\nWRITE THIS EQUALS YOUR BEST PREVIOUS GUESS.\nIF &TG LT &BG THEN +\nDO\nWRITE THIS IS &EVAL(&BG-&TG) BETTER THAN YOUR PREVIOUS BEST OF &BG TRIES\n  SET &BG EQ &TG\nEND\nIF &TG GT &BG AND &BG NE 0 THEN +\nWRITE YOUR BEST PREVIOUS GUESS WAS &BG TRIES.\nIF &BG EQ 0 THEN SET &BG EQ &TG\nWRITE WOULD YOU LIKE TO PLAY AGAIN? Y/N\nREAD &ANS\nIF &ANS EQ Y THEN GOTO REPEAT\nEXIT\nEND\nDO WHILE &G LT &Y\n  IF &G GT &HL THEN SET &HL EQ &G\n  WRITE GUESS HIGHER.\n  GOTO GUESS\nEND\nDO WHILE &G GT &Y\n  IF &G LT &LH THEN SET &LH EQ &G\n  WRITE GUESS LOWER.\n  GOTO GUESS\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RANDOM": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x001\\x00\\x82\\x08_\\x01\\x10\\x07\\x8f#T\\x00\\x11\\x00\\x11\\x00\\x01\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-03-26T00:00:00", "modifydate": "2010-03-19T23:54:31", "lines": 17, "newlines": 17, "modlines": 1, "user": "GREG"}, "text": "PROC 1 DIG\n/*                                                                 */\n/* THIS IS YOUR BASIC PRIMITIVE RANDOM NUMBER GENERATOR.           */\n/* USED BY \"UBOAT\" AND \"GUESS#\".                                   */\n/*                                                                 */\nSET &Y EQ 0\nSET N EQ 1\nDO WHILE &N LE &DIG\n  SET &X EQ &SUBSTR(8,&SYSTIME)\n  SET &Y EQ &STR(&STR(&Y)&STR(&X))\n  SET M EQ 1\n  DO WHILE &M LE 120  /* ARBITRARY - ALLOWS TIMER TO RUN FOR A WHILE.\n    SET M EQ &M+1\n  END\n  SET N EQ &N+1\nEND\nEXIT CODE(&STR(&Y))\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REVINIT": {"ttr": 27, "alias": false, "halfwords": 30, "notes": 0, "parms": "b',\\x00\\x00Q\\x01\\x10\\x07\\x8f\\x01\\x14\\x02\\x8f\\x02(\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "44.00", "flags": 0, "createdate": "2010-03-19T00:00:00", "modifydate": "2014-01-28T02:28:51", "lines": 12, "newlines": 12, "modlines": 0, "user": "GREG"}, "text": "PROC 0\n/*   CLIST TO ALLOCATE THE REVIEW/RFE PROFILE DATA SET FOR MVS/370 ONLY\nSET PROFDSN = &SYSUID..REVPROF\nIF &SYSDSN('&PROFDSN') = OK THEN ALLOC F(REVPROF) DA('&PROFDSN')\nELSE DO\nCONTROL NOMSG\nFREE ATTR(PROFATTR)\nCONTROL MSG\nATTR PROFATTR RECFM(F B) LRECL(80) BLKSIZE(2960)\nALLOC F(REVPROF) DA('&PROFDSN') NEW USING(PROFATTR) DIR(10) SP(2 2) TR\nFREE ATTR(PROFATTR)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVLISTC": {"ttr": 29, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'-\\x00\\x00\\x06\\x01\\t2o\\x01\\x14#_\\x16\\x02\\x00\\x10\\x00\\x0e\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "45.00", "flags": 0, "createdate": "2009-11-22T00:00:00", "modifydate": "2014-08-23T16:02:06", "lines": 16, "newlines": 14, "modlines": 0, "user": "GREG"}, "text": "PROC 1 DSNAME USERCAT\nCONTROL NOPROMPT\n/*   COLLECT LISTCAT OUTPUT FOR FULLSCREEN DISPLAY BY RFE.   */\n/*   LINE LIMIT OF 300 IS ARBITRARY - INCREASE IF REQUIRED.  */\nSET SYSOUTTRAP = 300\nLISTCAT ENTRIES('&DSNAME') ALL\nIF &USERCAT = USERCAT THEN +\nLISTCAT ENTRIES('&DSNAME') ALL CATALOG('&DSNAME')\nSET SYSOUTTRAP = 0\nSET CATLINES = &SYSOUTLINE\nSET N = 0\nLOOP: SET N = &N + 1\nIF &N > &CATLINES THEN END\nSET CATMSG = &&SYSOUTLINE&N\nREVCATCH &STR(&CATMSG)\nGOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVOUTJB": {"ttr": 31, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'-\\x00\\x00&\\x01\\x055\\x1f\\x01\\x14#_\\x16\\x03\\x00\\x0e\\x00\\x0c\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "45.00", "flags": 0, "createdate": "2005-12-17T00:00:00", "modifydate": "2014-08-23T16:03:26", "lines": 14, "newlines": 12, "modlines": 0, "user": "GREG"}, "text": "PROC 0 JOB()\nCONTROL NOPROMPT\n/*   COLLECT JOB STATUS MESSAGES FULLSCREEN DISPLAY BY RFE.   */\n/*   LINE LIMIT OF 300 IS ARBITRARY - INCREASE IF REQUIRED.   */\nSET SYSOUTTRAP = 300\nST &JOB\nSET SYSOUTTRAP = 0\nSET JOBLINES = &SYSOUTLINE\nSET N = 0\nLOOP: SET N = &N + 1\nIF &N > &JOBLINES THEN END\nSET STATMSG = &&SYSOUTLINE&N\nREVOUTST &STR(&STATMSG)\nGOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVSB": {"ttr": 33, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'-\\x00\\x00P\\x01\\x14#O\\x01\\x14#_\\x16\\x05\\x00\\x08\\x00\\x06\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "45.00", "flags": 0, "createdate": "2014-08-22T00:00:00", "modifydate": "2014-08-23T16:05:50", "lines": 8, "newlines": 6, "modlines": 0, "user": "GREG"}, "text": "PROC 1 DSNAME\nCONTROL NOPROMPT\n/*   SUBMIT JOB STREAM AND COLLECT SUBMIT COMMAND   */\n/*   RESPONSE FOR FULLSCREEN DISPLAY BY RFE.        */\nSET SYSOUTTRAP = 1\nSUBMIT &DSNAME\nSET SYSOUTTRAP = 0\nREVMSG &STR(&SYSOUTLINE1)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVTAPE": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x08\\x00\\x00\\x00\\x00\\x87#/\\x00\\x89\\x18\\x0f\\x11E\\x00\\x1f\\x00\\x1c\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "08.00", "flags": 0, "createdate": "1987-08-20T00:00:00", "modifydate": "1989-06-29T11:45:00", "lines": 31, "newlines": 28, "modlines": 0, "user": "GREG"}, "text": "PROC 1 DSN VOLSER(REVIEW) UNIT(TAPE) LBL(BLP) FSN(1) PTF\nCONTROL NOFLUSH\n/*\n/*  CLIST TO SEE WHAT IS ON A TAPE VOLUME.\n/*\n/*  UNLESS AUTOMATIC VOLUME RECOGNITION IS EXPLOITED, USERS WITHOUT THE\n/*  MOUNT ATTRIBUTE WILL NOT GET VERY FAR.  CATALOGUED TAPE DATA SETS\n/*  CAN BE REVIEWED DIRECTLY WITHOUT THIS CLIST.  UNCATALOGUED\n/*  STANDARD LABELLED DATA SETS CAN ALSO BE REVIEWED DIRECTLY WITHOUT\n/*  THIS CLIST BY SPECIFYING UNIT AND VOLUME ON THE COMMAND, ONLY AS\n/*  LONG AS THE FILE SEQUENCE NUMBER IS ONE (1).  THIS CLIST CAN BE\n/*  USED TO REVIEW TAPE LABELS AS WELL AS TAPE DATA FILES.\n/*\n/*  IN THE EVENT OF ANY ABNORMAL TERMINATION WHICH FLUSHES THE CLIST,\n/*  REVFILE WILL NOT BE FREED, SO PLEASE ENSURE THAT YOU DO NOT\n/*  UNNECESSARILY HOG A TAPE DRIVE.\n/*\nIF '&LBL' = 'SL' OR '&LBL' = 'AL' THEN GOTO NOATTR\nIF &PTF =   THEN ATTR REVATTR DSORG(PS) BLKSIZE(32760) RECFM(U)\n   ELSE ATTR REVATTR DSORG(PS) BLKSIZE(7200) RECFM(F B) LRECL(80)\nALLOC FILE(REVFILE) DA(&DSN) USING(REVATTR) UNIT(&UNIT) LABEL(&LBL)  -\n      VOLUME(&VOLSER) POSITION(&FSN) SHR REUSE\nFREE ATTR(REVATTR)\nGOTO REVIT\n                           /* USE DCB INFORMATION FROM TAPE LABELS. */\nNOATTR:  -\nALLOC FILE(REVFILE) DA(&DSN) UNIT(&UNIT) LABEL(&LBL)  -\n      VOLUME(&VOLSER) POSITION(&FSN) SHR REUSE\nREVIT: REVIEW REVFILE FILE\nFREE FILE(REVFILE)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVUSPDS": {"ttr": 35, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'-\\x00\\x00\\x05\\x01\\x12\\x08_\\x01\\x14#_\\x16\\t\\x00\\x0f\\x00\\x0c\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "45.00", "flags": 0, "createdate": "2012-03-25T00:00:00", "modifydate": "2014-08-23T16:09:05", "lines": 15, "newlines": 12, "modlines": 0, "user": "GREG"}, "text": "PROC 3 SUBCMD PROGRAM DSNAME\nCONTROL NOPROMPT\n/*   COLLECT PDS SUBCOMMAND OUTPUT FOR FULLSCREEN DISPLAY   */\n/*   BY RFE.  THE LINE COUNT LIMIT OF 2000 IS ARBITRARY -   */\n/*   LARGE ENOUGH TO MAP IEANUC01 - INCREASE IF REQUIRED.   */\nSET SYSOUTTRAP = 2000\nPDS '&DSNAME' &STR(&SUBCMD) &STR(&PROGRAM)\nSET SYSOUTTRAP = 0\nSET PDSLINES = &SYSOUTLINE\nSET N = 0\nLOOP: SET N = &N + 1\nIF &N > &PDSLINES THEN END\nSET PDSMSG = &&SYSOUTLINE&N\nREVCATCH &STR(&PDSMSG)\nGOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UBOAT": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82\\x08_\\x00\\x82\\x08_\\x13Y\\x007\\x007\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-03-26T00:00:00", "modifydate": "1982-03-26T13:59:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "GREG"}, "text": "/*                                                                 */\n/* EXERCISE IN 3-DIMENSIONAL BINARY SEARCH.                        */\n/*                                                                 */\n/* NOTE: REQUIRES \"RANDOM\" TO BE INSTALLED IN SYS2.CMDPROC         */\n/*       OR EQUIVALENT                                             */\n/*                                                                 */\nSET &N EQ 7 /* OPTIMUM VALUE */\nWRITE YOU ARE THE CAPTAIN OF THE DESTROYER USS KLUDGE.\nWRITE AN ENEMY SUB HAS BEEN REPORTED IN YOUR AREA.\nWRITE YOUR MISSION: DESTROY IT BEFORE IT DESTROYS YOU.\nWRITE SPECIFY DEPTH CHARGE EXPLOSION POINT WITH A TRIO OF NUMBERS\nWRITE SEPARATED BY BLANKS OR COMMAS. E.G. 51,0,99\nWRITE THE FIRST NUMBER REPRESENTS COORDINATES SOUTH-NORTH 0-99.\nWRITE THE SECOND NUMBER REPRESENTS COORDINATES WEST-EAST 0-99.\nWRITE THE THIRD NUMBER REPRESENTS THE DEPTH. 0 = SURFACE, 99 = BOTTOM.\nWRITE YOU ARE SEARCHING A 100 X 100 X 100 CUBE.\nGOODLUCK: WRITE GOOD LUCK.\nWRITE\nRANDOM 2\nSET &A EQ &LASTCC\nRANDOM 2\nSET &B EQ &LASTCC\nRANDOM 2\nSET &C EQ &LASTCC\nSET &I EQ 1\nDO WHILE &I LE &N\nWRITENR SHOT #&I.. =>&STR( )\nAGAIN: +\nREAD &X,&Y,&Z\nIF &X-&A EQ 0 AND &Y-&B EQ 0 AND &Z-&C EQ 0 THEN +\nDO\nWRITE BOOM! YOU FOUND IT IN &I TRIES.\nREPLAY: WRITE ANOTHER GAME? Y/N\nREAD &YN\nIF &YN EQ Y THEN GOTO GOODLUCK\nEXIT\nEND\nSET &P EQ &STR()\nSET &Q EQ &STR()\nSET &R EQ &STR( AND )\nSET &S EQ &STR()\nIF &X GT &A THEN SET &P EQ NORTH\nIF &X LT &A THEN SET &P EQ SOUTH\nIF &Y GT &B THEN SET &Q EQ EAST\nIF &Y LT &B THEN SET &Q EQ WEST\nIF (&P EQ &STR() AND &Q EQ &STR()) THEN SET &R EQ &STR()\nIF &Z GT &C THEN SET &S EQ TOO LOW.\nIF &Z LT &C THEN SET &S EQ TOO HIGH.\nIF &Z EQ &C THEN SET &S EQ DEPTH OK.\nWRITE SONAR REPORTS SHOT WAS &P&Q&R&S\nSET &I EQ &I+1\nEND\nWRITE YOU HAVE BEEN TORPEDOED! ABANDON SHIP!\nWRITE THE SUBMARINE WAS AT &A, &B, &C..\nGOTO REPLAY\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT134/CBT.V500.FILE134.PDS/REVCLIST.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT134/CBT.V500.FILE134.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}