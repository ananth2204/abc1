{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201213144807000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 3120, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "GREG.REVIEW.DATA", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"GREG.REVIEW.DATA": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 3120, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3000, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200348", "DS1SCEXT": "b'\\x80\\x0c0'", "DS1SCALO": "b'P\\x00\\x00\\xd5'", "DS1LSTAR": "b'\\x00\\x06\\x0c'", "DS1TRBAL": "b'D\"'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f4\\x00\\x00\\x04\\x98p`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f4\\x00\\x00\\x04\\x98p`'", "b'X\\xf5\\x12\\x98\\x00\\x00\\x02\\x10\\x00\\x06\\x02\\x14\\x00\\x02\\x009'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$README": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b',\\x00\\x00\\x03\\x01\\x10\\x08\\x0f\\x01\\x14\\x03\\x0f\\x002\\x00\\x8e\\x00L\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "44.00", "flags": 0, "createdate": "2010-03-21T00:00:00", "modifydate": "2014-01-30T00:32:03", "lines": 142, "newlines": 76, "modlines": 0, "user": "GREG"}, "text": "Basic documentation about the REVIEW package\n--------------------------------------------\n\nREVIEW is a decades-old public domain application intended for\nthe TSO environment running on MVS-family operating systems.\n\nThe Release Notes are in member REVNOTES of the REVIEW.DATA data set.\n\nSee below for Installation Notes.\n\nAs of Release 43:\n\n(1) All BASSM and BSM instructions have been removed.\n\n    This means that under OS/390 and z/OS REVIEW is now expected\n    to run as a pure 31-bit application.  It also means that\n    REVIEW will no longer run under MVS/XA and MVS/ESA with\n    back levels of DFP which do not allow AMODE=31 BPAM and SAM.\n\n    Naturally, REVIEW continues to be a pure 24-bit application\n    under MVS/370.\n\n    Also note that REVIEW/RFE is only tested under MVS 3.8J\n    and most supported (at the time) releases of z/OS.\n\n\n(2) The REVIEW Front End (RFE) is now introduced.\n\n    RFE is a basic menu system allowing navigation to the various\n    components of the package.  The initial release of RFE\n    delivers the \"Data Set List\" and the \"TSO Command\" options.\n\n\nThe REVIEW/RFE package includes the following data sets:\n\n- REVIEW.DATA\n  This contains a copy of these notes, and intallation process\n  samples and other information such as the Release Notes.\n\n- REVIEW.LOAD\n  This contains the load modules of the REVIEW package which get\n  updated each release of REVIEW.\n\n- REVIEW.CLIST\n  This contains TSO CLISTs, some of which pertain to or are invoked\n  by REVIEW/RFE, and some of which have nothing to do with REVIEW.\n\n- REVIEW.HELP\n  This contains the members for the SYSHELP file.  It forms the\n  online documentation of the package outside the ISPF environment.\n\n- REVIEW.PANELS\n  This contains ISPF panels which may be of use if you want to\n  run REVIEW as an ISPF application.\n* NOTE: This data set is NOT included in the package for MVS/370.\n\n\nInstallation Notes\n==================\n\nThis package is made available for download as several ZIP archives.\n\nInstallation Steps:\n------------------\n\n1. Download each ZIP you require.\n2. UNZIP each archive to acquire the XMIT sequential file.\n3. RECEIVE each XMIT file to reconstruct a partitioned data set.\n4. Install each PDS as appropriate.\n   Other members in this data set supply sample jobs for some of these.\n\n\nSample JCL for uploading a file via a card reader:\n-------------------------------------------------\n\n\nAssumptions for this scenario are:\n(1) The file to be uploaded has fixed-length 80-byte records.\n(2) The file is not a job stream to be submitted, but is simply data.\n(3) The file is to be copied into a new data set called\n    HERC01.FB80.DATA\n(4) The carder reader to be used is device number 00C.\n(5) The carder reader is online to the system but not allocated\n    to any other address space such as JES2 or JES3.\n\n    \u00ddFor example, if the card reader is known to JES2 as\n    \"Reader 1\" then the JES2 operator command\n    $PRDR1\n    will \"drain\" the card reader, and so it will be deallocated\n    by JES2 (when the current work, if any, has finished),\n    thus making it available for allocation by other jobs.\u00a8\n\n//HERC01G  JOB ,GENER,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=4096K,NOTIFY=HERC01\n//STEP1   EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=00C,DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)\n//SYSUT2   DD  DSN=HERC01.FB80.DATA,DISP=(NEW,CATLG,DELETE),\n//             UNIT=SYSALLDA,SPACE=(TRK,(500,20),RLSE),\n//             DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SYSIN    DD  DUMMY\n//\n\n\n\nPerforming the RECEIVE\n----------------------\n\nFor z/OS, use the TSO/E RECEIVE command to process each XMIT file.\n\n\nFor MVS 3.8, a sample job to perform the RECEIVE assumming\nthe prerequisite RECV370 program is installed now follows:\n\n//HERC01R  JOB ,RECV370,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=4096K,NOTIFY=HERC01\n//*\n//RECVREV PROC LLQ=\n//RDEL    EXEC PGM=IEFBR14\n//RECVDEL  DD  DSN=HERC01.REVIEW.&LLQ,DISP=(MOD,DELETE),\n//             UNIT=SYSALLDA,SPACE=(TRK,0)\n//RECV370 EXEC PGM=RECV370\n//RECVLOG  DD  SYSOUT=*\n//XMITIN   DD  DSN=HERC01.REV&LLQ..XMI,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             UNIT=VIO,\n//             SPACE=(CYL,(5,1)),\n//             DISP=(NEW,DELETE,DELETE)\n//SYSUT2   DD  DSN=HERC01.REVIEW.&LLQ,\n//             UNIT=SYSALLDA, VOL=SER=??????,\n//             SPACE=(CYL,(15,2,20),RLSE),\n//             DISP=(NEW,CATLG,DELETE)\n//SYSIN    DD  DUMMY\n//        PEND\n//*\n//CLIST   EXEC RECVREV,LLQ=CLIST\n//DATA    EXEC RECVREV,LLQ=DATA\n//HELP    EXEC RECVREV,LLQ=HELP\n//LOAD    EXEC RECVREV,LLQ=LOAD\n//\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$READTXT": {"ttr": 27, "alias": false, "halfwords": 30, "notes": 0, "parms": "b',\\x00\\x00\\x17\\x01\\x141?\\x01\\x141?!\\x07\\x00<\\x00<\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "44.00", "flags": 0, "createdate": "2014-11-09T00:00:00", "modifydate": "2014-11-09T21:07:17", "lines": 60, "newlines": 60, "modlines": 0, "user": "GREG"}, "text": "\u00e2/\u00cb\u00d1\u00c4\u0080\u00c0?\u00c4\u00cd_\u00c1>\u00c8/\u00c8\u00d1?>\u0080/\u00c2?\u00cd\u00c8\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00f8/\u00c4,/\u00c5\u00c1\r\u008e\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\n\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\r\u008e\r\u008e\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00d1\u00cb\u0080/\u0080\u00c0\u00c1\u00c4/\u00c0\u00c1\u00cb\u0005?%\u00c0\u0080\u00f8\u00cd\u00c2%\u00d1\u00c4\u0080\u00c0?_/\u00d1>\u0080/\u00f8\u00f8%\u00d1\u00c4/\u00c8\u00d1?>\u0080\u00d1>\u00c8\u00c1>\u00c0\u00c1\u00c0\u0080\u00c3?\u00ca\r\u008e\u00c8\u00c7\n\u00c1\u0080\u00e8\u00eb|\u0080\u00c1>\u00ce\u00d1\u00ca?>_\u00c1>\u00c8\u0080\u00ca\u00cd>>\u00d1>\u00c5\u0080?>\u0080(\u00ee\u00eb\u0005\u00c3/_\u00d1%`\u0080?\u00f8\u00c1\u00ca/\u00c8\u00d1>\u00c5\u0080\u00cb`\u00cb\u00c8\u00c1_\u00cb\u0006\r\u008e\r\u008e\u00e8\u00c7\u00c1\u0080\u00ea\u00c1%\u00c1/\u00cb\u00c1\u0080+?\u00c8\u00c1\u00cb\u0080\n/\u00ca\u00c1\u0080\u00d1>\u0080_\u00c1_\u00c2\u00c1\u00ca\u0080\u00ea\u00e1\u00ee+|\u00e8\u00e1\u00eb\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u00e0\u00a0\u00e8\u00a0\u0080\u00c0/\u00c8/\u0080\u00cb\u00c1\u00c8\u0006\r\u008e\r\u008e\u00eb\u00c1\u00c1\u0080\u00c2\u00c1%?\u00cf\u0080\u00c3?\u00ca\u0080\u00f1>\u00cb\u00c8/%%/\u00c8\u00d1?\n>\u0080+?\u00c8\u00c1\u00cb\u0006\r\u008e\r\u008e\u00a0\u00cb\u0080?\u00c3\u0080\u00ea\u00c1%\u00c1/\u00cb\u00c1\u0080\u0094\u0093\u009a\r\u008e\r\u008e\u0088\u0091\u0089\u0080\u00a0%%\u0080\u00e2\u00a0\u00eb\u00eb(\u0080/>\u00c0\u0080\u00e2\u00eb(\u0080\u00d1>\u00cb\u00c8\u00ca\u00cd\u00c4\u00c8\u00d1?>\u00cb\u0080\u00c7/\u00ce\u00c1\u0080\u00c2\u00c1\u00c1>\u0080\u00ca\u00c1\n_?\u00ce\u00c1\u00c0\u0006\r\u008e\r\u008e\u0080\u0080\u0080\u0080\u00e8\u00c7\u00d1\u00cb\u0080_\u00c1/>\u00cb\u0080\u00c8\u00c7/\u00c8\u0080\u00cd>\u00c0\u00c1\u00ca\u0080|\u00eb\u0007\u0093\u0099\u0090\u0080/>\u00c0\u0080:\u0007|\u00eb\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00d1\u00cb\u0080>?\u00cf\u0080\u00c1\u00cc\u00f8\u00c1\u00c4\u00c8\u00c1\u00c0\r\u008e\u0080\u0080\u0080\u0080\n\u00c8?\u0080\u00ca\u00cd>\u0080/\u00cb\u0080/\u0080\u00f8\u00cd\u00ca\u00c1\u0080\u0093\u0091\u0005\u00c2\u00d1\u00c8\u0080/\u00f8\u00f8%\u00d1\u00c4/\u00c8\u00d1?>\u0006\u0080\u0080\u00f1\u00c8\u0080/%\u00cb?\u0080_\u00c1/>\u00cb\u0080\u00c8\u00c7/\u00c8\r\u008e\u0080\u0080\u0080\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00cf\u00d1%%\u0080>?\u0080%?>\n\u00c5\u00c1\u00ca\u0080\u00ca\u00cd>\u0080\u00cd>\u00c0\u00c1\u00ca\u0080(\u00ee\u00eb\u0007\u00ec\u00a0\u0080/>\u00c0\u0080(\u00ee\u00eb\u0007\u00e1\u00eb\u00a0\u0080\u00cf\u00d1\u00c8\u00c7\r\u008e\u0080\u0080\u0080\u0080\u00c2/\u00c4,\u0080%\u00c1\u00ce\u00c1%\u00cb\u0080?\u00c3\u0080\u00e0\u00e3&\u0080\u00cf\u00c7\u00d1\u00c4\u00c7\u0080\u00c0?\u0080>?\u00c8\u0080/%%?\u00cf\n\u0080\u00a0(|\u00e0\u00e1\u0015\u0093\u0091\u0080\u00e2&\u00a0(\u0080/>\u00c0\u0080\u00eb\u00a0(\u0006\r\u008e\r\u008e\u0080\u0080\u0080\u0080+/\u00c8\u00cd\u00ca/%%`\u008c\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00c4?>\u00c8\u00d1>\u00cd\u00c1\u00cb\u0080\u00c8?\u0080\u00c2\u00c1\u0080/\u0080\u00f8\u00cd\u00ca\u00c1\u0080\u0016\u0094\u0005\u00c2\u00d1\u00c8\u0080/\n\u00f8\u00f8%\u00d1\u00c4/\u00c8\u00d1?>\r\u008e\u0080\u0080\u0080\u0080\u00cd>\u00c0\u00c1\u00ca\u0080(\u00ee\u00eb\u0007\u0093\u0004\u0090\u0006\r\u008e\r\u008e\u0080\u0080\u0080\u0080\u00a0%\u00cb?\u0080>?\u00c8\u00c1\u0080\u00c8\u00c7/\u00c8\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0007\u00ea\u00e3\u00e1\u0080\u00d1\u00cb\u0080?>%`\u0080\u00c8\u00c1\u00cb\u00c8\u00c1\u00c0\u0080\u00cd\n>\u00c0\u00c1\u00ca\u0080(\u00ee\u00eb\u0080\u0093\u0006\u0098\u00a2\r\u008e\u0080\u0080\u0080\u0080/>\u00c0\u0080_?\u00cb\u00c8\u0080\u00cb\u00cd\u00f8\u00f8?\u00ca\u00c8\u00c1\u00c0\u0080\u0088/\u00c8\u0080\u00c8\u00c7\u00c1\u0080\u00c8\u00d1_\u00c1\u0089\u0080\u00ca\u00c1%\u00c1/\u00cb\u00c1\u00cb\u0080?\u00c3\u0080:\u0007|\u00eb\u0006\r\u008e\r\u008e\r\u008e\u0088\u0016\u0089\u0080\u00e8\n\u00c7\u00c1\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00e3\u00ca?>\u00c8\u0080\u00e1>\u00c0\u0080\u0088\u00ea\u00e3\u00e1\u0089\u0080\u00d1\u00cb\u0080>?\u00cf\u0080\u00d1>\u00c8\u00ca?\u00c0\u00cd\u00c4\u00c1\u00c0\u0006\r\u008e\r\u008e\u0080\u0080\u0080\u0080\u00ea\u00e3\u00e1\u0080\u00d1\u00cb\u0080/\u0080\u00c2/\u00cb\u00d1\u00c4\u0080_\u00c1>\u00cd\u0080\u00cb`\u00cb\u00c8\u00c1_\u0080/\n%%?\u00cf\u00d1>\u00c5\u0080>/\u00ce\u00d1\u00c5/\u00c8\u00d1?>\u0080\u00c8?\u0080\u00c8\u00c7\u00c1\u0080\u00ce/\u00ca\u00d1?\u00cd\u00cb\r\u008e\u0080\u0080\u0080\u0080\u00c4?_\u00f8?>\u00c1>\u00c8\u00cb\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u0080\u00f8/\u00c4,/\u00c5\u00c1\u0006\u0080\u0080\u00e8\u00c7\u00c1\u0080\u00d1>\u00d1\u00c8\u00d1/%\u0080\u00ca\n\u00c1%\u00c1/\u00cb\u00c1\u0080?\u00c3\u0080\u00ea\u00e3\u00e1\r\u008e\u0080\u0080\u0080\u0080\u00c0\u00c1%\u00d1\u00ce\u00c1\u00ca\u00cb\u0080\u00c8\u00c7\u00c1\u0080\u0082\u00e0/\u00c8/\u0080\u00eb\u00c1\u00c8\u0080<\u00d1\u00cb\u00c8\u0082\u0080/>\u00c0\u0080\u00c8\u00c7\u00c1\u0080\u0082\u00e8\u00eb|\u0080\u00e4?__/>\u00c0\u0082\u0080?\u00f8\u00c8\u00d1?>\u00cb\u0006\r\u008e\n\r\u008e\r\u008e\u00e8\u00c7\u00c1\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0007\u00ea\u00e3\u00e1\u0080\u00f8/\u00c4,/\u00c5\u00c1\u0080\u00d1>\u00c4%\u00cd\u00c0\u00c1\u00cb\u0080\u00c8\u00c7\u00c1\u0080\u00c3?%%?\u00cf\u00d1>\u00c5\u0080\u00c0/\u00c8/\u0080\u00cb\u00c1\u00c8\u00cb\u009a\r\u008e\r\u008e\u0005\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u00e0\u00a0\u00e8\u00a0\r\u008e\u0080\n\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c4?>\u00c8/\u00d1>\u00cb\u0080/\u0080\u00c4?\u00f8`\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u00cb\u00c1\u0080>?\u00c8\u00c1\u00cb\u008c\u0080/>\u00c0\u0080\u00d1>\u00c8/%%/\u00c8\u00d1?>\u0080\u00f8\u00ca?\u00c4\u00c1\u00cb\u00cb\r\u008e\u0080\u0080\u00cb/_\u00f8%\u00c1\u00cb\u0080/>\u00c0\u0080?\u00c8\u00c7\n\u00c1\u00ca\u0080\u00d1>\u00c3?\u00ca_/\u00c8\u00d1?>\u0080\u00cb\u00cd\u00c4\u00c7\u0080/\u00cb\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00c1%\u00c1/\u00cb\u00c1\u0080+?\u00c8\u00c1\u00cb\u0006\r\u008e\r\u008e\u0005\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006<|\u00a0\u00e0\r\u008e\u0080\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c4?>\u00c8/\u00d1>\u00cb\u0080\u00c8\u00c7\u00c1\u0080\n%?/\u00c0\u0080_?\u00c0\u00cd%\u00c1\u00cb\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0080\u00f8/\u00c4,/\u00c5\u00c1\u0080\u00cf\u00c7\u00d1\u00c4\u00c7\u0080\u00c5\u00c1\u00c8\r\u008e\u0080\u0080\u00cd\u00f8\u00c0/\u00c8\u00c1\u00c0\u0080\u00c1/\u00c4\u00c7\u0080\u00ca\u00c1%\u00c1/\u00cb\u00c1\u0080?\u00c3\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\n\u008e\r\u008e\u0005\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u00e4<\u00f1\u00eb\u00e8\r\u008e\u0080\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c4?>\u00c8/\u00d1>\u00cb\u0080\u00e8\u00eb|\u0080\u00e4<\u00f1\u00eb\u00e8\u00cb\u008c\u0080\u00cb?_\u00c1\u0080?\u00c3\u0080\u00cf\u00c7\u00d1\u00c4\u00c7\u0080\u00f8\u00c1\u00ca\u00c8/\u00d1>\u0080\u00c8?\u0080?\u00ca\u0080/\u00ca\u00c1\u0080\u00d1\n>\u00ce?,\u00c1\u00c0\r\u008e\u0080\u0080\u00c2`\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0007\u00ea\u00e3\u00e1\u008c\u0080/>\u00c0\u0080\u00cb?_\u00c1\u0080?\u00c3\u0080\u00cf\u00c7\u00d1\u00c4\u00c7\u0080\u00c7/\u00ce\u00c1\u0080>?\u00c8\u00c7\u00d1>\u00c5\u0080\u00c8?\u0080\u00c0?\u0080\u00cf\u00d1\u00c8\u00c7\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\r\u008e\r\u008e\u0005\u0080\n\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u00e7\u00e1<&\r\u008e\u0080\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c4?>\u00c8/\u00d1>\u00cb\u0080\u00c8\u00c7\u00c1\u0080_\u00c1_\u00c2\u00c1\u00ca\u00cb\u0080\u00c3?\u00ca\u0080\u00c8\u00c7\u00c1\u0080\u00eb\u00df\u00eb\u00e7\u00e1<&\u0080\u00c3\u00d1%\u00c1\u0006\u0080\u0080\u00f1\u00c8\u0080\u00c3?\u00ca_\u00cb\u0080\u00c8\u00c7\u00c1\r\u008e\u0080\u0080\n?>%\u00d1>\u00c1\u0080\u00c0?\u00c4\u00cd_\u00c1>\u00c8/\u00c8\u00d1?>\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u0080\u00f8/\u00c4,/\u00c5\u00c1\u0080?\u00cd\u00c8\u00cb\u00d1\u00c0\u00c1\u0080\u00c8\u00c7\u00c1\u0080\u00f1\u00eb&\u00e3\u0080\u00c1>\u00ce\u00d1\u00ca?>_\u00c1>\u00c8\u0006\r\u008e\r\u008e\u0005\u0080\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006&\n+\u00e1<\u00eb\r\u008e\u0080\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c4?>\u00c8/\u00d1>\u00cb\u0080\u00f1\u00eb&\u00e3\u0080\u00f8/>\u00c1%\u00cb\u0080\u00cf\u00c7\u00d1\u00c4\u00c7\u0080_/`\u0080\u00c2\u00c1\u0080?\u00c3\u0080\u00cd\u00cb\u00c1\u0080\u00d1\u00c3\u0080`?\u00cd\u0080\u00cf/>\u00c8\u0080\u00c8?\r\u008e\u0080\u0080\u00ca\u00cd>\u0080\u00ea\u00e1\u00ee\u00f1\n\u00e1\u00ef\u0080/\u00cb\u0080/>\u0080\u00f1\u00eb&\u00e3\u0080/\u00f8\u00f8%\u00d1\u00c4/\u00c8\u00d1?>\u0006\r\u008e\u008a\u0080+|\u00e8\u00e1\u009a\u0080\u00e8\u00c7\u00d1\u00cb\u0080\u00c0/\u00c8/\u0080\u00cb\u00c1\u00c8\u0080\u00d1\u00cb\u0080+|\u00e8\u0080\u00d1>\u00c4%\u00cd\u00c0\u00c1\u00c0\u0080\u00d1>\u0080\u00c8\u00c7\u00c1\u0080\u00f8/\u00c4,/\u00c5\u00c1\n\u0080\u00c3?\u00ca\u0080(\u00ee\u00eb\u0007\u0093\u0004\u0090\u0006\r\u008e\r\u008e\r\u008e\u00f1>\u00cb\u00c8/%%/\u00c8\u00d1?>\u0080+?\u00c8\u00c1\u00cb\r\u008e\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\u0015\r\u008e\r\u008e\u00e8\u00c7\u00d1\u00cb\u0080\u00f8/\u00c4,/\u00c5\u00c1\u0080\u00d1\u00cb\u0080_/\u00c0\n\u00c1\u0080/\u00ce/\u00d1%/\u00c2%\u00c1\u0080\u00c3?\u00ca\u0080\u00c0?\u00cf>%?/\u00c0\u0080/\u00cb\u0080\u00cb\u00c1\u00ce\u00c1\u00ca/%\u0080!\u00f1&\u0080/\u00ca\u00c4\u00c7\u00d1\u00ce\u00c1\u00cb\u0006\r\u008e\r\u008e\u00f1>\u00cb\u00c8/%%/\u00c8\u00d1?>\u0080\u00eb\u00c8\u00c1\u00f8\u00cb\u009a\r\u008e\u0005\u0005\u0005\u0005\u0005\u0005\n\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\r\u008e\r\u008e\u0091\u0006\u0080\u00e0?\u00cf>%?/\u00c0\u0080\u00c1/\u00c4\u00c7\u0080!\u00f1&\u0080`?\u00cd\u0080\u00ca\u00c1\u00c9\u00cd\u00d1\u00ca\u00c1\u0006\r\u008e\u0016\u0006\u0080\u00ed+!\u00f1&\u0080\u00c1/\u00c4\u00c7\u0080/\u00ca\u00c4\u00c7\u00d1\u00ce\u00c1\u0080\u00c8?\u0080/\u00c4\u00c9\u00cd\n\u00d1\u00ca\u00c1\u0080\u00c8\u00c7\u00c1\u0080\u00ec(\u00f1\u00e8\u0080\u00cb\u00c1\u00c9\u00cd\u00c1>\u00c8\u00d1/%\u0080\u00c3\u00d1%\u00c1\u0006\r\u008e\u0093\u0006\u0080\u00ea\u00e1\u00e4\u00e1\u00f1\u00ee\u00e1\u0080\u00c1/\u00c4\u00c7\u0080\u00ec(\u00f1\u00e8\u0080\u00c3\u00d1%\u00c1\u0080\u00c8?\u0080\u00ca\u00c1\u00c4?>\u00cb\u00c8\u00ca\u00cd\u00c4\u00c8\u0080/\u0080\u00f8/\u00ca\u00c8\u00d1\u00c8\n\u00d1?>\u00c1\u00c0\u0080\u00c0/\u00c8/\u0080\u00cb\u00c1\u00c8\u0006\r\u008e\u0094\u0006\u0080\u00f1>\u00cb\u00c8/%%\u0080\u00c1/\u00c4\u00c7\u0080&\u00e0\u00eb\u0080/\u00cb\u0080/\u00f8\u00f8\u00ca?\u00f8\u00ca\u00d1/\u00c8\u00c1\u0006\r\u008e\u0080\u0080\u0080|\u00c8\u00c7\u00c1\u00ca\u0080_\u00c1_\u00c2\u00c1\u00ca\u00cb\u0080\u00d1>\u0080\u00c8\u00c7\u00d1\u00cb\u0080\u00c0\n/\u00c8/\u0080\u00cb\u00c1\u00c8\u0080\u00cb\u00cd\u00f8\u00f8%`\u0080\u00cb/_\u00f8%\u00c1\u0080\u00a6?\u00c2\u00cb\u0080\u00c3?\u00ca\u0080\u00cb?_\u00c1\u0080?\u00c3\u0080\u00c8\u00c7\u00c1\u00cb\u00c1\u0006\r\u008e\r\u008e\r\u008e\u00eb/_\u00f8%\u00c1\u0080\u00a2\u00e4<\u0080\u00c3?\u00ca\u0080\u00cd\u00f8%?/\u00c0\u00d1>\u00c5\u0080/\u0080\u00c3\u00d1\n%\u00c1\u0080\u00ce\u00d1/\u0080/\u0080\u00c4/\u00ca\u00c0\u0080\u00ca\u00c1/\u00c0\u00c1\u00ca\u009a\r\u008e\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\r\u008e\r\u008e\r\u008e\u00a0\u00cb\n\u00cb\u00cd_\u00f8\u00c8\u00d1?>\u00cb\u0080\u00c3?\u00ca\u0080\u00c8\u00c7\u00d1\u00cb\u0080\u00cb\u00c4\u00c1>/\u00ca\u00d1?\u0080/\u00ca\u00c1\u009a\r\u008e\u0088\u0091\u0089\u0080\u00e8\u00c7\u00c1\u0080\u00c3\u00d1%\u00c1\u0080\u00c8?\u0080\u00c2\u00c1\u0080\u00cd\u00f8%?/\u00c0\u00c1\u00c0\u0080\u00c7/\u00cb\u0080\u00c3\u00d1\u00cc\u00c1\u00c0\u0005%\u00c1>\u00c5\u00c8\u00c7\u0080\u0098\n\u0090\u0005\u00c2`\u00c8\u00c1\u0080\u00ca\u00c1\u00c4?\u00ca\u00c0\u00cb\u0006\r\u008e\u0088\u0016\u0089\u0080\u00e8\u00c7\u00c1\u0080\u00c3\u00d1%\u00c1\u0080\u00d1\u00cb\u0080>?\u00c8\u0080/\u0080\u00a6?\u00c2\u0080\u00cb\u00c8\u00ca\u00c1/_\u0080\u00c8?\u0080\u00c2\u00c1\u0080\u00cb\u00cd\u00c2_\u00d1\u00c8\u00c8\u00c1\u00c0\u008c\u0080\u00c2\u00cd\u00c8\u0080\u00d1\u00cb\u0080\u00cb\u00d1_\u00f8%`\n\u0080\u00c0/\u00c8/\u0006\r\u008e\u0088\u0093\u0089\u0080\u00e8\u00c7\u00c1\u0080\u00c3\u00d1%\u00c1\u0080\u00d1\u00cb\u0080\u00c8?\u0080\u00c2\u00c1\u0080\u00c4?\u00f8\u00d1\u00c1\u00c0\u0080\u00d1>\u00c8?\u0080/\u0080>\u00c1\u00cf\u0080\u00c0/\u00c8/\u0080\u00cb\u00c1\u00c8\u0080\u00c4/%%\u00c1\u00c0\r\u008e\u0080\u0080\u0080\u0080\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u0006\u00e3\u00e2\u0098\u0090\n\u0006\u00e0\u00a0\u00e8\u00a0\r\u008e\u0088\u0094\u0089\u0080\u00e8\u00c7\u00c1\u0080\u00c4/\u00ca\u00c0\u00c1\u00ca\u0080\u00ca\u00c1/\u00c0\u00c1\u00ca\u0080\u00c8?\u0080\u00c2\u00c1\u0080\u00cd\u00cb\u00c1\u00c0\u0080\u00d1\u00cb\u0080\u00c0\u00c1\u00ce\u00d1\u00c4\u00c1\u0080>\u00cd_\u00c2\u00c1\u00ca\u0080\u0090\u0090\u00e4\u0006\r\u008e\u0088\u0095\u0089\u0080\u00e8\u00c7\u00c1\u0080\u00c4/\u00ca\u00c0\u00c1\u00ca\u0080\u00ca\u00c1\n/\u00c0\u00c1\u00ca\u0080\u00d1\u00cb\u0080?>%\u00d1>\u00c1\u0080\u00c8?\u0080\u00c8\u00c7\u00c1\u0080\u00cb`\u00cb\u00c8\u00c1_\u0080\u00c2\u00cd\u00c8\u0080>?\u00c8\u0080/%%?\u00c4/\u00c8\u00c1\u00c0\r\u008e\u0080\u0080\u0080\u0080\u00c8?\u0080/>`\u0080?\u00c8\u00c7\u00c1\u00ca\u0080/\u00c0\u00c0\u00ca\u00c1\u00cb\u00cb\u0080\u00cb\u00f8/\u00c4\u00c1\u0080\u00cb\n\u00cd\u00c4\u00c7\u0080/\u00cb\u0080\u00a2\u00e1\u00eb\u0016\u0080?\u00ca\u0080\u00a2\u00e1\u00eb\u0093\u0006\r\u008e\r\u008e\u0080\u0080\u0080\u0080$\u00e3?\u00ca\u0080\u00c1\u00cc/_\u00f8%\u00c1\u008c\u0080\u00d1\u00c3\u0080\u00c8\u00c7\u00c1\u0080\u00c4/\u00ca\u00c0\u0080\u00ca\u00c1/\u00c0\u00c1\u00ca\u0080\u00d1\u00cb\u0080,>?\u00cf>\u0080\u00c8?\u0080\u00a2\u00e1\u00eb\u0016\u0080/\u00cb\n\r\u008e\u0080\u0080\u0080\u0080\u0082\u00ea\u00c1/\u00c0\u00c1\u00ca\u0080\u0091\u0082\u0080\u00c8\u00c7\u00c1>\u0080\u00c8\u00c7\u00c1\u0080\u00a2\u00e1\u00eb\u0016\u0080?\u00f8\u00c1\u00ca/\u00c8?\u00ca\u0080\u00c4?__/>\u00c0\r\u008e\u0080\u0080\u0080\u0080\u0084&\u00ea\u00e0\u00ea\u0091\r\u008e\u0080\u0080\u0080\u0080\u00cf\u00d1%%\u0080\u0082\u00c0\u00ca/\u00d1>\u0082\u0080\u00c8\u00c7\n\u00c1\u0080\u00c4/\u00ca\u00c0\u0080\u00ca\u00c1/\u00c0\u00c1\u00ca\u008c\u0080/>\u00c0\u0080\u00cb?\u0080\u00d1\u00c8\u0080\u00cf\u00d1%%\u0080\u00c2\u00c1\u0080\u00c0\u00c1/%%?\u00c4/\u00c8\u00c1\u00c0\r\u008e\u0080\u0080\u0080\u0080\u00c2`\u0080\u00a2\u00e1\u00eb\u0016\u0080\u0088\u00cf\u00c7\u00c1>\u0080\u00c8\u00c7\u00c1\u0080\u00c4\u00cd\u00ca\u00ca\u00c1>\u00c8\u0080\u00cf?\u00ca,\n\u008c\u0080\u00d1\u00c3\u0080/>`\u008c\u0080\u00c7/\u00cb\u0080\u00c3\u00d1>\u00d1\u00cb\u00c7\u00c1\u00c0\u0089\u008c\r\u008e\u0080\u0080\u0080\u0080\u00c8\u00c7\u00cd\u00cb\u0080_/,\u00d1>\u00c5\u0080\u00d1\u00c8\u0080/\u00ce/\u00d1%/\u00c2%\u00c1\u0080\u00c3?\u00ca\u0080/%%?\u00c4/\u00c8\u00d1?>\u0080\u00c2`\u0080?\u00c8\u00c7\u00c1\u00ca\u0080\u00a6\n?\u00c2\u00cb\u0006)\r\u008e\r\u008e\u0007\u0007\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u00e5\u0080\u0080\u00a2|\u00e2\u0080\u008c\u00e5\u00e1+\u00e1\u00ea\u008c\u00e4<\u00a0\u00eb\u00eb\u0015\u00a0\u008c(\u00eb\u00e5\u00e4<\u00a0\u00eb\u00eb\u0015\u00ec\u008c(\u00eb\u00e5<\u00e1\u00ee\u00e1<\u0015\u0088\u0091\u008c\u0091\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\n\u0080\u0080\u00ea\u00e1\u00e5\u00f1|+\u0015\u0094\u0090\u0099\u0096.\u008c+|\u00e8\u00f1\u00e3\u00df\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\r\u008e\u0007\u0007\u00eb\u00e8\u00e1&\u0091\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080&\u00e5(\u0015\u00f1\u00e1\u00e2\u00e5\u00e1+\u00e1\u00ea\r\u008e\u0007\u0007\u00eb\u00df\u00eb&\u00ea\u00f1+\u00e8\u0080\u00e0\u00e0\u0080\u0080\u00eb\u00df\u00eb|\u00ed\u00e8\n\u0015\u008a\r\u008e\u0007\u0007\u00eb\u00df\u00eb\u00ed\u00e8\u0091\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00ed+\u00f1\u00e8\u0015\u0090\u0090\u00e4\u008c\u00e0\u00e4\u00e2\u0015\u0088\u00ea\u00e1\u00e4\u00e3(\u0015\u00e3\u00e2\u008c<\u00ea\u00e1\u00e4<\u0015\u0098\u0090\u008c\u00e2<.\u00eb\u00f1!\u00e1\u0015\u0098\u0090\u0089\r\u008e\u0007\u0007\u00eb\u00df\u00eb\u00ed\u00e8\u0016\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\n\u00eb+\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u0006\u00e3\u00e2\u0098\u0090\u0006\u00e0\u00a0\u00e8\u00a0\u008c\u00e0\u00f1\u00eb&\u0015\u0088+\u00e1\u00ef\u008c\u00e4\u00a0\u00e8<\u00e5\u008c\u00e0\u00e1<\u00e1\u00e8\u00e1\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00ed+\u00f1\u00e8\u0015\u00eb\u00df\u00eb\u00a0<<\u00e0\u00a0\u008c\u00eb&\u00a0\u00e4\u00e1\n\u0015\u0088\u00e8\u00ea.\u008c\u0088\u0095\u0090\u0090\u008c\u0016\u0090\u0089\u008c\u00ea<\u00eb\u00e1\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00e0\u00e4\u00e2\u0015\u0088\u00e0\u00eb|\u00ea\u00e5\u0015&\u00eb\u008c\u00ea\u00e1\u00e4\u00e3(\u0015\u00e3\u00e2\u008c<\u00ea\u00e1\u00e4<\u0015\u0098\u0090\u008c\u00e2<.\u00eb\u00f1!\u00e1\u0015\u0093\u0091\n\u0016\u0090\u0089\r\u008e\u0007\u0007\u00eb\u00df\u00eb\u00f1+\u0080\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00ed((\u00df\r\u008e\u0007\u0007\r\u008e\r\u008e\r\u008e\r\u008e&\u00c1\u00ca\u00c3?\u00ca_\u00d1>\u00c5\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00e1\u00e4\u00e1\u00f1\u00ee\u00e1\r\u008e\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\u0005\n\u0005\u0005\u0005\r\u008e\r\u008e\u00e3?\u00ca\u0080:\u0007|\u00eb\u008c\u0080\u00cd\u00cb\u00c1\u0080\u00c8\u00c7\u00c1\u0080\u00e8\u00eb|\u0007\u00e1\u0080\u00ea\u00e1\u00e4\u00e1\u00f1\u00ee\u00e1\u0080\u00c4?__/>\u00c0\u0080\u00c8?\u0080\u00f8\u00ca?\u00c4\u00c1\u00cb\u00cb\u0080\u00c1/\u00c4\u00c7\u0080\u00ec(\u00f1\u00e8\u0080\u00c3\u00d1%\u00c1\u0006\r\u008e\r\u008e\r\u008e\u00e3\n?\u00ca\u0080(\u00ee\u00eb\u0080\u0093\u0006\u0098\u008c\u0080/\u0080\u00cb/_\u00f8%\u00c1\u0080\u00a6?\u00c2\u0080\u00c8?\u0080\u00f8\u00c1\u00ca\u00c3?\u00ca_\u0080\u00c8\u00c7\u00c1\u0080\u00ea\u00e1\u00e4\u00e1\u00f1\u00ee\u00e1\u0080/\u00cb\u00cb\u00cd__\u00d1>\u00c5\r\u008e\u00c8\u00c7\u00c1\u0080\u00f8\u00ca\u00c1\u00ca\u00c1\u00c9\u00cd\u00d1\u00cb\u00d1\u00c8\u00c1\u0080\u00ea\u00e1\u00e4\u00ee\n\u0093\u0004\u0090\u0080\u00f8\u00ca?\u00c5\u00ca/_\u0080\u00d1\u00cb\u0080\u00d1>\u00cb\u00c8/%%\u00c1\u00c0\u0080>?\u00cf\u0080\u00c3?%%?\u00cf\u00cb\u009a\r\u008e\r\u008e\u0007\u0007\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u00ea\u0080\u0080\u00a2|\u00e2\u0080\u008c\u00ea\u00e1\u00e4\u00ee\u0093\u0004\u0090\u008c\u00e4<\u00a0\u00eb\u00eb\u0015\u00a0\u008c(\u00eb\u00e5\u00e4<\u00a0\u00eb\n\u00eb\u0015\u00ec\u008c(\u00eb\u00e5<\u00e1\u00ee\u00e1<\u0015\u0088\u0091\u008c\u0091\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00ea\u00e1\u00e5\u00f1|+\u0015\u0094\u0090\u0099\u0096.\u008c+|\u00e8\u00f1\u00e3\u00df\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\r\u008e\u0007\u0007\u008a\r\u008e\u0007\u0007\u00ea\u00e1\u00e4\u00ee\u00ea\u00e1\u00ee\u0080&\n\u00ea|\u00e4\u0080<<\u00e9\u0015\r\u008e\u0007\u0007\u00ea\u00e0\u00e1<\u0080\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080&\u00e5(\u0015\u00f1\u00e1\u00e3\u00e2\u00ea\u0091\u0094\r\u008e\u0007\u0007\u00ea\u00e1\u00e4\u00ee\u00e0\u00e1<\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00eb+\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u0006\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u0017<<\u00e9\u008c\u00e0\u00f1\u00eb&\n\u0015\u0088(|\u00e0\u008c\u00e0\u00e1<\u00e1\u00e8\u00e1\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00ed+\u00f1\u00e8\u0015\u00eb\u00df\u00eb\u00a0<<\u00e0\u00a0\u008c\u00eb&\u00a0\u00e4\u00e1\u0015\u0088\u00e8\u00ea.\u008c\u0090\u0089\r\u008e\u0007\u0007\u00ea\u00e1\u00e4\u00ee\u0093\u0004\u0090\u0080\u00e1\u00ec\u00e1\u00e4\u0080&\u00e5(\u0015\u00ea\n\u00e1\u00e4\u00ee\u0093\u0004\u0090\r\u008e\u0007\u0007\u00ea\u00e1\u00e4\u00ee<|\u00e5\u0080\u0080\u00e0\u00e0\u0080\u0080\u00eb\u00df\u00eb|\u00ed\u00e8\u0015\u008a\r\u008e\u0007\u0007\u00ec(\u00f1\u00e8\u00f1+\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00eb+\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u0006\u00ea\u00e1\u00ee\u0017<<\u00e9\u0006\u0006\u00ec(\u00f1\u008c\u00e0\u00f1\u00eb&\u0015\u00eb\u00e7\u00ea\n\r\u008e\u0007\u0007\u00eb\u00df\u00eb&\u00ea\u00f1+\u00e8\u0080\u00e0\u00e0\u0080\u0080\u00eb\u00df\u00eb|\u00ed\u00e8\u0015\u008a\r\u008e\u0007\u0007\u00eb\u00df\u00eb\u00ed\u00e8\u0091\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00eb+\u0015\u0017\u0017\u00eb\u00df\u00eb\u00ed\u00e8\u0091\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00ed+\u00f1\u00e8\u0015\u00ee\u00f1|\n\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00eb&\u00a0\u00e4\u00e1\u0015\u0088\u00e4\u00df<\u008c\u0088\u0095\u008c\u0091\u0089\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00e0\u00f1\u00eb&\u0015\u0088+\u00e1\u00ef\u008c\u00e0\u00e1<\u00e1\u00e8\u00e1\u008c\u00e0\u00e1<\u00e1\u00e8\u00e1\u0089\r\u008e\u0007\n\u0007\u00eb\u00df\u00eb\u00ed\u00e8\u0016\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00eb+\u0015\u00e7\u00e1\u00ea\u00e4\u0090\u0091\u0006\u00ea\u00e1\u00ee\u00f1\u00e1\u00ef\u0006\u0017<<\u00e9\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00ed+\u00f1\u00e8\u0015\u00eb\u00df\u00eb\u00a0<<\u00e0\u00a0\u008c\u0080\u00ee|<\u0015\u00eb\u00e1\u00ea\u0015\u001a\u001a\u001a\n\u001a\u001a\u001a\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00eb&\u00a0\u00e4\u00e1\u0015\u0088\u00e4\u00df<\u008c\u0088\u0091\u0095\u008c\u0016\u008c\u0016\u0090\u0089\u008c\u00ea<\u00eb\u00e1\u0089\u008c\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u00e0\u00f1\u00eb&\u0015\u0088+\u00e1\u00ef\u008c\u00e4\u00a0\u00e8<\u00e5\n\u008c\u00e0\u00e1<\u00e1\u00e8\u00e1\u0089\r\u008e\u0007\u0007\u00eb\u00df\u00eb\u00f1+\u0080\u0080\u0080\u0080\u00e0\u00e0\u0080\u0080\u00e0\u00ed((\u00df\r\u008e\u0007\u0007\u0080\u0080\u0080\u0080\u0080\u0080\u0080\u0080&\u00e1+\u00e0\r\u008e\u0007\u0007\u008a\r\u008e\u0007\u0007\u00e4<\u00f1\u00eb\u00e8\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080\u00ea\u00e1\u00e4\u00ee\u00ea\u00e1\u00ee\u008c<<\u00e9\u0015\n\u00e4<\u00f1\u00eb\u00e8\r\u008e\u0007\u0007\u00e0\u00a0\u00e8\u00a0\u0080\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080\u00ea\u00e1\u00e4\u00ee\u00ea\u00e1\u00ee\u008c<<\u00e9\u0015\u00e0\u00a0\u00e8\u00a0\r\u008e\u0007\u0007\u00e7\u00e1<&\u0080\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080\u00ea\u00e1\u00e4\u00ee\u00ea\u00e1\u00ee\u008c<<\u00e9\u0015\u00e7\u00e1<&\r\u008e\u0007\u0007<|\u00a0\u00e0\u0080\n\u0080\u0080\u0080\u00e1\u00ec\u00e1\u00e4\u0080\u00ea\u00e1\u00e4\u00ee\u00ea\u00e1\u00ee\u008c<<\u00e9\u0015<|\u00a0\u00e0\r\u008e\u0007\u0007\r\u008e\r\u008e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\n", "mimetype": "text/plain", "datatype": "binary", "extension": ".txt"}, "$REVC370": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b',\\x00\\x00\\x00\\x01\\x10\\t?\\x01\\x14\\x03\\x0f\\x00\\x14\\x00\\x1a\\x00\\x1b\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "44.00", "flags": 0, "createdate": "2010-04-03T00:00:00", "modifydate": "2014-01-30T00:14:00", "lines": 26, "newlines": 27, "modlines": 0, "user": "GREG"}, "text": "//HERC01R  JOB ,RECV370,CLASS=A,MSGCLASS=X,REGION=6144K,NOTIFY=HERC01\n//*\n//RECVREV PROC LLQ=\n//RDEL    EXEC PGM=IEFBR14\n//RECVDEL  DD  DSN=HERC01.REVIEW.&LLQ,DISP=(MOD,DELETE),\n//             UNIT=SYSALLDA,SPACE=(TRK,0)\n//RECV370 EXEC PGM=RECV370\n//RECVLOG  DD  SYSOUT=*\n//XMITIN   DD  DSN=HERC01.REV.&LLQ..XMI,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             UNIT=VIO,\n//             SPACE=(CYL,(5,1)),\n//             DISP=(NEW,DELETE,DELETE)\n//SYSUT2   DD  DSN=HERC01.REVIEW.&LLQ,\n//             UNIT=SYSALLDA, VOL=SER=??????,\n//             SPACE=(CYL,(15,2,20),RLSE),\n//             DISP=(NEW,CATLG,DELETE)\n//SYSIN    DD  DUMMY\n//        PEND\n//*\n//CLIST   EXEC RECVREV,LLQ=CLIST\n//DATA    EXEC RECVREV,LLQ=DATA\n//HELP    EXEC RECVREV,LLQ=HELP\n//LOAD    EXEC RECVREV,LLQ=LOAD\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADCLST": {"ttr": 32, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'+\\x00\\x000\\x01\\x10\\x07\\x9f\\x01\\x10\\x07\\x9f\\x17Q\\x00\\x12\\x00\\x12\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "43.00", "flags": 0, "createdate": "2010-03-20T00:00:00", "modifydate": "2010-03-20T17:51:30", "lines": 18, "newlines": 18, "modlines": 0, "user": "GREG"}, "text": "//LOADCLST JOB CLASS=A,MSGCLASS=X,COND=(0,NE),NOTIFY=HERC01\n//*\n//*  THIS JOB COPIES THE REVIEW/RFE CLIST MEMBERS INTO SYS1.CMDPROC\n//*\n//*  CHANGE HERC01 TO THE RELEVANT HIGH LEVEL QUALIFIER\n//*\n//*  YOU MAY WANT TO ADD A %REVINIT STATEMENT TO YOUR CURRENT\n//*  LOGON INITIAL CLIST\n//*\n//STEP1   EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=HERC01.REVIEW.CLIST,DISP=SHR\n//SYSUT2   DD  DSN=SYS1.CMDPROC,DISP=SHR\n//SYSIN    DD  *\n  COPY INDD=((SYSUT1,R)),OUTDD=SYSUT2\n  COPY INDD=((SYSUT2,R)),OUTDD=SYSUT2\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADHELP": {"ttr": 34, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'+\\x00\\x00\\x17\\x01\\x10\\x07\\x9f\\x01\\x10\\x07\\x9f\\x17Q\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "43.00", "flags": 0, "createdate": "2010-03-20T00:00:00", "modifydate": "2010-03-20T17:51:17", "lines": 15, "newlines": 15, "modlines": 0, "user": "GREG"}, "text": "//LOADHELP JOB CLASS=A,MSGCLASS=X,COND=(0,NE),NOTIFY=HERC01\n//*\n//*  THIS JOB COPIES THE REVIEW/RFE TSO HELP MEMBERS INTO SYS2.HELP\n//*\n//*  CHANGE HERC01 TO THE RELEVANT HIGH LEVEL QUALIFIER\n//*\n//STEP1   EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=HERC01.REVIEW.HELP,DISP=SHR\n//SYSUT2   DD  DSN=SYS2.HELP,DISP=SHR\n//SYSIN    DD  *\n  COPY INDD=((SYSUT1,R)),OUTDD=SYSUT2\n  COPY INDD=((SYSUT2,R)),OUTDD=SYSUT2\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADLOAD": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'+\\x00\\x008\\x01\\x10\\x07\\x9f\\x01\\x10\\x07\\x9f\\x17S\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "43.00", "flags": 0, "createdate": "2010-03-20T00:00:00", "modifydate": "2010-03-20T17:53:38", "lines": 15, "newlines": 15, "modlines": 0, "user": "GREG"}, "text": "//LOADLOAD JOB CLASS=A,MSGCLASS=X,COND=(0,NE),NOTIFY=HERC01\n//*\n//*  THIS JOB COPIES THE REVIEW/RFE TSO PROGRAMS INTO SYS2.CMDLIB\n//*\n//*  CHANGE HERC01 TO THE RELEVANT HIGH LEVEL QUALIFIER\n//*\n//STEP1   EXEC PGM=IEBCOPY\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DSN=HERC01.REVIEW.LOAD,DISP=SHR\n//SYSUT2   DD  DSN=SYS2.CMDLIB,DISP=SHR\n//SYSIN    DD  *\n  COPY INDD=((SYSUT1,R)),OUTDD=SYSUT2\n  COPY INDD=((SYSUT2,R)),OUTDD=SYSUT2\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MINIZIP#": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x05#\\x7f\\x01\\x05#\\x7f#A\\x00@\\x00@\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-08-25T00:00:00", "modifydate": "2005-08-25T23:41:36", "lines": 64, "newlines": 64, "modlines": 0, "user": "GREG"}, "text": "Using zip and unzip:\n--------------------\n\nThe usage message is displayed when either program is executed as a batch EXEC\nor as a TSO command processor (in TSO \"alloc fi(stdout) da(*)\" is required.)\n\nUsage : minizip -abco zipfile files_to_add\n-a opens files_to_add in text-translated mode and converts EBCDIC to ASCII.\n-b zips files without length indicators (use with V,VB or U datasets only).\n-c chooses the alternate code-page 037 instead of the default 1047.\n-o specifies that all files_to_add are Partition Organised datasets and\nthat all members/alias's in each dataset should be zipped.\nSYSUT1 and zipfile need to be allocated as F/FB with any LRECL and BLKSIZE.\n\nUsage : miniunz -aclv zipfile dest_file file_to_extract\n-a opens files in text-translated mode and converts ASCII to EBCDIC.\n-c chooses the alternate code-page 037 instead of the default 1047.\n-l or -v only lists statistics and files in the zip archive.\nIf no file_to_extract is specified, all files are extracted and\nthe destination file will have (member) automatically appended.\n\nUsage Notes:\n------------\n\nminizip has additional options \"-0\" to \"-9\" which select how aggressively the\nalgorithms check for better compression.  \"-0\" stores the files with no\ncompression.\n\nAll specified filenames default to DD style names, to specify full pathnames\nof MVS datasets use the following convention: //DSN:SYSX.DATASET.NAME\n\nIf the DD name or DSN refers to a Partitioned Organised dataset, then member\nnames can be added as usual eg. \"MYDDNAME(MYMEMBER)\"  When zipping with the\n\"-o\" PO dataset option, do not specify a member name as a file_to_add.  When\nunzipping all members of a zipfile by not specifying a file_to_extract, do\nnot specify a member as the dest_file.\n\nWhen zipping files on the MVS platform, a comment is added with each zipped\nfile to indicate the dataset format from where the data came.  This includes\nan initial character which describes any conversion 'A' is ASCII, 'E' is\nfor the default of no conversion or EBCDIC data, and 'B' stands for the\nspecial zip mode where only the raw dataset data is stored.  The initial\ncharacter is followed by a comma (\",\") then the recfm and lrecl.  The 'B' mode\nis not really for general use - but programmers may find it handy.\n\neg.\n\"E,FB80\"\n\"A,VB8192\"\n\nWhen listing the contents of zip files with -v in miniunz, the comment, if it\nexists, is displayed after the filename within braces \"{\" & \"}\".\n\nWhen using text-translated mode, MSDOS style CRLF text files are converted to\njust LF when unzipping files.  This conversion is not performed in reverse when\nzipping text files on the MVS platform - the resulting text files must be later\nconverted (eg. by using WinZip and a program like WordPad) if the Windows\nplatform is the target.  Note *nix platforms expect only LF characters in\ntext files.\n\nThere is no provision in minizip to UPDATE an existing zip file.\n\nEnjoy your free zip and unzip for MVS.\nJason Winter.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OFFLMOD": {"ttr": 262, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00Q\\x01\\x03'O\\x01\\x03'O\\x16@\\x01\\xae\\x01\\xae\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-01T00:00:00", "modifydate": "2003-10-01T16:40:51", "lines": 430, "newlines": 430, "modlines": 0, "user": "GREG"}, "text": "/********************************************************************\n * OFFLMOD: V1.0, (c) 2003 Jason Winter - but with unrestricted use *\n *                                                                  *\n *           Compile with the JCC C compiler for MVS.               *\n *                                                                  *\n *    Components of design from the public domain REVIEW command.   *\n ********************************************************************/\n\n#include <stdio.h>\n#include <string.h>\n#include <time.h>\n\n#define maxdirent 2500 /* Enlarge as required, space for member names */\n\n#define endmark \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\"\n#define SKIP_MASK ((int) 0x1F)\n#define ALIAS_MASK ((int) 0x80)\n#define TTRN_MASK ((int) 0x60)\n\nstatic long pdscount;   /* How many members found */\n\nstatic char * pdsalias; /* 1=alias, 0=member */\nstatic char * pdsname;  /* member/alias name */\nstatic int  * pdsttrz;  /* location of member */\nstatic int  * pdsttrs;  /* stow ttrs data */\nstatic char * pdsinfo;  /* stow info & ttrn */\nstatic int  * pdsdlen;  /* raw stow data length */\nstatic char * pdsdata;  /* raw stow data */\n\n/* readdir: loads a pds directory into the buffers above */\nstatic long readdir (char * pds) {\n    long   i;\n    long   j;\n    FILE * fh;\n    char   line \u00dd256\u00a8;\n    char   tstr \u00dd9\u00a8;\n    char * a;\n    char * name;\n    short  b;\n    short  count;\n    short  skip;\n    long   quit;\n    int    info_byte;\n    short  l;\n\n    fh = fopen (pds, \"rb,klen=0,lrecl=256,blksize=256,recfm=u,force\");\n    if (fh == NULL) {\n        printf (\"Error opening directory in %s\\n\", pds);\n        return (1);\n    };\n\n    fread (&l, 1, 2, fh); /* Skip U length */\n\n    pdscount = 0;\n\n    quit = 0;\n    while (fread (line, 1, 256, fh) == 256) {\n\n        a = &(line \u00dd2\u00a8);\n        b = ((short *)&(line \u00dd0\u00a8)) \u00dd0\u00a8;\n        count = 2;\n        while (count < b) {\n\n            if (memcmp (a, endmark, 8) == 0) {\n                quit = 1;\n                break;\n            };\n\n            name = a;\n            a += 8;\n\n            pdsttrz \u00ddpdscount\u00a8 = (((int *)a) \u00dd0\u00a8) & 0xFFFFFF00;\n            a += 3;\n\n            pdsinfo \u00ddpdscount\u00a8 = *a;\n            info_byte = (int)(*a);\n            a++;\n\n            skip = (info_byte & SKIP_MASK) * 2;\n\n            if ((info_byte & ALIAS_MASK) == 0) {\n\n                pdsalias \u00ddpdscount\u00a8 = 0;\n\n                i = (info_byte & TTRN_MASK) >> 5;\n                j = 0;\n                while (j < i) {\n                    pdsttrs \u00dd(pdscount * 3) + j\u00a8 =\n                        (((int *)a) \u00ddj\u00a8) & 0xFFFFFF00;\n                    j++;\n                };\n                while (j < 3)\n                    pdsttrs \u00dd(pdscount * 3) + j++\u00a8 = -1;\n\n            } else\n                pdsalias \u00ddpdscount\u00a8 = 1;\n\n            if (skip)\n                memcpy (&(pdsdata \u00ddpdscount * 62\u00a8), a, skip);\n            pdsdlen \u00ddpdscount\u00a8 = skip;\n\n            strncpy (tstr, name, 8);\n            j = 7;\n            while (tstr \u00ddj\u00a8 == ' ') j--;\n            tstr \u00dd++j\u00a8 = 0;\n\n            strcpy (&(pdsname \u00ddpdscount * 9\u00a8), tstr);\n\n            if (++pdscount == maxdirent) {\n                quit = 1;\n                break;\n            };\n\n            a += skip;\n\n            count += (8 + 4 + skip);\n        };\n\n        if (quit) break;\n\n        fread (&l, 1, 2, fh); /* Skip U length */\n    };\n\n    fclose (fh);\n    return (0);\n};\n\n/* dumpstart: creates the member header */\nstatic void dumpstart (FILE * fh, char * member) {\n    long i;\n    char dline \u00dd81\u00a8;\n\n    sprintf (dline, \"./ ADD NAME=%s\", member);\n    i = strlen (dline);\n    while (i != 80) dline \u00ddi++\u00a8 = ' ';\n\n    fwrite (dline, 1, 80, fh);\n};\n\n/* dumpalias: creates a header for an alias to a member */\nstatic void dumpalias (FILE * fh, char * member) {\n    long i;\n    char dline \u00dd81\u00a8;\n\n    sprintf (dline, \"./ ALIAS NAME=%s\", member);\n    i = strlen (dline);\n    while (i != 80) dline \u00ddi++\u00a8 = ' ';\n\n    fwrite (dline, 1, 80, fh);\n};\n\n/* dumpnote: creates a marker for TTR directory information */\nstatic void dumpnote (FILE * fh, char n) {\n    long i;\n    char dline \u00dd81\u00a8;\n\n    sprintf (dline, \"./ NOTE%c\", n);\n    i = strlen (dline);\n    while (i != 80) dline \u00ddi++\u00a8 = ' ';\n\n    fwrite (dline, 1, 80, fh);\n};\n\n/* dumpseq: converts U style records into FB80 records */\nstatic void dumpseq (FILE * fh, char * data, long len) {\n    long i;\n    long lenleft;\n    char dline \u00dd81\u00a8;\n\n    memset (dline, ' ', 80);\n    dline \u00dd80\u00a8 = 0;\n\n    i = len;\n    fwrite (&i, 1, 4, fh);\n\n    lenleft = 76;\n\n    i = 0;\n    while (len != 0) {\n\n        if (len >= lenleft) {\n            fwrite (&(data \u00ddi\u00a8), 1, lenleft, fh);\n            len -= lenleft;\n            i += lenleft;\n        } else {\n            fwrite (&(data \u00ddi\u00a8), 1, len, fh);\n            fwrite (dline, 1, lenleft - len, fh);\n            len = 0;\n        };\n\n        lenleft = 80;\n    };\n};\n\n/* dumpstow: creates the stow data header */\nstatic void dumpstow (FILE * fh, long m) {\n    long i;\n    char dline \u00dd81\u00a8;\n\n    sprintf (dline, \"./ STOW DATA=\");\n\n    i = strlen (dline);\n    while (i != 80) dline \u00ddi++\u00a8 = ' ';\n\n    dline \u00dd13\u00a8 = pdsinfo \u00ddm\u00a8;\n\n    if (pdsdlen \u00ddm\u00a8)\n        memcpy (&(dline \u00dd14\u00a8), &(pdsdata \u00ddm * 62\u00a8), pdsdlen \u00ddm\u00a8);\n\n    fwrite (dline, 1, 80, fh);\n};\n\n/* dumpend: creates the end record */\nstatic void dumpend (FILE * fh) {\n    long   i;\n    char   dline \u00dd81\u00a8;\n    time_t ltime;\n    struct tm * today;\n    char   tstr \u00dd40\u00a8;\n\n    time (&ltime);\n    today = localtime (&ltime);\n    strftime (tstr, 39, \"%H:%M ON %y/%m/%d\", today);\n\n    sprintf (dline,\n        \"./ ENDUP       \\\"REVIEW\\\" PDS MEMBER OFFLOAD AT %s\", tstr);\n    i = strlen (dline);\n    while (i != 80) dline \u00ddi++\u00a8 = ' ';\n\n    fwrite (dline, 1, 80, fh);\n};\n\nlong main (int argc, char * argv \u00dd\u00a8, char * argp \u00dd\u00a8) {\n    long   i;\n    long   mptr = 0;\n    int    note;\n    int    h;\n    FILE * fh;\n    FILE * fho;\n    char   member \u00dd9\u00a8;\n    char   file \u00dd260\u00a8;\n    short  l;\n    long   offlded = 0;\n    long   offalia = 0;\n    long   argument;\n    char * lmod;\n\n    if (argc < 3) {\n        printf (\"You must supply a pds-name and seq-name:\\n\");\n        printf (\"OFFLMOD //DSN:SYS1.LOADLIB //DSN:SYS2.REVLMOD {MEMBERS}\\n\");\n        printf (\"Produces SYS2.REVLMOD containing SYS1.LOADLIB programs.\\n\");\n        printf (\"Optional MEMBER name(s) offloads the matching member(s).\\n\");\n        printf (\"Any alias's are automatically offloaded with the member.\\n\");\n        return (1);\n    };\n\n    lmod = (char *)malloc (32761);\n\n    pdsalias = (char *)malloc (maxdirent);\n    pdsname = (char *)malloc (maxdirent * 9);\n    pdsttrz = (int *)malloc (maxdirent * 4);\n    pdsttrs = (int *)malloc (maxdirent * 3 * 4);\n    pdsinfo = (char *)malloc (maxdirent);\n    pdsdlen = (int *)malloc (maxdirent * 4);\n    pdsdata = (char *)malloc (maxdirent * 62);\n\n    if ((lmod == NULL) ||\n        (pdsalias == NULL) ||\n        (pdsname == NULL) ||\n        (pdsttrz == NULL) ||\n        (pdsttrs == NULL) ||\n        (pdsinfo == NULL) ||\n        (pdsdlen == NULL) ||\n        (pdsdata == NULL)) {\n\n        printf (\"Unable to allocate buffers, no memory left.\\n\");\n\n        if (lmod) free (lmod);\n\n        if (pdsalias) free (pdsalias);\n        if (pdsname) free (pdsname);\n        if (pdsttrz) free (pdsttrz);\n        if (pdsttrs) free (pdsttrs);\n        if (pdsinfo) free (pdsinfo);\n        if (pdsdlen) free (pdsdlen);\n        if (pdsdata) free (pdsdata);\n\n        return (1);\n    };\n\n    sprintf (file, \"%s\", argv \u00dd1\u00a8);\n    strupr (file);\n\n    if (readdir (file) != 0) {\n        return (1);\n    };\n\n    sprintf (file, \"%s\", argv \u00dd2\u00a8);\n    strupr (file);\n\n    fho = fopen (file, \"wb\");\n    if (fho == NULL) {\n        printf (\"Unable to open output sequential file: %s\\n\", file);\n        return (1);\n    };\n\n    if (argc >= 4) {\n        strncpy (member, argv \u00dd3\u00a8, 8);\n        member \u00dd8\u00a8 = 0;\n        strupr (member);\n        argument = 4;\n    } else {\n        member \u00dd0\u00a8 = 0;\n    };\n\n    while (1) {\n\n        while ((mptr < pdscount) && (pdsalias \u00ddmptr\u00a8))\n            mptr++; /* Skip alias entries here */\n\n        if (mptr < pdscount) {\n\n            if ((member \u00dd0\u00a8) && /* searching for a particular member? */\n                (strcmp (member, &(pdsname \u00ddmptr * 9\u00a8)) != 0)) {\n\n                /* not the one */\n                mptr++;\n                continue; /* then go back to the top of the main loop */\n            };\n\n        } else {\n\n            if ((member \u00dd0\u00a8) &&\n                (argument < argc)) {\n\n                strncpy (member, argv \u00ddargument++\u00a8, 8);\n                member \u00dd8\u00a8 = 0;\n                strupr (member);\n\n                mptr = 0;\n                continue;\n            };\n\n            break;\n        };\n\n        sprintf (file, \"%s(%s)\", argv \u00dd1\u00a8, &(pdsname \u00ddmptr * 9\u00a8));\n        strupr (file);\n        fh = fopen (file, \"rb\");\n        if (fh != NULL) {\n\n            dumpstart (fho, &(pdsname \u00ddmptr * 9\u00a8));\n\n            h = _fileno (fh); /* Get low-level io handle for JCC's __note */\n\n            while (fread (&l, 1, 2, fh) == 2) {\n\n                /*(For WRITING: - not done in this program, */\n                /* use __note after all bytes have been written) */\n\n                /* For READING: */\n                /* The best place to NOTE is somewhere\n                   in the middle of a U type record */\n                note = (__note (h) & 0xFFFFFF00);\n\n                fread (lmod, 1, l, fh); /* read the records data */\n\n                dumpseq (fho, lmod, l); /* dump the record */\n\n                i = 0;        /* Check if this record requires a NOTE... */\n                while (i < 3) {\n                    if (note == pdsttrs \u00dd(mptr * 3) + i\u00a8) break;\n                    i++;\n                };\n                if (++i != 4) dumpnote (fho, i + '0');\n            };\n\n            fclose (fh);\n\n            dumpstow (fho, mptr);\n\n            printf (\"Added member: %s\\n\", &(pdsname \u00ddmptr * 9\u00a8));\n            offlded++;\n\n            i = 0;\n            while (i < pdscount) {\n\n                if ((pdsalias \u00ddi\u00a8) &&\n                    (pdsttrz \u00ddi\u00a8 == pdsttrz \u00ddmptr\u00a8)) {\n\n                    dumpalias (fho, &(pdsname \u00ddi * 9\u00a8));\n\n                    dumpstow (fho, i);\n\n                    printf (\"Added alias:  %s\\n\", &(pdsname \u00ddi * 9\u00a8));\n                    offalia++;\n                };\n                i++;\n            };\n\n        } else {\n\n            printf (\"Can't open input file: %s\\n\", file);\n        };\n\n        if (member \u00dd0\u00a8)\n            mptr = pdscount;  /* signal to look for next member */\n        else\n            mptr++;           /* just keep offloading members */\n    };\n\n    dumpend (fho);\n\n    fclose (fho);\n\n    printf (\"Finished processing %d file(s), %d alias(s) (of %d).\\n\",\n            offlded, offalia, pdscount);\n\n    free (lmod);\n\n    free (pdsalias);\n    free (pdsname);\n    free (pdsttrz);\n    free (pdsttrs);\n    free (pdsinfo);\n    free (pdsdlen);\n    free (pdsdata);\n\n    return (0);\n};\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OFFLSAMP": {"ttr": 275, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'%\\x00\\x00\\x01\\x01\\x03\\'O\\x01\\x03\\'O\"G\\x00\\x13\\x00\\x13\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "37.00", "flags": 0, "createdate": "2003-10-01T00:00:00", "modifydate": "2003-10-01T22:47:01", "lines": 19, "newlines": 19, "modlines": 0, "user": "GREG"}, "text": "//GREGO    JOB (),G.PRICE,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1),\n//             NOTIFY=GREG\n//*\n//*  SAMPLE JOB STREAM TO PERFORM IN BATCH WHAT AN 'OFFLOAD'\n//*  SUBCOMMAND OF 'REVIEW' DOES INTERACTIVELY ON TSO, WHICH\n//*  IS TO SEQUENTIALISE LOAD MODULES INTO FIXED-LENGTH 80-BYTE\n//*  RECORDS SO THEY CAN BE RESTORED VIA A CARD READER OR OTHER\n//*  MEANS NOT REQUIRING THE TRANSMIT AND RECEIVE COMMANDS OF TSO/E.\n//*\n//*  RUN 'OFFLMOD' WITHOUT PARAMETERS/OPERANDS IN BATCH OR TSO\n//*  TO GET OPERAND/PARM DESCRIPTION.  NOTE THAT FILES CAN BE\n//*  REFERENCED BY DDNAME OR DSNAME.\n//*\n//STEP1   EXEC PGM=OFFLMOD,PARM='//DDN:SYSUT1 //DSN:GREG.FB80.DATA'\n//STEPLIB  DD  DSN=GREG.REVIEW.LOAD,DISP=SHR\n//STDOUT   DD  SYSOUT=*\n//SYSUT1   DD  DSN=GREG.UTIL.LOAD,DISP=SHR\n//\n//SYSUT2   DD  DSN=GREG.FB80.DATA,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVLMOD": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'%\\x00\\x00\\t\\x00\\x99\\x14_\\x01\\x03\"o#)\\x02\"\\x00\\xf3\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "37.00", "flags": 0, "createdate": "1999-05-25T00:00:00", "modifydate": "2003-08-14T23:29:09", "lines": 546, "newlines": 243, "modlines": 0, "user": "GREG"}, "text": "REVLMOD  TITLE ' R E V L M O D '\n***********************************************************************\n*                                                                     *\n*         REVLMOD - RECONSTRUCT LOAD MODULES INTO PROGRAM PDS         *\n*                   FROM CARD IMAGE INPUT WRITTEN BY REVIEW           *\n*                                                                     *\n***********************************************************************\n*\n*        WRITTEN BY: GREG PRICE\n*        DATE WRITTEN: JUNE 6 1999 FOR REVIEW R31.0.\n*        DATE UPDATED: AUGUST 14 2003 FOR REVIEW R37.0.\n*        ATTRIBUTES: RE-ENTRANT. (AMODE AND RMODE MUST BE 24.)\n*        PURPOSE: REVIEW CAN OFFLOAD LOAD MODULES TO A SEQUENTIAL\n*                 FILE WITH FIXED-LENGTH 80-BYTE RECORDS.  THIS\n*                 PROGRAM CAN READ THIS SEQUENTIAL FILE TO\n*                 RECONSTRUCT THE ORIGINAL LOAD MODULES.\n*                 ALTHOUGH THIS PROGRAM CAN BE CONSIDERED TO BE\n*                 BATCH UTILITY, IT IS ANTICIPATED THAT IT WILL\n*                 NORMALLY BE INVOKED FROM THE REVIEW TSO COMMAND\n*                 PROCESSOR VIA THE =PDSLOAD SUBCOMMAND OF REVIEW.\n*                 IT WAS WRITTEN TO PERMIT THE TRANSFER OF LOAD\n*                 MODULES BETWEEN DISCONNECTED OS-FAMILY MAINFRAME\n*                 SYSTEMS WHICH MAY NOT HAVE THE TSO/E RECEIVE AND\n*                 TRANSMIT COMMANDS AVAILABLE, SO THAT THE AUTHOR\n*                 DOES NOT HAVE TO MAINTAIN OBJECT DECK COLLECTIONS\n*                 TO SUPPORT OLD MVS AND NON-IBM MVS-LIKE SYSTEMS.\n*        WARNING: ALTHOUGH THE SEQUENTIAL INPUT MAY LOOK LIKE INPUT\n*                 FOR IEBUPDTE, IT IS NOT SUITABLE FOR PROCESSING\n*                 BY THE IEBUPDTE OR PDSLOAD PROGRAMS.  THE DATA\n*                 FORMAT IS KNOWN ONLY BY THE MEMRDWRT ROUTINE OF\n*                 THE REVIEW2 CSECT AND THIS PROGRAM.  THE CONTROL\n*                 STATEMENT FORMAT IS KNOWN ONLY BY THE REVOFFLD\n*                 CSECT AND THIS PROGRAM.\n*\n*        LOG OF CHANGES:\n*  R35.3  20MAR01 - CHANGES TO ALLOW ASSEMBLY BY IFOX00.        GP@HC\n*  R37.0  14AUG03 - ADD SERIALIZATION LOGIC BASED ON LINKAGE EDITOR.\n*                 - USE DEVICE MAXIMUM INSTEAD OF 32760.        GP@P6\n         EJECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n************************************************************\n*                                                          *\n*         INITIALIZATION                                   *\n*                                                          *\n************************************************************\n         SPACE\nREVLMOD  CSECT\n*REVLMOD AMODE 24                  AMODE 31 WOULD LIMIT REVLMOD TO MVS\n*REVLMOD RMODE 24\n         USING PSA,0\n         USING REVLMOD,R15\n         B     @LOADMOD\n         DROP  R15                 REVLMOD\n         DC    AL1(23),CL23'REVLMOD R37.0 &SYSDATE '\n@SIZE    DC    0F'0',AL1(2),AL3(@DATAL)\n         DC    C'<DYN'             FLAG DYNAMIC AREA SUBPOOL AND SIZE\n@LOADMOD STM   R14,R12,12(R13)\n         LR    R11,R15\n         USING REVLMOD,R11\n         LR    R2,R1               COPY PLIST ADDRESS\n         L     R0,@SIZE\n         GETMAIN R,LV=(0)\n         LR    R4,R1\n         LA    R5,@BUFFER-@DATA    NO NEED TO CLEAR BPAM BUFFER\n         SLR   R15,R15             PROBABLY A NO-OP\n         MVCL  R4,R14              CLEAR WORKING-STORAGE\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING @DATA,R13\n         MVI   MEMSEL,C'*'         SELECT ALL MEMBERS BY DEFAULT\n         MVC   MEMSEL+1(7),MEMSEL\n         L     R1,0(,R2)           POINT TO PARM\n         LH    R0,0(,R1)           GET LENGTH OF PARM\n         LTR   R0,R0\n         BZ    PARMX\n         LA    R1,2(,R1)           POINT TO PARM DATA\n         CH    R0,=H'3'            IS PARM LONG ENOUGH FOR NEW?\n         BL    PARMM               NO, BYPASS COMPARE\n         CLC   0(3,R1),=C'NEW'     IS IT NEW, AS PER IEBUPDTE?\n         BNE   PARMM               NO\n         LA    R1,3(,R1)           YES, TOLERATE BUT IGNORE\n         SH    R0,=H'3'\n         BZ    PARMX\n         CLI   0(R1),C','\n         BNE   PARMERR\n         LA    R1,1(,R1)           POINT PAST COMMA\n         SH    R0,=H'1'\n         BZ    PARMX\nPARMM    CH    R0,=H'3'            LONG ENOUGH FOR S(X ?\n         BL    PARMERR             NO\n         CLC   0(2,R1),=C'S('      IS IT S( ?\n         BNE   PARMERR             NO, BRANCH\n         LA    R1,2(,R1)           YES, POINT PAST PAREN\n         SH    R0,=H'2'\n         LA    R15,MEMSEL\n         LA    R14,MEMSEL+8\nPARMML   CLI   0(R1),C')'\n         BE    PARMX\n         CR    R15,R14             IS MEMBER NAME TOO LONG?\n         BNL   PARMMIG             YES, IGNORE EXTRA CHARACTERS\n         MVC   0(1,R15),0(R1)      COPY ONE BYTE OF MEMBER NAME\n         LA    R15,1(,R15)\n         LA    R1,1(,R1)\nPARMMIG  BCT   R0,PARMML\n         B     PARMX\nPARMERR  WTO   'REVLMOD - INVALID PARAMETER IGNORED',ROUTCDE=(11)\nPARMX    DS    0H\n         EJECT\n************************************************************\n*                                                          *\n*         INITIALIZE THE DCBS                              *\n*                                                          *\n************************************************************\n         SPACE\n         MVC   SYSIND(SYSINL),SYSINS\n         MVC   SYSUT2D(SYSUT2L),SYSUT2S\n         MVC   UT2DECBD(UT2DECBL),UT2DECBS\n         TM    0(R2),X'80'         ANY DDNAME OVERRIDES?\n         BO    PARM2X              NO, ONLY ONE PARAMETER\n         L     R1,4(,R2)           POINT TO SECOND PARAMETER\n         LA    R1,0(,R1)           ENSURE ADDRESS FORMAT\n         LTR   R1,R1               ZERO POINTER?\n         BZ    PARM2BAD            YES, NO OVERRIDES SUPPLIED\n         CLI   0(R1),0             LENGTH LESS THAN 256?\n         BNE   PARM2BAD            NO\n         TM    1(R1),7             MULTIPLE OF EIGHT?\n         BNZ   PARM2BAD            NO\n         CLI   1(R1),8*5           SYSIN SLOT PRESENT?\n         BL    PARM2X              NO\n         CLI   34(R1),0   (8*4+2)  SYSIN OVERRIDE SPECIFIED?\n         BE    PARM2I              NO\n         MVC   SYSIND+40(8),34(R1) YES, COPY IT INTO DCB\nPARM2I   CLI   1(R1),8*9           SYSUT2 SLOT PRESENT?\n         BL    PARM2X              NO\n         CLI   66(R1),0   (8*8+2)  SYSUT2 OVERRIDE SPECIFIED?\n         BE    PARM2X              NO\n         MVC   SYSUT2D+40(8),66(R1)  YES, COPY IT INTO DCB\n         B     PARM2X              DDNAME OVERRIDE PROCESSING COMPLETE\nPARM2BAD WTO   'REVLMOD - INVALID DDNAME OVERRIDE PARAMETER IGNORED',  +\n               ROUTCDE=(11)\nPARM2X   DS    0H\n         SPACE 2\n************************************************************\n*                                                          *\n*         PERFORM SERIALIZATION                            *\n*                                                          *\n************************************************************\n         SPACE\n         LA    R12,SYSUT2D         POINT TO THE OUTPUT DCB\n         USING IHADCB,R12\n         L     R5,DCBEXLST         SAVE EXIT LIST\n         LA    R0,JFCB\n         ST    R0,WORK+4\n         MVI   WORK+4,128+X'07'    READ JFCB EXIT\n         LA    R0,WORK+4\n         ST    R0,DCBEXLST\n         MVI   WORK,X'80'\n         RDJFCB ((R12)),MF=(E,WORK)\n         ST    R5,DCBEXLST         RESTORE EXIT LIST\n         TM    JFCBIND2,JFCSHARE   SHARED DATA SET?\n         BNO   SHAREOK             NO, EXCLUSIVE ACCESS IN OS IMAGE\n         OI    FLAGS,SHRDSET       YES, FLAG THIS\nSHAREOK  L     R4,PSATOLD          POINT TO THE CURRENT TCB\n         L     R4,TCBTIO-TCB(,R4)  POINT TO THE TIOT\n         USING TIOT1,R4\n         LA    R4,TIOENTRY         POINT TO THE FIRST TIOT ENTRY\n         DROP  R4                  TIOT1\n         USING TIOENTRY,R4\n         SLR   R5,R5               CLEAR FOR INSERT\nDDNAMELP CLC   TIOEDDNM,DCBDDNAM   FOUND THE OUTPUT ENTRY?\n         BE    GOTDDENT            YES\n         ICM   R5,1,TIOELNGH       NO, GET THE ENTRY LENGTH\n         BZ    ENQOKAY             MISSING DD - LET OPEN CATCH IT\n         AR    R4,R5               POINT TO THE NEXT TIOT ENTRY\n         B     DDNAMELP            GO CHECK IT\nGOTDDENT ICM   R5,7,TIOEFSRT       POINT TO THE UCB\n         BZ    ENQOKAY             CANNOT BE PERMANENT DASD DATA SET\n         DROP  R4                  TIOENTRY\n         CLI   18(R5),X'20'        VERIFY DASD DEVICE CLASS\n         BNE   ENQOKAY             CANNOT BE PERMANENT DASD DATA SET\n         ST    R5,$UCBADDR         SAVE DASD UCB ADDRESS\n         TM    17(R5),X'20'        SHARED DASD?\n         BNO   ENQORNOT            NO, NO NEED FOR HARDWARE RESERVE\n         OI    FLAGS,SHRDASD       YES, FLAG THIS\n         MVC   RESD,RESS           LOAD RESERVE TEMPLATE\n         RESERVE (SYSIEWLP,JFCB,E,44,SYSTEMS),RET=NONE,UCB=$UCBADDR,   +\n               MF=(E,RESD)\n         B     ENQOKAY             RESERVE NOW PERFORMED\nENQORNOT TM    FLAGS,SHRDSET       SHARED DATA SET?\n         BNO   ENQOKAY             NO, NO NEED FOR HARDWARE RESERVE\n         MVC   ENQD,ENQS           LOAD ENQ TEMPLATE\n         ENQ   (SYSIEWLP,JFCB,E,44,SYSTEM),RET=NONE,MF=(E,ENQD)\nENQOKAY  DS    0H                  SERIALIZATION NOW DONE\n         SPACE 2\n************************************************************\n*                                                          *\n*         OPEN THE DCBS                                    *\n*                                                          *\n************************************************************\n         SPACE\n         DEVTYPE DCBDDNAM,$DEVTYPE\n         MVI   WORK,X'80'\n         OPEN  (SYSIND,INPUT),MF=(E,WORK)\n         MVI   WORK,X'80'\n         OPEN  (SYSUT2D,OUTPUT),MF=(E,WORK)\n         SPACE 2\n************************************************************\n*                                                          *\n*         ACQUIRE INPUT AND WRITE MEMBER CONTENTS          *\n*                                                          *\n************************************************************\n         SPACE\n         MVC   MAXBLKSI,DCBBLKSI   REMEMBER MAXIMUM BLOCK SIZE\nREADLOOP EQU   *\n         SLR   R3,R3               NOTHING TO PROCESS YET\n         SLR   R10,R10             CLEAR ERROR NUMBER\nDATALOOP EQU   *\n         GET   SYSIND,INREC\n         LA    R0,80               GET MAXIMUM DATA LENGTH IN RECORD\n         LA    R5,INREC            POINT TO START OF POSSIBLE DATA\n         LTR   R3,R3               CURRENTLY PROCESSING A BLOCK?\n         BP    COPYCARD            YES\n         CLC   =C'./',INREC        CONTROL RECORD?\n         BE    CNTLREC             YES\n         TM    FLAGS,CALIAS        PROCESSING ALIAS?\n         BO    NOSTOW              YES, MISSING STOW\n         LA    R10,1               SET ERROR NUMBER\n         TM    FLAGS,CADD+CSTOW    CURRENTLY PROCESSING A MEMBER?\n         BNM   DATAEROR            NO, DATA FORMAT ERROR SO QUIT\n         LA    R4,@BUFFER          NO, RESET OUTPUT BUFFER CURSOR\n         LA    R10,2               SET ERROR NUMBER\n         ICM   R3,15,INREC         GET LENGTH OF NEW BLOCK\n         BNP   DATAEROR            NONSENSICAL, SO QUIT\n         LA    R10,3               SET ERROR NUMBER\n         CH    R3,MAXBLKSI         GREATER THAN MAXIMUM?\n         BH    DATAEROR            YES, SO QUIT\n         STH   R3,DCBBLKSI         SET BLOCK LENGTH FOR ACCESS METHOD\n         LA    R0,76               GET MAXIMUM DATA LENGTH IN RECORD\n         LA    R5,INREC+4          POINT TO START OF POSSIBLE DATA\nCOPYCARD LR    R2,R3               NO, GET LENGTH OF THIS BLOCK\n         CR    R2,R0               IS BLOCK WITHIN THIS CARD IMAGE?\n         BNH   GOTDATLN            YES\n         LR    R2,R0               NO, SO GET LENGTH WHICH IS\nGOTDATLN SR    R3,R2               UPDATE BYTES TO GO FOR THIS BLOCK\n         BCTR  R2,0                DECREMENT FOR EXECUTE\n         EX    R2,PUTCHUNK         MOVE INPUT DATA TO OUTPUT BUFFER\n         LA    R4,1(R2,R4)         ADJUST OUTPUT BUFFER CURSOR\n         LTR   R3,R3               NEED MORE DATA FOR THIS BLOCK?\n         BP    DATALOOP            YES, GO GET SOME\n         TM    FLAGS,CSEL          IS THIS MEMBER SELECTED?\n         BZ    READLOOP            NO, SKIP THE WRITE\n         WRITE UT2DECBD,SF,SYSUT2D,@BUFFER,'S',MF=E\n         CHECK UT2DECBD            WAIT FOR THE WRITE\n         NOTE  SYSUT2D             GET THE WRITTEN BLOCK ADDRESS\n         ST    R1,TTRZ             SAVE IT FOR LATER\n         B     READLOOP            GO GET MORE INPUT\nPUTCHUNK MVC   0(0,R4),0(R5)       <<< EXECUTED >>>\n         SPACE 2\n************************************************************\n*                                                          *\n*         PROCESS CONTROL STATEMENTS                       *\n*                                                          *\n************************************************************\n         SPACE\nCNTLREC  LA    R10,4               SET ERROR NUMBER\n         CLI   INREC+2,C' '        DOES THE CONTROL STMT HAVE A LABEL?\n         BNE   DATAEROR            YES, DATA FORMAT ERROR SO QUIT\n         CLC   INREC+3(9),=C'ADD NAME='\n         BE    CTLADD\n         CLC   INREC+3(6),=C'ENDUP '\n         BE    CTLENDUP\n         LA    R10,1               SET ERROR NUMBER\n         TM    FLAGS,CADD          CURRENTLY PROCESSING A MEMBER?\n         BZ    DATAEROR            NO, DATA FORMAT ERROR SO QUIT\n         CLC   INREC+3(10),=C'STOW DATA='\n         BE    CTLSTOW\n         TM    FLAGS,CALIAS        PROCESSING ALIAS?\n         BO    NOSTOW              YES, MISSING STOW\n         CLC   INREC+3(6),=C'NOTE1 '\n         BE    CTLNOTE1\n         CLC   INREC+3(6),=C'NOTE2 '\n         BE    CTLNOTE2\n         CLC   INREC+3(11),=C'ALIAS NAME='\n         BE    CTLALIAS\n         LA    R10,5               SET ERROR NUMBER\n         B     DATAEROR            UNKNOWN CONTROL STATEMENT SO QUIT\n         SPACE\nCTLADD   MVC   PDS2NAME,INREC+12   COPY MEMBER NAME\n         OI    FLAGS,CADD          ./ ADD PROCESSED\n         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH NEW MEMBER\n         NI    FLAGS,255-CSEL      RESET SELECTION FLAG\n         MVI   TTR1+3,X'FF'        FLAG TTR1 NOT YET SET\n         MVI   TTR2+3,X'FF'        FLAG TTR2 NOT YET SET\n         LA    R3,STOWENTY         POINT TO MEMBER NAME\n         LA    R4,MEMSEL           POINT TO SELECTION MASK\n         LA    R0,8                GET MEMBER NAME LENGTH\nMASKLOOP CLI   0(R4),C'*'          GENERIC CHARACTER MATCH?\n         BE    MASKNEXT            YES, THIS CHARACTER MATCHES\n         CLI   0(R4),C'?'          GENERIC CHARACTER MATCH?\n         BE    MASKNEXT            YES, THIS CHARACTER MATCHES\n         CLI   0(R4),C'%'          GENERIC CHARACTER MATCH?\n         BE    MASKNEXT            YES, THIS CHARACTER MATCHES\n         CLC   0(1,R4),0(R3)       SPECIFIC CHARACTER MATCH?\n         BNE   READLOOP            NO, UNSUCCESSFUL MATCH\nMASKNEXT LA    R3,1(,R3)           POINT TO NEXT BYTE OF ITEM\n         LA    R4,1(,R4)           POINT TO NEXT BYTE OF MASK\n         BCT   R0,MASKLOOP         TEST NEXT BYTE\nMASKEXIT OI    FLAGS,CSEL          SELECT THIS MEMBER\n         B     READLOOP\n         SPACE\nCTLNOTE1 MVC   TTR1,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY\n         MVI   TTR1+3,0            FLAG TTR1 SET\n         B     READLOOP\n         SPACE\nCTLNOTE2 MVC   TTR2,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY\n         MVI   TTR2+3,0            FLAG TTR2 SET\n         B     READLOOP\n         SPACE\nCTLSTOW  MVC   PDS2INDC(63),INREC+13\n         TM    PDS2INDC,PDS2NTTR   ANY NOTED TTRS TO SUPPLY?\n         BZ    NOTESOK             NO\n         LA    R10,6               SET ERROR NUMBER\n         CLI   TTR1+3,0            FIRST NOTED TTR SET?\n         BNE   DATAEROR            NO, MISSING STATEMENT SO QUIT\n         MVC   PDS2TTRT,TTR1       COPY FIRST NOTED TTR\n         CLI   TTR2+3,0            SECOND NOTED TTR SET?\n         BNE   NOTESOK             NO\n         MVC   PDS2TTRN,TTR2       COPY SECOND NOTED TTR\nNOTESOK  NI    FLAGS,255-CALIAS\n         OI    FLAGS,CSTOW         ./ STOW PROCESSED\n         TM    FLAGS,CSEL          IS THIS MEMBER SELECTED?\n         BZ    READLOOP            NO, SKIP THE STOW\n         STOW  SYSUT2D,STOWENTY,R\n         LTR   R15,R15             WAS THE MEMBER REPLACED?\n         BZ    READLOOP            YES, CONTINUE\n         CH    R15,=H'8'           WAS THE MEMBER ADDED?\n         BE    READLOOP            YES, CONTINUE\n         LA    R10,7               SET ERROR NUMBER\n         B     DATAEROR\n         SPACE\nCTLALIAS MVC   PDS2NAME,INREC+14   COPY ALIAS MEMBER NAME\n         LA    R10,8               SET ERROR NUMBER\n         TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?\n         BNO   DATAEROR            NO, CAN'T PROCESS ALIAS YET\n         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH ALIAS\n         OI    FLAGS,CALIAS        ./ ALIAS PROCESSED\n         B     READLOOP\n         SPACE\nCTLENDUP TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?\n         BO    ALLDONE             YES, ALL DONE\nNOSTOW   LA    R10,8               SET ERROR NUMBER\n         SPACE 2\n************************************************************\n*                                                          *\n*         HANDLE ERROR CONDITIONS                          *\n*                                                          *\n************************************************************\n         SPACE\nDATAEROR LR    R1,R10              COPY ERROR NUMBER\n         BCTR  R1,0                CONVERT TO INDEX NUMBER\n         SLL   R1,6                MULTIPLY BY 64 FOR INDEX\n         LA    R1,ERRMSGS(R1)      POINT TO ERROR MESSAGE\n         LA    R0,64               GET MESSAGE LENGTH\n         TPUT  (1),(0),R           SHOW MESSAGE ON TERMINAL\n         LA    R10,2000(,R10)      GET PROGRAM RETURN CODE\n         ST    R10,RETCODE         SAVE FOR TERMINATION\n         SPACE 2\n************************************************************\n*                                                          *\n*         CLOSE THE DCBS                                   *\n*                                                          *\n************************************************************\n         SPACE\nALLDONE  MVI   WORK,X'80'\n         CLOSE (SYSIND),MF=(E,WORK)\n         MVI   WORK,X'80'\n         CLOSE (SYSUT2D),MF=(E,WORK)\n         SPACE 2\n************************************************************\n*                                                          *\n*         TERMINATE SERIALIZATION                          *\n*                                                          *\n************************************************************\n         SPACE\n         TM    FLAGS,SHRDASD       NEED A HARDWARE RELEASE?\n         BNO   DEQENQ              NO\n         MVC   DQRD,DQRS           LOAD DEQ TEMPLATE\n         DEQ   (SYSIEWLP,JFCB,44,SYSTEMS),RET=NONE,UCB=$UCBADDR,       +\n               MF=(E,DQRD)\n         B     DEQOKAY\nDEQENQ   TM    FLAGS,SHRDSET       ANYTHING TO DEQ?\n         BNO   DEQOKAY             NO\n         MVC   DQED,DQES           LOAD DEQ TEMPLATE\n         DEQ   (SYSIEWLP,JFCB,44,SYSTEM),RET=NONE,MF=(E,DQED)\nDEQOKAY  DS    0H\n         SPACE 2\n************************************************************\n*                                                          *\n*         TERMINATE                                        *\n*                                                          *\n************************************************************\n         SPACE\n         L     R2,RETCODE\n         DROP  R12                 IHADCB\n         LR    R1,R13\n         L     R13,4(,R13)\n         L     R0,@SIZE\n         FREEMAIN R,LV=(0),A=(1)\n         LR    R15,R2\n         L     R14,12(,R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n         SPACE 2\n************************************************************\n*                                                          *\n*         DCB OPEN EXIT                                    *\n*                                                          *\n************************************************************\n         SPACE\n         USING IHADCB,R1\nUT2OPNX  ICM   R3,3,DCBBLKSI       IS OUTPUT BLOCK SIZE ZERO?\n         BPR   R14                 NO, RETURN IF POSITIVE\n         MVC   DCBBLKSI,DTMAXBLK   YES, SET IT TO MAXMIMUM\n         BR    R14                 RETURN\n         DROP  R13,R1              @DATA, IHADCB\n         TITLE '  R E V L M O D   -   C O N S T A N T S  '\nSYSUT2XL DC    0F'0',X'85',AL3(UT2OPNX)\n         SPACE\nRESS     RESERVE (SYSIEWLP,0,E,44,SYSTEMS),RET=NONE,UCB=0,MF=L\nRESL     EQU   *-RESS\nENQS     ENQ   (SYSIEWLP,0,E,44,SYSTEM),RET=NONE,MF=L\nENQL     EQU   *-ENQS\nDQRS     DEQ   (SYSIEWLP,0,44,SYSTEMS),RET=NONE,UCB=0,MF=L\nDQRL     EQU   *-DQRS\nDQES     DEQ   (SYSIEWLP,0,44,SYSTEM),RET=NONE,MF=L\nDQEL     EQU   *-DQES\n         SPACE\n         PRINT NOGEN\n         SPACE\nSYSINS   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,RECFM=FB,LRECL=80,     +\n               EODAD=CTLENDUP\nSYSINL   EQU   *-SYSINS\n         SPACE\nSYSUT2S  DCB   DDNAME=SYSUT2,MACRF=(W),DSORG=PO,RECFM=U,EXLST=SYSUT2XL\nSYSUT2L  EQU   *-SYSUT2S\n         SPACE\n         WRITE UT2DECBS,SF,MF=L\nUT2DECBL EQU   *-UT2DECBS\n         SPACE\n         DS    0D\nSYSIEWLP DC    CL8'SYSIEWLP'\n         LTORG\n         SPACE\nERRMSGS  DS    0D\n         DC    CL64'DATA FORMAT ERROR - MISSING ./ ADD CONTROL STATEMEN+\n               T            '\n         DC    CL64'DATA FORMAT ERROR - NON-POSITIVE LENGTH INDICATOR E+\n               NCOUNTERED   '\n         DC    CL64'DATA FORMAT ERROR - LENGTH INDICATOR VALUE LARGER T+\n               HAN BLKSIZE  '\n         DC    CL64'DATA FORMAT ERROR - CONTROL STATEMENT FOUND TO HAVE+\n                A LABEL     '\n         DC    CL64'DATA FORMAT ERROR - UNRECOGNISED CONTROL STATEMENT +\n                            '\n         DC    CL64'DATA FORMAT ERROR - MISSING ./ NOTE1 CONTROL STATEM+\n               ENT          '\n         DC    CL64'STOW ERROR - CHECK DIRECTORY CAPACITY              +\n                            '\n         DC    CL64'DATA FORMAT ERROR - MISSING ./ STOW CONTROL STATEME+\n               NT           '\n         SPACE\n         DS    0D\n         DC    CL16' END OF REVLMOD '\n         DS    0D                  END OF CSECT\n         TITLE '  R E V L M O D   -   D S E C T S  '\n@DATA    DSECT\n         DS    18F                 REGISTER SAVEAREA\nWORK     DS    D\n$DEVTYPE DS    2F                  OUTPUT FROM DEVTYPE\nDTMAXBLK EQU   *-2,2               MAXIMUM BLOCK SIZE FOR DEVICE\nINREC    DS    CL80\nSYSIND   DS    0F,XL(SYSINL)\nSYSUT2D  DS    0F,XL(SYSUT2L)\nUT2DECBD DS    0F,XL(UT2DECBL)\n$UCBADDR DS    A                   UCB ADDRESS OF OUTPUT DEVICE\nMEMSEL   DS    CL8\nSTOWENTY DS    CL80\n         ORG   STOWENTY\n         IHAPDS PDSBLDL=NO,DSECT=NO\n         ORG\nTTRZ     DS    F                   NOTE SAVE AREAS\nTTR1     DS    F\nTTR2     DS    F\nRETCODE  DS    F\nMAXBLKSI DS    H\nFLAGS    DS    X\nCADD     EQU   X'80'               PROCESSED ./ ADD CONTROL STMT\nCSTOW    EQU   X'40'               PROCESSED ./ STOW CONTROL STMT\nCALIAS   EQU   X'20'               PROCESSED ./ ALIAS CONTROL STMT\nCSEL     EQU   X'10'               SELECT THIS MEMBER\n*        EQU   X'08'               SPARE\n*        EQU   X'04'               SPARE\nSHRDASD  EQU   X'02'               OUTPUT DASD IS SHARED\nSHRDSET  EQU   X'01'               OUTPUT DISP=SHR\nENQDEQWA DS    0F                  RESERVE/ENQ/DEQ PARAMETER LIST\nRESD     DS    XL(RESL)\n         ORG   ENQDEQWA\nENQD     DS    XL(ENQL)\n         ORG   ENQDEQWA\nDQRD     DS    XL(DQRL)\n         ORG   ENQDEQWA\nDQED     DS    XL(DQEL)\n         ORG\nJFCB     DS    0F\n         IEFJFCBN LIST=NO\n@BUFFER  DS    0D                  BPAM WRITE BUFFER ADDRESS\n@BUFLEN  EQU   32760               BPAM WRITE BUFFER LENGTH\n@DATAL   EQU   @BUFFER-@DATA+@BUFLEN\n         SPACE\n         DCBD  DSORG=PO,DEVD=DA\n         SPACE\n         IHAPSA DSECT=YES\n         SPACE\n         IKJTCB DSECT=YES,LIST=NO\n         SPACE\nMYTIOT   DSECT\n         IEFTIOT1\n         SPACE 2\n         END   REVLMOD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REVLSAMP": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'%\\x00\\x005\\x01\\x03\\'\\x1f\\x01\\x03\\'O\"G\\x00\\r\\x00\\r\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "37.00", "flags": 0, "createdate": "2003-09-28T00:00:00", "modifydate": "2003-10-01T22:47:35", "lines": 13, "newlines": 13, "modlines": 0, "user": "GREG"}, "text": "//GREGL   JOB  CLASS=A,NOTIFY=GREG,MSGCLASS=X\n//*\n//*  SAMPLE JOB TO RECONSTRUCT LOAD MODULES OFFLOADED BY THE\n//*  'REVIEW' TSO COMMAND OR THE 'OFFLMOD' UTILITY.\n//*\n//*  PROGRAM OBJECTS AND SEGMENT OVERLAY PROGRAMS CANNOT BE PROCESSED.\n//*\n//STEP1   EXEC PGM=REVLMOD\n//SYSUT2   DD  DSN=SYS1.PPLIB,DISP=SHR\n//*  NOTE: CHOOSE 2 CHARACTERS FOR DLM WHICH DO NOT APPEAR IN\n//*        THE FIRST 2 COLUMNS OF ANY DATA RECORD.\n//SYSIN    DD  DATA,DLM=@$\n ....    binary 80-byte records produced by REVIEW Offload or OFFLMOD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REVNOTES": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'1\\x07\\x00\\x15\\x00\\x983\\x0f\\x01 \"/#&\\x08I\\x00\\xbc\\x00\\x00\\xc7\\xd9\\xc5\\xc7@@@@@@'", "ispf": {"version": "49.07", "flags": 0, "createdate": "1998-11-26T00:00:00", "modifydate": "2020-08-09T23:26:15", "lines": 2121, "newlines": 188, "modlines": 0, "user": "GREG"}, "text": "REVIEW Release Notes for Release 49.7\n\nREVIEW is a 3270 fullscreen TSO command processor for MVS.\nREVIEW also functions correctly under TSS on MSP systems.\n\nThe source for REVIEW is available on the CBT MVS tape,\nand is in the public domain, as is the data contained herein.\n\nThe REVIEW home page and FAQ are can be accessed from\nhttp://www.prycroft6.com.au\n\nBug reports welcome.\n\nEnjoy.  GP@P6\nEmail - service2@prycroft6.com.au\nFor the current email address visit\nhttp://www.prycroft6.com.au/contact.html\n\n\nR26.0 notes:\n\nThis release has built-in support for the FSHELP and FSH aliases of HEL,\nand includes the new 'FORMAT\"/'FMT' and 'FMTVAR'/'FV' subcommands.\nNote also that '=X' and '=CAN' are now valid member list subcommands.\n\n\nR27.0 notes:\n\nThis release allows PDS searching with '=SEARCH' from the directory list.\nUse '=HELP' to see what is available from the directory list.\nREMEMBER - if any members are tagged then only these members will be\nsearched (or offloaded).  Use '=RESET' to untag all members.\n\n\nR28.0 notes:\n\nThis release introduces the \"point-and-shoot\" capability\nwhich is triggered by invoking REVIEW with no operands.\nREVIEW does a read buffer to get the DSNAME under the\ncursor.  This works from the TSO READY prompt (except\nfor Session Manager which updates the screen before\nREVIEW gets control) and in fullscreen mode.\n\nFor best results under ISPF, set up a PF key with\n         TSO REV) MODE(FSCR\nexactly as shown above.\n\nYou also may wish to set up a REVIEW PF key with\n         TSO REV\nto allow point-and-shoot recursive REVIEWs.\n\nNote that a recursive REVIEW with no operands is\nterminated unless a point-and-shoot DSNAME is found.\nThis is to avoid TSO prompting with no ability to\ninterrupt out of it.\n\nAlso note that for point-and-shoot purposes, a\nmember name is NOT considered to be part of a DSNAME.\n\nR28.1 allows the S member selection code even for\nsame-named members in a concatenation.\n\nR28.2 restores the terminal to line mode when\n\"point 'n' shoot\" can't process a data set.\nAlso, PF5/17 can now find the first member in\na member list if it is tagged.\n\nR29.0 makes the FIND, F and FINDNOT subcommands case insensitive.\nFINDCHR, FC and FCN remain case sensitive.\nFINDPIC, FP and FPN have been added.  eg. FP ###  looks for 3 digits.\nThese commands can all be selected from the member list to search\nthe whole file (one or more PDSs).\nA RACROUTE is now issued for non-pre-allocated non-VSAM data sets on\nACF2 systems to avoid leaving a data set allocated after a S913 abend.\n(OPEN ABEND EXIT processing handles this for RACF systems since R26.0.)\nThe screen buffer has been enlarged so that REVIEW may now actually\nwork on a 62 by 160 screen (logic added 4 and a half years ago).\n\nR29.1 no longer displays ?? under AC for unauthorized program objects.\n\nR29.2 fixes case insensitive searches with ASCII ON.  Picture searches\nare not allowed with ASCII ON.  Case insensitivity is ignored if there\nare no alphabetics in the search argument, thus speeding up searches.\n=SEARCH status indicators are improved.\n\nR29.3 fixes ZAP IDR formatting when ESDID values are invalid.\n\nR29.4 fixes recursion detection, fixes searching for data specified\nwith no trailing quote, and allows the use of double-quotes for\nquoting strings.  Eg. FIND \"=C'FRED',\"\n\nR29.5 enhances DEBUG output for diagnosis purposes.\n\nR29.6 fixes 2 possible S0C4 problems with unexpectedly long input,\nand allows finding a quote character.  Eg. FIND '    and FIND \"\n\nNote that REVSMF has minor updates for formatting CICS and STOTEK\nsilo (SLSS) SMF records.\n\nR29.7 fixes SUB.  (SUBMIT still worked.)\n\nR29.8 fixes RDW handling for non-VSAM DSECT formatting.\n\nNote that REVSMF can extract some WLM service class statistics\nfrom type 72 subtype 3 RMF SMF records.\n\nR29.9 fixes an error handling QUERY TGET data lengths longer than 256\nbytes.  The extra data length overlaid the display translate table\nwhich caused corrupted data display and sometimes caused terminal\nerrors requiring TSO session cancellation.  (The reported observation\nwas with CM/2 terminal emulation under OS/2.)  And now a word about\nIDRs in load modules:\n     Data from IDRs is formatted when REVIEWing associated CESD\n     blocks (when scrolled right past the block itself) and when\n     REVIEWING the IDRs themselves.  Translation and User IDRs\n     are each a single logical record which can be spanned over\n     many physical records.  For these 2 types only the last entry\n     is formatted so that for simple load modules with few CSECTS\n     you do not have to scroll right much, if at all.  For load\n     modules with many CSECTs it is best to view the CESDs to get\n     translation and IDENTIFY details pertaining to each ESD.  This\n     data comes from the IDRs located after the CESDs.  Therefore\n     the data can only be displayed if scrolling down to these IDRs\n     has occurred.  For simple load modules the first screenful is\n     usually sufficient, while for the nucleus, for example, one has\n     to scroll down hundreds of lines before scrolling up again to\n     get the formatted data.  (Caching of records does not occur in\n     pre-XA systems so only data from blocks on the screen can be\n     formatted.)  Only one ESD per CESD record is formatted per\n     page, so left/right scrolling across a 15-page area is required\n     to see all formatted ESDs in a many-CSECTed program (because\n     a CESD can have data about up to 15 ESDs).  (Individual ZAP\n     IDR entries are formatted 2 to a page, and also use left/right\n     scrolling to access different entries.)  R29.9 fixes a logic\n     error formatting IDR data for ESD entries.  After the screen\n     records were processed the last screen record was processed\n     again from cache, upsetting the assembly of the logical record.\n     A design capacity limitation is still evident when looking at\n     a couple of programs from SYS1.LINKLIB (such as ARCCTL) causing\n     display errors when many (hundreds) CSECTs were compiled in the\n     same compilation run.  This is not a problem for the nucleus.\n     The link edit IDR is a fixed-length fixed-format record formatted\n     by REVIEW.  OW29593 adds 4 bytes (the time in packed decimal) to\n     it.  R29.9 should now format this IDR layout also.  Since the\n     binder \"name\" is in plain text, the name will be replaced by the\n     HH:MM:SS of the bind when the data of this extended IDR is broken\n     out.\nR29.9 should also fix a couple of bugs in formatting IMS details.\nPersonally, I blame bitrot to code not tested in 10 years.\n\nR30.0 adds \"jump from leader dots\" where a member can be selected\nby placing the cursor on a member list dot without actually typing\nthe S member selection code.  A VTOC can now be REVIEWed by specifying\nthe quoted data set name 'FORMAT4.DSCB' and supplying a volume serial\nnumber with the VOLUME operand.  While REVIEWing a VTOC the format-1\nDSCBs can be formatted with the FORMAT ON subcommand.  Support for the\nlogical PARMLIB service of OS/390 1.2 (and later) is accessed by a\nrequest to REVIEW the PARMLIB file when no PARMLIB file is allocated.\n(ie. REV PARMLIB F)\n\nR30.1 fixes a bug where issuing a command RECALL on a wide screen\ncaused all data except the recalled command to be cleared from the\nscreen.  This was caused by calculating the buffer start address\nfor the wide screen, but leaving the end address for an 80-column\nscreen.  This made the end address less than the start address, so\nan attempt to clear the primary input area cleared to the end of the\nscreen and wrapped around to clear the top of the screen.\n\nR30.2 fixes a S0C4 abend caused by an incorrect attempt to restore\nthe primary command in the TSO ECT after a HELP session had ended.\nThis was most obvious on recursive HELPs with missing HELP data.\n\nR30.3 fixes recursive REVIEW prompting problems by turning off\nfullscreen mode, thus allowing line mode replies to prompts.\nThe STTMPMD macros were commented out to allow the receiving of\nmessages while in REVIEW under OS/390 2.4.  These can now be\nreactivated for later releases, but probably only have an effect\nif TSO/E Session Manager is used.  One user complained that the\ndirectory area wasn't big enough for a specific PDS so it has been\nincreased from 512K to 768K.  The \"cocktail-shaker\" improvement to\nbubble sort was added for some fixed-offset sorts for PDS directory\nsorting to provide some modest but perceptible sort time reductions.\n\nR31.0 provides PDS facilities accessible from the directory display\nscreen.\n=SETFILE allows the setting of the output DDname, so it can\nbe changed from SYSUT2.  (This has no effect on the CUT and ADD\nsubcommands of \"REVIEW-proper\".)\n=DELINK can now be used to invoke DELINKI to delink load modules.\n=OFFLOAD can now offload load modules to fixed-length 80-byte records.\n=PDSLOAD can invoke REVLMOD or PDSLOAD (depending on PDS RECFM) to\nreload offloaded members.\n=HELP screen split into 2 screens.\nREVSMF no longer link-edited into REVIEW.  REVSMF made RMODE=ANY.\n\nR32.0 adds ZIP and PCX file handling.  ZIP directories can be formatted\nif the ZIP file is a DASD sequential file.  ASEXZIPD from ASE can be\ninvoked to unzip data.  <http://www.ase.com.au>  Unzipped data can be\nREVIEWed and CUT to an output file.  1-bit, 4-bit and 8-bit single-plane\nPaintbrush (ZSoft's PCX file format) can be rendered on a 3270 graphics\nTSO terminal.  Character (raster) graphics done by REVIEW.  GDDM called\nfor vector graphics terminals.  (GDDM base now part of OS/390.  Put the\nSADMMOD data set in the linklist.)  PICDATA allows the porting of a\npicture into other Assembler 3270 applications.  DIV improved a bit for\nZIP file data handling - previously overhead increased exponentially\nwith record number.  (DIV here is REVIEW's internal record caching.)\n\nR32.1 fixes IMS ACBLIB offset bugs and adds Y2K windowing for IMS\nACBLIBs which only use 3 bytes (YYDDDF) for the date.\n\nR32.2 fixes 'PDSE' literal overlaying RMODE=24 program size total,\nand using the wrong register to branch after a zip file error.\nRecognition of low-level qualifiers now handles mixed case.\n\nR32.3 handles 8K and 16K DB2 pages sizes.\n\nR33.0 adds the 'H' member selection code to show program history.\nFor PDS load modules this is the same as 'S' and scrolling right.\nFor PDSE program objects IEWBFDAT is invoked and the results\n(as opposed to the actual member contents) are REVIEWed.\n\nR34.0 replicates nearly all of the PDS facilities for HFS files\nincluding REVIEW/EDIT/BROWSE, global SEARCH, program history,\ndirectory SORT, and entry tagging.  ZIP files are recognised if they\nare HFS files.  HFS PCX files are recognised.  (NULL) is now not\nshown for zero-length records unless HEX or FMT is on.  LRECL=X\nis now supported up to 65535 bytes long.  DB2 rows are now only\nextracted when the first page is recognised as a header page, and then\nany page size should now be handled correctly (assuming it is a\nmultiple of 4K).  The slash ('/') selection code was added (for HFS\nand PDS/PDSE) to allow the \"specification\" of the DATA operand at the\nmember or HFS file level.  '/' can be used to inhibit the default\nprocessing of ZIP and PCX files.  HFS explorer like navigation is\ndone by selecting a subdirectory to make the current directory, or\nPF3 up to parent directory.  PF3 from Root ends REVIEW.  Example:\n   REVIEW /etc/dce  QUICK\nBUT no operands are allowed so REVIEW attempts to show directory\n'/etc/dce  QUICK/' which gets a RC=00000081 RSN=055E0072 because\nit doesn't exist.  So, PF3 which REVIEWs directory '/etc/' with\nthe display positioned to 'dce'.  <NEWLINE> and <ENTER> selects\nthe 'dce' subdirectory so REVIEW now shows '/etc/dce/'.\n\nR34.1 fixes the S0C9 abend when the 'SMF' command is issued.\n\n\nREVIEW has several built-in formats which are pre-coded examples of\nthe general DSECT formatting capability.\n\n**VTOC** - formats DSCB-1 records.  (DS1SMSFG improved with R34.0).\n           Activate with FMT (or FMT ON) when REVIEWing a VTOC.\n\n*DB2TBL* - shows full Row-ID (RID) of extracted DB2 rows.\n           Automatically activated.\n\n*ZIPFILE - formats ZIP central directory records.\n           Automatically activated.\n\n*OBJHIST - formats data extracted by REVIEW from Binder API calls.\n           Automatically activated.\n\n\n\"Normal\" REVIEWing of data is performed by the REVIEW2 CSECT.\nThis operates in 24-bit addressing mode, unless an HFS file is being\nREVIEWed, whereupon REVIEW2 receives control from REVHFS in 31-bit\naddressing mode.  All USS calls are done with AMODE=31.  REVHFS\nprovides routines for READ, CHECK, NOTE and POINT which are pointed\nto by a fake DCB which is used by the standard BSAM macros in REVIEW2.\nAll Binder dialogs (Fast Data Access for PDSEs; full API for HFS)\ntake place with AMODE=31.  ISPLINK is invoked with AMODE=31 for HFS\nfiles, and AMODE=24 for PDS/PDSE members.  GDDM is called with AMODE=31.\n\n\nR35.0 provides another replication of directory processing, this time\nfor unconcatenated PDSE program object data sets.  The REVIEW CSECT\npasses control to REVPDSE instead of REVPODIR when a single PDSE with\nRECFM=U is being REVIEWed.  REVPDSE checks that it is a program object\nlibrary - if not control is transferred to REVPODIR.  If it is REVPDSE\nperforms all directory, formatting and command handling.  Why this\nduplication?  Because REVPDSE (actually cloned from REVHFDIR) can\ndisplay long alias names, as well as program object-only attributes\nwhich can be accessed by DESERV like date/time/job, Program Management\nversion, DLL enablement, etc.  Because REVPDSE only processes program\nobject libraries a few \"normal\" facilities are not available, such as\ndelinking, offloading and edit.  And because there are no output\nfacilities there is no =SETFILE command.  Each of the three directory\nprocessors (REVPODIR, REVHFDIR and REVPDSE) has its own set of help\npanels accessed with '=?' or '=HELP'.  REVPODIR was designed to fit\ndetails from as many members as possible into its internal storage,\nand would require a rewrite to handle long member names.  REVPODIR\nhas several entry formats for use with different member types.\nREVHFDIR and REVPDSE have fixed-format internal entries with a\nvariable-length name at the end.  REVHFDIR acquires 128K (with LOC=ANY)\nwhich is retained until the end of the REVIEW session.  REVPODIR and\nREVPDSE acquire from 8K to 768K (variable GETMAIN) below the line.\nAfter the directory has been read unused space is freed.  As a result,\nfor REVPODIR and REVPDSE an =REFRESH causes the whole area to be freed,\nreacquired, and excess freed (so there is room for any new members).\nWhen a long member name (which must therefore be an alias) is selected\nfor REVIEW or BROWSE, the real member name (maximum 8 bytes long) is\npassed to REVIEW2 or ISPF, as appropriate.\n\nDESERV code is executed with AMODE=31 for access to GET_ALL buffers\nreturned above the line.  The RMODE=24 program size total on the END\nline of the member list only includes RMODE=24 segments of program\nobjects with more than one segment.  (I believe \"more than one\" means\n\"two\".  That is, I don't think a program can have more than two\nsegments (currently).)\n\nOn a OS/390 2.7 system with DFSMS 1.5, pointing SYSLMOD to a PDSE\nyields a PM3 object.  Copying a load module to a PDSE yields a PM1\nobject.  When copying to a PDS with ISPF option 3.3 copy the real\nmember first, then its aliases (without leaving the member list) to\navoid orphan aliases.  When copying to a PDSE, select the real member\nAND all its aliases BEFORE pressing ENTER.\n\nREVSRCH was given a parameter list so it does not have to be aware of\nthe working storage structure of REVPODIR and REVPDSE.  REVHFDIR does\nnot use the parameter list because it drives the searching of HFS files.\nWhen called from REVPDSE, REVSRCH always uses the real member name, but\nfor PDSEs the results are the same (because PDSEs cannot have orphan\naliases).\n\nREVIEW is 20 years old this month (19 Jan 2001).  Happy Birthday!\n\n       And thank you, Bill, for writing it.\n\n\nR36.0 adds things in these areas:                         2002-January\n(1) TSO command management;\n(2) memory management.\n(3) parallel sessions;\n(4) ISPF dialog;\n(5) UNIX file symbolic links.\n\n(1) TSO command feedback is improved by reporting any non-zero return\ncode or abend code in the top line message after the command has ended.\nAlso, for systems without TSO/E, the TSO command is invoked by ATTACH\nwith SZERO=NO to insulate REVIEW from abends by the TSO command, and to\navoid abends when the TSO command does not restore registers properly.\nThis is mainly aimed at MVS 3.8 systems because TSOEXEC (supplied by\nTSO/E) already provides this protection.\n\n(2) SZERO=NO has been added to all ATTACH calls by REVIEW subroutines to\nmaximise memory clean-up by the system after a utility has been called.\nFREEPOOL macros have been added after all QSAM CLOSE macros.  This has\nbeen done to conserve region storage which can be exhausted by several\nrecursive REVIEW sessions, mainly observed on 3.8.\n\n(3) The SWAP command has been added.  This transforms nested REVIEW\nsessions started by TSO REV or FSH commands inside REVIEW/FSHELP into\nparallel sessions.  This makes the sessions accessible without the need\nto terminate more recent sessions.  SWAP LIST can be used to list the\naccessible sessions.  This SWAP processing has nothing to do with\nthe SWAP of ISPF.\n\n(4) In some cases, REVIEW can be run as an ISPF application.  The\nsignificant work of adding dialog support to the directory displays\nhas not been done, so only files without directories can be REVIEWed\nin an ISPF display.  So, PDSs, PDSEs, HFS files and partitioned\nsubsystem data sets are excluded.  DSORG=PS,IS,DA,VS data sets can\nhave their data shown by REVIEW in an ISPF display.  ISPF split screen\nprocessing is then available, and ISPF handles the TSO subcommand.\n\nPrerequistes:  1. Install REVPANEL to ISPPLIB.\n               2. Install REVPROF to ISPPROF.\n               3. Run on MVS/ESA or later.\n\nSeparate from the REVIEW ISPF dialog aspect, other changes are:\n\n(a) When the OS is OS/390 2.10 or later REVIEW will use the new ISPF\nvariables to access the data set name under the cursor for \"point and\nshoot\" invocations rather than relying on ISPF's internal structure\nto find the screen image and cursor location.  This has the added\nbenefit of not requiring the MODE(FSCR specification.\n\n(b) Also under OS/390 2.10 or later in an ISPF environment REVIEW will\naccess ISPF variables to determine extended colour, highlighting and\ngraphic escape support instead of issuing a Read Partition (Query)\nto the terminal.  This means (i) that REVIEW will initialize faster,\nand (ii) REVIEW will not render Paintbrush pictures.\n\nREVIEW now has an 'XISPMODE' (or 'X' for short) operand which causes\nREVIEW to revert to pre-R36.0 behaviour in terms of data display\n(ISPF will not be used) and determining screen attributes (a Query\nwill be performed if appropriate, thus making available any graphics\ncapabilities which would allow the rendering of picture images).\n\n(5) When looking at UNIX directories, if the directory entry is a\nsymbolic link then the link value is shown in green.  This should\nassist UNIX file administration because it can now be seen which files\nare \"real\" and which are accessed via symbolic substitution.\n\n\nR36.1, R36.2, R36.3 and R36.4 were small bug fixes in the main.\n\nR36.5 changes ZIP directory formatting to handle 10 decimal digits for\nthe compressed and uncompressed file sizes, which is the required\nnumber of digits to report any value of an unsigned fullword.\n\nR36.5 also adds the 'A' selection code for UNIX files, which instructs\nREVIEW to treat the selected file as an ASCII text file.  Not only is\nASCII-to-EBCDIC translation activated, but the end of line trigger\nis changed from the EBCDIC New Line (NL=x'15') to the ASCII Line Feed\n(LF=x'0A').  If the LF is immediately preceded by a carriage return\n(CR=x'0D') then it is also not shown in the display.\n\nR36.6 fixes subsystem allocation which was probably broken years ago\nwhen support was added to REVIEW VTOCs when the data set name of\n'FORMAT4.DSCB' was specified.  Bug reported by David Welles.\n\nR36.7 fixes IKT00405I SCREEN ERASURE CAUSED BY ERROR RECOVERY PROCEDURE\nafter an ISPF Edit or Browse changes the screen to a smaller size\nand then REVIEW tries to write data to the larger size.  Bug reported\nby Mark Zelden who also reported a bug in REVSMF when formatting SMF\ntype 250 (TSOMON) records: an S0C4 in REVSMF would occur because the\ntarget of an MVC instruction loading a literal used R7 as the base\ninstead of R6.\n\n\nR37 notes\n\nR37.0 implements a major internal reoganisation.          2003-October\n\nMuch of the triplicated code from the directory handlers has been unified\ninto commonly callable routines.  Several facilities only available while in\nin \"REVIEW data mode\" are now available from directory displays as well.\nExamples of such facilities include the TSO and SWAP commands, the ability\nto set PFK values, and the ability to run as an ISPF dialog.\n\nThe list of CSECTs making up the REVIEW command processor are:\n\nREVIEW   - entry point to perform parsing and initialisation.\nREVIEW2  - main \"browse file data\" processor.\nREVPCL   - REVIEW TSO parsing parameters.\nHELPCL   - FSHELP TSO parsing parameters.\nREVPDS   - formerly REVPODIR - format, display and navigate PDS directories.\nREVSORTE - PDS directory sort enhancer.\nREVALCO  - allocate and serialize sequential output file.\nREVDALO  - free and deq sequential output file.\nREVOFFLD - sequentialize PDS members.\nREVSRCH  - search PDS members for data.\nREVISPF  - invoke ISPF Edit, Browse or View functions.\nREVLOAD  - invoke PDSLOAD or REVLMOD to load new PDS members.\nREVDLNK  - invoke DELINKI to delink load modules.\nREVDIV   - cache reviewed data in virtual storage.\nREVPNS   - determine point-and-shoot data set name.\nREVHIST  - invoke Binder to show program history.\nREVIMAGE - show picture using raster graphics.\nREVGDDM  - show picture using vector graphics.\nREVUNIX  - formerly REVHFDIR - format, display and navigate UNIX directories,\n           manage UNIX file search, and set up for UNIX data REVIEW.\nREVPDSE  - format, display and navigate PDSE program library directory.\nREVHEAD  - clear screen buffer and initialize common first 2 lines.\nREVCOMM  - perform all TSO terminal communication using ISPF or TPUT/TGET.\nREVMSGS  - house and retrieve common fullscreen messages.\n\nFINDHEX, FINDCHR and FINDPIC (and their respective FINDNOT commands) have\nbeen dispensed with in favour of specifying the search argument in an\nISPF-like manner.\n\nFIND and FINDNOT can now have a search column range specified, as well as\none of the PREFIX, SUFFIX and WORD keywords specified.\n\nPDS(E) and UNIX files-in-a-directory SEARCH can exploit the new FIND options.\n\nVIEW has been added to the EDIT and BROWSE repetoire for invoking ISPF services.\n\nREVLMOD has been enhanced to use linkage editor serialisation\n(QNAME=SYSIEWLP) when updating load libraries to improve data integrity.\n\nREVIEW has been enhanced to use ISPF serialisation (QNAME=SPFEDIT) when\nupdating sequential or partitioned data sets.\n\nDirectory display subcommands no longer have the '=' prefix, and primary\ninput text is no longer interpreted as a LOCATE request specification.\n\nDirectory displays no longer have a separate set of PFK values hard-coded.\nA SORT command is available to request the sorting of directory entries.\n\nSome commands such as TSO, =X, KEYS and HELP will behave differently when\nREVIEW is running as an ISPF dialog because these commands will be\nprocessed by ISPF.\n\n\nR38 notes\n\nR38.0 implements REVEDIT - the REVIEW Editor.             2004-May\n\nThe REVEDIT CSECT has been added to supply an editor for PDS members\nand sequential data sets.  The 'U' member selection code and the\n'UPDATE' primary command will invoke REVEDIT, as will the 'E' member\nselection code and the 'EDIT' primary command when REVIEW is not\nrunning in an ISPF environment.  Various other bug fixes are also\nincluded.\n\nThe TSO HELP now has several members.  REVEDIT has its own HELP member\nas does each of the three directory displays.  John Kalinich has kindly\ncoded up numerous ISPF tutorial panels which can be displayed when a\nHELP command is processed by ISPF.\n\nThis release also sees the introduction of the REVGEN source member\nwhich sets the values of switches used during conditional assembley.\nWith the appropriate settings in REVGEN, REVIEW can be assembled on\nMVS 3.8 using the Tachyon Legacy Assembler and the SYS1.MACLIB and\nSYS1.AMODGEN macro libraries from that MVS.\n\nSee http://www.tachyonsoft.com/ for the Tachyon Assembler.\nMacros for BASSM and BSM are required under MVS 3.8 to assemble REVIEW.\n\nREVEDIT can use a data space to hold data while it is being edited.\nA data space can grow to 2GB subject to customisation by IEFUSI.\nREVGEN can be set so that REVEDIT will use the user region to hold\nthe data - obviously a necessity for MVS 3.8 and other pre-ESA systems.\n\nR38.1 fixes a few bugs such as REVIEW accessing new extents after\nan UPDATE increased the size of the data set, REVEDIT SAVE handling\nerased sequence numbers, and ERR being a valid abbreviation for\nERROR on a REVEDIT LOCATE command.  Other changes include the removal\nof the DDname operand of CUT and APPEND in favour of presenting a\npanel to specify a data set name, and the addition of the COPY command\nin REVEDIT.  A \"point-and-shoot\" REVIEW also now works when triggered\nfrom a REVEDIT session.\n\nR38.2 fixes a few bugs such as an S0C4 when initializing as an ISPF\napplication under SDSF, and fixing the home location of the cursor on\nscreens with more than 80 columns.  A member list sort can now be\ntriggered by placing the cursor on a column heading (as suggested by\nJohn K.) - eligible headings have underscores.  The effective uid will\nbe set to 0 (superuser), RACF permitting, to improve access by REVIEW to\ndirectories and files (as suggested by Mark Zelden).  The original\neffective uid is restored by the time any ISPF services are invoked.\nREVPANEL now has extra attribute codes to allow the display of data\nwith GE(ON) explicitly requested.\n\nR38.3 fixes the problem where a cursor-triggered member sort did not\noccur when the end of the member list was on the screen.  Also, the\nBinder API processing was cosmetically changed during diagnosis for\nproblems reported in IBM APARs OA08880 (ABEND0C4) and OA09299 (RC8\nREASON CODE 1080003A) which are relevant for z/OS 1.5 and 1.6.\nThanks to Mark Zelden for detecting and reporting the bugs to IBM.\n\nR38.4 fixes an S0C4 abend after VSAM OPEN failure - now the return\nand reason codes are displayed properly as before - must have been\nbitrot in a recent release.\n\nR38.5 fixes two problems with REVEDIT:\n- an intermittent S0C4 processing line commands.\n- unreliable matching by FIND when PREFIX, SUFFIX or WORD is specified,\n  especially when ALL is also specified.\n\nR38.6 fixes an S0C4 when the editor initialises after data was found\nin the browser.\n\n\nR39 notes\n\nR39.0 implements syntax colouring for Assembler and JCL.  2004-December\n\nThe 'HILITE' (or 'HI') REVEDIT subcommand has been added to control\nwhether syntax highlighting is to be activated or not.  The HILITE\nsetting is saved in the profile if one exists.\n\nThe 'UPDATE' (or 'UPD') operand of 'LOCATE' has been added so that\nlines updated in the current edit session can be located.  This operand\n(unlike the other non-numeric operands of LOCATE) is not compatible\nwith ISPF's Edit.\n\nR39.1 fixes an S0C4 when HEX ON is used with records which do not reach\nthe end of the screen line - the terminating attribute byte code was\nbeing moved into the edited data array corrupting a pointer instead of\nto the screen buffer.  Bug reported by John H. Keith.\n\nR39.2 makes improvements to PDS-member/UNIX-file searches performed\nfrom directory entry list displays.\n\nFirstly, the standard PDS directory display now can perform searches\nfor lowercase strings - this was just a plain bug.\n\nSecondly, another bug where the picture attribute of the search was\nnot reset for a non-picture search after a picture search is fixed.\n\nAnd thirdly, non-picture case-insensitive searches have been sped up\nto (practically) match the performance of non-picture case-sensitive\nsearches.  This is achieved by the simple expedient of translating\nthe whole record to uppercase once after it is read instead of for\neach compare, thus making simple compares adequate to find the data.\nNote that this does not speed up normal FIND command processing as the\ndata must be kept untranslated for display and other processing.\n\nR39.3 changes behaviour/output as follows:\n- EREP formatting will display the STCK value in hex if the system\n  does not have the STCKCONV facility (ie. is pre-SP4), and system\n  abend code digits have been reduced from 4 to 3.  Also, garbage\n  will no longer be left in column 81.\n- Fix intermittent incorrect numeric data such as VV.MM when showing\n  member details - this occurred for some members and not others when\n  shown on some screen lines but not others.\n- A new 'M' selection code is implemented to display a module map\n  for program objects (both PDSE and UNIX, but not PDS).  (The *OBJMAP*\n  and *OBJESD* internal formats are used to display the results.)\n- REVEDIT will no longer loop (or perhaps abend) when an I line command\n  is on the screen while a move/copy is pending, and autoinsert will no\n  longer occur if the cursor is in the line number field of the line.\n\nSince the demise of JCC the MINIZIP and MINIUNZ load modules are now\nincluded in the executable program library.\n\nR39.4 adds support for VSAM Extended Addressable access, although\nREVIEW only supports up to 1TB with this change.  Also, RLS=NRI is\nnow specified internally to maximize access to data controlled by RLS.\n\n\nR40 notes\n\nR40.0 implements REVED and REVOUT.                        2006-April\n\nREVED is simply an alias of REVIEW to initiate the edit of a sequential\ndata set (instead of having to browse it with REVIEW and issue the EDIT\nor UPDATE primary command).  The other main difference of REVED is that\nthe meaning of the 'S' selection code for PDS members is to request the\nmember be edited with REVEDIT instead of being browsed with REVIEW.\n\nREVOUT provides a fullscreen interface to TSO FIB commands so that they\ncan be used to give QUEUE-like or SDSF-like access to job output that\nis independent of the level of MVS and Job Entry Subsystem in use.\nFunction depends on the SYSOUTTRAP facility and uses the CLIST called\nREVOUTJB which should be installed into SYSPROC.\n\nMVS 3.8 users who wish to use REVOUT may be interested in usermods from\nhttp://www.prycroft6.com.au/vs2mods which add CLIST function including\nSYSOUTTRAP (ZP60014), and which alter JES2 (ZP60015) and TSO STATUS\n(ZP60016) so that the TSO STATUS command without any operand returns\nthe status of all jobs with names of the TSO user's id plus zero, one,\ntwo and three extra characters (up to a maximum length of eight).  A\nJES3 version of the ZP60015 usermod would be needed to provide similar\nfunction in a JES3 environment.\n\nThis release also rolls up bug fixes originally intended for R39.5,\nmost notably those debugged by Steven Becquer of Miami-Dade County\nPublic Schools I.T.S.\n\nCSECTs for PDSEs and UNIX have been moved from the REVSUBS source\nmember to a new REVSUBS2 source member.\n\nREVALCO (which is called for SEQLOAD and OFFLOAD from the member list,\nand CUT and APPEND from data REVIEW) has been changed such that if\nthe specified output data set name cannot be found it will be created.\nIt will be a sequential data set if no member name was supplied, or\na PDS with 20 directory blocks if a member name was supplied.  In most\ncases the new data set's DCB will match that of the data set being\nREVIEWed.\n\nR40.1 changes:\n- correct DMB size count for IMS V6 and V7.\n- ignore DATA operand for REVED command (do not edit PDS directory).\n- prevent S0C4 abend of REVOUT if REVOUTJB CLIST is not installed.\n\nR40.2 changes:\n- display found data hidden by ISPF split screen.\n- general fixes to scrolling.\n\n\n\nR41 notes\n\nR41.0 rolls up changes from 40.3 onwards.                 2007-November\n\nApart from bug fixes, the main changes include:\n- show step name and CPU time of active jobs in REVOUT.\n- extract pictures from most types of uncompressed Windows/OS2 bitmaps.\n- use native 3270 vector graphics when available to show pictures.\n- session id numbers are now fixed and not relative to current screen.\n- current session id shown as blue superscript if session is nested.\n- cursor position saved and restored across SWAP commands.\n- make Edit the default selection action for the REVED command.\n- generate cursor autoselect 'S' only if no primary command.\n- improve TSO logic to not finish calling CLIST after subcommand CLIST.\n- suppress screen size switch if screen size already has 80 columns.\n- use PDS member DIV caching now only of RECFM=U - the main purpose\n  is to allow CESD formatting show IDR details - now also for pre-XA.\n\nR41.0 enhancements to REVEDIT include:\n- add TF and TS line commands.\n- add SORT primary command.\n- add CREATE and REPLACE primary commands.\n- colon command prefix applies command to current line. eg. :TS\n- support ASM highlighting of source code in a jobstream.\n\nR41.0 enhancements for MVS 3.8 also include:\n\nREVSMF can now format data from MF/1 records (types 70->74).\nOf the SMF records produced by MVS 3.8, only types 73 and 74\nfrom MF/1 seem to be sensitive to left/right scrolling.\n\nAs of R41.0 REVIEW will override the LRECL of SYS1.MANX and\nSYS1.MANY of one thousand with ten thousand because MF/1 can write\nrecords longer than one thousand bytes.  REVIEW will continue\nto override the blocksize of SYS1.LOGREC of 40 with 1944.\n\n\nR41.1 changes REVEDIT to avoid S0C4 abend after a TF line command\nin ESA (data space) mode, and also adds minor improvements to\nJCL syntax highlighting.\n\n\nR41.2 fixes some things serious (like S0C4 moving lines to before the\ncurrent top of screen) and not so serious (like the new members added\nby a PDSLOAD into an empty PDS can be seen without having to scroll\nup), and also adds some features.\n\nREVEDIT can now be invoked in VIEW mode (where data set serialization\nis not performed and SAVE is disabled) and REVEDIT also now supports\nUNDO and REDO by employing a recovery data set called\nprefix.REVEDIT#.BACKUP where # is the screen number.\n\nNote that recovery is manual, but can be performed by REVIEWing the\nrecovery data set, using NEWTOP to access deleted members if the\nexisting member is corrupt - not that it should be, using CUT to\ncopy the records to a new data set, and editing the new data set\nand shifting all data to the left to restore proper data alignment.\n\nThe recovery data set should be deleted to re-enable UNDO/REDO\n(and recovery) for that screen session number.\n\nUNDO OFF is available to stop undo/recovery processing if you find\nit is adding too much to response time.  And then there is UNDO ON\nfor when you find that the overhead isn't so bad after all.\n\n\nR41.3 fixes an error where the editor tries to move 8 bytes into 4 bytes\nwhen only 4 were needed.  Because it was at the end of a page (most of\nthe time) the result could be harmless, a mysterious storage overlay,\nor an S0C4 abend.\n\n\nR41.4 fixes an S0C4 abend encountered after an UNDO was requested and\nthe post-UNDO display position was not Top-of-Data (as in UP MAX).\n(If the post-UNDO display position was line zero there was no problem.)\n\nA check of the ISPF panel dynamic area size during initialization\n(testing that it matched expected results based on the screen size)\nhas been removed in the hope that this allows more ISPF application\nREVIEW sessions on wide screens.\n\n\nR41.5 fixes several basic bugs.  When a block was excluded which\nincorporated the current top display line REVEDIT lost track of, well,\nreality, so things like line numbers became corrupt.  LOCATE by line\nnumber was fixed as it was just plain wrong with excluded lines\nbecause it invoked UP or DOWN scrolling which count display lines, not\ndata records.\n\nAs well as OFF, JCL, ASM and AUTO, now PLI, CLIST and DATA are valid\noperands of HILITE or HI.  Slash-asterisk ... asterisk-slash comments\nare now highlighted as such, PL/I column 1 and pre-processor statements\nare shown in blue, and Assembler labels can now have non-trailing\nampersands in other than the first position not flagged as an error.\n\nA leading *PROCESS statement with a semicolon is taken to indicate\nPL/I source, while one without a semicolon is taken to indicate\nAssembler source.  MAR or MARGINS is not yet parsed.\n\nJCL validation has been extended in some areas.  The REGION parameter\non EXEC and JOB statements is validated mainly to detect post-XA\nvalues on pre-XA systems.\n\nFor JCL DD statements, plain data set names are validated and\nunderscored if cataloged and shown in blue if not cataloged.  If a\nsingle volume is specified without parentheses it is length-checked,\nand for MVS/370 systems an attempt is made to see if it is an online\nDASD volume.  If it is online it is underscored, and its generic\ndevice type designation is shown in that line's command area at the\nleft of the screen.\n\nThere is no cross-checking with the catalog entry vs VOL=SER in the JCL,\nnor with the volume device type vs the UNIT value in the JCL.\n\n\nR41.6 changes include:\n- REVEDIT backup file now uses the userid as the high-level qualifier\nwhen PROFILE NOPREFIX is in effect.  (Reported/suggested by Sam K.)\n- Screen size now set from ISPF panel size.  (Reported by John K.)\n- REVOUT will now display some rudimentry Assembler syntax highlighting\nwhen showing Assembler listings.  (Requested by Tom Armstong.)\n- Program object PDSE directory display now\n  - has more SORT types (idea by Charles MacNiven).\n  - shows PM sublevel in superscript (or lower case if ever over 9).\n- Done some work on implementing an INFO subcommand.\n\n\nR41.7 fixes operation as an ISPF application broken when trying to\nhandle the case when the line mode screen size (as returned by STSIZE)\nis different from the fullscreen screen size (as reflected in the\ndimensions of the ISPF panel).  The undocumented global subcommand\nof 'CDE' or 'JPA' has been added.\n\n\nR41.8 fixes:\n- REVOUT Assembler listing syntax highlighting for wide screen.\n- REVEDIT CREATE/REPLACE creating corrupt SPF statistics.\n- REVEDIT CREATE/REPLACE RECFM=V not copying first selected record.\n- screen size not switching for pre-coded 80-column displays.\n- UNZIP temp unit of 3380 - now 3390 followed by SYSALLDA for retry.\n  (It was VIO originally, but large zips could cause auxiliary\n  storage shortages on under-configured pre-SMS systems.)\n\n\nR41.9 fixes:\n- 'CHANGE ALL' missed occurrences of the FIND string after syntax\n  highlighting housekeeping used the dynamic translate table work\n  area thus overlaying the TRT table used by CHANGE.\n- REVHIST setup for PDSEs just checked that DIV was initialized\n  (as it used to be not so long ago) and if it wasn't issued the\n  '\"REVIEW\" internal storage exhausted' message.  Now REVHIST\n  will issue the DIV GETMAIN call for PDSEs as it does for UNIX.\n\n\n\nR42 notes\n\nR42.0 adds support for DSNTYPE=LARGE data sets.           2008-September\n\n\nR42.1 changes:\n- Fix locating a ZIP archive's central directory for DSNTYPE=LARGE.\n- Add the 'RTF' subcommand to output coloured print files in RTF\n  format.\n- Enhance Assembler listing syntax highlighting to show literals in\n  white as REVEDIT syntax highlighting does.\n- Add the 'D' PDS member selection code so that members can be deleted\n  from the PDS member selection display such that they can be restored\n  with an 'R' selection.  This is only supported for unconcatenated\n  PDSs and not PDSEs (because the restore does not work for PDSEs).\n- Enhance the 'R' PDS member selection code to restore members\n  deleted with a 'D'.\n- Fix various cosmetic glitches.\n- Fix PDSE 'H' errors caused by erroneous DIV processing.\n- Various internal reorganizational changes such as moving the RECALL\n  stack from the @DATA area and placing it into an area which is\n  shared by all parallel sessions, and removing the code to transfer\n  the RECALL stack ownership during logical screen SWAP processing.\n  Another example is suppressing DIV processing during searches of\n  program libraries - no point caching data for a single scan - which\n  was sometimes a source of abends during such searches.\n- Add the undocumented 'TCB' (alias 'RB') command.\n\n\nR42.2 changes:\n- Highlight PL/I source code in editor according to character code\n  points, and report unbalanced parentheses as syntax errors.\n- Allow REVOUT to run as an ISPF application.\n\n\nR42.3 changes:\n- Add the 'SCRNAME' command to assign a new name to the logical\n  screen session.\n- The optional operand of the 'SWAP' subcommand can now be 'NEXT',\n  'PREV' or a session name, in addition to 'LIST' or a session id\n  (decimal number) that were previously allowed.\n- The default value of PF9 is changed from 'SWAP' to 'SWAP NEXT'.\n- An attempt is made to name logical screen sessions automatically.\n  Names used are OUT (for REVOUT), HELP (for FSHELP) and the last\n  data set name qualifier (if fewer than three qualifiers exist)\n  or the second-last data set name qualifier (if more than two\n  qualifiers exist).  Names shorter than eight characters will have a\n  digit (2 - 9) appended to prevent duplicate session names.  A name\n  will be left blank rather than creating a duplicate non-blank name.\n- The concurrent or parallel session count limit is increased\n  from 8 to 16.\n- Add the 'N' PDS member selection code which allows a new name\n  to be assigned to an unconcatenated PDS or data PDSE member.\n  The user is prompted to supply the new name when the selection\n  code is processed.  Member names containing commas, imbedded\n  blanks, or code points less than a blank are rejected (message\n  will just say REQUEST CANCELLED).  The 26 English letters will\n  be folded to upper case.  Apart from these restrictions any\n  other code point you can type in will be used as supplied in the\n  new member name.  Null or blank input, or input entered with a\n  key other than the <enter> key will also cause the request to be\n  cancelled.\n- Fix to serialization bug (not supplying the data set name to ENQ\n  correctly)  which allowed a member to be deleted, restored or\n  renamed while it was being edited.\n- REVEDIT (Edit and View) is changed to show the search match that\n  the cursor has been positioned to in reverse video, as is done\n  by REVIEW (Browse).\n- The PL/I source margins columns are extracted from the 'SORMGIN',\n  'MAR' or 'MARGINS' settings from leading '*PROCESS' and '%PROCESS'\n  statements for syntax highlighting purposes.\n\n\n\nR43 notes\n\nR43.0 introduces RFE - the \"REVIEW Front End\".            2010-March\n\nRFE is a menu framework to allow navigation to the various components\nof the package.  The initial menu options are:\nD - \"REVLEV\" - the data set list utility which is a bit \"3.4-ish\".\nO - \"REVOUT\" - to access spooled output which is a bit\n               \"QUEUE meets 3.8-ish\".\nT - \"REVTSO\" - which is a bit \"6-ish\".\nThis may change to a numerical scheme later if enough other options\nmaterialize.\n\nTo assist RFE operations, the default for PFK2 is now 'SPLIT' which is\na new global subcommand equivalent to 'TSO RFE'.  Note that an initial\nRFE option can be specified as an operand of 'SPLIT'.\n\nArchitecturally, this release sees all BSM and BASSM instructions\nremoved from the package.  All code is now intended to run in the\n31-bit addressing mode under z/OS, although the code has yet to be\ncompiled and tested under z/OS at the time of writing.\n\nRFE is mainly to aid use under MVS/370, and so the 370 version is\nbeing released first.\n\nThe source for the main load module has increased from 49.3 KLOC to\n57.8 KLOC.  As well as new CSECTs delivering new function, a few\nfixes were also implemented, including:\n- Add EADSCB=OK settings.\n- Reactivate DIV PDS member data caching under FSHELP to stabilize\n  scrolling when )I member inclusion is used.\n- Add extended ISPF stats recognition (but not necessarily digestion).\n- Preserve seconds in timestamp when processing ISPF stats.\n- Recognize and handle ZIP archives in PDS members.\n- When exiting from a REVIEW of a zipped file, scroll to place\n  that file at the top of the zip directory display, instead of\n  always reshowing the zip directory from the top, which was *very*\n  annoying when a ZIP archive contains many screensful of file names.\n- Fix \"fastpath\" which was broken and always reported I/O errors.\n  It might have been broken by the DSNTYPE=LARGE support.\n- Detect screen size change dynamically.  This is intended to support\n  loss of a terminal and a LOGON RECONNECT using a terminal with\n  different screen dimensions.\n- Assume square brackets can be rendered natively with x'AD'/x'BD'.\n- Improve STAX processing for MVS/370.\n- Fix an intermittent S0C4 with REVEDIT line command blocks.\n- Fix an S0C4 in REVEDIT with 'C * *' and new string never specified.\n- Use userid as 2nd dsname qualifier for UNDO/REDO data set when\n  the prefix is not equal to the userid.  This will stop other users\n  with your prefix hogging your UNDO/REDO and CONDENSE data sets.\n  (CONDENSE is used by the 'Z' action in REVLEV.)  And you can now tell\n  which users are making such data sets under your high-level qualifier.\n- Use Merge Sort instead of Bubble Sort for member name and TTR sorts,\n  reducing an initial display of 'REV ISPPLIB F' from minutes in some\n  cases to sub-second.  (Sorts of other member attributes still use\n  Bubble Sort because the field to be sorted is not fixed.  REVLEV\n  uses Merge Sort when sorting the data set name list.)\n- Add repeated-symbol optimization for triple-plane symbol graphics.\n- Upgrade the 'N' (member rename) action code dialog screen I/O.\n\n\nR43.1 changes:\n- Prevent QSAM I/O error during REVEDIT COPY from crashing off the\n  whole REVIEW/RFE environment by adding EROPT=ACC to the DCB so\n  that the abend is considered recoverable by the SYNAD exit.\n- Add a member selection list for REVEDIT COPY from a PDS and no\n  member name specified.  (This was the chief source of the QSAM I/O\n  errors mentioned above.)\n- Report MEMBER NOT FOUND instead of S013-18 for REVEDIT COPY from\n  a PDS when the specified member is not present.\n- Verify that the UNDO/REDO data set does not exist at the start\n  of a REVEDIT session before allocating it.  If it does exist then\n  report REVVEDIT#.BACKUP NOT REUSED (where # is the screen number)\n  instead of DYNALLOC feedback codes.  It is up to the user to decide\n  if the data in the pre-existing data set should be used for recovery.\n  Any such recovery may well involve manually editing a copy of the\n  recovery file member and shifting all of the data 12 columns to the\n  left.\n- Do similar for the CONDENSE data set, except that the message is\n  ABORTED - CONDENSE FILE EXISTS.  It is up to the user to decide\n  if the data in the pre-existing data set should be used for recovery.\n  Any such recovery would probably involve using the REVLPDS program.\n- Handle full DIV when loading data from REVCATCH - was getting S0C4.\n  (\"REVCATCH\" refers to the way line mode TSO data is taken from\n  SYSOUTTRAP and loaded into DIV for fullscreen scrollable browsing.\n  Look at the REVLISTC CLIST to see an example.)\n\n\nR43.2 fixes the UCB address acquisition from the TIOT which became\na bug with the 31-bit addressing conversion and which can cause an\nS0C4 abend.\n\n\nR43.3 fixes the display of prompting panels when running as an\nISPF application.\n\n\nR43.4 completes the support necessary to process VTOCs on EAV\nand data sets residing in EAS which have format-8 and format-9\nDSCBs replacing the format-1 DSCB.\n\n\nR43.5 fixes more AMODE-31 glitches and adds the data set name to\nopen file details in the display produced by the 'TCB'/'RB' command.\nREVHIST has been rewritten to use the full Binder dialog API in all\ncases, and is now called under z/OS for PDS load modules as well as\nPDSE and HFS program objects.  **-RED ALERT-** Also fixed is the\nREVEDIT data corruption of edited data by a CHANGE ALL command which\ncaused some data bytes to be overlaid with x'FF' when using a data\nspace to back the data.  Sessions on pre-ESA levels of MVS were not\naffected.\n\n\nR43.6 fixes a S0C4 abend when the 'OPERANDS' or 'MSGID' operand of\nFSHELP was used.  This was exposed when running with AMODE=31.\n\n\n\nR44 notes\n\nR44.B rolls up changes from 43.6 onwards.                 2012-October\nIt is an MVS/370-only OCO beta or early release prior to GA.\n\nApart from bug fixes, the main changes include:\n- A new 'SETUNZ' command to specify the file attributes, thereby\n  overriding the information in the ZIP file directory entry.\n- Changes to the way member lists scroll after member selection.\n- Using PDS subcommands to produce displays for the 'H' and 'M'\n  selection code processing of load modules (via the REVUSPDS CLIST).\n- Adding the 'BOUNDS' primary command in REVEDIT.\n- Show data in out-of-bounds columns in blue in REVEDIT.\n- Adding the 'TE' line command for text entry in REVEDIT.\n- Adding the 'CUT' and 'PASTE' primary commands to REVEDIT.\n- Recovering from PDS directory I/O errors during INFO processing,\n  which includes the data set Delete function in REVLEV (data set list).\n- Adding the 'M' action code to REVLEV (data set list).\n- Adding LEFT/RIGHT scrolling in REVLEV (data set list) so that all\n  information columns can be viewed on insufficiently wide screens.\n\nThe 'BRVS' (or 'B' for short) undocumented operand has been added\nto the REVIEW command.  Its use is intended to allow the browsing\nof virtual storage. When specified, the required first positional\n(data set name) operand is ignored.  The data is displayed under\nthe heading of ACTIVE, as per IPCS.  About all it is currently\ngood for is browsing the in-core MVS/370 nucleus.\n\nThe following z/OS-only fixes were introduced into the code base:\n- For program PDSE directory displays, the member name operand of\n  primary commands is now folded to upper case if there are no\n  lower case characters in any of the member names.\n- For UNIX directory displays, the entries read from a directory\n  are now always sorted before display.  Previously, if the SORT\n  order was \"sort by name\" no sorting was performed, which could\n  lead to an out-of-order display depending on subdirectory MOUNT\n  points, leading in turn to unexpected behaviour for LOCATE commands.\nActually, the term \"z/OS-only\" really means \"MVS/ESA or later\".\n\n\nR44.0 is the first R44 GA release - with source code.     2014-January\n\nREVIEW now incorporates a GIF decoder which adds GIF files to the\nPCX and BMP file formats that can be decoded and displayed on 3270\ngraphics terminals.  Interlaced and animated GIFs are supported.\nOnly one cycle of the animation is currently shown.  NEWTOP can\nbe used to manually trigger another cycle.\n\nWhen programmed symbols are used for graphics, REVIEW prefers to\nload the code points into the internal screen buffer from which\nthe 3270 data stream is built.  This allows 3270 compression logic\nto also be applied to graphics data, and reduces the number of\nTPUTs issued.  This scheme does not work well when the pictures are\nlarge enough to require more code points than all read/write\nstorages can provide.  The logic to build the 3270 data stream for\nthese large pictures has probably been broken in this release, but\nhopefully it will be fixed in due course.\n\nREVIEW 'ACTIVE'\nwill now cause the current contents of virtual storage in your TSO\nsession address space to be browsed.  EQUATE and DROP commands have\nbeen added.  LEFT and RIGHT are repurposed in this mode to control\njumping through the storage address trace table.  LPA and JPA loaded\nmodules, as well as (under z/OS) nucleus control sections are\nautomatically defined as usable symbols.  LOC/LIST now understands\nstorage addresses specified much like as is done in TSO TEST.\nThe symbol name 'X' can be used for the current location, as per IPCS.\n'%' and '?' can be used in the field preceding each storage word.\nNo support for \"above the bar\" storage currently exists.\n\nThe 'BRVS' operand mentioned above has been scrapped.\n\nBrowsing z/OS UNIX zip files is now supported.\n\nNot mentioned under R43 above is the vertical scroll bar.\nWhen not running as an ISPF application, and when the PDS member list\nis more than a screenful, column 80 contains an indicator of the\nvertical scroll location of the member list.\n\nIn response to a request, member scrolling is now a bit different.\nFirstly, the member list scrolls less.  The cursor is placed beside\nthe member just processed, but that member's jump dot is blanked,\nso <enter> will just restore the cursor to home.  This should mean\nthat all members will always be visible when they can all fit in\na single screenful.\n\n\n\nR45 notes\n\nSeveral MVS/370 ESP releases were issued in August and September 2014\nwith ESP6 being the last.\n\nR45.0 (September 2014) rolls up the defects reported from Early\nSupport Program up to the GA date.\n\nChanges include:\n- Reorganization of profile member contents, so previous PFK\n  defaults will be lost.\n- Support for picture search when 'ASCII ON' is set.\n- Explicitly check for and disallow a request to APPEND request to a\n  PDS member.\n- Issue RACROUTE for many non-VSAM data set accesses whenever MVS\n  security is active.\n- Assume access is denied when the RACROUTE return code is greater\n  than 4.\n- Add a new 'SB' subcommand which is the same as 'SUBMIT' but invokes\n  the new REVSB CLIST to prevent line-mode terminal I/O.\n- Support access to large PDSE members.\n- Add START alias of SPLIT.\n- Change PF2 default to START since SPLIT behaves like ISPF's START\n  command.\n- Reorganize RFE menu option numbering.  Options 1, 2, 3.1 and 3.2 now\n  exist in addition to options 3.4, 3.8 and 6.\n- Support leading ampersand in command to retain command string in\n  input area.\n- Reorganize REVPDS CSECT's internal handling of directory entries.\n- Display position number on the top line of the REVPDS member list\n  display.\n- Various program restructuring to reduce duplicate code.\n- Remember more RFE stuff in profile members, such as most recent\n  \"other data set\" history.\n- Add automated EDIT recovery in option 2.\n\n\nR45.1 includes the following changes:\n- Fix display of ISPF statistics when 32-bit record counters are used.\n- Fix S0C4 abend which preceded freeing the VTOC of a volume DSLIST.\n- Expand the \"other data set\" history list from 10 to 16, and reduce\n  the displayed list size to the number of entries that will fit on\n  the screen.  This fixes screen corruptions seen on 24-line screens.\n- Include new data set attributes panel before 'CUT' creates a new data\n  set. The data set name is pre-primed with the previous output data\n  set name, if any.\n- New logical/parallel sessions (from 'SPLIT' or 'START') will inherit\n  the same screen size as existing logical sessions instead of using\n  the size set by STSIZE which may have changed since RFE started.\n- Output from REVIEW's 'CUT' command is now written using BSAM instead\n  of QSAM to improve I/O error recovery - mainly by eliminating\n  unrecoverable abends that can occur when CLOSE flushes QSAM buffers.\n- Enhance REVIEW's 'CUT' processing to support F/V/U record formats.\n- Add RFE option 3.3 which exploits REVIEW's 'CUT' logic.  Most things\n  that REVIEW can browse can be copied, including VSAM and BDAM files.\n  Record truncation is reported.  Truncating blanks from fixed-length\n  records is not considered record truncation by RFE.  As a safety\n  feature, copying members between undefined and defined record formats\n  is not allowed, though it is for sequential data sets.  Alias members\n  are copied as real members, except if the alias is an OS/VS program\n  and its real name member already exists in the target library, in\n  which case its contents are not copied but the alias is assigned\n  (with the userdata copied from the source PDS) to the existing\n  member - even if the existing member is not the same version as\n  exists in the source PDS.  The pre-2010 ISPF option 3.3 copying\n  convention should be observed:  select the real members for copying,\n  then select the aliases.  Sorting the member list into TTR order\n  before selecting the programs to copy may make the copying task\n  simpler.  Note that using an asterisk to select all members is not\n  currently supported.\n- The size of available but unused MVS/370 region virtual storage pages\n  is displayed in the lower right corner of the screen - the last 12\n  bytes - if the last 13 bytes of the screen are all the same\n  character and are not in an input field.  It is shown in blue unless\n  less than 64KB in which case it is shown in yellow unless it is less\n  than 32KB in which case it is shown in red reverse video.\n- Fix S0C4 abend in REVEDIT when new insert line has text added and is\n  immediately used as the first line of a block line command.\n- Allow REVIEW 'ACTIVE' TOP(hexvalue) to specify the initial virtual\n  storage display address.\n\n\nR45.2 includes the following changes:\n- Option 3.5 is added, providing some ability to set the version, level\n  and user ID for members, as well as deleting and creating statistics\n  for selected members.\n- Option 3.3 now supports the specification of a \"from\" member name of\n  an asterisk and takes it to request the copying of all \"from\" members.\n- Option 3.3 alias member copy support has now been regularized to the\n  pre-z/OS ISPF option 3.3 standard.  That is, if the alias's real\n  member has not already been copied in this copy session then the\n  alias is copied as a real member, but if the real member has already\n  been copied then the alias is added without re-copying the member\n  contents.  The real name stored in the userdata if alias programs\n  is now no longer used by option 3.3 - but still be on the lookout\n  for programs with ?? in the AC column because it probably means\n  that an alias program was copied as a real member.\n- Under R45.1, when copying selected members using option 3.3, the\n  output DCB would be closed after each member was copied.  This meant\n  that multiple type 15 SMF records were written, but since the same\n  files (DD allocations) were used, the EXCP counts were cumulative.\n  So, SMF post-processors adding up the EXCP counts would arrive at\n  an inflated EXCP count.  Now for a PDS-to-PDS copy (whether selected\n  members or all members) the input and output files go through a single\n  OPEN/CLOSE cycle which results in unambiguous EXCP counts and fewer\n  SMF records.\n- The SAF Router logic of the RAKF ESM was found to not look at the\n  offsets used by RACROUTE when constructing a SAF Router parameter\n  list, so RACHECK is used under MVS/370 to perform data set access\n  checks.  (The original pointers have flags in their high bytes\n  while the newer pointers allow 31-bit addresses to be specified.)\n\n\nR45.3 fixes MEMBER NOT FOUND conditions reported when browsing members\n  after a REVEDIT OPEN (either View or Edit) does not succeed, such as\n  when access is denied by the system's security component.\n\n\nR45.4 includes the following changes:\n- PFK settings saved in the $$REVIEW profile member will now be applied\n  when REVIEW/RFE first starts up.  This has been broken since R45.0.\n- Changes to $$REVIEW settings made in option 3.4 will no longer be\n  discarded.\n- Under MVS 3.8J with JES2, the JES2 checkpoint and SPOOL data sets will\n  be accessed to give improved access to jobs in the various queues, and\n  access to SYSOUT of jobs without held output.  Any job name filter\n  beginning with an asterisk will cause all jobs to be listed.\n- Option 3.3 now has additional settings to control whether existing\n  members in the target PDS can be replaced or not, and whether the\n  target sequential data set is to be extended or overwritten.\n- Option 1 Browse will now show the status of the DATA setting even if\n  it is OFF.  The purpose of this setting is to allow access to the DATA\n  operand of REVIEW when browsing non-partitioned files.  For PDS\n  members (and for UNIX files and for jobs in REVOUT aka option 3.8) use\n  the 'S' selection code for default operation (no DATA operand) and use\n  the '/' selection code to request the display of the raw data without\n  any interpretation by REVIEW.\n\n\nR45.5 fixes MVS/370 REVOUT function for MVS systems with a JES which\ndoes not have x'02' in the SSCTSSID field.  This includes MVS systems\nnot running JES2, and those running JES2 without the TJES801 usermod\napplied.  See:\nhttp://www.j76.org/vs2/tjes801.txt\n\n\nR45.6 fixes corruption to the recursion vector when cleaning up after\nan option 3.3 copy \"from\" data set has been specified.  This corruption\ncould lead to infinite looping when swapping screens, and S0C1 abends\nwhen terminating a logical session.\n\n\nR45.7 fixes \"fastpath\" I/O reduction (and the total file byte count\ndisplay), and fixes copying out fixed-length and variable-length records\nfor PDS member offload (instead of writing out data from fixed low\ncore).  Menu data set name recall has also had cursor positioning\nslighlty improved, and option 3.3 has had the 'C' and 'M' primary\naction codes added, as well as a check to prevent copying a data set\nto itself.  Options 1 and 3.3 have had option 'Y'/'N' fields added or\nmoved.\n\n\n\nR46 notes\n\nChanges made for the unreleased R45.8 are included in this release.\n\nR46.0 (July 2015) delivers the ability to display member generations\nwhen looking at the member list for a Version 2 data PDSE which is\nallowed to have member generations.  Displaying member generations\nof program library PDSEs is not currently supported.\n\nThe display of member generations is requested via the new 'GEN'\noperand of the REVIEW command. ( 'GEN' is not a valid operand when\nREVIEW is compiled for MVS/370.)  'GEN' can be abbreviated to 'G'.\n\nFurther, the 'REFRESH' or 'REF' command of the member list display\n(which causes the directory data to be refreshed from DASD) has two\nnew operands: 'G' and 'N'.  The 'G' operand specifies that member\ngenerations are shown in the member list, and the 'N' operand\nspecifies that the normal display without member generations should\nbe shown.  Note that the 'G' operand will be treated as invalid\nunless member generations are supported by the current library.\n\nMember generations can be browsed by REVIEW, and data from such members\ncan be saved to another data set using the COPYOUT (or CUT) command.\n\nThanks to Ed Webb and John Kalinich for input regarding exploiting the\nFLAG(PAGE0) option of HLASM.\n\n\nR46.1 removes the old trick of searching for the TLD by following the\nFSA from TCBs up that parent TCB chain to silently discover if an ISPF\nenvironment is active or not.  For an ISPF environment to be recognized\nby REVIEW, a call to program ISPQRY must issue a return code of zero.\nThis also removes the pre-OS/390 2.10 method of obtaining the screen\nbuffer location and cursor screen position.\n\n\nR46.2 makes several minor changes:\n- The FMTPRT command is added to REVIEW to provide manual control over\n  whether SYSOUT colour highlighting is active or not.\n- Note that FMTPRT also controls the truncation of trailing blanks\n  when a COPYOUT (CUT) is performed with a target data set having\n  variable-length records.  This can save a lot of space, so FMTPRT ON\n  may be useful even if the data is not a print file.  If you want a\n  COPYOUT to keep trailing blanks, ensure that FMTPRT is OFF.\n- The requirement that member REVPROF is in the REVPROF PDS under\n  MVS/370 for ISPF to perform the screen I/O is removed.  (It is still\n  a requirement that REVPROF is in the ISPPROF PDS under z/OS for\n  REVIEW to operate as an ISPF application.)\n- A glitch in the interaction between REVSRCH (FIND from the member\n  list display) and RFIND in REVEDIT such that REVEDIT's RFIND would\n  not subsequently find all occurrences of the current string has\n  been fixed.\n- REVOUT now allows an operand which begins with an asterisk to\n  represent a request to show all jobs under MVS3.8J with JES2.\n- RFE can now be invoked as an ISPF application.\n- RFE primary menu options can be stacked by specifying them on the\n  TSO command operand separated by semicolons.\n- When running as an ISPF application, a check is made for the presence\n  of the scroll field arrow.  If it is present panel REVPANEL is used.\n  If it is not present then the new panel REVPANL2 is used.\n\n\nR46.3 makes several minor changes:\n- The scroll field detection for selecting panel REVPANEL or REVPANL2\n  is fixed for wide screens.\n- A check is made that panel REVPANL2 is present before it is used\n  instead of REVPANEL.\n- A REVEDIT open failure no longer prevents subsequent member browsing.\n\n\nR46.4 was about impoving operability in the non-IBM freeware ISPF\nenvironment.  For example, recursion detection had to be switched from\nlooking at the caller's RB to looking at the caller's PSW address\nbecause REVIEW was branched to and not linked to by the ISPF invocation.\n\n\nR46.5 was also mainly about the new ISPF which does not include a PDF\ncomponent, so REVIEW and REVEDIT form this non-IBM ISPF's browser and\neditor.  The REVISPF CSECT was moved from REVSUBS to REVSUBS2 and so\nis now only included in the 390 compile of REVIEW.  Other changes\ninclude:\n- Preserve the change-to string across edit sessions in the same logical\n  screen, so it is the same as the search string in this regard.\n- Issue a message when variable-length records with trailing blanks are\n  detected by REVEDIT when reading the data to be edited.\n- In several components, when a command with an invalid operand is\n  entered, the command is no longer cleared, but is instead left on\n  display with the cursor positioned to the invalid operand.\n- The ASCII command was added to REVEDIT.\n- RFIND and RCHANGE commands can now be queued by use of a PF key\n  assigned those commands.  For example,\n  CHANGE ONE TWO\n  when entered with PF5 (when 'RFIND' is assigned to PF5) will function\n  as\n  FIND ONE\n  but the 'TWO' string will be remembered as the replacement string\n  so that PF6 (when 'RCHANGE' is assigned to PF6) can be pressed to\n  effect the change.\n- The KEYS command (except when intercepted by IBM's ISPF) will now\n  allow PF key assigned values be updated by overtyping.\n- REVEDIT now implements software tabs using the new TABS command.\n- REVEDIT now has an AUTOSAVE setting.\n- Begin introducing the response to invalid operands where the command\n  is left visible and the cursor is positioned to the bad operand.\n\n\nR46.6 delivers the following changes:\n- The ability to have line labels has been added to REVIEW and\n  REVEDIT.\n- More options have been added to the LOCATE command in REVIEW and\n  REVEDIT, and to the RESET command in REVEDIT.\n- REVEDIT View mode now no longer automatically initializes the\n  UNDO (and recovery) facility.\n- REVOUT (RFE option 3.8) in a MVS 3.8 JES2 environment now by default\n  uses direct SPOOL I/O to access held SYSOUT.  The FIB setting can\n  be used to force the use of TSO's OUTPUT command.  The INPUT setting\n  can be used to display non-SYSOUT SPOOL data sets.\n- REVLEV (RFE option 3.4) is now able to process unqualified data sets\n  which are data sets with names not entirely comprised of valid\n  qualifiers not exceeding 8 characters in length separated by periods.\n  (In the TSO and z/OS catalog context, these data set have invalid\n  names.)\n- Removal of the internal GETSTOR macro introduced with Release 43 to\n  tolerate the differences between the GETMAIN macros of z/OS and MVS\n  3.8.  (Before Release 43, the MVS 3.8 version of REVIEW was compiled\n  on OS/390 or z/OS.  Since Release 43 the MVS 3.8 version has been\n  compiled on MVS 3.8.)  An enhanced version of the GETMAIN macro is\n  now used when compiling the MVS 3.8 version of REVIEW.  This version\n  of GETMAIN is shipped in usermod ZP60033.\n- Other housekeeping and logic bugs have also been fixed.\n\n\nR46.7 delivers the following improvements:\n- The DESERV area size has been increased from 32KB to 512KB so that\n  a much larger number of member generations can be listed.\n- Member generations can now be selected for ISPF Browse and View.\n\n\nR46.8 delivers the following improvements:\n- When the R member selection code is used to restore a deleted PDS\n  member, the STOW data is now moved to below the line as required\n  by STOW.  This change allows the member restore facility to now\n  work on system levels newer than MVS/370.\n- When RACROUTE is used to check RACF access to a non-VSAM data set\n  before attempting an OPEN, a RACF violation will no longer be\n  recorded by the system if access is denied.  RACHECK processing\n  under MVS/370 is not changed.\n- The 'HEXX' and 'HEXR' display formats to show character data and its\n  hexadecimal bit patterns simultaneously have been introduced.  The\n  original 'HEX' command is still available, and may optionally be\n  modified by the new 'HEXC' setting.\n- The size of the storage size acquired to build the 3270 data stream\n  has been increased by 2KB to allow for the 'HEXX' display.\n- The non-ISPF default value of PF24 has been changed from 'RECALL'\n  to 'HEXC'.\n- ZIP directory caching for z/OS UNIX now caters for directories\n  as large as 512KB.  This allows most JAR files to be handled.\n- The editor's 'RESET' command was corrected to now also reset the\n  last line occupied on the screen.\n- RFE option 3.5 now supports 8-character userid overtyping.\n\n\n\nR47 notes\n\nR47.0 (February 2017) makes the following changes:\n- The NAMESCRN routine was moved to its own CSECT called REVNAME.\n  REVNAME is now called at strategic times to try to keep the screen\n  name more relevant for its current option, instead of just once\n  when the logical session is created.\n- The characters shown in the 'HEXX' display are now correct and are\n  no longer repetitions of the first visible character of the record.\n- REVEDIT now fully supports the &SYSUID symbol in the DSNAME value\n  of a JCL DD statement for catalog status highlighting.\n- In a MVS 3.8 JES2 environment, REVOUT (RFE option 3.8) will show\n  the SYSOUT record count for jobs on the OUTPUT or PRTPUN queues.\n  The total record count for all selected jobs is shown on the top line.\n  Note that the counts do not include records in non-SYSOUT spooled\n  data sets.\n- RFE option 3.3 will now retain the primary input across a cursor\n  selection of a data set name from the historical data set list.\n- The inline GETSTOR macro has made a comeback to allow some storage\n  requests to request storage above the line under z/OS, while\n  requesting storage below the line on some system levels such as\n  MVS/XA even when the system provides storage above the line.\n  Note that the type of storage requested is decided at compile time\n  and not at execution time.\n- The MVS/370 load module is marked as AMODE31 to allow it to run\n  on z/OS where it would otherwise abend with an S0C4.  It will place\n  various areas above the line, including data being held for edit.\n  Note that not all functions of the compiled-for-MVS/370 REVIEW/RFE\n  package function currectly under z/OS.  Commands which look at\n  system control blocks are liable to abend, but at least the basic\n  data set processing and 3270 functionality works as expected.\n\n\nR47.1 fixes a few bugs and adds a couple of features:\n- A REVIEW of a tape data set abended with S0C4 but RFE option 1 of the\n  same data set worked.  This was caused by a failure to perform screen\n  handling initialization logic in the case of the REVIEW command.\n- An attempt has been made to support the Large Block Interface\n  for tapes containing blocks longer than 32760 bytes, but this\n  remains untested.\n- The *ALIAS string has been replaced by a green asterisk to flag\n  alias members so that the TTR of each alias can still be seen.\n- Ampersands in instruction mnemonics are no longer flagged as\n  assembler syntax errors.\n- The editor's EXCLUDE command has new UPDATED and NOUPDATE operands\n  to control exclusion based on whether records have been updated in\n  the current edit session or not.\n- Parsing of command keyword operands now correctly enforces minimum\n  keyword abbreviations.\n- Minor formatting properties of HELP members' Function sections have\n  been standardized.\n- PDS searching in RFE (but not REVIEW) could skip some members improperly.\n- PDS searching in RFE option 3.5 (member statistics) now functions.\n- The infinite loop in the editor's RESET command when the command did\n  not cause the reset of either commands or labels has been corrected.\n- Segment overlay programs are now fully supported in terms of program\n  library management.  This means that they can now be offloaded and\n  reloaded, and their program library can now be compressed when the\n  R47.1 version of the REVLMOD and REVLPDS programs are also installed.\n  $SEGTAB and $ENTAB are now also shown when scrolled right passed the\n  end of CESD blocks in REVIEW.\n- Some improvements in the handling of insert lines when tabs are\n  active have been implemented.\n\n\nR47.2 fixes a few bugs:\n- A Sense ID CCW is no longer issued by a REVLEV (RFE option 3.4) for a\n  System/360 DASD (23nn) device type.  This avoids the IEA000I command\n  reject message.  It is still issued for System/370 DASD (33nn) devices\n  to report the device and control unit models.  Thanks to Dave Kreiss.\n- The variable-length GETMAIN performed after opening the data set to be\n  browsed by REVIEW will now request storage above the line under z/OS\n  when processing non-VSAM files including UNIX files.  This area includes\n  the READ buffer and the record address checkpoint area.  This change\n  improves the likelihood that a REVIEW of a tape data set using the\n  large block interface (LBI) will succeed, especially when using a large\n  screen size.  The buffers for terminal I/O must, of course, remain below\n  the line.\n- If REVIEW/RFE detects that it is running under a CLIST, a new TSO I/O\n  stack will be created for the session, and the original stack will be\n  restored when the session terminates.  This change will prevent TSO\n  commands invoked from within REVIEW accessing and removing input on the\n  stack which was current when REVIEW/RFE was invoked.\n- Earlier claims that complete support for segment overlay programs had\n  been added were premature.  The support now becomes complete with the\n  change to allow RFE option 3.3 to correctly copy segment overlay programs.\n  Here are the minimum software levels necessary to correctly process\n  segment overlay programs:\n  - To compress the program library: REVIEW R47.1 and REVLPDS R47.1.\n  - To offload overlay programs: REVIEW R47.1.\n  - To reload overlay programs: REVLMOD R47.1.\n  - To copy overlay programs: REVIEW R47.2.\n- REVIEW has a \"data-in-virtual\" (DIV) capability to cache data in virtual\n  storage to reduce I/O after the data has been read once.  This is exploited\n  for a number of facilities including:\n   - accessing related IDR data when formatting CESD data when scrolled RIGHT\n     past the end of CESD blocks.\n   - holding formatted ZIP archive directory entries.\n   - browsing subsystem data sets (because REVIEW assumes that NOTE/POINT\n     is not supported by subsystems).\n   - holding edited TSO HELP data when REVIEW is operating as a fullscreen\n     TSO HELP processor.  The editing consists of removing HELP source\n     comment records and )I (INCLUDE) control statement records.\n  In regard to this last point, the editing means that the cached data does\n  not exactly match what is read from disk, and so inconsistencies can become\n  apparent when the cached data does not fully mesh with the uncached data.\n  To improve this, the default cache limit has been increased from 192KB to\n  320KB, REVIEW will treat the data as fully cached when the end-of-file is\n  first reached to avoid further I/O for that HELP display, and \"early\"\n  trimming under z/OS is dispensed with.  \"Early\" trimming is when some of\n  DIV storage is freed based on an upper limit calculation which in turn is\n  based on the input data set track count.  This track-based calculation\n  has been improved for MVS/370 by acquiring the extent count from the DEB\n  instead of the DSCB, thereby improving concatenated data set support.\n  \"Late\" trimming which occurs when end-of-file is reached for subsystem\n  data sets (for which there is no external size indication) is retained\n  even under z/OS.\n- Assembler listing source code syntax-based colouring now supports listings\n  where the source statement number exceeds 99,999.  The need for this was\n  discovered when looking at the listing for REVIEW when assembled on z/OS.\n- Coloring the JES2 job log blue in REVOUT (RFE option 3.8) has been extended\n  to z/OS.  The overly conceited scheme of comparing the job identifier to the\n  temporary data set name low-level qualifier did not account for the extra\n  qualifier of H01 being appended under z/OS.\n- REVEDIT JCL syntax highlighting for cataloged and uncataloged data sets named\n  with DSN= and DSNAME= now process &SYSUID correctly under z/OS.  Previously,\n  this worked under MVS/370 but used an incorrect ALET with the z/OS addressing.\n- Internal messages related to member errors will now report the correct member\n  name more reliably.\n- In scenarios where a sequential source of input is required and a PDS data set\n  name is supplied, a member selection list can be presented from which the user\n  can select a member.  Cases where the member has a name considered invalid by\n  DAIR caused screen display errors and earlier versions of REVIEW often\n  abended.  To fix this, the name of the selected member in parentheses is\n  appended to the data set name, and the input is then processed as if the user\n  had typed in the complete PDS name and member name specification.  Note that\n  in these scenarios it will not be possible to process a member with a name\n  which is considered invalid by DAIR, even though other REVIEW and REVEDIT\n  functions may be able to process such members without raising an exception.\n\n\nR47.3 corrects assembler listing statement number validation so that assembler\nlisting syntax highlighting works for statements numbered less than 10,000.\n'DSNC ON' in REVEDIT has also been fixed to set the correct internal flag.\n\n\nR47.4 fixes a couple of possible S0C4 abends:\n- When searching for lower case characters during input, REVEDIT was not\n  correctly handling the case when the data length was a multiple of 256.\n- For large screens, the acquired TPUT buffer was not large enough to cater\n  for the HEXX display, while HEX and HEXR were not affected.\n\n\nR47.5 has a couple of small changes:\n- Option 3.4 (REVLEV) now shows the correct space allocation for multi-volume\n  data sets.  (Thanks, Shelby!)\n- Option 1 can now browse virtual storage when the data set name of 'ACTIVE'\n  is specified.\n\n\nR47.6 has a couple of small changes:\n- A command with an invalid operand in FSHELP will no longer obliterate the\n  primary command input area.  (Thanks to John K.)\n- REVEDIT JCL syntax highlighting will now correctly highlight an invalid\n  character in a data set name, thereby sometimes avoiding an S0C4 abend.\n  (Thanks to Peter G.)\n\n\nR47.7 delivers several bug fixes and a couple of new features.\n\nSome of the less obscure defect-fixing improvements include:\n- Improved I/O stack handling for parallel sessions, both when swapping\n  sessions and terminating sessions, reducing the problems encountered\n  when running RFE under a shell-type CLIST.\n- Fixing the S30A abend encountered when browsing zip archives under z/OS.\n  This abend was first discovered by browsing z/OS UNIX jar files.  It\n  was caused by moving unzip working storage above the line, without also\n  changing the FREEMAIN R to FREEMAIN RU.\n- The creation of parallel sessions by a TSO RFE command, which includes\n  SPLIT and START command processing, and the termination of parallel\n  sessions no longer have any time windows where fullscreen mode is turned\n  off, thereby reducing the chances that line mode messages such as job\n  end notifications are lost from user view without the traditional three\n  asterisks requiring an addtional <enter>.\n- The \"point and shoot\" facility (where the cursor is placed on a data set\n  name on the screen at the time a TSO REV command is issued) will now\n  also work for a format-8 DSCB (as it does for a format-1 DSCB) when a\n  VTOC is being browsed.  Note that in the case where a VTOC is being\n  browsed, the cursor does not have to be placed over the data set name,\n  but merely on the line showing the record having the relevant data set\n  name as its key.\n- REVEDIT assembler source code syntax highlighting will now correctly\n  handle the case where two consecutive quotes are used in a string to\n  represent a single quote, and when the first such quote is in column\n  71 and the second such quote is in column 16 of the continuation line.\n\nTwo new features suggested by Peter Glanzmann are now implemented:\n- Assembler B data type items are now presented as binary digits when\n  DSECT formatting is activated.  An underscore is used to separate\n  the binary octets of each byte in the data item.\n- The new RDW command will cause the display of record descriptor words\n  when set to ON.  The INVALID COMMAND message will be shown when RDW is\n  issued and RDWs are not present.  RDWs are only deemed to exist when\n  records are read using a DCB which specifies a variable-length record\n  format.  Also note that for multi-segment spanned records, the value\n  shown as the RDW will have been constructed and will represent byte\n  contents which may not actually exist in the data set being browsed.\n\n\nR47.8 mainly delivers bug fixes.  Changes are:\n- The primary command area will now vary in size according to width of\n  the screen.  This will allow longer commands to be issued on wide\n  screens.\n- The maximum RECALL command length has been increased from 50 to 90\n  characters.\n- RECALL processing now dynamically detects the end of the primary\n  command input area, truncating recalled commands if necessary to\n  avoid corrupting the screen layout.\n- Recalled commands will not be erased until after screen reshow\n  processing so that pending line mode messages do not cause the\n  recalled command to disappear before being presented for executing\n  either with or without further editing.\n- Glitches in FIND logic relating to column numbers introduced with\n  the RDW command have been corrected.\n- MVS/370 RFE main menu graphics displays are now centered when being\n  shown on wide screens (instead of always being in specific columns).\n  And for screens of at least 132 columns and 47 lines that have no\n  usable graphics capability, the assignment of real storage frames is\n  represented at a scale of one screen character location per 4KB page\n  frame.\n\n\nR47.9 changes are:\n- The column number labels for the REVIEW browser's ruler line can\n  now display 6-digit column numbers, which can occur for data sets\n  with an undefined record format created by the large block interface.\n- When a volume is specified for a REVLEV (RFE option 3.4) data set\n  list, free space statistics accumulated from the format-5 DSCB chain\n  are shown under the totals line for the listed data sets.\n- Data sets found to have the RACF protection indicator set in the\n  VTOC will have an 'R' displayed between the CREDT and EXPDT columns.\n- A defect in REVPANEL/REVPANL2 ISPF panel selection introduced when\n  longer command lines for wide screens was introduced in R47.8 has\n  been fixed.\n- Support has been added for 8-byte TSO user IDs and data set name\n  prefixes introduced with z/OS 2.3.\n\n\n\nR48 notes\n\nR48.0 (February 2018) introduces the following enhancements:\n- The REVEDIT FIND family of subcommands - which includes FIND (or F),\n  FINDNOT (or FN), EXCLUDE (or EX or X), EXNOT (or EXN or XN), and\n  CHANGE (or CHA or CHG or C) - now supports additional operands to\n  restrict the records which are processed.  Firstly, two line labels\n  can be specified to limit the range of records to a subset of the\n  total body of records, and secondly either the UPDATED or NOUPDATE\n  keywords can be specified to limit processing to only those records\n  which have been updated this edit session, or only those records\n  which have not been updated this edit session, respectively.  The\n  minimum abbreviation for these keywords is the first 3 characters.\n- UNIX path names beginning with a tilde will be recognized as\n  specifying the home directory (as suggested by Bruce Koss of Wells\n  Fargo).  This applies not only to the path specified as the operand\n  of a REVIEW TSO command, but also to navigational \"jumping\" where,\n  when a UNIX directory entry list is being displayed, a new fully-\n  qualified directory path is entered into the primary input area\n  to specify the directory that REVIEW should \"jump\" to.\n\nR48.0 also fixes the following problems:\n- After REVEDIT exits and returns to REVIEW after an EDIT request to\n  edit the data set being browsed, the heading line was not restored\n  to the value it should be for the REVIEW browser.\n- When running without APF authorization (which should be all the time\n  unless you are browsing a VVDS or BCS) on a system using the ACF2\n  security product, the original form of RACROUTE will be used to\n  obviate the need for security administrators to add GSO records to\n  allow REVIEW to access checks for data set access while unauthorized.\n- A browse search in the backward direction (REVIEW FIND PREV/LAST)\n  did not search the first 4 data bytes of variable-length records\n  when RDW OFF was set.\n- REVEDIT edit recovery allocated the PDS of the member being edited\n  exclusively instead of shared, and did not free it at the conclusion\n  of the edit session.\n- It was not possible to copy a PDS member in RFE option 3.3 to a\n  differently named member in the same PDS.  For this to work now,\n  the \"to\" and \"from\" member names must be supplied with the data set\n  name.\n- A CHANGE ALL of only blank(s) to a null string caused an infinite\n  loop in REVEDIT.  The solution to this is to limit such changes to\n  one per record per CHANGE ALL command.\n- When HILITE OFF was set in the profile when an edit session started,\n  HILITE could not be activated immediately by command, but only by\n  exiting the session such the the profile was updated, and then\n  restarting the edit session.\n- If the REVIEW command specified a z/OS UNIX file, and then the DIR\n  command was issued, a corrupted directory display would result.\n- The TSO HELP for REVEDIT FIND incorrectly stated that the default\n  string type was C whereas in fact it is T.\n- When performing a CHANGE command in REVEDIT:\n     c cat dog\n  will always cause the replacement string to be DOG no matter what\n  CAPS is set to.\n     c cat c'dog'\n  will always cause the replacement string to be dog no matter what\n  CAPS is set to.\n     c cat t'dog'\n  and\n     c cat 'dog'\n  used to always cause the replacement string to be DOG no matter\n  what CAPS was set to, but now both of these commands will set it\n  to DOG when CAPS is ON and dog when CAPS is OFF.\n\n\nR48.1 addresses five issues:\n\nFirstly, an S0C4 abend when formatting CESD blocks has been fixed.\nCESD blocks are formatted when scrolling right past the end of the\nblocks to show the details of each ESD entry correlated with other\ndata extracted from the translator and user IDR logical records.\nThis abend occurred when in 31-bit addressing mode and the load module\nmember had long IDR logical records.  The high byte of GPR5 had been\nappropriated for other uses while it was saving the GPR15 value, from\nwhich an address placed in GPR14 was calculated, which caused the\nabend when the high address byte was lost.  This bug is years old.\n\nSecondly, to allow some sort of control over where TSO users can\nallocate new data sets (anyone remember PCF II?), several of the new\ndata set allocations performed by REVIEW/RFE will now be tried first\nusing the TSO user's default unit name as supplied from the user's\nUADS member or RACF TSO segment or equivalent, as appropriate.\n\nOne example where no change has been made is the temporary data set\nused by a REVEDIT SUBMIT command which first uses UNIT=VIO but will\nretry using UNIT=SYSALLDA if the first attempt fails.  Another example\nis the CONDENSE data set used by RFE options 3.1.C and 3.4.Z where\nUNIT=SYSALLDA is still used, but it is expected that normally the\nCONDENSE data set will only have a short lifetime during which there\nis no user think time.\n\nOne example where the default unit is now used is the allocation of the\ndata set used to hold SYSOUT data for browsing in REVOUT (or RFE option\n3.8).  Previously, UNIT=SYSALLDA and SPACE=(CYL,100) were used in the\ndynamic allocation request, with a retry reducing the space to\nSPACE=(CYL,(5,2)).  Now, the initial request specifies the default unit\nname with SPACE=(CYL,(200,20),RLSE).  The first retry changes the unit\nto SYSALLDA, and the second retry sets SPACE=(CYL,(5,3),RLSE).  Since\nthe data set is allocated, opened, loaded and closed at machine speed,\nthe RLSE setting means that users will not be idly browsing data sets\noccupying vast DASD estates unless that acreage is actually needed to\nhold the volume of data being browsed.  Also, the initial primary space\nquantity of 200 cylinders eliminates those pesky 2314 OS/360 SORT\nvolumes from the DADSM volume selection process.\n\nThirdly, unzipping from data sets with variable-length records would\nabend with S0C4 as a result of collateral damage flowing from the\nintroduction of the RDW command.  This is now fixed.\n\nFourthly, FIND with a picture search string was not working properly to\nthe extent that blanks and semicolons in picture strings were treated\nas generic mask characters and not as themselves.  This was caused by\nusing a single translate table to handle both EBCDIC and ASCII generic\nmasking characters.  This was fixed by using two separate translate\ntables.  Improved housekeeping also means that ASCII picture searches\nare also now functional in REVEDIT.\n\nFifthly, as a result of advice from Wally Mclaughlin, GETLINE macro\nsettings have been improved to eliminate various misbehavings in a\nCLIST environment pertaining to the I/O stack.\n\n\nR48.2 caters for handling program members with a residence mode of 64:\n- Member list displays will show RMODE=64 programs in yellow.\n- MAP displays produced using the Version 1 ESD interface will now\n  show RMODE=64 as 64 instead of MIN, and will also now show the\n  segment overlay region in which overlay sections reside.\n\n\nR48.3 brings numerous fixes and several enhancements.\n\nEnhancements are:\n- Text extent records are no longer shown in a program object map\n  to improve readability.\n- REVEDIT JCL syntax highlighting now recognizes the new statement\n  types introduced in z/OS version 2.\n- The handling of prefixing FIND and CHANGE commands with RFIND and\n  RCHANGE has been regularized.  This means that there is now no dependency\n  on PF key usage, and that the command will behave the same whether\n  executing under ISPF or not.\n- REVDIV has been reworked so that \"DIV\" storage is now expandable.\n  As a result, smaller sizes can be requested without limiting capability.\n  One benefit is that module maps of large complicated programs can now\n  run to completion without exhausting DIV storage.\n- The ECTRTCD field is now maintained when appropriate so that CLIST\n  &LASTCC processing can function correctly.\n- The data byte count shown on the BOTTOM OF DATA line is now accurate\n  up to 4GB minus 1.  As always, this count does not include BDWs,\n  RDWs, record-ending CRLFs, and other bytes used for data control.\n- REVIEW support for browsing multi-volume sequential data sets, which\n  includes sequential concatenations comprised of BASIC and/or LARGE\n  single-volume and/or multi-volume data sets, now allows seamless\n  up-and-down scrolling across volume boundaries.  The volume serial\n  shown on the top line will be that of the last record shown on the\n  screen.  The RECORD FROM BLOCK AT LOCATION details which can be shown\n  on the right of the screen for each record will now show a TTRK value\n  instead of just the TTR, where K is the relative volume number which\n  is zero for the first or only volume.  Note that TTTR values will\n  continue to be shown when the data set has the DSNTYPE=LARGE attribute.\n  Note that REVIEW does not support concatenations of unlike data sets,\n  so all of the data sets in the concatenation need to be on volumes from\n  the same device class and have compatible DCB attributes.\n\nFixed defects include:\n- The new data set attributes specification panel will now accept\n  record formats with additional characteristics, such as carriage\n  control, and spanned records or standard blocking.  (Defect reported\n  by Charles Bailey.)\n- When exiting after searching a program PDSE, abend SC0D at task\n  termination (caused by the storage of an open DCB being freed)\n  will no longer occur.\n- RFIND/RCHANGE cycles to vet the change before making the change no\n  longer skip the current found data when searching in the backward\n  direction.\n- When a member in the non-first library of a concatenation was edited,\n  the top line indicated the correct data set, the correct data set name\n  was used in member serialization, but the data set from which the member\n  was read and to which the new data was saved was the first data set in\n  the concatenation.  This is now fixed.\n- The data set information display will no longer abend when the subject\n  data set is a PDSE with a type (DATA or PROGRAM) but with no version\n  information available.\n- More work to cater for the RDW ON/OFF setting has been done, this time to\n  keep the column range specification in the PDS search panel consistent\n  with that of the REVIEW browse FIND command.\n- The data set information display will no longer attempt to obtain the\n  format-4 DSCB from the VTOC to obtain the number of tracks per cylinder\n  when processing VIO data sets (because the VTOC does not exist) or on\n  MVS/ESA or later system levels at all (where a cylinder always has 15\n  tracks).\n- Fix erroneous recursion status indications by maintaining a count of\n  concurrent or parallel sessions, thereby eliminating sessions that\n  cannot be swapped to, and abends at termination time.\n- FSHELP will only blank columns 73 to 80 of displayed HELP member\n  records if they contain sequence numbers, thereby avoiding the loss of\n  HELP text if it happens to extend beyond column 72.  (EX DRK)\n- RFE option 6 is no longer selectable when RFE is operating as an ISPF\n  dialog, as it does not function correctly in that environment.  In\n  fact, the original design was that RFE would never run as an ISPF\n  application, and was coded accordingly, but that decision was reversed\n  when subsequent requirements arose.\n\n\nR48.4 brings a couple of enhancements and a few fixes.\n\nThe main enhancement is that member name masking is now available in\nthree particular usage scenarios, NONE of which involve any extensions\nto the syntax that can be used to invoke REVIEW/RFE from the READY\nprompt.  In all cases, the length of the member name mask is limited to\n8 characters, and the available masking characters are an asterisk for\nzero or more characters, and percent for any single non-blank character.\nGeneric masking characters may be omitted to request a specific member.\nBe aware that when an asterisk or percent is encountered in a member\nname specification, some syntax checking is bypassed, so it may enable\nthe selection of members with non-standard names in some cases.\n\n1. When viewing a data set list in option 3.4, a new MEMBER (or MEM for\n   short) primary command is available to search all partitioned data\n   sets in the list for a member with a name which matches the mask.\n   Processing commences with a RESET action, so last command indicators\n   are cleared.  Searched libraries are flagged with a last command\n   indicator of an asterisk.  If the asterisk is shown in red, the\n   data set could not be processed for some reason.  Libraries with at\n   least one matching member will be shown in white or high intensity\n   in the data set list.\n\n2. When viewing a member list, a new MEMBER (or MEM for short) primary\n   command is available to tag all members which match the mask and\n   untag all members which don't.  There is a similar command called\n   PATTERN (or PAT for short) which searches member names for a string\n   match.  Effectively, PATTERN performs the same processing as MEMBER\n   after prepending an asterisk if the mask does not start with a\n   generic masking character, and appending an asterisk if the mask does\n   not already end in an asterisk.  So MEM *ABC* does the same search as\n   PAT ABC (as does PAT *ABC*).\n\n3. When RFE presents a data set specification panel which allows a member\n   name to be specified, a member name mask may be used to filter the\n   members selected for display in the member selection list.  Generic\n   masking may not be permitted for some utility actions.\n\nAnd now to minor enhancements:\n- The H (for History) member selection code can now show some Enterprise\n  PL/I compiler settings.\n- A MAP of non-migratable program objects will no longer display\n  labels that have the same name as the section they are in when they\n  are at section offset zero to improve the signal-to-noise ratio.\n- RFE data set and command history items are now tab-selectable (where\n  previously the arrow keys had to be used to position the cursor).\n\nThe following defects are now fixed:\n- When exiting from a REVIEW PARMLIB FILE session an S0C4 abend could\n  occur under z/OS.  This was due to an incorrect work area being used\n  for the deallocating IEFPRMLB macro.\n- An UNZIP selection could encounter an S0C9 abend from a CVB\n  instruction where the input decimal number was too large.  Logic\n  which bypasses this issue is now used.\n- The hexadecimal data displayed with HEXX ON was completely irrelevant\n  even though the character data shown on screen was correct.  Data\n  housekeeping gone wrong.\n- Minor cursor placement improvements are made for RFE menus when bad\n  data set and volume input are encountered.\n- RFE option 3.4 (REVLEV) will now correctly order sorts by date when\n  the dates range across the most recent (at the time of writing)\n  century boundary.\n- The progress bar display for PDSE program library searches has been\n  fixed.\n\n\nR48.5 changes are:\n- The H (for History) member selection code can now show some\n  Enterprise COBOL compiler settings.  ARCH and OPT settings are now\n  shown for Enterprise PL/I, Enterprise COBOL and XL C/C++.\n- The S430-03 abend when a CUT subcommand is processing a z/OS UNIX\n  file is now fixed.\n- The member name mask fragments of ** and *% are no longer rejected\n  as invalid syntax.  Internally, multiple consecutive asterisks are\n  condensed to a single asterisk, and asterisk-percent (*%) fragments\n  are converted to percent-asterisk (%*).\n- RFE option 3.4 (REVLEV) now has a new command called SRCHFOR which\n  can searched listed data sets for specific data.\n\n\nR48.6 changes are:\n- The keyword operand tables for the DELETE and SORT commands in\n  REVEDIT are fixed to restore proper functionality of those\n  commands.\n- A REVCREAT new data set attributes input panel layout glitch is\n  now corrected.\n- On those occasions when REVPDS would display a selection code\n  legend line on the bottom screen line, those displays will now\n  be based on the ISPF visible line count rather than the screen\n  line count.  This change may allow the line to be seen even when\n  ISPF is displaying a SWAP action bar and/or PF key values.\n\n\n\nR49 notes\n\nR49.0 (July 2019) changes are:\n- Add addressing mode switching logic to the MVS/370 version for\n  MVS/XA-like operating systems.\n- Make more display scenarios aware of the visible line count under\n  ISPF, rather than always using the terminal's line count, thereby\n  improving vertical scrolling when the SWAP action bar and/or PFK\n  values are on show.\n- Enhance the display produced by the JPA (or CDE) command for z/OS\n  2.3 (and later) when the screen has at least 100 columns.\n- Add support for native 3270 partial screen updates and TGET NOWAIT.\n  This is used by the RFE main menu display under MVS/370 to update\n  resource status displays without user interaction.\n- Fix processing of Z390 extended fields in zip file headers.\n- Improve zip archive comment extraction and display, especially for\n  ZIP64 archives.  Note that the unzip logic is not aware of ZIP64\n  extensions.\n\n\nR49.1 fixes the following problems:\n- The RB/TCB display would also show TCBRBP as the address of every\n  RB under the task.\n- The CDE/JPA display could S0C4 abend for z/OS 2.3 and later.\n- REVEDIT would S002-A8 abend when saving a PDSE member with more\n  than 15,728,639 (x'17FFFF') records.  Reported by Tom Conley.\n- Only up to 7 digits could be shown for the number of lines in each\n  exclusion block.\n- Only up to 9 digits could be shown for the match count of a FIND ALL\n  command.\n- PDSE space abends would cause a S0C6 abend because the CHECK macro\n  branched to address 1.  Sx37 abends can close the DCB, but this is\n  historically delayed until the CHECK macro is issued.  For PDSEs\n  any space abend can be encountered at the time of the WRITE macro\n  and so the DCB will be closed by the time the subsequent CHECK is\n  issued.\n\n\nR49.2 fixes the following aspects of asynchronous partial screen updates\nthat were really only evident when running MVS 3.8:\n- REVCMPBF was not performing 3270 compression because the expected\n  triggering RA order was not present.  SBA orders not specifying\n  location 0 will now enable compression as well.\n- Field attributes were not being decoded properly, causing the menu\n  option names (1, 2, 3, etc) to become invisible.\n- The instantaneous available frame count (AFC) has now been added to\n  the MVS 3.8 non-graphics large screen primary menu real storage\n  display.\n\n\nR49.3 provides minor enhancements to some displays:\n- Assembler listing syntax highlighting has improved handling for\n  continuations when breaking an unquoted operand, an operand within\n  quotes, and comments.  Note that some glitches may well appear when\n  the start of a continued statement does not appear on the screen.\n  While open code is shown in green and red, generated code in blue and\n  pink, a new third red and pink scheme is used for inserted code.\n- The JPA or CDE command will now show the data set name more reliably\n  under z/OS 2.3 and later on screens with at least 116 columns.\n- The TCB or RB command will show the instruction length count (ILC)\n  and interrupt code for request blocks, will use the full screen\n  width when showing load list element program names, and will show\n  all data set names for open BPAM DDs.\n- Both JPA and TCB will now correctly adjust their displays for any\n  hidden ISPF lines such as for PFSHOW and SWAPBAR etc.\n\n\nR49.4 provides minor functional enhancements and fixes:\n- NEWTOP 0 for sequential data sets has been fixed - it was broken\n  when full support for concatenated and multi-volume sequential files\n  was added.\n- The global area (recursion vector and recall stack) is now explicitly\n  freed upon termination of the last parallel REVIEW session to fix a\n  memory leak under ISPF on MVS 3.8.  (Thanks, Wally.)\n- The TCB / RB command's display of data set names for open sequential\n  files has been corrected.\n- When spool file contents are being displayed by directly accessing\n  the JES2 spool, records longer than 132 print columns will no longer\n  be truncated.  (When such files are displayed by using the TSO's\n  OUTPUT command, OUTPUT will wrap records longer than 132 print\n  columns to the next record.)\n- A rare unzip problem with REVIEW's inflate logic has been fixed.\n- A REVEDIT screen corruption when displaying excluded lines with\n  CAPS OFF has been fixed.\n\n\nR49.5 provides minor functional enhancements and fixes:\n- Unzipping binary data to fixed-length records will now not create an\n  extra record when the data is an exact multiple of the record length.\n- The formatting of a zip archive comment will now limit the length of\n  comment handled to avoid overlaying other items in working storage.\n- Dynamic storage management for REVPDSE has been revamped so that\n  instead of acquiring up to 768KB below the line for working storage\n  and for holding directory data, only actual working storage is\n  acquired below the line while up to 3MB is acquired above the line\n  to hold directory data.  This reduces BTL storage usage and also\n  allows the display of larger numbers of members.  Under both the\n  old scheme and the new scheme, unused storage not needed to hold\n  directory data is freed before the member list is displayed.\n  (Thanks to Michael Fleissig for reporting use case experience dealing\n  with PDSEs containing tens of thousands of members.)\n\n\nR49.6 provides minor functional enhancements and fixes:\n- DSINFO will show COMP and ENCRYPTED when data sets have those attributes.\n- DSINFO will not report OBTAIN failures for volumes after the last\n  volume containing data for multivolume data sets - the cause of such\n  failures being that the data set has never had to expand to that volume.\n- STAX admin has been revamped with the current logical session now\n  always \"owning\" the attention exit.\n- For MVS/370, when TSO commands do not issue a STAX, an attention\n  interrupt will cause REVIEW/RFE to detach the command's subtask\n  causing it to S13E abend.\n- For MVS/370, whenever REIVEW/RFE is running APF authorized and an AC=0\n  command processor is to be attached, SYNCH will be used to become\n  unauthorized, thereby avoiding potential S306 abends.\n- For MVS/370, attached TSO command processors will be covered by an\n  ESTAI to prevent a subtask abend yielding a READY prompt, which would\n  simply require an <enter> to restart the main REVIEW/RFE task if the\n  TSO command abended.  If the TSO command does abend, some summary or\n  indicative dump data will now be displayed via write-to-programmer.\n\n\nR49.7 provides minor functional enhancements and fixes:\n- Fixed the annoying (for me, at least) BLDL error message when browsing\n  a zip archive with a comment exactly 78 bytes long.\n- Fixed the glitch where RFIND would not advance when browsing variable-\n  length records and the cursor was moved back to home.  This was most\n  noticable when repeating FINDSMF when browsing a sequential data set.\n- When SMF ON is set, FINDSMF will now highlight the record type of the\n  found record using reverse video.  This assists with tracking progress\n  through a block of consecutive records of the same type.\n- Additional PL/I compiler settings are now included in the display\n  generated by an H selection code of Enterprise PL/I executables.\n- Commands in error are preserved on the command line for user fix-up for\n  additonal reasons above the previous single reason of invalid operand.\n  However, commands in error are never left on show under ISPF.\n- With all that logic to decode .PCX, .BMP and .GIF images hardly ever\n  being used because hardly anyone has 3270 graphics support turned on,\n  a REVIEW of such image types will now result in a \"pixel zoom-in\" or\n  extreme close-up where each pixel will occupy a character location on\n  the screen.  Left/right and up/down scrolling can be used to scroll\n  around the image bitmap.  GIF animation will not be processed in this\n  display mode.  This display mode can be suppressed by the DATA operand.\n- The SSI display of PDS load modules has been fixed - only the high 3\n  bytes were shown after 2 leading zeros.\n- The COPY command of REVED now allows a data set name to be specified\n  as the command operand, allowing the data set prompt to be circumvented\n  as long as no errors are encountered.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REVPROF": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT134/CBT.V500.FILE134.PDS/REVDATA.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT134/CBT.V500.FILE134.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}