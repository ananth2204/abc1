//SOMITCWI JOB (????????,????,1439,9999,9999),IOS000I-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//IOS000I  EXEC HLASMCL,PARM.C=(TERM,NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=????.SORC????     for CVTUSER DSECT
PASS     TITLE 'IOS000I - Tell operator if there disk errors'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: IOS000I
*
*   Date-written: 1996-9-3
*
*   Blame: somitcw@yahoo.com
*
*   Change Log:
*
* 2005-9-2 Moved CVTUSER below the line for other programs ( TAPESAVE )
*  W.A.M.
*
*
*   Remarks:
*
*        This MPF routine checks message IOS000I to see if it is for
*   disk error.  A message is issued for the first disk error to occur
*   in each hour.  The time the message is issued is stored in an area
*   pointed to by the CVTUSER field in the CVT.  The MVS ANCHOR
*   facility would be the modern way to save the time of the error,
*   but this was copied from old code and saved research.
*   To activate this exit, code the following line in member MPFLST00
*   of SYS1.PARMLIB:
*   IOS000I,SUP(NO),USEREXIT(IOS000I)
*   and issue operator command: SET MPF=00
*   SET MPF=NO will disable MPF if needed due to errors.
*
*   Note: This routine depends on disk being on channel 01.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
IOS000I  CSECT ,
IOS000I  AMODE 31
IOS000I  RMODE ANY
         SAVE  (14,12),,IOS000I.&SYSDATE..&SYSTIME  Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING IOS000I,R12        Give assembler program's base reg.
         L     R11,0(,R1)         Load the address of the CTXT
         USING CTXT,R11           Addressing CTXT
         L     R10,CTXTTXPJ       Load address of major line text
         USING CTXTATTR,R10       Addressing message attributes & text
         CLC   0(2,R11),CT        See if a real CTXT is found
         BNE   RETURN             If not a CTXT, get out quick
*                                 If no number, extract volser
         LA    R9,CTXTTMSG+8      Start hunt for a number after msgid
* Label CTXTTMSG has:
* 'IOS000I 01FA,02,DCK,9E,0200,,000A0004,WORK21,IMSIMAGE,' another line
* 'IOS000I ccuu,pp,err,cc,ssss,,cccchhhh,volser,jobname,sense'
* ccuu=chan,cntl.unit,unit
* pp=path
* err=error. i.e. DCK,IOE,EQC,BUS,CCC, - - -
* ccuu=chan,cntl.unit,unit
* ssss=status
* cccchhhh=cylinder and head
* volser=disk or tape volume serial number
* jobname=MVS JOB name
* sense=sense code
LOOP     DS    0H
         CLI   0(R9),C'0'         See if channel starts with zero
         LA    R9,1(,R9)          Bump message pointer by one byte
         BL    LOOP               If not numeric, go try next byte
         BH    RETURN             If higher than zero, get out
         CLI   0(R9),C'8'         See if channel 8 ( i.e. X'08' )
         BE    GOTDISK            New disk are on channel 8, go process
         CLI   0(R9),C'1'         See if channel 1 ( i.e. X'01' )
         BNE   RETURN             Go to exit, not new or old disks
GOTDISK  DS    0H
         TIME  DEC                Get the date and time in regs 1 and 0
         XR    R0,R1              Reverse registers zero and one
         XR    R1,R0              Reverse registers zero and one
         XR    R0,R1              Reverse registers zero and one
* Now R0=0CYYDDDF R1=HHMMSSTH     Century,yr,day,hr,min,sec,1/10,1/100
         SRL   R0,4               Drop the packed decimal sign X'F'
         SLDL  R0,8               Move hours to register zero
* Now R0=CYYDDDHH R1=MMSSTH00
         L     R9,16              Load the address of the CVT
         ICM   R8,B'1111',CVTUSER-CVT(R9)  Address CVTUSER points to
         BZ    NOCVTUSR           If CVTUSER zeroes, go get one
GOTCVTU  DS    0H
         USING XCVTUSER,R8        Tell assembler about dsect
         CLC   XCVTUEYE,CCVTUSER  See if the CVTUSER area is mine
         BNE   BADUSER            If someone else has CVTUSER, go tell
         CL    R0,XCVTUTIM        See if oper. already notified this hr
         BE    RETURN             Aready notified this hour, ignore
         ST    R0,XCVTUTIM        Save time that oper. will be notified
         STCM  R1,B'1100',XCVTUTIM+4   time that oper. will be notified
         SLR   R0,R0              Set SVC 34 full authorization
         MGCR  STARTCMD           Issue SVC 34 with cmd address in R1
         DROP  R8,R10,R11
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
NOCVTUSR DS    0H
   GETMAIN RU,LV=XCVTUSIZ,LOC=BELOW,SP=245 Get 48 byte CVTUSER SQA area
*                                 CSA would make more sense than SQA,
*                                 but someday I may need fixed storage
* Warning:  The area pointed to by the CVTUSER field is used both by
*           MPF programs IEC507D and IOS000I.
         LR    R8,R1              Save address of storage gotten
         USING XCVTUSER,R8        Tell assembler about dsect
         XC    XCVTUSER(XCVTUSIZ),XCVTUSER  Clear CVTUSER pointed area
         MVC   XCVTUEYE,CCVTUSER  Move 'CVTUSERn' to CVTUSER area
         SLR   R7,R7              Clear a register for the 'CS' inst.
* CS - If R7 and CVTUSER are equal, then R8 is stored in CVTUSER
* CS - If R7 and CVTUSER are not equal, then CVTUSER is loaded to R7
         CS    R7,R8,CVTUSER-CVT(R9)  Set CVTUSER address in CVT
         BE    GOTCVTU            Got CVTUSER now, go back to main line
* Some other user put CVTUSER in CVT first, free the new one
         FREEMAIN RU,LV=XCVTUSIZ,A=(R8),SP=245  Free extra SQA storage
         LR    R8,R7              Use the first CVTUSER area address
         B     GOTCVTU            Got CVTUSER now, go back to main line
         DROP  R8                 Drop pointer to area for CVTUSER
*
BADUSER  DS    0H
         WTO   'MPF exit IOS000I found a bad CVTUSER area',ROUTCDE=11
         B     RETURN             Exit the exit quick
*
CT       DC    CL2'CT'            Constant for compare
SCTH     DC    CL4'SCTH'          Constant for compare
CCVTUSER DC    CL7'CVTUSER',XL1'1' Constant to init and check CVTUSER
STARTCMD DC    AL2(38),AL2(0),CL34'START MSG,M=IOS000I from MPF EXIT '
*
         COPY  CVTUSER            CVTUSER DSECT in ????.SORC????
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'1'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
* *                               Minute, and Second, used by IOS000I
*          DS    XL26             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
*  Following mapped by SYS1.MODGEN(IEZVX100) ???????
CTXT     DSECT ,
         DS    CL8
CTXTTXPJ DS    CL4                Pointer to major line text
CTXTTXPN DS    CL4                Pointer to minor line text
         DS    CL8
CTXTRPID DS    CL2                Reply id
CTXTATTR DSECT ,
         DS    CL6
CTXTTMSG DS    CL126
*
         CVT   DSECT=YES    MVS's Communications Vector Table
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    E
R3       EQU   3                      G
R4       EQU   4                        I
R5       EQU   5                          S
R6       EQU   6                            T
R7       EQU   7                              E
R8       EQU   8                                R
R9       EQU   9                  E
R10      EQU   10                   Q
R11      EQU   11                     U
R12      EQU   12                       A
R13      EQU   13                         T
R14      EQU   14                           E
R15      EQU   15                             S
         END   ,
//L.SYSLMOD DD DISP=SHR,DSN=????.LOAD????,SPACE=
 NAME IOS000I
