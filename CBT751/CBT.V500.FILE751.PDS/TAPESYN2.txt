//SOMITCWT JOB (????????,????,1439,9999,9999),TAPESYN2-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//HLASMCL  EXEC HLASMCL,PARM.C=(NORENT,OBJECT,NODECK,TERM),
//             PARM.L=NORENT
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=????.SORC????
PASS TITLE 'TAPESYN2 - - - Updates TAPEBITS in memory for tapes in use'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*    This tape reads a tape statistic data set to determine
* which tape are not expired and marks them as protected
* in TAPEBITS in memory.  Only expired tapes will be
* eligiable to be used as scratch tapes.
*
*    By checking for not-expired instead of are-protected,
* tapes that are in error, mislabeled, or other issues
* will not be used as scratch tapes.
*
*    This program is the same as TAPESYNC except for the
* input data set.  TAPESYNC uses data that came from SMF
* records that do not account for tapes being reinitialized.
* This program uses a tape statistic data set that was
* created by reading tape labels so should be more accurate
* for the tapes that were checked.
*
*     Sample JCL:
*
* //xxxxxxxT JOB (xxxxxxxx,xxxx,1439,9999,9999),TAPESYNJ-xxxxxxxx,
* //         CLASS=x,MSGCLASS=x,
* //         NOTIFY=SOMITCW,COND=(0,NE)
* //TAPESYN2 EXEC PGM=TAPESYN2
* //STATS    DD  DISP=SHR,DSN=xxxx.TAPES.STATS(0)
* //* RECFM=FB forced and normally LRECL=59
* //SYSUDUMP DD  SYSOUT=*
*
* Written: 2006-08-02
*
* Blame: somitcw @ comcast.net
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
TAPESYN2 CSECT ,
TAPESYN2 AMODE 24                 Addressing mode of 24 for GET MACRO
TAPESYN2 RMODE 24                 Residency mode of 24 because of AMODE
         USING *,R15              Set temporary base register
         SAVE  (14,12),,'TAPESYN2.&SYSDATE..&SYSTIME' Save Registers
         DROP  R15                Drop the temporary base register
         LR    R12,R15            Load the program's base register
         USING TAPESYN2,R12       Give the assembler the new base
         LH    R0,WORKLEN         Load work area size for GETMAIN
         GETMAIN R,LV=(0)         Get storage for work space
         LR    R2,R1              Copy address of save area for MVCL
         LH    R3,WORKLEN         Load length to clear with MVCL
         SLR   R4,R4              Clear the MVCL from address
         SLR   R5,R5              Clear the MVCL pad and from length
         MVCL  R2,R4              Clear save area
         ST    R1,8(,R13)         Connect old and new save areas
         ST    R13,4(,R1)         Connect old and new save areas
         LR    R13,R1             Connect old and new save areas
         USING SAVEAREA,R13
* Get TAPEBITS
         L     R11,16             Load the address of the CVT
         USING CVT,R11            Give assembler the CVT mapping
         L     R11,CVTUSER        Load the address of the CVT user area
         USING XCVTUSER,R11       Give assembler the CVTUSER mapping
         CLC   XCVTUEYE,CVTUSER1  See if the CVTUSER area is valid
         BNE   NOCVTUSR           Area not valid, can't access TAPEBITS
         L     R11,XCVTTAPE       Load TAPEBITS address
         USING TAPEBITS,R11       Give assembler the TAPEBITS mapping
         CLC   TAPEEYE,TAPEBIT1   See if the TAPEBITS area is valid
         BNE   NOBITS             Area not valid, can't access TAPEBITS
* OPEN
         MVC   STATS(DUMDCBLN),DUMDCB  Move in DCB to work area
         MVI   OPENLIST,X'80'     Mark only one DCB to open
         OPEN  (STATS,INPUT),MF=(E,OPENLIST)  Open STATS file
GET      DS    0H
         GET   STATS              Get volume record
         LR    R10,R1             Save address of input volume record
         USING INREC,R10          Tell assembler where
         CLC   TAPECHAR,INVOL     vol ser start with TAPEBITS char.?
         BNE   GET                Not one of our tapes, go ignore
         TRT   INVOL+1(5),TABLE   See if rest of vol ser numeric
         BNZ   GET                Not five numerics, go ignore
         CLC   EXPI(3),INSTAT     See if tape has expired
         BE    GET                Tape has expires, do not protect
*
* Update new tape bits
*
PROTECTD DS    0H
         PACK  DWORK,INVOL+1(5)   Pack the numeric part of the vol ser
         CVB   R8,DWORK           Load the tape number into a register
         SLR   R9,R9              Clear a work register
         SRDL  R8,3               Divide tape number by 8
         SRL   R9,29              Find remainder
* R8 contains the displacement of the byte to update within NEWBITS
* R9 contains the displacement within BITS for the or mask
         LA    R8,NEWBITS(R8)     Load the address of byte to update
         LA    R9,BITS(R9)        Load the address of the bit mask
         OC    0(1,R8),0(R9)      Mark the tape number as in use
         B     GET                Go back to get another volume record
*
* The end
EODAD    DS    0H
         MVI   OPENLIST,X'80'     Mark only one DCB to CLOSE
         CLOSE STATS,MF=(E,OPENLIST)  Close STATS file
         LA    R2,TAPES           Load address of the old tape bits
         LH    R3,H12500          Load the length of the old tape bits
         LA    R4,NEWBITS         Load address of the new tape bits
         LR    R5,R3              Load the length of the new tape bits
         MODESET KEY=ZERO         Switch to key zero
         MVCL  R2,R4              Overlay old tape bits with new
         MVI   TAPEUPD,1          TAPESAVE will write TAPEBITS to disk
         MODESET KEY=NZERO        Switch to key eight
         LH    R0,WORKLEN         Load work area size for FREEMAIN
         LR    R1,R13             Save work area location for FREEMAIN
         L     R13,4(,R13)        Restore caller's save area address
         FREEMAIN R,LV=(0),A=(1)  Free work area's storage
         RETURN (14,12),RC=(15)   Return to caller with FREEMAIN retcde
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* Error routines
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
NOCVTUSR DS    0H
         WTO  'TAPESYN2 - No CVTUSER area, program abending',ROUTCDE=11
         ABEND 123                Abend without a dump
*
NOBITS   DS    0H
         WTO 'TAPESYN2 - No TAPEBITS area, program abending',ROUTCDE=11
         ABEND 234                Abend without a dump
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* Constants
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0D                 Align Constants area
*
WORKLEN  DC    AL2(WORKSIZE)      Length of work area
*
H12500   DC    H'12500'           Length of bits for 100,000 tapes
*
EXPI     DC    CL4'Exp'           To compare for an expired tape
*
* The X'1' is the DSECT version number
CVTUSER1 DC    CL7'CVTUSER',XL1'1'  Constant to check CVTUSER
TAPEBIT1 DC    CL7'TAPEBIT',XL1'1'  Constant to check TAPEBIT
*
TABLE    DC    256X'1'            Table to check for numerics in volser
         ORG   TABLE+240          Back up location counter to numbers
         DC    10X'0'             Overlay numbers for TRT to not find
         ORG   ,                  Return location counter to normal
*
BITS     DC    XL8'8040201008040201'  Bit to set on
*
DUMDCB   DCB   DDNAME=STATS,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=EODAD
DUMDCBLN EQU   *-DUMDCB
*
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      DSECTs Follow
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
SAVEAREA DSECT ,
         DS    9D                 Register save area
*
DWORK    DS    D                  CVD work area
*
OPENLIST DS    D                  OPEN/CLOSE list
*
STATS    DS    0D,XL(DUMDCBLN)    Input STATS Data Control Block
*
NEWBITS  DS    XL12500            New TAPEBITS being created
*
WORKSIZE EQU   *-SAVEAREA
*
         SPACE 1
INREC    DSECT ,
INRECRD  DS    0CL59              From program TAPESTAT
INVOL    DS    CL6                Tape volume serial requested
         DC    CL1' '             Space
INSTAT   DS    CL9                Output Status of the tape volume
* Error, MisMatch, No-Label, Empty, Expired, or Protected
         DC    CL1' '             Space
INDSN    DS    CL17               Data set name from the tape label     d
         DC    CL1' '             Space
INCREDT  DS    CL8                Creation date in YYYY.DDD format
         DC    CL1' '             Space
INEXPDT  DS    CL8                Expiration date in YYYY.DDD format
         DC    CL1' '             Space                                 Y
INOTHER  DC    CL6' '             Errors like internal vol ser, etc.
*
         COPY CVTUSER             Copy the CVTUSER area DSECT
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'01'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
* *                               Minute, and Second, used by IOS000I
*          DS    XL2              Space available for expansion
* XCVTPSWD DS    F                ACF2 LGNIXIT anchor, used by SAVEPSWD
* XCVTJOUR DS    F                DFHJC4508 Journal PRIM or SECO
* XCVTTAPE DS    XL4              TAPE, TAPESAVE, TAPESYNC, & IGXMSGEX
* * TAPESKIP DS    CL6            TAPESKIP was old name for XCVTSKIP
* XCVTSKIP DS    CL6              IEC512I tape vol ser to ignore
*          DS    XL22             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
TAPEBITS   DSECT ,
           COPY  TAPEBITS         Copy the TAPEBITS DSECT
* TAPEEYE  DS    D                DSECT eye-catcher CL7'TAPEBIT',XL1'1'
* TAPEOLD  DS    A                Addr of old TAPEBITS record to delete
*          DS    CL6              TAPESKIP moved to CVTUSER as XCVTSKIP
* TAPEDISP DS    XL2              Last TAPES byte that had a free bit
* TAPEHIGH DS    XL2              Displacement to return to zero
* TAPEUPD  DS    XL1              Tape bits updated, need writing
* TAPECHAR DS    CL1              First byte of tapes described next
* TAPES    DS    XL12500          Bits for 100,000 tapes ?00000-?99999
* * TAPEBIT0 EQU   X'80'            First tape within a byte
* * * TAPEBIT1 EQU  X'40'           Second tape within a byte, dup.name
* * TAPEBIT2 EQU   X'20'            Third tape within a byte
* * TAPEBIT3 EQU   X'10'            Fourth tape within a byte
* * TAPEBIT4 EQU   X'08'            Fifth tape within a byte
* * TAPEBIT5 EQU   X'04'            Sixth tape within a byte
* * TAPEBIT6 EQU   X'02'            Seventh tape within a byte
* * TAPEBIT7 EQU   X'01'            Eighth tape within a byte
* TAPELEN  EQU   *-TAPEEYE        Length of TAPEBITS data record
*
         CVT   DSECT=YES,LIST=YES Communication Vector Table
*
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      DATA CONTROL BLOCKS FOLLOW
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
TAPESYN2 CSECT ,
         LTORG ,                  In case someone adds literals
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*     REGISTER EQUATES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
R0       EQU   0                  Register equate for register 0
R1       EQU   1                  Register equate for register 1
R2       EQU   2                  Register equate for register 2
R3       EQU   3                  Register equate for register 3
R4       EQU   4                  Register equate for register 4
R5       EQU   5                  Register equate for register 5
R6       EQU   6                  Register equate for register 6
R7       EQU   7                  Register equate for register 7
R8       EQU   8                  Register equate for register 8
R9       EQU   9                  Register equate for register 9
R10      EQU   10                 Register equate for register 10
R11      EQU   11                 Register equate for register 11
R12      EQU   12                 Register equate for register 12
R13      EQU   13                 Register equate for register 13
R14      EQU   14                 Register equate for register 14
R15      EQU   15                 Register equate for register 15
         END   ,                  The end of the program
//L.SYSLMOD DD DSN=????.LOAD????,DISP=SHR,SPACE=
   SETCODE AC(1)
   NAME TAPESYN2
