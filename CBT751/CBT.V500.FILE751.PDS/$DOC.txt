$ - Is the first data set in our master catalog and the
first data in the VTOC of our system resident disk volume.
It is used for a model DSCB when creating generation data
sets and used for a volume reference for JCL locks.
We have a RACF group of $ and data set profile $.**(G) to
allow $ to be allocated and the disk volume to be backed up.

Sample JCL to create $:

Move whatever is in the sysres VTOC after the format 4
and format 5 DSCB so $ will go to that location.
//IEFBR14 EXEC PGM=IEFBR14
//X DD DSN=$,DISP=(,KEEP),
// SPACE=(TRK,0),UNIT=SYSDA,VOL=REF=SYS1.LINKLIB
//* Do not add RECFM, LRECL, or BLKSIZE because all
//* generation data set ever created will not match.

If gen is needed to separate device types for virtual
and real tape drives, use non-compatable tape types.
Perhaps: 3480 and 3590
Or see methods listed for MDL from Bus-Tech:
http://www.bustech.com/

$DOC - Poor list that you are looking at.

$HASP050 - MPF exit to help prevent JES2 SPOOL from filling.

$TMOUNT - Sample VSE tape mount program.

$VIRTAPE - Some old E-Mail about the tape programs.

@FILE751 - Something that one of the Sams added.

CMD - Issues operator commands and calls program from
a PARM or CMDIN DD statement.

CONDCHEK - LINKs other program and checks the condition
code for zero.  If the returning condition is not zero,
the step is abended with the abend code of the return code.

CVTUSER - DSECT to describe CVTUSER area to hold pointers
and values for tapes and other functions.
Used by programs:  IEC507D, IEC512I, IGXMSGEX, IOS000I,
LGNIXIT, SAVEPSWD, DFHJC450, TAPERSET, TAPESAVE,
TAPESYNC, TAPESYN2, and many others.

DATEYMD - Obsolete Rexx EXEC to store dates.

DELAY - Program that pauses the current process.
It can be issued from BATCH, TSO CALL, as a TSO CP,
and Rexx function.

FLEXESV7 - Flex-ES tape options and information.

IEALPA00 - Sample SYS1.PARMLIB member showing how to
add IGXMSGEX to MPLA for testing.

IEASVC00 - Sample SYS1.PARMLIB member showing how to
add SVC 230 (IGC0023{) for tape mounting.

IEA404A - Obsolete MPF exit to keep consoles from
backing up.  IBM claims that the problem is fixed but
if you don't trust them, this will take care of it.

IEC507D - MPF exit to disallow operator writing over date
protected tapes.

IEC512I - MPF exit to intercept MVS console message: IEC512I
If for a re-mount for a specific tape, IGXMSGEX mount of a
tape that did not match, normally a mount loop would occur.
IEC512I stores the tape vol ser in the CVTUSER area to let
IGXMSGEX know to not mount the tape again.  If for an error
on a scratch tape request, no action is taken to block the
next scratch tape from being selected and used.

IEC534D - MPF exit. Prevent tape relabel.
IEE366I - MPF exit. Starts SMF dump JOB.
IEF099I - MPF exit. Tell TSO users if their JOB is waiting on data sets.
Mostly from: http://home-2.worldonline.nl/~jjaeger/
IEF251I - MPF exit. E-Mail if "UNABLE TO ALLOCATE" message. See SETWHEN
IEF450I - MPF exit. E-Mail if a JOB abends.  See program SETWHEN.

IGC0023{ - User SVC 230 to issue P/390 tape mount CCW
This SVC accepts a tape volume serial number and
tape drive Unit Control Block pointed to by registers
zero and one and issues a CCW command code 4B to the
tape device with mount information ( tape file specs ).
To call the SVC, use code like:

     LA    R0,VOLSER     Load address of the requested vol ser
     L     R1,UCBADDR    Load the UCB address
     SVC   C'W'          Issue the autoloadCCW SVC
     B     FINISHED      It either worked or not, go exit

CCW issued to the tape device number will be something like:
CCW      CCW  X'4B',FILESPEC,X'20',21  Mount tape CCW
FILESPEC DC   CL21'/tapeC/C01/C01234.aws'

   If SYS1.PARMLIB(IEASVCxx) specifies APF(YES) then the
caller to this SVC must be APF or otherwise authorized.

IGXMSGEX - Is an SMS exit that is normally used to allow an
installation to change the messages that are displayed on
3480 and 3490 tape drives.  The exit is in a good spot to
issue automount ccw commands to the tape drive because:
1. The specific tape number or scratch tape request is
in the data to be displayed.
2. The data to be displayed also shows that the request
is for a mount or for some other request.
3. Since SMS is about to issue a CCW to the tape drive,
it is a good time to insert our CCW.
IGXMSGEX determines if a specific tape or scratch tape
is needed by checking the two 8 byte messages that will
be sent to the tape drive.  If either message starts
with an 'M', then the next six bytes are either the
tape vol ser to mount or 'PRIVAT' for a scratch tape
request.  The program does not check for 'SCRTCH'
because 'SCRTCH' is normally only an indication of
a JCL problem.  Either a work tape is being called
for or a deferred mount is needed:
//xxxxxxxx DD UNIT=TAPE should go to disk space
//IEHINITT DD UNIT=(TAPE,,DEFER)  DEFER is needed
Or the program could be changed to ignore "SCRTCH".
If message 1 starts with '*IEC701', then the
middle 6 bytes of message 2 contain the tape number
to mount.  If a scratch tape request, TAPEBITS is
checked and updated to provide a specific scratch tape
vol ser.  Tapes are logically grouped in groups of one
thousand tapes.  IGXMSGEX and TAPEBITS keep track of
the highest tape number in use.  If all tapes are in
use up to that number, the tape pool high water mark
is expanded by eight tapes.  After a specific tape
number is provided or determined, then SVC 230
( IGC0023{ ) is issued to mount the tape.
For OS/390 2.4.0, IGXMSGEX is linked into IGX00030
( ESR SVC 109 function 30 ) and may require an IPL to
implement.  The updated IGX00030 needs to be in an
LPALSTxx data set or in SYS1.PARMLIB(IEALPAxx).

IOS000I  - MPF exit. To notify on some disk error messages.
IST1132I - MPF exit. To activate JES2 links when VTAM CDRM comes up.
LLAFRESH - MPF exit. To refresh LLA when LinkList I/O error because
someone compressed a LinkList data set.

MPFLST00 - Sample SYS1.PARMLIB MPF list.

MSG - PROC to start command and program scripts.

REPLYCAN - MPF exit to reply cancel to "REPLY DEVICE NAME OR 'CANCEL'"

REPLYF - was MPF exit to unload read-only tapes:
IEC510D,SUP(NO),USEREXIT(REPLYF)   Reply 'F' Unload file protected tape
With automountCCW, IEC510D is no longer in MPFLSTxx

REPLYM - MPF exit to unload incorrect, wrong, or tape to be labelled:
IEC514D,SUP(NO),USEREXIT(REPLYM)   Reply 'M' for DCK or label error
With automountCCW, IEC514D is no longer in MPFLST to leave the error
tape on the tape drive and not mount it repeatedly.
IEC534D,SUP(NO),USEREXIT(REPLYM)   Reply 'M' for wrong vol ser mounted
With automountCCW, IEC534D is no longer in MPFLST to leave the error
tape on the tape drive and not mount it repeatedly.
IEC701D,SUP(NO),USEREXIT(REPLYM)   Reply 'M' to initialize a tape
With automountCCW, it is too dangerous to leave MPF exit IEC701D
active all of the time.  One JOB could clear all tapes in a library
in a few seconds with no checks for date protection.
IEC704A,SUP(NO),USEREXIT(REPLYM)   Reply 'M' to unload NL tapes
IEC704A works with IEC512I to prevent mount loops.
IEC704A allows JOBs calling for scratch tapes to get a new
scratch tapes and IEC512I stops requests for a specific bad tape.

REPLYU - MPF exit. To reply "U".
REPLYY - MPF exit. To reply "Y".

SETWHEN - Program to store D, N, W for Day, Night, or Week-end
in common memory so other utilities can quickly check to E-Mail
or not.

Tape - Test program to see if automount CCW work.
Sample TAPE PROC follows:
//TAPE    EXEC PGM=TAPE,TIME=1
//*
//* No required DD statements so running as a sub-system is easier
//* For testing, a SYSUDUMP will prevent running as a subsystem.
//*
//* SYSUDUMP DD  SYSOUT=*  For debug.  Remove to run as sub-system
//*
//STCLOCK  DD  DISP=OLD,DSN='Only one TAPE STC can run at a time',
//             VOL=REF=$
//*
//* This PROC allows an operator or an MPF routine
//* to mount tapes on Flex-ES virtual tape drives,
//*
//* Console command format is:
//*
//* S TAPE,SUB=MSTR       to run as a sub-system
//* S TAPE.TAPE,SUB=MSTR  to run as a sub-system
//* S TAPE                to run as a started task
//* S TAPE.TAPE           to run as a started task
//* F TAPE,cccu,volser    to mount a tape
//* P TAPE                to stop the TAPE sub-system or STC
//*
//* Console command examples:
//*
//* modify tape,0187,C00123
//* f tape,182,A00213
//*
//* Notes:
//*
//* Unit address must be three or four characters.
//* Volser must be 6 characters.
//*

TAPEBITS - DSECT to describe memory bit map of tapes.
Used by programs: IEC512I, TAPE, TAPENEW, TAPESAVE,
TAPESYNC, and TAPESYN2.

TAPEBLP - Extracts tape information from the label of a
tape and formats in TAPESMF output format.  It is used
to update TAPESMF information for tapes that do not or
no longer have SMF data available.
One tape, ranges of tapes, or both can be called for.

//SOMITCWT JOB (xxxxxxxx,xxxx,9999,9999,9999),TAPEBLPJ-SOMITCW,
//             CLASS=x,MSGCLASS=x,
//             NOTIFY=SOMITCW,COND=(0,NE)
//TAPEBLP EXEC PGM=TAPEBLP
C00106-C00114
//INPUT    DD  DISP=SHR,DSN=IF.TAPE.NOT.FOUND.PLEASE.CANCEL.SOMITCWT,
//             UNIT=(TAPE,,DEFER),VOL=SER=INTRNL,LABEL=(,BLP)
//VOLUMES  DD  DISP=MOD,DSN=SYSx.TAPES.LPAR-B.VOLUMES
//DATASETS DD  DISP=MOD,DSN=SYSx.TAPES.LPAR-B.DATASETS
//SYSUDUMP DD  SYSOUT=*

TAPEDRPD - Drops old record from data that TAPESMF extracted
from SMF type 14 and 15 tape records and converted to display.
TAPEDRPD does for the LPAR DATASETS data set what TAPEDRPV
does for the LPAR VOLUMES data set.

TAPEDRPV - - Drops TAPESMF records from the LPAR VOLUMES
data sets after they have been merged into the combined
VOLUMES data set.

Sample JCL:

//SORTVOL EXEC PGM=SORT,RD=R
//SYSOUT   DD  SYSOUT=*
 SORT FIELDS=(1,44,CH,A) Sort Vol, Date, Time, F.Seq, Code, Exp, MaxExp
 SUM FIELDS=NONE         Drops records duplicated in columns 1-44 Why?
//SORTIN   DD  DISP=OLD,DSN=STOR.TAPES.LPAR-B.VOLUMES
//SORTOUT  DD  DISP=(,CATLG,DELETE),DSN=STOR.TAPES.LPAR-B.VOLBKUP(+1)   ,
//             UNIT=SYSDA,SPACE=(TRK,(15,15),RLSE),
//             DCB=$,RECFM=FB,LRECL=171
//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(1,1))
//*
//* TAPE system; Drop Volume Records step
//DROPVOL EXEC PGM=TAPEDRPV,RD=R
//REGIONAL DD  DISP=SHR,DSN=STOR.TAPES.LPAR-B.VOLBKUP(+1)      Compared
//COMBINED DD  DISP=SHR,DSN=STOR.TAPES.COMBINED.VOLUMES        Compared
//REPLACE  DD  DISP=OLD,DSN=STOR.TAPES.LPAR-B.VOLUMES          Replaced

TAPEDSCT - DSECT of record lay-out of SMF tape information files.

TAPENEW - Creates a new tape bit pattern file.
If a bit is one, then the tape is in use.
If a bit is zero, then the tape is available for use.
TAPENEW will assume that all tapes are scratch tapes.
Before the tape bits are put into production with
TAPESAVE, make certain that either all tapes in the
range are scratch tapes or are date protected.
TAPESYNC could run soon after TAPESAVE is started
to indicate tapes are active before they are used
for scratch tapes.  Full sequence could be:
TAPENEW runs, TAPESAVE started to load TAPEBITS
into memory, SMFDUMP and TAPESMF updates tape
VOLUMES data set, TAPESYNC updates TAPEBITS in
memory.  If IGXMSGEX is running and IGC0023{ is
available, then scratch tapes could then be mounted
from TAPEBITS.

Sample TAPENEW JCL:

//JOB JOB JOB,JOB JOB
//TAPENEW EXEC PGM=TAPENEW,PARM=C  for volsers C00000 through C99999
//TAPEDATA DD  DISP=(,CATLG,DELETE),DSN=SYS1.TAPES.C00000.C99999,
//             SPACE=(TRK,1),VOL=REF=SYS1.PARMLIB
//* will be DSORG=PS, RECFM=F, LRECL=12524, and BLKSIZE=12524

TAPEOFF - Lists tape volume serial numbers to be E-Mailed
so they are available for disaster recovery.

TAPEOFFC - Obsolete Rexx exec to create SCO UnixWare "cp"
commands to copy tape images for grouping to copy to a
physical SCSI tape.  We only do sftp to multople offsite
locations so stopped sending a physical tape offsite.

TAPEOLD - Drops old record from data that TAPESMF extracted
from SMF type 15 tape records and converted to display.
Since tapes are reused and only the information for the
current tape is needed to calculate EXPDT for scratch or
active lists, someway was needed to drop old records.
Another description would be:  The tape combined VOLUMES
data set should only have one record for each tape volume.
As record are merged in, previous records for the volumes
must be dropped.  Program TAPEOLD does the dropping.

Sample JCL:

//SORTACT EXEC PGM=SORT,PARM='RC16=ABE',RD=R
//SYSOUT   DD  SYSOUT=*
*             VolSer   Created   Ind.-Code      EXPDT---D
 SORT FIELDS=(1,6,CH,A,8,23,CH,D,35,1,CH,D)    ,37,8,CH,D)
//SORTIN   DD  DISP=OLD,DSN=STOR.TAPES.COMBINED.VOLUMES
//         DD  DISP=OLD,DSN=STOR.TAPES.LPAR-A.VOLUMES
//         DD  DISP=OLD,DSN=STOR.TAPES.LPAR-B.VOLUMES
//         DD  DISP=OLD,DSN=STOR.TAPES.LPAR-C.VOLUMES
//SORTOUT  DD  DISP=(,CATLG,DELETE),DSN=STOR.TAPES.COMBINED.SORT(+1),
//             UNIT=SYSDA,SPACE=(TRK,(150,150),RLSE),
//             DCB=$,RECFM=FB,LRECL=171
//*
//TAPEOLD EXEC PGM=TAPEOLD
//SORTED   DD  DISP=SHR,DSN=STOR.TAPES.COMBINED.SORT(+1) input
//VOLUMES  DD  DISP=OLD,DSN=STOR.TAPES.COMBINED.VOLUMES replaced
//SYSUDUMP DD  SYSOUT=*

TAPERSET - Changes the TAPEBITS in memory to a new current vol
ser number and sets a new tape pool high-water-mark which is
the tape pool soft limit.  If no PARM is specified, then both
numbers are set to zero.   Tapes are grouped with eight tapes
to a byte, so the vol ser numbers set are rounded off by 8.
TAPERSET is used if the number of tapes needed is reduced and
fewer groups of 8 tapes are wanted to be used for the initial
scratch tape pool.  The pool will expand again as needed.

Sample TAPERSET JCL:

//TAPERSET EXEC PGM=TAPERSET  optional ,PARM=(C00123,C00999)
//SYSUDUMP DD  SYSOUT=*
//LOCK     DD  DISP=OLD,DSN='TAPERSET is running',VOL=REF=$

TAPESAVE - Loads TAPEBITS from disk to memory.  Re-writes disk
TAPEBITS from memory every minute that TAPEBITS was updated.
TAPESAVE normally should start on IPL and be shut down
when the system is shut down.  If TAPESAVE is stopped and
started, the TAPEBITS in memory will continue to be used.
Manually editting SYS1.TAPES.x00000.x99999 will not work
unless an IPL is done before TAPESAVE is restarted or a new
tape scratch pool is switched to:  SYS1.TAPES.y00000.y99999

    Sample JCL for TAPESAVE:

//TAPESAVE EXEC PGM=TAPESAVE,TIME=1439
//TAPEDATA DD  DISP=OLD,DSN=SYS1.TAPES.C00000.C99999
//* For testing, run as a JOB or STC with a
//* //SYSUDUMP DD SYSOUT=* DD statement.
//* SUBSYS of MSTR cannot have SYSOUT=anything

    Sample start command:

START TAPESAVE,SUB=MSTR
For SUB=MSTR, the data set must be in the master
catalog or the UNIT and VOL=SER must be specified.

    Sample stop command:

STOP TAPESAVE

TAPESMF - Extracts tape EXPDT and other information in SMF
record type 15 and records in a data set in display format.
The data can be used to track tape usage and generate tape
scratch list and active list data.  Sample JCL:

//TAPESMF EXEC PGM=TAPESMF
//*
//* Input back up SMF data set
//SMFIN    DD  DSN=BKUP.SMFDUMP.DAILY,DISP=SHR
//*
//* Input and output tapes. For historical records?
//DATASETS DD  DISP=MOD,DSN=STOR.TAPES.LPAR-A.DATASETS
//*
//* First label of output tapes.  To keep track of scratch and active.
//VOLUMES  DD  DISP=MOD,DSN=STOR.TAPES.LPAR-A.VOLUMES
//*
//* Never needed if present
//SYSUDUMP DD  SYSOUT=*

TAPESTAT - Reads labels of a tape, ranges of tapes,
or both to determine the status of:
Error, MisMatch, No-Label, Expire-today, Expired, or Protected.
No output information is written for empty tapes.
A tape is considered empty if it has a data set name
of all zeroes ( from IEHINIT or HETINIT ) or a data
set name of 'EMPTY.TAPE' ( from TAPEZERO ).
TAPESTAT uses EXCP to issue the P/390 automountCCW
to mount tapes, rewind, read VOL1, and HDR1, and
unload the tapes.
OPEN is bypassed to prevent tape usage from being
recorded in SMF.  APF authorization is required to
allow OPEN to be bypassed.

There is a space between each output field.
Output records fields are:
Volser
Status
Data set name ( only last 17 bytes are in the tape label )
Creation date
Expiration date
Internal label vol ser if a mis-match

Sample descriptions and output records:

  Tape C01111 called for but internal label is C02222
C01111 MisMatch  .SYSLOG.G1234V00 04123 05001 C02222

  Tape C01122 is has expired but has not been erased
C01122 Expired   VSYSRES.G0123V00 05260 05290

  Tape C01234 is date protected until 2007/301
C01234 Protected SMFDUMP.G0012V00 05301 07301

  The output file can be used to find tape
errors ( no label, vol ser mismatch, others?  ).

  The output file can also be used to find tapes
that have expired but not yet cleared of data.
SORT can be used to select 'Expired' records to
pass to program TAPEZERO to scratch the tapes
and free the disk space that they use.

For TAPESTAT sample JCL, see TAPESYN2.

TAPESYNC - TAPESYN2 is normally better than TAPESYNC.
TAPESYNC uses formatted SMF data for input which can
be incorrect because of tapes being initialized.
TAPESYNC updates memory resident TAPEBITS to indicate
which specific tape volumes are date protected so
should not be attempted to be used as scratch tapes.
If TAPESYNC or TAPESYN2 never run, all tapes will
eventually show as in use and none will be allowed to
be used as scratch.  Program TAPESAVE copies memory
TAPEBITS to disk every minute so TAPESYNC and IGXMSGEX
changes are not lost.  It might be best to run SMFDUMP
and TAPESMF shortly before TAPESYNC, but since MPF exit
IEC507D prevents date protected tapes from being
written over and automountCCW code would just call for
the next tape so TAPESYNC does not require the most
current data.  Also, it could take weeks between the
automountCCW code getting back to select the same tape
again.  Tapes in the same byte use could be attempted
immediately.  It would be best to not run TAPESYNC
while tape drives are in use on the instance or LPAR.
Flex-ES allows one tape image to be on two virtual tape
drives at a time and really makes a mess of the tape
image.  TAPESYNC should run on each instance because
each instance should have its TAPEBITS in memory.
Running TAPESYNC once per week or month may be enough?
It needs to run more often than the scratch pool tape
wraps tape vol sers.

Sample TAPESYNC JCL:

//JOB JOB JOB,JOB JOB
/*MESSAGE Best to run after tape data set updated and
/*MESSAGE before new tapes are created
//TAPESYNC EXEC PGM=TAPESYNC
//VOLUMES  DD  DISP=SHR,DSN=STOR.TAPES.COMBINED.VOLUMES
//         DD  DISP=SHR,DSN=STOR.TAPES.LPAR#001.VOLUMES
//         DD  DISP=SHR,DSN=STOR.TAPES.LPAR#002.VOLUMES
//         DD  DISP=SHR,DSN=STOR.TAPES.LPAR#003.VOLUMES
//SYSUDUMP DD  SYSOUT=*

TAPESYN2 - TAPESYN2 is normally better than TAPESYNC.
TAPESYN2 updates memory resident TAPEBITS to indicate
which specific tape volumes are date protected so
should not be attempted to be used as scratch tapes.
If TAPESYNC or TAPESYN2 never run, all tapes will
eventually show as in use and none will be allowed to
be used as scratch.  Program TAPESAVE copies memory
TAPEBITS to disk every minute so TAPESYN2 and
IGXMSGEX changes are not lost.
TAPESYN2 uses the output of TAPESTAT for input
which is as accurate as possible.
All tape volume serial numbers in input except ones
listed as "Exp" are marked in memory as protected.
Tape volumes not in input won't be marked protected.
Tapes that program TAPESTAT determined as "Empty"
are not included in the data that TAPESYN2 reads.
It is best to run TAPESTAT shortly before TAPESYN2,
but since MPF exit IEC507D prevents date protected
tapes from being written over and automountCCW code
would just call for the next tape, TAPESYN2 does not
require the most current data.  Also, it could take
weeks between the automountCCW code getting back to
select the same tape again.  Tapes in the same byte
use could be attempted immediately.  It would be best
to not run TAPESYN2 while tape drives are in use on
the instance or LPAR.  Flex-ES allows one tape image
to be on two virtual tape drives at a time and really
makes a mess of the tape image.  TAPESYN2 should run
on each instance because each instance should have its
TAPEBITS in memory.  Running TAPESYN2 once per week or
month may be enough?  It needs to run more often than
the scratch pool tape wraps tape vol sers.

Sample TAPESTAT, TAPEZERO, and TAPESYN2 JCL:

//JOB JOB JOB,JOB JOB
/*MESSAGE All tape drives should be locked out in
/*MESSAGE the first step
//*
//TAPESTAT EXEC PGM=TAPESTAT
//TAPESTAT DD  UNIT=(TAPE,32,DEFER)
C00000-C02999
//STATS    DD  DISP=(,CATLG,CATLG),DSN=STOR.TAPES.STATS(+1),
//             UNIT=SYSDA,SPACE=(TRK,(1,15),RLSE),
//             DCB=$,RECFM=FB,LRECL=59
//SYSUDUMP DD  SYSOUT=*
//LOCK     DD  DISP=OLD,DSN='TAPESTAT is running',VOL=REF=$
//*
//SORT    EXEC PGM=SORT
//SYSOUT   DD  SYSOUT=*
 SORT FIELDS=COPY
    INCLUDE COND=(8,4,CH,EQ,C'Expi')  Copy expired tape records
//* INCLUDE COND=(8,3,CH,EQ,C'Exp') Copy all expired tape records
//* Use 3 byte compare to also get tapes that expire today
//SORTIN   DD  DISP=SHR,DSN=STOR.TAPES.STATS(+1)
//SORTOUT  DD  UNIT=SYSDA,SPACE=(TRK,(1,15)),DISP=(,PASS)
//*
//TAPEZERO EXEC PGM=TAPEZERO
//SYSIN    DD  DISP=(SHR,DELETE),DSN=*.SORT.SORTOUT
//TAPE     DD  UNIT=(TAPE,,DEFER)
//* RECFM=FB,LRECL=20,BLKSIZE=20 Forced by program for TAPE DD
//SYSUDUMP DD  SYSOUT=*
//LOCK     DD  DISP=OLD,DSN='TAPEZERO is running',VOL=REF=$
//*
//TAPESYN2 EXEC PGM=TAPESYN2
//STATS    DD  DISP=SHR,DSN=STOR.TAPES.STATS(+1)
//* RECFM=FB forced and normally LRECL=59
//SYSUDUMP DD  SYSOUT=*
//LOCK1    DD  DISP=OLD,DSN='TAPESYN2 is running',VOL=REF=$
//LOCK2    DD  DISP=SHR,DSN='BKDAILY is running',VOL=REF=$
//LOCK3    DD  DISP=SHR,DSN='BKWEEKLY is running',VOL=REF=$
//*
//EMAIL IF ABEND OR RC GT 4 THEN DO -
  xmitip e-mail or other message goes here
//EMAIL ENDIF

TAPEZERO - Erases tapes by writing a 20 byte record as
the first data set on the tape.  TAPEZERO uses normal
OPEN so the tape label retention date is checked and
the rewrite of the tape is recorded in SMF.
TAPEZERO is needed so large tape images don't hold
excessive disk space before they are used as scratch
tapes.  If the tape pool wraps often, running TAPEZERO
may not be needed.  TAPESTAT and TAPESYN2 may be enough
to keep disk space usage for tapes low?  Input for
TAPEZERO is RECFM=FB records containing the vol ser to
over-write.  TAPEZERO uses OPEN TYPE=J to request which
tape volume is to be mounted.  The tape data set name is
DSN=EMPTY.TAPE so TAPESTAT can identify the tapes as
empty tapes.

For TAPEZERO sample JCL, see TAPESYN2.

