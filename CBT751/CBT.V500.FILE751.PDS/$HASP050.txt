//SOMITCW$ JOB (????????,????,1439,9999,9999),$HASP050-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//$HASP050 EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  UNIT=SYSDA        ,VOL=SER=??????
//         DD  DISP=SHR,DSN=SYS1.MODGEN   ,UNIT=SYSDA,VOL=SER=??????
PASS     TITLE '$HASP050 - - - Start SPOOL clean-up PROC'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* Change log:
*
* 1994-10-17 WAM  Changed GETMAIN and FREEMAIN R to RU.
*
* 1994-02-07 WAM  Program written.
*
*    When message:
*   $HASP050 JES2 RESOURCE SHORTAGE OF ???? - ??% UTILIZATION REACH
*      displays, WTO processing calls this program as an MPF exit.
*      If the $HASP050 message is for JNUM, JQES, JOES, or TGS and
*      utilization from 95 to 99 percent, this exit issues commands:
*      S SPOOL,MEMBER=SPOOL95  or
*      S SPOOL,MEMBER=SPOOL96  or
*      S SPOOL,MEMBER=SPOOL97  or
*      S SPOOL,MEMBER=SPOOL98  or
*      S SPOOL,MEMBER=SPOOL99  depending on the percent utilized,
*      otherwise, no action is taken.
*      SYS1.PARMLIB(MPFLST00) defines the exit to the operating system.
*      SYS1.PARMLIB(CONSOL00) defines MPFLST00 to the system.
*
*      Sample SPOOL PROC:
*
* //CMD     EXEC PGM=CMD
* //CMDIN    DD  DSN=xxxx.PARMLIB(&MEMBER),DISP=SHR
*
*      Sample SPOOL95 PARM:
*
* *
* *    This member used by MPF exit $HASP050,
* *    If SPOOL is at 95% in use.
* *    The 60 second delays are so JES2 does not try
* *    to run all commands at once and hog the system.
* *
* $OQ,Q=X,CANCEL,A=2
* 'DELAY   '60
* $OQ,Q=R,CANCEL,A=15
* 'DELAY   '60
* $OQ,ALL,CANCEL,A=30
* 'DELAY   '60
* $PQ,ALL,A=30
* *
*
*      Sample MPFLST00 PARM:
*
* $HASP050,SUP(NO),USEREXIT($HASP050) Starts SPOOL purge PROC
*
*    To disable all MPF exits, enter operator command 'SET MPF=NO'.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,GEN,NODATA
$HASP050 CSECT ,
$HASP050 AMODE 31
$HASP050 RMODE ANY
         STM   R14,R12,12(R13)    Save caller's registers
         LR    R12,R15            Load the program's base register
         USING $HASP050,R12       Give the assembler the new base
         L     R11,0(,R1)         Load the address of COMM.TASK
*                                 User exit routine parameter list
         L     R11,CTXTTXPJ-CTXT(,R11)  Load address of message text
*
FINDDASH DS    0H
* $HASP050 JES2 RESOURCE SHORTAGE OF JNUM - 95% UTILIZATION REACHED
* $HASP050 JES2 RESOURCE SHORTAGE OF JQES - 95% UTILIZATION REACHED
* $HASP050 JES2 RESOURCE SHORTAGE OF JOES - 95% UTILIZATION REACHED
* $HASP050 JES2 RESOURCE SHORTAGE OF TGS - 95% UTILIZATION REACHED
         CLI   0(R11),C'-'        See if a dash found
         BE    GOTDASH
         LA    R11,1(,R11)        Bump to check next char. for a dash
         B     FINDDASH           Go to check next char. for a dash
GOTDASH  DS    0H
         SH    R11,H5             Back up 5 bytes to check for 'JOES'
         CLC   0(4,R11),JNUM      See if we found Job NUMbers
         BE    PERCENT            'JNUM' found, go check percent
         CLC   0(4,R11),JQES      See if we found JOB Queue ElementS
         BE    PERCENT            'JQES' found, go check percent
         CLC   0(4,R11),JOES      See if we found JOB Output ElementS
         BE    PERCENT            'JOES' found, go check percent
         CLC   1(3,R11),TGS       See if we found 'TGS'
         BNE   EXITEXIT           'TGS' not found, go exit the exit
PERCENT  DS    0H
         CLI   9(R11),C'%'        See if there is a percent sign
         BNE   EXITEXIT           '%' not found, go exit this exit
         CLC   7(2,R11),NINETY5   See if at least 95%
         BL    EXITEXIT           Less than 95%, go exit this exit
         GETMAIN RU,LV=CMDLEN,SP=230,LOC=(BELOW,ANY)
*                                 Get some storage below-the-line
         LR    R2,R1              Save address of the storage acquired
         MVC   0(CMDLEN,R2),TEMPLATE  Copy the command for SVC 34
         MVC   24(2,R2),7(R11)    Move the percentage to START command
*         Commands built will be S SPOOL,MEMBER=SPOOL95 through 99
         SLR   R0,R0              Clear register zero for SVC 34
         SVC   34                 Issue operator command
         FREEMAIN RU,LV=CMDLEN,A=(2),SP=230
*                                 Free the below-the-line storage
EXITEXIT DS    0H
         DROP  R12                Drop addressability to this program
         LM    R14,R12,12(R13)    Restore caller's registers
         SLR   R15,R15            Set return code to zero
         BR    R14                Return to caller
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*       Constants, equates, and DSECTs
*
*      ( Note: Re-enterent code does not allow work areas here )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
H5       DC    H'5'               Constant for subtraction
NINETY5  DC    CL2'95'            Constant for compare
TEMPLATE DC    AL2(CMDLEN),AL2(0),CL23'S SPOOL,MEMBER=SPOOLXX '
CMDLEN   EQU   *-TEMPLATE         Length ot the command list
TGS      DC    CL3'TGS'           Constant for compare
JNUM     DC    CL4'JNUM'          Constant for compare
JQES     DC    CL4'JQES'          Constant for compare
JOES     DC    CL4'JOES'          Constant for compare
         SPACE 3
R0       EQU   0                  Register equate for register 0
R1       EQU   1                  Register equate for register 1
R2       EQU   2                  Register equate for register 2
R3       EQU   3                  Register equate for register 3
R4       EQU   4                  Register equate for register 4
R5       EQU   5                  Register equate for register 5
R6       EQU   6                  Register equate for register 6
R7       EQU   7                  Register equate for register 7
R8       EQU   8                  Register equate for register 8
R9       EQU   9                  Register equate for register 9
R10      EQU   10                 Register equate for register 10
R11      EQU   11                 Register equate for register 11
R12      EQU   12                 Register equate for register 12
R13      EQU   13                 Register equate for register 13
R14      EQU   14                 Register equate for register 14
R15      EQU   15                 Register equate for register 15
         EJECT ,
         LTORG ,                  Separate literals from DSECTs
         IEZVX100 ,               COMM.TASK user exit routine parm.list
         SPACE 3
         END   ,                  The end of the exit
//L.SYSLMOD DD DISP=SHR,DSN=????.LOAD????($HASP050),SPACE=   ,
//*            UNIT=SYSDA,VOL=SER=??????
