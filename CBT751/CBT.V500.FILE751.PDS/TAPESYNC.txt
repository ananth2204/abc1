//SOMITCWT JOB (????????,????,1439,9999,9999),TAPESYNC-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//HLASMCL  EXEC HLASMCL,PARM.C=(NORENT,OBJECT,NODECK,TERM),
//             PARM.L=NORENT
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=????.SORC????
PASS TITLE 'TAPESYNC - - - Updates TAPEBITS in memory for tapes in use'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*    This tape reads a tape volumes data set with the tape
*  expiration date in columes 37 through 44 and replaces
*  TAPEBITS in memory with a new copy showing all tapes
*  available except the ones that have a expiration date
*  in the future.
*
*     Sample JCL:
*
* //xxxxxxxT JOB (xxxxxxxx,xxxx,1439,9999,9999),TAPESYNJ-xxxxxxxx,
* //         CLASS=x,MSGCLASS=x,
* //         NOTIFY=SOMITCW,COND=(0,NE)
* //TAPESYNC EXEC PGM=TAPESYNC
* //STEPLIB  DD  DISP=SHR,DSN=????.LOAD????
* //VOLUMES  DD  DISP=SHR,DSN=ACCUMULATED.TAPE.VOLUMES
* //         DD  DISP=SHR,DSN=NEWER.LOCAL.TAPE.VOLUMES
* //         DD  DISP=SHR,DSN=SOME.REMOTE.TAPE.VOLUMES
* //* RECFM=FB forced and all normally LRECL=171
* //SYSUDUMP DD  SYSOUT=*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
TAPESYNC CSECT ,
TAPESYNC AMODE 24                 Addressing mode of 24 for GET MACRO
TAPESYNC RMODE 24                 Residency mode of 24 because of AMODE
         USING *,R15              Set temporary base register
         SAVE  (14,12),,'TAPESYNC.&SYSDATE..&SYSTIME' Save Registers
         DROP  R15                Drop the temporary base register
         LR    R12,R15            Load the program's base register
         USING TAPESYNC,R12       Give the assembler the new base
         LH    R0,WORKLEN         Load work area size for GETMAIN
         GETMAIN R,LV=(0)         Get storage for work space
         LR    R2,R1              Copy address of save area for MVCL
         LH    R3,WORKLEN         Load length to clear with MVCL
         SLR   R4,R4              Clear the MVCL from address
         SLR   R5,R5              Clear the MVCL pad and from length
         MVCL  R2,R4              Clear save area
         ST    R1,8(,R13)         Connect old and new save areas
         ST    R13,4(,R1)         Connect old and new save areas
         LR    R13,R1             Connect old and new save areas
         USING SAVEAREA,R13
* Get date
         TIME  DEC                Get today's date in 0CYYDDDF format
         ST    R1,DWORK           Store date to convert to display
         AP    DWORK(4),P1900000  Change century number to a year no.
         MVC   TODAY,MASK         Move YYYY.DDD EDit mask for date
         ED    TODAY,DWORK        Convert P'YYYYDDDF' to C'YYYY.DDD'
* Get TAPEBITS
         L     R11,16             Load the address of the CVT
         USING CVT,R11            Give assembler the CVT mapping
         L     R11,CVTUSER        Load the address of the CVT user area
         USING XCVTUSER,R11       Give assembler the CVTUSER mapping
         CLC   XCVTUEYE,CVTUSER1  See if the CVTUSER area is valid
         BNE   NOCVTUSR           Area not valid, can't access TAPEBITS
         L     R11,XCVTTAPE       Load TAPEBITS address
         USING TAPEBITS,R11       Give assembler the TAPEBITS mapping
         CLC   TAPEEYE,TAPEBIT1   See if the TAPEBITS area is valid
         BNE   NOBITS             Area not valid, can't access TAPEBITS
* OPEN
         MVC   VOLUMES(DUMDCBLN),DUMDCB  Move in DCB to work area
         MVI   OPENLIST,X'80'     Mark only one DCB to open
         OPEN  (VOLUMES,INPUT),MF=(E,OPENLIST)  Open VOLUMES file
GET      DS    0H
         GET   VOLUMES            Get volume record
         LR    R10,R1             Save address of input volume record
         USING RECIN,R10          Tell assembler where
         CLC   TAPECHAR,VOLSER    vol ser start with TAPEBITS char.?
         BNE   GET                Not one of our tapes, go ignore
         TRT   VOLSER+1(5),TABLE  See if rest of vol ser numeric
         BNZ   GET                Not five numerics, go ignore
         CLC   PERM1,EX@YEAR+1    See if tape never expires 1999.365
         BE    PROTECTD           Tape never expires, go turn bit on
         CLC   PERM2,EX@YEAR+1    See if tape never expires 1999.366
         BE    PROTECTD           Tape never expires, go turn bit on
         CLC   TODAY,EX@YEAR+1    See if tape is expired or not
         BNL   GET                Tape expired, bypass turning bit on
*
* Update new tape bits
*
PROTECTD DS    0H
         PACK  DWORK,VOLSER+1(5)  Pack the numeric part of the vol ser
         CVB   R8,DWORK           Load the tape number into a register
         SLR   R9,R9              Clear a work register
         SRDL  R8,3               Divide tape number by 8
         SRL   R9,29              Find remainder
* R8 contains the displacement of the byte to update within NEWBITS
* R9 contains the displacement within BITS for the or mask
         LA    R8,NEWBITS(R8)     Load the address of byte to update
         LA    R9,BITS(R9)        Load the address of the bit mask
         OC    0(1,R8),0(R9)      Mark the tape number as in use
         B     GET                Go back to get another volume record
*
* The end
EODAD    DS    0H
         MVI   OPENLIST,X'80'     Mark only one DCB to CLOSE
         CLOSE VOLUMES,MF=(E,OPENLIST)  Close VOLUMES file
         LA    R2,TAPES           Load address of the old tape bits
         LH    R3,H12500          Load the length of the old tape bits
         LA    R4,NEWBITS         Load address of the new tape bits
         LR    R5,R3              Load the length of the new tape bits
         MODESET KEY=ZERO         Switch to key zero
         MVCL  R2,R4              Overlay old tape bits with new
         MVI   TAPEUPD,1          TAPESAVE will write TAPEBITS to disk
         MODESET KEY=NZERO        Switch to key eight
         LH    R0,WORKLEN         Load work area size for FREEMAIN
         LR    R1,R13             Save work area location for FREEMAIN
         L     R13,4(,R13)        Restore caller's save area address
         FREEMAIN R,LV=(0),A=(1)  Free work area's storage
         RETURN (14,12),RC=(15)   Return to caller with FREEMAIN retcde
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* Error routines
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
NOCVTUSR DS    0H
         WTO  'TAPESYNC - No CVTUSER area, program abending',ROUTCDE=11
         ABEND 123                Abend without a dump
*
NOBITS   DS    0H
         WTO 'TAPESYNC - No TAPEBITS area, program abending',ROUTCDE=11
         ABEND 234                Abend without a dump
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* Constants
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0D                 Align Constants area
*
WORKLEN  DC    AL2(WORKSIZE)      Length of work area
*
H12500   DC    H'12500'           Length of bits for 100,000 tapes
*
P1900000 DC    PL4'1900000'       Constant to fix date's century
MASK     DC    XL8'202020204B202020'  EDit mask for YYYY.DDD date
PERM1    DC    CL8'1999.365'      Compare for never expire tape
PERM2    DC    CL8'1999.366'      Compare for never expire tape
*
* The X'1' is the DSECT version number
CVTUSER1 DC    CL7'CVTUSER',XL1'1'  Constant to check CVTUSER
TAPEBIT1 DC    CL7'TAPEBIT',XL1'1'  Constant to check TAPEBIT
*
TABLE    DC    256X'1'            Table to check for numerics in volser
         ORG   TABLE+240          Back up location counter to numbers
         DC    10X'0'             Overlay numbers for TRT to not find
         ORG   ,                  Return location counter to normal
*
BITS     DC    XL8'8040201008040201'  Bit to set on
*
DUMDCB   DCB   DDNAME=VOLUMES,DSORG=PS,MACRF=GL,RECFM=FB,EODAD=EODAD
DUMDCBLN EQU   *-DUMDCB
*
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      DSECTs Follow
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
SAVEAREA DSECT ,
         DS    9D                 Register save area
*
DWORK    DS    D                  CVD work area
*
TODAY    DS    D                  Today in YYYY.DDD format
*
OPENLIST DS    D                  OPEN/CLOSE list
*
VOLUMES  DS    0D,XL(DUMDCBLN)    Input Volumes Data Control Block
*
NEWBITS  DS    XL12500            New TAPEBITS being created
*
WORKSIZE EQU   *-SAVEAREA
*
         SPACE 1
RECIN    DSECT ,
         COPY  TAPEDSCT           VOLUMES and DATASETS record layout
* RECORD   DS   0CL171
* VOLSER   DS   CL6    '??????'    Volume serial number
* CL@DATE  DS   CL9   ' YYYY.DDD'  Date that tape was closed, YYYY.DDD
* CL@HH    DS   CL3    ' HH'       Hour of day that tape was closed
* CL@MM    DS   CL3    ':MM'       Minute of hour that tape was closed
* CL@SS    DS   CL3    ':SS'       Second of minute that tape was close d
* CL@TH    DS   CL3    '.TH'       Hundredth of second tape was closed
* FILESEQN DS   CL6    ' nnnnn'    File sequence number
* CODE     DS   CL2    ' O'  ' I'  Output or Input entry indicator code
* EX@YEAR  DS   CL5    ' yyyy'     Tape expire year
* EX@PER   DS   CL1    '.'         Period, separates EX@YEAR from EX@DA Y
* EX@DAY   DS   CL3    'ddd'       Tape expire day
* SCRDATE  DS   CL9    ' yyyy.ddd' Date the tape is put on Scratch list
*          DS   CL1    ' '         Space
* DSNAME   DS   CL44               Data set name
* VOLSEQN  DS   CL4    ' nnn'      Volume sequence number
* BLKCOUNT DS   CL10   ' zzzzzzzzn'  Block count on the tape
* RECFM    DS   CL5    ' FBSA'     Record format of data set
* LRECL    DS   CL7    ' zzzznK'   Logical record length of data set
* BLKSIZE  DS   CL6    ' zzzzn'    Block size of data set
*          DS   CL1    ' '         Space
* SYSTEM   DS   CL4                SMF ID for the system name
*          DS   CL1    ' '         Space
* JOBNAME  DS   CL8                JOB name
*          DS   CL1    ' '         Space
* STEPNAME DS   CL8                Step name
*          DS   CL1    ' '         Space
* PGMNAME  DS   CL8                Program name
*          DS   CL1    ' '         Space
* DDNAME   DS   CL8                DDNAME
*
         COPY CVTUSER             Copy the CVTUSER area DSECT
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'01'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
* *                               Minute, and Second, used by IOS000I
*          DS    XL2              Space available for expansion
* XCVTPSWD DS    F                ACF2 LGNIXIT anchor, used by SAVEPSWD
* XCVTJOUR DS    F                DFHJC4508 Journal PRIM or SECO
* XCVTTAPE DS    XL4              TAPE, TAPESAVE, TAPESYNC, & IGXMSGEX
* * TAPESKIP DS    CL6            TAPESKIP was old name for XCVTSKIP
* XCVTSKIP DS    CL6              IEC512I tape vol ser to ignore
*          DS    XL22             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
TAPEBITS   DSECT ,
           COPY  TAPEBITS         Copy the TAPEBITS DSECT
* TAPEEYE  DS    D                DSECT eye-catcher CL7'TAPEBIT',XL1'1'
* TAPEOLD  DS    A                Addr of old TAPEBITS record to delete
*          DS    CL6              TAPESKIP moved to CVTUSER as XCVTSKIP
* TAPEDISP DS    XL2              Last TAPES byte that had a free bit
* TAPEHIGH DS    XL2              Displacement to return to zero
* TAPEUPD  DS    XL1              Tape bits updated, need writing
* TAPECHAR DS    CL1              First byte of tapes described next
* TAPES    DS    XL12500          Bits for 100,000 tapes ?00000-?99999
* * TAPEBIT0 EQU   X'80'            First tape within a byte
* * * TAPEBIT1 EQU  X'40'           Second tape within a byte, dup.name
* * TAPEBIT2 EQU   X'20'            Third tape within a byte
* * TAPEBIT3 EQU   X'10'            Fourth tape within a byte
* * TAPEBIT4 EQU   X'08'            Fifth tape within a byte
* * TAPEBIT5 EQU   X'04'            Sixth tape within a byte
* * TAPEBIT6 EQU   X'02'            Seventh tape within a byte
* * TAPEBIT7 EQU   X'01'            Eighth tape within a byte
* TAPELEN  EQU   *-TAPEEYE        Length of TAPEBITS data record
*
         CVT   DSECT=YES,LIST=YES Communication Vector Table
*
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*      DATA CONTROL BLOCKS FOLLOW
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
TAPESYNC CSECT ,
         LTORG ,                  In case someone adds literals
         EJECT ,
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*     REGISTER EQUATES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
R0       EQU   0                  Register equate for register 0
R1       EQU   1                  Register equate for register 1
R2       EQU   2                  Register equate for register 2
R3       EQU   3                  Register equate for register 3
R4       EQU   4                  Register equate for register 4
R5       EQU   5                  Register equate for register 5
R6       EQU   6                  Register equate for register 6
R7       EQU   7                  Register equate for register 7
R8       EQU   8                  Register equate for register 8
R9       EQU   9                  Register equate for register 9
R10      EQU   10                 Register equate for register 10
R11      EQU   11                 Register equate for register 11
R12      EQU   12                 Register equate for register 12
R13      EQU   13                 Register equate for register 13
R14      EQU   14                 Register equate for register 14
R15      EQU   15                 Register equate for register 15
         END   ,                  The end of the program
//L.SYSLMOD DD DSN=????.LOAD????,DISP=SHR,SPACE=   ,
//*          UNIT=3390,VOL=SER=------
   SETCODE AC(1)
   NAME TAPESYNC
