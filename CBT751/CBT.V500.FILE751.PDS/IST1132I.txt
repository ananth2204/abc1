//SOMITCWI JOB (????????,????,1439,9999),IST1132I-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//IST1132I EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  UNIT=SYSDA,VOL=SER=??????
//         DD  DISP=SHR,DSN=SYS1.AMODGEN   ,UNIT=SYSDA,VOL=SER=??????
PASS     TITLE 'IST1132I - - - START NJE LINK WHEN CDRM BECOMES ACTIVE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* CHANGE LOG:
*
*   2-7-94 WAM  PROGRAM WRITTEN.
*
*    WHEN MESSAGE:
*   IST1132I ???????.?CDRM?? IS ACTIVE, TYPE = CDRM
*      DISPLAYS, WTO PROCESSING CALLS THIS PROGRAM AS AN MPF EXIT.
*      IF THE IST1132I MESSAGE HAS 'TYPE = CDRM', THEN A START
*      COMMAND IS ISSUED FOR MSG WITH THE M= KEYWORD SET TO
*      THE CDRM NAME.
*      OTHERWISE NO ACTION IS TAKEN.
*      SYS1.PARMLIB(MPFLST00) DEFINES THE EXIT TO THE OPERATING SYSTEM.
*      SYS1.PARMLIB(CONSOL00) DEFINES MPFLST00 TO THE SYSTEM.
*
*    TO DISABLE ALL MPF EXITS ENTER OPERATOR COMMAND 'SET MPF=NO'.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,GEN,NODATA
IST1132I CSECT ,
IST1132I AMODE 31
IST1132I RMODE ANY
         STM   R14,R12,12(R13)    SAVE CALLER'S REGISTERS
         LR    R12,R15            LOAD THE PROGRAM'S BASE REGISTER
         USING IST1132I,R12       GIVE THE ASSEMBLER THE NEW BASE
         L     R11,0(,R1)         LOAD THE ADDRESS OF THE COMM.TASK
*                                 USER EXIT ROUTINE PARAMETER LIST
*                                 GET SOME STORAGE BELOW-THE-LINE
         L     R10,CTXTTXPJ-CTXT(,R11)  LOAD ADDRESS OF MESSAGE TEXT
         LR    R11,R10            LOAD ADDRESS OF MESSAGE TEXT AGAIN
*
FINDCOMA DS    0H
* IST1132I ???????.?CDRM?? IS ACTIVE, TYPE = CDRM
         CLI   0(R11),C','        SEE IF A COMMA FOUND
         BE    GOTCOMMA           COMMA FOUND, GO TO PROCESS
         LA    R11,1(,R11)        BUMP TO CHECK NEXT CHAR. FOR A COMMA
         B     FINDCOMA           GO TO CHECK NEXT CHAR. FOR A COMMA
GOTCOMMA DS    0H
         CLC   2(11,R11),TYPECDRM  SEE IF 'TYPE = CDRM' IN MESSAGE
         BNE   EXITEXIT           'CDRM' NOT FOUND, GO EXIT THE EXIT
         SH    R11,H9             BACK 9 BYTES TO CHECK FOR 'IS ACTIVE'
         CLC   0(9,R11),ISACTIVE  SEE IF MESSAGE SAYS 'IS ACTIVE'
         BNE   EXITEXIT           'ACT' NOT FOUND, GO EXIT THE EXIT
FPERIOD  DS    0H
         CLI   0(R10),C','        SEE IF A COMMA FOUND
         BE    EXITEXIT           COMMA FOUND, GONE TOO FAR, GO EXIT
         CLI   0(R10),C'.'        SEE IF A PERIOD FOUND
         BE    PERIOD             PERIOD FOUND, GO ISSUE THE 'S MSG,-'
         LA    R10,1(,R10)        BUMP TO CHECK NEXT CHAR. FOR A COMMA
         B     FPERIOD            GO TO CHECK NEXT CHAR. FOR A COMMA
PERIOD   DS    0H
         GETMAIN R,LV=CMDLEN,SP=230,LOC=(BELOW,ANY)
         LR    R2,R1              SAVE ADDRESS OF THE STORAGE ACQUIRED
         MVC   0(CMDLEN,R2),TEMPLATE  COPY THE COMMAND FOR SVC 34
         SLR   R11,R10            FIND THE LENGTH OF THE CDRM NAME
         SH    R11,H3             FIND THE LENGTH OF THE CDRM NAME
         EX    R11,MVC            MOVE THE CDRM NAME TO START COMMAND
*         COMMANDS BUILT WILL BE S MSG,M=CDRMNAME
         SLR   R0,R0              CLEAR REGISTER ZERO FOR SVC 34
         SVC   34                 ISSUE OPERATOR COMMAND
*                                 FREE THE BELOW-THE-LINE STORAGE
         FREEMAIN R,LV=CMDLEN,A=(2),SP=230
EXITEXIT DS    0H
         DROP  R12                DROP ADDRESSABILITY TO THIS PROGRAM
         LM    R14,R12,12(R13)    RESTORE CALLER'S REGISTERS
         SLR   R15,R15            SET RETURN CODE TO ZERO
         BR    R14                RETURN TO CALLER
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*       CONSTANTS, EQUATES, AND DSECTS                                *
*                                                                     *
*      ( NOTE: RE-ENTERENT CODE DOES NOT ALLOW WORK AREAS HERE )      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
MVC      MVC   12(0,R1),1(R10)    MOVE THE CDRM NAME TO START COMMAND
H3       DC    H'3'               CONSTANT FOR SUBTRACTION
H9       DC    H'9'               CONSTANT FOR SUBTRACTION
TEMPLATE DC    AL2(CMDLEN),AL2(0),CL17'S MSG,M=X        '
CMDLEN   EQU   *-TEMPLATE         LENGTH OF THE COMMAND LIST
TYPECDRM DC    CL11'TYPE = CDRM'  CONSTANT FOR COMPARE
ISACTIVE DC    CL9'IS ACTIVE'     CONSTANT FOR COMPARE
         SPACE 3
R0       EQU   0                  REGISTER EQUATE FOR REGISTER 0
R1       EQU   1                  REGISTER EQUATE FOR REGISTER 1
R2       EQU   2                  REGISTER EQUATE FOR REGISTER 2
R3       EQU   3                  REGISTER EQUATE FOR REGISTER 3
R4       EQU   4                  REGISTER EQUATE FOR REGISTER 4
R5       EQU   5                  REGISTER EQUATE FOR REGISTER 5
R6       EQU   6                  REGISTER EQUATE FOR REGISTER 6
R7       EQU   7                  REGISTER EQUATE FOR REGISTER 7
R8       EQU   8                  REGISTER EQUATE FOR REGISTER 8
R9       EQU   9                  REGISTER EQUATE FOR REGISTER 9
R10      EQU   10                 REGISTER EQUATE FOR REGISTER 10
R11      EQU   11                 REGISTER EQUATE FOR REGISTER 11
R12      EQU   12                 REGISTER EQUATE FOR REGISTER 12
R13      EQU   13                 REGISTER EQUATE FOR REGISTER 13
R14      EQU   14                 REGISTER EQUATE FOR REGISTER 14
R15      EQU   15                 REGISTER EQUATE FOR REGISTER 15
         EJECT ,
         LTORG ,                  PREVENT LITERALS IN DSECTS
         IEZVX100 ,               COMM.TASK USER EXIT ROUTINE PARM.LIST
         SPACE 3
         END   ,                  THE END OF THE PROGRAM
//L.SYSLMOD DD DISP=SHR,DSN=????.LOAD????(IST1132I),SPACE=  ,
//*            UNIT=SYSDA,VOL=SER=??????
