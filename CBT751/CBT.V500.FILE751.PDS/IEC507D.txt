//SOMITCWI JOB (????????,????,1439,9999),IEC507D-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//IEC507D  EXEC HLASMCL,PARM.C=(TERM,NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=????.SORC????  For the CVTUSER DSECT
PASS     TITLE 'IEC507D - Reply ''M'' to date protect tape/disk WTOR'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: IEC507D ( original source was REPLYU )
*
*   Author: Murphy from CBT325 tape file 25 member AUTOWTOR
*
*   Date-written: 1985-12-17
*
*   Change Log:
*
* 2005-9-2 Moved DSECT XCVTUSER below the line for AMODE 24 programs.
*  W.A.M.
*
* 1996-9-3 Added DSECT XCVTUSER so area pointed to by the CVTUSER
*  W.A.M.  field in the CVT could be shared by MPF routine IOS000I.
*
* 1994-7-6 Added logic to save the volser from the first part of
*  W.A.M.  message IEC507D to know if the second part should reply
*          'M' to the message.
*
*   Remarks:
*
*        Automatically give reply of 'M' to message IEC507D, unless
*   it's for a SCTHnn tape, then the operator must reply.
*   The tricky thing is that message IEC507D is really two messages.
*   The first message gives the tape volume serial number and the
*   second message asks the operator to accept or not accept the
*   data protected tape.  This program saves the tape volume serial
*   number from the first message for use in the second message.
*   CVTUSER area points to storage in the sqa to hold the volser.
*   IEC507D,SUP(NO),USEREXIT(IEC507D) needs to go in MPF member in
*   SYS1.PARMLIB, then use SET MPF=XX whatever member you set it to.
*
*   Sample messages:
*
*   *IEC507D E 0403,C00642,VNVRAD0D,ADRDSSU,RPT1FLES.G2801V00
*   *19 IEC507D REPLY 'U'-USE OR 'M'-UNLOAD
*    REPLY 19,M
*    MPF exit 'REPLYM' replied 'M' to *19
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
IEC507D  CSECT ,
IEC507D  AMODE 31
IEC507D  RMODE ANY
         SAVE  (14,12),,IEC507D.&SYSDATE..&SYSTIME  Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING IEC507D,R12        Give assembler program's base reg.
         L     R11,0(,R1)         Load the address of the CTXT
         USING CTXT,R11           Addressing CTXT
         L     R10,CTXTTXPJ       Load address of major line text
         USING CTXTATTR,R10       Addressing message attributes & text
         CLC   0(2,R11),CT        See if a real CTXT is found
         BNE   RETURN             If not a CTXT, get out quick
         L     R9,16              Load the address of the CVT
         ICM   R8,B'1111',CVTUSER-CVT(R9)  Address CVTUSER points to
         BZ    NOCVTUSR           If CVTUSER zeroes, go get one
GOTUSER  DS    0H
         USING XCVTUSER,R8        Tell assembler about dsect
         CLC   XCVTUEYE,CCVTUSER  See if the CVTUSER area is mine
         BNE   BADUSER            If someone else has CVTUSER, go tell
         CLI   CTXTRPID,C'0'      See if a reply id number is present
         BNL   HAVEID             If reply id number, go to reply
*                                 If no number, extract volser
         LA    R9,CTXTTMSG+12     Start hunt for comma
* Label CTXTTMSG has 'IEC507D E cuu,volser,jobname,stepname,dsname'
LOOP     DS    0H
         CLI   0(R9),C','         See if comma found
         LA    R9,1(,R9)          Point to next byte of message
         BNE   LOOP               If no comma yet, go try next byte
         MVC   XCVTUVOL,0(R9)     Save the volser in CVTUSER area
         B     RETURN             Go to exit, message first line okay
HAVEID   DS    0H
         CLC   XCVTUVOL(4),SCTH   See if last volser is a SCTHnn tape
         BE    RETURN             SCTHnn tape, let operator reply
         DROP  R8                 Drop pointer to area for CVTUSER
         GETMAIN RU,LV=WORKLEN,LOC=BELOW,SP=229  Get MYDSECT storage
         LR    R9,R1              Address of work area for SVC 34 & WTO
         USING MYDSECT,R9         Addressability to my DSECT
         MVC   CMD(15),REPLYCMD   Move model command to SVC 34 buffer
         MVC   CMDNUM,CTXTRPID    Insert reply id number
         SLR   R0,R0              Set SVC 34 full authorization
         MGCR  CMD                Issue SVC 34 with cmd address in R1
         MVC   WTOEXEC,WTOLIST    Prime Write-To-Operator message buff.
         MVC   WTOEXEC+37(2),CTXTRPID  Put replyid in WTO message
         WTO   MF=(E,WTOEXEC)     Send message to the operator
         FREEMAIN RU,LV=WORKLEN,A=(R9),SP=229  Release MYDSECT area
         DROP  R9,R10,R11
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
NOCVTUSR DS    0H
   GETMAIN RU,LV=XCVTUSIZ,LOC=BELOW,SP=245 Get 48 byte CVTUSER SQA area
*                                 CSA would make more sense than SQA,
*                                 but someday I may need fixed storage
* Warning:  The area pointed to by the CVTUSER field is used both by
*           MPF programs IEC507D and IOS000I.
         LR    R8,R1              Save address of storage gotten
         USING XCVTUSER,R8        Tell assembler about dsect
         XC    XCVTUSER(XCVTUSIZ),XCVTUSER  Clear CVTUSER pointed area
         MVC   XCVTUEYE,CCVTUSER  Move 'CVTUSERn' to CVTUSER area
         SLR   R7,R7              Clear a register for the 'CS' inst.
* CS - If R7 and CVTUSER are equal, then R8 is stored in CVTUSER
* CS - If R7 and CVTUSER are not equal, then CVTUSER is loaded to R7
         CS    R7,R8,CVTUSER-CVT(R9)  Set CVTUSER address in CVT
         BE    GOTUSER            Got CVTUSER now, go back to main line
* Some other user put CVTUSER in CVT first, free the new one
         FREEMAIN RU,LV=XCVTUSIZ,A=(R8),SP=245  Free extra SQA storage
         LR    R8,R7              Use the first CVTUSER area address
         B     GOTUSER            Got CVTUSER now, go back to main line
         DROP  R8                 Drop pointer to area for CVTUSER
*
BADUSER  DS    0H
         WTO   'MPF exit IEC507D found a bad CVTUSER area',ROUTCDE=11
         B     RETURN             Exit the exit quick
*
CT       DC    CL2'CT'            Constant for compare
SCTH     DC    CL4'SCTH'          Constant for compare
CCVTUSER DC    CL7'CVTUSER',XL1'1' Constant to init and check CVTUSER
REPLYCMD DC    AL2(15),AL2(0),CL11'REPLY XX,M '  Model reply command
WTOLIST  WTO   'MPF exit IEC507D replied ''M'' to *XX',ROUTCDE=11,MF=L
CNCLMSG  EQU   *-WTOLIST
*
         COPY  CVTUSER            User DSECT in ????.SORC????
*
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'1'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
*                                 Minute, and Second, used by IOS000I
*          DS    XL26             Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
MYDSECT  DSECT ,
WTOEXEC  DS    CL(CNCLMSG)
CMD      DS    XL2                Length of the command with header
         DS    XL2                always binary zeroes
         DS    CL6                Will be 'REPLY '
CMDNUM   DS    CL2                Will be the reply id number
         DS    CL3                Will be ',M '
WORKLEN  EQU   *-MYDSECT          Length of my DSECT
*
*  Following mapped by SYS1.MODGEN(IEZVX100) ???????
CTXT     DSECT ,
         DS    CL8
CTXTTXPJ DS    CL4                Pointer to major line text
CTXTTXPN DS    CL4                Pointer to minor line text
         DS    CL8
CTXTRPID DS    CL2                Reply id
CTXTATTR DSECT ,
         DS    CL6
CTXTTMSG DS    CL126
*
         CVT   DSECT=YES    MVS's Communications Vector Table
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    E
R3       EQU   3                      G
R4       EQU   4                        I
R5       EQU   5                          S
R6       EQU   6                            T
R7       EQU   7                              E
R8       EQU   8                                R
R9       EQU   9                  E
R10      EQU   10                   Q
R11      EQU   11                     U
R12      EQU   12                       A
R13      EQU   13                         T
R14      EQU   14                           E
R15      EQU   15                             S
         END   ,
//L.SYSLMOD DD DISP=SHR,DSN=????.LOAD????,SPACE=
 NAME IEC507D
