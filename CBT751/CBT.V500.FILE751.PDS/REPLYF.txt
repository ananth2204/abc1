//SOMITCWI JOB (????????,????,1439,9999),REPLYF-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//REPLYF  EXEC HLASMCL,PARM.C=(NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,UNIT=SYSDA,VOL=SER=??????
//         DD  DSN=SYS1.MODGEN,DISP=SHR,UNIT=SYSDA,VOL=SER=??????
PASS     TITLE 'REPLYF - Reply ''F'' to unload file protected tapes'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   Title: REPLYF ( originally was REPLYU then REPLYM )
*
*   Author: Murphy from CBT325 tape file 25 member AUTOWTOR
*
*   Re-written by: I ain't saying.
*
*   Date re-written: 99-08-26
*
*   Change Log:
*
* xx-xx-xx x
*  x.x.x.  x
*
*   Remarks:
*
*        This MPF exit to automatically give reply of 'F' to message:
*   IEC510D REPLY 'U'-USE OR 'F'-UNLOAD
*
*      File protected tape that MAY be updated ( file may be added ).
*  *IEC510D F 0400,ABC001,JOBNAME,DDNAME,DATA.SET.NAME
* *58 IEC510D REPLY 'U'-USE OR 'F'-UNLOAD
*
*   IEC510D,SUP(NO),USEREXIT(REPLYF)   Reply 'F', File Protected tape
*   goes in the MPFLSTxx member of SYS1.PARMLIB, then use the
*   SET MPF=XX console command.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
REPLYF   CSECT ,
REPLYF   AMODE 31
REPLYF   RMODE ANY
         LCLA  &N                 Declare arithmetic local variable
&N       SETA  0                  Change &N from zero to zero
.REGS    ANOP  ,
         AIF   (&N GT 15).FINREGS Only define 16 registers
R&N      EQU   &N                 A register equate
&N       SETA  &N+1               Add one for mthe next register number
         AGO   .REGS              Go back to generate the next equate
.FINREGS ANOP  ,
         SAVE  (14,12),,REPLYF.&SYSDATE..&SYSTIME  Save caller's regs.
         LR    R12,R15            Load address of entry point
         USING REPLYF,R12         Give assembler program's base reg.
         L     R11,0(,R1)         Load the address of the CTXT
         USING CTXT,R11           Addressing CTXT
         L     R10,CTXTTXPJ       Load address of major line text
         USING CTXTATTR,R10       Addressing message attributes & text
         CLC   0(2,R11),CT        See if a real CTXT is found
         BNE   RETURN             If not a CTXT, get out quick
         CLI   CTXTRPID,C'0'      See if a reply id number is present
         BL    RETURN             No reply id, go exit this exit
         GETMAIN RU,LV=WORKLEN,LOC=BELOW,SP=229  Get MYDSECT storage
         LR    R9,R1              Address of work area for SVC 34 & WTO
         USING MYDSECT,R9         Addressability to my DSECT
         MVC   CMD(15),REPLYCMD   Move model command to SVC 34 buffer
         MVC   CMDNUM,CTXTRPID    Insert reply id number
         SLR   R0,R0              Set SVC 34 full authorization
         MGCR  CMD                Issue SVC 34 with cmd address in R1
         MVC   WTOEXEC,WTOLIST    Prime Write-To-Operator message buff.
         MVC   WTOEXEC+38(2),CTXTRPID  Put replyid in WTO message
         WTO   MF=(E,WTOEXEC)     Send message to the operator
         FREEMAIN RU,LV=WORKLEN,A=(R9),SP=229  Release MYDSECT area
         DROP  R9,R10,R11
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller, return code zero
*
CT       DC    CL2'CT'            Constant for compare
REPLYCMD DC    AL2(15),AL2(0),CL11'REPLY XX,F '  Model reply command
WTOLIST  WTO 'MPF exit ''REPLYF'' replied ''F'' to *XX',ROUTCDE=11,MF=L
CNCLMSG  EQU   *-WTOLIST
*
MYDSECT  DSECT ,
CMD      DS    XL2                Length of the command with header
         DS    XL2                always binary zeroes
         DS    CL6                Will be 'REPLY '
CMDNUM   DS    CL2                Will be the reply id number
         DS    CL3                Will be ',F '
WTOEXEC  DS    CL(CNCLMSG)
WORKLEN  EQU   *-MYDSECT          Length of my DSECT
*
CTXT     DSECT ,
         DS    CL8
CTXTTXPJ DS    CL4                Pointer to major line text
CTXTTXPN DS    CL4                Pointer to minor line text
         DS    CL8
CTXTRPID DS    CL2                Reply id
CTXTATTR DSECT ,
         DS    CL6
CTXTTMSG DS    CL126
*
         END   ,
//L.SYSLMOD DD DSN=????.LOAD????,DISP=SHR,SPACE=,
//             UNIT=SYSDA,VOL=SER=??????
 NAME REPLYF
