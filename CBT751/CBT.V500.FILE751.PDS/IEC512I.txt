//SOMITCWI JOB (????????,????,1439,9999,9999),IEC512I-SOMITCW,
//             CLASS=?,MSGCLASS=?,
//             NOTIFY=SOMITCW,COND=(0,NE)
//IEC512I  EXEC HLASMCL,PARM.C=(TERM,NODECK,OBJECT,RENT),
//             PARM.L='REFR,RENT,REUS,AC=1,LIST,MAP'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=????.SORC????
PASS     TITLE 'IEC512I - MPF exit to cause tape mount loops to stop'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*       This program will stop a tape mount loop when a JOB
*   calls for specific volume and that volume has a problem.
*
*       If the automatic tape mount routine mounted a bad tape,
*   it will do it again and cause a loop of mounts and rejects.
*
*       This exit will store the volser of the tape volume
* being called for that is in a loop in an area used but
* the SVC mounting the tapes.  The SVC checks the area for
* each tape mounted.  If there is a match, the SVC will
* just ignore the request to mount the tape one time and
* clear the vol ser from the area.
*
*   MPF exit name: IEC512I
*
*   Date-Written: 2004-08-09
*   ReWritten:    2005-09-01
*
*   Blame: somitcw@yahoo.com
*
* Some messages related to IEC512I that is described in the code:
*
* *IEC501A M 0400,012345,SL,COMP,SOMITCWI,IEBGENER,NLTAPE
* *IEC501A M 0415,012,SL,COMP,SHORT,IEBGENER,NLTAPE
*
* *IEF233A M 040A,PRIVAT,SL,VSTOR21,ADRDSSU,BKUP.VSTOR21.G0354V00
*        |
* *IEF233D M 041F,A00000,,MOUNT,41F, 241
*          SYS04201.T075420.RA000.MOUNT.R0100203,
*          OR RESPOND TO IEF455D MESSAGE
* *14 IEF455D MOUNT A00000 ON 041F FOR MOUNT 41F OR REPLY 'NO'
*
*  IEC502E R 0405,B00154,SL,VPUBD19,ADRDSSU
*  IEF234E K 0412,B00138,PVT,VSTOR1E,ADRDSSU
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,GEN,DATA
IEC512I  CSECT ,
IEC512I  AMODE 31
IEC512I  RMODE ANY
         SAVE  (14,12),,IEC512I.&SYSDATE..&SYSTIME
*        Saves registers and inserts programname, date, ane time
         LR    R12,R15            Load address of entry point
         USING IEC512I,R12        Give assembler the base register
         L     R11,0(,R1)         Load the CTXT address
         USING CTXT,R11           Addressing CTXT
         CLC   0(2,R11),CT        Insure that we have a CTXT
         BNE   RETURN             I'm lost, get out
         GETMAIN RU,LV=WORKL,LOC=BELOW,SP=229
         LR    R10,R1             Address of save and work area
         USING MYDSECT,R10        Addressing the save and work area
         L     R11,CTXTTXPJ       Load address of message text DSECT
         USING CTXTATTR,R11       Message attributes
         LA    R1,CTXTTMSG        Address of the message to find volser
         DROP  R11                Don't need address of CTXTATTR now
*
* Label CTXTTMSG has:
* 0123456789 123456789 123456789 123456789
* IEC512I LBL ERR 0412,B00135,SL,B00123,SL,SOMITCWI,IEBGENER,NLTAPE
* IEC512I LBL ERR 041D,XX,SL,012,SL,SHORT,IEBGENER,NLTAPE
*  or
* IEC512I LBL ERR 0400,      ,NL,B00123,SL,SOMITCWI,IEBGENER,NLTAPE
* IEC512I LBL ERR 0415,      ,NL,012,SL,SHORT,IEBGENER,NLTAPE
*  or
* IEC512I LBL ERR 0400,      ,NL,PRIVAT,SL,SOMITCWI,IEBGENER,NLTAPE
* IEC512I LBL ERR 0401,      ,NL,PRIVAT,SL,SHORT,IEBGENER,NLTAPE
*    The first is a call for tape B00123, but B00135 was mounted.
*       and a call for 012 and XX was mounted.
*    The second is a call for tape B00123, but an NL tape was mounted.
*       and a call for 012 and an NL tape was mounted
*    The third is a call for an scratch tape.
*    The first and second are permanent errors and would cause the
*    system to loop with automatic tape mounts if the JOB wasn't
*    cancelled.
*    The last message will correct itself with the next tape mount.
*
         MVC   WTOEXEC,WTOLIST    Prime WTO PARM list with template
* Find the called for volume serial number
FINDVOL  DS    0H
         TRT   0(30,R1),TABLE     Find first comma in message
         BZ    LOST               No comma found, go issue msg and exit
         TRT   1(8,R1),TABLE      Find second comma in message
         BZ    LOST               No comma found, go issue msg and exit
         TRT   1(8,R1),TABLE      Find third comma in message
         BZ    LOST               No comma found, go issue msg and exit
         MVC   VOLCALL,1(R1)      Move volume serial called for to WTO
         CLC   VOLCALL,PRIVAT     See if a scratch tape request
         BE    FREEMAIN           Error won't cause loop, go ignore
*
         L     R1,16              Load the address of the CVT
         USING CVT,R1             Give assembler the CVT mapping
         L     R1,CVTUSER         Load the address of the CVT user area
         USING XCVTUSER,R1        Give assembler the CVTUSER mapping
         CLC   XCVTUEYE,CVTUSER1  See if the CVTUSER area is valid
         BNE   NOCVTUSR           Area not valid, can't stop mount loop
         MVC   XCVTSKIP,VOLCALL   Send bad vol ser to skip next mount
         LA    R1,WTOEXEC         Load address of WTO list
         WTO   MF=(E,(1))         Issue tape skipped message
FREEMAIN DS    0H
         FREEMAIN RU,LV=WORKL,A=(R10),SP=229
         DROP  R10                Save area gone, tell assembler
RETURN   DS    0H
         SLR   R15,R15            Set a return code of zero
         RETURN (14,12),RC=(15)   Return to caller
*
NOCVTUSR DS    0H
         WTO   'MPF IEC512I - No CVTUSER, can''t stop loop',ROUTCDE=11
         B     FREEMAIN           Go exit without getting job done
*
LOST     DS    0H
         WTO   'MPF IEC512I - Messages is short on commas',ROUTCDE=11
         B     FREEMAIN           Go exit without getting job done
*
         DROP  R12                Don't need base register anymore
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Constants
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CT       DC    CL2'CT'            Constant for compare
*
PRIVAT   DC    CL6'PRIVAT'        Constant for compare
*
* The X'1' is the DSECT version number
CVTUSER1 DC    CL7'CVTUSER',XL1'1'  Constant to check CVTUSER
TAPEBIT1 DC    CL7'TAPEBIT',XL1'1'  Constant to check TAPEBIT
*
TABLE    DC    256X'0'            Table to find commas
         ORG   TABLE+C','         Back up the location counter
         DC    CL1','             Add comma to the comma search table
         ORG   ,                  Return the location counter to normal
*
*               456789 12345678
WTOLIST  WTO   'MPF IEC512I - xxxxxx mount will be skipped next time', C
               ROUTCDE=11,MF=L
WTOLEN   EQU   *-WTOLIST
*
         LTORG ,                  Put literal pool here
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  DSECTs
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MYDSECT  DSECT ,
WTOEXEC  DS    XL(WTOLEN)         WTO parameter list
VOLCALL  EQU   WTOEXEC+18,6,C'C'  Vol ser called for
WORKL    EQU   *-MYDSECT          Length of the DSECT
*
*        COPY  IEZVX100           Copy DSECT
CTXT     DSECT ,
         DS    CL8
CTXTTXPJ DS    CL4          Pointer to major line text
CTXTTXPN DS    CL4          Pointer to minor line text
         DS    CL8
CTXTRPID DS    CL2          Reply id
CTXTATTR DSECT ,
         DS    CL6
CTXTTMSG DS    CL126
*
         COPY  CVTUSER            Copy CVTUSER DSECT
* XCVTUSER DSECT ,
* XCVTUEYE DS    CL8              7 bytes of 'CVTUSER' and 1 byte X'01'
* XCVTUVOL DS    XL6              VOLSER from message used by IEC507D
*          DS    XL2              Space available for expansion
* XCVTUTIM DS    XL6              CYYDDDHHMMSS Century, Year,Day, Hour,
* *                               Minute, and Second, used by IOS000I
*          DS    XL2              Space available for expansion
* XCVTPSWD DS    F                ACF2 LGNIXIT anchor, used by SAVEPSWD
* XCVTJOUR DS    F                DFHJC4508 Journal PRIM or SECO
* XCVTTAPE DS    XL4              TAPE, TAPESAVE, TAPESYNC, & IGXMSGEX
* XCVTSKIP DS    CL6              IEC512I tape vol ser to ignore
*          DS    XL6              Space available for expansion
* XCVTUSIZ EQU   *-XCVTUSER       Length of area pointed to by CVTUSER
*
*
TAPEBITS DSECT ,
         COPY  TAPEBITS           Copy TAPEBITS DSECT
* TAPEEYE  DS    D                DSECT eye-catcher CL7'TAPEBIT',XL1'1'
* TAPEOLD  DS    A                Addr of old TAPEBITS record to delete
*          DS    CL6              TAPESKIP moved to CVTUSER as XCVTSKIP
* TAPEDISP DS    XL2              Last TAPES byte that had a free bit
* TAPEHIGH DS    XL2              Displacement to return to zero
* TAPEUPD  DS    XL1              Tape bits updated, need writing
* TAPECHAR DS    CL1              First byte of tapes described next
* TAPES    DS    XL12500          Bits for 100,000 tapes ?00000-?99999
* * TAPEBIT0 EQU   X'80'            First tape within a byte
* * TAPEBIT1 EQU   X'40'            Second tape within a byte
* * TAPEBIT2 EQU   X'20'            Third tape within a byte
* * TAPEBIT3 EQU   X'10'            Fourth tape within a byte
* * TAPEBIT4 EQU   X'08'            Fifth tape within a byte
* * TAPEBIT5 EQU   X'04'            Sixth tape within a byte
* * TAPEBIT6 EQU   X'02'            Seventh tape within a byte
* * TAPEBIT7 EQU   X'01'            Eighth tape within a byte
* TAPELEN  EQU   *-TAPEEYE        Length of TAPEBITS data record
*
*
         CVT   DSECT=YES,LIST=YES Communication Vector Table
*
*
R0       EQU   0
R1       EQU   1                  R
R2       EQU   2                    e
R3       EQU   3                      g
R4       EQU   4                        i
R5       EQU   5                          s
R6       EQU   6                            t
R7       EQU   7                              e
R8       EQU   8                                r
R9       EQU   9                  E
R10      EQU   10                   q
R11      EQU   11                     u
R12      EQU   12                       a
R13      EQU   13                         t
R14      EQU   14                           e
R15      EQU   15                             s
         END   ,
//L.SYSLMOD  DD  DISP=SHR,DSN=????.LOAD????,SPACE=
 NAME IEC512I
