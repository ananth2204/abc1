{"INMR01": {"INMLRECL": 80, "INMFNODE": "ITSP", "INMFUID": "DOTCWS", "INMTNODE": "DEV1", "INMTUID": "DOTCWS", "INMFTIME": "20080627170132000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 378060, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "DOTCWS.DDNAME.INPUT01", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 378060, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 378060, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"DOTCWS.DDNAME.INPUT01": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0, "DS1REFD": "000000", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x00\\x00\\x00\\x00'", "DS1LSTAR": "b'\\x00\\x00\\x00'", "DS1TRBAL": "b''"}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 13, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "27-Jun-2008 Craig Schneiderwent\n\nPermission is hereby granted, free of charge, to any person or\norganisation to use this software and its associated files\nsubject to the following conditions:\n\nThe software may be redistributed free of charge to any other\nperson or organisation provided that the above copyright notice,\nthis permission notice and the disclaimer shall be included with\nall copies of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE. IF THIS DISCLAIMER\nCONTRADICTS LOCALLY APPLICABLE LAW THEN USE OF THIS\nSOFTWARE IS PROHIBITED.\n\nThis application was previously available as the Category 4 MA1K\nSupportPac and hosted on IBM's WebSphere MQ SupportPac website.  Changes\nin IBM's licensing necessitated withdrawal of the code as a SupportPac.\n\nThe purpose of this application is to encapsulate triggered message\nprocessing for MQSeries applications triggered in CICS TS.\n\nApplications that are triggered can call this subroutine and receive\ntheir triggering message. If the triggering message's\nMQMD-BACKOUTCOUNT >= the queue's MQIA-BACKOUT-THRESHOLD the \"poison\"\nmessage will be moved to the queue's MQCA-BACKOUT-REQ-Q-NAME. If the\nqueue has no MQCA-BACKOUT-REQ-Q-NAME the poison message will be\ndiscarded.\n\nIn any case, a message will be written to the system log indicating\nwhat action was taken.\n\nPOSSIBLE USES\nThis application generically encapsulates triggered message\nprocessing, backout processing and error handling for triggered queues\nin CICS TS. Adopted as a standard, or used as a base and modified to\ncreate a standard, development time can be reduced and uniform error\nhandling assured.\n\nCMQV      Rexx program, executable in batch via the JCL included in its\n          comments.  Produces a COBOL copybook to be used by J7200502.\n          View your hlq.SCSQCOBC(CMQV) member and Cut/Paste the reason\n          codes to a new member.  Use the new member as input to this\n          Rexx program to get the COBOL copybook.  You do need to do\n          this for each new release of MQSeries.\n\nJ7200501  COBOL program intended to be called when a CICS error\n          occurs.  Translates the CICS RESP code to a readable text\n          string which can be included in DISPLAYs or WTOs.\n          Dynamically callable from within CICS.\n\nJ7200502  COBOL program intended to be called when an MQSeries error\n          occurs.  Translates the MQ Reason Code to a readable text\n          string which can be included in DISPLAYs or WTOs.\n          Dynamically callable from batch or within CICS.\n\nJ7200503  COBOL program to return the name of the currently connected\n          MQSeries queue manager.\n          Dynamically callable within CICS.\n\nJ7200506  COBOL program intended to encapsulate the processing for an\n          MQSeries triggered program.  Includes logic to retrieve the\n          backout queue name and backout threshold and to requeue a\n          message if the backout count exceeds the backout threshold.\n          WTOs are issued to indicate message requeue has occurred, the\n          message identifier - the first four characters of the WTO\n          text - should be changed to identify the responsible\n          organization.\n          Dynamically callable within CICS.\n\nJ7200507  COBOL program intended to encapsulate the MQOPEN, MQINQ and\n          MQCLOSE for callers requiring information about MQ objects.\n          Dynamically callable from batch or within CICS.\n\nJ7200508  COBOL program to convert a hex string to a readable format,\n          if Input =  x'0123456789ABCDEF' then\n             Output = x'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n          Dynamically callable from batch or within CICS.\n\nQUICKREF  MVS/QuickRef source for the WTOs issued by some of the\n          above applications.  I would strongly suggest changing\n          the UDOT prefix on the messages and in the applications to\n          something meaningful to your installation.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CMQV": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x05\\x17\\x1f\\x01\\x05\\x17\\x1f\\x14\"\\x00v\\x00v\\x00\\x00\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-06-20T00:00:00", "modifydate": "2005-06-20T14:22:00", "lines": 118, "newlines": 118, "modlines": 0, "user": "DOTCWS"}, "text": "/* REXX */\n/*\nProgram: CMQV\nAuthor:  Craig Schneiderwent\nDate:    04-Sep-2001\nPurpose:\nRead a member consisting of the MQSeries Reason codes cut from the\nhlq.SCSQCOBC(CMQV) member and output a COBOL copybook to be used\nin a binary search.\n\nExecute deck:\n    //CMQV     EXEC PGM=IKJEFT01\n    //SYSEXEC  DD  DISP=SHR,DSN=where.this.member.is\n    //REASONS  DD  DISP=SHR,DSN=pds.with.copied.reason.codes(CMQV)\n    //OUTPUT01 DD  DISP=SHR,DSN=copybook.pds(MQRSNCD1)\n    //SYSTSIN  DD  *\n    CMQV\n    //SYSTSPRT DD  SYSOUT=*\n    //SYSPRINT DD  SYSOUT=*\n    //SYSUDUMP DD  SYSOUT=*\n    //SYSABOUT DD  SYSOUT=*\n    //SYSOUT   DD  SYSOUT=*\n    //SYSABEND DD  SYSOUT=*\n*/\ngbl.myName = 'CMQV'\n'EXECIO * DISKR REASONS ( STEM inLine. FINIS )'\nIf rc = 0 Then NOP\nElse\n  Do\n    Say gbl.myName 'EXECIO for REASONS RC =' rc\n    Exit 16\n  End\n\nDo i = 1 To inLine.0\n  Parse Var inLine.i . txtVal . . . . binVal .\n  val.i.txt = txtVal\n  val.i.bin = binVal\n  val.i.txtLn = Length( txtVal )\nEnd\n\nval.0 = inLine.0\n\nj = 1\noutLine.j = Copies( ' ', 7 )\noutLine.j = outLine.j || '01  MQ-RSN-CD-VAL.'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 11 )\noutLine.j = outLine.j || '05  MQ-RSN-CD-VAL-TBL.'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nDo i = 1 To val.0\n  j = j + 1\n  outLine.j = Copies( ' ', 15 )\n  outLine.j = outLine.j || '10  PIC S9(009) Binary Value '\n  outLine.j = outLine.j || val.i.bin\n  ln = Length( outLine.j )\n  outLine.j = outLine.j || Copies( ' ', 80 - ln )\n  j = j + 1\n  outLine.j = Copies( ' ', 15 )\n  outLine.j = outLine.j || \"10  PIC X(030) Value '\"\n  outLine.j = outLine.j || val.i.txt\n  outLine.j = outLine.j || \"'.\"\n  ln = Length( outLine.j )\n  outLine.j = outLine.j || Copies( ' ', 80 - ln )\nEnd\n\nj = j + 1\noutLine.j = Copies( ' ', 11 )\noutLine.j = outLine.j || '05  MQ-RSN-CD-TBL Redefines '\noutLine.j = outLine.j || 'MQ-RSN-CD-VAL-TBL'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 15 )\noutLine.j = outLine.j || 'Occurs ' val.0\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 15 )\noutLine.j = outLine.j || 'Ascending Key MQ-RSN-CD-NB'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 15 )\noutLine.j = outLine.j || 'Indexed MQ-RSN-CD-INDX.'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 15 )\noutLine.j = outLine.j || '10  MQ-RSN-CD-NB  PIC S9(009) Binary.'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\nj = j + 1\noutLine.j = Copies( ' ', 15 )\noutLine.j = outLine.j || '10  MQ-RSN-CD-TXT PIC X(030).'\nln = Length( outLine.j )\noutLine.j = outLine.j || Copies( ' ', 80 - ln )\n\noutLine.0 = j\n\n'EXECIO * DISKW OUTPUT01 ( STEM' outLine. 'FINIS )'\nIf rc = 0 Then NOP\nElse\n  Do\n    Say gbl.myName 'EXECIO for OUTPUT01 RC =' rc\n    Exit 16\n  End\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "J7200501": {"ttr": 10, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x03\\x01\\x00\\x00\\x01\\x01'o\\x01\\x08\\x13_\\x08\\x04\\x00\\xf4\\x00\\xb5\\x00\\x02\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@\"", "ispf": {"version": "03.01", "flags": 0, "createdate": "2001-10-03T00:00:00", "modifydate": "2008-05-14T08:04:00", "lines": 244, "newlines": 181, "modlines": 2, "user": "DOTCWS"}, "text": "       PROCESS XOPTS(FLAG(I),COBOL3,NOLINKAGE)\n       Identification Division.\n       Program-ID. J7200501.\n       Author. Craig Schneiderwent.\n      *\n      * Return the mnemonic for a given CICS EIBRESP value.\n      *\n       Data Division.\n       Linkage Section.\n       01  RESP-CD  PIC 9(008) COMP-5.\n       01  RESP-TXT PIC X(025).\n       Procedure Division Using\n           RESP-CD\n           RESP-TXT\n           .\n\n           EVALUATE RESP-CD\n               WHEN DFHRESP( NORMAL )\n                    MOVE 'NORMAL' TO RESP-TXT\n               WHEN DFHRESP( ERROR  )\n                    MOVE 'ERROR' TO RESP-TXT\n               WHEN DFHRESP( RDATT )\n                    MOVE 'RDATT' TO RESP-TXT\n               WHEN DFHRESP( WRBRK )\n                    MOVE 'WRBRK' TO RESP-TXT\n               WHEN DFHRESP( EOF )\n                    MOVE 'EOF' TO RESP-TXT\n               WHEN DFHRESP( EODS )\n                    MOVE 'EODS' TO RESP-TXT\n               WHEN DFHRESP( EOC )\n                    MOVE 'EOC' TO RESP-TXT\n               WHEN DFHRESP( INBFMH )\n                    MOVE 'INBFMH' TO RESP-TXT\n               WHEN DFHRESP( ENDINPT )\n                    MOVE 'ENDINPT' TO RESP-TXT\n               WHEN DFHRESP( NONVAL )\n                    MOVE 'NONVAL' TO RESP-TXT\n               WHEN DFHRESP( NOSTART )\n                    MOVE 'NOSTART' TO RESP-TXT\n               WHEN DFHRESP( TERMIDERR )\n                    MOVE 'TERMIDERR' TO RESP-TXT\n               WHEN DFHRESP( FILENOTFOUND )\n                    MOVE 'FILENOTFOUND' TO RESP-TXT\n               WHEN DFHRESP( NOTFND )\n                    MOVE 'NOTFND' TO RESP-TXT\n               WHEN DFHRESP( DUPREC )\n                    MOVE 'DUPREC' TO RESP-TXT\n               WHEN DFHRESP( DUPKEY )\n                    MOVE 'DUPKEY' TO RESP-TXT\n               WHEN DFHRESP( INVREQ )\n                    MOVE 'INVREQ' TO RESP-TXT\n               WHEN DFHRESP( IOERR )\n                    MOVE 'IOERR' TO RESP-TXT\n               WHEN DFHRESP( NOSPACE )\n                    MOVE 'NOSPACE' TO RESP-TXT\n               WHEN DFHRESP( NOTOPEN )\n                    MOVE 'NOTOPEN' TO RESP-TXT\n               WHEN DFHRESP( ENDFILE )\n                    MOVE 'ENDFILE' TO RESP-TXT\n               WHEN DFHRESP( ILLOGIC )\n                    MOVE 'ILLOGIC' TO RESP-TXT\n               WHEN DFHRESP( LENGERR )\n                    MOVE 'LENGERR' TO RESP-TXT\n               WHEN DFHRESP( QZERO )\n                    MOVE 'QZERO' TO RESP-TXT\n               WHEN DFHRESP( SIGNAL )\n                    MOVE 'SIGNAL' TO RESP-TXT\n               WHEN DFHRESP( QBUSY )\n                    MOVE 'QBUSY' TO RESP-TXT\n               WHEN DFHRESP( ITEMERR )\n                    MOVE 'ITEMERR' TO RESP-TXT\n               WHEN DFHRESP( PGMIDERR )\n                    MOVE 'PGMIDERR' TO RESP-TXT\n               WHEN DFHRESP( TRANSIDERR )\n                    MOVE 'TRANSIDERR' TO RESP-TXT\n               WHEN DFHRESP( ENDDATA )\n                    MOVE 'ENDDATA' TO RESP-TXT\n               WHEN DFHRESP( EXPIRED )\n                    MOVE 'EXPIRED' TO RESP-TXT\n               WHEN DFHRESP( RETPAGE )\n                    MOVE 'RETPAGE' TO RESP-TXT\n               WHEN DFHRESP( RTEFAIL )\n                    MOVE 'RTEFAIL' TO RESP-TXT\n               WHEN DFHRESP( RTESOME )\n                    MOVE 'RTESOME' TO RESP-TXT\n               WHEN DFHRESP( TSIOERR )\n                    MOVE 'TSIOERR' TO RESP-TXT\n               WHEN DFHRESP( MAPFAIL )\n                    MOVE 'MAPFAIL' TO RESP-TXT\n               WHEN DFHRESP( INVERRTERM )\n                    MOVE 'INVERRTERM' TO RESP-TXT\n               WHEN DFHRESP( INVMPSZ )\n                    MOVE 'INVMPSZ' TO RESP-TXT\n               WHEN DFHRESP( IGREQID )\n                    MOVE 'IGREQID' TO RESP-TXT\n               WHEN DFHRESP( OVERFLOW )\n                    MOVE 'OVERFLOW' TO RESP-TXT\n               WHEN DFHRESP( INVLDC )\n                    MOVE 'INVLDC' TO RESP-TXT\n               WHEN DFHRESP( NOSTG )\n                    MOVE 'NOSTG' TO RESP-TXT\n               WHEN DFHRESP( JIDERR )\n                    MOVE 'JIDERR' TO RESP-TXT\n               WHEN DFHRESP( QIDERR )\n                    MOVE 'QIDERR' TO RESP-TXT\n               WHEN DFHRESP( NOJBUFSP )\n                    MOVE 'NOJBUFSP' TO RESP-TXT\n               WHEN DFHRESP( DSSTAT )\n                    MOVE 'DSSTAT' TO RESP-TXT\n               WHEN DFHRESP( SELNERR )\n                    MOVE 'SELNERR' TO RESP-TXT\n               WHEN DFHRESP( FUNCERR )\n                    MOVE 'FUNCERR' TO RESP-TXT\n               WHEN DFHRESP( UNEXPIN )\n                    MOVE 'UNEXPIN' TO RESP-TXT\n               WHEN DFHRESP( NOPASSBKRD )\n                    MOVE 'NOPASSBKRD' TO RESP-TXT\n               WHEN DFHRESP( NOPASSBKWR )\n                    MOVE 'NOPASSBKWR' TO RESP-TXT\n               WHEN DFHRESP( SYSIDERR )\n                    MOVE 'SYSIDERR' TO RESP-TXT\n               WHEN DFHRESP( ISCINVREQ )\n                    MOVE 'ISCINVREQ' TO RESP-TXT\n               WHEN DFHRESP( ENQBUSY )\n                    MOVE 'ENQBUSY' TO RESP-TXT\n               WHEN DFHRESP( ENVDEFERR )\n                    MOVE 'ENVDEFERR' TO RESP-TXT\n               WHEN DFHRESP( IGREQCD )\n                    MOVE 'IGREQCD' TO RESP-TXT\n               WHEN DFHRESP( SESSIONERR )\n                    MOVE 'SESSIONERR' TO RESP-TXT\n               WHEN DFHRESP( SYSBUSY )\n                    MOVE 'SYSBUSY' TO RESP-TXT\n               WHEN DFHRESP( SESSBUSY )\n                    MOVE 'SESSBUSY' TO RESP-TXT\n               WHEN DFHRESP( NOTALLOC )\n                    MOVE 'NOTALLOC' TO RESP-TXT\n               WHEN DFHRESP( CBIDERR )\n                    MOVE 'CBIDERR' TO RESP-TXT\n               WHEN DFHRESP( INVEXITREQ )\n                    MOVE 'INVEXITREQ' TO RESP-TXT\n               WHEN DFHRESP( INVPARTNSET )\n                    MOVE 'INVPARTNSET' TO RESP-TXT\n               WHEN DFHRESP( INVPARTN )\n                    MOVE 'INVPARTN' TO RESP-TXT\n               WHEN DFHRESP( PARTNFAIL )\n                    MOVE 'PARTNFAIL' TO RESP-TXT\n               WHEN DFHRESP( USERIDERR )\n                    MOVE 'USERIDERR' TO RESP-TXT\n               WHEN DFHRESP( NOTAUTH )\n                    MOVE 'NOTAUTH' TO RESP-TXT\n               WHEN DFHRESP( SUPPRESSED )\n                    MOVE 'SUPPRESSED' TO RESP-TXT\n               WHEN DFHRESP( NOSPOOL )\n                    MOVE 'NOSPOOL' TO RESP-TXT\n               WHEN DFHRESP( TERMERR )\n                    MOVE 'TERMERR' TO RESP-TXT\n               WHEN DFHRESP( ROLLEDBACK )\n                    MOVE 'ROLLEDBACK' TO RESP-TXT\n               WHEN DFHRESP( END )\n                    MOVE 'END' TO RESP-TXT\n               WHEN DFHRESP( DISABLED )\n                    MOVE 'DISABLED' TO RESP-TXT\n               WHEN DFHRESP( ALLOCERR )\n                    MOVE 'ALLOCERR' TO RESP-TXT\n               WHEN DFHRESP( STRELERR )\n                    MOVE 'STRELERR' TO RESP-TXT\n               WHEN DFHRESP( OPENERR )\n                    MOVE 'OPENERR' TO RESP-TXT\n               WHEN DFHRESP( SPOLBUSY )\n                    MOVE 'SPOLBUSY' TO RESP-TXT\n               WHEN DFHRESP( SPOLERR )\n                    MOVE 'SPOLERR' TO RESP-TXT\n               WHEN DFHRESP( NODEIDERR )\n                    MOVE 'NODEIDERR' TO RESP-TXT\n               WHEN DFHRESP( TASKIDERR )\n                    MOVE 'TASKIDERR' TO RESP-TXT\n               WHEN DFHRESP( TCIDERR )\n                    MOVE 'TCIDERR' TO RESP-TXT\n               WHEN DFHRESP( DSNNOTFOUND )\n                    MOVE 'DSNNOTFOUND' TO RESP-TXT\n               WHEN DFHRESP( LOADING )\n                    MOVE 'LOADING' TO RESP-TXT\n               WHEN DFHRESP( MODELIDERR )\n                    MOVE 'MODELIDERR' TO RESP-TXT\n               WHEN DFHRESP( OUTDESCRERR )\n                    MOVE 'OUTDESCRERR' TO RESP-TXT\n               WHEN DFHRESP( PARTNERIDERR )\n                    MOVE 'PARTNERIDERR' TO RESP-TXT\n               WHEN DFHRESP( PROFILEIDERR )\n                    MOVE 'PROFILEIDERR' TO RESP-TXT\n               WHEN DFHRESP( NETNAMEIDERR )\n                    MOVE 'NETNAMEIDERR' TO RESP-TXT\n               WHEN DFHRESP( LOCKED )\n                    MOVE 'LOCKED' TO RESP-TXT\n               WHEN DFHRESP( RECORDBUSY )\n                    MOVE 'RECORDBUSY' TO RESP-TXT\n               WHEN DFHRESP( UOWNOTFOUND )\n                    MOVE 'UOWNOTFOUND' TO RESP-TXT\n               WHEN DFHRESP( UOWLNOTFOUND )\n                    MOVE 'UOWLNOTFOUND' TO RESP-TXT\n               WHEN DFHRESP( LINKABEND )\n                    MOVE 'LINKABEND' TO RESP-TXT\n               WHEN DFHRESP( CHANGED )\n                    MOVE 'CHANGED' TO RESP-TXT\n               WHEN DFHRESP( PROCESSBUSY )\n                    MOVE 'PROCESSBUSY' TO RESP-TXT\n               WHEN DFHRESP( ACTIVITYBUSY )\n                    MOVE 'ACTIVITYBUSY' TO RESP-TXT\n               WHEN DFHRESP( PROCESSERR )\n                    MOVE 'PROCESSERR' TO RESP-TXT\n               WHEN DFHRESP( ACTIVITYERR )\n                    MOVE 'ACTIVITYERR' TO RESP-TXT\n               WHEN DFHRESP( CONTAINERERR )\n                    MOVE 'CONTAINERERR' TO RESP-TXT\n               WHEN DFHRESP( EVENTERR )\n                    MOVE 'EVENTERR' TO RESP-TXT\n               WHEN DFHRESP( TOKENERR )\n                    MOVE 'TOKENERR' TO RESP-TXT\n               WHEN DFHRESP( NOTFINISHED )\n                    MOVE 'NOTFINISHED' TO RESP-TXT\n               WHEN DFHRESP( POOLERR )\n                    MOVE 'POOLERR' TO RESP-TXT\n               WHEN DFHRESP( TIMERERR )\n                    MOVE 'TIMERERR' TO RESP-TXT\n               WHEN DFHRESP( SYMBOLERR )\n                    MOVE 'SYMBOLERR' TO RESP-TXT\n               WHEN DFHRESP( TEMPLATERR )\n                    MOVE 'TEMPLATERR' TO RESP-TXT\n               WHEN DFHRESP( RESUNAVAIL )\n                    MOVE 'RESUNAVAIL' TO RESP-TXT\n               WHEN DFHRESP( CHANNELERR )\n                    MOVE 'CHANNELERR' TO RESP-TXT\n               WHEN DFHRESP( CCSIDERR )\n                    MOVE 'CCSIDERR' TO RESP-TXT\n               WHEN DFHRESP( TIMEDOUT )\n                    MOVE 'TIMEDOUT' TO RESP-TXT\n               WHEN OTHER\n                    MOVE 'UNKNOWN' TO RESP-TXT\n           END-EVALUATE\n\n           GOBACK\n           .\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "J7200502": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x03\\x01\\x00\\x00\\x01\\x01$\\x7f\\x01\\x08\\x05?\\t\\x05\\x00\\x1f\\x019\\x00\\x03\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "03.01", "flags": 0, "createdate": "2001-09-04T00:00:00", "modifydate": "2008-02-22T09:05:00", "lines": 31, "newlines": 313, "modlines": 3, "user": "DOTCWS"}, "text": "       Identification Division.\n       Program-ID. J7200502.\n       Author. Craig Schneiderwent.\n      *\n      * Return text describing the MQSeries reason code specified\n      * in INPT-MQ-RSN-CD.  If the reason code is not found return\n      * spaces.\n      *\n      * 22-Feb-2008 DOTCWS\n      * Recompiled to pick up new MQRSNCD1 generated by CMQV Rexx\n      * program from MQ v6 reason codes.\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       COPY MQRSNCD1.\n       Linkage Section.\n       01  INPT-MQ-RSN-CD   PIC S9(009) Binary.\n       01  OTPT-MQ-RSN-TXT  PIC X(030).\n       Procedure Division Using\n           INPT-MQ-RSN-CD\n           OTPT-MQ-RSN-TXT\n           .\n           SEARCH ALL MQ-RSN-CD-TBL\n             AT END\n               MOVE SPACES TO OTPT-MQ-RSN-TXT\n             WHEN MQ-RSN-CD-NB(MQ-RSN-CD-INDX) EQUAL INPT-MQ-RSN-CD\n               MOVE MQ-RSN-CD-TXT(MQ-RSN-CD-INDX) TO OTPT-MQ-RSN-TXT\n           END-SEARCH\n           GOBACK\n           .\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "J7200503": {"ttr": 6, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x03\\x01\\x00\\x00\\x01\\x04\\x12\\x1f\\x01\\x041o\\x10T\\x00m\\x00\\x9f\\x00\\x00\\xc4\\xd6\\xe3\\xe3\\xf1\\xe3@@@@'", "ispf": {"version": "03.01", "flags": 0, "createdate": "2004-04-30T00:00:00", "modifydate": "2004-11-11T10:54:00", "lines": 109, "newlines": 159, "modlines": 0, "user": "DOTT1T"}, "text": "       Identification Division.\n       Program-ID. J7200503.\n       Author. Craig Schneiderwent.\n      *\n      * Return name of queue manager this process is currently\n      * connected to.\n      *\n      * Syntax:\n      *\n      * CALL J7200503-PGM USING\n      *     QMGR-NM\n      *     CMPN-CD\n      *     RSN-CD\n      * END-CALL\n      *\n      * Return codes:\n      * 0 - success\n      * 1 - MQOPEN failed\n      * 2 - MQINQ failed\n      * 3 - MQCLOSE failed\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME               PIC X(008) VALUE 'J7200503'.\n           05  MQ-INQ-PGM           PIC X(008) VALUE 'J7200507'.\n           05  SELECTED-CMQV-FIELDS.\n               10  MQCC-OK                PIC S9(8) COMP-5 VALUE 0.\n               10  MQCA-Q-MGR-NAME        PIC S9(8) COMP-5 VALUE 2015.\n               10  MQ-Q-MGR-NAME-LENGTH   PIC S9(8) COMP-5 VALUE 48.\n               10  MQOT-Q-MGR             PIC S9(8) COMP-5 VALUE 5.\n               10  MQOO-INQUIRE           PIC S9(8) COMP-5 VALUE 32.\n               10  MQOO-FAIL-IF-QUIESCING PIC S9(8) COMP-5 VALUE 8192.\n               10  MQCO-NONE              PIC S9(8) COMP-5 VALUE 0.\n               10  MQHC-DEF-HCONN         PIC S9(8) COMP-5 VALUE 0.\n           05  MQ-API-PGMS.\n               COPY CMQAPIDC.\n           05  SUCCESSFUL-CALL            PIC S9(008) COMP-5 VALUE +0.\n           05  OPEN-FAILED                PIC S9(008) COMP-5 VALUE +1.\n           05  INQUIRE-FAILED             PIC S9(008) COMP-5 VALUE +2.\n           05  CLOSE-FAILED               PIC S9(008) COMP-5 VALUE +3.\n\n       01  WORK-AREAS.\n           05  HCONN          PIC S9(008) COMP-5.\n           05  OBJECT-DESCRIPTOR.\n               COPY CMQODV.\n           05  J7200507-RC    PIC S9(008) COMP-5 VALUE +0.\n               88  INFO-RETURNED-OK                      VALUE +0.\n               88  MQ-ERROR                    VALUES +10 THRU +19.\n               88  OPEN-FAILED                           VALUE +11.\n               88  INQUIRE-FAILED                        VALUE +12.\n               88  CLOSE-FAILED                          VALUE +13.\n\n       COPY J7200507 REPLACING ==:PRFX:== BY ==J7200507-==.\n\n       Linkage Section.\n      *    Output field - set to queue manager name\n       01  QMGR-NM          PIC X(048).\n      *    Output field - set to MQ completion code of last call\n       01  CMPN-CD          PIC S9(009) BINARY.\n      *    Output field - set to MQ reason code of last call\n       01  RSN-CD           PIC S9(009) BINARY.\n\n       Procedure Division Using\n           QMGR-NM\n           CMPN-CD\n           RSN-CD\n           .\n\n           MOVE SUCCESSFUL-CALL TO RETURN-CODE\n\n           MOVE +0                   TO J7200507-INTATTRCOUNT\n           MOVE +1                   TO J7200507-SELECTORCOUNT\n           MOVE MQ-Q-MGR-NAME-LENGTH TO J7200507-CHARATTRLENGTH\n           MOVE MQCA-Q-MGR-NAME      TO J7200507-SELECTORS( 1 )\n           MOVE MQOT-Q-MGR           TO MQOD-OBJECTTYPE\n           MOVE MQHC-DEF-HCONN       TO HCONN\n\n           CALL MQ-INQ-PGM USING\n               HCONN\n               J7200507-SELECTORCOUNT\n               J7200507-SELECTORS-TABLE\n               J7200507-INTATTRCOUNT\n               J7200507-INTATTRS-TABLE\n               J7200507-CHARATTRLENGTH\n               J7200507-CHARATTRS-TABLE\n               OBJECT-DESCRIPTOR\n               CMPN-CD\n               RSN-CD\n           END-CALL\n\n           IF CMPN-CD = MQCC-OK\n               MOVE J7200507-CHARATTRS-TABLE TO QMGR-NM\n           ELSE\n               MOVE RETURN-CODE TO J7200507-RC\n               EVALUATE TRUE\n                   WHEN OPEN-FAILED     OF J7200507-RC\n                        MOVE OPEN-FAILED OF CONSTANTS TO RETURN-CODE\n                   WHEN INQUIRE-FAILED  OF J7200507-RC\n                        MOVE INQUIRE-FAILED OF CONSTANTS TO RETURN-CODE\n                   WHEN CLOSE-FAILED    OF J7200507-RC\n                        MOVE CLOSE-FAILED OF CONSTANTS TO RETURN-CODE\n               END-EVALUATE\n           END-IF\n\n           GOBACK\n           .\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "J7200505": {"ttr": 4, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x01\\x04\\x12\\x1f\\x01\\x04\\x12O\\t7\\x00c\\x00\\x9f\\x008\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2004-04-30T00:00:00", "modifydate": "2004-05-03T09:37:00", "lines": 99, "newlines": 159, "modlines": 56, "user": "DOTCWS"}, "text": "       Identification Division.\n       Program-ID. J7200505.\n       Author. Craig Schneiderwent.\n      *\n      * Return name of queue manager this process is currently\n      * connected to (CICS) or should connect to (Batch).\n      *\n      * Syntax:\n      *\n      * CALL J7200505-PGM USING\n      *     ENVR-LTR\n      *     QMGR-NM\n      *     CMPN-CD\n      *     RSN-CD\n      * END-CALL\n      *\n      * Return codes:\n      * 0 - success\n      * 1 - MQOPEN failed\n      * 2 - MQINQ failed\n      * 3 - MQCLOSE failed\n      * 8 - LPAR/Environment not found in internal table\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME               PIC X(008) VALUE 'J7200505'.\n           05  SYSINFO-PGM          PIC X(008) VALUE 'J7200504'.\n           05  QMGR-PGM             PIC X(008) VALUE 'J7200503'.\n           05  LPAR-QMGR-XREF-X     PIC X(080)\n                                                 VALUE 'PRD1M01PPRD2M02P\n      -                                                'DEV1M01DDEV2M02D\n      -                                                'DEV1M01SDEV2M02S\n      -                                                'DEV1M01ADEV2M02A\n      -                                             'PRD1M01EPRD2M02E'.\n           05  LPAR-QMGR-XREF\n               REDEFINES\n               LPAR-QMGR-XREF-X\n               OCCURS 10 TIMES\n               INDEXED LPAR-QMGR-XREF-INDX.\n               10  LPAR-NM          PIC X(004).\n               10  QMGR-NM.\n                   15               PIC X(003).\n                   15  QMGR-ENVR    PIC X(001).\n\n\n       COPY SYSINFO2.\n\n       Linkage Section.\n      *    Input field  - environment letter\n       01  IN-ENVR              PIC X(001).\n      *    Output field - set to queue manager name\n       01  OUT-QMGR-NM          PIC X(048).\n      *    Output field - set to MQ completion code of last call\n       01  OUT-CMPN-CD          PIC S9(008) COMP-5.\n      *    Output field - set to MQ reason code of last call\n       01  OUT-RSN-CD           PIC S9(008) COMP-5.\n\n       Procedure Division Using\n           IN-ENVR\n           OUT-QMGR-NM\n           OUT-CMPN-CD\n           OUT-RSN-CD\n           .\n\n           CALL SYSINFO-PGM USING\n               SYSINFO2-PARMS\n           END-CALL\n\n           IF SYSINFO2-PGM-NM(1:3) = 'DFH'\n               PERFORM 8010-THIS-IS-CICS\n           ELSE\n               PERFORM 8020-SEARCH-FOR-QMGR-NM\n           END-IF\n\n           GOBACK\n           .\n\n       8010-THIS-IS-CICS.\n           CALL QMGR-PGM USING\n               OUT-QMGR-NM\n               OUT-CMPN-CD\n               OUT-RSN-CD\n           END-CALL\n           .\n\n       8020-SEARCH-FOR-QMGR-NM.\n           SET LPAR-QMGR-XREF-INDX TO 1\n           SEARCH LPAR-QMGR-XREF VARYING LPAR-QMGR-XREF-INDX\n               AT END MOVE 8 TO RETURN-CODE\n               WHEN LPAR-NM( LPAR-QMGR-XREF-INDX )\n                  = SYSINFO2-SMF-SYSID\n                AND QMGR-ENVR( LPAR-QMGR-XREF-INDX ) = IN-ENVR\n                    MOVE QMGR-NM( LPAR-QMGR-XREF-INDX )\n                      TO OUT-QMGR-NM\n           END-SEARCH\n           .\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "J7200506": {"ttr": 8, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x05\\n\\x00\\x00\\x01\\x04\\x18\\x1f\\x01\\x05\\x15o\\x07\\x13\\x05\\xfa\\x01\\xd1\\x06\\x06\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "05.10", "flags": 0, "createdate": "2004-06-29T00:00:00", "modifydate": "2005-06-05T07:13:00", "lines": 1530, "newlines": 465, "modlines": 1542, "user": "DOTCWS"}, "text": "       Identification Division.\n       Program-ID.    J7200506.\n       Author.        Craig Schneiderwent.\n      *\n      * The purpose of this application is to encapsulate triggered\n      * message processing for MQSeries applications triggered in CICS.\n      *\n      * Applications that are triggered can call this subroutine and\n      * receive their triggering message.  If the triggering message's\n      * MQMD-BACKOUTCOUNT >= the queue's MQIA-BACKOUT-THRESHOLD the\n      * \"poison\" message will be moved to the queue's\n      * MQCA-BACKOUT-REQ-Q-NAME.  If the queue has no\n      * MQCA-BACKOUT-REQ-Q-NAME the poison message will be discarded.\n      *\n      * In any case, a message will be written to the system log\n      * indicating what action was taken.\n      *\n      * Note that in the case where a message has been backed out and\n      * is too large to be retrieved into the caller's buffer (reason\n      * code MQRC-TRUNCATED-MSG-FAILED) the message is retrieved a\n      * second time.  If this second retrieval fails, the message is\n      * DELIBERATELY lost.  The reasoning behind this behavior is that\n      * the message cannot be processed and will cause repeated abends\n      * resulting ultimately in a potential outage.\n      *\n      * Another approach might be to turn off triggering, but that\n      * begets interesting security issues.  And what if the MQSET\n      * fails?  That's why I picked the \"lose the unretrievable\n      * message\" option.  It is, after all, poison and unretrievable.\n      *\n      * The MQOPEN of the triggered queue is performed with\n      * MQOO-SAVE-ALL-CONTEXT.  This allows the MQOPEN and the MQPUT\n      * for the poison queue to be done with MQOO-PASS-ALL-CONTEXT\n      * and MQPMO-PASS-ALL-CONTEXT, respectively, passing the HOBJ of\n      * the triggered queue on the MQPUT to preserve the original\n      * message context.\n      *\n      * If LS-RSN-CD = MQRC-TRUNCATED-MSG-FAILED and the caller is\n      * not prepared to adjust its buffer size, it would be prudent\n      * for the caller to roll back the current unit of work and allow\n      * poison message processing to remove the message from the queue.\n      *\n      * In the above case, an EXEC CICS GETMAIN for an area of the\n      * appropriate size is performed and the MQGET is re-executed\n      * to retrieve the entire message which is then requeued.\n      *\n      * If the GETMAIN fails, the MQGET is re-executed with\n      * MQGMO-ACCEPT-TRUNCATED-MSG and the truncated message is\n      * then requeued.\n      *\n      * If the sending application requested a Negative Action\n      * Notification (NAN) via MQMD-REPORT, a copy of the WTO will\n      * be sent to the MQMD-REPLYTOQ with a MQMD-MSGTYPE of\n      * MQMT-REPORT and a MQMD-FEEDBACK of MQFB-NAN.\n      *\n      * If your transaction updates recoverable resources (say, DB2)\n      * you probably want to BIND the DB2 package with RELEASE(COMMIT)\n      * instead of RELEASE(DEALLOCATE).  That will prevent deadlocks\n      * on pages already COMMITted by your application.\n      *\n      * If the passed queue name is blank, low values or high values,\n      * an EXEC CICS RETRIEVE is done to obtain the MQTM and the\n      * queue name is obtained from that structure.  The queue name is\n      * also passed back to the caller in the queue name parameter.\n      *\n      *\n      * Sample Use:\n      *\n      * Working-Storage Section.\n      * 01  J7200506-PGM PIC X(008) VALUE 'J7200506'.\n      * 01  DFHCOMMAREA PIC X(001).\n      * 01  MY-QUE-NM   PIC X(048).\n      * 01  MY-MQMD.\n      *     COPY CMQMDV.\n      * 01  MY-BUFR-LN  PIC S9(008) COMP-5.\n      * 01  MY-DATA-LN  PIC S9(008) COMP-5.\n      * 01  MY-MSG      PIC X(...).\n      * 01  MY-CMPN-CD  PIC S9(008) COMP-5.\n      * 01  MY-RSN-CD   PIC S9(008) COMP-5.\n      * 01  MY-WAIT-TM  PIC S9(008) COMP-5.\n      *\n      * 01  Switches\n      *     05  J7200506-RC             PIC S9(008) COMP-5 VALUE +0.\n      *     COPY J7200506 REPLACING ==:PRFX:== BY ==UTL-==.\n      *\n      * ....\n      *\n      * Procedure Division.\n      * MOVE LENGTH OF MY-MSG TO MY-BUFR-LN\n      * MOVE +2000            TO MY-WAIT-TM  *> Two Seconds\n      * PERFORM WITH TEST AFTER\n      * UNTIL J7200506-RC NOT = MSG-RETRIEVED-OK\n      *     CALL J7200506-PGM USING\n      *         DFHEIBLK             *>CICS EIB\n      *         DFHCOMMAREA          *>Dummy commarea - not used\n      *         MY-QUE-NM            *>MQ queue name\n      *         MY-MQMD              *>MQMD structure returned\n      *         MY-BUFR-LN           *>length of MY-MSG\n      *         MY-DATA-LN           *>length of message returned\n      *         MY-MSG               *>message from MQ\n      *         MY-CMPN-CD           *>MQ completion code\n      *         MY-RSN-CD            *>MQ reason code\n      *         MY-WAIT-TM           *>MQGET timeout\n      *     END-CALL\n      *     MOVE RETURN-CODE TO J7200506-RC\n      *     IF UTL-MSG-RETRIEVED-OK\n      *         ...business process for retrieved message...\n      *         EXEC CICS SYNCPOINT END-EXEC\n      *     END-IF\n      * END-PERFORM\n      * EVALUATE TRUE\n      *     WHEN UTL-NO-MSG-QUE-CLOSED\n      *          CONTINUE\n      *     WHEN UTL-MQ-ERROR\n      *          ...application-specific error handling...\n      *          (what is provided by this program may be sufficient)\n      *     WHEN UTL-POISON-MESSAGE\n      *          ...application-specific error handling...\n      *          (what is provided by this program may be sufficient)\n      * END-EVALUATE\n      * EXEC CICS RETURN END-EXEC\n      *\n      * Return Codes:\n      * MSG-RETRIEVED-OK             +0\n      * NO-MSG-QUE-CLOSED            +1\n      * MQ-ERROR                     +10 THRU +19\n      * OPEN-FAILED                  +11\n      * INQUIRE-FAILED               +12\n      * CLOSE-FAILED                 +13\n      * GET-FAILED                   +14\n      * PUT-FAILED                   +15\n      * PUT1-FAILED                  +16\n      * UNKNOWN-ERROR                +19\n      * POISON-MSG                   +20 THRU +29\n      * POISON-MSG-REQUEUED          +21\n      * POISON-MSG-REQUEUE-FAILED    +22\n      * POISON-MSG-DISCARDED         +23\n      *\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME                  PIC X(008) VALUE 'J7200506'.\n           05  CICS-ERR-PGM            PIC X(008) VALUE 'J7200501'.\n           05  MQ-RSN-CD-PGM           PIC X(008) VALUE 'J7200502'.\n           05  MQ-QMGR-PGM             PIC X(008) VALUE 'J7200503'.\n           05  MQ-INQ-PGM              PIC X(008) VALUE 'J7200507'.\n           05  HEX-CONV-PGM            PIC X(008) VALUE 'J7200508'.\n           05  MQ-API-PGMS.\n               COPY CMQAPIDC.\n           05  WS-MQRO-NAN-BIT-NB      PIC S9(008) COMP-5 VALUE +1.\n           05  WS-MQRO-PASS-CORREL-ID-BIT-NB\n                                       PIC S9(008) COMP-5 VALUE +6.\n           05  WS-MQRO-PASS-MSG-ID-BIT-NB\n                                       PIC S9(008) COMP-5 VALUE +7.\n           05  WS-CMQV.\n               COPY CMQV.\n           05  ERR-MSG-CONSTANTS.\n               10  ERR-MSG-ID-01       PIC X(009) VALUE 'UDOT0002I'.\n               10  ERR-MSG-ID-02       PIC X(009) VALUE 'UDOT0002E'.\n               10  ERR-MSG-ID-03       PIC X(009) VALUE 'UDOT0002W'.\n               10  ERR-MSG-ID-04       PIC X(009) VALUE 'UDOT0003W'.\n               10  ERR-MSG-ID-05       PIC X(009) VALUE 'UDOT0003E'.\n               10  ERR-MSG-ID-06       PIC X(009) VALUE 'UDOT0004E'.\n               10  ERR-MSG-TXT01       PIC X(023)\n                   VALUE 'Poison message in queue'.\n               10  ERR-MSG-TXT02       PIC X(004)\n                   VALUE 'from'.\n               10  ERR-MSG-TXT03       PIC X(003)\n                   VALUE 'via'.\n               10  ERR-MSG-TXT04       PIC X(011)\n                   VALUE 'requeued to'.\n               10  ERR-MSG-TXT05       PIC X(012)\n                   VALUE 'not requeued'.\n               10  ERR-MSG-TXT06       PIC X(015)\n                   VALUE 'with truncation'.\n               10  ERR-MSG-TXT07       PIC X(007)\n                   VALUE 'MsgID=x'.\n               10  ERR-MSG-TXT08       PIC X(010)\n                   VALUE 'CorrelID=x'.\n               10  ERR-MSG-TXT09       PIC X(020)\n                   VALUE 'Attempted to acquire'.\n               10  ERR-MSG-TXT10       PIC X(005)\n                   VALUE 'bytes'.\n\n       01  WORK-AREAS.\n           05  HCONN                   PIC S9(008) COMP-5.\n           05  OPEN-OPTIONS            PIC S9(008) COMP-5 VALUE +0.\n           05  CLOSE-OPTIONS           PIC S9(008) COMP-5 VALUE +0.\n           05  HOBJ                    PIC S9(008) COMP-5.\n           05  HOBJ-INQ                PIC S9(008) COMP-5.\n           05  HOBJ-GET                PIC S9(008) COMP-5.\n           05  HOBJ-PUT                PIC S9(008) COMP-5.\n           05  WS-BUFR-LN              PIC S9(008) COMP-5.\n           05  CICS-RESP               PIC S9(008) COMP-5.\n           05  CICS-RESP2              PIC S9(008) COMP-5.\n           05  BACK-OUT-THLD           PIC S9(008) COMP-5.\n           05  HEX-FLD-LN              PIC S9(008) COMP-5.\n           05  ERR-MSG-LN              PIC 9(008)  COMP-5 VALUE 1.\n           05  ERR-MSG-SUFX-LN         PIC 9(008)  COMP-5 VALUE 1.\n           05  CEESITST-TEST-FLD       PIC S9(008) COMP-5.\n           05  CEESITST-BIT-NB         PIC S9(008) COMP-5.\n           05  CEESITST-RSLT           PIC S9(008) COMP-5.\n           05  WS-MQTM-LN              PIC S9(004) COMP-5.\n           05  CEESITST-FC             PIC X(012).\n           05  CICS-APPL-ID            PIC X(008) VALUE SPACES.\n           05  THIS-USERID             PIC X(008) VALUE SPACES.\n           05  BACK-OUT-QUE-NM         PIC X(048) VALUE SPACES.\n           05  QMGR-NM                 PIC X(048) VALUE SPACES.\n           05  WS-MQMD-MSGID-EXPD      PIC X(048).\n           05  WS-MQMD-CORRELID-EXPD   PIC X(048).\n           05  ERR-MSG-WTO             PIC X(690) VALUE SPACES.\n           05  ERR-MSG-WTO-SUFX        PIC X(100) VALUE SPACES.\n           05  CICS-API-FAILED         PIC X(030) VALUE SPACES.\n           05  CICS-API-FAILED-LOC     PIC X(004) VALUE SPACES.\n           05  CICS-RESP-TXT           PIC X(025) VALUE SPACES.\n           05  CICS-RESP-DSPL          PIC 9(010) VALUE ZEROES.\n           05  CICS-RESP-DSPL-X\n               REDEFINES\n               CICS-RESP-DSPL          PIC X(010).\n           05  CICS-RESP2-DSPL         PIC 9(010) VALUE ZEROES.\n           05  CICS-RESP2-DSPL-X\n               REDEFINES\n               CICS-RESP2-DSPL         PIC X(010).\n           05  WS-BUFR-LN-DSPL         PIC 9(010) VALUE ZEROES.\n           05  WS-BUFR-LN-DSPL-X\n               REDEFINES\n               WS-BUFR-LN-DSPL         PIC X(010).\nDebug *    05  CD-DSPL                 PIC 9(010) VALUE ZEROES.\nDebug *    05  CD-DSPL-X\nDebug *        REDEFINES\nDebug *        CD-DSPL                 PIC X(010).\n\n       COPY J7200507 REPLACING ==:PRFX:== BY ==J7200507-==.\n\n       01  WS-MQMD.\n           COPY CMQMDV.\n\n       01  WS-CMQODV-INQ.\n           COPY CMQODV.\n\n       01  WS-CMQODV-PUT.\n           COPY CMQODV.\n\n       01  WS-CMQODV-GET.\n           COPY CMQODV.\n\n       01  WS-CMQODV.\n           COPY CMQODV.\n\n       01  WS-CMQGMOV.\n           COPY CMQGMOV.\n\n       01  WS-CMQPMOV.\n           COPY CMQPMOV.\n\n       01  WS-MQTM.\n           COPY CMQTMV.\n\n       01  SWITCHES.\n           05  QMGR-KNOWN-SW           PIC X(001) VALUE SPACE.\n               88  QMGR-KNOWN                  VALUE 'Y'.\n           05  QUE-OPEN-SW             PIC X(001) VALUE SPACE.\n               88  QUE-OPEN                    VALUE 'Y'.\n           05  INQ-CMPL-SW             PIC X(001) VALUE SPACE.\n               88  INQ-CMPL                    VALUE 'Y'.\n           05  MSG-TRUNCATED-SW        PIC X(001) VALUE SPACE.\n               88  MSG-TRUNCATED               VALUE 'Y'.\n           05  MQ-QMGR-PGM-RC          PIC S9(008) COMP-5.\n               88  MQ-QMGR-PGM-OK              VALUE +0.\n               88  MQ-QMGR-PGM-OPEN-FAILED     VALUE +1.\n               88  MQ-QMGR-PGM-INQ-FAILED      VALUE +2.\n               88  MQ-QMGR-PGM-CLOSE-FAILED    VALUE +3.\n           05  BIT-TEST-SW             PIC S9(008) COMP-5.\n               88  BIT-IS-OFF                  VALUE +0.\n               88  BIT-IS-ON                   VALUE +1.\n\n       Local-Storage Section.\n       01  PER-INVOCATION-WORK-AREAS.\n           05  RSN-CD-DSPL             PIC 9(010)        VALUE ZEROES.\n           05  RSN-CD-DSPL-X\n               REDEFINES\n               RSN-CD-DSPL             PIC X(010).\n           05  RSN-CD-TXT              PIC X(030)         VALUE SPACES.\n           05  ERR-MSG-MQ-FUNC         PIC X(008)         VALUE SPACES.\n           05  ERR-MSG-MQ-QUE-NM       PIC X(048)         VALUE SPACES.\n           05  WS-MSG-PTR              POINTER            VALUE NULL.\n           05  BIT-TEST-FW             PIC S9(008) COMP-5 VALUE +0.\n           05  BIT-TEST-X\n               REDEFINES\n               BIT-TEST-FW.\n               10                      PIC X(003).\n               10  BIT-TEST-LOW-BYTE   PIC X(001).\n           05  WS-MQMD-RPT-FW          PIC S9(008) COMP-5 VALUE +0.\n           05  WS-MQMD-RPT-X\n               REDEFINES\n               WS-MQMD-RPT-FW.\n               10  WS-MQMD-BYTES\n                   OCCURS 4 TIMES      PIC X(001).\n           05  SAVE-RC                 PIC S9(008) COMP-5 VALUE +0.\n           COPY J7200506 REPLACING ==:PRFX:== BY == ==.\n           05  HAVE-ERR-MSG-SUFX-SW    PIC X(001)         VALUE SPACE.\n               88  HAVE-ERR-MSG-SUFX           VALUE 'Y'.\n           05  GETMAIN-DONE-SW         PIC X(001)         VALUE SPACE.\n               88  GETMAIN-DONE                VALUE 'Y'.\n           05  SEND-NAN-SW             PIC X(001) VALUE SPACE.\n               88  SEND-NAN                    VALUE 'Y'.\n           05  PASS-CORREL-ID-SW       PIC X(001) VALUE SPACE.\n               88  PASS-CORREL-ID              VALUE 'Y'.\n           05  PASS-MSG-ID-SW          PIC X(001) VALUE SPACE.\n               88  PASS-MSG-ID                 VALUE 'Y'.\n\n       Linkage Section.\n       01  DFHCOMMAREA PIC X(001).\n       01  LS-QUE-NM   PIC X(048).\n       01  LS-MQMD.\n           COPY CMQMDL.\n       01  LS-BUFR-LN  PIC S9(008) COMP-5.\n       01  LS-DATA-LN  PIC S9(008) COMP-5.\n       01  LS-MSG      PIC X.\n       01  LS-CMPN-CD  PIC S9(008) COMP-5.\n       01  LS-RSN-CD   PIC S9(008) COMP-5.\n       01  LS-GET-WAIT PIC S9(008) COMP-5.\n       01  LS-MSG-COPY PIC X.\n      *\n      * Note that LS-MSG-COPY is not a passed parameter from the\n      * caller.  It is used when calling the MQ API so that we can\n      * point the API at either LS-MSG or a GETMAINed area.  This\n      * is done by setting the address of LS-MSG-COPY appropriately.\n      *\n\n       Procedure Division Using\n           DFHCOMMAREA\n           LS-QUE-NM\n           LS-MQMD\n           LS-BUFR-LN\n           LS-DATA-LN\n           LS-MSG\n           LS-CMPN-CD\n           LS-RSN-CD\n           LS-GET-WAIT\n           LS-MSG-COPY\n           .\n\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' Begin'\n\n           SET MSG-RETRIEVED-OK TO TRUE\n           MOVE SPACE TO MSG-TRUNCATED-SW\n           MOVE LS-BUFR-LN TO WS-BUFR-LN\n      *\n      *    These addresses are here because we _may_ need to\n      *    getmain some storage in the event the caller did not\n      *    provide enough room for the message.\n      *\n           SET WS-MSG-PTR TO ADDRESS OF LS-MSG\n           SET ADDRESS OF LS-MSG-COPY TO WS-MSG-PTR\n      *\n      *    No match criteria\n      *    It turns out that, when specifying MQMO-NONE, one\n      *    must also do one of the following\n      *    1. set _both_ MQMD-MSGID and MQMD-CORRELID to\n      *       their respective \"null\" values\n      *    2. set MQGMO-VERSION to MQGMO-VERSION-2\n      *\n      *    This behavior is documented in the MQ programming reference\n      *    as a note after the MQMO-NONE documentation in the\n      *    matchoptions section of the MQGMO structure.\n      *\n           MOVE MQMO-NONE TO MQGMO-MATCHOPTIONS OF WS-CMQGMOV\n           MOVE MQMI-NONE TO MQMD-MSGID OF LS-MQMD\n           MOVE MQCI-NONE TO MQMD-CORRELID OF LS-MQMD\n\n           IF CICS-APPL-ID = SPACES\n               EXEC CICS ASSIGN\n                   APPLID(CICS-APPL-ID)\n                   USERID(THIS-USERID)\n               END-EXEC\n           END-IF\n\n           IF LS-QUE-NM = SPACES OR\n              LS-QUE-NM = LOW-VALUES OR\n              LS-QUE-NM = HIGH-VALUES\n               IF MQTM-QNAME = SPACES\n                   MOVE LENGTH OF WS-MQTM TO WS-MQTM-LN\n                   EXEC CICS RETRIEVE\n                       INTO(WS-MQTM)\n                       LENGTH(WS-MQTM-LN)\n                   END-EXEC\n               END-IF\n               MOVE MQTM-QNAME TO LS-QUE-NM\n           END-IF\n\n           PERFORM 0120-GET-QMGR-NM\n           IF MQ-ERROR\n               MOVE SAVE-RC TO RETURN-CODE\n               GOBACK\n           END-IF\n\n           IF INQ-CMPL\n               CONTINUE\n           ELSE\n               PERFORM 0110-GET-BACK-OUT-INFO\n               IF LS-CMPN-CD = MQCC-OK\n                   SET INQ-CMPL TO TRUE\n               ELSE\n                   GOBACK\n               END-IF\n           END-IF\n\n           PERFORM 1000-PRCS\n\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' End'\n\n           MOVE SAVE-RC TO RETURN-CODE\n           GOBACK\n           .\n\n       0110-GET-BACK-OUT-INFO.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 0110-GET-BACK-OUT-INFO'\n\n      *\n      * Retrieve backout information from the queue definition.  This\n      * information is used when retrieving a message to see if we\n      * have reached the backout threshold due to prior units of work\n      * being backed out (probable abends), and determine what to do\n      * in the case of a backout - if a backout queue name is present\n      * an attempt will be make to requeue \"poison\" messages there.\n      *\n\n           MOVE +2             TO J7200507-SELECTORCOUNT\n           MOVE +1             TO J7200507-INTATTRCOUNT\n           MOVE +48            TO J7200507-CHARATTRLENGTH\n           MOVE MQHC-DEF-HCONN TO HCONN\n           MOVE MQOT-Q         TO MQOD-OBJECTTYPE\n                               OF WS-CMQODV-INQ\n           MOVE LS-QUE-NM      TO MQOD-OBJECTNAME\n                               OF WS-CMQODV-INQ\n           MOVE MQCA-BACKOUT-REQ-Q-NAME\n             TO J7200507-SELECTORS( 1 )\n           MOVE MQIA-BACKOUT-THRESHOLD\n             TO J7200507-SELECTORS( 2 )\n\n           CALL MQ-INQ-PGM USING\n               HCONN\n               J7200507-SELECTORCOUNT\n               J7200507-SELECTORS-TABLE\n               J7200507-INTATTRCOUNT\n               J7200507-INTATTRS-TABLE\n               J7200507-CHARATTRLENGTH\n               J7200507-CHARATTRS-TABLE\n               WS-CMQODV-INQ\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\n           IF LS-CMPN-CD = MQCC-OK\n               MOVE J7200507-CHARATTRS-TABLE TO BACK-OUT-QUE-NM\n               MOVE J7200507-INTATTRS( 1 )   TO BACK-OUT-THLD\n           ELSE\n               MOVE RETURN-CODE TO SAVE-RC\n               EVALUATE TRUE\n                   WHEN OPEN-FAILED\n                        MOVE MQOPEN     TO ERR-MSG-MQ-FUNC\n                   WHEN INQUIRE-FAILED\n                        MOVE MQINQ      TO ERR-MSG-MQ-FUNC\n                   WHEN CLOSE-FAILED\n                        MOVE MQCLOSE    TO ERR-MSG-MQ-FUNC\n               END-EVALUATE\n               IF INFO-RETURNED-OK\n                   CONTINUE\n               ELSE\n                   PERFORM 9040-FMT-MSG-04-05\n                   PERFORM 9100-WTO\n               END-IF\n           END-IF\n           .\n\n       0120-GET-QMGR-NM.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 0120-GET-QMGR-NM'\n\n      *\n      * Retrieve the name of the queue manager currently connected\n      * to this CICS region.\n      *\n\n           IF QMGR-KNOWN\n               CONTINUE\n           ELSE\n               CALL MQ-QMGR-PGM USING\n                   QMGR-NM\n                   LS-CMPN-CD\n                   LS-RSN-CD\n               END-CALL\n               MOVE RETURN-CODE TO MQ-QMGR-PGM-RC\n               EVALUATE TRUE\n                   WHEN MQ-QMGR-PGM-OK\n                        SET QMGR-KNOWN TO TRUE\n                   WHEN MQ-QMGR-PGM-OPEN-FAILED\n                        SET OPEN-FAILED TO TRUE\n                   WHEN MQ-QMGR-PGM-INQ-FAILED\n                        SET INQUIRE-FAILED TO TRUE\n                   WHEN MQ-QMGR-PGM-CLOSE-FAILED\n                        SET CLOSE-FAILED TO TRUE\n                   WHEN OTHER\n                        SET UNKNOWN-ERROR TO TRUE\n               END-EVALUATE\n           END-IF\n           .\n\n       1000-PRCS.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 1000-PRCS'\n\n      *\n      * Open the queue, get the message, check to see if it is\n      * \"poison\" (cannot be processed due to prior difficulties),\n      * close the queue.\n      *\n\n           MOVE LS-GET-WAIT TO MQGMO-WAITINTERVAL\n           IF LS-GET-WAIT > 0\n               MOVE MQGMO-WAIT TO MQGMO-OPTIONS OF WS-CMQGMOV\n           ELSE\n               MOVE MQGMO-NO-WAIT TO MQGMO-OPTIONS OF WS-CMQGMOV\n           END-IF\n\n           ADD MQGMO-FAIL-IF-QUIESCING TO\n               MQGMO-OPTIONS OF WS-CMQGMOV\n\n           ADD MQGMO-CONVERT TO\n               MQGMO-OPTIONS OF WS-CMQGMOV\n\n           IF QUE-OPEN\n               MOVE HOBJ-GET TO HOBJ\n           ELSE\n               COMPUTE OPEN-OPTIONS =\n                   MQOO-INPUT-AS-Q-DEF +\n                   MQOO-SAVE-ALL-CONTEXT +\n                   MQOO-FAIL-IF-QUIESCING\n               MOVE LS-QUE-NM      TO MQOD-OBJECTNAME\n                                   OF WS-CMQODV-GET\n               MOVE MQHC-DEF-HCONN TO HCONN\n               MOVE WS-CMQODV-GET  TO WS-CMQODV\n               PERFORM 8010-OPEN\n               MOVE HOBJ TO HOBJ-GET\n               SET QUE-OPEN TO TRUE\n           END-IF\n\n           IF LS-CMPN-CD = MQCC-OK\n               PERFORM 8040-GET\n               EVALUATE TRUE\n                 WHEN LS-RSN-CD = MQRC-NO-MSG-AVAILABLE\n                      MOVE MQCO-NONE TO CLOSE-OPTIONS\n                      PERFORM 8030-CLOSE\n                      IF LS-CMPN-CD = MQCC-OK\n                          SET NO-MSG-QUE-CLOSED TO TRUE\n                      ELSE\n                          SET CLOSE-FAILED      TO TRUE\n                          MOVE MQCLOSE          TO ERR-MSG-MQ-FUNC\n                          PERFORM 9040-FMT-MSG-04-05\n                          PERFORM 9100-WTO\n                      END-IF\n                 WHEN MQMD-BACKOUTCOUNT OF LS-MQMD >= BACK-OUT-THLD\n      *               Poison message, previously backed out\n                      PERFORM 1100-DEJA-VU\n                 WHEN OTHER\n      *               No special processing necessary\n                      CONTINUE\n               END-EVALUATE\n           END-IF\n           .\n\n       1100-DEJA-VU.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 1100-DEJA-VU'\n\n      *\n      * We have retrieved this message previously and the unit of\n      * work was backed out.  This has occurred enough times that\n      * the backout threshold has been reached and this message is\n      * now considered to be \"poison\" (we cannot process it).  The\n      * message will be moved to a poison queue if one exists.\n      *\n           PERFORM 1130-CK-RPT-OPT\n           IF LS-RSN-CD = MQRC-TRUNCATED-MSG-FAILED\n               ADD MQGMO-MARK-SKIP-BACKOUT TO\n                   MQGMO-OPTIONS OF WS-CMQGMOV\n               ADD MQGMO-SYNCPOINT TO\n                   MQGMO-OPTIONS OF WS-CMQGMOV\n      *\n      * This message is too large to be processed by the caller.  We\n      * will requeue it after acquiring enough storage to retrieve it.\n      *\n               MOVE LS-DATA-LN TO WS-BUFR-LN\n               PERFORM 9110-GETMAIN\n               IF CICS-RESP = DFHRESP( NORMAL )\n                   SET ADDRESS OF LS-MSG-COPY TO WS-MSG-PTR\n                   SET GETMAIN-DONE TO TRUE\n               ELSE\n                   SET HAVE-ERR-MSG-SUFX TO TRUE\n                   PERFORM 1150-GETMAIN-ERR-MSG-SUFX\n                   PERFORM 9050-FMT-MSG-06\n                   PERFORM 9100-WTO\n                   MOVE SPACE TO HAVE-ERR-MSG-SUFX-SW\n      *\n      * Unable to acquire storage - truncate the message.\n      *\n                   ADD MQGMO-ACCEPT-TRUNCATED-MSG TO\n                       MQGMO-OPTIONS OF WS-CMQGMOV\n                   SET MSG-TRUNCATED TO TRUE\n                   SET WS-MSG-PTR TO NULL\n               END-IF\n               PERFORM 8040-GET\n               IF LS-CMPN-CD = MQCC-OK\n                   CONTINUE\n               ELSE\n                   PERFORM 9020-FMT-MSG-02\n                   SET POISON-MSG-REQUEUE-FAILED TO TRUE\n                   PERFORM 9100-WTO\n      * Note that the message is _deliberately_ lost - unprocessable.\n               END-IF\n           END-IF\n\n           IF POISON-MSG-REQUEUE-FAILED\n      *\n      * Unable to MQGET message - failure has been WTO'd.\n      *\n               CONTINUE\n           ELSE\n               IF BACK-OUT-QUE-NM = SPACES\n                   PERFORM 9030-FMT-MSG-03\n                   SET POISON-MSG-DISCARDED TO TRUE\n                   PERFORM 9100-WTO\n               ELSE\n                   PERFORM 1110-OPEN-BACKOUT-QUE\n                   IF LS-CMPN-CD = MQCC-OK\n                       PERFORM 1120-PUT-MSG-IN-BACKOUT-QUE\n                       IF LS-CMPN-CD = MQCC-OK\n                           PERFORM 9010-FMT-MSG-01\n                           SET POISON-MSG-REQUEUED TO TRUE\n                       ELSE\n                           PERFORM 9020-FMT-MSG-02\n                           SET POISON-MSG-REQUEUE-FAILED TO TRUE\n                       END-IF\n                       PERFORM 9100-WTO\n                       MOVE HOBJ-PUT TO HOBJ\n                       PERFORM 8030-CLOSE\n                   END-IF\n               END-IF\n           END-IF\n\n           IF SEND-NAN\n               IF MQMD-REPLYTOQ OF LS-MQMD = SPACES\n                 OR MQMD-REPLYTOQ OF LS-MQMD = LOW-VALUES\n                 OR MQMD-REPLYTOQ OF LS-MQMD = HIGH-VALUES\n                   CONTINUE\n               ELSE\n                   PERFORM 1140-SEND-NAN\n               END-IF\n           END-IF\n\n           EXEC CICS SYNCPOINT END-EXEC\n           IF GETMAIN-DONE\n               PERFORM 9120-FREEMAIN\n               IF CICS-RESP = DFHRESP( NORMAL )\n                   CONTINUE\n               ELSE\n                   PERFORM 9050-FMT-MSG-06\n                   PERFORM 9100-WTO\n               END-IF\n           END-IF\n           .\n\n       1110-OPEN-BACKOUT-QUE.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 1110-OPEN-BACKOUT-QUE'\n\n      *\n      * Note that the context of the original message is preserved\n      * when moving a poison message to the backout queue.\n      * Here, MQOO-PASS-ALL-CONTEXT is used on the MQOPEN.\n      *\n           MOVE MQOT-Q          TO MQOD-OBJECTTYPE\n                                OF WS-CMQODV-PUT\n           MOVE BACK-OUT-QUE-NM TO MQOD-OBJECTNAME\n                                OF WS-CMQODV-PUT\n           MOVE WS-CMQODV-PUT   TO WS-CMQODV\n           COMPUTE OPEN-OPTIONS =\n               MQOO-OUTPUT +\n               MQOO-PASS-ALL-CONTEXT +\n               MQOO-FAIL-IF-QUIESCING\n           PERFORM 8010-OPEN\n           MOVE HOBJ            TO HOBJ-PUT\n           .\n\n       1120-PUT-MSG-IN-BACKOUT-QUE.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 1120-PUT-MSG-IN-BACKOUT-QUE'\n\n      *\n      * Note that the context of the original message is preserved\n      * when moving a poison message to the backout queue.\n      * Here, MQPMO-PASS-ALL-CONTEXT is used on the MQPUT and the\n      * HOBJ from the original MQGET is passed in MQPMO-CONTEXT.\n      *\n           MOVE HOBJ-GET        TO MQPMO-CONTEXT\n                                OF WS-CMQPMOV\n           MOVE LS-MQMD         TO WS-MQMD\n           MOVE MQEI-UNLIMITED  TO MQMD-EXPIRY\n                                OF WS-MQMD\n           COMPUTE MQPMO-OPTIONS OF WS-CMQPMOV =\n               MQPMO-PASS-ALL-CONTEXT +\n               MQPMO-FAIL-IF-QUIESCING\n           MOVE HOBJ-PUT        TO HOBJ\n           PERFORM 8050-PUT\n           .\n\n       1130-CK-RPT-OPT.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 1130-CK-RPT-OPT'\n\n      *\n      * Check to see if the message sender requested a Negative\n      * Action Notification (NAN) report.  If so, set a switch\n      * to indicate so.\n      *\n\n           MOVE MQMD-REPORT OF LS-MQMD TO CEESITST-TEST-FLD\n           MOVE WS-MQRO-NAN-BIT-NB TO CEESITST-BIT-NB\n           PERFORM 8060-BIT-TEST\n           MOVE CEESITST-RSLT      TO BIT-TEST-SW\n           IF BIT-IS-ON\n               SET SEND-NAN TO TRUE\n           END-IF\n\n           MOVE WS-MQRO-PASS-CORREL-ID-BIT-NB TO CEESITST-BIT-NB\n           PERFORM 8060-BIT-TEST\n           MOVE CEESITST-RSLT      TO BIT-TEST-SW\n           IF BIT-IS-ON\n               SET PASS-CORREL-ID TO TRUE\n           END-IF\n\n           MOVE WS-MQRO-PASS-MSG-ID-BIT-NB TO CEESITST-BIT-NB\n           PERFORM 8060-BIT-TEST\n           MOVE CEESITST-RSLT      TO BIT-TEST-SW\n           IF BIT-IS-ON\n               SET PASS-MSG-ID TO TRUE\n           END-IF\n           .\n\n       1140-SEND-NAN.\n      *\n      * The sending application requested a Negative Action\n      * Notification (NAN) report.  This is sent to indicate the\n      * message was not processed by the receiving application.\n      *\n           MOVE MQPMO-FAIL-IF-QUIESCING TO MQPMO-OPTIONS OF WS-CMQPMOV\n           MOVE MQFB-NAN    TO MQMD-FEEDBACK OF WS-MQMD\n           MOVE MQRO-NONE   TO MQMD-REPORT   OF WS-MQMD\n           MOVE MQMT-REPORT TO MQMD-MSGTYPE  OF WS-MQMD\n\n           IF PASS-CORREL-ID\n               CONTINUE\n           ELSE\n               MOVE MQMD-MSGID OF LS-MQMD TO MQMD-CORRELID OF WS-MQMD\n           END-IF\n\n           IF PASS-MSG-ID\n               CONTINUE\n           ELSE\n               MOVE MQMI-NONE TO MQMD-MSGID OF WS-MQMD\n           END-IF\n\n           MOVE MQOT-Q          TO MQOD-OBJECTTYPE\n                                OF WS-CMQODV-PUT\n           MOVE MQMD-REPLYTOQ   OF LS-MQMD\n                                TO MQOD-OBJECTNAME\n                                OF WS-CMQODV-PUT\n           MOVE SPACES          TO MQMD-REPLYTOQ\n                                OF WS-MQMD\n           MOVE SPACES          TO MQMD-REPLYTOQMGR\n                                OF WS-MQMD\n           MOVE WS-CMQODV-PUT   TO WS-CMQODV\n           CALL MQPUT1 USING\n               HCONN\n               WS-CMQODV\n               WS-MQMD\n               WS-CMQPMOV\n               ERR-MSG-LN\n               ERR-MSG-WTO\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET PUT1-FAILED TO TRUE\n               MOVE MQPUT1     TO ERR-MSG-MQ-FUNC\n               MOVE SPACE      TO MSG-TRUNCATED-SW\n               PERFORM 9040-FMT-MSG-04-05\n               PERFORM 9100-WTO\n           END-IF\n           .\n\n       1150-GETMAIN-ERR-MSG-SUFX.\n           MOVE WS-BUFR-LN TO WS-BUFR-LN-DSPL\n           STRING\n               ERR-MSG-TXT09\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               WS-BUFR-LN-DSPL-X\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT10\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO-SUFX\n             WITH POINTER\n               ERR-MSG-SUFX-LN\n           END-STRING\n\n           .\n\n       8010-OPEN.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8010-OPEN'\n\n           CALL MQOPEN USING\n               HCONN\n               WS-CMQODV\n               OPEN-OPTIONS\n               HOBJ\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\nDebug *    PERFORM 9910-DSPL-CMP-RSN-CD\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET OPEN-FAILED TO TRUE\n               MOVE MQOPEN     TO ERR-MSG-MQ-FUNC\n               PERFORM 9040-FMT-MSG-04-05\n               PERFORM 9100-WTO\n           END-IF\n           .\n\n       8030-CLOSE.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8030-CLOSE'\n\n           CALL MQCLOSE USING\n               HCONN\n               HOBJ\n               CLOSE-OPTIONS\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\nDebug *    PERFORM 9910-DSPL-CMP-RSN-CD\n           .\n\n       8040-GET.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8040-GET'\n\n           CALL MQGET USING\n               HCONN\n               HOBJ\n               LS-MQMD\n               WS-CMQGMOV\n               WS-BUFR-LN\n               LS-MSG-COPY\n               LS-DATA-LN\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\nDebug *    PERFORM 9910-DSPL-CMP-RSN-CD\n           EVALUATE LS-CMPN-CD ALSO LS-RSN-CD\n              WHEN MQCC-OK ALSO ANY\n              WHEN ANY     ALSO MQRC-NO-MSG-AVAILABLE\n                   CONTINUE\n              WHEN OTHER\n                   SET GET-FAILED TO TRUE\n                   MOVE MQGET     TO ERR-MSG-MQ-FUNC\n                   PERFORM 9040-FMT-MSG-04-05\n                   PERFORM 9100-WTO\n           END-EVALUATE\n           .\n\n       8050-PUT.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8050-PUT'\n\n           CALL MQPUT USING\n               HCONN\n               HOBJ\n               WS-MQMD\n               WS-CMQPMOV\n               LS-BUFR-LN\n               LS-MSG\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\nDebug *    PERFORM 9910-DSPL-CMP-RSN-CD\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET PUT-FAILED TO TRUE\n               MOVE MQPUT     TO ERR-MSG-MQ-FUNC\n               PERFORM 9040-FMT-MSG-04-05\n               PERFORM 9100-WTO\n           END-IF\n           .\n\n       8060-BIT-TEST.\n      *\n      * Oddly enough, there are no documented LE feedback codes\n      * for this callable service.  So I'm not checking.\n      *\n\n           CALL 'CEESITST' USING\n               CEESITST-TEST-FLD\n               CEESITST-BIT-NB\n               CEESITST-FC\n               CEESITST-RSLT\n           END-CALL\n           .\n\n       9010-FMT-MSG-01.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9010-FMT-MSG-01'\n\n      *\n      * Message has been requeued to the backout queue.\n      *\n\n           MOVE LENGTH OF MQMD-MSGID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-MSGID OF LS-MQMD\n               WS-MQMD-MSGID-EXPD\n           END-CALL\n\n           MOVE LENGTH OF MQMD-CORRELID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-CORRELID OF LS-MQMD\n               WS-MQMD-CORRELID-EXPD\n           END-CALL\n\n           MOVE SPACES TO ERR-MSG-WTO\n           MOVE +1     TO ERR-MSG-LN\n           STRING\n               ERR-MSG-ID-01\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-APPL-ID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               EIBTRNID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MYNAME\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               THIS-USERID\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT01\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               QMGR-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               LS-QUE-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT02\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-USERIDENTIFIER OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT03\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-PUTAPPLNAME    OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT04\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               BACK-OUT-QUE-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT07\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-MSGID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT08\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-CORRELID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n\n           IF MSG-TRUNCATED\n               PERFORM 9090-ADD-TRUNC-MSG\n           END-IF\n           .\n\n       9020-FMT-MSG-02.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9020-FMT-MSG-02'\n\n      *\n      * Message was not requeued due to MQ error.  Completion and\n      * Reason codes are displayed.\n      *\n\n           MOVE LENGTH OF MQMD-MSGID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-MSGID OF LS-MQMD\n               WS-MQMD-MSGID-EXPD\n           END-CALL\n\n           MOVE LENGTH OF MQMD-CORRELID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-CORRELID OF LS-MQMD\n               WS-MQMD-CORRELID-EXPD\n           END-CALL\n\n           MOVE SPACES TO ERR-MSG-WTO\n           MOVE +1     TO ERR-MSG-LN\n           CALL MQ-RSN-CD-PGM USING\n               LS-RSN-CD\n               RSN-CD-TXT\n           END-CALL\n           MOVE LS-RSN-CD TO RSN-CD-DSPL\n           STRING\n               ERR-MSG-ID-02\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-APPL-ID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               EIBTRNID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MYNAME\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               THIS-USERID\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT01\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               QMGR-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               LS-QUE-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT02\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-USERIDENTIFIER OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT03\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-PUTAPPLNAME    OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT05\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               RSN-CD-DSPL-X\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               RSN-CD-TXT\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT07\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-MSGID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT08\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-CORRELID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n\n           IF MSG-TRUNCATED\n               PERFORM 9090-ADD-TRUNC-MSG\n           END-IF\n           .\n\n       9030-FMT-MSG-03.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9030-FMT-MSG-03'\n\n      *\n      * Message has not been requeued, there is no backout queue\n      * specified.\n      *\n\n           MOVE LENGTH OF MQMD-MSGID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-MSGID OF LS-MQMD\n               WS-MQMD-MSGID-EXPD\n           END-CALL\n\n           MOVE LENGTH OF MQMD-CORRELID OF LS-MQMD TO HEX-FLD-LN\n           CALL HEX-CONV-PGM USING\n               HEX-FLD-LN\n               MQMD-CORRELID OF LS-MQMD\n               WS-MQMD-CORRELID-EXPD\n           END-CALL\n\n           MOVE SPACES TO ERR-MSG-WTO\n           MOVE +1     TO ERR-MSG-LN\n           STRING\n               ERR-MSG-ID-03\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-APPL-ID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               EIBTRNID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MYNAME\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               THIS-USERID\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT01\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               QMGR-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               LS-QUE-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT02\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-USERIDENTIFIER OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT03\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MQMD-PUTAPPLNAME    OF LS-MQMD\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT05\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT07\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-MSGID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT08\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n               WS-MQMD-CORRELID-EXPD\n                 DELIMITED BY SIZE\n               QUOTE\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n\n           IF MSG-TRUNCATED\n               PERFORM 9090-ADD-TRUNC-MSG\n           END-IF\n           .\n\n       9040-FMT-MSG-04-05.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9040-FMT-MSG-04-05'\n\n      * An MQSeries warning or error has occurred.\n\n           MOVE SPACES TO ERR-MSG-WTO\n           MOVE +1     TO ERR-MSG-LN\n           MOVE MQOD-OBJECTNAME OF WS-CMQODV TO ERR-MSG-MQ-QUE-NM\n           CALL MQ-RSN-CD-PGM USING\n               LS-RSN-CD\n               RSN-CD-TXT\n           END-CALL\n           MOVE LS-RSN-CD TO RSN-CD-DSPL\n           IF LS-CMPN-CD = MQCC-WARNING\n               STRING\n                   ERR-MSG-ID-04\n                     DELIMITED BY SIZE\n                   SPACE\n                     DELIMITED BY SIZE\n                 INTO\n                   ERR-MSG-WTO\n                 WITH POINTER\n                   ERR-MSG-LN\n               END-STRING\n           ELSE\n               STRING\n                   ERR-MSG-ID-05\n                     DELIMITED BY SIZE\n                   SPACE\n                     DELIMITED BY SIZE\n                 INTO\n                   ERR-MSG-WTO\n                 WITH POINTER\n                   ERR-MSG-LN\n               END-STRING\n           END-IF\n\n           STRING\n               CICS-APPL-ID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               EIBTRNID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MYNAME\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               THIS-USERID\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               QMGR-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-MQ-QUE-NM\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-MQ-FUNC\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               RSN-CD-DSPL-X\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               RSN-CD-TXT\n                 DELIMITED BY SPACE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n\n           IF MSG-TRUNCATED\n               PERFORM 9090-ADD-TRUNC-MSG\n           END-IF\n           .\n\n       9050-FMT-MSG-06.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9050-FMT-MSG-06'\n\n      * A CICS error has occurred.\n\n           MOVE SPACES TO ERR-MSG-WTO\n           MOVE +1     TO ERR-MSG-LN\n           CALL CICS-ERR-PGM USING\n               CICS-RESP\n               CICS-RESP-TXT\n           END-CALL\n           MOVE CICS-RESP  TO CICS-RESP-DSPL\n           MOVE CICS-RESP2 TO CICS-RESP2-DSPL\n           STRING\n               ERR-MSG-ID-06\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-APPL-ID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               EIBTRNID\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               MYNAME\n                 DELIMITED BY SIZE\n               SPACE\n                 DELIMITED BY SIZE\n               THIS-USERID\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-API-FAILED\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-RESP-DSPL-X\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-RESP-TXT\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-RESP2-DSPL-X\n                 DELIMITED BY SPACE\n               SPACE\n                 DELIMITED BY SIZE\n               CICS-API-FAILED-LOC\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n\n           IF HAVE-ERR-MSG-SUFX\n               STRING\n                   SPACE\n                     DELIMITED BY SIZE\n                   ERR-MSG-WTO-SUFX(1:ERR-MSG-SUFX-LN)\n                     DELIMITED BY SIZE\n                 INTO\n                   ERR-MSG-WTO\n                 WITH POINTER\n                   ERR-MSG-LN\n               END-STRING\n           END-IF\n           .\n\n       9090-ADD-TRUNC-MSG.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9090-ADD-TRUNC-MSG'\n\n           STRING\n               SPACE\n                 DELIMITED BY SIZE\n               ERR-MSG-TXT06\n                 DELIMITED BY SIZE\n             INTO\n               ERR-MSG-WTO\n             WITH POINTER\n               ERR-MSG-LN\n           END-STRING\n           .\n\n       9100-WTO.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9100-WTO'\n\n      *\n      *    The NOHANDLE is here because if an error occurs during\n      *    error processing, an abend is too likely to create an\n      *    abend loop.\n      *\n           EXEC CICS\n                WRITE OPERATOR\n                TEXT(ERR-MSG-WTO)\n                TEXTLENGTH(ERR-MSG-LN)\n                NOHANDLE\n           END-EXEC\n           .\n\n       9110-GETMAIN.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9110-GETMAIN'\n\n           MOVE 'GETMAIN' TO CICS-API-FAILED\n           MOVE '9110'    TO CICS-API-FAILED-LOC\n\n\n           EXEC CICS GETMAIN\n                SET(WS-MSG-PTR)\n                FLENGTH(WS-BUFR-LN)\n                RESP(CICS-RESP)\n                RESP2(CICS-RESP2)\n           END-EXEC\n           .\n\n       9120-FREEMAIN.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 9120-FREEMAIN'\n\n           MOVE 'FREEMAIN' TO CICS-API-FAILED\n           MOVE '9120'     TO CICS-API-FAILED-LOC\n\n           EXEC CICS FREEMAIN\n                DATAPOINTER(WS-MSG-PTR)\n                RESP(CICS-RESP)\n                RESP2(CICS-RESP2)\n           END-EXEC\n           .\n\nDebug *9910-DSPL-CMP-RSN-CD.\nDebug *    MOVE LS-CMPN-CD TO CD-DSPL\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        'MQCC = '\nDebug *        CD-DSPL-X\nDebug *    MOVE LS-RSN-CD TO CD-DSPL\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        'MQRC = '\nDebug *        CD-DSPL-X\nDebug *    .\nDebug *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "J7200507": {"ttr": 5, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x040\\x8f\\x01\\x041?\\x12G\\x00\\xb1\\x00\\xec\\x00\\x00\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-08T12:47:00", "lines": 177, "newlines": 236, "modlines": 0, "user": "DOTCWS"}, "text": "       Identification Division.\n       Program-ID.    J7200507.\n       Author.        Craig Schneiderwent.\n      *\n      *\n      * Sample Use:\n      *\n      * Working-Storage Section.\n      * ...\n      * COPY J7200507 REPLACING ==:PRFX:== BY ==J7200507-==.\n      * ...\n      * Procedure Division.\n      * CALL MQ-INQ-PGM USING\n      *     HCONN\n      *     J7200507-SELECTORCOUNT\n      *     J7200507-SELECTORS-TABLE\n      *     J7200507-INTATTRCOUNT\n      *     J7200507-INTATTRS-TABLE\n      *     J7200507-CHARATTRLENGTH\n      *     J7200507-CHARATTRS-TABLE\n      *     WS-CMQODV-INQ\n      *     WS-CMPN-CD\n      *     WS-RSN-CD\n      * END-CALL\n      *\n      * IF WS-CMPN-CD = MQCC-OK\n      *     inquiry was successful\n      * ELSE\n      *     error processing\n      * END-IF\n      *\n      * Return Codes:\n      *\n      * INFO-RETRIEVED-OK           VALUE +0.\n      * MQ-ERROR                    VALUES +10 THRU +19.\n      * OPEN-FAILED                 VALUE +11.\n      * INQUIRE-FAILED              VALUE +12.\n      * CLOSE-FAILED                VALUE +13.\n      *\n      *\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME                  PIC X(008) VALUE 'J7200507'.\n           05  MQ-API-PGMS.\n               COPY CMQAPIDC.\n           05  WS-CMQV.\n               COPY CMQV.\n\n       Local-Storage Section.\n       01  WORK-AREAS.\n           05  OPEN-OPTIONS            PIC S9(008) COMP-5 VALUE +0.\n           05  CLOSE-OPTIONS           PIC S9(008) COMP-5 VALUE +0.\n           05  HOBJ                    PIC S9(008) COMP-5.\n           05  SAVE-RC                 PIC S9(008) COMP-5 VALUE +0.\n               88  INFO-RETRIEVED-OK           VALUE +0.\n               88  MQ-ERROR                    VALUES +10 THRU +19.\n               88  OPEN-FAILED                 VALUE +11.\n               88  INQUIRE-FAILED              VALUE +12.\n               88  CLOSE-FAILED                VALUE +13.\n\n       Linkage Section.\n       01  DFHCOMMAREA.\n           05  LS-HCONN    PIC S9(008) COMP-5.\n       COPY J7200507 REPLACING ==:PRFX:== BY ==LS-==.\n       01  LS-MQOD.\n       COPY CMQODL.\n       01  LS-CMPN-CD  PIC S9(008) COMP-5.\n       01  LS-RSN-CD   PIC S9(008) COMP-5.\n\n       Procedure Division Using\n           DFHCOMMAREA\n           LS-SELECTORCOUNT\n           LS-SELECTORS-TABLE\n           LS-INTATTRCOUNT\n           LS-INTATTRS-TABLE\n           LS-CHARATTRLENGTH\n           LS-CHARATTRS-TABLE\n           LS-MQOD\n           LS-CMPN-CD\n           LS-RSN-CD\n           .\n\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' Begin'\n\n           COMPUTE OPEN-OPTIONS =\n               MQOO-INQUIRE +\n               MQOO-FAIL-IF-QUIESCING\n           MOVE MQCO-NONE      TO CLOSE-OPTIONS\n\n           PERFORM 8010-OPEN\n\n           IF LS-CMPN-CD = MQCC-OK\n               PERFORM 8020-INQUIRE\n               IF LS-CMPN-CD = MQCC-OK\n                   PERFORM 8030-CLOSE\n               END-IF\n           END-IF\n\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' End'\n\n           MOVE SAVE-RC TO RETURN-CODE\n           GOBACK\n           .\n\n       8010-OPEN.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8010-OPEN'\n\n           CALL MQOPEN USING\n               LS-HCONN\n               LS-MQOD\n               OPEN-OPTIONS\n               HOBJ\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET OPEN-FAILED TO TRUE\n           END-IF\n           .\n\n       8020-INQUIRE.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8020-INQUIRE'\n\n           CALL MQINQ USING\n               LS-HCONN\n               HOBJ\n               LS-SELECTORCOUNT\n               LS-SELECTORS-TABLE\n               LS-INTATTRCOUNT\n               LS-INTATTRS-TABLE\n               LS-CHARATTRLENGTH\n               LS-CHARATTRS-TABLE\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET INQUIRE-FAILED TO TRUE\n           END-IF\n           .\n\n       8030-CLOSE.\nDebug *    DISPLAY\nDebug *        MYNAME\nDebug *        ' 8030-CLOSE'\n\n           CALL MQCLOSE USING\n               LS-HCONN\n               HOBJ\n               CLOSE-OPTIONS\n               LS-CMPN-CD\n               LS-RSN-CD\n           END-CALL\n\n           IF LS-CMPN-CD = MQCC-OK\n               CONTINUE\n           ELSE\n               SET CLOSE-FAILED TO TRUE\n           END-IF\n           .\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "J7200508": {"ttr": 7, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x01\\x00\\x00\\x01\\x042\\x8f\\x01\\x05\\x08\\x0f\\x15\\x02\\x00n\\x03\\xc0\\x00\\x01\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "02.01", "flags": 0, "createdate": "2004-11-23T00:00:00", "modifydate": "2005-03-21T15:02:00", "lines": 110, "newlines": 960, "modlines": 1, "user": "DOTCWS"}, "text": "       Identification Division.\n       Program-ID.    J7200508.\n       Author.        Craig Schneiderwent.\n      *\n      * The purpose of this program is to examine a string of bytes and\n      * output their hex codes in readable format.\n      *\n      * Input:  x'01234567'\n      * Output: x'F0F1F2F3F4F5F6F7'\n      *\n      * The output string must be twice the length of the input string.\n      *\n      * The length of the input string must not exceed 16K.\n      *\n      * This module is dynamically callable in CICS or batch.\n      *\n      * Sample Usage:\n      *\n      * Working-Storage Section.\n      * 01  CONSTANTS.\n      *     05  HEX-CONV-PGM PIC X(008) VALUE 'J7200508'.\n      *\n      * 01  WORK-AREAS.\n      *     05  STRING-LN PIC S9(008) COMP-5.\n      *     05  A-STRING  PIC X(008).\n      *     05  X-STRING  PIC X(016).\n      *\n      * Procedure Division.\n      * MOVE LENGTH OF A-STRING TO STRING-LN\n      * MOVE X'0123456789ABCDEF' TO A-STRING\n      * CALL HEX-CONV-PGM USING\n      *     STRING-LN\n      *     A-STRING\n      *     X-STRING\n      * END-CALL\n      *\n      *\n       Environment Division.\n       Data Division.\n       Working-Storage Section.\n       01  CONSTANTS.\n           05  MYNAME                  PIC X(008) VALUE 'J7200508'.\n           05  HEX-CODE-VAL.\n               10                      PIC X(160)\n                                 VALUE '000102030405060708090A0B0C0D0E0F\n      -                                '101112131415161718191A1B1C1D1E1F\n      -                                '202122232425262728292A2B2C2D2E2F\n      -                                '303132333435363738393A3B3C3D3E3F\n      -                             '404142434445464748494A4B4C4D4E4F'.\n               10                      PIC X(160)\n                                 VALUE '505152535455565758595A5B5C5D5E5F\n      -                                '606162636465666768696A6B6C6D6E6F\n      -                                '707172737475767778797A7B7C7D7E7F\n      -                                '808182838485868788898A8B8C8D8E8F\n      -                             '909192939495969798999A9B9C9D9E9F'.\n               10                      PIC X(160)\n                                 VALUE 'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF\n      -                                'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF\n      -                                'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF\n      -                                'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF\n      -                             'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'.\n               10                      PIC X(032)\n                              VALUE 'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'.\n           05  HEX-CODE-TBL\n               REDEFINES\n               HEX-CODE-VAL\n               OCCURS 256              PIC X(002).\n\n       Local-Storage Section.\n       01  WORK-AREAS.\n           05  WS-HEX-TBL-SUB          PIC S9(008) COMP-5 VALUE +0.\n           05  WS-HEX-TBL-SUB-X\n               REDEFINES\n               WS-HEX-TBL-SUB.\n               10                      PIC X(003).\n               10  WS-HEX-TBL-SUB-LOW-BYTE\n                                       PIC X(001).\n           05  WS-HEX-STRN-SUB         PIC S9(008) COMP-5 VALUE +0.\n           05  WS-HEX-STRN-OUT-LN      PIC S9(008) COMP-5.\n\n       Linkage Section.\n       01  LS-HEX-STRN-IN-LN PIC S9(008) COMP-5.\n       01  LS-HEX-STRN-IN.\n           05  LS-HEX-STRN-IN-TBL\n               OCCURS 1 TO 16384 DEPENDING ON LS-HEX-STRN-IN-LN\n               PIC X(001).\n       01  LS-HEX-STRN-OUT.\n           05  LS-HEX-STRN-OUT-TBL\n               OCCURS 1 TO 32768 DEPENDING ON WS-HEX-STRN-OUT-LN\n               PIC X(002).\n\n       Procedure Division Using\n           LS-HEX-STRN-IN-LN\n           LS-HEX-STRN-IN\n           LS-HEX-STRN-OUT\n           .\n\n           COMPUTE WS-HEX-STRN-OUT-LN = LS-HEX-STRN-IN-LN * 2\n           PERFORM VARYING WS-HEX-STRN-SUB FROM 1 BY 1\n           UNTIL WS-HEX-STRN-SUB > LS-HEX-STRN-IN-LN\n               MOVE +0 TO WS-HEX-TBL-SUB\n               MOVE LS-HEX-STRN-IN-TBL(WS-HEX-STRN-SUB)\n                 TO WS-HEX-TBL-SUB-LOW-BYTE\n               ADD  1 TO WS-HEX-TBL-SUB\n               MOVE HEX-CODE-TBL(WS-HEX-TBL-SUB)\n                 TO LS-HEX-STRN-OUT-TBL(WS-HEX-STRN-SUB)\n           END-PERFORM\n           GOBACK\n           .\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "QUICKREF": {"ttr": 12, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00W\\x01\\x07\\x12?\\x01\\x07\\x13\\x8f\\x14X\\x01x\\x00\\xf5\\x00\\x00\\xc4\\xd6\\xe3\\xc3\\xe6\\xe2@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2007-05-03T00:00:00", "modifydate": "2007-05-18T14:58:57", "lines": 376, "newlines": 245, "modlines": 0, "user": "DOTCWS"}, "text": "K V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0001I\n  Message Format: UDOT0001I Abend AbendCd JobNm JobNb LMod PgmNm Step1\n                            Step2 UserID SysID\n\n     Description: This informational message is issued when an application\n                  program intentionally abends by calling the JABEND2\n                  subroutine.\n\n                  This message includes the following information:\n\n                  AbendCd  four character representation of the numeric\n                           abend code requested by the calling application\n                  JobNm    The name of the job as given on the jobcard\n                  JobNb    The job number assigned by JES\n                  LMod     The load module being executed, from the\n                           EXEC PGM= for the jobstep\n                  PgmNm    Self-identification, name passed by the calling\n                           program\n                  Step1    Proc step name (if a proc is being executed,\n                           otherwise spaces)\n                  Step2    Job step name\n                  UserID   The userid submitting the job\n                  SysID    SMF sysid of the LPAR on which the job ran\n\n                  If the calling application passed a DB2 SQLCA structure,\n                  the formatted SQLCA and attendant error messages will\n                  follow the UDOT0001I message.\n\n     User Action: Use the abend code and the source listing for the PgmNm\n                  application program to determine the reason the abend\n                  was requested.  Correct the error.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0002I\n  Message Format: UDOT0002I ApplID TranID PgmNm UserID Poison message in\n                            queue QmgrNm QueNm from SendUID via SendPrcs\n                            requeued to ReQNm MsgID=x\"mmmm...\"\n                            CorrelID=x\"cccc...\" {with truncation}\n\n     Description: This informational message is issued by PgmNm when it\n                  has requeued an MQSeries message due to the queue's\n                  backout threshold having been reached for this message.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  QmgrNm   Name of the queue manager that owns QueNm\n                  QueNm    Name of the queue from which the message has\n                           been removed\n                  SendUID  Sending user ID of the requeued message, from\n                           the MQMD-USERIDENTIFIER in the MQMD structure\n                  SendPrcs Sending appliation name of the requeued\n                           message, from the MQMD-PUTAPPLNAME in the MQMD\n                           structure\n                  ReQNm    Name of the queue in which the message has been\n                           placed\n                  mmmm...  Hex representation of the MQMD-MSGID from the\n                           MQMD structure\n                  cccc...  Hex representation of the MQMD-CORRELID from\n                           the MQMD structure\n\n                  If sufficient storage was unavailable to retrieve the\n                  message in order to requeue it, the text \"with\n                  truncation\" is appended to the UDOT0002I message.\n\n     User Action: The message has been requeued to the indicated queue.\n                  Prior backouts (abends or SYNCPOINT ROLLBACKs) gave rise\n                  to the backout threshold being reached.  The cause of\n                  these backouts should be investigated and resolved to\n                  prevent this situation in the future.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0002E\n  Message Format: UDOT0002E ApplID TranID PgmNm UserID Poison message in\n                            queue QmgrNm QueNm from SendUID via SendPrcs\n                            not requeued RsnCdTxt RsnCd MsgID=x\"mmmm...\"\n                            CorrelID=x\"cccc...\"\n\n     Description: This error message is issued by PgmNm when it has\n                  attempted to requeue an MQSeries message due to the\n                  queue's backout threshold having been reached for\n                  this message and has encountered an MQSeries error in\n                  the process of requeueing.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  QmgrNm   Name of the queue manager that owns QueNm\n                  QueNm    Name of the queue from which the message has\n                           been removed\n                  SendUID  Sending user ID of the requeued message, from\n                           the MQMD-USERIDENTIFIER in the MQMD structure\n                  SendPrcs Sending appliation name of the requeued\n                           message, from the MQMD-PUTAPPLNAME in the MQMD\n                           structure\n                  RsnCdTxt Descriptive text corresponding to the MQSeries\n                           reason code\n                  RsnCd    MQSeries reason code\n                  mmmm...  Hex representation of the MQMD-MSGID from the\n                           MQMD structure\n                  cccc...  Hex representation of the MQMD-CORRELID from\n                           the MQMD structure\n\n     User Action: In attempting to requeue the message, it has been lost.\n                  Prior backouts (abends or SYNCPOINT ROLLBACKs) gave rise\n                  to the backout threshold being reached.  The cause of\n                  these backouts should be investigated and resolved to\n                  prevent this situation in the future.\n                  This message may be accompanied by UDOT0003W, UDOT0003E,\n                  and/or UDOT0004E messages which indicate the root cause\n                  of the failure.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0002W\n  Message Format: UDOT0002W ApplID TranID PgmNm UserID Poison message in\n                            queue QmgrNm QueNm from SendUID via SendPrcs\n                            not requeued MsgID=x\"mmmm...\"\n                            CorrelID=x\"cccc...\"\n\n     Description: This warning message is issued by PgmNm when it has\n                  attempted to requeue an MQSeries message due to the\n                  queue's backout threshold having been reached for\n                  this message and the queue definition does not specify\n                  a backout requeue queue name.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  QmgrNm   Name of the queue manager that owns QueNm\n                  QueNm    Name of the queue from which the message has\n                           been removed\n                  SendUID  Sending user ID of the requeued message, from\n                           the MQMD-USERIDENTIFIER in the MQMD structure\n                  SendPrcs Sending appliation name of the requeued\n                           message, from the MQMD-PUTAPPLNAME in the MQMD\n                           structure\n                  mmmm...  Hex representation of the MQMD-MSGID from the\n                           MQMD structure\n                  cccc...  Hex representation of the MQMD-CORRELID from\n                           the MQMD structure\n\n     User Action: In attempting to requeue the message, PgmNm determined\n                  there was no backout requeue queue.  The message has\n                  been lost.\n                  Prior backouts (abends or SYNCPOINT ROLLBACKs) gave rise\n                  to the backout threshold being reached.  The cause of\n                  these backouts should be investigated and resolved to\n                  prevent this situation in the future.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0003W\n  Message Format: UDOT0003W ApplID TranID PgmNm UserID QmgrNm QueNm\n                            MQFunc RsnCdTxt RsnCd\n\n     Description: This warning message is issued by PgmNm when it has\n                  encountered an MQSeries warning.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  QmgrNm   Name of the queue manager that owns QueNm\n                  QueNm    Name of the queue currently being processed\n                  MQFunc   MQSeries function name reporting the error\n                  RsnCdTxt Descriptive text corresponding to the MQSeries\n                           reason code\n                  RsnCd    MQSeries reason code\n\n     User Action: In the course of calling MQFunc, a warning condition\n                  was raised.  This message may be accompanied by other\n                  warning or error messages from the same PgmNm or TranID.\n                  Use the program listing and the system log to determine\n                  the cause of the warning.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0003E\n  Message Format: UDOT0003E ApplID TranID PgmNm UserID QmgrNm QueNm\n                            MQFunc RsnCdTxt RsnCd\n\n     Description: This error message is issued by PgmNm when it has\n                  encountered an MQSeries error.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  QmgrNm   Name of the queue manager that owns QueNm\n                  QueNm    Name of the queue currently being processed\n                  MQFunc   MQSeries function name reporting the error\n                  RsnCdTxt Descriptive text corresponding to the MQSeries\n                           reason code\n                  RsnCd    MQSeries reason code\n\n     User Action: In the course of calling MQFunc, an error condition\n                  was raised.  This message may be accompanied by other\n                  warning or error messages from the same PgmNm or TranID.\n                  Use the program listing and the system log to determine\n                  the cause of the error.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0004E\n  Message Format: UDOT0004E ApplID TranID PgmNm UserID CICSAPI RespTxt\n                            Resp Resp2 Loc {Suffix}\n\n     Description: This error message is issued by PgmNm when it has\n                  encountered an unexpected CICS RESP value.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  CICSAPI  Name of the CICS API call that resulted in\n                           the error\n                  RespTxt  Descriptive text corresponding to the CICS\n                           RESP code\n                  Resp     CICS API RESP numeric value\n                  Resp2    CICS API RESP2 numeric value\n                  Loc      Location in PgmNm where the error occurred\n                  Suffix   Optional information the application may include\n                           to aid in debugging\n\n                  Some errors have additional information suffixed to the\n                  end of the UDOT0004E message.  For example, if a GETMAIN\n                  fails, the application may append a suffix indicating\n                  the amount of storage requested.\n\n     User Action: In the course of executing CICSAPI, an error condition\n                  was raised.  This message may be accompanied by other\n                  warning or error messages from the same PgmNm or TranID.\n                  Use the program listing and the system log to determine\n                  the cause of the warning.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0005I\n  Message Format: UDOT0005I ApplID TranID PgmNm UserID NNNN SQLfunc Loc\n\n     Description: This error message is issued by PgmNm when it has\n                  encountered an SQL deadlock or resource unavailable condition\n                  and is attempting to recover.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  NNNN     Retry count\n                  SQLfunc  The SQL function that resulted in the deadlock or\n                           resource unavailable condition\n                  Loc      Location in PgmNm where the error occurred\n\n     User Action: In the course of executing SQLfunc, a deadlock or resource\n                  unavalable condition was raised.  This message may be\n                  accompanied by other warning or error messages from the same\n                  PgmNm or TranID.  Use the program listing and the system log\n                  to determine the cause of the warning.  The JESMSGLG for the\n                  DB2 started task may contain applicable information.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0005E\n  Message Format: UDOT0005E ApplID TranID PgmNm UserID NNNN SQLfunc Loc\n\n     Description: This error message is issued by PgmNm when it has\n                  encountered an SQL deadlock or resource unavailable condition\n                  and cannot recover.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  NNNN     Retry count\n                  SQLfunc  The SQL function that resulted in the deadlock or\n                           resource unavailable condition\n                  Loc      Location in PgmNm where the error occurred\n\n     User Action: In the course of executing SQLfunc, a deadlock or resource\n                  unavalable condition was raised.  This message may be\n                  accompanied by other warning or error messages from the same\n                  PgmNm or TranID, most notably there may be one or more\n                  instances of message UDOT0005I prior to this message.  Use the\n                  program listing and the system log to determine the cause of\n                  the warning.  The JESMSGLG for the DB2 started task may\n                  contain applicable information.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0006E\n  Message Format: UDOT0006E ApplID TranID PgmNm UserID RetCd CalldPgm Loc {Txt}\n\n     Description: This error message is issued by PgmNm when it has\n                  called CalldPgm and received an unexpected return code.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  RetnCd   Return code from CalldPgm\n                  CalldPgm The called program that returned an unexpected\n                           return code\n                  Loc      Location in PgmNm where the error occurred\n                  Txt      Optional text further explaining the error\n\n     User Action: After a CALL (or LINK) to CalldPgm, an unexpected return code\n                  was encountered.  This message may be accompanied by other\n                  warning or error messages from the same PgmNm or from\n                  CalldPgm.  Use the program listing and the system log to\n                  determine the cause of the error.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0007E\n  Message Format: UDOT0007E ApplID TranID PgmNm UserID SQLCode Loc SQLfunc\n\n     Description: This error message is issued by PgmNm when it has encountered\n                  an unexpected SQLCode at location Loc while executing the\n                  function SQLfunc.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  SQLCode  The unexpected SQLCODE\n                  Loc      Location in PgmNm where the error occurred\n                  SQLfunc  The SQL function that resulted in the deadlock or\n                           resource unavailable condition\n\n     User Action: After attempting to execute SQLfunc, PgmNm encountered the\n                  unexpected SLQCODE SQLCode.  This message is followed by\n                  the SQLCA as formatted by DSNTIAC.  This message may be\n                  accompanied by other warning or error messages from the same\n                  PgmNm.  Use the program listing and the system log to\n                  determine the cause of the error.  The JESMSGLG for the DB2\n                  started task may contain applicable information.\n\nK V='WI DOT' P='DOT MESSAGES' R='1.1' I=UDOT0008E\n  Message Format: UDOT0008E ApplID TranID PgmNm UserID Txt\n\n     Description: This error message is issued by PgmNm when it has encountered\n                  a violation of an internal \"sanity\" check.  A loop may have\n                  gone on for too many interations, or a coded value may be too\n                  high or too low.  Txt further explains the error.\n\n                  This message includes the following information:\n\n                  ApplID   CICS applID of the region in which the event\n                           occurred\n                  TranID   EIBTRNID of the application\n                  PgmNm    Program name encountering the error\n                  UserID   User ID under which the transaction executed\n                  Txt      Text further explaining the error\n\n     User Action: This message is issued when PgmNm has encountered an internal\n                  \"sanity\" check violation.  This message may be accompanied by\n                  other warning or error messages from PgmNm.  Use the program\n                  listing and the system log to determine the cause of the\n                  error.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT788/CBT.V500.FILE788.PDS/MA1KSRC.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT788/CBT.V500.FILE788.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}