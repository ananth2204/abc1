{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012122000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 587860, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "CBT.V500.FILE467.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 587860, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE467.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0b\\x18'", "DS1TRBAL": "b'G\\x96'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03m\\x00\\n\\x03n\\x00\\x06\\x00\\x0c'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$BR": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |      THE 'BR' COMMAND      |\n                      ------------------------------\n+\n     There are times you may want to browse a dataset using PDF browse,\n     without leaving your current ISPF screen/function.  Enter the command\n     'BR' followed by the dataset name you want to browse.\n\n     There are no abbreviations or aliases for the BR command.\n\n%SYNTAX:\n     BR dsname PASSWORD(pswd)\n\n+    Password is an optional keyword.\n     For example:\n         BR XXX.COBOL           -will Browse XXX.COBOL\n)PROC\n &ZUP = $BR\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$BREAKSE": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL--------------  BREAKPOINT SET PANEL  ------------------------ TUTORIAL\n%NEXT SELECTION ===>_ZCMD\n+\n      This Dialog allows users to specify a category of dialog services.\n      The purpose of this is to prefill the option 7.8 screen with these\n      services so users don't have to pre-fill the screen by hand.\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$COMMAND": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |   THE 'COMMANDS' COMMAND     |\n                      --------------------------------\n+\n     By entering this command from any screen, a list of the current\n     ISPF Commands available are displayed. You probably got to this\n     screen from the list of valid COMMANDS.\n\n     There are no abbreviations or aliases for the COMMANDS command.\n\n%SYNTAX:\n     COMMANDS\n\n)PROC\n &ZUP = $COMMAND\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CURSOR": {"ttr": 522, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DOWN": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DSM": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                     -----------------------------------\n                      |        DSM TUTORIAL MENU        |\n                      -----------------------------------\n+\n The following topics are presented in sequence, or may be selected by number\n+\n%  1+ OVERVIEW           General Description of the DSM Facility\n%  2+ CONTROL DATASET    Describe its requirements and functions\n%  3+ PRIMARY COMMANDS   List and Description of supported Primary Commands\n%  4+ LINE COMMANDS      List and Description of supported Line Commands\n+\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                 1,DSNHMGF1\n                 2,DSNHMGF2\n                 3,DSNHMGF3\n                 4,DSNHMGF4\n                )\n &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DSNLIST": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL--------------  DSNLIST - ENTRY PANEL  ----------------------- TUTORIAL\n%NEXT SELECTION ===>_ZCMD\n+\n      This panel is used to enter PDF Edit, Browse or the PDS command.\n\n      This screen will maintain all the dataset names entered.  To select a\n      particular dataset, simply enter its letter in the first field. If it\n      is a partitioned dataset and no member is specified, you'll be shown\n      a member list.\n\n     %Select Member:+is used to override the member specification of the\n      first eight dataset names.  If it is%*+then the member list will be\n      displayed regardless of the contents of%Member.+\n\n)PROC\n &ZUP = DSNH\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$ED": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |      THE 'ED' COMMAND      |\n                      ------------------------------\n+\n     There are times you may want to edit a dataset using PDF Edit, without\n     leaving your current ISPF screen/function.  Enter the command 'ED'\n     followed by the dataset name you want to edit.\n\n     There are no abbreviations or aliases for the ED command.\n\n%SYNTAX:\n     ED dsname PROFILE(edit profile) MACRO(edit macro) PASSWORD(pswd)\n\n+    Profile, Macro and Password are all optional.\n     For example:\n         ED XXX.COBOL           -will edit XXX.COBOL\n\n         ED XXX.DATA PR(COBOL)  -will edit XXX.DATA\n                                 the Edit Profile COBOL will be used.\n)PROC\n &ZUP = $ED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$END": {"ttr": 532, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$HELP": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$HOLD": {"ttr": 536, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |   THE 'HOLD' COMMAND       |\n                      ------------------------------\n+\n     ISPF has the capability of invoking 2 sessions (split screens). This\n     command allows the user to put his current half of a split screen\n     into a HOLD status and invoke ISPF from the Primary Option panel.\n\n     You can think of the HOLD command as invoking ISPF recursively.\n\n     When you exit the new level of the Primary Option panel (=X), you\n     will return with function you had been executing.\n\n     The command may be entered with an ISPF option. For example, 'hold\n     6' will bring you to a fresh TSO screen. When you type '=X', you\n     will return to your current function.\n\n     The HOLD command has no abbreviations or aliases.\n\n)PROC\n &ZUP = $HOLD\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$IBM": {"ttr": 538, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$KBR": {"ttr": 540, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |     THE 'KBR' COMMAND      |\n                      ------------------------------\n+\n     Currently, ISPF/PDF has no feature that allows a user to Browse a\n     dataset if the user knows only the DDname allocated to it. This\n     command allows a user to edit a dataset by specifying the DDname.\n     For Example:  KBR SYSIN (invokes browse on the file allocated to SYSIN)\n\n     If the DDname points to a PDS, you may request a member by enclosing\n     it in parentheses.\n     For Example:  KBR JCLPDS(DUMPER)\n\n\n\n+                         (Press%ENTER+to continue)\n)PROC\n   &ZCONT = $KBR$2\n   &ZUP = $KBR\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$KBR$2": {"ttr": 542, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ---------------------------------\n                      | THE 'KBR' COMMAND (continued) |\n                      ---------------------------------\n+\n     If the DDname points to a concatenation, a Dataset List will be\n     displayed. The user can then select the file he wishes to Browse.\n     For Example:  KBR SYSPROC\n\n  -BROWSE BY DDNAME --------------------------------------------------------\n  ...\n  CMD   DATASETS ALLOCATED TO SYSPROC:\n  --    -------------------------------\n  --    'LIB 1'\n  --    'LIB 2'\n  ...\n     Finally, in the above example, if a member name is specified, the list\n     of datasets will be limited to those containing that member. If only\n     one library contains the member, you will enter BROWSE directly on that\n     member. You may code the FIRST operand and bypass the display\n     completely.\n     For Example:  KBR SYSPROC FIRST\n)PROC\n &ZUP = $KBR\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$KED": {"ttr": 544, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |     THE 'KED' COMMAND      |\n                      ------------------------------\n+\n     Currently, ISPF/PDF has no feature that allows a user to EDIT a\n     dataset if the user knows only the DDname allocated to it. This\n     command allows a user to edit a dataset by specifying the DDname.\n     For Example:  KED SYSIN (invokes edit on the file allocated to SYSIN)\n\n     Optionally, a profile  or edit macro may be specified:\n     For Example:  KED SYSIN PROFILE(CLIST)\n\n     If the DDname points to a PDS, you may request a member by enclosing\n     it in parentheses.\n     For Example:  KED JCLPDS(DUMPER)  or KED JCLPDS(DUMPER) PROFILE(CNTL)\n\n\n\n+                         (Press%ENTER+to continue)\n)PROC\n   &ZCONT = $KED$2\n   &ZUP = $KED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$KED$2": {"ttr": 546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ---------------------------------\n                      | THE 'KED' COMMAND (continued) |\n                      ---------------------------------\n+\n     If the DDname points to a concatenation, a Dataset List will be\n     displayed. The user can then select the file he wishes to Edit.\n     For Example:  KED SYSPROC PROFILE(CLIST)\n\n  -EDIT BY DDNAME --------------------------------------------------------\n  ...\n  CMD   DATASETS ALLOCATED TO SYSPROC:\n  --    -------------------------------\n  --    'LIB 1'\n  --    'LIB 2'\n  ...\n     Finally, in the above example, if a member name is specified, the list\n     of datasets will be limited to those containing that member. If only\n     one library contains the member, you will enter edit directly on that\n     member. You may code the FIRST operand and bypass the display\n     completely.\n     For Example:  KED SYSPROC PROFILE(CLIST) FIRST\n)PROC\n &ZUP = $KED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$KEYS": {"ttr": 548, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LEFT": {"ttr": 550, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LISTA": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY DEFAULT(%?_)\n%TUTORIAL------------------  ISPF LISTA COMMAND  -----------------------TUTORIAL\n%COMMANDS ===>_ZCMD\n?\n    Similar to the TSO LISTA command, this function lists all allocated\n    dsnames and the ddnames they are allocated to.\n\n%Primary Commands:\n  %COMPRESS?- Compresses the display. Only the first dataset in concatenation\n              is displayed. CMP is an ALIAS for COMPRESS.\n\n  %FULL    ?- Exapnds the display. Will \"undo\" the Compress feature.\n  %LOCATE  ?- Locates a specified DDname (or part of a DDname).\n\n%Line Commands:\n  %F?       - Free the DDname and refresh the screen display.\n  %E?       - Edit the dataset.\n  %B?       - Browse the dataset.\n  %P?       - Invoke the PDS Command.\n  %S?       - Display Dataset Allocation Attributes (DSAT)\n  %H?       - Print the Dataset (PRINTOFF)\n  %D?       - Check for Enques on the dataset (DSD)\n\n%NOTE:?\"+\" indicates datasets which are part of a concatenation.\n)PROC\n &ZUP = LSTHA\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$LOGMSG": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     -------------------------------\n                      |    THE 'LOGMSG' COMMAND     |\n                      -------------------------------\n+\n     The LOGMSG command is used to record user data into the ISPF log.\n     This enables a user to mark his log at given points within testing\n     a dialog.\n\n     There are no abbreviations or aliases for the LOGMSG command.\n\n%SYNTAX:\n     LOGMSG  < optional log message  >\n\n+    If the user enters LOGMSG with other text, the text is recorded into\n     the log and the user continues his work. When entering LOGMSG without\n     any operands, a screen is displayed allowing the user to records large\n     amounts of data into the users ISPF log.\n\n)PROC\n &ZUP = $LOGMSG\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$NOP": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PANELID": {"ttr": 775, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PFKINIT": {"ttr": 777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |    THE 'PFKINIT' COMMAND     |\n                      --------------------------------\n+\n     When creating an ISPF function, some vendors decide to set their\n     function up to run with a new set of Pfkeys. One example is JESMASTER.\n+\n     To set Jesmaster's Pfkeys to look identical to your regular Pfkeys for\n     the rest of ISPF, use this command while under JESMASTER. It will have\n     no affect under the rest of ISPF.\n\n%SYNTAX:\n     PFKINIT\n)PROC\n &ZUP = $PFKINIT\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$PRINT": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PRINT@H": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PRINTL": {"ttr": 783, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PRINTL@": {"ttr": 785, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PRINTLH": {"ttr": 787, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RCHANGE": {"ttr": 789, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RETURN": {"ttr": 791, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RFIND": {"ttr": 793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RIGHT": {"ttr": 795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$SECURE": {"ttr": 797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |    THE 'SECURE' COMMAND      |\n                      --------------------------------\n+\n     When using ISPF, if a user needs to leave the terminal unattended but\n     does not wish to allow other users to access his logged on session.\n     One reasonable example are the terminals around System Security.\n+\n     By typing in SECURE from any screen, a panel is displayed requesting a\n     password. Unless the password is entered, the session will not\n     continue. This screen has no affect on the TSO TIMER. You can still\n     get timed off.\n\n     First time users are displayed a screen where they can set their\n     password. The password does not have to be the same as your logon\n     password. If you forget your password, conctact Development Technical\n     Support to reset it.\n\n%SYNTAX:\n     SECURE\n)PROC\n &ZUP = $SECURE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$SPLIT": {"ttr": 799, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$SPLITV": {"ttr": 801, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$SUGGEST": {"ttr": 803, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |    THE 'SUGGEST' COMMAND     |\n                      --------------------------------\n+\n     Any bugs, suggestion or concerns users have with the current\n     operating environment may be directed to the support groups via the\n     suggestion box.\n+\n%SYNTAX:\n     SUGGEST\n)PROC\n &ZUP = $SUGGEST\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$SWAP": {"ttr": 805, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TSO": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$TSOCMD": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     -----------------------------\n                      |   THE 'TSOCMD' COMMAND    |\n                      -----------------------------\n+\n     Many times, users find a need to use the option 6 TSO screen for\n     a quick command.\n\n     By entering the TSOCMD command, the option 6 screen will be displayed,\n     the user can execute his TSO commands, he can then hit his end key and\n     return normal processing.  The TSOCMD screen can be exited by entering\n     cancel or hitting your END key.\n\n     The TSOCMD has no aliases or abbreviations.\n\n     The TSOCMD may also be entered similar to the TSO command. By entering\n     TSOCMD followed by a TSO command (e.g. TSOCMD ST), the option 6 screen\n     will be prefilled with the command and enter will be hit for the user.\n\n)PROC\n &ZUP = $TSOCMD\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$UP": {"ttr": 1029, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     --------------------------------\n                      |  IBM SUPPLIED ISPF COMMANDS  |\n                      --------------------------------\n+\n     The following is a list of the general ISPF commands supplied by IBM\n     with the ISPF product. Documentation on all of these commands may be\n     found in the IBM manual SC34-2089 called\n\n       \"INTERACTIVE SYSTEM PRODUCTIVITY FACILITY / PROGRAM REFERENCE\".\n\n     Direct any further questions to either Application Support at x6197\n     or Development Technical Support at x5719.\n\n           HELP           SPLIT          END            RETURN\n           RFIND          RCHANGE        UP             DOWN\n           SWAP           LEFT           RIGHT          CURSOR\n           PRINT-HI       TSO            KEYS           PRINT\n           PANELID        PRINTL         PRINTL-HI      SPLITV\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BRDDSN": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  \u00ac TYPE(INPUT) INTENS(NON)\n)BODY EXPAND(\u00a2\u00a2)\n%\u00a2-\u00a2  &FUNC - ENTRY PANEL  \u00a2-\u00a2\n%COMMAND ===>_ZCMD                                                             +\n%\n+ENTER PARTITIONED OR SEQUENTIAL DATA SET NAME\n+   DATA SET NAME %===>_DSN\n+   VOLUME SERIAL %===>_VOL   +  (if not cataloged)\n+\n)INIT\n)PROC\n   IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n   VER (&DSN,NB,DSNAME)\n   VER (&VOL,NAME)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BRKPE010": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  BREAKPOINT INITIALIZATIONS  -------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n+Specify groups of services to be included in table.\n+\n+  Include display services       %===>_DSP+  (YES or NO)\n+  Include table service          %===>_TBL+  (YES or NO)\n+  Include file tailoring services%===>_FLT+  (YES or NO)\n+  Include variable services      %===>_VAR+  (YES or NO)\n+  Include library services       %===>_LIB+  (YES or NO)\n+  Include miscellaneous services %===>_OTH+  (YES or NO)\n+\n+\n+Enter additional table data below.\n+\n+  When         %===>_Z    +        (BEFORE, AFTER, Rnn or leave blank)\n+  Function     %===>_ISRYBVF +     (function for which breakpoints are active)\n+  Active       %===>_Z  +          (YES or NO)\n+  Qualification%===>_ISRYBVQ                                                  +\n+\n)INIT\n  .CURSOR = ZCMD\n  .ZVARS  = '(ISRYBVW ISRYBVA)'\n  .HELP   = ISR7B000\n  &DSP     = 'NO '\n  &TBL     = 'NO '\n  &FLT     = 'NO '\n  &VAR     = 'NO '\n  &LIB     = 'NO '\n  &OTH     = 'NO '\n  &ISRYBVA = 'YES'\n  &ISRYBV1 = &Z\n)PROC\n  &DSP = TRANS (TRUNC (&DSP,1) Y,YES N,NO *,*)\n  VER (&DSP,NB,LIST,YES,NO)\n  &TBL = TRANS (TRUNC (&TBL,1) Y,YES N,NO *,*)\n  VER (&TBL,NB,LIST,YES,NO)\n  &FLT = TRANS (TRUNC (&FLT,1) Y,YES N,NO *,*)\n  VER (&FLT,NB,LIST,YES,NO)\n  &VAR = TRANS (TRUNC (&VAR,1) Y,YES N,NO *,*)\n  VER (&VAR,NB,LIST,YES,NO)\n  &LIB = TRANS (TRUNC (&LIB,1) Y,YES N,NO *,*)\n  VER (&LIB,NB,LIST,YES,NO)\n  &OTH = TRANS (TRUNC (&OTH,1) Y,YES N,NO *,*)\n  VER (&OTH,NB,LIST,YES,NO)\n  &T1 = TRUNC(&ISRYBVW,1)\n  &T2 = .TRAIL\n  IF (&T1 = 'R')\n     VER (&T2,NB,NUM)\n  IF (&T1 \u00ac= 'R')\n     &ISRYBVW = TRANS (TRUNC (&ISRYBVW,1) A,AFTER B,BEFORE ' ',' ' *,*)\n     VER (&ISRYBVW,LIST,AFTER,BEFORE)\n  &ISRYBVA = TRANS (TRUNC (&ISRYBVA,1) Y,YES N,NO *,*)\n  VER (&ISRYBVA,NB,LIST,YES,NO)\n  IF (&ISRYBVQ \u00ac= &Z)\n     &ISRYBV1 = '*QUAL*'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CMDB": {"ttr": 1035, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  \\  TYPE(OUTPUT)  INTENS(HIGH)\n  \u00a6  TYPE(INPUT)  INTENS(HIGH) CAPS(ON) PAD('_')\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  !  AREA(DYNAMIC)\n  $  TYPE(DATAOUT) INTENS(HIGH)\n  \u00a2  TYPE(DATAOUT) INTENS(LOW)\n)BODY\n%-----------------------  ISPF SYSTEM COMMANDS  --------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHSC+\n\n%     \"L\"+is the minimum number of characters of the command which must be\n+     entered.  If 0, the command has no abbreviation.\n+\n%     COMMAND  L    FUNCTION+   !COMMENT --------------------------------------!\n+                               !COMMEN2 --------------------------------------!\n)MODEL\n\u00a6Z\\Z @Z       @Z   @Z                                                          %\n)INIT\n  .ZVARS = '(LSEL TYPE ZCTVERB ZCTTRUNC ZCTDESC)'\n  .HELP = COMHMAN\n  &LSEL = &Z\n  &JHSC = &ZSCML\n  IF (&COMMENT \u00ac= &Z)\n      IF (&COMFTIME = &Z)\n        &COMMENT = '(&COMMENT- Command found in the &ZAPPLID Command Table)'\n        &COMMEN2 = '(&COMMEN2- Command found in &ZAPPLID and System Tables)'\n        &COMFTIME = ON\n)PROC\n IF (&ZCMD = 'SWPANEL')\n     &PANELID = CMDB1\n     &ZCMD = &Z\n &ZSCML = &JHSC\n VPUT (ZSCML) PROFILE\n IF (&ZTDSELS \u00ac= 0)\n     VER (&LSEL,LIST,S)\n     &TEMP = TRUNC (&ZCTVERB,7)\n     &CTVERB = '$&TEMP'\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CMDB1": {"ttr": 1037, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  \\  TYPE(OUTPUT)  INTENS(HIGH)\n  \u00a6  TYPE(INPUT)  INTENS(HIGH) CAPS(ON) PAD('_')\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  !  AREA(DYNAMIC)\n  $  TYPE(DATAOUT) INTENS(HIGH)\n  \u00a2  TYPE(DATAOUT) INTENS(LOW)\n)BODY\n%-----------------------  ISPF SYSTEM COMMANDS  --------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHSC+\n\n%     \"L\"+is the minimum number of characters of the command which must be\n+     entered.  If 0, the command has no abbreviation.\n+\n%     COMMAND  L    FUNCTION+   !COMMENT --------------------------------------!\n+                               !COMMEN2 --------------------------------------!\n)MODEL\n\u00a6Z\\Z @Z       @Z   @Z                                                          %\n              +===>@ZCTACT                                                     %\n)INIT\n  .ZVARS = '(LSEL TYPE ZCTVERB ZCTTRUNC ZCTDESC)'\n  .HELP = COMHMAN\n  &LSEL = &Z\n  &JHSC = &ZSCML\n  IF (&COMMENT \u00ac= &Z)\n      IF (&COMFTIME = &Z)\n        &COMMENT = '(&COMMENT- Command found in the &ZAPPLID Command Table)'\n        &COMMEN2 = '(&COMMEN2- Command found in &ZAPPLID and System Tables)'\n        &COMFTIME = ON\n)PROC\n IF (&ZCMD = 'SWPANEL')\n     &PANELID = CMDB\n     &ZCMD = &Z\n &ZSCML = &JHSC\n VPUT (ZSCML) PROFILE\n IF (&ZTDSELS \u00ac= 0)\n     VER (&LSEL,LIST,S)\n     &TEMP = TRUNC (&ZCTVERB,7)\n     &CTVERB = '$&TEMP'\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CNADKBR": {"ttr": 1039, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+?)\n/*********************************************************************/\n/*                                                                   */\n/*    BOB ZIMMERMAN                                                  */\n/*    CNA INSURANCE                                                  */\n/*    (312) 822 - 5719                                               */\n/*    LAST MODIFIED 8503                                             */\n/*                                                                   */\n/*********************************************************************/\n/*                                                                   */\n/*    THIS PANEL SUPPORTS THE BROWSE BY DDNAME FUNCTION.             */\n/*                                                                   */\n/*********************************************************************/\n  ! TYPE(OUTPUT) INTENS(HIGH)\n  # TYPE(INPUT) CAPS(ON) INTENS(HIGH) PAD('_')\n)BODY EXPAND(@@)\n%BROWSE - DDNAME &DDNAME @-@\n%COMMAND ===>?ZCMD                                             %SCROLL%==>?AMT %\n%\n+%S+- Browse Dsn/Member  %L+-Browse entire PDS (Member List)   %P+- PDS command\n%\n%Sel   Datasets allocated to &DDNAME                             %Volume\n+---   -------------------------------------------------------------------------\n)MODEL\n+#Z+  !Z                                                         !TABLEVOL     +\n)INIT\n  .ZVARS = '(LSEL TABLEDSN)'\n  &AMT = &ZSCML\n  &ZTDMARK = '********************** END OF DSNAME LIST FOR &DDNAME +\n              ***************************'\n  &ZTDMARK = TRUNC (&ZTDMARK,79)\n  &ZTDMSG = DTSM040\n  &UMSG40 = &Z\n  &LMSG40 = &Z\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG=ZCMD001\n IF (&ZTDSELS \u00ac= 0)\n    VER (&LSEL,LIST,S,L,P)\n    IF (&LSEL = P)\n       &TEMP = TRUNC (&TABLEDSN,'(')\n       &TRAIL = .TRAIL\n       IF (&TRAIL \u00ac= &Z)\n          &TEMP = '&TEMP'''\n       &PDSCMD = 'PGM(PDS) PARM(PDS &TEMP VOL(&TABLEVOL) MEMLIST :)'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CNADKED": {"ttr": 1041, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+?)\n/*********************************************************************/\n/*   BOB ZIMMERMAN                                                   */\n/*   CNA INSURANCE                                                   */\n/*   (312) 822 - 5719                                                */\n/*   LAST MODIFIED 8503                                              */\n/*                                                                   */\n/*********************************************************************/\n  ! TYPE(OUTPUT) INTENS(HIGH)\n  # TYPE(INPUT) CAPS(ON) INTENS(HIGH) PAD('_')\n)BODY EXPAND(@@)\n%EDIT --- DDNAME &DDNAME @-@\n%COMMAND ===>?ZCMD                                             %SCROLL%==>?AMT %\n%\n+Current Profile%===>?CNAFPROF+  Macro%===>?CNAFMACR+\n%\n+%S+- Edit Dataset/Member  %L+-Edit entire PDS (Member List)  %P+- PDS command\n%\n%Sel   Datasets allocated to &DDNAME                             %Volume\n+---   -------------------------------------------------------------------------\n)MODEL\n+#Z+  !Z                                                         !TABLEVOL     +\n)INIT\n  .ZVARS = '(LSEL TABLEDSN)'\n  &AMT = &ZSCML\n  &ZTDMARK = '********************** END OF DSNAME LIST FOR &DDNAME +\n              ***************************'\n  &ZTDMARK = TRUNC (&ZTDMARK,79)\n  &ZTDMSG = DTSM040\n  &UMSG40 = &Z\n  &LMSG40 = &Z\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG=ZCMD001\n IF (&ZTDSELS \u00ac= 0)\n    VER (&LSEL,LIST,S,L,P)\n    IF (&LSEL = P)\n       &TEMP = TRUNC (&TABLEDSN,'(')\n       &TRAIL = .TRAIL\n       IF (&TRAIL \u00ac= &Z)\n          &TEMP = '&TEMP'''\n       &PDSCMD = 'PGM(PDS) PARM(PDS &TEMP VOL(&TABLEVOL) MEMLIST :)'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "COMHMAN": {"ttr": 1043, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL------------------- ISPF/PDF COMMANDS -------------------------TUTORIAL\n%SELECTION ===>_ZCMD                                                           %\n%                     ------------------------------\n                      |    GENERAL  INFORMATION    |\n                      ------------------------------\n+\n     ISPF commands are provided for commonly used functions.\n     You are able to enter a command in one of two ways...\n\n          1)  By entering the command on the command line\n              (usually the top line of the display)\n\n          2)  By hitting a program function (PF) key\n\n     When hitting a Pfkey, the commands represented by that Pfkey are\n     \"inserted\" before any data on the current command line.  For example,\n     if the command list has the word 'STATUS' on it and you hit a Pfkey\n     that is set to the word TSO, ISPF will view the command line as\n     'TSO STATUS'.\n\n   The following topic will be presented only if selected by number:\n\n%     1+ - Specifying/Maintaining your Pfkeys\n)PROC\n     &ZSEL = TRANS( &ZCMD\n                1,*ISP05300\n                *,?\n                )\n      &ZUP = COMHMAN\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSINDX01": {"ttr": 1045, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%---------------------------  Data Set INDEX  ----------------------------------\n%Command ===>_ZCMD\n%\n+Data Set Index Level ===>_DSILVL                                    +\n%\n%OPTIONAL:\n+TAPE  %===>_Z  +           (Include TAPE datasets: YES | NO)\n+DASD  %===>_Z  +           (Include DASD datasets: YES | NO)\n+\n)INIT\n.HELP=TDSINDX0\n.ZVARS='(DSITAPE DSIDASD)'\n.CURSOR=DSILVL\nIF (&DSITAPE = '')\n   &DSITAPE = 'NO'\nIF (&DSIDASD = '')\n   &DSIDASD = 'YES'\n)PROC\nIF (&DSIVOL = '')\n   VER (&DSILVL,NONBLANK)\nVER (&DSITAPE,LIST,YES,NO)\nVER (&DSIDASD,LIST,YES,NO)\nVPUT (DSILVL DSIVOL DSITAPE DSIDASD) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSINDX02": {"ttr": 1047, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n @ TYPE(OUTPUT) INTENS(LOW)\n # TYPE(OUTPUT) INTENS(HIGH)\n)BODY\n%------------------------------  FILE LIST -------------------------------------\n%Command ===>_ZCMD                                          %Scroll ====> _AMT +\n%SEL     Data Set Name                                 Volser  Last Action Type\n)MODEL\n_Z      @Z                                            @Z     +#Z          @Z\n)INIT\n .HELP=TDSINDX1\n .CURSOR=ZCMD\n &AMT='Half'\n &ZCMD=' '\n &TSEL=' '\n &LASTACT=' '\n .ZVARS='(TSEL DSNAME VOLSER LASTA TYPE)'\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSINDX03": {"ttr": 1049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%----------------------------  Confirm &FUNCT  ---------------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+DATA SET NAME: %&DSNAME                                   +\n+\n+Volume serial:  %  &VOLSER+           Creation date:        % &CDATE   +\n+Device type:    %  &TYPE    +         Created by:           % &CJOB    +\n+Organization:   %  &DSORG   +         Last Reference:       % &LDATE   +\n+Record format:  %  &RECFM +           Last Referencd by:    % &LJOB    +\n+Record length:  %  &LRECL +           Expiration date:      % &XDATE   +\n+Block size:     %  &BLKSZ +           Security:             % &OPTION  +\n+\n+\n+\n+INSTRUCTIONS:\n+\n+   Press%ENTER+key to%&FUNCT.+dataset.\n+   Press%END+key to abort%&FUNCT.+\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSINDX04": {"ttr": 1051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY\n%--------------------------  DATA SET INFORMATION  -----------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+DATA SET NAME: %&DSNAME                                   +\n+\n+Volume serial:  %  &VOLSER+           Creation date:        % &CDATE   +\n+Device type:    %  &TYPE    +         Created by:           % &CJOB    +\n+Organization:   %  &DSORG   +         Last Reference:       % &LDATE   +\n+Record format:  %  &RECFM +           Last Referencd by:    % &LJOB    +\n+Record length:  %  &LRECL +           Expiration date:      % &XDATE   +\n+Block size:     %  &BLKSZ +           Security:             % &OPTION  +\n+\n    % *----------------%Format 1 Data Set Control Block ----------------*\n    % |+&XLINE1                                                        %|\n    % |+&XLINE2                                                        %|\n    % |+&XLINE3                                                        %|\n    % |+&XLINE4                                                        %|\n    % |+&XLINE5                                                        %|\n    % |+&XLINE6                                                        %|\n    % *---------------------(excluding Data Set Name)-------------------*\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNBMGF": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%$_)\n|  TYPE(INPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(ASIS)\n?  TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(ASIS)\n+  TYPE(TEXT) INTENS(LOW) SKIP(ON)\n@  TYPE(OUTPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(ASIS)\n#  TYPE(OUTPUT) INTENS(HIGH) PAD(NULLS) CAPS(ON) JUST(ASIS)\n)BODY\n%------------------------ DSNAME MANAGEMENT FACILITY ---------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n      DATASET NAME                                             VOLSER\n)MODEL\n?Z   |Z                                                      +|Z       +\n)INIT\n .ZVARS = '(LSEL DSNAME VOLSER)'\n .HELP = DSNHMGF\n &AMT = &ZSCML\n &LSEL = &Z\n &NOHEAD = &Z\n)REINIT\n REFRESH(ZCMD)\n IF (.MSG \u00ac= &Z)\n     &NOHEAD = &Z\n)PROC\n &ZSCML = &AMT\n VPUT (ZSCML) PROFILE\n\n IF (&ZTDSELS \u00ac= 0)\n     VER (&DSNAME,DSNAME)\n     IF (&DSNAME \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME,1)\n         IF (&TEMP \u00ac= '''')\n             &DSNAME = '''&ZPREFIX..&DSNAME'''\n     VER (&LSEL,LIST,I,D,R,P,PDS,B,E,SUB,DSAT MSG=DTSM001)\n     IF (&LSEL = P,PDS)\n         IF (&VOLSER = &Z) &VOL = &Z\n         IF (&VOLSER \u00ac= &Z) &VOL = 'VOL(&VOLSER)'\n         &ZSEL = 'CMD(PDS &DSNAME &VOL ISPMODE)'\n\n     IF (&LSEL = SUB)\n         &ZSEL = 'CMD(SUBMIT &DSNAME)'\n\n     IF (&LSEL = DSAT)\n         IF (&VOLSER = &Z)\n             &VOLUME = &Z\n         IF (&VOLSER \u00ac= &Z)\n             &VOLUME = 'VOLUME(&VOLSER)'\n         &ZSEL = 'CMD(DSAT &DSNAME &VOLUME DSONLY SEC &NOHEAD +\n                  NOCR RC(PREVIOUS))'\n         &NOHEAD = NOHEAD\n\n &UMSG1 = 'INVALID LINE COMMAND'\n &LMSG1 = 'VALID LINE COMMANDS ARE I,D,R,P,B,E,SUB,PDS'\n)END\n &ZCMD = '&ERRMSG'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSNBMGFL": {"ttr": 1283, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%$_)\n|  TYPE(INPUT) INTENS(HIGH) PAD(NULLS) CAPS(ON) JUST(ASIS)\n+  TYPE(TEXT) INTENS(LOW) SKIP(ON)\n@  TYPE(OUTPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(ASIS)\n\u00a2  TYPE(OUTPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(RIGHT)\n#  TYPE(OUTPUT) INTENS(HIGH) PAD(NULLS) CAPS(ON) JUST(ASIS)\n)BODY\n%------------------------ DSNAME MANAGEMENT FACILITY ---------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n+\n+Enter \"S\"   to select a saved Dsname List\n+Enter \"DEL\" to delete a Dsname List\n+\n      ID   Userid     Creation Date      Size\n)MODEL\n|LSEL#ID +@USER     @CDATE    @CTIME     \u00a2Z  +\n)INIT\n .ZVARS = '(NUMROW)'\n .HELP = DSNHMGF\n &LSEL = &Z\n)PROC\n IF (.RESP = ENTER)\n     IF (&ZTDSELS \u00ac= 0)\n         VER (&LSEL,LIST,S,DEL)\n         IF (&LSEL \u00ac= &Z)\n            IF (&ID = DSN) .MSG = DTSM003\n            IF (&LSEL = S)\n                &ZCMD = 'COPY &ID'\n\n &UMSG3 = '\"DSN\" IS RESERVED'\n &LMSG3 = '\"DSN\" IS RESERVED AS THE DEFAULT DSN LIST ID'\n &UMSG4 = 'INVALID COMBINATION'\n &LMSG4 = 'WHEN SELECTING A DSNAME LIST FOR COPY, ONLY 1 LINE COMMAND ALLOWED'\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNBMGF1": {"ttr": 1285, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%$_)\n|  TYPE(INPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(ASIS)\n?  TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(ASIS)\n+  TYPE(TEXT) INTENS(LOW) SKIP(ON)\n@  TYPE(OUTPUT) INTENS(LOW) PAD(NULLS) CAPS(ON) JUST(ASIS)\n#  TYPE(OUTPUT) INTENS(HIGH) PAD(NULLS) CAPS(ON) JUST(ASIS)\n)BODY\n%------------------------ DSNAME MANAGEMENT FACILITY ---------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n      DATASET NAME                                             VOLSER\n        PROFILE    MACRO      COMMENTS\n)MODEL\n?Z   |Z                                                      +|Z       +\n     +:|PROFILE +:|IMACRO  +:|COMMENT                                          +\n)INIT\n .ZVARS = '(LSEL DSNAME VOLSER)'\n .HELP = DSNHMGF\n &AMT = &ZSCML\n &LSEL = &Z\n &NOHEAD = &Z\n)REINIT\n REFRESH(ZCMD)\n IF (.MSG \u00ac= &Z)\n     &NOHEAD = &Z\n)PROC\n &ZSCML = &AMT\n VPUT (ZSCML) PROFILE\n\n IF (&ZTDSELS \u00ac= 0)\n     VER (&DSNAME,DSNAME)\n     IF (&DSNAME \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME,1)\n         IF (&TEMP \u00ac= '''')\n             &DSNAME = '''&ZPREFIX..&DSNAME'''\n     VER (&LSEL,LIST,I,D,R,P,PDS,B,E,SUB,DSAT MSG=DTSM001)\n     IF (&LSEL = P,PDS)\n         IF (&VOLSER = &Z) &VOL = &Z\n         IF (&VOLSER \u00ac= &Z) &VOL = 'VOL(&VOLSER)'\n         &ZSEL = 'CMD(PDS &DSNAME &VOL ISPMODE)'\n\n     IF (&LSEL = SUB)\n         &ZSEL = 'CMD(SUBMIT &DSNAME)'\n\n     IF (&LSEL = DSAT)\n         IF (&VOLSER = &Z)\n             &VOLUME = &Z\n         IF (&VOLSER \u00ac= &Z)\n             &VOLUME = 'VOLUME(&VOLSER)'\n         &ZSEL = 'CMD(DSAT &DSNAME &VOLUME DSONLY SEC &NOHEAD +\n                  NOCR RC(PREVIOUS))'\n         &NOHEAD = NOHEAD\n\n &UMSG1 = 'INVALID LINE COMMAND'\n &LMSG1 = 'VALID LINE COMMANDS ARE I,D,R,P,B,E,SUB,PDS'\n)END\n &ZCMD = '&ERRMSG'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSND": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(~`_)\n % TYPE(TEXT) INTENS(HIGH) SKIP(ON)\n + TYPE(TEXT) INTENS(LOW) SKIP(ON)\n)BODY\n%------------------------ &FUNC  - ENTRY PANEL  -------------------&TEST-&DEBUG-\n%SELECT LIBRARY ===>_ZCMD                                                      +\n\n+Select Member %===>_MEMBER  + Browse or Edit or PDS%===>_FUNC  +\n%A+ PROJECT%===>_PRJA    +%B+%===>_PRJB    +%C+%===>_PRJC    +%D+%===>_PRJD    +\n+   LIBRARY%===>_LIBA    +   %===>_LIBB    +   %===>_LIBC    +   %===>_LIBD    +\n+   TYPE   %===>_TYPA    +   %===>_TYPB    +   %===>_TYPC    +   %===>_TYPD    +\n+   MEMBER %===>_MEMA    +   %===>_MEMB    +   %===>_MEMC    +   %===>_MEMD    +\n%\n%E+ PROJECT%===>_PRJE    +%F+%===>_PRJF    +%G+%===>_PRJG    +%H+%===>_PRJH    +\n+   LIBRARY%===>_LIBE    +   %===>_LIBF    +   %===>_LIBG    +   %===>_LIBH    +\n+   TYPE   %===>_TYPX    +   %===>_TYPF    +   %===>_TYPG    +   %===>_TYPH    +\n+   MEMBER %===>_MEME    +   %===>_MEMF    +   %===>_MEMG    +   %===>_MEMH    +\n+OTHER PARTITIONED OR SEQUENTIAL DATASETS:\n%I+ DATASET NAME %===>_DSNI                                                    +\n%J+ DATASET NAME %===>_DSNJ                                                    +\n%K+ DATASET NAME %===>_DSNK                                                    +\n%L+ DATASET NAME %===>_DSNL                                                    +\n%M+ DATASET NAME %===>_DSNM                                                    +\n%N+ DATASET NAME %===>_DSNN                                                    +\n%O+ DATASET NAME %===>_DSNO                                                    +\n%P+ DATASET NAME %===>_DSNP                                                    +\n%S+ DATASET NAME %===>_DSNS                                                    +\n)INIT\n   IF (&MSG\u00ac=&Z)\n      .MSG=&MSG\n   .CURSOR=ZCMD\n   .HELP=EDTH\n   IF (&ZCMD=P)\n      &ZCMD=&Z\n   IF (&ZCMD = &Z)\n       IF (&CMD \u00ac= &Z)\n          &ZCMD = &CMD\n          &CMD = &Z\n          .RESP = ENTER\n   IF (&FUNC \u00ac= EDIT,BROWSE,PDS) &FUNC = EDIT\n)REINIT\n REFRESH (FUNC)\n)PROC\n   &TYPE = &TYPX\n   &MSG=&Z\n   VER(&ZCMD,LIST,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,S)\n   VER(&ZCMD,NONBLANK)\n   &FUNC = TRANS( TRUNC (&FUNC,1) E,EDIT,B,BROWSE,P,PDS,*,*)\n   VER (&FUNC,NB,LIST,EDIT,BROWSE,PDS)\n   IF (&ZCMD=A)\n      VER(&MEMA,NAME)\n      VER(&PRJA,NONBLANK)\n      VER(&LIBA,NONBLANK)\n      VER(&TYPA,NONBLANK)\n   IF (&ZCMD=B)\n      VER(&MEMB,NAME)\n      VER(&PRJB,NONBLANK)\n      VER(&LIBB,NONBLANK)\n      VER(&TYPB,NONBLANK)\n   IF (&ZCMD=C)\n      VER(&MEMC,NAME)\n      VER(&PRJC,NONBLANK)\n      VER(&LIBC,NONBLANK)\n      VER(&TYPC,NONBLANK)\n   IF (&ZCMD=D)\n      VER(&MEMD,NAME)\n      VER(&PRJD,NONBLANK)\n      VER(&LIBD,NONBLANK)\n      VER(&TYPD,NONBLANK)\n   IF (&ZCMD=E)\n      VER(&MEME,NAME)\n      VER(&PRJE,NONBLANK)\n      VER(&LIBE,NONBLANK)\n      VER(&TYPX,NONBLANK)\n   IF (&ZCMD=F)\n      VER(&MEMF,NAME)\n      VER(&PRJF,NONBLANK)\n      VER(&LIBF,NONBLANK)\n      VER(&TYPF,NONBLANK)\n   IF (&ZCMD=G)\n      VER(&MEMG,NAME)\n      VER(&PRJG,NONBLANK)\n      VER(&LIBG,NONBLANK)\n      VER(&TYPG,NONBLANK)\n   IF (&ZCMD=H)\n      VER(&MEMH,NAME)\n      VER(&PRJH,NONBLANK)\n      VER(&LIBH,NONBLANK)\n      VER(&TYPH,NONBLANK)\n   IF (&ZCMD=I)\n      VER(&DSNI,NONBLANK)\n   IF (&ZCMD=J)\n      VER(&DSNJ,NONBLANK)\n   IF (&ZCMD=K)\n      VER(&DSNK,NONBLANK)\n   IF (&ZCMD=L)\n      VER(&DSNL,NONBLANK)\n   IF (&ZCMD=M)\n      VER(&DSNM,NONBLANK)\n   IF (&ZCMD=N)\n      VER(&DSNN,NONBLANK)\n   IF (&ZCMD=O)\n      VER(&DSNO,NONBLANK)\n   IF (&ZCMD=P)\n      VER(&DSNP,NONBLANK)\n   IF (&ZCMD=S)\n      VER(&DSNS,NONBLANK)\n VPUT (FUNC) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGF": {"ttr": 1290, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                     -----------------------------------\n                      |        DSM TUTORIAL MENU        |\n                      -----------------------------------\n+\n The following topics are presented in sequence, or may be selected by number\n+\n%  1+ OVERVIEW           General Description of the DSM Facility\n%  2+ CONTROL DATASET    Describe its requirements and functions\n%  3+ PRIMARY COMMANDS   List and Description of supported Primary Commands\n%  4+ LINE COMMANDS      List and Description of supported Line Commands\n+\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                 1,DSNHMGF1\n                 2,DSNHMGF2\n                 3,DSNHMGF3\n                 4,DSNHMGF4\n                )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGFA": {"ttr": 1292, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -------------------------------------\n                    |   DSM \"CANCEL\" PRIMARY COMMAND    |\n                    -------------------------------------\n+\n    The CANCEL command will cancel all modifications (including all\n    recursive levels) made to the Dataset List. It functionally is the\n    same as ISPF/PDF Edit's CANCEL Command.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFB": {"ttr": 1294, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -------------------------------------\n                    |   DSM \"EXPAND\" PRIMARY COMMAND    |\n                    -------------------------------------\n+\n    The normal display allows a user to enter the Dataset name with an\n    optional Volser for every dataset maintained in the list. There\n    are three other fields that are maintainable for each dataset.\n\n    These fields are the Edit Profile, Edit Imacro and a Comment\n    field.  The Expand Command allows the user to request the type of\n    display to be provided.\n\n%   EXPAND ON+ (default) will provide an expanded display allowing the\n               user to update the Profile, Imacro and Comment fields.\n\n%   EXPAND OFF+will provide a display with only the DSNAME and VOLSER\n               fields supplied.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFC": {"ttr": 1296, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -----------------------------------\n                    |   DSM \"SAVE\" PRIMARY COMMAND    |\n                    -----------------------------------\n+\n    The SAVE command will save all modifications of this level\n    (affecting all other recursive levels) made to the Dataset List.\n    It functionally is the same as ISPF/PDF Edit's SAVE Command.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFD": {"ttr": 1298, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -----------------------------------\n                    |   DSM \"SORT\" PRIMARY COMMAND    |\n                    -----------------------------------\n+\n    The SORT command will sort the list of dsnames in ascending sequence.\n    This is the only available function for this command. Direct any\n    requests to Development Technical Support x5719.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFE": {"ttr": 1300, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -------------------------------------\n                    |   DSM \"LOCATE\" PRIMARY COMMAND    |\n                    -------------------------------------\n+\n    The LOCATE command allows a user to locate a dsname based on the\n    high-level index. For example,\n%   LOCATE SYS1.COB\n\n+   will find the first dsname equal to or greater than SYS1.COB\n+\n+   LOCATE can be abreviated as LOC or L.\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFF": {"ttr": 1302, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -------------------------------------\n                    |   DSM \"CREATE\" PRIMARY COMMAND    |\n                    -------------------------------------\n+\n    The CREATE command allows a user to copy the current list of datasets\n    into a special save area. The create function requires the save area\n    does not already exist. The COPY function can then be used to retrieved\n    the saved dsn list.\n\n%   CREATE label\n\n+   will save the list of datasets as list \"label\" where \"label\" is from\n+   one to three bytes.\n+\n+   CREATE can be abreviated as CR.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFG": {"ttr": 1304, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -------------------------------------\n                    |   DSM \"REPLACE\" PRIMARY COMMAND   |\n                    -------------------------------------\n+\n    The REPLACE command allows a user to copy the current list of datasets\n    into a special save area. The replace function will replace the list if\n    it already exist. The COPY function can then be used to retrieved the\n    saved dsn list.\n\n%   REPLACE label\n\n+   will save the list of datasets as list \"label\" where \"label\" is from\n+   one to three bytes.\n+\n+   REPLACE can be abreviated as REP.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFH": {"ttr": 1306, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -----------------------------------\n                    |   DSM \"COPY\"  PRIMARY COMMAND   |\n                    -----------------------------------\n+\n    The COPY command allows a user to copy a saved list of datasets\n    into the current session. The copy function will replace the current\n    list. The save areas can be created using the CREATE or REPLACE\n    commands.\n\n%   COPY label\n\n+   will restore the list of datasets previously saved as \"label\".\n+   \"label\" may be from one to three bytes.\n+\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFI": {"ttr": 1308, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -----------------------------------\n                    |   DSM \"INIT\"  PRIMARY COMMAND   |\n                    -----------------------------------\n+\n    The INIT command will delete all lines in the DSN List currently\n    being displayed. This allows users to build a fresh DSN list from\n    scratch.\n\n%   INIT\n\n+\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGFJ": {"ttr": 1310, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                   -----------------------------------\n                    |   DSM \"LIST\"  PRIMARY COMMAND   |\n                    -----------------------------------\n+\n    The LIST command will display the 3 letter id's of all existing\n    lists a user has created.\n\n%   LIST\n\n+\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNHMGF1": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                     -----------------------------------\n                      |            OVERVIEW             |\n                      -----------------------------------\n+\n    The Dataset Management Facility (DSM) will maintain a list of\n    datasets for a user similar to the way a member list is maintained by\n    ISPF. Unlike PDF option 3.4, the datasets are specified by the user.\n    They do not have to conform to any type of naming conventions nor are\n    they required to exist.\n\n    The list of datasets may be manipulated by adding or deleting\n    datasets to the list.  This function may be invoked by typing DSM on\n    any Command Line under ISPF. This function allows support for\n    recursive invocation as well as sharing the list of datasets between\n    split screens.\n\n+                         (Press%ENTER+to continue)\n+\n)PROC\n   &ZUP = DSNHMGF\n   &ZCONT = DSNHMGF9\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGF2": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                    --------------------------------------\n                     |   ALLOCATING THE CONTROL DATASET   |\n                     --------------------------------------\n+\n    The list of datasets are maintained by DSM via an ISPF Table.  The\n    DSM option requires an ISPF Table Library be allocated to the\n    DDname DSNMGF.\n\n    To have this dataset created and automatically allocated at logon,\n    contact Development Technical Support at x5719 or Application\n    Support at x6197. This system can not run without this dataset.\n\n\n\n      Direct all questions to Development Technical Support (x5719)\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGF3": {"ttr": 1541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%\n                          ----------------------------\n                          |   DSM PRIMARY COMMANDS   |\n                          ----------------------------\n+\n The following topics are presented in sequence, or may be selected by number\n\n   1+ CANCEL   Exit DSM without saving your updates\n   2+ EXPAND   Set the display mode for viewing Dataset Information\n   3+ LOCATE   Locate a Dsname in the Dataset List\n   4+ SAVE     Save the modifications to the DSM Dataset List\n   5+ SORT     Sort the list of Datasets in Dsname order\n   6+ CREATE   Save the list of Datasets\n   7+ REPLACE  Replace an existing list of datasets\n   8+ COPY     Copy an existing list of datasets\n   9+ INIT     Initialize the Dsname List\n  10+ LIST     List the currently saved lists\n)PROC\n   &ZUP = DSNHMGF\n   &ZSEL = TRANS(&ZCMD\n                1,DSNHMGFA\n           CANCEL,*DSNHMGFA\n                2,DSNHMGFB\n           EXPAND,*DSNHMGFB\n                3,DSNHMGFE\n           LOCATE,*DSNHMGFE\n                4,DSNHMGFC\n             SAVE,*DSNHMGFC\n                5,DSNHMGFD\n             SORT,*DSNHMGFD\n                6,DSNHMGFF\n           CREATE,*DSNHMGFF\n                7,DSNHMGFG\n          REPLACE,*DSNHMGFG\n                8,DSNHMGFH\n             COPY,*DSNHMGFH\n                9,DSNHMGFI\n             INIT,*DSNHMGFI\n               10,DSNHMGFJ\n             LIST,*DSNHMGFJ\n                )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGF4": {"ttr": 1543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%\n                            -------------------------\n                            |   DSM LINE COMMANDS   |\n                            -------------------------\n+\n   The following is a list of the valid line commands for DSM:\n\n      D    - Delete a line\n      I    - Insert a line\n      R    - Repeat a line\n\n      B    - Browse the Dataset\n      E    - Edit the Dataset\n      P    - Invoke the PDS Utility\n      SUB  - Submit some JCL\n      DSAT - Display Dataset Attributes\n\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSNHMGF9": {"ttr": 1545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  DATASET MANAGEMENT FACILITY  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n%                     -----------------------------------\n                      |            OVERVIEW             |\n                      -----------------------------------\n+\n    The Dataset Management Facility (DSM) allows a user to maintain\n    multiple dataset lists. If a user is working on several projects,\n    he may wish to maintain a dataset list for each project. A one to\n    three byte id is used to access the different dataset lists.\n\n    The Primary Commands COPY, REPLACE, LIST,  and CREATE are used to\n    maintain the different LISTs.\n+\n)PROC\n   &ZUP = DSNHMGF\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDDDSN": {"ttr": 1547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  \u00ac TYPE(INPUT) INTENS(NON)\n)BODY EXPAND(\u00a2\u00a2)\n%\u00a2-\u00a2  &FUNC - ENTRY PANEL  \u00a2-\u00a2\n%COMMAND ===>_ZCMD                                                             +\n%\n+ENTER PARTITIONED OR SEQUENTIAL DATA SET NAME\n+   DATA SET NAME %===>_DSN\n+   VOLUME SERIAL %===>_VOL   +  (if not cataloged)\n+\n+   PASSWORD      %===>\u00acPASSWORD+\n+\n+   PROFILE NAME  %===>_PROFILE +\n+   INITIAL MACRO %===>_MACRO   +\n+\n)INIT\n)PROC\n   IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n   VER (&DSN,NB,DSNAME)\n   VER (&VOL,NAME)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EDTD": {"ttr": 1549, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(~`_)\n % TYPE(TEXT) INTENS(HIGH) SKIP(ON)\n + TYPE(TEXT) INTENS(LOW) SKIP(ON)\n)BODY\n%-------------------------  EDIT - ENTRY PANEL  -------------------&TEST-&DEBUG-\n%SELECT OPTION ===>_ZCMD                                                       +\n\n%SELECT MEMBER%===>_MEMBER  +(OVERRIDES SPF MEMBER, '*' FOR LIST)\n+SPF LIBRARIES:\n%A+ PROJECT%===>_PRJA    +%B+%===>_PRJB    +%C+%===>_PRJC    +%D+%===>_PRJD    +\n+   LIBRARY%===>_LIBA    +   %===>_LIBB    +   %===>_LIBC    +   %===>_LIBD    +\n+   TYPE   %===>_TYPA    +   %===>_TYPB    +   %===>_TYPC    +   %===>_TYPD    +\n+   MEMBER %===>_MEMA    +   %===>_MEMB    +   %===>_MEMC    +   %===>_MEMD    +\n%\n%E+ PROJECT%===>_PRJE    +%F+%===>_PRJF    +%G+%===>_PRJG    +%H+%===>_PRJH    +\n+   LIBRARY%===>_LIBE    +   %===>_LIBF    +   %===>_LIBG    +   %===>_LIBH    +\n+   TYPE   %===>_TYPE    +   %===>_TYPF    +   %===>_TYPG    +   %===>_TYPH    +\n+   MEMBER %===>_MEME    +   %===>_MEMF    +   %===>_MEMG    +   %===>_MEMH    +\n+OTHER PARTITIONED OR SEQUENTIAL DATASETS:\n%I+ DATASET NAME %===>_DSNI                                                    +\n%J+ DATASET NAME %===>_DSNJ                                                    +\n%K+ DATASET NAME %===>_DSNK                                                    +\n%L+ DATASET NAME %===>_DSNL                                                    +\n%M+ DATASET NAME %===>_DSNM                                                    +\n%N+ DATASET NAME %===>_DSNN                                                    +\n%O+ DATASET NAME %===>_DSNO                                                    +\n%P+ DATASET NAME %===>_DSNP                                                    +\n%S+ DATASET NAME %===>_DSNS                                                    +\n)INIT\n   IF (&MSG\u00ac=&Z)\n      .MSG=&MSG\n   .CURSOR=ZCMD\n   .HELP=EDTH\n   IF (&ZCMD=P)\n      &ZCMD=&Z\n)PROC\n   &MSG=&Z\n   VER(&ZCMD,LIST,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,S)\n   VER(&ZCMD,NONBLANK)\n   IF (&ZCMD=A)\n      VER(&MEMA,NAME)\n      VER(&PRJA,NONBLANK)\n      VER(&LIBA,NONBLANK)\n      VER(&TYPA,NONBLANK)\n   IF (&ZCMD=B)\n      VER(&MEMB,NAME)\n      VER(&PRJB,NONBLANK)\n      VER(&LIBB,NONBLANK)\n      VER(&TYPB,NONBLANK)\n   IF (&ZCMD=C)\n      VER(&MEMC,NAME)\n      VER(&PRJC,NONBLANK)\n      VER(&LIBC,NONBLANK)\n      VER(&TYPC,NONBLANK)\n   IF (&ZCMD=D)\n      VER(&MEMD,NAME)\n      VER(&PRJD,NONBLANK)\n      VER(&LIBD,NONBLANK)\n      VER(&TYPD,NONBLANK)\n   IF (&ZCMD=E)\n      VER(&MEME,NAME)\n      VER(&PRJE,NONBLANK)\n      VER(&LIBE,NONBLANK)\n      VER(&TYPE,NONBLANK)\n   IF (&ZCMD=F)\n      VER(&MEMF,NAME)\n      VER(&PRJF,NONBLANK)\n      VER(&LIBF,NONBLANK)\n      VER(&TYPF,NONBLANK)\n   IF (&ZCMD=G)\n      VER(&MEMG,NAME)\n      VER(&PRJG,NONBLANK)\n      VER(&LIBG,NONBLANK)\n      VER(&TYPG,NONBLANK)\n   IF (&ZCMD=H)\n      VER(&MEMH,NAME)\n      VER(&PRJH,NONBLANK)\n      VER(&LIBH,NONBLANK)\n      VER(&TYPH,NONBLANK)\n   IF (&ZCMD=I)\n      VER(&DSNI,NONBLANK)\n   IF (&ZCMD=J)\n      VER(&DSNJ,NONBLANK)\n   IF (&ZCMD=K)\n      VER(&DSNK,NONBLANK)\n   IF (&ZCMD=L)\n      VER(&DSNL,NONBLANK)\n   IF (&ZCMD=M)\n      VER(&DSNM,NONBLANK)\n   IF (&ZCMD=N)\n      VER(&DSNN,NONBLANK)\n   IF (&ZCMD=O)\n      VER(&DSNO,NONBLANK)\n   IF (&ZCMD=P)\n      VER(&DSNP,NONBLANK)\n   IF (&ZCMD=S)\n      VER(&DSNS,NONBLANK)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDTH": {"ttr": 1552, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL-----------------  EDIT - ENTRY PANEL  ----------------------- TUTORIAL\n%NEXT SELECTION ===>_OPT     +\n\n      THIS PANEL IS USED TO ENTER THE SPF EDIT SYSTEM, IN PLACE OF SPF 2.\n\n      THE SCREEN WILL MAINTAIN ALL THE DATASET NAMES ENTERED.  TO SELECT A\n      PARTICULAR DATASET, SIMPLY ENTER ITS LETTER IN THE FIRST FIELD.  IF\n      IT IS A PARTITIONED DATASET AND NO MEMBER IS SPECIFIED, YOU'LL BE\n      SHOWN A MEMBER LIST.\n\n     %SELECT MEMBER:+IS USED TO OVERRIDE THE MEMBER SPECIFICATION OF THE\n      FIRST EIGHT DATASET NAMES.  IF IT IS%*+THEN THE MEMBER LIST WILL BE\n      DISPLAYED REGARDLESS OF THE CONTENTS OF%MEMBER.+\n\n)PROC\n   &UP=TTUTOR\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JOBBLIST": {"ttr": 1554, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  !  TYPE(OUTPUT)  INTENS(HIGH)\n)BODY\n%------------------  ACTIVE SYSTEM TASKS AT &ZTIME  ----------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n+\n+    LIMIT%===>_JOBPLMT +TSO%===>_Z+          Sort%===>_SORT    +\n+\n%    Jobname     Stepname     Procstep    Status    Step-time    Step-CPU\n)MODEL\n    @JOBNAME    @PROCNAME    @STEPNAME    @MEMSTAT1@JOBHH       @CPUTIME\n)INIT\n  .ZVARS = '(JOBFTSO)'\n  .CURSOR = ZCMD\n  .HELP = JOBHLIST\n  &AUTOREQ = 0\n  &AMT = &ZSCML\n  &TEMP = TRUNC (&JOBPSORT,1)\n  &SORT = .TRAIL\n  &SORT = TRANS(TRUNC (&SORT,5) JOBHH,TIME,CPUTI,CPUTIME,PROCN,STEP,*,JOBNAME)\n  IF (&JOBFTSO \u00ac= Y,N,O) &JOBFTSO = 'N'\n  &SSORT = &SORT\n  &SLIMIT = &JOBPLMT\n  &STSO = &JOBFTSO\n)PROC\n VER (&ZCMD,LIST,AUTO,A MSG=ISPZ001)\n &ZSCML = &AMT\n VPUT (ZSCML) PROFILE\n IF (&ZCMD = AUTO,A)\n     &AUTOREQ = 1\n     &ZCMD = &Z\n\n VER (&JOBFTSO,NB,LIST,Y,N,O)\n &JOBPTSO = TRANS (&JOBFTSO N,N,*,Y)\n\n &SORT = TRUNC (&SORT,1)\n VER (&SORT,NB,LIST,J,S,C,T)\n IF (.MSG = &Z)\n       &JOBPSORT = TRANS (&SORT     J,'(JOBNAME,C,A)',\n                                    T,'(JOBHH,C,D)',\n                                    S,'(PROCNAME,C,A)',\n                                    C,'(CPUTIME,C,D)')\n &SORT = TRANS(TRUNC (&SORT,1) S,STEP,T,TIME,C,CPUTIME,*,JOBNAME        )\n &OSW = 0\n IF (&SSORT \u00ac= &SORT) &OSW = 1\n IF (&STSO \u00ac= &JOBFTSO) &OSW = 1\n IF (&SLIMIT \u00ac= &JOBPLMT) &OSW = 1\n &ZSCML = &AMT\n VPUT (ZSCML JOBPLMT JOBFTSO JOBPTSO JOBPSORT) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JOBHLIST": {"ttr": 1556, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL/-/  ACTIVE SYSTEM TASKS /-/TUTORIAL+\n%SELECTION ===>_ZCMD                                                           +\n%                     -----------------------------------\n                      |        Utility Description      |\n                      -----------------------------------\n+\n%LIMIT +Allows a user to limit the jobs listed by a generic jobname. For\n        example, specifying \"T\" will only list jobs begining with the\n        letter \"T\".\n\n%TSO   +Specifies whether TSO Users should be listed. Y, N, or O (for only)\n        may be specified.\n\n%SORT  +Specifies the order in which jobs are to be listed. Valid sort\n        orders are JOBNAME, TIME, CPUTIME and STEPNAME.\n\n\n%AUTO  +Specifying AUTO as a primary command will lock your keyboard and\n        continue updating the screen with current system information. This\n        is similar to KGA's repeat feature.\n%       To free your keyboard you must hit the ATTN (PA1) key.\n%       Automode is automatically exited after 60 seconds.\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOGDMSG": {"ttr": 1558, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n/*********************************************************************/\n/*    BOB ZIMMERMAN                                                  */\n/*    CNA INSURANCE                                                  */\n/*    (312) 822-5719                                                 */\n/*    LAST MODIFIED 8503                                             */\n/*                                                                   */\n/*********************************************************************/\n/*                                                                   */\n/*    THIS PANEL USES A DYNAMIC PANEL AREA.                          */\n/*    THIS PANEL SUPPORTS THE LOGMSG COMMAND.                        */\n/*********************************************************************/\n |    AREA(DYNAMIC)\n      EXTEND(ON)\n      SCROLL(OFF)\n\n !    TYPE(DATAIN)\n      INTENS(HIGH)\n      CAPS(OFF)\n      PAD(' ')\n\n)BODY EXPAND(//)\n%/-/  LOG MESSAGE INTO ISPF LOG  /-/\n%COMMAND ===>_ZCMD\n%\n+ENTER LOG MESSAGE BELOW:\n|MESSAGE --------------------------------------------------------------------|\n+\n+Press%ENTER+to log message(s)\n+Enter%END+command to exit without logging\n+\n+\n+\n)INIT\n .CURSOR = MESSAGE\n .CSRPOS = 2\n &MESSAGE = '!'\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ZCMD001\n\n &TEMP = TRUNC(&MESSAGE,1)\n &LOGMSG = .TRAIL\n &LOGMSG = '*&LOGMSG'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LSPDP1": {"ttr": 1560, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%----------------------------------  LSPACE  -----------------------------------\n%COMMAND ===>_ZCMD\n+\n+\n+Enter the Volser ===>_VOL   +\n+\n+\n+\n+\n      Specify a VOLSER or a generic VOLSER.\n      Generic Volsers are entered part of a VOLSER followed by an \"*\".\n      For example, TSDA* will list all volumes begining with TSDA.\n+\n)INIT\n  .CURSOR = VOL\n  &VOL = &LSPPVOL\n)PROC\n  IF (&ZCMD \u00ac= &Z) .MSG = LSPM003\n  VER (&VOL,NONBLANK)\n  &LSPPVOL = &VOL\n  IF (.MSG = &Z)\n     VPUT (LSPPVOL) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LSPDP2": {"ttr": 1562, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(|+_)\n % TYPE(OUTPUT) INTENS(LOW) JUST(LEFT) PAD(' ')\n)BODY\n|FREE SPACE LIST FOR &VOL --------------------------------------------- --------\n|COMMAND ===>_ZCMD                                            |SCROLL ===>_AMT +\n+\n+   Enter|VOLUME, FREE+or|LARGEST+to sort list\n+   Enter the|END+command to select a new volume list\n+\n|   Volser   Unit    Device   Free   Free    Free   (Largest Extent)   Mount\n|           Address   Type    Cyls  Tracks  Extents    Cyls  Tracks  Attribute\n+\n)MODEL CLEAR( NCYL NTRK NXT LCYL LTRK )\n+  %UVOL     %UAD    %UTYP  %NCYL   %NTRK    %NXT    %LCYL   %LTRK   %UMNT\n)INIT\n &AMT = &ZSCML\n &ZTDMSG = LSPM009\n)PROC\n &ZCMD = TRANS (&ZCMD VOL,VOLUME LARG,LARGEST *,*)\n VER (&ZCMD,LIST,VOLUME,FREE,LARGEST MSG=LSPM008)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LSTDA": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n?  TYPE(OUTPUT) INTENS(HIGH) PAD(NULLS) CAPS(ON)\n|  TYPE(OUTPUT) INTENS(LOW) PAD(NULLS) CAPS(ON)\n\u00a2  TYPE(INPUT)  INTENS(LOW) PAD(NULLS) CAPS(ON)\n_  TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n)BODY\n%LIST OF DDNAMES ALLOCATED -----------------------------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n+   DDNAME             VOLUME  DSNAME\n)MODEL ROWS(&SCAN)\n_Z|Z               ?Z |VOLSER |Z                                             +\n)INIT\n  .ZVARS = '(LSEL DDNAME MORE DSNAME)'\n  &AMT = &ZSCML\n  .HELP = LSTHA\n  &NOHEAD = &Z\n)REINIT\n IF (.MSG \u00ac= &Z)\n     &NOHEAD = &Z\n)PROC\n &ZSCML = &AMT\n VPUT (ZSCML) PROFILE\n IF (&ZTDSELS \u00ac= 0)\n     VER (&LSEL,LIST,S,E,F,B,P,H,D MSG=DTSM001)\n     IF (&DSNAME = NULLFILE)\n         IF (&LSEL \u00ac= &Z,F)\n             &LSEL = &LSEL\n             .MSG = DTSM002\n     IF (&LSEL = P)\n         &NOHEAD = &Z\n         IF (&VOLSER = &Z)\n             &VOLUME = &Z\n         IF (&VOLSER \u00ac= &Z)\n             &VOLUME = 'VOLUME(&VOLSER)'\n         &ZSEL = 'PGM(PDS) PARM(PDS ''&DSNAME'' &VOLUME ISPMODE)'\n     IF (&LSEL = H)\n         &NOHEAD = &Z\n         &ZSEL = 'CMD(PRINTOFF ''&DSNAME'')'\n     IF (&LSEL = D)\n         &NOHEAD = &Z\n         &ZSEL = 'CMD(DSD ''&DSNAME'')'\n     IF (&LSEL = S)\n         IF (&VOLSER = &Z)\n             &VOLUME = &Z\n         IF (&VOLSER \u00ac= &Z)\n             &VOLUME = 'VOLUME(&VOLSER)'\n         &ZSEL = 'CMD(DSAT ''&DSNAME'' &VOLUME DSONLY SEC &NOHEAD +\n                  NOCR RC(PREVIOUS))'\n         &NOHEAD = NOHEAD\n &UMSG1 = 'INVALID LINE COMMAND'\n &LMSG1 = 'SEE THE TUTORIAL FOR A LIST OF VALID LINE COMMANDS (ENTER HELP)'\n &UMSG2 = 'INVALID DATASET'\n &LMSG2 = 'YOU MAY ONLY \"FREE\" A \"DUMMY\" DATASET'\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LSTHA": {"ttr": 1795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY DEFAULT(%?_)\n%TUTORIAL------------------  ISPF LISTA COMMAND  -----------------------TUTORIAL\n%COMMANDS ===>_ZCMD\n?\n    Similar to the TSO LISTA command, this function lists all allocated\n    dsnames and the ddnames they are allocated to.\n\n%Primary Commands:\n  %COMPRESS?- Compresses the display. Only the first dataset in concatenation\n              is displayed. CMP is an ALIAS for COMPRESS.\n\n  %FULL    ?- Exapnds the display. Will \"undo\" the Compress feature.\n  %LOCATE  ?- Locates a specified DDname (or part of a DDname).\n\n%Line Commands:\n  %F?       - Free the DDname and refresh the screen display.\n  %E?       - Edit the dataset.\n  %B?       - Browse the dataset.\n  %P?       - Invoke the PDS Command.\n  %S?       - Display Dataset Allocation Attributes (DSAT)\n  %H?       - Print the Dataset (PRINTOFF)\n  %D?       - Check for Enques on the dataset (DSD)\n\n%NOTE:?\"+\" indicates datasets which are part of a concatenation.\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MENU": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "./ ADD NAME=MENU0001                                                   */\n)ATTR                                                                  */\n /*                                                                    */\n /* ---------------->  DIALOG DOCUMENTATION    <---------------------  */\n /* |                                                               |  */\n /* | This panel is offered as is.....                              |  */\n /* |                                                               |  */\n /* | Questions about the design, etc. will be entertained but      |  */\n /* |  no committment is made to support this panel.                |  */\n /* |                                                               |  */\n /* | Address questions to Mr. Michael Botos                        |  */\n /* |                      HOUSE INFORMATION SYSTEMS                |  */\n /* |                      2nd & D Streets, S.W.  H2-616            |  */\n /* |                      Washington, D.C.  20515                  |  */\n /* |                      (202) 225-7620                           |  */\n /* |                                                               |  */\n /* | This member (MODMAIN) contains:                               |  */\n /* |                                                               |  */\n /* |    1) a sample SPF main panel                                 |  */\n /* |                                                               |  */\n /* |                                                               |  */\n /* |                                                               |  */\n /* |                                                               |  */\n /* ---------------->  DIALOG DOCUMENTATION    <---------------------  */\n /*                                                                    */\n /*                                                                    */\n /* ---------------->  DIALOG DOCUMENTATION    <---------------------  */\n /* |                                                               |  */\n /* | This is the current main SPF panel that we use.               |  */\n /* |                                                               |  */\n /* | NOTE: We are in the process of converting from SPF to ISPF    |  */\n /* |        Release 2.0                                            |  */\n /* |                                                               |  */\n /* ---------------->  DIALOG DOCUMENTATION    <---------------------  */\n /*                                                                    */\n)BODY\n+                 -----> %H.I.S. SPF  Main Menu +<-----\n%Enter OPTION ===>_OPT     +                                    +Time:%&ZTIME\n%\n%Z+- Terminal or SPF parameters                                +Userid:%&ZUSER\n%B+- Browse/display data                                       +Prefix:%&ZPREFIX\n%E+- Edit source data\n%U+- Utility functions\n%T+- TSO command input\n%S+- Support: dialog/menu testing/conversion\n%P+- PANVALET interface\n%D+- H.I.S. dialogues\n%H+- On-line SPF help                                     +Julian Date:%&ZJDATE\n%X+- Exit using log/list defaults                      +Gregorian Date:%&ZDATE\n%\n%Phone:  +Technical Support Center --->%225-7620\n%                                                       +Logon Proc:%&ZLOGON\n%                                                       +   PF Keys:%&ZKEYS\n%On-line Reference:  +Handbook --->%HIS1.CCHLIB         +  Terminal:%&ZTERM\n%                    +TIB      --->%HIS1.TIBLIB\n%\n%\n%\n)INIT\n  .HELP = TTUTOR\n  &ZHTOP = TTUTOR     /* TUTORIAL TABLE OF CONTENTS */\n  &ZHINDEX = TINDEX   /* TUTORIAL INDEX - 1ST PAGE  */\n)PROC\n  &SEL = TRANS( TRUNC (&OPT,'.')\n                0,'PANEL(ISPOPT)'\n                1,'PGM(ISPBRO)'\n                2,'PGM(ISPEDIT)'\n                3,'PANEL(ISPUTIL)'\n                4,'PANEL(ISPFORA)'\n                5,'PANEL(ISPJOB)'\n                6,'PGM(ISPTSO)'\n                7,'PANEL(ISPQTAC) NEWPOOL'\n                8,'PANEL(PANA)'\n                9,'PANEL(HISSEL00) NEWAPPL'\n                B,'PGM(ISPBRO)'\n                D,'PANEL(HISSEL00) NEWAPPL'\n                E,'PGM(ISPEDIT)'\n                H,'PGM(ISPTUTOR) PARM(T)'\n                P,'PANEL(PANA)'\n                S,'PANEL(ISPQTAC) NEWPOOL'\n                T,'PGM(ISPTSO)'\n                U,'PANEL(ISPUTIL)'\n                Z,'PANEL(ISPOPT)'\n                J,'PANEL(ZSDSFOPT)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n)END\n./ ADD NAME=MENU0002                                                   */\n)ATTR\n/*********************************************************************/\n/*    bob zimmerman                                                  */\n/*    cna insurance                                                  */\n/*    cna plaza                                                      */\n/*    (312) 822- 5719                                                */\n/*                                                                   */\n/*    This Menu Panel always invokes CNA0VARS program at the begining*/\n/*    of the standard SHARED POOL. This program will update the      */\n/*    SHARED POOL with CNA variables. For example, SYSTEM ID, ACCT   */\n/*    information etc...                                             */\n/*********************************************************************/\n  @   AREA(DYNAMIC) EXTEND(ON) SCROLL(OFF)\n  01  TYPE(DATAOUT) INTENS(HIGH)\n  02  TYPE(DATAOUT) INTENS(LOW)\n)BODY\n%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ------------------------\n%OPTION ===>_ZCMD                                                              +\n%\n%         0 +ISPF Parms                  %     8 +CNA Functions\n%         1 +Browse                      %     9 +&CNASDIVT\n%         2 +Edit                        %    10 +&CNASGRPT\n%         3 +PDF Utilities               %    11 +List ISPF/PDF Commands\n%         4 +Foreground Compile/Link     %     P +Panvalet SPF\n%         5 +Background Compile/Link     %     T +ISPF/PDF Tutorial\n%         6 +TSO Command Entry           %     C +&CNASPROD Changes\n%         7 +Dialog Test                 %     X +Exit ISPF\n%\n%   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n%  |+   Use ISPF/PDF V212 at your own risk! Support Groups are testing this %|\n%  |+   product now and are currently running the product in debug mode.    %|\n%  |+   Any bugs/comments must be reported using the COMMENT command.       %|\n%  |+   Enter COMMENT on any Command Line to record the bug/comment.        %|\n%  |+   Dialog questions should be directed to Bob Zimmerman at x5719.      %|\n%   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n+   USER   =%&ZUSER  +DATE   =%&ZDATE   +SYSTEM =%&CNASSYID+PRODUCT=%&CNASPROD\n+   PREFIX =%&ZPREFIX+JULIAN =%&ZJDATE  +JES#   =%&CNASJESN+APPLID =%&ZAPPLID\n+   STEP   =%&ZLOGON +TIME   =%&ZTIME   +ACCT   =%&CNASACCT+PFKEYS =%&ZKEYS\n+\n+   @CNAFPRIM -------------------------------------------------------------@\n)INIT\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n  &CNAFPRIM = &CNASPRIM\n\n  &CNASPROD = TRUNC (&ZENVIR,8)\n  &TPF01 = TRUNC (&ZPF01,' ')  &TPF01 = TRUNC (&TPF01,8)\n  &TPF02 = TRUNC (&ZPF02,' ')  &TPF02 = TRUNC (&TPF02,8)\n  &TPF03 = TRUNC (&ZPF03,' ')  &TPF03 = TRUNC (&TPF03,8)\n  &TPF04 = TRUNC (&ZPF04,' ')  &TPF04 = TRUNC (&TPF04,8)\n  &TPF05 = TRUNC (&ZPF05,' ')  &TPF05 = TRUNC (&TPF05,8)\n  &TPF06 = TRUNC (&ZPF06,' ')  &TPF06 = TRUNC (&TPF06,8)\n  &TPF07 = TRUNC (&ZPF07,' ')  &TPF07 = TRUNC (&TPF07,8)\n  &TPF08 = TRUNC (&ZPF08,' ')  &TPF08 = TRUNC (&TPF08,8)\n  &TPF09 = TRUNC (&ZPF09,' ')  &TPF09 = TRUNC (&TPF09,8)\n  &TPF10 = TRUNC (&ZPF10,' ')  &TPF10 = TRUNC (&TPF10,8)\n  &TPF11 = TRUNC (&ZPF11,' ')  &TPF11 = TRUNC (&TPF11,8)\n  &TPF12 = TRUNC (&ZPF12,' ')  &TPF12 = TRUNC (&TPF12,8)\n  &TPF13 = TRUNC (&ZPF13,' ')  &TPF13 = TRUNC (&TPF13,8)\n  &TPF14 = TRUNC (&ZPF14,' ')  &TPF14 = TRUNC (&TPF14,8)\n  &TPF15 = TRUNC (&ZPF15,' ')  &TPF15 = TRUNC (&TPF15,8)\n  &TPF16 = TRUNC (&ZPF16,' ')  &TPF16 = TRUNC (&TPF16,8)\n  &TPF17 = TRUNC (&ZPF17,' ')  &TPF17 = TRUNC (&TPF17,8)\n  &TPF18 = TRUNC (&ZPF18,' ')  &TPF18 = TRUNC (&TPF18,8)\n  &TPF19 = TRUNC (&ZPF19,' ')  &TPF19 = TRUNC (&TPF19,8)\n  &TPF20 = TRUNC (&ZPF20,' ')  &TPF20 = TRUNC (&TPF20,8)\n  &TPF21 = TRUNC (&ZPF21,' ')  &TPF21 = TRUNC (&TPF21,8)\n  &TPF22 = TRUNC (&ZPF22,' ')  &TPF22 = TRUNC (&TPF22,8)\n  &TPF23 = TRUNC (&ZPF23,' ')  &TPF23 = TRUNC (&TPF23,8)\n  &TPF24 = TRUNC (&ZPF24,' ')  &TPF24 = TRUNC (&TPF24,8)\n\n  IF (.RESP = END) &CNASSW = ON\n\n  IF (&CNASSW = ON)\n      IF (&OLDZCMD \u00ac= &Z)\n          &ZCMD = &OLDZCMD\n          &OLDZCMD = &Z\n          .RESP = ENTER\n\n  IF (&CNASSW = &Z)\n      &CNASSW = ON\n      &OLDZCMD = &ZCMD\n      &ZCMD = CNAINIT\n      .RESP = ENTER\n\n  &CNASDIVT = 'Divisional Functions'\n  &CNASGRPT = 'Group Functions'\n\n  IF (&CNASDIV = 0)\n      &CNASDIVT = '(not available)'\n  IF (&CNASGRP = 0)\n      &CNASGRPT = '(not available)'\n\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n            0,'PANEL(ISPOPTA)'\n            1,'PGM(ISRBRO) PARM(ISRBRO01)'\n            2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n            3,'PANEL(ISRUTIL)'\n            4,'PANEL(ISRFPA)'\n            5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n           5X,'PGM(BGSPGM) PARM(BGSP00A) NOCHECK'\n            6,'PGM(TSO0)'\n            7,'PGM(ISRYXDR) NOCHECK'\n            8,'PANEL(CNA$MENU)'\n            9,'PANEL(ADIVMENU)'\n           10,'PANEL(AGRPMENU)'\n            C,'PGM(ISPTUTOR) PARM(ISR00005)'\n            P,'PGM(IPNINIT) NOCHECK'\n            T,'PGM(ISPTUTOR) PARM(ISR00000)'\n     ABENDAID,'PGM(TMDDSUTL) PARM(SPF)'          /* OPTION 8.V.3    */\n      AMBLIST,'CMD(EX ''TESTP.ASG.SPF2.NEWCLIB(AMBELIST)'')' /* 8.4.4*/\n   BACKGROUND,'PANEL(CNA$BACK)'                  /* OPTION 8.4      */\n           11,'CMD(%CMDETABL)'\n      CNAINIT,'PGM(CNA0VARS)'\n     COMPAREL,'CMD(EX ''TESTP.ASG.SPF2.NEWCLIB(DFTE)'' ''CMPDLOAD CMPKLOAD'')'\n            F,'PANEL(IFAMU01)'                   /* OPTION 8.V.1    */\n      FILEAID,'PANEL(IFAMU01)'                   /* OPTION 8.V.1    */\n   FOREGROUND,'PANEL(CNA$FORE)'                  /* OPTION 8.5      */\n     JCLCHECK,'PANEL(JCK$)'                      /* OPTION 8.4/5    */\n      JOBXREF,'CMD(EX ''TESTP.ASG.SPF2.NEWCLIB(JOBEXREF)'')' /*OPT 8.7 */\n      LISTJOB,'PGM(JOB0LIST)'                    /* OPTION 8.3      */\n          PDS,'PANEL(PDS70PNS)'                  /* OPTION 3.1.2    */\n         RESQ,'PANEL(RSQ$)'                      /* OPTION 8.4/5    */\n          RJE,'CMD(EX ''TESTP.ASG.SPF2.NEWCLIB(RJE)'')'    /* OPTION 8.2 */\n          SST,'PANEL(SCHDDLG)'                   /* OPTION 8.1      */\n          TMS,'CMD(EX ''TESTP.ASG.SPF2.NEWCLIB(TMSE)'')'   /* OPTION 8.6 */\n     WAAPDSUT,'PANEL(DTS$WP)'                    /* OPTION 8.4/5    */\n          ' ',' '\n            X,'EXIT'\n            *,'?' )\n  &ZTRAIL = .TRAIL\n  IF (&CNASGRP = 0)\n      IF (&ZSEL = 'PANEL(AGRPMENU)')\n          .MSG = DTSM001\n  IF (&CNASDIV = 0)\n      IF (&ZSEL = 'PANEL(ADIVMENU)')\n          .MSG = DTSM001\n  &UMSG1 = 'OPTION NOT AVAILABLE'\n  &LMSG1 = 'YOUR CURRENT ISPPLIB LIBRARY CONCATENATION DOES NOT SUPPORT THIS +\n            OPTION'\n)END\nOLD LMF OPTION  8,'PANEL(ISRLPRIM)'\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTABLADS": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%----------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------------\n%COMMAND ===>_ZCMD\n+\n+ Below is a diagram of the front of your American Bell local area dataset.\n+ %O+represents a light being off; Change to%X+if on solid, or%B+if blinking.\n+\n+\n+\n+          _A     _B      _C                           _D\n+         &TEST  &SIG1  &LOOP1                        &PWR1\n+               &SIG2  &LOOP2                         &PWR2\n+\n+\n+ If you ran the local loopback test, descirbe what happened:\n% ===>_NTDATA07\n\n\n         %\n+Enter \"Y\" to continue adding comments%===>_E+\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n\n &TEST = 'TEST'\n &SIG1 = 'SIGNAL'\n &LOOP1 = 'REMOTE'\n &PWR1 = 'POWER'\n &SIG2 = 'DETECT'\n &LOOP2 = 'LOOPBK'\n &PWR2 = 'ON'\n\n\n &A = 'O'\n &B = 'O'\n &C = 'O'\n &D = 'O'\n &E = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG=ISPZ001\n VER (&A,LIST,O,X,B)\n VER (&B,LIST,O,X,B)\n VER (&C,LIST,O,X,B)\n VER (&D,LIST,O,X,B)\n VER (&E,LIST,Y)\n\n\n\n &NTDATA00 = 'SETTINGS ON AMERICAN BELL LOCAL AREA DATASET:'\n &NTDATA01 = '|'\n\n &NTDATA02 = ' &A      &B       &C                            &D'\n &NTDATA03 = '&TEST  &SIG1  &LOOP1                        &PWR1'\n &NTDATA04 = '      &SIG2  &LOOP2                         &PWR2'\n &NTDATA05 = '|'\n\n IF (&NTDATA07 \u00ac= ' ')\n   &NTDATA06 = 'USER''S COMMENTS ON RUNNING LOCAL TEST:'\n\n\n &NTCONTIN = &E\n\n &NTNXTPNL = 'EXIT    '\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTALFAIL": {"ttr": 1805, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%---------------------  NETWORK PROBLEM TRACKING/LOGGING  ----------------------\n%COMMAND ===>_ZCMD\n+\n+\n+     The log dataset is tied up by another user right now;\n+     Wait for 1 minute which will allow time for it to free up\n+     then%PRESS ENTER or END (PF3).+\n+\n+\n+     If this does not work, and you get this screen several times over a\n+     period of a few minutes, press the%ATTENTION (PA1) KEY+and call\n+     network control in Helena. Report that someone has the log dataset\n+     tied up.\n+\n+\n+\n+\n+\n)INIT\n &ZCMD = ' '\n &NTNXTPNL = ' '\n &NTCONTIN = ' '\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTERRPNL": {"ttr": 1807, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------------\n%COMMAND ===>_ZCMD\n+\n+      Next Panel%===>_NTNXTPNL+\n+\n+\n+      The last panel you asked to display,%\"&NTBADPNL\"+is in error;\n+\n+      The reason can be found in the upper right hand corner above.\n+      (press \"help\" for a expanded explanation of the message).\n+\n+      Make a note to fix that panel, and next type in another panel name\n+      that you wish to test, or \"EXIT\", in the field%Next Panel+\n+\n+\n+\n)INIT\n .CURSOR = NTNXTPNL\n &ZCMD = ' '\n &NTNXTPNL = ' '\n &NTCONTIN = ' '\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n\n VER (&NTNXTPNL,NONBLANK)\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTEXTEND": {"ttr": 1809, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------\n%COMMAND ===>_ZCMD\n+\n+ Specify any additional comments below:\n% ===>_NTDATA00\n\n\n       +\n% ===>_NTDATA01\n\n\n       +\n% ===>_NTDATA02\n\n\n       +\n% ===>_NTDATA03\n\n\n        +\n+Enter \"Y\" to continue adding comments%===>_B+\n+\n)INIT\n .CURSOR = NTDATA00\n &ZCMD = ' '\n &B = ' '\n &NTCONTIN = ' '\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n VER (&B,LIST,Y)\n\n &NTCONTIN = &B\n\n\n VPUT (NTCONTIN) SHARED  /* DO NOT VPUT \"NTNXTPNL\" IN THIS PANEL */\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTGENL#1": {"ttr": 2049, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-----------------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------\n%COMMAND ===>_ZCMD\n+\n+Enter the date and time when you first encountered the problem:\n+    Date     %===>_DATE    + (MM/DD/YY)\n+    Time     %===>_TIME     +(HH:MM AM/PM)\n+\n+\n+Describe the problem below:\n+    Frequency%===>_B+        (%I+for Intermittent  or%S+for Solid )\n+    Severity %===>_C+        (%I+for Inconvenience or%S+for Severe)\n+\n+\n)INIT\n\n .CURSOR = DATE\n\n &ZCMD = ' '\n\n &DATE = ' '\n &TIME = ' '\n &B = ' '\n &C = ' '\n &D = ' '\n &E = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n VER (&DATE,NONBLANK)\n VER (&TIME,NONBLANK)\n VER (&B,NONBLANK)\n VER (&B,LIST,I,S)\n VER (&C,NONBLANK)\n VER (&C,LIST,I,S)\n\n\n\n  &NTDATA00 = 'USER FIRST NOTICED PROBLEM ON &DATE AT &TIME'\n\n IF (&B = I)\n   &D = 'INTERMITTENT'\n\n IF (&B = S)\n   &D = 'SOLID'\n\n\n IF (&C = I)\n   &E = 'NOT SEVERE'\n\n IF (&C = S)\n   &E = 'SEVERE'\n\n &NTDATA01 = 'THE TROUBLE IS &D AND &E'\n\n\n &NTNXTPNL = 'NTGENL#2'\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTGENL#2": {"ttr": 2052, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY CMD(A)\n%-------------------  NETWORK PROBLEM TRACKING/LOGGING  ------------------------\n%Specify Trouble Area ===>_A\n+\n+Possible Trouble Areas (take your best guess):\n+\n+     %1+ -  Phone Line\n+     %2+ -  Modem on your end\n+     %3+ -  Your terminal (Video Terminal, Printer, etc)\n+\n+     If a repairman has worked on the problem on your end, please describe\n+     what he did, when, and what company he was from:\n+\n%     ===>_B\n\n\n       +\n+     Enter \"Y\" to continue description%===>_C+\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &A = ' '\n &B = ' '\n &C = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n VER (&A,NONBLANK)\n VER (&A,LIST,1,2,3)\n VER (&C,LIST,Y)\n\n\n\n IF (&A = 1)\n  &NTNXTPNL = 'NTLINBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN PHONE LINE'\n\n IF (&A = 2)\n  &NTNXTPNL = 'NTMDMBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN HIS MODEM'\n\n IF (&A = 3)\n  &NTNXTPNL = 'NTTERBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN HIS TERMINAL'\n\n &NTDATA01 = &B\n\n\n &NTCONTIN = &C\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTIB3277": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------------\n%COMMAND ===>_ZCMD\n+\n+      Below is a diagram of the front of your IBM 3277 TERMINAL;\n+      %O+represents a light being off.\n+      Change the%O+to%X+if the light is currently on SOLID.\n+\n+      %O+also represents the power switch out; Change to%I+if the switch\n+      is pressed in.\n+\n%      Double check the settings you've made then press enter.\n+\n+\n+                                               %L+           &SYSAV1\n+                                               %I+       _A+ &SYSAV2\n+                                               %G+           &INSRT1\n+                                               %H+--->   _B+ &INSRT2\n+                                               %T+           &INHIB1\n+                                               %S+       _C+ &INHIB2\n+\n+\n+ &OFFON\n+  _D+  %<--- POWER SWITCH - (I OR O)\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &SYSAV1 = 'SYSTEM'\n &SYSAV2 = 'AVAILABLE'\n &INSRT1 = 'INSERT'\n &INSRT2 = 'MODE'\n &INHIB1 = 'INPUT'\n &INHIB2 = 'INHIBITED'\n &OFFON = 'OFF-PUSH'\n\n &A = 'O'\n &B = 'O'\n &C = 'O'\n &D = 'O'\n\n\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n VER (&A,LIST,O,X)\n VER (&B,LIST,O,X)\n VER (&C,LIST,O,X)\n VER (&D,LIST,O,I)\n\n\n &NTDATA00 = 'SETTINGS ON IBM 3277'\n &NTDATA01 = '+'\n &NTDATA02 = '                                   &SYSAV1'\n &NTDATA03 = '                               &A  &SYSAV2'\n &NTDATA04 = '                                   &INSRT1'\n &NTDATA05 = '                               &B  &INSRT2'\n &NTDATA06 = '                                   &INHIB1'\n &NTDATA07 = '                               &C  &INHIB2'\n &NTDATA08 = '&OFFON'\n &NTDATA09 = '  &D '\n\n\n\n\n &NTNXTPNL = 'EXIT    '\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTIB3279": {"ttr": 2058, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------------\n%COMMAND ===>_ZCMD\n+\n+      Below is a diagram of the front of your IBM 3279 terminal.\n+     %O+represents a light being off;\n+      Change to%X+if your light is on solid or to%B+if blinking.\n+      For Switches, put an%X+to the left of the end that's pressed down.\n+\n+                                                   %===>_D+&NORM     +\n+ _A+&LIGHT1  +     %L+                                     | |       +\n+                   %I+                                     | |       +\n+ _B+&LIGHT2  +  <--%G+                  %S+        %===>_E+&TEST     +\n+                   %H+                  %W+                          +\n+ _C+&LIGHT3  +     %T+                  %I+        %===>_F+&DOT4     +\n+                   %S+                  %T -->+            | |       +\n+                                        %C+                | |       +\n+                                        %H+        %===>_G+&DOT2     +\n+                                        %E+                          +\n+                                        %S+        %===>_H+&UPLOW1   +\n+                                                           | |       +\n+                                                           | |       +\n%===>_J+| | |                                       %===>_I+&UPLOW2   +\n+       |   | %&POWER                +                                +\n%===>_K+| O |                                                         +\n)INIT\n &A = 'O'\n &B = 'O'\n &C = 'O'\n &D = '_'\n &E = '_'\n &F = '_'\n &G = '_'\n &H = '_'\n &I = '_'\n &J = '_'\n &K = '_'\n\n .CURSOR = D\n\n &ZCMD = ' '\n\n &LIGHT1 = 'LIGHT1'\n &LIGHT2 = 'LIGHT2'\n &LIGHT3 = 'LIGHT3'\n &NORM = 'NORMAL'\n &TEST = 'TEST'\n &DOT4 = '0000'\n &DOT2 = '00'\n &UPLOW1 = 'A,A'\n &UPLOW2 = 'A'\n &POWER = '<---POWER SWITCH'\n\n &A = 'O'\n &B = 'O'\n &C = 'O'\n\n\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n VER (&A,LIST,O,X,B)\n VER (&B,LIST,O,X,B)\n VER (&C,LIST,O,X,B)\n VER (&D,LIST,X,'_')\n VER (&E,LIST,X,'_')\n VER (&F,LIST,X,'_')\n VER (&G,LIST,X,'_')\n VER (&H,LIST,X,'_')\n VER (&I,LIST,X,'_')\n VER (&J,LIST,X,'_')\n VER (&K,LIST,X,'_')\n\n   &ONOFF1 = 'OFF     '\n   &ONOFF2 = 'OFF     '\n   &ONOFF3 = 'OFF     '\n   &PWRSWCH = 'OFF'\n\n IF (&A = X)\n   &ONOFF1 = 'ON      '\n\n IF (&B = X)\n   &ONOFF2 = 'ON      '\n\n IF (&C = X)\n   &ONOFF3 = 'ON      '\n\n IF (&A = B)\n   &ONOFF1 = 'BLINKING'\n\n IF (&B = B)\n   &ONOFF2 = 'BLINKING'\n\n IF (&C = B)\n   &ONOFF3 = 'BLINKING'\n\n\n\n IF (&D \u00ac= 'X')\n   IF (&E \u00ac= 'X')\n     .CURSOR = D\n     .MSG=NETRK006\n\n IF (&D = 'X')\n   VER (&E,LIST,'_',MSG=NETRK004)\n   &RHSW1 = 'NORMAL'\n\n IF (&E = 'X')\n   VER (&D,LIST,'_',MSG=NETRK004)\n   &RHSW1 = 'TEST'\n\n\n\n IF (&F \u00ac= 'X')\n   IF (&G \u00ac= 'X')\n     .CURSOR = F\n     .MSG=NETRK006\n\n IF (&F \u00ac= '_')\n   VER (&G,PICT,'_',MSG=NETRK004)\n   &RHSW2 = '4 COLOR'\n\n IF (&G \u00ac= '_')\n   VER (&F,PICT,'_',MSG=NETRK004)\n   &RHSW2 = '2 COLOR'\n\n\n\n IF (&H \u00ac= 'X')\n   IF (&I \u00ac= 'X')\n     .CURSOR = H\n     .MSG=NETRK006\n\n IF (&H \u00ac= '_')\n   VER (&I,PICT,'_',MSG=NETRK004)\n   &RHSW3 = 'UPPER/LOWER CASE'\n\n IF (&I \u00ac= '_')\n   VER (&H,PICT,'_',MSG=NETRK004)\n   &RHSW3 = 'UPPER CASE ONLY'\n\n\n\n IF (&J \u00ac= 'X')\n   IF (&K \u00ac= 'X')\n     .CURSOR = J\n     .MSG=NETRK006\n\n IF (&J \u00ac= '_')\n   VER (&K,PICT,'_',MSG=NETRK004)\n   &PWRSWCH = 'ON'\n\n IF (&K \u00ac= '_')\n   VER (&J,PICT,'_',MSG=NETRK004)\n   &PWRSWCH = 'OFF'\n\n\n\n &NTDATA00 = 'LIGHT AND SWITCH SETTINGS ON THE 3279'\n &NTDATA01 = '|'\n &NTDATA02 = '&LIGHT1 IS &ONOFF1             TEST/NORMAL SWITCH -->  &RHSW1'\n &NTDATA03 = '&LIGHT2 IS &ONOFF2             4/2 COLOR SWITCH -->    &RHSW2'\n &NTDATA04 = '&LIGHT3 IS &ONOFF3             UPPER-LOWER SWITCH -->  &RHSW3'\n &NTDATA05 = '|'\n &NTDATA06 = 'POWER SWITCH IS &PWRSWCH'\n\n\n\n\n &NTNXTPNL = 'EXIT    '\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTLINBAD": {"ttr": 2062, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%---------------------  NETWORK PROBLEM TRACKING/LOGGING  ----------------------\n%COMMAND ===>_ZCMD\n+\n+      Below is a picture of your phone line; please%Cursor+over - using\n+      the key that looks like this%->+ and put an %X+ where the broken\n+      spot is. Do%NOT+use the space bar!\n+\n+\n+\n_A                                                                   +\n%&B\n%&C\n%&D\n%&E\n%&F\n+\n+\n+\n+\n+\n+\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &A = 'H _______________________________________________________________ Y'\n &B = 'E      |         |          |         |          |           |    O'\n &C = 'L      |         |          |         |          |           |    U'\n &D = 'E                       (REST OF MONTANA)'\n &E = 'N'\n &F = 'A'\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG=ISPZ001\n &NTDATA00 = '|'\n &NTDATA01 = '\"X\" MARKS BROKEN SPOT IN PHONE LINE:'\n &NTDATA02 = '|'\n &NTDATA03 = &A\n &NTDATA04 = &B\n &NTDATA05 = &C\n &NTDATA06 = &D\n &NTDATA07 = &E\n &NTDATA08 = &F\n\n\n &NTNXTPNL = 'EXIT    '\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTMDMBAD": {"ttr": 2064, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-----------------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------\n%Specify Brand of Modem ===>_#\n+\n+Modem Brands:\n%   1+- Racal-Milgo 24 LSI (grey/silver, labelled on front left)\n%   2+- American Bell Local Area Dataset (lt blue/black, labelled on front)\n+\n+\n+      Enter an%X+next to the speed that you are currently operating the\n+      line at.\n+\n+          600 BPS%===>_A+\n+         1200 BPS%===>_B+\n+         2400 BPS%===>_C+\n+         4800 BPS%===>_D+\n+         9600 BPS%===>_E+\n+       19,200 BPS%===>_F+\n+\n)INIT\n\n .CURSOR = #\n\n &ZCMD = ' '\n\n &# = ' '\n &A = ' '\n &B = ' '\n &C = ' '\n &D = ' '\n &E = ' '\n &F = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n\n VER (&#,NONBLANK)\n VER (&#,LIST,1,2)\n\n .CURSOR = A\n\n IF (&# = 1)\n   &MDMTYPE = 'RACAL 24LSI'\n   &NTNXTPNL = 'NTR24LSI'\n\n IF (&# = 2)\n   &MDMTYPE = 'AMERICAN BELL LOCAL AREA DATASET'\n   &NTNXTPNL = 'NTABLADS'\n\n\n &G = '&A&B&C&D&E&F'\n VER (&G,NONBLANK)\n\n IF (&A \u00ac= ' ')\n  &SPEED = '600'\n  VER (&A,LIST,X,MSG=NETRK005)\n  &G = '&B&C&D&E&F'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = A\n\n IF (&B \u00ac= ' ')\n  &SPEED = '1200'\n  VER (&B,LIST,X,MSG=NETRK005)\n  &G = '&A&C&D&E&F'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = B\n\n IF (&C \u00ac= ' ')\n  &SPEED = '2400'\n  VER (&C,LIST,X,MSG=NETRK005)\n  &G = '&A&B&D&E&F'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = C\n\n IF (&D \u00ac= ' ')\n  &SPEED = '4800'\n  VER (&D,LIST,X,MSG=NETRK005)\n  &G = '&A&B&C&E&F'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = D\n\n IF (&E \u00ac= ' ')\n  &SPEED = '9600'\n  VER (&E,LIST,X,MSG=NETRK005)\n  &G = '&A&B&C&D&F'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = E\n\n IF (&F \u00ac= ' ')\n  &SPEED = '19200'\n  VER (&F,LIST,X,MSG=NETRK005)\n  &G = '&A&B&C&D&E'\n  IF (&G \u00ac= ' ')\n    .MSG = NETRK004\n    .CURSOR = F\n\n\n &NTDATA00 = 'USER''S MODEM IS: &MDMTYPE OPERATING AT &SPEED BPS'\n\n\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTMORSTG": {"ttr": 2307, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------\n%COMMAND ===>_ZCMD\n+\n+\n      You have not signed on with a enough memory!\n      After you press%ENTER+or%PF3/END+key, you will return to ISPF from\n      this screen. Then you should:\n\n           %1+ -  Exit ISPF (enter the END command)\n           %2+ -  Wait for the word%READY+to appear.\n           %3+ -  Re-logon with the following command:\n+\n+\n+               LOGON YOURID/PASSWORD %SIZE(2048)\n+\n+               <--same as before -->  <--new--->\n+\n+\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTNOROOM": {"ttr": 2309, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-----------------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------\n%COMMAND ===>_ZCMD\n+\n+\n      The program has run out of memory!!\n\n      Everything you have done so far will be saved. Press the Enter key or\n      your PF3 key to proceed to the Problem Number Assignment screen.\n\n%     Please notify Network Control in Helena that you had this problem.\n+\n)INIT\n &A = ' '\n &ZCMD = ' '\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG=ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTNOSPLT": {"ttr": 2311, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-----------------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------\n%COMMAND ===>_ZCMD\n+\n      You have tried to enter this system with ISPF in%SPLIT+screen.\n\n      This is not allowed. Press Enter to retrun to ISPF. Then\n      exit%SPLIT+screen and you may re-try this function.\n+\n)INIT\n &A = ' '\n &ZCMD = ' '\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTPR#PNL": {"ttr": 2313, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-------------------  NETWORK PROBLEM TRACKING/LOGGING  ------------------------\n%COMMAND ===>_ZCMD\n+\n+      We have assigned the name%\"&NTPROB#\"+to your problem;\n+\n+      If you need to contact Network Control in Helena, mentioning this\n+      name will help them find a permanent record of it, and speed\n+      processing up.  You may want to write a short note, including the\n+      name%&NTPROB#+and tape it to the equipment causing the trouble, in\n+      case one of your co-workers has to work with Network Control later\n+      on, and you don't happen to be around at the time.\n+\n+      You've gone as far as you can go with Network Tracking/Logging and\n+      should return your tube to the point where you started.\n+\n+      Please press either ENTER or%PF3+(\"END\") when you've read this\n+      screen. To back out from that point, you will need to press the\n+      %pf3+ (\"end\") key again, then wait for the word %ready+ to appear\n+      on the screen. when it does, type in %logoff+ and press enter.\n+\n)INIT\n           /* THIS WILL BE THE LAST PANEL DISPLAYED IN THE */\n           /* NETWORK LOG SYSTEM; YOU CAN MODIFY IT, BUT THE */\n           /* PANEL NAME MUST BE \"NTPR#PNL\". ALSO, NO VARIABLES */\n           /* FROM THIS PANEL WILL BE READ BY THE PROGRAM, */\n           /* AND THEREFORE NOTHING CAN BE ADDED TO THE LOG */\n           /* FROM THIS PANEL */\n &ZCMD = ' '\n &A = ' '\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "NTPRBTYP": {"ttr": 2315, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------\n%Specify a Trouble Area ===>_A\n+\n+\n+Possible Trouble Areas:\n+     %1+ -  Phone Line\n+     %2+ -  Modem on your end\n+     %3+ -  Your equipment\n+\n+\n+Specify Problem Information:\n+     Frequency%===>_B+ (%I+for Intermittent;%S+for Solid )\n+     Severity %===>_C+ (%I+for Inconvenient;%S+for Severe)\n+\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &A = ' '\n &B = ' '\n &C = ' '\n &D = ' '\n &E = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n\n VER (&A,NONBLANK)\n VER (&A,LIST,1,2,3)\n VER (&B,NONBLANK)\n VER (&B,LIST,I,S)\n VER (&C,NONBLANK)\n VER (&C,LIST,I,S)\n\n\n\n IF (&A = 1)\n  &NTNXTPNL = 'NTLINBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN PHONE LINE'\n\n IF (&A = 2)\n  &NTNXTPNL = 'NTMDMBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN HIS MODEM'\n\n IF (&A = 3)\n  &NTNXTPNL = 'NTEQPBAD'\n  &NTDATA00 = 'USER THINKS THE PROBLEM IS IN HIS EQUIPMENT'\n\n IF (&B = I)\n   &D = 'INTERMITTENT'\n\n IF (&B = S)\n   &D = 'SOLID'\n\n\n IF (&C = I)\n   &E = 'NOT SEVERE'\n\n IF (&C = S)\n   &E = 'SEVERE'\n\n &NTDATA01 = 'THE TROUBLE IS &D AND &E'\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTR24LSI": {"ttr": 2318, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------------\n%COMMAND ===>_ZCMD\n+\n+      Below is a diagram of the front of your Racal-Milgo 24LSI Modem.\n\n+     %O+represents a light begin off.\n+      Change to%X+if the light is on solid, or%B+if light is blinking.\n+\n+     %O+also represents a switch out.\n+      Change to %I+if the switch is pressed in.\n+      Double check the settings you've made then press enter.\n+\n+\n+\n%     &LITSWCH\n+\n+    &PWR &TST &ER &DTR &DSR &RTS &TD &DCD &RD       &ET  &RT  &AL  &DL\n+     _A+  _B+  _C+ _D+  _E+  _F+  _G+ _H+  _I+       _J+  _K+  _L+  _M+\n+\n%     &CHOICES\n+\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &LITSWCH = '<------------- LIGHTS ----------------->        <---SWITCHES---->'\n\n &CHOICES = '<----------- X, O, OR B --------------->        <--- O OR I ---->'\n\n &PWR = ' PWR'\n &TST = ' TST'\n &ER = ' ER'\n &DTR = ' DTR'\n &DSR = ' DSR'\n &RTS = ' RTS'\n &TD = ' TD'\n &DCD = ' DCD'\n &RD = ' RD'\n\n &ET = ' ET'\n &RT = ' RT'\n &AL = ' AL'\n &DL = ' DL'\n\n &A = 'O'\n &B = 'O'\n &C = 'O'\n &D = 'O'\n &E = 'O'\n &F = 'O'\n &G = 'O'\n &H = 'O'\n &I = 'O'\n &J = 'O'\n &K = 'O'\n &L = 'O'\n &M = 'O'\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n VER (&A,LIST,O,X,B)\n VER (&B,LIST,O,X,B)\n VER (&C,LIST,O,X,B)\n VER (&D,LIST,O,X,B)\n VER (&E,LIST,O,X,B)\n VER (&F,LIST,O,X,B)\n VER (&G,LIST,O,X,B)\n VER (&H,LIST,O,X,B)\n VER (&I,LIST,O,X,B)\n\n\n VER (&J,LIST,O,I)\n VER (&K,LIST,O,I)\n VER (&L,LIST,O,I)\n VER (&M,LIST,O,I)\n\n &NTDATA00 = 'SETTINGS ON RACAL 24LSI:'\n &NTDATA01 = '+'\n &NTDATA02 = ' &LITSWCH'\n\n &TEMP1 = '&PWR &TST &ER &DTR &DSR &RTS &TD &DCD &RD'\n &TEMP2 = '&ET  &RT  &AL  &DL'\n &NTDATA03 = '&TEMP1       &TEMP2'\n\n &TEMP1 = '  &A    &B   &C    &D    &E    &F    &G   &H    &I'\n &TEMP2 = '  &J    &K    &L    &M '\n &NTDATA04 = '&TEMP1       &TEMP2'\n &NTDATA05 = ' &CHOICES'\n\n\n\n &NTNXTPNL = 'EXIT    '\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NTTERBAD": {"ttr": 2321, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------  NETWORK PROBLEM TRACKING/LOGGING  -------------------------\n%SPECIFY YOUR TERMINAL MODEL ===>_A\n+\n+Terminal types:\n+\n%     1+- IBM 3277 (Beige, labelled on left rear of cabinet)\n%     2+- IBM 3279 (Black front, beige rear; Labelled on center of area just\n+                   below picture tube)\n+\n)INIT\n\n .CURSOR = A\n\n &ZCMD = ' '\n\n &A = ' '\n\n &NTDATA00 = ' '\n &NTDATA01 = ' '\n &NTDATA02 = ' '\n &NTDATA03 = ' '\n &NTDATA04 = ' '\n &NTDATA05 = ' '\n &NTDATA06 = ' '\n &NTDATA07 = ' '\n &NTDATA08 = ' '\n &NTDATA09 = ' '\n\n\n)PROC\n\n VER (&A,NONBLANK)\n VER (&A,LIST,1,2)\n\n .CURSOR = A\n\n IF (&A = 1)\n   &TRMTYPE = 'IBM 3277'\n   &NTNXTPNL = 'NTIB3277'\n\n IF (&A = 2)\n   &TRMTYPE = 'IBM 3279'\n   &NTNXTPNL = 'NTIB3279'\n\n\n\n\n &NTDATA00 = 'USER''S TERMINAL IS A: &TRMTYPE'\n\n\n\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "NT1STPNL": {"ttr": 2323, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%-----------------------  NETWORK PROBLEM TRACKING/LOGGING  --------------------\n%COMMAND ===>_ZCMD\n+\n+      This system is designed to lead you through the necessary steps to\n+      determine the problem with your terminal/workstation, and log\n+      information about it, so that people at ISD in Helena can\n+      determine how far you've gotten in solving it, plus have a record\n+      of what's wrong. Please enter the information below, and\n       press%ENTER+or%end+\n+\n+ &A             _PRIMNAME                                            +\n+ &B                     _ALTNAME                                      +\n+ &C                 _PHONE#                                           +\n+ &D           _CICS+     %&E           _VTAMID +\n+ &F                 _TERMTYPE\n\n+ &G            _LOCATION\n                                                                       +\n+ &H                                     _PRIMDESC\n\n\n                                          %\"Y\" FOR MORE ROOM ===>_I+\n+\n+\n)INIT\n /******************************************************************/\n /* =====> NOTE - COMMENTS HAVE BEEN MOVED TO BOTTOM OF THIS PANEL */\n /******************************************************************/\n\n .CURSOR = PRIMNAME\n\n &ZCMD = ' '\n &PRIMNAME = ' '\n &ALTNAME = ' '\n &PHONE# = ' '\n &CICS = ' '\n &VTAMID = ' '\n &TERMTYPE = ' '\n &LOCATION = ' '\n &PRIMDESC = ' '\n\n &A = 'Your Name ===>'    /* BUILD DUMMY SCREEN DISPLAY VARIABLES */\n &B = 'Alternate Contact ===>'\n &C = 'Phone Numbers ===>'\n &D = 'CICS ID ===>'\n &E = 'VTAM ID ===>'\n &F = 'Terminal Type ===>'\n &G = 'Location ===>'\n &H = 'Brief description of your problem ===>'\n &I = ' '\n\n\n)PROC\n\n VER (&PRIMNAME,NONBLANK)\n VER (&ALTNAME,NONBLANK)\n VER (&PHONE#,NONBLANK)\n VER (&CICS,NONBLANK)\n VER (&VTAMID,NONBLANK)\n VER (&TERMTYPE,NONBLANK)\n VER (&LOCATION,NONBLANK)\n VER (&PRIMDESC,NONBLANK)\n VER (&I,LIST,Y)\n\n\n                        /* IN CONCATENATIONS BELOW, MAKE SURE THAT */\n                        /* THE TOTAL SUM OF THE LENGTHS YOU ARE */\n                        /* CONCATENATING TOGETHER ISN'T GREATER */\n                        /* THAN 240, OR YOU CAN GET A PANEL ERROR */\n\n &NTDATA00 = '&A &PRIMNAME' /* CONCATENATE LEGEND PLUS USER INPUT TO */\n &NTDATA01 = '&B &ALTNAME'\n &NTDATA02 = '&C &PHONE#' /* SEND TO PROG; BLANK BETWEEN VARIABLES */\n &NTDATA03 = '&D &CICS'\n &NTDATA04 = '&E &VTAMID' /* WILL CARRY THROUGH FOR READABILITY */\n &NTDATA05 = '&F &TERMTYPE'\n &NTDATA06 = '&G &LOCATION'\n &NTDATA07 = '&H (SEE NEXT LINE)' /* LENGTH OF H PLUS PRIMDESC */\n &NTDATA08 = &PRIMDESC /* EXCEED 240; SO USE 2 VARIABLES */\n &NTDATA09 = ' ' /* BE SURE TO CLEAR UNUSED VARIABLES */\n\n &NTCONTIN = &I  /* PUT USER'S \"Y\" OR BLANK IN \"NTCONTIN\" */\n\n &NTNXTPNL = 'NTGENL#1'    /* THIS IS YOUR FIRST PANEL CHOICE */\n                           /* YOU CAN CHANGE TO SUIT YOUR NEEDS */\n\n\n\n /* REMEMBER THAT ANY OF THE FOLLOWING YOU FAIL TO \"VPUT\" WILL */\n /* NEVER GET TO THE PROGRAM, NOR TO THE LOG DATASET. MOREOVER, */\n /* DOING A \"VPUT\" ON ANY OF YOUR EXTRA (LOCAL) VARIABLES IS */\n /* USELESS, BECAUSE THE PROGRAM WILL IGNORE THEM. */\n\n VPUT (NTNXTPNL NTCONTIN) SHARED\n VPUT (NTDATA00 NTDATA01 NTDATA02 NTDATA03 NTDATA04) SHARED\n VPUT (NTDATA05 NTDATA06 NTDATA07 NTDATA08 NTDATA09) SHARED\n\n)END\n\n /******************************************************************/\n /*                                                                */\n /*     THIS PANEL MUST BE THE FIRST PANEL IN THE SYSTEM, AND ITS  */\n /* NAME HAS TO BE \"NT1STPNL\". AFTER THIS PANEL YOU CAN CALL ANY   */\n /* OTHER YOU LIKE NEXT, BY SETTING &NTNXTPNL = YOUR-NEXT-PANEL-   */\n /* NAME. YOU CAN PICK ANY NAME YOU LIKE, AS LONG AS THERE'S A     */\n /* PANEL BY THAT NAME.  THERE ARE SEVERAL PANELS WHOSE NAMES      */\n /* ARE MAGIC, SO DON'T FOOL WITH THEM:                            */\n /*                                                                */\n /* \"NTALFAIL\" - ALLOCATION FAIL/WAIT PANEL                        */\n /* \"NT1STPNL\" - MUST BE THE NAME OF FIRST PANEL IN SYSTEM         */\n /* \"NTEXTEND\" - COMMENT EXTENSION PANEL                           */\n /* \"NTERRPNL\" - THIS IS THE \"BAD PANEL PANEL\"                     */\n /* \"NTSKLTON\" - THIS IS A DUMMY OR SKELETON PANEL THAT IS NOT     */\n /*              ACTUALLY USED IN THE SYSTEM. IT CONTAINS ALL THE  */\n /*              ESSENTIAL VARIABLE INITIALIZATION, VPUTS, ETC,    */\n /*              AND YOU CAN COPY IT INTO EACH NEW PANEL YOU BEGIN */\n /*              TO GET YOU STARTED.                               */\n /* \"NTPR#PNL\" - THIS IS THE LAST PANEL DISPLAYED, AND GIVES THE   */\n /*              USER HIS PROBLEM NUMBER; YOU CAN MODIFY IT IF YOU */\n /*              WANT, BUT IT MUST HAVE THE NAME \"NTPR#PNL\".       */\n /*              IT WILL BE DISPLAYED AFTER YOU RETURN THE WORD    */\n /*              \"EXIT\" TO THE PROGRAM, AND JUST BEFORE THE        */\n /*              PROGRAM TERMINATES.                               */\n /*                                                                */\n /*     WHEN CHOOSING NAMES, BE SURE TO FOLLOW THE NAMING CONVEN-  */\n /* TION - BEGIN THEM ALL WITH \"NT\"; SUBSEQUENT LETTERS ARE UP TO  */\n /* YOU, BUT I'D RECOMMEND NAMES THAT MAKE SENSE, SUCH AS USING    */\n /* \"NTMODTYP\" FOR A PANEL THAT DEALS WITH THE TYPE OF MODEM, ETC. */\n /*                                                                */\n /*     FOR VARIABLES, IN ADDITION TO \"&NTNXTPNL\" MENTIONED ABOVE, */\n /* THERE ARE SEVERAL VARIABLES YOU MUST HAVE AND USE BECAUSE THE  */\n /* PROGRAM IS LOOKING FOR THEM; YOU MUST GIVE THESE A VALUE AND   */\n /* \"VPUT\" THEM IN EVERY SINGLE PANEL YOU BUILD, EVEN IF THE       */\n /* VALUE IS BLANKS. THEY ARE:                                     */\n /*                                                                */\n /* \"NTNXTPNL\" - SET THIS TO THE NAME OF THE NEXT PANEL YOU WANT   */\n /*              DISPLAYED. LENGTH OF THIS VARIABLE IS 8 BYTES.    */\n /*                                                                */\n /* \"NTCONTIN\" - SET THIS TO \"Y\" IF YOU WANT A COMMENT CONTINUAT-  */\n /*              SCREEN FOR A PANEL. LENGTH OF DATA IS 1 BYTE.     */\n /*                                                                */\n /* \"NTDATA00\" THROUGH (CURRENTLY) \"NTDATA09\" - THESE ARE THE      */\n /*              VARIABLES THAT YOU MUST USE TO PASS DATA TO THE   */\n /*              PROGRAM. IF THESE AREN'T ENOUGH, MORE CAN BE      */\n /*              ADDED, BUT CONTINUE THE NAMING CONVENTION - I.E.  */\n /*              \"NTDATA10\", \"NTDATA11\", ETC. ADDING MORE WILL     */\n /*              MEAN MODIFYING THE PROGRAM \"NETTRACK\" BEFORE THEY */\n /*              CAN BE USED. ALL \"NTDATAXX\" VARIABLES ARE 240     */\n /*              CHARACTERS LONG.                                  */\n /*                                                                */\n /*                                                                */\n /*     THERE ARE TWP VARIABLES, \"NTBADPNL\" & \"NTPROB#\" THAT MUST  */\n /* BE DEFINED AND SET TO BLANKS IN THIS PANEL (\"NT1STPNL\") ONLY.  */\n /* DO NOT FOOL WITH THEM, EXCEPTING TO MAKE SURE THAT THERE IS    */\n /* A \"VPUT\" STATEMENT TO GET THEM INTO THE SYSTEM.                */\n /*                                                                */\n /*     NOTE THAT YOU CAN BUILD IN AND USE AS MANY OTHER VARIABLES */\n /* IN A PANEL AS YOU LIKE, AND THEIR LENGTH CAN BE ANYWHERE FROM  */\n /* 1 TO 240 CHARACTERS MAX, BUT IN THE )PROC SECTION YOU MUST     */\n /* ASSIGN THESE TO ONE OF THE \"NDATA\" VARIABLES, OR YOUR DATA     */\n /* WON'T GET TO THE PROGRAM. EXAMPLE: &NTDATA00 = &YOURVAR        */\n /*                                                                */\n /******************************************************************/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSDXREF": {"ttr": 2563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n)BODY EXPAND(//)\n%/-/  CREATE A CROSS-REFRENCE MEMBER LIST  /-/\n%COMMAND ===>_ZCMD\n%\n+Enter the Libraries DSNAMEs below:\n+\n+    DSNAME #1%===>_DSNAME1\n+    DSNAME #2%===>_DSNAME2\n+    DSNAME #3%===>_DSNAME3\n+    DSNAME #4%===>_DSNAME4\n+\n%     Entering the library with the GREATER amount of members\n      first, will improve the performance of this function.\n)INIT\n .CURSOR = DSNAME1\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ZCMD001\n\n VER (&DSNAME1,NB,DSNAME)\n VER (&DSNAME2,NB,DSNAME)\n VER (&DSNAME3,DSNAME)\n VER (&DSNAME4,DSNAME)\n\n IF (.MSG = &Z)\n     IF (&DSNAME1 \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME1,'''')\n         &TRAIL = .TRAIL\n         IF (&TRAIL = &Z)\n             &DSN1 = '&ZUSER..&DSNAME1'\n         IF (&TRAIL \u00ac= &Z)\n             &DSN1 = TRUNC (&TRAIL,'''')\n     IF (&DSNAME2 \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME2,'''')\n         &TRAIL = .TRAIL\n         IF (&TRAIL = &Z)\n             &DSN2 = '&ZUSER..&DSNAME2'\n         IF (&TRAIL \u00ac= &Z)\n             &DSN2 = TRUNC (&TRAIL,'''')\n     IF (&DSNAME3 \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME3,'''')\n         &TRAIL = .TRAIL\n         IF (&TRAIL = &Z)\n             &DSN3 = '&ZUSER..&DSNAME3'\n         IF (&TRAIL \u00ac= &Z)\n             &DSN3 = TRUNC (&TRAIL,'''')\n     IF (&DSNAME4 \u00ac= &Z)\n         &TEMP = TRUNC (&DSNAME4,'''')\n         &TRAIL = .TRAIL\n         IF (&TRAIL = &Z)\n             &DSN4 = '&ZUSER..&DSNAME4'\n         IF (&TRAIL \u00ac= &Z)\n             &DSN4 = TRUNC (&TRAIL,'''')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDSDXRE2": {"ttr": 2565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n# TYPE(OUTPUT) INTENS(LOW) JUST(RIGHT)\n| TYPE(OUTPUT) INTENS(LOW) JUST(ASIS)\n)BODY WIDTH(80)\n%MEMBER COMPARE LISTING -(DUPLICATES:&DUPESC)-----------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_Z   +\n+\n+Commands:%SCAN:+duplicates   %ALL:+all members   %NONDUPES:+non-duplicates\n+\n+  NAME       SIZE   LIBRARY\n)MODEL ROWS(&XYZ)\n|DSN     +#ZLCNORC+ |LIB\n)INIT\n  .ZVARS = 'ZSCML'         /* SCROLL AMT VARIABLE NAME  */\n  IF (&XYZ = &Z) &XYZ = ALL\n)PROC\n  VER (&ZCMD,LIST,SCAN,ALL,NONDUPES)\n  IF (&ZCMD = NONDUPES) &DUPES = 0 &XYZ = SCAN\n  IF (&ZCMD \u00ac= NONDUPES) &DUPES = 1\n  VPUT (ZSCML) PROFILE\n  IF (.MSG = &Z)\n    IF (&ZCMD \u00ac= &Z,NONDUPES)\n      &XYZ = &ZCMD\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDSDXRE3": {"ttr": 2567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n)BODY EXPAND(//)\n%/-/  CREATING MEMBER LISTS  /-/\n%COMMAND ===>_ZCMD\n%\n+\n+Current duplicate count:%&DUPESC\n+\n+    &LINE1\n+    &LINE2\n+    &LINE3\n+    &LINE4\n+\n+\n+\n)INIT\n .CURSOR = ZCMD\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TDSINDX0": {"ttr": 2569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%--------------------------  DATA SET FUNCTIONS  -------------------------------\n%\n+\n+  This dialog returns a list of datasets which begin with the node specified\n+  on the following line:\n+\n+  Data Set Index List%===> BOZO +\n+\n+\n+  The above example will list all dataset that begin with%BOZO+, (i.e.\n+  BOZO.CLOWNLIB, BOZO.CIRCUS.OBJLIB, and BOZO.CIRCUS.LOADLIB).\n+\n+\n+  If you want to limit the search, you can specify TAPE or DISK search.\n+\n+Press the%END+key to continue.\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TDSINDX1": {"ttr": 2571, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%--------------------------  DATA SET FUNCTIONS  -------------------------------\n%\n+Various actions can be taken against a dataset by putting the selection listed\n+below in the%SEL+field which is before each dataset name.\n+\n%Selection     Description\n%---------     ----------------------------------------------------------------+\n%?       +    %Display+Dataset information -%DSCB+\n%S       +    %Browse+the dataset\n%B       +    %Browse+the dataset\n%E       +    %Edit+the dataset\n%DEL     +    %Delete+the dataset and%uncatalogue+it\n%UNCAT   +    %Uncatalogue+the dataset\n%SCRATCH +    %Scratch+the dataset but do%not+try to uncatalog it.\n+\n+\n+\n+Press the%END+key to continue.\n)PROC\n /*   &ZCONT = CRACF002  */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TRMDLCK1": {"ttr": 2573, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n   \u00ac TYPE(INPUT) INTENS(NON)\n)BODY\n%-------------------  TERMINAL IN USE BY &ZUSER  -------------------------&ZTIME\n%COMMAND ===>_ZCMD\n+\n+\n+  Specify Password to Unlock Terminal%===>\u00acKEY     +\n+  Do you want to reset your Password %===>_Z+\n+\n)INIT\n  .ZVARS = '(NLOCK)'\n  &KEY = &Z\n  &NLOCK = N\n)PROC\n  IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n  VER (&KEY,NONBLANK)\n  &KEY = TRUNC(&KEY,8)\n  &NLOCK = TRUNC(&NLOCK,1)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TRMDLCK2": {"ttr": 2575, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n   \u00ac TYPE(INPUT) INTENS(NON)\n)BODY\n%-------------------  TERMINAL IN USE BY &ZUSER  -------------------------&ZTIME\n%COMMAND ===>_ZCMD\n+\n+Specify a Password%===>\u00acKEY     +\n+\n+ New Users Note:   This password will be required when you attempt to\n                    release the terminal from this security routine.\n)INIT\n  &KEY = '        '\n)PROC\n  IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n  VER (&KEY,NONBLANK)\n  &KEY = TRUNC(&KEY,8)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOBHELP": {"ttr": 2577, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n |    TYPE(OUTPUT)\n      INTENS(LOW)\n      CAPS(OFF)\n\n #    TYPE(INPUT)\n      INTENS(HIGH)\n      PAD(' ')\n\n)BODY EXPAND(//)\n%/-/  TSO EXECUTE COMMAND SCREEN  /-/\n%COMMAND ===>_ZCMD\n%\n+Primary Commands:%F+- Function    %S+- Syntax     %O+- Operands\n%\n+Complete the TSO Command below:\n+===>#CMD\n\n+\n)MODEL ROWS(SCAN)\n    |RECORD\n)INIT\n .CURSOR = CMD\n &SAVECMD = &CMD\n &SAVECSR = .CSRPOS\n  &ZTDMARK = 'END OF HELP '\n  &UMSG40 = &Z\n  &LMSG40 = &Z\n  &ZTDMSG = DTSM040\n  &ZSCROLLD = DATA\n)REINIT\n IF (.CURSOR = &Z) .CURSOR = CMD\n IF (.CSRPOS = &Z) .CSRPOS = &SAVECSR\n)PROC\n IF (&ZCMD \u00ac= OPERAND,O,FUNCTION,F,SYNTAX,S,&Z) .MSG=ISPZ001\n IF (&ZCMD \u00ac= &Z)\n     &TYPE = TRUNC (&ZCMD,1)\n     IF (&TYPE = S) &TYPE = X\n     IF (&TYPE = O) &TYPE = ')'\n     &SW = ON\n IF (&CMD = &Z)\n   .MSG = DTSM002\n   &CMD = &SAVECMD\n   REFRESH (CMD)\n   .CSRPOS = &SAVECSR\n &UMSG2 = 'NO COMPLETED TSO COMMAND'\n &LMSG2 = 'YOU ARE REQUIRED TO ENTER THE ENTIRE COMMAND OR TO ENTER +\n THE END COMMAND'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TSOD": {"ttr": 2579, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+#)\n/*********************************************************************/\n/*                                                                   */\n/*   BOB ZIMMERMAN                                                   */\n/*   CNA INSURANCE                                                   */\n/*   (312) 822-5719                                                  */\n/*   LAST MODIFIED 8503                                              */\n/*                                                                   */\n/*********************************************************************/\n  _ TYPE(INPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)\n  ! TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)\n)BODY LMSG(LONGMSG)\n%-------------------------  TSO COMMAND PROCESSOR  -----------------------------\n%SPF COMMAND(S) ===>#ZCMD\n                                                                               %\n!LONGMSG                                                                       %\n%ENTER TSO COMMAND(S) OR CLIST BELOW:\n%===>_TSOTEXT\n\n\n)INIT\n  .HELP = ISR60010\n  .CURSOR = TSOTEXT\n)PROC\n  IF (&ZCMD \u00ac= 'CANCEL')             /* ONLY VALID PRIMARY COMMAND        */\n      IF (.RESP = END)               /* SAVE TSO TEXT WHEN END COMMAND    */\n          VPUT (TSOTEXT) PROFILE\n  IF (&ZCMD = CANCEL)                /* DONT SAVE TSO TEXT FOR CANCEL     */\n      &ZCMD = &Z\n      .RESP = END\n  IF (&ZCMD \u00ac= &Z)\n      .MSG = DTSM001\n\n  &CMD1 = TRUNC (&TSOTEXT,&ZDEL)     /* TRUNCATE TSO COMMAND BY SPF DELIMITER */\n  &TRAIL = .TRAIL\n  &CMD2 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD3 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD4 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD5 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD6 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD7 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD8 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD9 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD10 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD11 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD12 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD13 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD14 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD15 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD16 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD17 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD18 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD19 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD20 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD21 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD22 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD23 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD24 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD25 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  &CMD26 = TRUNC (&TRAIL,&ZDEL)\n  &TRAIL = .TRAIL\n  IF (&TRAIL \u00ac= &Z)\n      .MSG = DTSM002\n  &SW = OFF\n  IF (&CMD1 \u00ac= &Z)    &CMD1 = 'CMD(&CMD1)'          &SW = ON\n  IF (&CMD2 \u00ac= &Z)    &CMD2 = 'CMD(&CMD2)'          &SW = ON\n  IF (&CMD3 \u00ac= &Z)    &CMD3 = 'CMD(&CMD3)'          &SW = ON\n  IF (&CMD4 \u00ac= &Z)    &CMD4 = 'CMD(&CMD4)'          &SW = ON\n  IF (&CMD5 \u00ac= &Z)    &CMD5 = 'CMD(&CMD5)'          &SW = ON\n  IF (&CMD6 \u00ac= &Z)    &CMD6 = 'CMD(&CMD6)'          &SW = ON\n  IF (&CMD7 \u00ac= &Z)    &CMD7 = 'CMD(&CMD7)'          &SW = ON\n  IF (&CMD8 \u00ac= &Z)    &CMD8 = 'CMD(&CMD8)'          &SW = ON\n  IF (&CMD9 \u00ac= &Z)    &CMD9 = 'CMD(&CMD9)'          &SW = ON\n  IF (&CMD10 \u00ac= &Z)    &CMD10 = 'CMD(&CMD10)'       &SW = ON\n  IF (&CMD11 \u00ac= &Z)    &CMD11 = 'CMD(&CMD11)'       &SW = ON\n  IF (&CMD12 \u00ac= &Z)    &CMD12 = 'CMD(&CMD12)'       &SW = ON\n  IF (&CMD13 \u00ac= &Z)    &CMD13 = 'CMD(&CMD13)'       &SW = ON\n  IF (&CMD14 \u00ac= &Z)    &CMD14 = 'CMD(&CMD14)'       &SW = ON\n  IF (&CMD15 \u00ac= &Z)    &CMD15 = 'CMD(&CMD15)'       &SW = ON\n  IF (&CMD16 \u00ac= &Z)    &CMD16 = 'CMD(&CMD16)'       &SW = ON\n  IF (&CMD17 \u00ac= &Z)    &CMD17 = 'CMD(&CMD17)'       &SW = ON\n  IF (&CMD18 \u00ac= &Z)    &CMD18 = 'CMD(&CMD18)'       &SW = ON\n  IF (&CMD19 \u00ac= &Z)    &CMD19 = 'CMD(&CMD19)'       &SW = ON\n  IF (&CMD20 \u00ac= &Z)    &CMD20 = 'CMD(&CMD20)'       &SW = ON\n  IF (&CMD21 \u00ac= &Z)    &CMD21 = 'CMD(&CMD21)'       &SW = ON\n  IF (&CMD22 \u00ac= &Z)    &CMD22 = 'CMD(&CMD22)'       &SW = ON\n  IF (&CMD23 \u00ac= &Z)    &CMD23 = 'CMD(&CMD23)'       &SW = ON\n  IF (&CMD24 \u00ac= &Z)    &CMD24 = 'CMD(&CMD24)'       &SW = ON\n  IF (&CMD25 \u00ac= &Z)    &CMD25 = 'CMD(&CMD25)'       &SW = ON\n  IF (&CMD26 \u00ac= &Z)    &CMD26 = 'CMD(&CMD26)'       &SW = ON\n  IF (&SW = OFF) .MSG = DTSM003\n\n/*   ERROR MESSAGES  */\n\n  &UMSG1 = 'INVALID SPF COMMAND'\n  &LMSG1 = 'ENTER A VALID ISPF COMMAND ON THE TOP LINE OR PREFACE A +\n            TSO COMMAND WITH \"TSO\"'\n  &UMSG2 = 'EXCEEDED 26 COMMANDS'\n  &LMSG2 = 'THERE IS A LIMIT OF 26 COMMANDS STACKED ON THE TSO COMMAND +\n            LINE'\n  &UMSG3 = 'ENTER A TSO COMMAND'\n  &LMSG3 = 'ENTER A VALID TSO COMMAND ON THE TSO COMMAND LINE '\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TUTPC050": {"ttr": 2582, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n    \u00ac  INTENS(HIGH) TYPE(OUTPUT) PAD(' ')\n    \u00a2  INTENS(LOW)  TYPE(OUTPUT) PAD(' ') JUST(ASIS)\n)BODY\n%-------------------------  TUTORIAL PRINT - STATUS  ---------------------------\n%COMMAND ===>_ZCMD                                           +\n+\n+\n+  Current tutorial panel:\n+\n+    Panel ID :\u00acTUTOR   +\n+\n+    Hierarchy:\u00acHPOS                                                         +\n+\n+\n+  Run information:\n+\n+    Panels already printed: \u00a2Z   +\n+\n+\n)INIT\n   .ZVARS = '(TOTNUM)'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPE010": {"ttr": 2584, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%--------------------------  TUTORIAL PRINT - ENTRY  ---------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+ISPF LIBRARY:\n+   Project%===>_PRJ1    +\n+   Group  %===>_LIB1    % ===>_LIB2    % ===>_LIB3    % ===>_LIB4    +\n+   Type   %===>_TYP1    +\n+\n+OTHER PARTITIONED DATA SET:\n+   Data set name %===>_DSN                                           +\n+\n+PORTION OF TUTORIAL TO PRINT:\n+   Top tutorial panel ID  %===>_TUTORTOP+\n+\n+PANEL PRINT OPTIONS:\n+   Print tutorials        %===>_PAN+     (yes or no)\n+   Print table of contents%===>_TOC+     (yes or no)\n+   Destination printer ID %===>_REMOT +  (leave blank for LOCAL)\n+   Xerox laser printer    %===>_XRX+     (yes or no)\n+      UDK symbol          %===>_Z+       (if Xerox laser printer)\n+   Upper case only        %===>_CAP+     (yes or no)\n)INIT\n    .ZVARS = '(UDK)'\n    .HELP = TUTPT001\n)PROC\n    IF (&DSN = &Z)\n       VER (&PRJ1,NB                  MSG=TUTP002)\n       VER (&PRJ1,NAME                MSG=TUTP005)\n       VER (&LIB1,NB                  MSG=TUTP003)\n       VER (&LIB1,NAME                MSG=TUTP006)\n       VER (&TYP1,NB                  MSG=TUTP004)\n       VER (&TYP1,NAME                MSG=TUTP007)\n       VER (&LIB2,NAME                MSG=TUTP006)\n       IF (&LIB3 \u00ac= &Z)\n          VER (&LIB2,NB               MSG=TUTP008)\n       VER (&LIB3,NAME                MSG=TUTP006)\n       IF (&LIB4 \u00ac= &Z)\n          VER (&LIB2,NB               MSG=TUTP008)\n          VER (&LIB3,NB               MSG=TUTP009)\n       VER (&LIB4,NAME                MSG=TUTP006)\n    VER (&DSN,DSNAME                  MSG=TUTP010)\n    VER (&TUTORTOP,NB,NAME,MSG=TUTP018)\n    VER (&PAN,NB,MSG=TUTP012)\n    &PAN = TRANS (TRUNC(&PAN,1) Y,YES N,NO *,*)\n    VER (&PAN,LIST,'YES','NO ',MSG=TUTP012)\n    VER (&TOC,NB,MSG=TUTP013)\n    &TOC = TRANS (TRUNC(&TOC,1) Y,YES N,NO *,*)\n    VER (&TOC,LIST,'YES','NO ',MSG=TUTP013)\n    VER (&XRX,NB,MSG=TUTP014)\n    &XRX = TRANS (TRUNC(&XRX,1) Y,YES N,NO *,*)\n    VER (&XRX,LIST,'YES','NO ',MSG=TUTP014)\n    IF (&XRX = YES)\n       VER (&UDK,NB           ,MSG=TUTP015)\n    VER (&CAP,NB,MSG=TUTP016)\n    &CAP = TRANS (TRUNC(&CAP,1) Y,YES N,NO *,*)\n    VER (&CAP,LIST,'YES','NO ',MSG=TUTP016)\n    VPUT (CAP TOC PAN XRX UDK TUTORTOP) PROFILE\n    VPUT (PRJ1 LIB1 LIB2 LIB3 LIB4 TYP1 DSN REMOT) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT001": {"ttr": 2586, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -----------  TUTORIAL PRINT - TABLE OF CONTENTS  ------------ TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%\n%                         --------------------------\n%                         | TUTORIAL PRINT UTILITY |\n%                         |  TABLE OF CONTENTS     |\n%                         --------------------------\n+\n      The%Tutorial Print+option sends hard copies of tutorial panels to\n   a remote printer.  Tutorials are printed in the order that they would\n   be displayed by the ISPF Tutorial facility.  Several print options\n   are available and output can be sent to a Xerox 2700 Laser Printer or\n   a standard IBM printer.\n\n      The following topics are presented in sequence, or may be selected\n   by number.\n\n     %1+- General information\n     %2+- Entering ISPF panel library names\n     %3+- Entering \"other\" partitioned data set\n     %4+- Top tutorial ID\n     %5+- Print options\n     %6+- Restrictions\n\n)PROC\n     &ZUP   = EDPCT003\n     &ZSEL  = TRANS(&ZCMD\n                  1,TUTPT010\n                  2,TUTPT021\n                  3,TUTPT031\n                  4,TUTPT080\n                  5,TUTPT040\n                  6,TUTPT070\n                  )\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TUTPT010": {"ttr": 2817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ----------  TUTORIAL PRINT - GENERAL INFORMATION  ----------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%\n+\n      The options available in the%Tutorial Print+option are listed\n      below.\n\n        %o+ Tutorials can be printed from either a concatenation of up\n            to four libraries with standard SPF library names, or a\n            single panel library with a non-standard SPF library name.\n\n        %o+ You must specify the \"top\" tutorial panel from which to\n            start.  All tutorial panels \"under\" that top panel are then\n            printed.\n\n        %o+ You may specify the destination of the output, whether or\n            not that printer is a Xerox 2700 Laser printer and whether\n            or not lower case letters should be raised to upper case.\n\n\n      Should any tutorial not answer questions you may have, call Chris\n   Gerken at 966-6277 or 965-6277 (EXCOM).\n)PROC\n   &ZUP   = TUTPT001\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TUTPT021": {"ttr": 2819, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------  TUTORIAL PRINT - SPECIFIYNG PANEL LIBRARIES  -------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n      An%ISPF library+is a cataloged partitioned data set with a three\n   level data set name of the form 'project.group.type'.  In the%Tutorial\n   Print+option, you may specify up to four ISPF libraries with the same\n   project and type, as shown below.\n\n       ISPF PANEL LIBRARY:\n          PROJECT%===>+kb+\n          GROUP  %===>+testlib  %===>+doctest  %===>+product  %===>+\n          TYPE   %===>+panels+\n\n      In this example, when a tutorial panel is to be printed, the\n   input panel libraries are searched in the following order.\n\n         %-+ 'KB.TESTLIB.PANELS',\n\n         %-+ 'KB.DOCTEST.PANELS',\n\n         %-+ 'KB.PRODUCT.PANELS',\n\n)PROC\n   &ZUP   = TUTPT001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT031": {"ttr": 2821, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------  TUTORIAL PRINT - SPECIFIYNG PANEL LIBRARIES  -------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n\n      When you want to specify a panel library with a non-standard ISPF\n   library name, enter it under the heading:\n\n       OTHER PARTITIONED DATA SET:\n          DATA SET NAME %===>+\n\n      You may enter any fully qualified data set name by enclosing it in\n   apostrophes.  Example:  %DATA SET NAME ===> 'sys1.maclib'+\n   If you omit the apostrophes, your TSO prefix is left-appended to the\n   data set name.\n\n      Whenever an \"other\" data set name is entered, it is used even if\n   an ISPF library is also entered.\n\n\n\n\n\n)PROC\n   &ZUP   = TUTPT001\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TUTPT040": {"ttr": 2823, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ----------------  TUTORIAL PRINT - OPTIONS  ----------------- TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%\n+\n      Several options are available in the%Tutorial Print+option.  The\n   following topics are presented in sequence, or may be selected by\n   number.\n\n     %1+- Print tutorials option\n     %2+- Print table of contents option\n     %3+- Print destination\n     %4+- Xerox 2700 laser printer option\n     %5+- UDK symbol\n     %6+- Upper case only option\n\n\n+\n)PROC\n     &ZUP   = TUTPT001\n     &ZSEL  = TRANS(&ZCMD\n                  1,TUTPT060\n                  2,TUTPT062\n                  3,TUTPT063\n                  4,TUTPT064\n                  5,TUTPT065\n                  6,TUTPT066\n                  )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT060": {"ttr": 2825, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------------  TUTORIAL PRINT - PRINT TUTORIALS  ------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The%Tutorial Print+option lets you specify that copies of the\n   logical screen image are to be output for each tutorial processed.\n\n      %o+ To let this program know that the tutorials are to be printed,\n          enter%YES+in the Print Tutorials field.\n\n      %o+ If%NO+is entered, none of the tutorials will be printed.  This\n          option is useful if you only want a table of contents for all\n          tutorials \"under\" the top tutorial panel.\n\n\n\n\n\n\n\n\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TUTPT062": {"ttr": 2827, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ----  TUTORIAL PRINT - PRINT TABLE OF CONTENTS OPTION  ------ TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The%Print Table of Contents+option lets you specify that the\n   Tutorial Print routine is to output a listing showing, for each\n   tutorial, the title, panel id and page in the panel print listing on\n   which that tutorial panel is printed.\n\n\n      %o+ To let this program know that the table of contents is to be\n          printed, enter%YES+in the Print Table of Contents field.\n\n      %o+ If%NO+is entered, no table of contents will be printed.\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT063": {"ttr": 2829, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ----------  TUTORIAL PRINT - OUTPUT DESTINATION  ------------ TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The%Destination+field lets you specify a remote printer to which\n   the output is to be routed.\n\n      %o+ To have the Tutorial Print option route its output to a remote\n          printer, enter the remote printer ID in the Destination field.\n\n      %o+ To have the output printed at EDPC, leave the Destination\n          field blank.\n\n\n\n\n\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT064": {"ttr": 2831, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  TUTORIAL PRINT - PRINTER TYPE  --------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The%Laser Printer+field lets you specify whether the printer to\n   which this program output is to be sent is a Xerox 2700 laser\n   printer.  The Tutorial Print option can format its output for a\n   standard IBM printer, or it can take advantage of the fonts and\n   special features of the Xerox 2700 laser printer.\n\n\n      %o+ If the destination printer%is+a Xerox 2700 laser printer,\n          enter%YES+in the Laser Printer field.\n\n      %o+ If the destination printer%is not+a Xerox 2700 laser printer,\n          enter%NO+in the Laser Printer field.\n\n\n\n\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT065": {"ttr": 2833, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  TUTORIAL PRINT - UDK CHARACTER  -------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      If the destination printer is a Xerox 2700 Laser Printer, you must\n   specify a UDK character for the print output.\n\n      The UDK character is used by the program to denote special\n   commands embedded in the text being printed.  These commands include\n   bolding, font changes, etc.  So that commands embbeded in the output\n   by the program are not accidentally confused with actual text (most\n   likely ISPF field definition characters), the UDK character should\n   be a character that does not appear in the text of any of the panels\n   to be printed.\n\n      Since each analyst uses his or her own standard field definition\n   characters, each different set of panels to be printed may have its\n   own UDK charater or it may have several possible characters.\n   Whichever character is to be used, enter it into the UDK character\n   field.\n\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT066": {"ttr": 2835, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL --------  TUTORIAL PRINT - UPPER CASE ONLY OPTION  ---------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The%Upper Case Only+option lets you specify that all lower case\n   characters are to be shifted to upper case before the panels are\n   printed.\n\n      %o+ If the destination printer can handle only upper case\n          characters, enter%YES+in the Upper Case Only field.\n\n      %o+ If the destination printer can print both upper and lower\n          case letter characters, enter%NO+in the Upper Case Only\n          field.\n\n\n\n\n\n\n\n\n\n)PROC\n   &ZUP   = TUTPT040\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT070": {"ttr": 2837, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------  TUTORIAL PRINT - RESTRICTIONS  --------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      There are several restrictions on the use of the%Tutorial Print+\n   option.  Listed below are software requirements and program\n   limitations.\n\n\n      %o+ The Tutorial Print option must be run under%ISPF release 2+\n          with 2000k of regionsize.\n\n      %o+ Before output is printed on a Xerox 2700 Laser Printer, that\n          laser must have at least the following fonts loaded:\n               - Titan10BL\n               - Titan10L\n\n      %o+ Any output for the Tutorial Print Xerox printer will print on\n          paper from cartridge 1 (upper) only and is designed for 8-1/2\n          by 11 paper.\n\n      %o+ Although field attributes defined in the )ATTR section are\n          used as defined, variable substitution in the body of the\n          panels is not performed by the program.\n)PROC\n   &ZUP   = TUTPT001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TUTPT080": {"ttr": 2839, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ------------  TUTORIAL PRINT - TOP TUTORIAL ID  ------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+\n      The ISPF tutorial system uses the values set to variables ZSEL,\n   ZCONT and ZUP in the )PROC section of each tutorial panel to impose a\n   hierarchical structure on the entire collection of tutorial panels.\n\n      The Tutorial Print option uses this same structure when it prints\n   out copies of tutorial panels.  This program processes a tutorial by\n   first printing the panel's screen image and then processing each of\n   that tutorial's subordinate panels (a recursive procedure).\n\n      This program lets the user specify what portion of a set of\n   tutorials is to be printed by letting the user specify the top panel\n   ID.  This member in the input panel library(s) is simply the first\n   tutorial panel to be processed.\n\n      If the user enters the member name of the Primary Table of\n   contents, every panel in the set of tutorials will be printed.\n   However, a smaller subset of tutorials can be specified by entering\n   the member name of a tutorial much further down in the tutorial\n   structure.\n\n)PROC\n   &ZUP   = TUTPT001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT467/FILE467.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT467", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}