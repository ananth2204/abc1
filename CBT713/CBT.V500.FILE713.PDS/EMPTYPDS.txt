EMPTYPDS TITLE 'PROGRAM TO RESET PDS DIRECTORY AND HIGH-WATER MARK'
***********************************************************************
*        PDSDOC *COMPLETELY EMPTY A PDS...............................*
*                                                                     *
*        PROGRAM ID. :             EMPTYPDS                           *
*                                                                     *
*        DATE WRITTEN :            JANUARY   1995                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*                                                                     *
*        LOCATION :                SUTTON COLDFIELD                   *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
*   JAN95 STARTED WRITING BASED ON UT507 + UT508                      *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        UPDATED :                 MARCH 2005                         *
*                                                                     *
*        BY :                      STEVE MYERS                        *
*                                                                     *
*        WHAT:                     1) REMOVE APF REQUIREMENT.         *
*                                  2) CALCULATE TRACK BALANCE         *
*                                     CORRECTLY.                      *
*                                  3) USE CLOSE TO UPDATE DS1LSTAR    *
*                                     AND DS1TRBAL.                   *
*                                  4) RECOGNIZE PDS-E DATA SETS, AND  *
*                                     USE STOW I OPTION TO CLEAR THE  *
*                                     DATA SET.                       *
*                                  5) STATUS MSGS TO SYSPRINT         *
*                                  6) SOME MAINTENANCE ITEMS.         *
*                                                                     *
***********************************************************************
*                                                                     *
*        UPDATED :                 MARCH 2009                         *
*                                                                     *
*        BY :                      SAM GOLOB                          *
*                                                                     *
*        WHAT:                     1) PROPER RETURN CODE OF 8 IF      *
*                                     THERE WAS AN ERROR.             *
*                                  2) IF SYSPRINT IS MISSING, WRITE   *
*                                     ALL MESSAGES TO THE JOB LOG,    *
*                                     TO SHOW THE USER WHAT HAPPENED. *
*                                  3) FIX DESCRIPTION OF SOME ERRORS, *
*                                     SUCH AS PDSE NOT ALLOCATED OLD. *
*                                     A PDS CAN BE ALLOCATED SHR.     *
*                                  4) ADDED VERSION NUMBER & TITLE.   *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM WILL EMPTY A PDS BY OVERWRITING THE FIRST BLOCK OF THE *
* DIRECTORY AND BY RESETING THE HIGH WATER MARK FOR THE DATASET IN    *
* THE VTOC.  IF THE DATA SET IS A PDS-E, IT USES THE STOW I OPTION    *
* TO PERFORM AN EQUIVALENT FUNCTION.                                  *
*                                                                     *
***********************************************************************
         EJECT ,
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1) SYSUT2 DD CARD DEFING THE PDS TO BE RESET.                       *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1) STATUS MESSAGES TO SYSPRINT                                      *
* 2) ON COMPLETION THE PDS WILL BE EMPTY.                             *
*                                                                     *
***********************************************************************
         EJECT ,
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
EMPTYPDS CSECT ,
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0                   .
R1       EQU   1                   WORK/LINKAGE
R2       EQU   2                   POINTER TO MDCB
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   DCB POINTER
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   .
R6       EQU   6                   .
R7       EQU   7                   .
R8       EQU   8                   .
R9       EQU   9                   .
R10      EQU   10                  .
R11      EQU   11                  COUNT OF DIRECTORY BLOCKS
R12      EQU   12                  .
R13      EQU   13                  SAVE AREA / BASE REG. 1
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
         SPACE 1
         USING EMPTYPDS,R15
         STM   R14,R12,12(R13)
         BAL   R12,SAVEFLD+72
SAVEFLD  DS    18F                 NON-RENT SAVE AREA
         ST    R12,8(R13)
         ST    R13,4(R12)
         LR    R13,R12
         DROP  R15
         USING SAVEFLD,R13
         EJECT ,
         XC    ERRFLAG,ERRFLAG
***********************************************************************
*        VERIFY SYSPRINT IS ALLOCATED                                 *
***********************************************************************
         SPACE 1
         DEVTYPE DCBDDNAM-IHADCB+PRINT,16(R13)  USE DEVTYPE
         LTR   R15,R15             TEST RC
         BZ    OPENPR              QUIT IF SYSPRINT IS NOT PRESENT
         OI    NOPRFLG,X'01'       FLAG SYSPRINT NOT OPEN
         B     CHKUT2              CONTINUE
OPENPR   OPEN  (PRINT,OUTPUT)      OPEN SYSPRINT
         SPACE 1
***********************************************************************
*        VERIFY DDNAME IS ALLOCATED                                   *
***********************************************************************
         SPACE 1
CHKUT2   DEVTYPE DCBDDNAM-IHADCB+PDS,16(R13)  USE DEVTYPE
         LTR   R15,R15             TEST RC
         BNZ   ERR2                QUIT IF DDNAME ISN'T THERE
         SPACE 1
***********************************************************************
*        DETERMINE IF DATA SET IS A PDS-E ALLOCATED DISP=OLD OR MOD   *
***********************************************************************
         SPACE 1
         RDJFCB (PDS,INPUT)        READ THE JFCB
         OBTAIN CAMLST             OBTAIN THE FORMAT 1 DSCB
         LTR   R15,R15             TEST RC
         BNZ   ERR3                BR IF F1 DSCB NOT THERE
         USING F1DSCB,FMT1DSCB     ESTABLISH FORMAT 1 DSCB ADDRESSING
         ICM   R0,B'0011',DS1DSORG LOAD DSORG
         N     R0,=AL1(0,0,255-DS1DSGU,255)  REMOVE UNMOVABLE BIT
         CLM   R0,B'0011',=AL1(DS1DSGPO,0)  TEST IF DSORG = PO
         BNE   ERR4                BR IF NOT
         TM    DS1SMSFG,DS1PDSE    TEST IF PDSE
         BZ    REALPDS             BR IF NOT
         IC    R0,JFCBIND2         LOAD IND2
         N     R0,=AL1(0,0,0,JFCDISP+JFCSHARE)  ISOLATE DISP FLAGS
         CLM   R0,B'0001',=AL1(JFCOLD)  VERIFY OLD
         BE    KILLPDSE                 BR IF DISP=OLD
         CLM   R0,B'0001',=AL1(JFCMOD)  VERIFY MOD
         BNE   ERR5                QUIT IF NOT OLD OR MOD
         SPACE 1
***********************************************************************
*        OPEN A BPAM DCB AND USE STOW INIT TO KILL THE DIRECTORY      *
***********************************************************************
         SPACE 1
KILLPDSE OPEN  (BPAMDCB,OUTPUT)    OPEN A BPAM DCB
         STOW  BPAMDCB,,I          RESET THE DIRECTORY
         CLOSE BPAMDCB             CLOSE THE DIRECTORY
         B     EXITOK              AND EXIT
         EJECT ,
***********************************************************************
*        CALCULATE SPACE USED BY THE DIRECTORY                        *
***********************************************************************
         SPACE 1
REALPDS  OI    JFCBTSDM,JFCNDSCB+JFCNDCB+JFCNWRIT              LRECL256
         OPEN  (PDS,INPUT),TYPE=J                              LRECL256
         SR    R11,R11             SET DIRECTORY BLOCK COUNT = 0
LOOPXX   GET   PDS
         LA    R11,1(R11)
         B     LOOPXX
PDSEOF   DC    0H'0'
         L     R1,DCBDEBAD-IHADCB+PDS  LOAD ADDRESS OF THE DEB FROM   ->
                                        THE DCB
         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS
         L     R1,(DEBUCBAD-DEBDASD)+(DEBBASND-DEBBASIC)(,R1)  LOAD   ->
                                    UCB ADDRESS FROM THE FIRST DASD   ->
                                     EXTENT ENTRY IN THE DEB
         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS
         ST    R1,PDSAUCB          SAVE UCB ADDRESS
         CLOSE (PDS)
         LA    R1,PDS
         BAL   R14,FREEP
         SPACE 1
***********************************************************************
*        OVERWRITE FIRST DIRECTORY BLOCK TO EMPTY DIRECTORY           *
***********************************************************************
         SPACE 1
SCRUBDIR DS    0H                  RESET THE DIRECTORY
         OPEN  (PDSDIR,OUTPUT)     OPEN THE DATA SET FOR OUTPUT
         LA    R0,1*256            SET TTRN = 00000100
         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB
         LA    R2,MBBCCHHR         LOAD ADDRESS OF MBBCCHHR
         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT
         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN
         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA
         LR    R8,R13              COPY REG 13 TO REG 8
         CALL  (15)                CONVERT TTRN TO MBBCCHHR
         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13
         MVC   BUFFER(L'CLRDATA),CLRDATA
         MVI   ECB,0               RESET THE ECB
         EXCP  IOB                 REPLACE THE FIRST DIRECTORY BLOCK
         WAIT  1,ECB=ECB           WAIT FOR I/O TO COMPLETE
         CLI   ECB,X'7F'           VERIFY I/O IS OK
         BE    *+6                 BR IF SO
         DC    H'0'                OOPS  ** WE WANT A DUMP FOR THIS **
         SPACE 1
***********************************************************************
*        NOW CALCULATE THE CORRECT TRACK BALANCE FOR THE LAST TRACK   *
*        IN THE DIRECTORY.  REG 11 STILL HAS THE NUMBER OF RECORDS    *
***********************************************************************
         SPACE 1
         SR    R8,R8               SET TT = 0
NEXTT    LA    R9,1                SET REG 9 = 1
NEXTR    STC   R9,RKDD             SAVE CURRENT RECORD
         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->
               RKDD=RKDD,BALANCE=(R6),                                ->
               REGSAVE=YES
         LTR   R15,R15             TEST RC
         BZ    SAMETRK             BR IF 0
         LA    R8,1(,R8)           BUMP TT
         B     NEXTT               GO START THE NEW TRACK
SAMETRK  LR    R6,R0               COPY NEW TRACK BALANCE TO REG 6
         LA    R9,1(,R9)           BUMP REG 9
         BCT   R11,NEXTR           CONTINUE
         SPACE 1
***********************************************************************
*        ADD THE BALANCE FOR AN EOF RECORD                            *
***********************************************************************
         SPACE 1
ADDEOF   LA    R0,1                SET REG 0 = 1
         STCM  R0,B'1111',RKDD     RESET RKDD
         STC   R9,RKDD             STORE THE R
         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->
               RKDD=RKDD,BALANCE=(R6),                                ->
               REGSAVE=YES
         LTR   R15,R15             TEST RC
         BZ    BALOK               BR IF SO
         LA    R8,1(,R8)           BUMP TT
         LA    R9,1                SET R
         B     ADDEOF
BALOK    STCM  R0,B'0011',DCBTRBAL-IHADCB+PDSDIR  STORE THE TRACK     ->
                                                   BALANCE INTO THE DCB
         SPACE 1
***********************************************************************
*        CONVERT TTR TO MBBCCHHR IN DCBFDAD                           *
***********************************************************************
         SPACE 1
         LR    R0,R8               COPY TT TO REG 0
         SLL   R0,8                MAKE 00TT 0TT0
         OR    R0,R9               ADD R TO TT (CHANGE 0TT0 TO 0TTR)
         SLL   R0,8                MAKE 0TTR TTR0
         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB
         LA    R2,DCBFDAD-IHADCB+PDSDIR  LOAD ADDRESS OF MBBCCHHR
         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT
         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN
         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA
         LR    R8,R13              COPY REG 13 TO REG 8
         CALL  (15)                CONVERT TTRN TO MBBCCHHR
         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13
         SPACE 1
***********************************************************************
*        CLOSE THE DIRECTORY TO UPDATE THE FORMAT 1 DSCB              *
***********************************************************************
         SPACE 1
         CLOSE (PDSDIR)            CLOSE THE DIRECTORY AND UPDATED    ->
                                    DS1LSTAR AND DS1TRBAL
         B     EXITOK
         EJECT ,
***********************************************************************
*        ERROR ROUTINES                                               *
***********************************************************************
         SPACE 1
ERR2     DS    0H
         BAL   R3,PRTITLE
         LA    R0,ERR2M            Load message address
         OI    ERRFLAG,X'01'       Which error am I?
         LA    R5,8                Load return code
         B     EXITMSG             Exit message to SYSPRINT or JES log
         SPACE 1
ERR3     DS    0H
         BAL   R3,PRTITLE
         LA    R0,ERR3M            Load message address
         OI    ERRFLAG,X'02'       Which error am I?
         LA    R5,8                Load return code
         B     EXITMSG             Exit message to SYSPRINT or JES log
         SPACE 1
ERR4     DS    0H
         BAL   R3,PRTITLE
         LA    R0,ERR4M            Load message address
         OI    ERRFLAG,X'04'       Which error am I?
         LA    R5,8                Load return code
         B     EXITMSG             Exit message to SYSPRINT or JES log
         SPACE 1
ERR5     DS    0H
         BAL   R3,PRTITLE
         LA    R0,ERR5M            Load message address
         OI    ERRFLAG,X'08'       Which error am I?
         LA    R5,8                Load return code
         B     EXITMSG             Exit message to SYSPRINT or JES log
         SPACE 1
EXITOK   DS    0H
         BAL   R3,PRTITLE
         LA    R0,OKMSG            Load message address
         MVI   ERRFLAG,X'00'       No error. Code 0.
         LA    R5,0
         SPACE 1
EXITMSG  TM    DCBOFLGS-IHADCB+PRINT,DCBOFOPN  SYSPRINT OPEN?
         BZ    EXITMISP            BR IF NOT
         PUT   PRINT,(0)           WRITE THE MESSAGE
         CLOSE (PRINT)             CLOSE SYSPRINT
         LA    R1,PRINT            LOAD ADDRESS OF THE DCB
         BAL   R14,FREEP           FREE ITS BUFFER POOL
         B     EOJ
EXITMISP DS    0H            Messages when SYSPRINT is missing.
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD001E      SYSPRINT DD Name is missing...',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         CLI   ERRFLAG,X'00'
         BE    EXITMIOK
         TM    ERRFLAG,X'01'
         BO    EXITMIE2
         TM    ERRFLAG,X'02'
         BO    EXITMIE3
         TM    ERRFLAG,X'04'
         BO    EXITMIE4
         TM    ERRFLAG,X'08'
         BO    EXITMIE5
EXITMIOK DS    0H
         WTO   'EPDS000      ALL MEMBERS SCRATCHED FROM PDS',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD000I      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ
EXITMIE2 DS    0H
         WTO   'EPD002E      SYSUT2 DD Name NOT ALLOCATED  ',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ
EXITMIE3 DS    0H
         WTO   'EPD003E      SYSUT2 DATA SET NOT ON VOLUME ',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ
EXITMIE4 DS    0H
         WTO   'EPD004E  SYSUT2 DATA SET IS NOT PARTITIONED',ROUTCDE=11X
               ,DESC=7
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ
EXITMIE5 DS    0H
         WTO   'EPD005E   PDSE DATA SET NOT ALLOCATED OLD OR MOD',     X
               ROUTCDE=11,DESC=7
         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X
               ,DESC=7
         B     EOJ
***********************************************************************
*        END OF PROCESSING - RETURN TO CALLER                         *
***********************************************************************
EOJ      DS    0H                  Bye.
         L     R13,4(,R13)
         LR    R15,R5              Restore RC into corrupted R15
         ST    R15,16(,R13)        Put RC into passed save area
         L     R14,12(,R13)        Load R14 back.
         LM    R0,R12,20(R13)      All the other registers.
         BR    R14
***********************************************************************
         TITLE 'SUB-ROUTINES'
***********************************************************************
*        FREE A STANDARD DATA MANAGEMENT BUFFER POOL                  *
***********************************************************************
         SPACE 1
         CNOP  0,8
FREEP    SAVE  (14,1)              SAVE REGS
         FREEPOOL (1)              FREE THE BUFFER POOL
         RETURN (14,1),T           RESTORE REGS & RETURN
         TITLE 'DATA AREAS'
         PUSH PRINT
         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF
***********************************************************************
PRTITLE  DS    0H
         ST    R3,SAVER3A          Save BAL register.
         TM    NOPRFLG,X'01'       Is SYSPRINT OPEN?
         BO    PRTITLEW            No. Write WTO's instead.
         LA    R0,TITLMSG          Load message address
         PUT   PRINT,(0)           Write the message to SYSPRINT
         LA    R0,DASHMSG          Load message address
         PUT   PRINT,(0)           Write the message to SYSPRINT
         B     PRTITLEN
PRTITLEW DS    0H                  WTO's instead of SYSPRINT.
         WTO   'EPDS000   EMPTYPDS - Empty a PDS - Ver. 2.0',         ->
               ROUTCDE=11,DESC=7
         WTO   'EPDS000   -------- - ----- - --- - --------',         ->
               ROUTCDE=11,DESC=7
PRTITLEN DS    0H                  End routine.
         L     R3,SAVER3A          Restore BAL register.
         BR    R3
***********************************************************************
*        PRIVATE CONSTANTS AND WORK AREAS                             *
***********************************************************************
         SPACE 2
ERRFLAG  DC    X'00'               Which error message to write.
NOPRFLG  DC    X'00'               If X'01' then SYSPRINT not OPEN.
         DS    0D                  GET ADDRESSES ALIGNED
         DC    CL8'EYECATCH'       EYECATCHER
PDSAUCB  DC    A(0)                ADDRESS OF UCB FOR PDS
ECB      DC    A(0)                ECB FOR EXCP
         SPACE 1
RKDD     DS    0F                  RKDD FOR STAR
         DC    AL1(1)              RECORD NO.
         DC    AL1(8)              KEYLEN
         DC    AL2(256)            RECORD LENGTH FOR DIRECTORY
         SPACE 1
BUFFER   DS   0CL(264)
         DC    XL256'0',XL(264-256)'0'
CLRDATA  DC    X'FFFFFFFFFFFFFFFF000EFFFFFFFFFFFFFFFF00000000'
         SPACE 1
***********************************************************************
*        IOB AND CCWS                                                 *
***********************************************************************
         SPACE 2
         DC    0D'0'
IOB      DC    0A(0),AL1(X'42',0,0,0)
         DC    A(ECB)
         DC    2A(0)
         DC    A(CCWS)
         DC    A(PDSDIR)
         DC    2A(0)
MBBCCHHR DC    XL8'0'
         SPACE 1
CCWS     CCW   X'31',MBBCCHHR+3,X'40',5  SEARCH ID EQUAL
         CCW   X'08',*-8,0,0             BR IF SEARCH FAILED
         CCW   X'0D',BUFFER,0,L'BUFFER WRITE KEY AND DATA
         SPACE 1
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 2
         PRINT NOGEN
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                     ->
               RECFM=VBA,LRECL=125
         SPACE 1
PDS      DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=GL,RECFM=F,BLKSIZE=256,    X
               LRECL=256,EODAD=PDSEOF,EXLST=XLIST
         SPACE 1
BPAMDCB  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=W
         SPACE 1
PDSDIR   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=E
         SPACE 1
XLIST    DC    0F'0',AL1(X'80'+7),AL3(JFCB)
JFCB     DS   0XL176
         IEFJFCBN ,
         ORG   JFCB+L'JFCB
CAMLST   CAMLST SEARCH,JFCBDSNM,JFCBVOLS,OBTOUT
FMT1DSCB EQU   *-44
OBTOUT   DC    XL144'0'
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         DC    0D'0'
SAVER3A  DC    F'0'
         LTORG ,                   LITERAL POOL GOES HERE
         SPACE 1
TITLMSG  DC    AL2(TITLMSGL,0),C' EMPTYPDS - Empty a PDS - Ver. 2.0'
TITLMSGL EQU   *-TITLMSG
DASHMSG  DC    AL2(DASHMSGL,0),C' -------- - ----- - --- - --------'
DASHMSGL EQU   *-DASHMSG
ERR2M    DC    AL2(ERR2L,0),C' EPD002E SYSUT2 DD Name NOT ALLOCATED'
ERR2L    EQU   *-ERR2M
         SPACE 1
ERR3M    DC    AL2(ERR3L,0),C' EPD003E SYSUT2 DATA SET NOT ON VOLUME'
ERR3L    EQU   *-ERR3M
         SPACE 1
ERR4M    DC    AL2(ERR4L,0),C' EPD004E SYSUT2 DATA SET IS NOT PARTITION>
               ED'
ERR4L    EQU   *-ERR4M
         SPACE 1
ERR5M    DC    AL2(ERR5L,0),C' EPD005E   PDSE DATA SET NOT ALLOCATED OL>
               D OR MOD'
ERR5L    EQU   *-ERR5M
         SPACE 1
OKMSG    DC    AL2(OKMSGL,0),C' ALL MEMBERS SCRATCHED FROM PDS'
OKMSGL   EQU   *-OKMSG
         SPACE 3
         POP   PRINT               RESTORE PRINT STATUS
         TITLE 'DSECT MAPS'
***********************************************************************
*        MAPPING MACROS                                               *
***********************************************************************
         PUSH  PRINT               SAVE PRINT STATUS
*        PRINT ON,GEN            SYSTEM DSECT EXPANSION OPTION
         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         CVT   DSECT=YES           DEFINE CVT SYMBOLS
         IEZDEB  LIST=YES
F1DSCB   DSECT
         IECSDSL1 1                DEFINE FORMAT 1 DSCB
         SPACE 2
         POP   PRINT               RESTORE PRINT STATUS
         SPACE 3
         END EMPTYPDS
