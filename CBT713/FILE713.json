{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012641000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE713.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE713.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x12'", "DS1TRBAL": "b'0X'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xf1\\x00\\n\\x04\\xf1\\x00\\x0e\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00T\\x01\\t5?\\x01\\t5?\"U\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-12-19T00:00:00", "modifydate": "2009-12-19T22:55:54", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-478"}, "text": "REGULAR CBT TAPE - VERSION 478    FILE:  713\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT478.FILE713\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 17 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,491 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/19/09    22:55:54    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x05\\x07/\\x01\\x05\\x07/\"\\x19\\x00Z\\x00Z\\x00\\x00\\xe2\\xd4\\xe8\\xc5\\xd9\\xe2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-03-13T00:00:00", "modifydate": "2005-03-13T22:19:00", "lines": 90, "newlines": 90, "modlines": 0, "user": "SMYERS"}, "text": "                               EMPTYPDS\n\nThe EMPTYPDS utility deletes all members in a PDS or PDS-E data\nset.  For a PDS, EMPTYPDS resets the high water mark for the data\nset so that the next member MVS writes to the data set\nimmediately follows the directory.\n\nThis version of EMPTYPDS is the only directory clear utility\navailable through CBT that supports PDSE data sets, and does not\nrequire the program to the APF authorized, or requires a second\nstep that performs an IEBCOPY \"compress in place\" of the data set\nto reset the high water mark for the data set.\n\nJCL\n\nUse the following JCL to run EMPTYPDS.\n\n//stepnm  EXEC PGM=EMPTYPDS\n//SYSPRINT DD  SYSOUT=*\n//SYSUT2   DD  ... Data set descriptor for a PDS or PDSE data set ...\n\n-----------------------------------------------------------------\n|                      DD Statements                            |\n|----------+----------+-----------------------------------------|\n| DD name  | Comments | Description                             |\n|----------+----------+-----------------------------------------|\n| SYSPRINT | Optional | Message data set                        |\n|----------+----------+-----------------------------------------|\n|          |          | Data set descriptor for a PDS or PDSE   |\n| SYSUT2   | Required | containing a directory to clear.  A     |\n|          |          | PDSE data set must be allocated with    |\n|          |          | DISP=OLD or DISP=MOD.                   |\n-----------------------------------------------------------------\n\nMessages\n\nEPD001I SYSPRINT NOT ALLOCATED TO STEP\n\nReason: EMPTYPDS determined that the SYSPRINT DD statement is not\nallocated to the step.\nAction: EMPTYPDS continues execution.  No additional messages\nwill be directed to either SYSPRINT or the operator console.\nResponse: Specify a SYSPRINT DD statement the next time EMPTYPDS\nis run.\n\nEPD002E SYSUT2 NOT ALLOCATED TO STEP\n\nReason: EMPTYPDS determined no SYSUT2 DD statement is allocated\nto the step.\nAction: EMPTYPDS terminates.\nResponse: Specify a SYSUT2 DD statement the next time EMPTYPDS is\nrun.\n\nEPD003E SYSUT2 DATA SET NOT ON VOLUME\n\nReason: EMPTYPDS determined the data set defined by the SYSUT2 DD\nstatement is not on the volume allocated to the statement.\nAction: EMPTYPDS terminates.\nResponse: Correct the SYSUT2 DD statement and rerun EMPTYPDS.\n\nEPD004E SYSUT2 DATA SET IS NOT PARTITIONED\n\nReason: EMPTYPDS determined the data set defined by the SYSUT2 DD\nstatement is not a partitioned data set.\nAction: EMPTYPDS terminates.\nResponse: Correct the SYSUT2 DD statement and rerun EMPTYPDS.\n\nEPD005E SYSUT2 DATA SET NOT ALLOCATED OLD OR MOD\n\nReason: EMPTYPDS determined the data set defined by the SYSUT2 DD\nstatement is a PDSE data set, but is not allocated using the\nDISP=OLD or DISP=MOD parameter.  EMPTYPDS cannot clear the data\nset.\nAction: EMPTYPDS terminates.\nResponse: Correct the SYSUT2 DD statement and rerun EMPTYPDS.\n\nALL MEMBERS SCRATCHED FROM PDS\n\nReason: EMPTYPDS deleted all members in the PDS or PDSE.  The\nhigh water mark for a PDS data set has been reset.\nAction: EMPTYPDS terminates.\nResponse: None.\n\nMessage EPD001I is directed to the operator console, and also to\nthe JES job log and JES system messages data sets.  All other\nmessages are directed only to SYSPRINT.\n\nThe SYSPRINT DD statement is optional so that existing JCL that\nruns earlier versions of EMPTYPDS will continue to operate\nwithout error.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE1": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00D\\x01\\x05\\x06\\x8f\\x01\\x074\\x0f\\x105\\x005\\x00.\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-03-09T00:00:00", "modifydate": "2007-12-06T10:35:44", "lines": 53, "newlines": 46, "modlines": 0, "user": "SBGOLOB"}, "text": "From: \"David Cartwright\" <davecartwright@uk.agcocorp.com>\nTo:   \"Sam Golob\" <sbgolob@cbttape.org>\nCc:   \"Steve Myers\" <stephen-myers@comcast.net>\nSubject: EMPTYPDS\nDate: Wed, 9 Mar 2005 09:52:22 -0000\nOrganization: AGCOEAME\n\nSam,\n\nSee the attached notes from Steve Myers about changes he made to\nmy EMPTYPDS program.\n\nThis looks like a neat change, but I haven't tested it.\nPersonally I am not bothered about the APF requirement, so I\nwould put it into my source PDS as an alternative, not a\nreplacement. I have not written any new code for a long time, so\nthere are no updates to file 172 apart from this.  I suggest you\nput this program up as a separate (sequential) file and credit\nSteve with the work.\n\nDave\n\n   - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nNote from Sam Golob:   I tested it...  Seems fine.\n\n     Tested on multitrack source and load libraries whose\n     directories exactly fill a track.  On z/OS 1.6.\n\n   - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nGood morning Dave -\n\nThe attached file contains an updated version of EMPTYPDS.  The\nmain update was to remove the requirement for APF authorization.\nThis was done by using EXCP, and arranging things so that CLOSE\nupdates the VTOC for the data set.\n\nFor political reasons, I cannot do anything else with the\nprogram.  If you want to send it up to CBT, go ahead.\n\nIt could use a little more testing, too.  Try a directory that\nextends to multiple tracks, as well as a directory that exactly\nfills a track.  (I tested it with a 6-track directory that has\nmany members, and exactly fills the tracks -- works fine.\nSBG  03/05)\n\nIf you are reluctant to do anything with it, I can\nunderstand that, too.\n\nSincerely - Steve Myers\n\n\n", "mimetype": "message/rfc822", "datatype": "ebcdic", "extension": ".eml"}, "$$NOTE2": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x05\\x08\\x8f\\x01\\x05\\x08\\x8f\"(\\x00\\x11\\x00\\x11\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-03-29T00:00:00", "modifydate": "2005-03-29T22:28:01", "lines": 17, "newlines": 17, "modlines": 0, "user": "SBGOLOB"}, "text": "Hi Sam -\n\nA user reported a problem with EMPTYPDS: it was inserting\nLRECL=256 into the DSCB.  The attached file contains an updated\nversion of the program that corrects this problem.\n\nAfter fiddling with a very simple example, I discovered the\nproblem was caused when the LRECL was written to the JFCB when\nreading the directory, and then written to the data set label\nwhen the EXCP DCB was opened.  It was corrected by not allowing\nDCB attributes to be merged into the JFCB when the directory DCB\nwas opened.\n\nThe customer's system is z/OS 1.5.  I was able to recreate the\nproblem using z/OS 1.4.\n\nSincerely - Steve Myers\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE3": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x04\\x01\\t\\x05o\\x01\\t\\x06\\x0f\\x01\"\\x00\\x17\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-02-25T00:00:00", "modifydate": "2009-03-01T01:22:04", "lines": 23, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "Note from Sam Golob  -  Mar 01, 2009\n\n\nHartmut Beckmann complained that EMPTYPDS still issues return code\n0 even though there is an error.  I re-worked the end game of the\nprogram and put in the proper return code of 8 if there is an\nerror.\n\nIf SYSPRINT is missing, the proper WTO's duplicating the error\nmessages that should have been issued, are written to the JES log.\nReturn code of the program always reflects what the program did.\nSo even if you don't have SYSPRINT, you know what the program did.\n\nRe-titled the program with Version 2.0.  Print title in any case.\n\nFixed some error messages to be more accurate.  For example, a PDSE\nhas to be allocated OLD or MOD, but a PDS can be allocated SHR.\n\nEliminated the need for File 172 program macros, such as PGMIN, etc.\nNo external macros are now necessary for assembly, only macros from\nSYS1.MACLIB and SYS1.MODGEN.  I am including the macros here, so you\ncan still assemble old versions of the program.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE713": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00\\x12\\x01\\t5?\\x01\\t5?\"U\\x00\\x16\\x00\\x16\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-12-19T00:00:00", "modifydate": "2009-12-19T22:55:12", "lines": 22, "newlines": 22, "modlines": 0, "user": "CBT-478"}, "text": "//***FILE 713 is from Steve Myers and contains a version of the     *   FILE 713\n//*           EMPTYPDS program from File 172, with the APF          *   FILE 713\n//*           requirement removed, and a few other changes.         *   FILE 713\n//*                                                                 *   FILE 713\n//*           Fixed by Sam Golob to produce proper return codes     *   FILE 713\n//*           and to display a title message, plus a few other      *   FILE 713\n//*           fixes.  See member $$NOTE3.  Issue proper messages    *   FILE 713\n//*           to the JES log, even if SYSPRINT DD is missing.       *   FILE 713\n//*           This will always ensure that the user is properly     *   FILE 713\n//*           informed of what the program did, or didn't do.       *   FILE 713\n//*                                                                 *   FILE 713\n//*           This program runs in batch and empties a pds of       *   FILE 713\n//*           its members by writing a first key with X'FF's        *   FILE 713\n//*           in the pds directory.                                 *   FILE 713\n//*                                                                 *   FILE 713\n//*           Tested on z/OS 1.7 and 1.8 by Steve Myers.            *   FILE 713\n//*           Tested on z/OS 1.9 and 1.10 by Sam Golob.             *   FILE 713\n//*                                                                 *   FILE 713\n//*  email:  \"Steve Myers\" <stephen-myers@comcast.net>              *   FILE 713\n//*          \"David Cartwright\" <davecartwright@uk.agcocorp.com>    *   FILE 713\n//*          sbgolob@cbttape.org   or  sbgolob@attglobal.net        *   FILE 713\n//*                                                                 *   FILE 713\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EMPTYOLD": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x05\\x08\\x8f\\x01\\x05\\x08\\x8f\"1\\x01\\x8f\\x01\\x8f\\x00\\x00\\xe2\\xd4\\xe8\\xc5\\xd9\\xe2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-03-29T00:00:00", "modifydate": "2005-03-29T22:31:00", "lines": 399, "newlines": 399, "modlines": 0, "user": "SMYERS"}, "text": "EMPTYPDS TITLE 'PROGRAM TO RESET PDS DIRECTORY AND HIGH-WATER MARK'\n***********************************************************************\n*        PDSDOC *COMPLETELY EMPTY A PDS...............................*\n*                                                                     *\n*        PROGRAM ID. :             EMPTYPDS                           *\n*                                                                     *\n*        DATE WRITTEN :            JANUARY   1995                     *\n*                                                                     *\n*        AUTHOR :                  D.H.CARTWRIGHT.                    *\n*                                                                     *\n*        LOCATION :                SUTTON COLDFIELD                   *\n*                                                                     *\n*        HISTORY  :                                                   *\n*                                                                     *\n*   JAN95 STARTED WRITING BASED ON UT507 + UT508                      *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        UPDATED :                 MARCH 2005                         *\n*                                                                     *\n*        BY :                      STEVE MYERS                        *\n*                                                                     *\n*        WHAT:                     1) REMOVE APF REQUIREMENT.         *\n*                                  2) CALCULATE TRACK BALANCE         *\n*                                     CORRECTLY.                      *\n*                                  3) USE CLOSE TO UPDATE DS1LSTAR    *\n*                                     AND DS1TRBAL.                   *\n*                                  4) RECOGNIZE PDS-E DATA SETS, AND  *\n*                                     USE STOW I OPTION TO CLEAR THE  *\n*                                     DATA SET.                       *\n*                                  5) STATUS MSGS TO SYSPRINT         *\n*                                  6) SOME MAINTENANCE ITEMS.         *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        PURPOSE                                                      *\n*       ---------                                                     *\n*                                                                     *\n* THIS PROGRAM WILL EMPTY A PDS BY OVERWRITING THE FIRST BLOCK OF THE *\n* DIRECTORY AND BY RESETING THE HIGH WATER MARK FOR THE DATASET IN    *\n* THE VTOC.  IF THE DATA SET IS A PDS-E, IT USES THE STOW I OPTION    *\n* TO PERFORM AN EQUIVALENT FUNCTION.                                  *\n*                                                                     *\n***********************************************************************\n         EJECT ,\n***********************************************************************\n*                                                                     *\n*       INPUT                                                         *\n*       -----                                                         *\n*                                                                     *\n* 1) SYSUT2 DD CARD DEFING THE PDS TO BE RESET.                       *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*       OUTPUT                                                        *\n*       ------                                                        *\n*                                                                     *\n* 1) STATUS MESSAGES TO SYSPRINT                                      *\n* 2) ON COMPLETION THE PDS WILL BE EMPTY.                             *\n*                                                                     *\n***********************************************************************\n         EJECT ,\n*        PRINT ON,GEN              SHOW MACRO EXPANSIONS\n         PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS\n         SPACE 1\nEMPTYPDS CSECT ,\n         SPACE 1\n***********************************************************************\n*        REGISTER EQUATES AND USAGES.                                 *\n***********************************************************************\n         SPACE 1\nR0       EQU   0                   .\nR1       EQU   1                   WORK/LINKAGE\nR2       EQU   2                   POINTER TO MDCB\nREG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO\nR3       EQU   3                   DCB POINTER\nR4       EQU   4                   LINKAGE RETURN\nR5       EQU   5                   .\nR6       EQU   6                   .\nR7       EQU   7                   .\nR8       EQU   8                   .\nR9       EQU   9                   .\nR10      EQU   10                  .\nR11      EQU   11                  COUNT OF DIRECTORY BLOCKS\nR12      EQU   12                  .\nR13      EQU   13                  SAVE AREA / BASE REG. 1\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n         SPACE 1\n         PGMIN EQUATES=NO,USING=(R13) STANDARD HOUSEKEEPING\n         EJECT ,\n***********************************************************************\n*        VERIFY SYSPRINT IS ALLOCATED                                 *\n***********************************************************************\n         SPACE 1\n         DEVTYPE DCBDDNAM-IHADCB+PRINT,16(R13)  USE DEVTYPE\n         LTR   R15,R15             TEST RC\n         BZ    OPENPR              QUIT IF SYSPRINT IS NOT PRESENT\n         WTO   'EPD001I SYSPRINT NOT ALLOCATED TO STEP',              ->\n               ROUTCDE=11,DESC=7\n         B     CHKUT2              CONTINUE\nOPENPR   OPEN  (PRINT,OUTPUT)      OPEN SYSPRINT\n         SPACE 1\n***********************************************************************\n*        VERIFY DDNAME IS ALLOCATED                                   *\n***********************************************************************\n         SPACE 1\nCHKUT2   DEVTYPE DCBDDNAM-IHADCB+PDS,16(R13)  USE DEVTYPE\n         LTR   R15,R15             TEST RC\n         BNZ   ERR2                QUIT IF DDNAME ISN'T THERE\n         SPACE 1\n***********************************************************************\n*        DETERMINE IF DATA SET IS A PDS-E ALLOCATED DISP=OLD OR MOD   *\n***********************************************************************\n         SPACE 1\n         RDJFCB (PDS,INPUT)        READ THE JFCB\n         OBTAIN CAMLST             OBTAIN THE FORMAT 1 DSCB\n         LTR   R15,R15             TEST RC\n         BNZ   ERR3                BR IF F1 DSCB NOT THERE\n         USING F1DSCB,FMT1DSCB     ESTABLISH FORMAT 1 DSCB ADDRESSING\n         ICM   R0,B'0011',DS1DSORG LOAD DSORG\n         N     R0,=AL1(0,0,255-DS1DSGU,255)  REMOVE UNMOVABLE BIT\n         CLM   R0,B'0011',=AL1(DS1DSGPO,0)  TEST IF DSORG = PO\n         BNE   ERR4                BR IF NOT\n         TM    DS1SMSFG,DS1PDSE    TEST IF PDSE\n         BZ    REALPDS             BR IF NOT\n         IC    R0,JFCBIND2         LOAD IND2\n         N     R0,=AL1(0,0,0,JFCDISP+JFCSHARE)  ISOLATE DISP FLAGS\n         CLM   R0,B'0001',=AL1(JFCOLD)  VERIFY OLD\n         BE    KILLPDSE                 BR IF DISP=OLD\n         CLM   R0,B'0001',=AL1(JFCMOD)  VERIFY MOD\n         BNE   ERR5                QUIT IF NOT OLD OR MOD\n         SPACE 1\n***********************************************************************\n*        OPEN A BPAM DCB AND USE STOW INIT TO KILL THE DIRECTORY      *\n***********************************************************************\n         SPACE 1\nKILLPDSE OPEN  (BPAMDCB,OUTPUT)    OPEN A BPAM DCB\n         STOW  BPAMDCB,,I          RESET THE DIRECTORY\n         CLOSE BPAMDCB             CLOSE THE DIRECTORY\n         B     EXITOK              AND EXIT\n         EJECT ,\n***********************************************************************\n*        CALCULATE SPACE USED BY THE DIRECTORY                        *\n***********************************************************************\n         SPACE 1\nREALPDS  OI    JFCBTSDM,JFCNDSCB+JFCNDCB+JFCNWRIT              LRECL256\n         OPEN  (PDS,INPUT),TYPE=J                              LRECL256\n         SR    R11,R11             SET DIRECTORY BLOCK COUNT = 0\nLOOPXX   GET   PDS\n         LA    R11,1(R11)\n         B     LOOPXX\nPDSEOF   DC    0H'0'\n         L     R1,DCBDEBAD-IHADCB+PDS  LOAD ADDRESS OF THE DEB FROM   ->\n                                        THE DCB\n         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS\n         L     R1,(DEBUCBAD-DEBDASD)+(DEBBASND-DEBBASIC)(,R1)  LOAD   ->\n                                    UCB ADDRESS FROM THE FIRST DASD   ->\n                                     EXTENT ENTRY IN THE DEB\n         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS\n         ST    R1,PDSAUCB          SAVE UCB ADDRESS\n         CLOSE (PDS)\n         LA    R1,PDS\n         BAL   R14,FREEP\n         SPACE 1\n***********************************************************************\n*        OVERWRITE FIRST DIRECTORY BLOCK TO EMPTY DIRECTORY           *\n***********************************************************************\n         SPACE 1\nSCRUBDIR DS    0H                  RESET THE DIRECTORY\n         OPEN  (PDSDIR,OUTPUT)     OPEN THE DATA SET FOR OUTPUT\n         LA    R0,1*256            SET TTRN = 00000100\n         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB\n         LA    R2,MBBCCHHR         LOAD ADDRESS OF MBBCCHHR\n         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT\n         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN\n         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA\n         LR    R8,R13              COPY REG 13 TO REG 8\n         CALL  (15)                CONVERT TTRN TO MBBCCHHR\n         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13\n         MVC   BUFFER(L'CLRDATA),CLRDATA\n         MVI   ECB,0               RESET THE ECB\n         EXCP  IOB                 REPLACE THE FIRST DIRECTORY BLOCK\n         WAIT  1,ECB=ECB           WAIT FOR I/O TO COMPLETE\n         CLI   ECB,X'7F'           VERIFY I/O IS OK\n         BE    *+6                 BR IF SO\n         DC    H'0'                OOPS  ** WE WANT A DUMP FOR THIS **\n         SPACE 1\n***********************************************************************\n*        NOW CALCULATE THE CORRECT TRACK BALANCE FOR THE LAST TRACK   *\n*        IN THE DIRECTORY.  REG 11 STILL HAS THE NUMBER OF RECORDS    *\n***********************************************************************\n         SPACE 1\n         SR    R8,R8               SET TT = 0\nNEXTT    LA    R9,1                SET REG 9 = 1\nNEXTR    STC   R9,RKDD             SAVE CURRENT RECORD\n         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->\n               RKDD=RKDD,BALANCE=(R6),                                ->\n               REGSAVE=YES\n         LTR   R15,R15             TEST RC\n         BZ    SAMETRK             BR IF 0\n         LA    R8,1(,R8)           BUMP TT\n         B     NEXTT               GO START THE NEW TRACK\nSAMETRK  LR    R6,R0               COPY NEW TRACK BALANCE TO REG 6\n         LA    R9,1(,R9)           BUMP REG 9\n         BCT   R11,NEXTR           CONTINUE\n         SPACE 1\n***********************************************************************\n*        ADD THE BALANCE FOR AN EOF RECORD                            *\n***********************************************************************\n         SPACE 1\nADDEOF   LA    R0,1                SET REG 0 = 1\n         STCM  R0,B'1111',RKDD     RESET RKDD\n         STC   R9,RKDD             STORE THE R\n         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->\n               RKDD=RKDD,BALANCE=(R6),                                ->\n               REGSAVE=YES\n         LTR   R15,R15             TEST RC\n         BZ    BALOK               BR IF SO\n         LA    R8,1(,R8)           BUMP TT\n         LA    R9,1                SET R\n         B     ADDEOF\nBALOK    STCM  R0,B'0011',DCBTRBAL-IHADCB+PDSDIR  STORE THE TRACK     ->\n                                                   BALANCE INTO THE DCB\n         SPACE 1\n***********************************************************************\n*        CONVERT TTR TO MBBCCHHR IN DCBFDAD                           *\n***********************************************************************\n         SPACE 1\n         LR    R0,R8               COPY TT TO REG 0\n         SLL   R0,8                MAKE 00TT 0TT0\n         OR    R0,R9               ADD R TO TT (CHANGE 0TT0 TO 0TTR)\n         SLL   R0,8                MAKE 0TTR TTR0\n         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB\n         LA    R2,DCBFDAD-IHADCB+PDSDIR  LOAD ADDRESS OF MBBCCHHR\n         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT\n         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN\n         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA\n         LR    R8,R13              COPY REG 13 TO REG 8\n         CALL  (15)                CONVERT TTRN TO MBBCCHHR\n         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13\n         SPACE 1\n***********************************************************************\n*        CLOSE THE DIRECTORY TO UPDATE THE FORMAT 1 DSCB              *\n***********************************************************************\n         SPACE 1\n         CLOSE (PDSDIR)            CLOSE THE DIRECTORY AND UPDATED    ->\n                                    DS1LSTAR AND DS1TRBAL\n         B     EXITOK\n         EJECT ,\n***********************************************************************\n*        ERROR ROUTINES                                               *\n***********************************************************************\n         SPACE 1\nERR2     LA    R0,ERR2M            LOAD MESSAGE ADDRESS\n         B     EXITMSG             AND CONTINUE\n         SPACE 1\nERR3     LA    R0,ERR3M\n         B     EXITMSG\n         SPACE 1\nERR4     LA    R0,ERR4M\n         B     EXITMSG\n         SPACE 1\nERR5     LA    R0,ERR5M\n         B     EXITMSG\n         SPACE 1\nEXITOK   LA    R0,OKMSG\n         SPACE 1\nEXITMSG  TM    DCBOFLGS-IHADCB+PRINT,DCBOFOPN  SYSPRINT OPEN?\n         BZ    ENDOFPGM            BR IF NOT\n         PUT   PRINT,(0)           WRITE THE MESSAGE\n         CLOSE (PRINT)             CLOSE SYSPRINT\n         LA    R1,PRINT            LOAD ADDRESS OF THE DCB\n         BAL   R14,FREEP           FREE ITS BUFFER POOL\n         SPACE 1\n***********************************************************************\n*        END OF PROCESSING - RETURN TO CALLER                         *\n***********************************************************************\n         SPACE 1\nENDOFPGM DS    0H                  RETURN TO CALLER\n         PGMOUT RC=0               STANDARD HOUSEKEEPING\n         TITLE 'SUB-ROUTINES'\n***********************************************************************\n*        FREE A STANDARD DATA MANAGEMENT BUFFER POOL                  *\n***********************************************************************\n         SPACE 1\n         CNOP  0,8\nFREEP    SAVE  (14,1)              SAVE REGS\n         FREEPOOL (1)              FREE THE BUFFER POOL\n         RETURN (14,1),T           RESTORE REGS & RETURN\n         TITLE 'DATA AREAS'\n         PUSH PRINT\n         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF\n***********************************************************************\n*        PRIVATE CONSTANTS AND WORK AREAS                             *\n***********************************************************************\n         SPACE 2\n         DS    0D                  GET ADDRESSES ALIGNED\n         DC    CL8'EYECATCH'       EYECATCHER\nPDSAUCB  DC    A(0)                ADDRESS OF UCB FOR PDS\nECB      DC    A(0)                ECB FOR EXCP\n         SPACE 1\nRKDD     DS    0F                  RKDD FOR STAR\n         DC    AL1(1)              RECORD NO.\n         DC    AL1(8)              KEYLEN\n         DC    AL2(256)            RECORD LENGTH FOR DIRECTORY\n         SPACE 1\nBUFFER   DS   0CL(264)\n         DC    XL256'0',XL(264-256)'0'\nCLRDATA  DC    X'FFFFFFFFFFFFFFFF000EFFFFFFFFFFFFFFFF00000000'\n         SPACE 1\n***********************************************************************\n*        IOB AND CCWS                                                 *\n***********************************************************************\n         SPACE 2\n         DC    0D'0'\nIOB      DC    0A(0),AL1(X'42',0,0,0)\n         DC    A(ECB)\n         DC    2A(0)\n         DC    A(CCWS)\n         DC    A(PDSDIR)\n         DC    2A(0)\nMBBCCHHR DC    XL8'0'\n         SPACE 1\nCCWS     CCW   X'31',MBBCCHHR+3,X'40',5  SEARCH ID EQUAL\n         CCW   X'08',*-8,0,0             BR IF SEARCH FAILED\n         CCW   X'0D',BUFFER,0,L'BUFFER WRITE KEY AND DATA\n         SPACE 1\n***********************************************************************\n*        DATA CONTROL BLOCKS                                          *\n***********************************************************************\n         SPACE 2\n         PRINT NOGEN\nPRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                     ->\n               RECFM=VBA,LRECL=125\n         SPACE 1\nPDS      DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=GL,RECFM=F,BLKSIZE=256,    X\n               LRECL=256,EODAD=PDSEOF,EXLST=XLIST\n         SPACE 1\nBPAMDCB  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=W\n         SPACE 1\nPDSDIR   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=E\n         SPACE 1\nXLIST    DC    0F'0',AL1(X'80'+7),AL3(JFCB)\nJFCB     DS   0XL176\n         IEFJFCBN ,\n         ORG   JFCB+L'JFCB\nCAMLST   CAMLST SEARCH,JFCBDSNM,JFCBVOLS,OBTOUT\nFMT1DSCB EQU   *-44\nOBTOUT   DC    XL144'0'\n         TITLE 'LITERAL POOL'\n***********************************************************************\n*        LITERAL POOL                                                 *\n***********************************************************************\n         SPACE 1\n         DC    0D'0'\n         LTORG ,                   LITERAL POOL GOES HERE\n         SPACE 1\nERR2M    DC    AL2(ERR2L,0),C' EPD002E SYSUT2 NOT ALLOCATED TO STEP'\nERR2L    EQU   *-ERR2M\n         SPACE 1\nERR3M    DC    AL2(ERR3L,0),C' EPD003E SYSUT2 DATA SET NOT ON VOLUME'\nERR3L    EQU   *-ERR3M\n         SPACE 1\nERR4M    DC    AL2(ERR4L,0),C' EPD004E SYSUT2 DATA SET IS NOT PARTITION>\n               ED'\nERR4L    EQU   *-ERR4M\n         SPACE 1\nERR5M    DC    AL2(ERR5L,0),C' EPD005E SYSUT2 DATA SET NOT ALLOCATED OL>\n               D OR MOD'\nERR5L    EQU   *-ERR5M\n         SPACE 1\nOKMSG    DC    AL2(OKMSGL,0),C' ALL MEMBERS SCRATCHED FROM PDS'\nOKMSGL   EQU   *-OKMSG\n         SPACE 3\n         POP   PRINT               RESTORE PRINT STATUS\n         TITLE 'DSECT MAPS'\n***********************************************************************\n*        MAPPING MACROS                                               *\n***********************************************************************\n         PUSH  PRINT               SAVE PRINT STATUS\n*        PRINT ON,GEN            SYSTEM DSECT EXPANSION OPTION\n         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT\n         CVT   DSECT=YES           DEFINE CVT SYMBOLS\n         IEZDEB  LIST=YES\nF1DSCB   DSECT\n         IECSDSL1 1                DEFINE FORMAT 1 DSCB\n         SPACE 2\n         POP   PRINT               RESTORE PRINT STATUS\n         SPACE 3\n         END EMPTYPDS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EMPTYPD$": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x003\\x01\\x05\\x06\\x8f\\x01\\t\\x05o\\tU\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-03-09T00:00:00", "modifydate": "2009-02-25T09:55:33", "lines": 30, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,ESD,RLD,BATCH)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//*        DD DISP=SHR,DSN=SBGOLOB.CBT478.FILE713 <-REMOVED DEPENDENCY\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.CBT478.FILE713(EMPTYPDS)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,4),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   EMPTYPDS\n SETSSI  CB478713\n SETCODE AC(0)\n NAME    EMPTYPDS(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EMPTYPDJ": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x17\\x01\\x05\\x06\\x8f\\x01\\t\\x05o\\tW\\x00\\x08\\x00\\x06\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-03-09T00:00:00", "modifydate": "2009-02-25T09:57:17", "lines": 8, "newlines": 6, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBE JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//EMPTYIT  EXEC PGM=EMPTYPDS\n//STEPLIB   DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSPRINT  DD  SYSOUT=*\n//SYSUT2    DD  DISP=SHR,DSN=SBGOLOB.TEST.PDS\n//*YSUT2    DD  DISP=OLD,DSN=SBGOLOB.TEST.PDSE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EMPTYPDS": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x00\\x00U\\x01\\x05\\x08\\x8f\\x01\\t\\x06\\x0f\\x01\\x10\\x02\\x08\\x01\\x8f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "02.00", "flags": 0, "createdate": "2005-03-29T00:00:00", "modifydate": "2009-03-01T01:10:55", "lines": 520, "newlines": 399, "modlines": 0, "user": "SBGOLOB"}, "text": "EMPTYPDS TITLE 'PROGRAM TO RESET PDS DIRECTORY AND HIGH-WATER MARK'\n***********************************************************************\n*        PDSDOC *COMPLETELY EMPTY A PDS...............................*\n*                                                                     *\n*        PROGRAM ID. :             EMPTYPDS                           *\n*                                                                     *\n*        DATE WRITTEN :            JANUARY   1995                     *\n*                                                                     *\n*        AUTHOR :                  D.H.CARTWRIGHT.                    *\n*                                                                     *\n*        LOCATION :                SUTTON COLDFIELD                   *\n*                                                                     *\n*        HISTORY  :                                                   *\n*                                                                     *\n*   JAN95 STARTED WRITING BASED ON UT507 + UT508                      *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        UPDATED :                 MARCH 2005                         *\n*                                                                     *\n*        BY :                      STEVE MYERS                        *\n*                                                                     *\n*        WHAT:                     1) REMOVE APF REQUIREMENT.         *\n*                                  2) CALCULATE TRACK BALANCE         *\n*                                     CORRECTLY.                      *\n*                                  3) USE CLOSE TO UPDATE DS1LSTAR    *\n*                                     AND DS1TRBAL.                   *\n*                                  4) RECOGNIZE PDS-E DATA SETS, AND  *\n*                                     USE STOW I OPTION TO CLEAR THE  *\n*                                     DATA SET.                       *\n*                                  5) STATUS MSGS TO SYSPRINT         *\n*                                  6) SOME MAINTENANCE ITEMS.         *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*        UPDATED :                 MARCH 2009                         *\n*                                                                     *\n*        BY :                      SAM GOLOB                          *\n*                                                                     *\n*        WHAT:                     1) PROPER RETURN CODE OF 8 IF      *\n*                                     THERE WAS AN ERROR.             *\n*                                  2) IF SYSPRINT IS MISSING, WRITE   *\n*                                     ALL MESSAGES TO THE JOB LOG,    *\n*                                     TO SHOW THE USER WHAT HAPPENED. *\n*                                  3) FIX DESCRIPTION OF SOME ERRORS, *\n*                                     SUCH AS PDSE NOT ALLOCATED OLD. *\n*                                     A PDS CAN BE ALLOCATED SHR.     *\n*                                  4) ADDED VERSION NUMBER & TITLE.   *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n***********************************************************************\n*                                                                     *\n*        PURPOSE                                                      *\n*       ---------                                                     *\n*                                                                     *\n* THIS PROGRAM WILL EMPTY A PDS BY OVERWRITING THE FIRST BLOCK OF THE *\n* DIRECTORY AND BY RESETING THE HIGH WATER MARK FOR THE DATASET IN    *\n* THE VTOC.  IF THE DATA SET IS A PDS-E, IT USES THE STOW I OPTION    *\n* TO PERFORM AN EQUIVALENT FUNCTION.                                  *\n*                                                                     *\n***********************************************************************\n         EJECT ,\n***********************************************************************\n*                                                                     *\n*       INPUT                                                         *\n*       -----                                                         *\n*                                                                     *\n* 1) SYSUT2 DD CARD DEFING THE PDS TO BE RESET.                       *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*       OUTPUT                                                        *\n*       ------                                                        *\n*                                                                     *\n* 1) STATUS MESSAGES TO SYSPRINT                                      *\n* 2) ON COMPLETION THE PDS WILL BE EMPTY.                             *\n*                                                                     *\n***********************************************************************\n         EJECT ,\n         PRINT ON,GEN              SHOW MACRO EXPANSIONS\n*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS\n         SPACE 1\nEMPTYPDS CSECT ,\n         SPACE 1\n***********************************************************************\n*        REGISTER EQUATES AND USAGES.                                 *\n***********************************************************************\n         SPACE 1\nR0       EQU   0                   .\nR1       EQU   1                   WORK/LINKAGE\nR2       EQU   2                   POINTER TO MDCB\nREG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO\nR3       EQU   3                   DCB POINTER\nR4       EQU   4                   LINKAGE RETURN\nR5       EQU   5                   .\nR6       EQU   6                   .\nR7       EQU   7                   .\nR8       EQU   8                   .\nR9       EQU   9                   .\nR10      EQU   10                  .\nR11      EQU   11                  COUNT OF DIRECTORY BLOCKS\nR12      EQU   12                  .\nR13      EQU   13                  SAVE AREA / BASE REG. 1\nR14      EQU   14                  WORK/LINKAGE\nR15      EQU   15                  WORK/LINKAGE\n         SPACE 1\n         USING EMPTYPDS,R15\n         STM   R14,R12,12(R13)\n         BAL   R12,SAVEFLD+72\nSAVEFLD  DS    18F                 NON-RENT SAVE AREA\n         ST    R12,8(R13)\n         ST    R13,4(R12)\n         LR    R13,R12\n         DROP  R15\n         USING SAVEFLD,R13\n         EJECT ,\n         XC    ERRFLAG,ERRFLAG\n***********************************************************************\n*        VERIFY SYSPRINT IS ALLOCATED                                 *\n***********************************************************************\n         SPACE 1\n         DEVTYPE DCBDDNAM-IHADCB+PRINT,16(R13)  USE DEVTYPE\n         LTR   R15,R15             TEST RC\n         BZ    OPENPR              QUIT IF SYSPRINT IS NOT PRESENT\n         OI    NOPRFLG,X'01'       FLAG SYSPRINT NOT OPEN\n         B     CHKUT2              CONTINUE\nOPENPR   OPEN  (PRINT,OUTPUT)      OPEN SYSPRINT\n         SPACE 1\n***********************************************************************\n*        VERIFY DDNAME IS ALLOCATED                                   *\n***********************************************************************\n         SPACE 1\nCHKUT2   DEVTYPE DCBDDNAM-IHADCB+PDS,16(R13)  USE DEVTYPE\n         LTR   R15,R15             TEST RC\n         BNZ   ERR2                QUIT IF DDNAME ISN'T THERE\n         SPACE 1\n***********************************************************************\n*        DETERMINE IF DATA SET IS A PDS-E ALLOCATED DISP=OLD OR MOD   *\n***********************************************************************\n         SPACE 1\n         RDJFCB (PDS,INPUT)        READ THE JFCB\n         OBTAIN CAMLST             OBTAIN THE FORMAT 1 DSCB\n         LTR   R15,R15             TEST RC\n         BNZ   ERR3                BR IF F1 DSCB NOT THERE\n         USING F1DSCB,FMT1DSCB     ESTABLISH FORMAT 1 DSCB ADDRESSING\n         ICM   R0,B'0011',DS1DSORG LOAD DSORG\n         N     R0,=AL1(0,0,255-DS1DSGU,255)  REMOVE UNMOVABLE BIT\n         CLM   R0,B'0011',=AL1(DS1DSGPO,0)  TEST IF DSORG = PO\n         BNE   ERR4                BR IF NOT\n         TM    DS1SMSFG,DS1PDSE    TEST IF PDSE\n         BZ    REALPDS             BR IF NOT\n         IC    R0,JFCBIND2         LOAD IND2\n         N     R0,=AL1(0,0,0,JFCDISP+JFCSHARE)  ISOLATE DISP FLAGS\n         CLM   R0,B'0001',=AL1(JFCOLD)  VERIFY OLD\n         BE    KILLPDSE                 BR IF DISP=OLD\n         CLM   R0,B'0001',=AL1(JFCMOD)  VERIFY MOD\n         BNE   ERR5                QUIT IF NOT OLD OR MOD\n         SPACE 1\n***********************************************************************\n*        OPEN A BPAM DCB AND USE STOW INIT TO KILL THE DIRECTORY      *\n***********************************************************************\n         SPACE 1\nKILLPDSE OPEN  (BPAMDCB,OUTPUT)    OPEN A BPAM DCB\n         STOW  BPAMDCB,,I          RESET THE DIRECTORY\n         CLOSE BPAMDCB             CLOSE THE DIRECTORY\n         B     EXITOK              AND EXIT\n         EJECT ,\n***********************************************************************\n*        CALCULATE SPACE USED BY THE DIRECTORY                        *\n***********************************************************************\n         SPACE 1\nREALPDS  OI    JFCBTSDM,JFCNDSCB+JFCNDCB+JFCNWRIT              LRECL256\n         OPEN  (PDS,INPUT),TYPE=J                              LRECL256\n         SR    R11,R11             SET DIRECTORY BLOCK COUNT = 0\nLOOPXX   GET   PDS\n         LA    R11,1(R11)\n         B     LOOPXX\nPDSEOF   DC    0H'0'\n         L     R1,DCBDEBAD-IHADCB+PDS  LOAD ADDRESS OF THE DEB FROM   ->\n                                        THE DCB\n         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS\n         L     R1,(DEBUCBAD-DEBDASD)+(DEBBASND-DEBBASIC)(,R1)  LOAD   ->\n                                    UCB ADDRESS FROM THE FIRST DASD   ->\n                                     EXTENT ENTRY IN THE DEB\n         N     R1,=A(X'FFFFFF')    ISOLATE THE 24-BIT ADDRESS\n         ST    R1,PDSAUCB          SAVE UCB ADDRESS\n         CLOSE (PDS)\n         LA    R1,PDS\n         BAL   R14,FREEP\n         SPACE 1\n***********************************************************************\n*        OVERWRITE FIRST DIRECTORY BLOCK TO EMPTY DIRECTORY           *\n***********************************************************************\n         SPACE 1\nSCRUBDIR DS    0H                  RESET THE DIRECTORY\n         OPEN  (PDSDIR,OUTPUT)     OPEN THE DATA SET FOR OUTPUT\n         LA    R0,1*256            SET TTRN = 00000100\n         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB\n         LA    R2,MBBCCHHR         LOAD ADDRESS OF MBBCCHHR\n         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT\n         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN\n         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA\n         LR    R8,R13              COPY REG 13 TO REG 8\n         CALL  (15)                CONVERT TTRN TO MBBCCHHR\n         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13\n         MVC   BUFFER(L'CLRDATA),CLRDATA\n         MVI   ECB,0               RESET THE ECB\n         EXCP  IOB                 REPLACE THE FIRST DIRECTORY BLOCK\n         WAIT  1,ECB=ECB           WAIT FOR I/O TO COMPLETE\n         CLI   ECB,X'7F'           VERIFY I/O IS OK\n         BE    *+6                 BR IF SO\n         DC    H'0'                OOPS  ** WE WANT A DUMP FOR THIS **\n         SPACE 1\n***********************************************************************\n*        NOW CALCULATE THE CORRECT TRACK BALANCE FOR THE LAST TRACK   *\n*        IN THE DIRECTORY.  REG 11 STILL HAS THE NUMBER OF RECORDS    *\n***********************************************************************\n         SPACE 1\n         SR    R8,R8               SET TT = 0\nNEXTT    LA    R9,1                SET REG 9 = 1\nNEXTR    STC   R9,RKDD             SAVE CURRENT RECORD\n         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->\n               RKDD=RKDD,BALANCE=(R6),                                ->\n               REGSAVE=YES\n         LTR   R15,R15             TEST RC\n         BZ    SAMETRK             BR IF 0\n         LA    R8,1(,R8)           BUMP TT\n         B     NEXTT               GO START THE NEW TRACK\nSAMETRK  LR    R6,R0               COPY NEW TRACK BALANCE TO REG 6\n         LA    R9,1(,R9)           BUMP REG 9\n         BCT   R11,NEXTR           CONTINUE\n         SPACE 1\n***********************************************************************\n*        ADD THE BALANCE FOR AN EOF RECORD                            *\n***********************************************************************\n         SPACE 1\nADDEOF   LA    R0,1                SET REG 0 = 1\n         STCM  R0,B'1111',RKDD     RESET RKDD\n         STC   R9,RKDD             STORE THE R\n         TRKCALC FUNCTN=TRKBAL,UCB=PDSAUCB,                           ->\n               RKDD=RKDD,BALANCE=(R6),                                ->\n               REGSAVE=YES\n         LTR   R15,R15             TEST RC\n         BZ    BALOK               BR IF SO\n         LA    R8,1(,R8)           BUMP TT\n         LA    R9,1                SET R\n         B     ADDEOF\nBALOK    STCM  R0,B'0011',DCBTRBAL-IHADCB+PDSDIR  STORE THE TRACK     ->\n                                                   BALANCE INTO THE DCB\n         SPACE 1\n***********************************************************************\n*        CONVERT TTR TO MBBCCHHR IN DCBFDAD                           *\n***********************************************************************\n         SPACE 1\n         LR    R0,R8               COPY TT TO REG 0\n         SLL   R0,8                MAKE 00TT 0TT0\n         OR    R0,R9               ADD R TO TT (CHANGE 0TT0 TO 0TTR)\n         SLL   R0,8                MAKE 0TTR TTR0\n         L     R1,DCBDEBAD-IHADCB+PDSDIR  LOAD ADDRESS OF THE DEB\n         LA    R2,DCBFDAD-IHADCB+PDSDIR  LOAD ADDRESS OF MBBCCHHR\n         L     R15,CVTPTR          LOAD ADDRESS OF THE CVT\n         L     R15,CVTPCNVT-CVTMAP(,R15)  LOAD ADDR OF CONVERSION RTN\n         STM   R8,R13,12(R13)      SAVE REGS IN THE CURRENT SAVE AREA\n         LR    R8,R13              COPY REG 13 TO REG 8\n         CALL  (15)                CONVERT TTRN TO MBBCCHHR\n         LM    R8,R13,12(R8)       RESTORE REGS 8 THROUGH 13\n         SPACE 1\n***********************************************************************\n*        CLOSE THE DIRECTORY TO UPDATE THE FORMAT 1 DSCB              *\n***********************************************************************\n         SPACE 1\n         CLOSE (PDSDIR)            CLOSE THE DIRECTORY AND UPDATED    ->\n                                    DS1LSTAR AND DS1TRBAL\n         B     EXITOK\n         EJECT ,\n***********************************************************************\n*        ERROR ROUTINES                                               *\n***********************************************************************\n         SPACE 1\nERR2     DS    0H\n         BAL   R3,PRTITLE\n         LA    R0,ERR2M            Load message address\n         OI    ERRFLAG,X'01'       Which error am I?\n         LA    R5,8                Load return code\n         B     EXITMSG             Exit message to SYSPRINT or JES log\n         SPACE 1\nERR3     DS    0H\n         BAL   R3,PRTITLE\n         LA    R0,ERR3M            Load message address\n         OI    ERRFLAG,X'02'       Which error am I?\n         LA    R5,8                Load return code\n         B     EXITMSG             Exit message to SYSPRINT or JES log\n         SPACE 1\nERR4     DS    0H\n         BAL   R3,PRTITLE\n         LA    R0,ERR4M            Load message address\n         OI    ERRFLAG,X'04'       Which error am I?\n         LA    R5,8                Load return code\n         B     EXITMSG             Exit message to SYSPRINT or JES log\n         SPACE 1\nERR5     DS    0H\n         BAL   R3,PRTITLE\n         LA    R0,ERR5M            Load message address\n         OI    ERRFLAG,X'08'       Which error am I?\n         LA    R5,8                Load return code\n         B     EXITMSG             Exit message to SYSPRINT or JES log\n         SPACE 1\nEXITOK   DS    0H\n         BAL   R3,PRTITLE\n         LA    R0,OKMSG            Load message address\n         MVI   ERRFLAG,X'00'       No error. Code 0.\n         LA    R5,0\n         SPACE 1\nEXITMSG  TM    DCBOFLGS-IHADCB+PRINT,DCBOFOPN  SYSPRINT OPEN?\n         BZ    EXITMISP            BR IF NOT\n         PUT   PRINT,(0)           WRITE THE MESSAGE\n         CLOSE (PRINT)             CLOSE SYSPRINT\n         LA    R1,PRINT            LOAD ADDRESS OF THE DCB\n         BAL   R14,FREEP           FREE ITS BUFFER POOL\n         B     EOJ\nEXITMISP DS    0H            Messages when SYSPRINT is missing.\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD001E      SYSPRINT DD Name is missing...',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         CLI   ERRFLAG,X'00'\n         BE    EXITMIOK\n         TM    ERRFLAG,X'01'\n         BO    EXITMIE2\n         TM    ERRFLAG,X'02'\n         BO    EXITMIE3\n         TM    ERRFLAG,X'04'\n         BO    EXITMIE4\n         TM    ERRFLAG,X'08'\n         BO    EXITMIE5\nEXITMIOK DS    0H\n         WTO   'EPDS000      ALL MEMBERS SCRATCHED FROM PDS',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD000I      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ\nEXITMIE2 DS    0H\n         WTO   'EPD002E      SYSUT2 DD Name NOT ALLOCATED  ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ\nEXITMIE3 DS    0H\n         WTO   'EPD003E      SYSUT2 DATA SET NOT ON VOLUME ',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ\nEXITMIE4 DS    0H\n         WTO   'EPD004E  SYSUT2 DATA SET IS NOT PARTITIONED',ROUTCDE=11X\n               ,DESC=7\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ\nEXITMIE5 DS    0H\n         WTO   'EPD005E   PDSE DATA SET NOT ALLOCATED OLD OR MOD',     X\n               ROUTCDE=11,DESC=7\n         WTO   'EPD000E      ----------------------------  ',ROUTCDE=11X\n               ,DESC=7\n         B     EOJ\n***********************************************************************\n*        END OF PROCESSING - RETURN TO CALLER                         *\n***********************************************************************\nEOJ      DS    0H                  Bye.\n         L     R13,4(,R13)\n         LR    R15,R5              Restore RC into corrupted R15\n         ST    R15,16(,R13)        Put RC into passed save area\n         L     R14,12(,R13)        Load R14 back.\n         LM    R0,R12,20(R13)      All the other registers.\n         BR    R14\n***********************************************************************\n         TITLE 'SUB-ROUTINES'\n***********************************************************************\n*        FREE A STANDARD DATA MANAGEMENT BUFFER POOL                  *\n***********************************************************************\n         SPACE 1\n         CNOP  0,8\nFREEP    SAVE  (14,1)              SAVE REGS\n         FREEPOOL (1)              FREE THE BUFFER POOL\n         RETURN (14,1),T           RESTORE REGS & RETURN\n         TITLE 'DATA AREAS'\n         PUSH PRINT\n         PRINT ON,NOGEN            DO NOT EXPAND STANDARD STUFF\n***********************************************************************\nPRTITLE  DS    0H\n         ST    R3,SAVER3A          Save BAL register.\n         TM    NOPRFLG,X'01'       Is SYSPRINT OPEN?\n         BO    PRTITLEW            No. Write WTO's instead.\n         LA    R0,TITLMSG          Load message address\n         PUT   PRINT,(0)           Write the message to SYSPRINT\n         LA    R0,DASHMSG          Load message address\n         PUT   PRINT,(0)           Write the message to SYSPRINT\n         B     PRTITLEN\nPRTITLEW DS    0H                  WTO's instead of SYSPRINT.\n         WTO   'EPDS000   EMPTYPDS - Empty a PDS - Ver. 2.0',         ->\n               ROUTCDE=11,DESC=7\n         WTO   'EPDS000   -------- - ----- - --- - --------',         ->\n               ROUTCDE=11,DESC=7\nPRTITLEN DS    0H                  End routine.\n         L     R3,SAVER3A          Restore BAL register.\n         BR    R3\n***********************************************************************\n*        PRIVATE CONSTANTS AND WORK AREAS                             *\n***********************************************************************\n         SPACE 2\nERRFLAG  DC    X'00'               Which error message to write.\nNOPRFLG  DC    X'00'               If X'01' then SYSPRINT not OPEN.\n         DS    0D                  GET ADDRESSES ALIGNED\n         DC    CL8'EYECATCH'       EYECATCHER\nPDSAUCB  DC    A(0)                ADDRESS OF UCB FOR PDS\nECB      DC    A(0)                ECB FOR EXCP\n         SPACE 1\nRKDD     DS    0F                  RKDD FOR STAR\n         DC    AL1(1)              RECORD NO.\n         DC    AL1(8)              KEYLEN\n         DC    AL2(256)            RECORD LENGTH FOR DIRECTORY\n         SPACE 1\nBUFFER   DS   0CL(264)\n         DC    XL256'0',XL(264-256)'0'\nCLRDATA  DC    X'FFFFFFFFFFFFFFFF000EFFFFFFFFFFFFFFFF00000000'\n         SPACE 1\n***********************************************************************\n*        IOB AND CCWS                                                 *\n***********************************************************************\n         SPACE 2\n         DC    0D'0'\nIOB      DC    0A(0),AL1(X'42',0,0,0)\n         DC    A(ECB)\n         DC    2A(0)\n         DC    A(CCWS)\n         DC    A(PDSDIR)\n         DC    2A(0)\nMBBCCHHR DC    XL8'0'\n         SPACE 1\nCCWS     CCW   X'31',MBBCCHHR+3,X'40',5  SEARCH ID EQUAL\n         CCW   X'08',*-8,0,0             BR IF SEARCH FAILED\n         CCW   X'0D',BUFFER,0,L'BUFFER WRITE KEY AND DATA\n         SPACE 1\n***********************************************************************\n*        DATA CONTROL BLOCKS                                          *\n***********************************************************************\n         SPACE 2\n         PRINT NOGEN\nPRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                     ->\n               RECFM=VBA,LRECL=125\n         SPACE 1\nPDS      DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=GL,RECFM=F,BLKSIZE=256,    X\n               LRECL=256,EODAD=PDSEOF,EXLST=XLIST\n         SPACE 1\nBPAMDCB  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=W\n         SPACE 1\nPDSDIR   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=E\n         SPACE 1\nXLIST    DC    0F'0',AL1(X'80'+7),AL3(JFCB)\nJFCB     DS   0XL176\n         IEFJFCBN ,\n         ORG   JFCB+L'JFCB\nCAMLST   CAMLST SEARCH,JFCBDSNM,JFCBVOLS,OBTOUT\nFMT1DSCB EQU   *-44\nOBTOUT   DC    XL144'0'\n         TITLE 'LITERAL POOL'\n***********************************************************************\n*        LITERAL POOL                                                 *\n***********************************************************************\n         SPACE 1\n         DC    0D'0'\nSAVER3A  DC    F'0'\n         LTORG ,                   LITERAL POOL GOES HERE\n         SPACE 1\nTITLMSG  DC    AL2(TITLMSGL,0),C' EMPTYPDS - Empty a PDS - Ver. 2.0'\nTITLMSGL EQU   *-TITLMSG\nDASHMSG  DC    AL2(DASHMSGL,0),C' -------- - ----- - --- - --------'\nDASHMSGL EQU   *-DASHMSG\nERR2M    DC    AL2(ERR2L,0),C' EPD002E SYSUT2 DD Name NOT ALLOCATED'\nERR2L    EQU   *-ERR2M\n         SPACE 1\nERR3M    DC    AL2(ERR3L,0),C' EPD003E SYSUT2 DATA SET NOT ON VOLUME'\nERR3L    EQU   *-ERR3M\n         SPACE 1\nERR4M    DC    AL2(ERR4L,0),C' EPD004E SYSUT2 DATA SET IS NOT PARTITION>\n               ED'\nERR4L    EQU   *-ERR4M\n         SPACE 1\nERR5M    DC    AL2(ERR5L,0),C' EPD005E   PDSE DATA SET NOT ALLOCATED OL>\n               D OR MOD'\nERR5L    EQU   *-ERR5M\n         SPACE 1\nOKMSG    DC    AL2(OKMSGL,0),C' ALL MEMBERS SCRATCHED FROM PDS'\nOKMSGL   EQU   *-OKMSG\n         SPACE 3\n         POP   PRINT               RESTORE PRINT STATUS\n         TITLE 'DSECT MAPS'\n***********************************************************************\n*        MAPPING MACROS                                               *\n***********************************************************************\n         PUSH  PRINT               SAVE PRINT STATUS\n*        PRINT ON,GEN            SYSTEM DSECT EXPANSION OPTION\n         PRINT ON,NOGEN            SYSTEM DSECT EXPANSION OPTION\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT\n         CVT   DSECT=YES           DEFINE CVT SYMBOLS\n         IEZDEB  LIST=YES\nF1DSCB   DSECT\n         IECSDSL1 1                DEFINE FORMAT 1 DSCB\n         SPACE 2\n         POP   PRINT               RESTORE PRINT STATUS\n         SPACE 3\n         END EMPTYPDS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LOADLIB": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x00\\x00\\x00\\x01\\t\\x06\\x0f\\x01\\t\\x06\\x0f\\x01\\x16\\x00=\\x00=\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "02.00", "flags": 0, "createdate": "2009-03-01T00:00:00", "modifydate": "2009-03-01T01:16:00", "lines": 61, "newlines": 61, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PGMIN": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x91\\x13O\\x00\\x980o\\t5\\x00d\\x00Z\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1991-05-14T00:00:00", "modifydate": "1998-11-02T09:35:00", "lines": 100, "newlines": 90, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&LABEL   PGMIN &SAVEFLD=,&USING=,&EQUATES=\n         LCLA  &N,&S\n         LCLC  &EQU,&CSECT,&SAVE,&R1,&R2\n.*\n.*\n.*       PDSDOC *STANDARD PROGRAM ENTRY MACRO (NON-RENT)....(M56025AS)* PGMIN\n.*\n.* 14MAY91 CART1 INCREASED MAXIMUM TO SIX BASE REGS.\n.*\n         AIF   ('&LABEL' EQ '').NONAME\n&LABEL    DS    0H\n.NONAME  ANOP\n&EQU     SETC  '&EQUATES'\n         AIF   ('&EQU' EQ 'NO').C2\n         AIF   ('&EQU' EQ 'YES').C1\n         AIF   ('&EQU' EQ '').C1\n         MNOTE 4,'INVALID EQUATES OPERAND - IGNORED'\n         AGO   .C2\n.C1      ANOP\n         SPACE 1\n*        REGISTER EQUATES\n         SPACE 1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 5\n.C2      ANOP\n&CSECT   SETC  '&SYSECT'\n         USING &CSECT,15\n         STM   14,12,12(13)\n&SAVE    SETC  '&SAVEFLD'\n         AIF   ('&SAVE' NE '').C3\n&SAVE    SETC  'SAVEFLD'\n.C3      BAL   12,&SAVE+72\n&SAVE    DS    18F\n         ST    12,8(13)\n         ST    13,4(12)\n         LR    13,12\n&N       SETA  N'&USING\n         AIF   (&N GT 0).C4\n         LA    12,2048(12)\n         LA    12,2048(12)\n         DROP  15\n         USING &SAVE,13,12\n         MEXIT\n.C4      ANOP\n&S       SETA  &S+1\n&R1      SETC  '&USING(&S)'\n&R2      SETC  '12'\n         LR    &R1,12\n.C5      ANOP\n&S       SETA  &S+1\n         AIF   (&S GT &N).C6\n&R1      SETC  '&USING(&S)'\n         LA    &R1,2048(&R2)\n         LA    &R1,2048(&R1)\n&R2      SETC  '&R1'\n         AGO   .C5\n.C6      AIF   (&N GT 1).C7\n         DROP  15\n         USING &SAVE,&USING(1)\n         MEXIT\n.C7      AIF   (&N GT 2).C8\n         DROP  15\n         USING &SAVE,&USING(1),&USING(2)\n         MEXIT\n.C8      AIF   (&N GT 3).C9\n         DROP  15\n         USING &SAVE,&USING(1),&USING(2),&USING(3)\n         MEXIT\n.C9      AIF   (&N GT 4).C10\n         DROP  15\n         USING &SAVE,&USING(1),&USING(2),&USING(3),&USING(4)\n         MEXIT\n.C10     AIF   (&N GT 5).C11\n         DROP  15\n         USING &SAVE,&USING(1),&USING(2),&USING(3),&USING(4),&USING(5)\n         MEXIT\n.C11     AIF   (&N EQ 6).C12\n         MNOTE 16,'MORE THAN SIX BASE REGISTERS SPECIFIED'\n         MEXIT\n.C12     ANOP\n         DROP  15\n         USING &SAVE,&USING(1),&USING(2),&USING(3),&USING(4),          X\n               &USING(5),&USING(6)\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PGMOUT": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x11/\\x00\\x95\\x04O\\x16\\x17\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-04-22T00:00:00", "modifydate": "1995-02-13T16:17:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&LABEL   PGMOUT &RC=0\n.*\n.*       PDSDOC *MACRO TO RETURN FROM PROGRAM.........................* PGMOUT\n.*\n.*\n.*  &&RC=          NUMBER TO BE RETURNED TO CALLING CSECT, OR REG 15\n.*                 SPECIFIED FOR INDICATING PRESET CODE  ALREADY\n.*\n&LABEL   DS    0H\n         AIF   ('&RC' EQ '(15)' OR '&RC' EQ '(R15)').SIZEX\n         AIF   (T'&RC EQ 'N').NUMBER\n         AIF   ('&RC'(1,1) EQ '(').REGSTER\n         AIF   (T'&RC EQ 'F').FLLWORD\n         AIF   (T'&RC EQ 'H').HLFWORD\n         MNOTE 4,'INVALID RC OPERAND - &RC - CONTENTS R15 ASSUMED'\n         AGO   .SIZEX\n.NUMBER  LA    15,&RC              LOAD RETURN CODE\n         AGO   .SIZEX\n.REGSTER LA    15,0&RC             LOAD RETURN CODE\n         AGO   .SIZEX\n.FLLWORD L     15,&RC              LOAD RETURN CODE\n         AGO   .SIZEX\n.HLFWORD LH    15,&RC              LOAD RETURN CODE\n.SIZEX   ANOP\n         L     13,4(13)            LOAD ADDRESS PREVIOUS SAVE AREA\n         RETURN (14,12),T,RC=(15)\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SUBIN": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x11/\\x00\\x95\\x04O\\x16$\\x00$\\x00$\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-04-22T00:00:00", "modifydate": "1995-02-13T16:24:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&NAME    SUBIN &SAVE=,&PREFIX=\n.*\n.*       PDSDOC *MACRO FOR SUB-ROUTINE ENTRANCE.......................* SUBIN\n.*\n         GBLA  &SUBINC\n         LCLA  &N,&S\n         LCLC  &R,&P,&PP\n&SUBINC SETA   &SUBINC+1\n&NAME    DS    0H\n&N       SETA  N'&SAVE\n         AIF   (&N GT 0).C1\n         MEXIT\n.C1      ANOP\n&P       SETC  '&PREFIX'\n         AIF   ('&P' EQ '').C2\n&PP      SETC  '&P.SAVE'\n         AGO   .C3\n.C2      ANOP\n&PP      SETC  '$&SUBINC'\n.C3      ANOP\n&S       SETA  &S+1\n         AIF   (&S GT &N).C4\n         ST    &SAVE(&S),&PP&SAVE(&S) \u0090      PRESERVE REGISTER\n         AGO   .C3\n.C4      ANOP\n         B     &PP.XIT \u0090           BRANCH OVER SAVE AREAS\n&S       SETA  0\n.C5      ANOP\n&S       SETA  &S+1\n         AIF   (&S GT &N).C6\n&PP&SAVE(&S) DS F \u0090                SAVE AREA\n         AGO   .C5\n.C6      ANOP\n&PP.XIT  EQU   * \u0090                 ROUTINE EXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SUBLR": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x18?\\x00\\x95\\x04O\\x16$\\x00\\x11\\x00\\x11\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-07-01T00:00:00", "modifydate": "1995-02-13T16:24:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&NAME    SUBLR &R,&S\n.*       PDSDOC *RELOAD SUBIN REGISTER........................(M56035)* SUBLR\n.*\n.*       LOAD REGISTER FROM PREVIOUS SUBIN SAVE AREA ( WITHIN ROUTINE )\n.*             SUBLR RX\n.*             SUBLR RX,RY\n.*\n         GBLA  &SUBINC             COMMON TO SUBIN/SUBOUT/SUBLR\n         LCLC  &P,&PP\n&P       SETC  '&R'\n         AIF   ('&S' EQ '').A01\n&P       SETC  '&S'\n.A01     ANOP\n&PP      SETC  '$&SUBINC'\n&NAME    L     &R,&PP&P \u0090          LOAD REGISTER FROM SUBIN SAVE AREA\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SUBOUT": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x11/\\x00\\x95\\x04O\\x16$\\x00&\\x00&\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-04-22T00:00:00", "modifydate": "1995-02-13T16:24:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&NAME   SUBOUT &RESTORE=,&PREFIX=,&RETURN=\n.*\n.*       PDSDOC *MACRO FOR SUB-ROUTINE EXIT...........................* SUBOUT\n.*\n         GBLA  &SUBINC\n         LCLA  &N,&S\n         LCLC  &R,&P,&PP,&B\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H \u0090\n.NONAME  ANOP\n&N       SETA  N'&RESTORE\n         AIF   (&N NE 0).C3\n.C1      ANOP\n&B       SETC  'R4'\n         AIF   ('&RETURN' EQ '').C2\n         AIF   ('&RETURN'(1,1) NE '(').C11\n&B       SETC  '&RETURN(1)'\n         AGO   .C2\n.C11     ANOP\n&B       SETC  '&RETURN'\n         B     &B \u0090                RETURN TO CALLER\n         MEXIT\n.C2      BR    &B \u0090                RETURN TO CALLER\n         MEXIT\n.C3      ANOP\n&P       SETC  '&PREFIX'\n         AIF   ('&P' EQ '').C4\n&PP      SETC  '&P.SAVE'\n         AGO   .C5\n.C4      ANOP\n&PP      SETC  '$&SUBINC'\n.C5      ANOP\n&S       SETA  &S+1\n         AIF   (&S GT &N).C1\n         L     &RESTORE(&S),&PP&RESTORE(&S) \u0090     RESTORE REGISTER\n         AGO   .C5\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTIOT": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x11/\\x00\\x95\\x04O\\x16%\\x00%\\x00%\\x00\\x00\\xc3\\xc2\\xe3\\xf1\\xf7\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-04-22T00:00:00", "modifydate": "1995-02-13T16:25:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "CBT172"}, "text": "         MACRO\n&NAME    TESTIOT &DDNAME=\n.*\n.*       PDSDOC *MACRO TO SEARCH TIOT FOR GIVEN DDNAME................* TESTIOT\n.*\n         LCLC  &DDN\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    EQU   *\n.NONAME  ANOP\n         CNOP  0,4\n.DDN     BAL   1,*+20 \u00ac            BRANCH AROUND LIST\n         DC    A(*+12) \u00ac           LIST ADDRESS\n         DC    A(0) \u00ac              TCB ADDRESS\n         DC    AL1(2) \u00ac            FIELD BYTE 1\n         DC    AL3(0) \u00ac            FIELD BYTE 2,3,4.\n         DC    F'0' \u00ac              ADDRESS TASK INPUT/OUTPUT TABLE\n         SVC   40 \u00ac                ISSUE EXTRACT SVC\n         L     1,*-6 \u00ac             LOAD ADDRESS OF TIOT\n         XC    *-10(4),*-10 \u00ac      ZEROISE ADDRESS TIOT AREA\n         LA    1,24(1) \u00ac           POINT R1 AT START OF FIRST DD ENTRY\n         XR    15,15 \u00ac             ZEROISE REG.15\n         CLC   0(4,1),*-22 \u00ac       TEST IF END OF TIOT\n         BE    *+26 \u00ac              YES - GO SET CONDITION CODE TO 4\n         AIF   ('&DDNAME' EQ '').NODDN\n&DDN     SETC  '&DDNAME'\n         AIF   ('&DDNAME'(1,1) EQ '(').REG\n         CLC   4(8,1),&DDN \u00ac       TEST IF SPECIFIED DDN IS IN TIOT\n         AGO   .NEXT\n.NODDN   ANOP\n&DDN     SETC  '(0)'\n.REG     CLC   4(8,1),0&DDN \u00ac      TEST IF SPECIFIED DDN IS IN TIOT\n.NEXT    BE    *+20 \u00ac              YES - CONDITION CODE IS ZERO\n         IC    15,0(1) \u00ac           LOAD LENGTH OF THIS DD ENTRY\n         LA    1,0(15,1) \u00ac         GET ADDRESS OF NEXT DD ENTRY\n         B     *-30 \u00ac              REPEAT TEST\n         LA    15,4 \u00ac              SET CONDITION CODE TO 4\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT713/FILE713.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT713", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}