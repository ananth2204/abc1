This source was pulled from the fossil repository at
http://www.sqlite.org/cgi/src . I am actually unsure if this is 3.8.7 or
3.8.8. . The parts of the source say 3.8.7 while other parts say 3.8.8.

This distribution does _NOT_ include any SQLite documentation. You can
read this on the web, or download it, from http://www.sqlite.org.
Including it here seems redundant.

2014-10-30 - Release 3.8.7.1
============================

SQLite version 3.8.7.1 is a bug-fix release.

The primary reason for this bug-fix release is to address a problem with
updating the value of fields at the end of a table that were added using
ALTER TABLE ADD COLUMN. This problem 1 first appeared in the 3.8.7
release.

Another minor annoyance in the 3.8.7 release was the fact that the
Android build tried to use the strchrnul() function from the standard C
library but that function is not available on Android. Android builds
had to add -DHAVE_STRCHRNUL=0 to work around the problem. This patch
fixes that so that Android builds should now work without any changes.

The operation of PRAGMA journal_mode=TRUNCATE has been enhanced so that
it invokes fsync() after truncating the journal file when PRAGMA
synchronous=FULL. This helps to preserve transaction durability in the
case of a power loss occurring shortly after commit.

Finally, a couple of long-standing and obscure problems associated with
run UPDATE and DELETE on VIEWs were fixed.

The changes from 3.8.7 are minimal.

2014-10-17 - Release 3.8.7
==========================

SQLite version 3.8.7 is a regularly scheduled maintenance release.
Upgrading from all prior versions is recommended.

Most of the changes from the previous release have been
micro-optimizations designed to help SQLite run a little faster. Each
individual optimization has an unmeasurably small performance impact.
But the improvements add up. Measured on a well-defined workload (which
the SQLite developers use as a proxy for a typical application workload)
using cachegrind on Linux and compiled with gcc 4.8.1 and -Os on x64
linux, the current release does over 20% more work for the same number
of CPU cycles compared to the previous release. Cachegrind is not a real
CPU, and the workload used for measurement is only a proxy. So your
performance may vary. We expect to see about half the measured and
reported improvement in real-world applications. 10% is less than 20%
but it is still pretty good, we think.

This release includes a new set of C-language interfaces that have
unsigned 64-bit instead of signed 32-bit length parameters. The new APIs
do not provide any new capabilities. But they do make it easier to write
applications that are more resistant to integer overflow
vulnerabilities.

This release also includes a new sorter that is able to use multiple
threads to help with large sort operations. (Sort operations are
sometimes required to implement ORDER BY and/or GROUP BY clauses and are
almost always required for CREATE INDEX.) The multi-threads sorter is
turned off by default and must be enabled using the PRAGMA threads SQL
command. Note that the multi-threaded sorter provides faster real-time
performance for large sorts, but it also uses more CPU cycles and more
energy.

2014-08-15 - Release 3.8.6
==========================

SQLite version 3.8.6 is a regularly scheduled maintenance release.
Upgrading from all previous versions is recommended.

This release contains the usual assortment of obscure bug fixes. One
bug, however, deserves special attention. A problem appeared in the
CREATE INDEX command beginning with version 3.8.2 (2013-12-06) that
allowed, under some circumstances, a UNIQUE index to be created on a
column that was not unique. Once the index was created, no new
non-unique entries could be inserted, but preexisting non-unique entries
would remain. See ticket 9a6daf340df99ba93c for further information. In
addition to fixing this bug, the PRAGMA integrity_check command has been
enhanced to detect non-uniqueness in UNIQUE indices, so that if this bug
did introduce any problems in databases, those problems can be easily
detected.

Other noteworthy changes include the addition of support for hexadecimal
integers (ex: 0x1234), and performance enhancements to the IN operator
which, according to mailing list reports, help some queries run up to
five times faster.

Version 3.8.6 uses 25% fewer CPU cycles than version 3.8.0 from
approximately one year ago, according to valgrind and the
test/speedtest1.c test program. On the other hand, the compiled binary
for version 3.8.6 is about 5% larger than 3.8.0. The size increase is
due in part to the addition of new features such as WITHOUT ROWID tables
and common table expressions.

2014-06-04 - Release 3.8.5
==========================

SQLite version 3.8.5 is a regularly scheduled maintenance release.
Upgrading from the previous version is recommended.

Version 3.8.5 fixes more than a dozen obscure bugs. None of these bugs
should be a problem for existing applications. Nor do any of the bugs
represent a security vulnerability. Nevertheless, upgrading is
recommended to prevent future problems.

In addition to bug fixes, the 3.8.5 release adds improvements to the
query planner, especially regarding sorting using indices and handling
OR terms in the WHERE clause for WITHOUT ROWID tables. The ".system" and
".once" dot-commands were added to the command-line interface. And there
were enhancements to the FTS4 and RTREE virtual tables. See the change
log for details.

2014-04-03 - Release 3.8.4.3
============================

The optimizations added in version 3.8.4 caused some queries that
involve subqueries in the FROM clause, DISTINCT, and ORDER BY clauses,
to give an incorrect result. See ticket 98825a79ce145 for details. This
release adds a one-character change to a single line of code to fix the
problem.

2014-03-26 - Release 3.8.4.2
============================

The code changes that resulted in the performance improvements in
version 3.8.4 missed a single buffer overflow test, which could result
in a read past the end of a buffer while searching a database that is
corrupted in a particular way. Version 3.8.4.2 fixes that problem using
a one-line patch.

We are not aware of any problems in version 3.8.4 when working with
well-formed database files. The problem fixed by this release only comes
up when reading corrupt database files.

2014-03-11 - Release 3.8.4.1
============================

SQLite version 3.8.4.1 is a patch against version 3.8.4 that fixes two
minor issues:

Work around a C-preprocessor macro conflict that causes compilation
problems for some configurations of Visual Studio.  Adjust the cost
computation for the skip-scan optimization for improved performance.
Both of these issues came to light within minutes of tagging the
previous release. Neither issue is serious but they can be annoying.
Hence, the decision was made to do a quick patch release to address both
issues.

