/******************************** REXX ********************************
  This REXX runs under TSO using:
     - The SDSF REXX Interface to retrieve the current JOBS JESMSGLG.
     - The BPXWUNIX Interface w/grep to search for unacceptable STEP RCs.
     - Finally it writes any found out to the ....@SCCNTL.BUILD Library
       as a @#sys##X member (@#sys## is current JOB) identifying the
       issue and which Listing to use for more details.

  This REXX Requires TSO because it uses:
       - The PDS/PDS86 program from http://CBTTape.org
       - The SDSF REXX Interface
  This REXX also uses:
       - MVS to writes the create @#sys##X Members
       - USS BPXWUNIX interface to the /bin/grep & /bin/sed commands

 NOTE: This REXX requires use of CCID IBM-1047 to ensure Regex strings
       function correctly (square Brackets & not character).

 ******************************** Rexx ********************************/
TRACE("O")                     /* Set REXX TRACE for Debugging        */
MsgStat=MSG("OFF")
ARG RptDsn Type . 1 RptPds '(' RptMbr ')' . 1 RptHlq '@' .
  CALL INITIALIZE_REXX
  CALL GET_CURRENT_JESMSGLG
  CALL CHECK_FOR_ERRORS
  IF Issues.0 > 0 THEN DO
     IssuesFound = TRUE
     CALL FORMAT_JESJOBS
     CALL WRITE_ISSUES
    END
  ELSE DO
     IssuesFound = FALSE
     SAY " No Issues discovered for this JOB."
     ADDRESS "TSO" "PDS '"RptPds"' DEL" RptMbr
  END
MsgStat=MSG(MsgStat)
EXIT IssuesFound
/*
       Setup Various Variable to be used by this REXX
*/
INITIALIZE_REXX:
  TRUE=1; FALSE=0
  Env.=""; Env.0=2; Env.1="_UNIX03=YES"; Env.2="PATH=/bin:/usr/sbin"
          /* Steps that have "FAILed" and need attention              */
  RcErrors = ".{8} .{8}  (  12|  16|  20)"
  Rc8PStps = ".{8}",
             "(ASMPGM  |GENPGM  |LINKDYL |LINKEDIT|CICSPREC|LANGX   )    08"
  Ok8Steps = "(ABEXIT   ASMPGM      08)"
  RcAbends = ".{8} .{8} (UÝÝ:digit:¨¨{4}|.SÝÝ:digit:¨¨{3})"
          /* Listing dataset to update Element Member USERIDs         */
  ReviewPDS= RptHlq"GENERATE.LISTINGS"

RETURN
/*
       Use SDSF to retrieve current JOBs JESMSGLG Output ...
*/
GET_CURRENT_JESMSGLG:
  IsfJesName = MVSVAR("SYMDEF","JES")
  x=ISFCALLS('ON')
    IsfOwner = USERID(); IsfPrefix = MVSVAR("SYMDEF","JOBNAME")
    IsfSysname = MVSVAR("SYMDEF","SYSNAME")

    ADDRESS "SDSF" "ISFEXEC DA"
    ADDRESS "SDSF" "ISFACT  DA TOKEN('"Token.1"') PARM(NP ?) (PREFIX Jds)"
    DO i=1 TO JdsDdName.0 UNTIL ABBREV(JdsDdName.i,"JESMSGLG"); END
    ADDRESS "SDSF" "ISFACT  DA TOKEN('"JdsToken.i"') PARM(NP SA)"
    ADDRESS "MVS" "EXECIO * DISKR" IsfDdName.1 "(STEM JesMsgLg. FINIS"
  x=ISFCALLS('OFF')
RETURN
/*
       Get JSEMSGLG and Review for BAD RCs ...
*/
CHECK_FOR_ERRORS:
  IsIssue = "-e'¬.{21}("RcErrors"|"Rc8PStps"|"RcAbends") '"
  x=BPXWUNIX("grep -E" IsIssue,"JesMsgLg.","MaybeIssue.","StdErr.","Env.")
    DO i=1 TO StdErr.0; SAY "  grep IsIssue StdErr:" StdErr.i; END
  IsOk    = "-e'¬.{21}"Ok8Steps"'"
  x=BPXWUNIX("grep -Ev" IsOk,"MaybeIssue.","Issues.","StdErr.","Env.")
    DO i=1 TO StdErr.0; SAY "  grep IsOk StdErr:" StdErr.i; END
RETURN
/*
       Remove Parts of JESMSGLG that are not needed ...
*/
FORMAT_JESJOBS:
  trim = LENGTH(Issues.1)-44
  Replace = "'s/.{"trim"}$//g'"
  x=BPXWUNIX("sed -E" Replace,"Issues.","Issues.","StdErr.","Env.")
    DO i=1 TO StdErr.0; SAY "  sed1 StdErr:" StdErr.i; END
  Replace = "'s/¬.{21}//g'"
  x=BPXWUNIX("sed -E" Replace,"Issues.","Issues.","StdErr.","Env.")
    DO i=1 TO StdErr.0; SAY "  sed2 StdErr:" StdErr.i; END

  DO i=1 TO Issues.0
     IF Type = "MAP" THEN Member = WORD(Issues.i,1)||"M"
        ELSE              Member = WORD(Issues.i,1)
     Issues.i=Issues.i "===> '"ReviewPDS"("Member")'"
     ADDRESS "TSO" "PDS '"ReviewPds"' A" Member "ID(>ERROR<) ADDSTATS EXTEND"
  END
RETURN
/*
      Save issues to specified File and add ISPF Stats ...
*/
WRITE_ISSUES:
  SAY ""; SAY "===>" Issues.0 "Issues discovered for this JOB!"
  x = BPXWDYN("ALLOC DD(CHECKRPT) DSN('"RptDsn"') SHR REUSE")
  ADDRESS "MVS" "EXECIO * DISKW CHECKRPT (STEM Issues. FINIS"
  x = BPXWDYN("FREE DD(CHECKRPT)")

  ADDRESS "TSO" "PDS '"RptPds"' A" RptMbr "ADDSTATS EXTEND"
RETURN
