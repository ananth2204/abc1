/*                                   REXX
    Copy this member to your ISPF.PROFILE and update INITIALIZE_REXX
         Function at end, as needed.

    This member will be run immediately after the @SCSTART Startup
         REXX is run. This member would be run instead of the
         automated startup of ISPF, so include that if it is needed.

    Works well in DR situation with Ed Jaffe's TSO SUB=MSTR UserMods
         ftp://phoenixsoftware.com/pub/demo/tsomods.xmi

-- HISTORY --
   2015-10-30 - TSAZFA - v3.75 - Minor Optimization/Re-Factoring
   2015-10-30 - TSAZFA - v3.54 - Minor Cleanup & Re-Factoring
   2015-10-30 - TSAZFA - v3.53 - Tweaks to move things to @SCSTART
   2015-10-12 - TSAZFA - v3.39 - Initial SCDC "Generic" Version
                                     REXX                            */

CALL INITIALIZE_REXX
SELECT
  WHEN ABBREV(MVSVAR("SYSNAME"), "DEV") THEN CALL SETUP_FOR_DEVL
  WHEN ABBREV(MVSVAR("SYSNAME"), "INS") THEN CALL SETUP_FOR_TECH
OTHERWISE;                                   CALL SETUP_FOR_PROD; END

CALL SETUP_FOR_USER
CALL GET_CURRENT_ALLOCATIONS
        /* Setup ISPF DDs                                            */
IF ISPLLIB ¬= "" THEN CALL UPDATE_DD("ISPLLIB" ISPLLIB)
IF ISPMLIB ¬= "" THEN CALL UPDATE_DD("ISPMLIB" ISPMLIB)
IF ISPPLIB ¬= "" THEN CALL UPDATE_DD("ISPPLIB" ISPPLIB)
IF ISPSLIB ¬= "" THEN CALL UPDATE_DD("ISPSLIB" ISPSLIB)
IF ISPTLIB ¬= "" THEN CALL UPDATE_DD("ISPTLIB" ISPTLIB)
IF ISPPROF ¬= "" THEN x=BPXWDYN("ALLOC DD(ISPPROF) DSN("ISPPROF") SHR REUSE")
IF ISPTABL ¬= "" THEN x=BPXWDYN("ALLOC DD(ISPTABL) DSN("ISPTABL") SHR REUSE")
        /* Setup TSO DDs                                             */
IF SYSHELP ¬= "" THEN CALL UPDATE_DD("SYSHELP" SYSHELP)
IF SYSPROC ¬= "" THEN CALL UPDATE_DD("SYSPROC" SYSPROC)
IF SYSEXEC ¬= "" THEN CALL UPDATE_DD("SYSEXEC" SYSEXEC)
        /* PULL any STACKed commands to be pushed later              */
_queue.=""; _queue.0=QUEUED()
IF _queue.0 > 0 THEN DO k=1 TO _queue.0; PULL _queue.k; END
        /* Invoke ISPF, after Exiting from REXX.                     */
PUSH "ISPSTART PANEL(ISR@PRIM) NEWAPPL(ISR) SHRPROF"
        /* Push TSOLIB setup onto Queue                              */
IF (TSOLIB STEPLIB) ¬= "" THEN DO         /* Use TSOLIB for APF LIBs */
   PARSE VALUE (TSOLIB STEPLIB) WITH front "***" middle "***" back
   PUSH "TSOLIB ACT DSN("STRIP(front middle back)")"
END
IF _queue.0 > 0 THEN DO k=1 TO _queue.0 /* Don't Start ISPF Twice! */
   IF ¬(ABBREV(_queue.k, "ISPSTART ")) THEN PUSH _queue.k
END

EXIT
/*---------------------------------------------------------------------*
          Build list of currently Allocated DD Concatinations
 *---------------------------------------------------------------------*/
GET_CURRENT_ALLOCATIONS:
  my_DD=0; concat.=""; dd_lst=""
  my_DDs="ISPLLIB ISPMLIB ISPPLIB ISPSLIB ISPTLIB",
         "SYSHELP SYSPROC SYSEXEC STEPLIB"
  DO j=1 UNTIL list ¬= 0
     x=BPXWDYN("INFO INRELNO("j") INRTDDN(ddn) INRTDSN(dsn) INRTLST(list)")
       IF x ¬= 0 THEN EXIT BPXWDYN_ERR(x "INFO" "DSN: '"dsn"' LIST:" list)
     IF ddn ¬= "" & WORDPOS(ddn, dd_lst)=0 THEN dd_lst=dd_lst ddn
     SELECT
       WHEN ddn="" & ¬(my_DD)                 THEN ITERATE j
       WHEN WORDPOS(ddn, my_DDs) > 0 | ddn="" THEN DO
          IF ddn ¬= "" THEN this_dd=ddn
          my_DD=1; concat.this_dd=concat.this_dd dsn
         END
     OTHERWISE; my_DD=0; END
  END
RETURN
/*---------------------------------------------------------------------*
          Update concatinations for SCDC Development Systems
 *---------------------------------------------------------------------*/
SETUP_FOR_DEVL:
  NOP    /* Nothing currently changed for DEVL System                  */
RETURN
/*---------------------------------------------------------------------*
          Update concatinations for SCDC Techie Install Systems
 *---------------------------------------------------------------------*/
SETUP_FOR_TECH:
  NOP    /* Nothing currently changed for INSTALL Systems              */
RETURN
/*---------------------------------------------------------------------*
          Update concatinations for SCDC Production Systems
 *---------------------------------------------------------------------*/
SETUP_FOR_PROD:
  NOP    /* Nothing currently changed for PROD System                  */
RETURN
/*---------------------------------------------------------------------*
          Update concatinations for User's Personal ISPF DSNs
 *---------------------------------------------------------------------*/
SETUP_FOR_USER:               /* Setup existing personal ISPF DSNs     */
  IF SYSDSN("ISPF.ISPLLIB") = "OK" THEN IF,
     ISPLLIB="" THEN ISPLLIB=USERID()".ISPF.ISPLLIB ***"
                ELSE ISPLLIB=USERID()".ISPF.ISPLLIB" ISPLLIB
  IF SYSDSN("ISPF.ISPMLIB") = "OK" THEN IF,
     ISPMLIB="" THEN ISPMLIB=USERID()".ISPF.ISPMLIB ***"
                ELSE ISPMLIB=USERID()".ISPF.ISPMLIB" ISPMLIB
  IF SYSDSN("ISPF.ISPPLIB") = "OK" THEN IF,
     ISPPLIB="" THEN ISPPLIB=USERID()".ISPF.ISPPLIB ***"
                ELSE ISPPLIB=USERID()".ISPF.ISPPLIB" ISPPLIB
  IF SYSDSN("ISPF.ISPSLIB") = "OK" THEN IF,
     ISPSLIB="" THEN ISPSLIB=USERID()".ISPF.ISPSLIB ***"
                ELSE ISPSLIB=USERID()".ISPF.ISPSLIB" ISPSLIB
  IF SYSDSN("ISPF.ISPTLIB") = "OK" THEN IF,
     ISPTLIB="" THEN ISPTLIB=USERID()".ISPF.PROFILE",
                             USERID()".ISPF.ISPTLIB ***"
                ELSE ISPTLIB=USERID()".ISPF.PROFILE",
                             USERID()".ISPF.ISPTLIB" ISPTLIB
                              /* Setup existing personal TSO DSNs      */
  IF SYSDSN("Z.EXEC") = "OK"       THEN IF,
     SYSEXEC="" THEN SYSEXEC=USERID()".Z.EXEC ***"
                ELSE SYSEXEC=USERID()".Z.EXEC" SYSEXEC
  IF SYSDSN("Z.HELP") = "OK"       THEN IF,
     SYSHELP="" THEN SYSHELP=USERID()".Z.HELP ***"
                ELSE SYSHELP=USERID()".Z.HELP" SYSHELP
  IF SYSDSN("Z.CLIST") = "OK"      THEN IF, /* Move personal CList 1st */
     SYSPROC="" THEN SYSPROC=USERID()".Z.CLIST ***"
                ELSE SYSPROC=USERID()".Z.CLIST" SYSPROC
  IF SYSDSN("Z.LOADLIB") = "OK"    THEN IF,
     TSOLIB=""  THEN TSOLIB="Z.LOADLIB ***"
                ELSE TSOLIB="Z.LOADLIB" TSOLIB
  IF SYSDSN("Z.TSOLIB") = "OK"     THEN IF,
     TSOLIB=""  THEN TSOLIB="Z.TSOLIB ***"
                ELSE TSOLIB="Z.TSOLIB" TSOLIB
RETURN
/*---------------------------------------------------------------------*
                Use BPXWDYN to update DD concatinations
 *---------------------------------------------------------------------*/
UPDATE_DD:
ARG dd_name front "***" back
  DDLIST=dd_name; this_DD=dd_name; DSLIST=front concat.dd_name back
  x=BPXWDYN("ALLOC DD("dd_name") DSN("WORD(DSLIST,1)") SHR REUSE")
    IF x ¬= 0 THEN EXIT BPXWDYN_ERR(x "ALLOC" dd_name WORD(DSLIST,1))
  DO i=2 TO WORDS(DSLIST)
     x=BPXWDYN("ALLOC DD(TMP"i") DSN("WORD(DSLIST,i)") SHR REUSE")
       IF x ¬= 0 THEN EXIT BPXWDYN_ERR(x "ALLOC TMP"i WORD(DSLIST,i))
     DDLIST=DDLIST",TMP"i
  END
  IF WORDS(DSLIST) > 1 THEN DO
     x=BPXWDYN("CONCAT DDLIST("DDLIST")")
       IF x ¬= 0 THEN EXIT BPXWDYN_ERR(x "CONCAT" dd_name DDLIST)
  END
RETURN
/*---------------------------------------------------------------------*
      Display BPXWDYN error information for non-zero Return Codes
 *---------------------------------------------------------------------*/
BPXWDYN_ERR:
PARSE ARG BPXWDYN_rc arg2 arg3
  SAY RIGHT(arg2,7) "of:" arg3
  IF BPXWDYN_rc > 0 THEN DO
     PARSE VALUE RIGHT(D2X(BPXWDYN_rc),8,"0") WITH dyn_EC 5 dyn_RC .
     SAY RIGHT(arg2,7) "RC:" BPXWDYN_rc "("dyn_EC dyn_RC")"
    END
  ELSE DO; dyn_EC=ABS(BPXWDYN_rc); SAY RIGHT(arg2,7) "RC:" BPXWDYN_rc; END
  IF SYMBOL("S99MSG.0")="VAR" THEN DO i=1 TO S99MSG.0;SAY "  "S99MSG.i;END
RETURN dyn_EC
/*---------------------------------------------------------------------*
    Personal setup of initial TSO/ISPF/STEPLIB/TSOLIB Concatinations
             -- This can include Group or CBT libraries --
    NOTE: STEPLIB & TSOLIB need to be enclosed in Single Quotes.
 *---------------------------------------------------------------------*/
INITIALIZE_REXX:
          /* Standard TSO DDs                                          */
  STEPLIB=""                               /* Use STEPLIB for APF LIBs */
  SYSEXEC=""
  SYSHELP=""
  SYSPROC=""
  TSOLIB =""                               /* Use TSOLIB for APF LIBs  */
          /* ISPF Personal Table allocations                           */
  ISPPROF=""
  ISPTABL=ISPPROF
          /* Standard ISPF DDs                                         */
  ISPLLIB=""                                /* Use as a nonAPF TASKLIB */
  ISPMLIB=""
  ISPPLIB=""
  ISPSLIB=""
  ISPTLIB=""
RETURN
