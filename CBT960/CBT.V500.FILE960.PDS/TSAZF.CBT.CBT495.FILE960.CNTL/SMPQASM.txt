//SMPQASM  JOB SYS,'Assemble SMPQASM',NOTIFY=&SYSUID,
//         CLASS=I,MSGCLASS=6,REGION=256M
//*==============  &&SYSUID..CBT.FILE960.CNTL(SMPQASM)   =============*
//*                                                                   *
//*===================================================================*
//ASM      EXEC PGM=ASMA90,PARM='NODECK,OBJECT'
//*
//SYSIN    DD DATA,DLM=@@
         TITLE 'GIMAPI INTERFACE ROUTINE'
*---------------------------------------------------------------------*
* NAME            : SMPQASM                                           *
* LANGUAGE        : HLASM                                             *
* SYSTEM          : OS/390 V2.10                                      *
* AUTHOR          : Ayhan YALKUT                                      *
* REMARKS         : This program will query and print the contents of *
*                   the SMP/E CSI using the GIMAPI interface .        *
* INVOCATION      : From a SMPQREXX REXX .                            *
*---------------------------------------------------------------------*
SMPQASM  CSECT
*--------------------------------------------------------------------*
* REGISTER DECLARES                                                  *
*--------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*--------------------------------------------------------------------*
* STANDART ENTRY LINKAGE                                             *
*--------------------------------------------------------------------*
         STM   14,12,12(13)                  Save Caller GPRS
         LR    12,15                         Program Base Register
         USING SMPQASM,12                    Inform The Assembler
         ST    13,SAVE+4                     Save Backward  Addr
         LA    14,SAVE                       New  Save Area Addr
         ST    14,8(13)                      Save Forward   Addr
         LR    13,14                         New Save Area Addr
         ST    1,PARMADDR                    Save Input Parmeters Addr
*--------------------------------------------------------------------*
* OPEN SYSPRINT DD                                                   *
*--------------------------------------------------------------------*
         OPEN  (SYSPRINT,OUTPUT)             Open SYSPRINT DD
*--------------------------------------------------------------------*
* PRINT HEADER1                                                      *
*--------------------------------------------------------------------*
         PUT   SYSPRINT,HEADER1              Print HEADER1
*--------------------------------------------------------------------*
* LOAD THE API                                                       *
*--------------------------------------------------------------------*
         LA    2,APIPGM                      APIPGM Addr
         LOAD  EPLOC=(2),LOADPT=PGMADR       Load GIMAPI to memory
*--------------------------------------------------------------------*
* DO THE VERSION QUERY                                               *
*--------------------------------------------------------------------*
         L     15,PGMADR                     GIMAPI Load Point
         CALL  (15),(QUERYVER,0,CMDOUT,APILANG,RC,CC,MSG$)
*--------------------------------------------------------------------*
* SEE WHAT WAS RETURNED                                              *
*--------------------------------------------------------------------*
         L     3,RC                          Return code of GIMAPI
         LTR   3,3                           Is Return Code good?
         BNZ   ERRORPRT                      No, go to ERRORPRT
*--------------------------------------------------------------------*
* ESTABLISH ADDRESSABILITY OF RETURNED INFORMATION                   *
*--------------------------------------------------------------------*
         L     3,CMDOUT                      Output Addr of The QUERY
         USING API_VERSION,3                 Inform The Assembler
*--------------------------------------------------------------------*
* GET LOCAL SYSTEM DATE AND TIME                                     *
*--------------------------------------------------------------------*
         TIME  DEC,TIMEDATE,ZONE=LT,DATETYPE=DDMMYYYY,LINKAGE=SYSTEM
*--------------------------------------------------------------------*
* PRINT HEADER2                                                      *
*--------------------------------------------------------------------*
         MVC   AVER(2),APIVER                Move API Version to AVER
         MVC   AREL(2),APIREL                Move API Release to AREL
         MVC   AMOD(2),APIMOD                Move API Mod.    to AMOD
         MVC   APTF(2),APIPTF                Move API PTF     to APTF
         MVC   OUTTOD,MASK                   Set up OUTTOD for ED
         ED    OUTTOD,TIMEDATE               Edit OUTTOD
         MVC   LDATE(2),OUTTOD+17            Move Local Day  to LDATE
         MVC   LDATE+3(2),OUTTOD+19          Move Local Mon  to LDATE
         MVC   LDATE+6(4),OUTTOD+21          Move Local Year to LDATE
         MVC   LTIME(2),OUTTOD+1             Move Local Hour to LTIME
         MVC   LTIME+3(2),OUTTOD+3           Move Local Min  to LTIME
         MVC   LTIME+6(2),OUTTOD+5           Move Local Sec  to LTIME
         PUT   SYSPRINT,HEADER2              Print HEADER2
         PUT   SYSPRINT,BLANK                Print BLANK
         PUT   SYSPRINT,HEADER3              Print HEADER3
         DROP  R3                            Inform The Assembler
*--------------------------------------------------------------------*
* FREE THE STORAGE OBTAINED DURING THE VERSION QUERY                 *
*--------------------------------------------------------------------*
         L     15,PGMADR                     GIMAPI Load Point
         CALL  (15),(FREECMD,0,CMDOUT,APILANG,RC,CC,MSG$)
*--------------------------------------------------------------------*
* ESATBLISH ADDRESSABILITY OF INPUT PARAMETERS FOR QUERY              *
*--------------------------------------------------------------------*
         L     1,PARMADDR                    REXX Input Parmeters Addr
         USING EFPL,1                        Inform The Assembler
         L     2,EFPLARG                     ARGUMENT TABLE Addr
         USING ARGTABLE_ENTRY,2              Inform The Assembler
         L     10,EFPLEVAL                   EFPLEVAL Addr
         L     10,0(,10)                     EVALBLOCK Addr
         USING EVALBLOCK,10                  Inform The Assembler
*--------------------------------------------------------------------*
* SET UP AND PRINT QUERY PARAMETERS                                  *
*--------------------------------------------------------------------*
         USING PARMDATA,11                   Inform The Assembler
         XC    QUERY_PARMS,QUERY_PARMS       Clear QUERY_PARMS
         L     11,ARGTABLE_ARGSTRING_PTR     CSI NAME Pointer
         ST    11,PCSI                       Save CSI NAME Pointer
         L     4,ARGTABLE_ARGSTRING_LENGTH   CSI NAME Length
         ST    4,CSILEN                      Save CSI NAME Length
         MVC   OUTREC(132),BLANK             Move BLANK to OUTREC
         MVC   OUTREC(18),=C'CSI NAME        : '
         BCTR  4,0                           Decrease Length by 1
         EX    4,$MOVPARM                    Move CSI NAME to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         LA    2,ARGTABLE_NEXT-ARGTABLE_ENTRY(R2)
*                                            Get next Input Parameter
         L     11,ARGTABLE_ARGSTRING_PTR     ZONE NAME Pointer
         ST    11,PZONE                      Save ZONE NAME Pointer
         L     4,ARGTABLE_ARGSTRING_LENGTH   ZONE NAME Length
         ST    4,ZONELEN                     Save ZONE NAME Length
         MVC   OUTREC(132),BLANK             Move BLANK to OUTREC
         MVC   OUTREC(18),=C'ZONE NAME       : '
         BCTR  4,0                           Decrease Length by 1
         EX    4,$MOVPARM                    Move ZONE NAME to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         LA    2,ARGTABLE_NEXT-ARGTABLE_ENTRY(R2)
*                                            Get next Input Parameter
         L     11,ARGTABLE_ARGSTRING_PTR     ENTRY NAME Pointer
         ST    11,PENTRY                     Save ENTRY NAME Ptr
         L     4,ARGTABLE_ARGSTRING_LENGTH   ENTRY NAME Length
         ST    4,ENTRYLEN                    Save ENTRY NAME Length
         MVC   OUTREC(132),BLANK             Move BLANK to OUTREC
         MVC   OUTREC(18),=C'ENTRY NAME      : '
         BCTR  4,0                           Decrease Length by 1
         EX    4,$MOVPARM                    Move ENAME to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         LA    2,ARGTABLE_NEXT-ARGTABLE_ENTRY(R2)
*                                            Get next Input Parameter
         L     11,ARGTABLE_ARGSTRING_PTR     SUBENTRY NAME Pointer
         ST    11,PSUBENTRY                  Save SUBENTRY NAME Pointer
         L     4,ARGTABLE_ARGSTRING_LENGTH   SUBENTRY NAME Length
         ST    4,SUBENTRYLEN                 Save SUBENTRY NAME Length
         MVC   OUTREC(132),BLANK             Move BLANK to OUTREC
         MVC   OUTREC(18),=C'SUBENTRY NAME   : '
         BCTR  4,0                           Decrease Length by 1
         EX    4,$MOVPARM                    Move SUBENTRY to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         LA    2,ARGTABLE_NEXT-ARGTABLE_ENTRY(R2)
*                                            Get next Input Parameter
         L     11,ARGTABLE_ARGSTRING_PTR     FILTER Pointer
         ST    11,PFILTER                    Save FILTER Pointer
         L     4,ARGTABLE_ARGSTRING_LENGTH   FILTER Length
         ST    4,FILTERLEN                   Save FILTER Length
         MVC   OUTREC(132),BLANK             Move BLANK to OUTREC
         MVC   OUTREC(18),=C'FILTER          : '
         CL    4,=F'0'                       FILTER Length = 0 ?
         BE    PRNTF                         Yes, go to PRNTF
         BCTR  4,0                           Decrease Length by 1
         EX    4,$MOVPARM                    Move FILTER to OUTREC
PRNTF    PUT   SYSPRINT,OUTREC               Print OUTREC
*--------------------------------------------------------------------*
* DO THE QUERY                                                       *
*--------------------------------------------------------------------*
         L     15,PGMADR                     GIMAPI Load Point
         CALL  (15),(QUERYCMD,QUERY_PARMS$,CMDOUT,APILANG,RC,CC,MSG$)
*--------------------------------------------------------------------*
* SEE WHAT WAS RETURNED                                              *
*--------------------------------------------------------------------*
         L     3,RC                          Return Code of f GIMAPI
         LTR   3,3                           Is the Return Code good?
         BNZ   ERRORPRT                      No, go to ERRORPRT
*
*--------------------------------------------------------------------*
* ESTABLISH ADDRESSABILITY OF RETURNED INFORMATION                   *
*--------------------------------------------------------------------*
         L     3,CMDOUT                      Output Addr of The QUERY
         USING ENTRY_LIST,3                  Inform The Assembler
         L     4,ENTRIES                     ENTRIES Addr
         USING CSIENTRY,4                    Inform The Assembler
         L     5,SUBENTRIES                  SUBENTRIES Addr
         USING SUBENTRY,5                    Inform The Assembler
         L     6,SUBENTDATA                  SUBENTDATA Addr
         USING ITEM_LIST,6                   Inform The Assembler
         L     7,DATA                        DATA Addr
         USING RETDATA,7                     Inform The Assembler
         USING VER,8                         Inform The Assembler
*--------------------------------------------------------------------*
* PRINT ENTRIES                                                      *
*--------------------------------------------------------------------*
PRTENT   LTR   4,4                           Last Entry ?
         BZ    NEXTENTR                      Yes, go to NEXTENTR
         MVI   OUTREC,C'-'
         MVC   OUTREC+1(132),OUTREC          Move '-' to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         MVC   OUTREC(132),BLANK             Clear OUTREC
         MVC   OUTREC(12),TYPE               Move ENTRY TYPE to OUTREC
         MVC   OUTREC+13(4),=C'-->'          Move '-->' to OUTREC
         MVC   OUTREC+18(8),ENTRYNAME        Move ENTRY NAME to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         MVC   OUTREC(132),BLANK             Clear OUTREC
         MVC   OUTREC(17),=C'ZONE NAME    -->'
         MVC   OUTREC+18(7),ZONENAME         Move ZONENAME to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         XR    8,8                           Clear R8
         L     5,SUBENTRIES                  SUBENTRIES Addr
         B     PRTSUB                        Branch PRTSUB
MOREENT  LTR   8,8                           More ENTRY after VER?
         BNZ   NEXTVER                       Yes, go to NEXTVER
         L     4,CSINEXT                     Next ENTRY Addr
         B     PRTENT                        Branch PRTENT
NEXTENTR L     3,NEXT                        NEXT ENTRY Addr
         LTR   3,3                           Last ENTRY in the LIST ?
         BZ    CLOSEOUT                      Yes, go to CLOSEOUT
         L     4,ENTRIES                     New ENTRIES Addr
         B     PRTENT                        Branch PRTENT
*--------------------------------------------------------------------*
* GET NEXT SUBTYPE AFTER VER                                         *
*--------------------------------------------------------------------*
NEXTVER  L     5,VERNEXT                     Next SUBENTRIES Addr
         XR    8,8                           Clear R8
*--------------------------------------------------------------------*
* PRINT SUBENTRIES                                                   *
*--------------------------------------------------------------------*
PRTSUB   LTR   5,5                           Last SUBENTRIES ?
         BZ    MOREENT                       Yes, go to MOREENT
         CLC   SUBTYPE(12),=C'VER         '  SUBTYPE = VER ?
         BE    PRTVSUB                       Yes, go to PRTVSUB
         MVC   OUTREC(132),BLANK             Clear OUTREC
         MVC   OUTREC+3(11),SUBTYPE          Move SUBTYPE to OUTREC
         MVC   OUTREC+16(1),=C':'            Move ':' to OUTREC
         L     6,SUBENTDATA                  SUBENTDATA Addr
         L     7,DATA                        DATA Addr
         B     PRTDATA                       Branch PRTDATA
MORESUB  L     5,SUBNEXT                     Next SUBENTRIES Addr
         B     PRTSUB                        Branch PRTSUB
*--------------------------------------------------------------------*
* PRINT VER SUBENTRIES                                               *
*--------------------------------------------------------------------*
PRTVSUB  LR    8,5                           Next SUBENTRIES Addr after
*                                                                 VER
         L     5,4(5)
         L     5,4(5)
         B     PRTSUB                        Branch PRTSUB
*--------------------------------------------------------------------*
* PRINT DATA                                                         *
*--------------------------------------------------------------------*
PRTDATA  LTR   7,7                           Last DATA ?
         BZ    MORESUB                       Yes, go to MORESUB
         L     9,DATALEN                     DATALEN
         C     9,=F'0'                       DATALEN = 0 ?
         BE    PUTREC                        Yes, go to PUTREC
         BCTR  9,0                           Decrease DATALEN By 1
         EX    9,$MOVDATA                    Move RETDATA to OUTREC
PUTREC   PUT   SYSPRINT,OUTREC               Print OUTREC
         MVC   OUTREC(132),BLANK             Clear OUTREC
NEXTITEM L     6,ITMNEXT                     ITMNEXT Addr
         LTR   6,6                           Last ITMNEXT ?
         BZ    MORESUB                       Yes, go to MORESUB
         L     7,DATA                        Load DATA
         B     PRTDATA                       Branch PRTDATA
*
*--------------------------------------------------------------------*
* PRINT ERROR MESSAGES                                               *
*--------------------------------------------------------------------*
ERRORPRT L     6,MSG$                        Error Message Addr
         L     7,DATA                        DATA
         L     9,DATALEN                     DATALEN
CHKMSGLN C     9,OUTRECLN                    DATALEN > OUTRECLN ?
         BNH   SETMSGLN                      No, go to SETMSGLN
         L     9,OUTRECLN                    OUTRECLN
SETMSGLN BCTR  9,0                           Decrease DATALEN By 1
         MVC   OUTREC(132),BLANK             Clear OUTREC
         EX    9,$MOVDATA                    Move Messages to OUTREC
         PUT   SYSPRINT,OUTREC               Print OUTREC
         L     9,DATALEN                     DATALEN
         C     9,OUTRECLN                    DATALEN > OUTRECLN ?
         BNH   CLOSEOUT                      No, go to CLOSEOUT
         S     9,OUTRECLN                    Subtract DATALEN-OUTRECLN
         ST    9,DATALEN                     Save new DATALEN
         A     4,OUTRECLN                    Add
         B     CHKMSGLN                      Branch CHKMSGLN
*--------------------------------------------------------------------*
* CLOSE SYSPRINT DD                                                  *
*--------------------------------------------------------------------*
CLOSEOUT CLOSE   SYSPRINT                    Close SYSPRINT DD
*--------------------------------------------------------------------*
* FREE THE STORAGE OBTAINED DURING THE QUERY                         *
*--------------------------------------------------------------------*
CLEANUP  L     15,PGMADR                     PGMADR Addr
         CALL  (15),(FREECMD,0,CMDOUT,APILANG,RC,CC,MSG$)
*--------------------------------------------------------------------*
* DELETE GIMAPI                                                      *
*--------------------------------------------------------------------*
         DELETE  EPLOC=APIPGM                Delete GIMAPI from memory
*--------------------------------------------------------------------*
* SET EVALBLOCK TO RETURN INFORMATION                                *
*--------------------------------------------------------------------*
         MVC   EVALBLOCK_EVLEN(4),=F'1'      Set EVALBLOCK for Return
         MVC   EVALBLOCK_EVDATA(4),=C'0'     Set EVALBLOCK for Return
*--------------------------------------------------------------------*
* EXIT                                                               *
*--------------------------------------------------------------------*
*XIT     XR     15,15                        Clear R15 for Return Code
EXIT     L      15,RC                        Clear R15 for Return Code
         L      13,4(,13)                    Load Save Area Address
         L      14,12(,13)                   Load Return Address
         LM     00,12,20(13)                 Load Register
         BR     14                           Return to Operating System
$MOVDATA MVC    OUTREC+18(0),RETDATA
$MOVPARM MVC    OUTREC+18(0),PARMDATA
SYSPRINT DCB    DDNAME=SYSPRINT,DSORG=PS,MACRF=PM
APIPGM   DC     CL8'GIMAPI  '                API Name
QUERYCMD DC     CL8'QUERY   '                API Query Command
QUERYVER DC     CL8'VERSION '                API Version Command
FREECMD  DC     CL8'FREE    '                API Free Command
APILANG  DC     CL3'ENU'                     API Language
         DS     0F
QUERY_PARMS$ DC AL4(QUERY_PARMS)             Parameter Area Address
PGMADR   DC     AL4(0)                       GIMAPI Entry Point Addr
CMDOUT   DC     AL4(0)                       API Output Address
MSG$     DC     AL4(0)                       API Error Address
RC       DS     F'0'                         API Return Code
CC       DS     F'0'                         API Completion Code
HEADER1  DS     0CL132
         DC     51CL1' '
         DC     CL29'GIMAPI INTERFACE QUERY REPORT'
         DC     52CL1' '
HEADER2  DS     0CL132
         DC     CL15'GIMAPI VERSION '
AVER     DS     CL2                          GIMAPI Version
         DC     CL1'.'
AREL     DS     CL2                          GIMAPI Release
         DC     CL1'.'
AMOD     DS     CL2                          GIMAPI Modification
         DC     CL5' PTF '
APTF     DS     CL2                          GIMAPI PTF
         DC     CL51' '
         DC     CL14'REPORT DATE : '
LDATE    DC     CL10'  .  .    '             Local Date
         DC     CL18'    REPORT TIME : '
LTIME    DC     CL9'  :  :   '               Local Time
HEADER3  DS     0CL132
         DC     CL19'QUERY PARAMETERS...'
         DC     CL113' '
SAVE     DS     18F'0'                       Save Area
PARMADDR DS     F                            Input Parameter Address
TIMEDATE DS     PL16                         Local Time & Date
OUTTOD   DS     CL32                         Local Time & Date in CHAR
OUTREC   DS     CL132                        Output Record
OUTRECLN DC     F'120'                       Output Record Length
BLANK    DC     CL132' '
MASK     DC     X'40202020202020202020202020202020202020202020202020202X
                  02020202020'
         GIMMASM                             SMP/E API Macro
         IRXEFPL                             External Func Parm List
         IRXARGTB                            REXX Argument Table Block
         IRXEVALB                            REXX Evaluation Block
RETDATA  DSECT  CL0                          Return Data
PARMDATA DSECT  CL0                          Parameter Data
         END   SMPQASM
@@
//SYSLIB   DD DISP=SHR,DSN=SYS1.MODGEN
//         DD DISP=SHR,DSN=SYS1.MACLIB
//SYSLIN   DD DISP=(MOD,PASS),UNIT=VIO,SPACE=(CYL,(2,3))
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(2,2))
//SYSUT2   DD UNIT=VIO,SPACE=(CYL,(2,2))
//SYSUT3   DD UNIT=VIO,SPACE=(CYL,(2,2))
//*
//LINK     EXEC PGM=IEWL,COND=(4,LT),
//         PARM='LET,LIST,RENT,REUS,RES'
//*
//SYSLMOD  DD DISP=SHR,DSN=&SYSUID..CBT.FILE960.ISPLLIB
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DISP=(OLD,DELETE),DSN=*.ASM.SYSLIN
//         DD DATA,DLM=@@
 ENTRY SMPQASM
  NAME SMPQASM(R)
@@
//
