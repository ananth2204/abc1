{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013639000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE976.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE976.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x0c'", "DS1TRBAL": "b'F\\xa8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\n3\\x00\\n\\n3\\x00\\r\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x00@\\x01\\x182\\x0f\\x01\\x182\\x0f\\x14U\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2018-11-16T00:00:00", "modifydate": "2018-11-16T14:55:40", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-497"}, "text": "REGULAR CBT TAPE - VERSION 497    FILE:  976\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT497.FILE976\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 9 MEMBERS COUNTED; CUMULATIVE SIZE IS 919 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/16/18    14:55:40    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00F\\x01\\x18\\x17\\x0f\\x01\\x18\\x17/\\x00\\x01\\x00\\x1a\\x00\\x18\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-06-19T00:00:00", "modifydate": "2018-06-21T00:01:46", "lines": 26, "newlines": 24, "modlines": 0, "user": "SBGOLOB"}, "text": "Sent to Sam Golob, via Dave Alcock.\n\nHi Dave,\n\nI recall your site.  I was looking for a command processor to\nprocess an individual SYNC request to SYS1.BRODCAST using the\nRACF IKJIFRIF utility.  I could not find one so I wrote my own.\nWe have a central non-mainframe developed system that processes\nuserid add/delete requests, but this system was invoking the SYNC\ncommand every time a request to add or delete a userid was\nrequested.   This was inefficient as the complete RACF database\nwas SYNCed with SYS1.BRODCAST and any pending messages were\ndeleted as well.  I attached the code, usermod, and JCL for\nwhatever you want to do with it.\n\nLarry Zuckett\nz/OS Operations Support\nFord Motor Company\nITHQ B, Cube 4R05\n1303 Fairlane Circle\nAllen Park, MI. 48101\nOFFICE: 313 337-9941\nmailto:lzuckett@ford.com\n\nA few small fixes made.  (SBG and UPDATER)\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE02": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\"\\x01\\x18\\x17\\x0f\\x01\\x18\\x17_\\x10\\x18\\x00\\x10\\x00\\x0f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-06-19T00:00:00", "modifydate": "2018-06-24T10:18:22", "lines": 16, "newlines": 15, "modlines": 0, "user": "SBGOLOB"}, "text": "Notes about USYNC usage.\n\n1.   USYNC has to be linkedited with SETCODE AC(1), and it\n     needs to be placed in an APF-authorized load library.\n\n2.   Since USYNC needs to be authorized as a TSO command, it\n     must also be placed in the IKJEFTE2 table, which is done\n     (one way) by adding it to the AUTHCMD list in PARMLIB\n     member IKJTSOxx, and doing a PARMLIB UPDATE(xx) or an\n     IPL.\n\n     Then, it will work.\n\n\n SG - June 2018\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE976": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04a\\x002\\x01\\x182\\x0f\\x01\\x182\\x0f\\x14U\\x00\\x12\\x00\\x12\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf7@@@'", "ispf": {"version": "04.97", "flags": 0, "createdate": "2018-11-16T00:00:00", "modifydate": "2018-11-16T14:55:32", "lines": 18, "newlines": 18, "modlines": 0, "user": "CBT-497"}, "text": "//***FILE 976 from Larry Zuckett and contains his USYNC command     *   FILE 976\n//*           to seamlessly add a userid entry to the Broadcast     *   FILE 976\n//*           Dataset (usually SYS1.BRODCAST), or to delete one.    *   FILE 976\n//*                                                                 *   FILE 976\n//*           Included, is an SMP/E install of the USYNC command,   *   FILE 976\n//*           as well.                                              *   FILE 976\n//*                                                                 *   FILE 976\n//*           HELP member USYNC# added.  Copy to HELP dataset       *   FILE 976\n//*           and rename as USYNC.                                  *   FILE 976\n//*                                                                 *   FILE 976\n//*       email:  lzuckett@hotmail.com                              *   FILE 976\n//*                                                                 *   FILE 976\n//*       Please see CBT File 185 and 797 for other ways of         *   FILE 976\n//*       authorizing TSO commands.                                 *   FILE 976\n//*                                                                 *   FILE 976\n//*       For more tools concerning manipulating the Broadcast      *   FILE 976\n//*       Dataset, please see CBT File 247.                         *   FILE 976\n//*                                                                 *   FILE 976\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "USERMOD": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x18\\x17\\x0f\\x01\\x18\\x17\\x0f\\x11I\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xd4\\xd7\\xc5@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-06-19T00:00:00", "modifydate": "2018-06-19T11:49:29", "lines": 30, "newlines": 30, "modlines": 0, "user": "SMPE"}, "text": "++ USERMOD(SDTSO10) /* REWORK(20170515) */ /*\n        USERMOD:  SDTSO10\n        FUNCTION: Copy the installation developed USYNC command into SYS1.CMDLIB\n                  as USERMOD.\n        NOTES:    JCLIN\n        DOC:      TSO/E Programming Services\n                  SA32-0973-00\n                                     */.\n++VER(Z038) FMID(HTE7790) .\n++HOLD(SDTSO10) SYSTEM REASON(DOC) FMID(HTE7790) DATE(17135) COMMENT(\n       This USERMOD creates a mod and lmod entry for installation\n       developed USYNC command which will add or delete an entry in\n       SYS1.BRODCAST.  The usermod will result in the USYNC load\n       module being copied into SYS1.CMDLIB.\n       SYS1.BRODCAST.  The command is called from enterprise userid\n       management system in batch\n       to process ADD and DELETE requests for RACF USERIDS.      . ) .\n++MOD (USYNC) LKLIB(USERLOAD) DISTLIB(ACMDLIB) LMOD(USYNC).\n++JCLIN.\n//LINK  EXEC  PGM=IEWL,PARM='LIST,RENT,REUS,XREF,AC=1'\n//SYSUT1   DD  SPACE=(CYL,(1,1)),UNIT=SYSDA\n//ACMDLIB  DD  DISP=SHR,DSN=SYS1.ACMDLIB,UNIT=3390,VOL=SER=SE21M1\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.CMDLIB,UNIT=3390,VOL=SER=SE21M1\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSLIN    DD  *\n  ENTRY USYNC\n  NAME  USYNC\n/*\n\u001a\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "USYNC": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00I\\x01\\x182\\x0f\\x01\\x182\\x0f\\x14R\\x02\\xd0\\x02\\xd0\\x00\\x00\\xe9\\xe4\\xc3\\xd2\\xc5\\xe3\\xe3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2018-11-16T00:00:00", "modifydate": "2018-11-16T14:52:49", "lines": 720, "newlines": 720, "modlines": 0, "user": "ZUCKETT"}, "text": "USYNC    TITLE 'SYNCH USER IN SYS1.BRODCAST COMMAND PROCESSOR'\n***********************************************************************\n*                                                                     *\n* TITLE - USYNC                                                       *\n*                                                                     *\n* AUTHOR      - LARRY ZUCKETT                                         *\n*                                                                     *\n* DATE        - MAY 2017                                              *\n*                                                                     *\n* DESCRIPTION - PROCESS SYNCH REQUESTS FOR SYS1.BRODCAST              *\n*                                                                     *\n* FUNCTION -  THIS COMMAND PROCESSOR WILL CALL THE PARSE SERVICE      *\n*             ROUTINE TO SYNTAX CHECK THE USYNC COMMAND OPERANDS      *\n*             AND IF VALID ADD OR DELETE USER IN SYS1.BRODCAST.       *\n*                                                                     *\n*             COMMAND SYNTAX:                                         *\n*                                                                     *\n*             USYNC   USERID  ADD  |  DEL                             *\n*                                                                     *\n* OPERATION - PROCESS IS A REENTRANT COMMAND PROCESSOR THAT PERFORMS  *\n*             THE FOLLOWING PROCESSING:                               *\n*                                                                     *\n*    1 - ESTABLISHES ADDRESSABILITY AND SAVES THE CALLER'S REGISTERS  *\n*    2 - ISSUES A GETMAIN FOR DYNAMIC STORAGE                         *\n*    3 - USES THE PARSE SERVICE ROUTINE (IKJPARS) TO DETERMINE THE    *\n*        VALIDITY OF THE COMMAND OPERANDS                             *\n*    4 - PROVIDES A VALIDITY CHECKING ROUTINE TO PERFORM ADDITIONAL   *\n*        CHECKING OF THE POSITIONAL OPERAND. THIS ROUTINE ONLY        *\n*        CHECKS THAT THE LENGTH OF THE USERID IS \"7\" OR LESS.         *\n*    5 - IF AND ADD REQUEST, CALL RACF ICHEINTY SERVICE TO            *\n*        DETERMINE IF USERID EXISTS IN RACF                           *\n*    6 - CALL THE IKJIFRIF SERVICE TO ADD OR DELETE A USER            *\n*        TO SYS1.BRODCAST.                                            *\n*    7 - ISSUES A FREEMAIN TO RELEASE THE DYNAMIC STORAGE             *\n*    8 - RESTORES THE CALLER'S REGISTERS BEFORE RETURNING             *\n*    9 - RETURNS TO THE TMP WITH A RETURN CODE IN REGISTER 15         *\n*                                                                     *\n***********************************************************************\n*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *\n*         REGISTERS 0,1     = WORK REGISTERS                          *\n*         REGISTERS 2       = ADDRESS OF PPL (PARSE PARAMETER LIST)   *\n*         REGISTER  3       = ADDRESS OF CPPL                         *\n*         REGISTER  4       = ADDRESS OF SYNTACT CORRECT PDE          *\n*         REGISTER  5       = ADDRESS OF ACTION PCE (ADD,DEL)         *\n*         REGISTER  6       = ADDRESS OF PPL ANSWER AREA              *\n*         REGISTERS 7,8     = WORK REGISTERS                          *\n*         REGISTER  9       = ADDRESS OF POSITCHK VALIDATION ROUTINE  *\n*         REGISTER  10      = ADDRESS OF ROUTINE WORK AREA            *\n*         REGISTER  11      = BASE REGISTER OF THIS ROUTINE           *\n*         REGISTER  12      = NOT USED                                *\n*         REGISTER  13      = SAVEAREA                                *\n*         REGISTERS 14,15   = WORK REGISTERS                          *\n*                                                                     *\n*                                                                     *\n*            MODULE TYPE = TSO COMMAND                                *\n*                                                                     *\n*                PROCESSOR = ASM                                      *\n*                                                                     *\n*            PARMLIB REQUIREMENTS: THIS PROGRAM RUNS AUTHORIZED AND   *\n*                                  REQUIRES ENTRY IN IKJTSOxx         *\n*            AUTHCMD NAMES(USYNC)                                     *\n*                                                                     *\n*                                                                     *\n*                ATTRIBUTES = AC=1, REENTRANT, REUSABLE               *\n*                   SUPERVISOR STATE, ENABLED, NO LOCKS HELD          *\n*                                                                     *\n*             ENTRY POINTS = USYNC    (ONLY ENTRY POINT)              *\n*                                                                     *\n*                LINKAGE =                                            *\n*                                                                     *\n*                                                                     *\n*             INPUT = REG1 POINTS TO THE CPPL                         *\n*                     SUPPLIED FROM THE TSO TERMINAL MONITOR PROGRAM  *\n*                 1.  PTR TO COMMON PROCESSOR PARAMETER LIST (CPPL)   *\n*                                                                     *\n*             OUTPUT = NONE                                           *\n*                                                                     *\n*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *\n*                                                                     *\n*                OUTPUT = NONE                                        *\n*                                                                     *\n*                RETURN CODE = ZERO                                   *\n*                                                                     *\n*                                                                     *\n*             EXIT - ERROR = RETURN CODE FROM IKJIFRIF SERVICE        *\n*                            PASSED TO THIS ROUTINE                   *\n*                OUTPUT = NONE                                        *\n*                                                                     *\n*                RETURN CODE =                                        *\n*                REFER TO z/OS TSO/E Customization SA32-0976-00       *\n*                                                                     *\n*                                                                     *\n*             EXTERNAL REFERENCES =                                   *\n*                                                                     *\n*                ROUTINES = NONE                                      *\n*                                                                     *\n*                DATA AREAS = NONE                                    *\n*                                                                     *\n*                CONTROL BLOCKS = CPPL                                *\n*                                 CVT                                 *\n*                                 PPL  PARSE PARAMETER LIST           *\n*                                 TSVT                                *\n*                                 PCE  PARAMETER CONTROL ENTRY        *\n*                                 PCL  PARAMETER CONTROL LIST         *\n*                                 PDE  PARAMETER DESCRIPTOR ENTRY     *\n*                                 PDL  PARAMETER DESCRIPTOR LIST      *\n*                                                                     *\n*             TABLES = NONE                                           *\n*                                                                     *\n*             MACROS = WTO, GETMAIN, FREEMAIN, CALLTSSR, PUTLINE      *\n*                      IKJPARM, IKJPOSIT, IKJKEYWD, IKJNAME, IKJENDP  *\n*                      IKJPPL, IKJCPPL, CVT, IKJTSVT                  *\n*                                                                     *\n*             CHANGE ACTIVITY =                                       *\n*                20JUN18 - MOVE USERID PROPERLY                  .FIX.*\n*                22JUN18 - REMOVED POSITCHK - REDUNDANT          .FIX.*\n*                25JUN18 - REMOVE L BEFORE IKJRLSA               .FIX.*\n*                16NOV18 - ADD MSG FOR ADD/DEL MISSING                *\n*                                                                     *\n*             MESSAGES =                                              *\n*                USYNC COMMAND SUCCESSFUL OR UNSUCCESSFUL.            *\n*                                                                     *\n*             ABEND CODES = NONE                                      *\n*                                                                     *\n*\nUSYNC    CSECT ,\nUSYNC    AMODE 31                    COMMAND'S ADDRESSING MODE\nUSYNC    RMODE ANY                   COMMAND'S RESIDENCY  MODE\n         USING *,R15  -----------TEMP ADDRESSABILITY-----------\n         B     SAVEREGS\n         DC    CL8'USYNC  '          PROG ID\n         DC    CL8'&SYSDATE'         ASSEMBLY DATE.\n         DC    CL8'&SYSTIME'         ASSEMBLY TIME.\n         DC    CL8'USERMOD:'         USERMOD\n         DC    CL8'SDTSO10 '         ID\n         DC    CL8'LZUCKETT'         PROGRAMMER\n*\nSAVEREGS EQU   *\n         STM   R14,R12,12(R13)       SAVE CALLER'S REGISTERS\n         LR    R11,R15               ESTABLISH ADDRESSABILITY WITHIN\n         DROP  R15\n         USING USYNC,R11             THIS CSECT\n         LR    R2,R1                 SAVE THE POINTER TO THE CPPL\n*                                    AROUND THE GETMAIN\n         GETMAIN RU,LV=L_SAVE_AREA   OBTAIN A DYNAMIC WORK AREA\n         USING SAVE_AREA,R1          AND ESTABLISH ADDRESSABILITY\n         ST    R1,8(,R13)            PUT THE ADDRESS OF PROCESS'S SAVE\n*                                    AREA INTO THE CALLER'S SAVE AREA\n         ST    R13,4(,R1)            PUT THE ADDRESS OF PROCESS'S SAVE\n*                                    AREA INTO ITS OWN SAVE AREA\n         LR    R13,R1                LOAD GETMAINED AREA ADDRESS\n         DROP  R1                    DON'T USE R1 ANY MORE\n         USING SAVE_AREA,R13         POINT TO THE DYNAMIC AREA\n         GETMAIN RU,LV=L_WORK_AREA   OBTAIN A DYNAMIC WORK AREA\n         USING WORKA,R1              AND ESTABLISH ADDRESSABILITY TO\n*                                    THE DYNAMIC WORK AREA\n         STM   R0,R1,WORK_AREA_GM_LENGTH  SAVE LENGTH AND ADDR OF\n*                                    DYNAMIC AREA\n         LR    R10,R1                GET READY TO USE R10 AS THE\n         DROP  R1\n         USING WORKA,R10             DATA AREA SEGMENT BASE REGISTER\n         ST    R2,CPPL_PTR           SAVE THE POINTER TO THE CPPL\n***********************************************************************\n*                                                                     *\n*    MAINLINE PROCESSING                                              *\n*                                                                     *\n***********************************************************************\n*\n         XC    RETCODE,RETCODE      INITIALIZE THE RETURN CODE\n         GETMAIN RU,LV=L_PPL        OBTAIN A DYNAMIC PPL WORK AREA\n         STM   R0,R1,PPL_LENGTH     SAVE LENGTH AND ADDR OF DYNAMIC PPL\n         GETMAIN RU,LV=L_ANSWER     OBTAIN A DYNAMIC PPL ANSWER AREA\n         STM   R0,R1,ANSWER_LENGTH  SAVE LENGTH AND ADDR OF DYNAMIC PPL\n*                                   ANSWER AREA\n         L    R2,PPL_PTR            GET THE ADDRESS OF THE PPL\n         USING PPL,R2               AND ESTABLISH ADDRESSABILITY\n         L    R1,CPPL_PTR           GET ADDRESS OF CPPL\n         USING CPPL,R1              AND ESTABLISH ADDRESSABILITY\n         MVC  PPLUPT,CPPLUPT        PUT IN THE UPT ADDRESS FROM CPPL\n         MVC  PPLECT,CPPLECT        PUT IN THE ECT ADDRESS FROM CPPL\n         MVC  PPLCBUF,CPPLCBUF      PUT IN THE COMMAND BUFFER ADDRESS\n*                                   FROM THE CPPL\n         L    R1,WORK_AREA_GM_PTR   GET THE ADDRESS OF THE COMMAND\n*                                   PROCESSOR'S DYNAMIC WORK AREA TO\n         ST   R1,PPLUWA             BE PASSED TO THE VALIDITY CHECK\n*                                   ROUTINE\n         DROP R1\n         L    R1,ANSWER_PTR         GET THE ADDRESS OF THE PARSE\n*                                   ANSWER AREA AND\n         ST   R1,PPLANS             STORE IT IN THE PPL\n         XC   ECB,ECB               CLEAR COMMAND PROCESSOR'S\n*                                   EVENT CONTROL BLOCK (ECB)\n         LA   R1,ECB                GET THE ADDRESS OF THE COMMAND\n*                                   PROCESSOR'S ECB AND\n         ST   R1,PPLECB             PUT IT IN THE PPL\n         L    R1,PCLADCON           GET THE ADDRESS OF THE PCL AND\n         ST   R1,PPLPCL             PUT IT IN THE PPL FOR PARSE\n         CALLTSSR EP=IKJPARS,MF=(E,PPL)   INVOKE PARSE\n         LTR  R15,R15               IF PARSE RETURN CODE IS ZERO\n         BZ   PROCESS               PERFORM PROCESSING FOR THE COMMAND\n         MVC  RETCODE(4),EIGHT      SET CP RETURN CODE TO 8\n         B    CLEANUP               PREPARE TO RETURN TO THE TMP\n*\nPROCESS  DS 0H\n*         .\n*         .\n*         .\n*\n*  CODE TO PERFORM THE FUNCTION OF THE COMMAND PROCESSOR GOES HERE.\n*  AFTER CALLING THE PARSE SERVICE ROUTINE TO VALIDATE THE COMMAND\n*  OPERANDS, USE THE PDL RETURNED BY PARSE TO DETERMINE WHICH\n*  OPERANDS THE USER ENTERED.  THEN PERFORM THE FUNCTION REQUESTED\n*  BY THE USER.\n*\n*        WTO 'PERFORMING CHECK'\n         L    R6,PPLANS\n         L    R6,0(,R6)\n         USING PRDSECT,R6\n         L    R3,CPPL_PTR           GET ADDRESS OF CPPL\n         USING CPPL,R3              AND ESTABLISH ADDRESSABILITY\n         LA    R4,USRPCE            POINT TO THE USERID PDE\n         USING USERID_PDE,R4        AND ESTABLISH ADDRESSABILITY TO IT\n         L     R7,USERID_PTR        LOAD ADDR OF USERID\n         LA    R5,ACTPCE\n         USING KEYWD_PDE,R5         ADDR KEYWORD 1 = ADD, 2 = DEL\n         LH    R5,KEYWD_NUM         LOAD THE ACTION\n         DROP  R5\n*\n*        MVC   WTOLR1(WTOLR1CL),WTOLR1C SEED WTO MESSAGE\n*        MVC   WTOLR2(WTOLR2CL),WTOLR2C SEED WTO MESSAGE\n*        XC    DOUBLE(L'DOUBLE),DOUBLE\n*        CVD   R5,DOUBLE\n*        UNPK  ACTIONCD(4),DOUBLE+6(2)\n*        OI    ACTIONCD+3,X'F0'\n*        MVC   WTOLR1+18(4),ACTIONCD\n*        WTO   MF=(E,WTOLR1)\n*        LH    R1,USERID_LENGTH_1\n*        BCTR  R1,0\n*        EX    R1,MOVEIT\n*        B     WRITIT\n*MOVEIT   MVC   WTOLR2+18(*-*),0(R7)\n*WRITIT   WTO   MF=(E,WTOLR2)\n*\n         XC    NEXT(L'NEXT),NEXT    ONLY 1 ENTRY BEING REQUESTED\n*                                   OUR MAPPING OF THE PDE\n         MVC   USERID,=CL8' '       PAD USERID WITH BLANKS        .FIX.\n         LH    R1,USERID_LENGTH_1                                 .FIX.\n         BCTR  R1,0                                               .FIX.\n         EX    R1,MOVEUS                                          .FIX.\n*        MVC   USERID,0(R7)         MOVE IN USERID FOR ADD OR DEL .FIX.\n         CH    R5,=H'1'             WAS \"ADD\" ENTERED ON COMMAND\n         BE    ADDUSER              GO ADD USER TO SYS1.BRODCAST\n         CH    R5,=H'2'             WAS \"DEL\" ENTERED ON COMMAND\n         BE    DELUSER              GO DELETE USER FROM BRODCAST\n*\n* PUT OUT MESSAGE IF \"ADD\" OR \"DEL\" IS NOT SPECIFIED AND END COMMAND\n*\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC PUTBLOK(PUTLINEL),PUTLINE\n         XC   ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC   IOPLADS,IOPLADS       CLEAR IOPL\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTL007,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTL008,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         B     CLEANUP              RETURN IF NOT ADD OR DEL\nMOVEUS   MVC   USERID(*-*),0(R7)                                  .FIX.\n*\n*\n*\nADDUSER  EQU *\n*        WTO   'PERFORMING ADD'\n         MVC   INTYWORK(INTYLSTL),INTYLST     SEED INTY\n         LA    15,INTYWAL    LENGTH OF WORK AREA.\n         ST    15,INTYWA     INITIALIZE WORK AREA.\n         XC    WR,WR         CLEAR RESERVED AREA.\n         MVC   INTY,USERID_LENGTH_1+1\n         MVC   INTYUSER,0(R7)\n*\n*        MVC   WTOLR3(WTOLR3CL),WTOLR3C SEED WTO MESSAGE\n*        XC    DOUBLE(L'DOUBLE),DOUBLE\n*        LH    R1,USERID_LENGTH_1\n*        CVD   R1,DOUBLE\n*        UNPK  ACTIONCD(4),DOUBLE+6(2)\n*        OI    ACTIONCD+3,X'F0'\n*        MVC   WTOLR3+18(4),ACTIONCD\n*        WTO   MF=(E,WTOLR3)\n*\n*  PERFORM RACF LOOKUP ON USER TO BE ADDED, IF NOT DEFINED, RETURN\n*  AND WRITE OUT ERROR MESSAGE\n*\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=INTY,WKAREA=INTYWA,          X\n               MF=(E,INTYWORK)\n         LTR   R15,R15            R15=0 IF USER DEFINED TO RACF\n         BNZ   NOTDEFD\n*\n*  CALL SYS1.BRODCAST UPDATE INTERFACE\n*\n         IKJIFRIF ADD=USRADR,PSCB=CPPLPSCB,ECT=CPPLECT,                X\n               UPT=CPPLUPT,MF=(E,RACFPARM)\n         LTR   R15,R15            WAS ADD SUCCESSFUL?\n         BZ    SUCCADD            YES, WRITE OUT SUCCESS MESSAGE\n         ST    R15,RETCODE\n         CVD   R15,DOUBLE\n         UNPK  RETURNC(2),DOUBLE+6(2)\n         OI    RETURNC+1,X'F0'\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC   PUTBLOK(PUTLINEL),PUTLINE\n         XC    ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC    IOPLADS,IOPLADS       CLEAR IOPL\n         MVC   PUTE003(PUTL3L),PUTL003      SEED ERROR MESSAGE\n         MVC   PUTE3+20(2),RETURNC            PUT IN RC\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTE003,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         MVC  RETCODE(4),EIGHT      SET CP RETURN CODE TO 8\n         B   CLEANUP\n*\n*  PUT OUT SUCCESS ADD MESSAGE\n*\nSUCCADD  EQU *\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC PUTBLOK(PUTLINEL),PUTLINE\n         XC   ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC   IOPLADS,IOPLADS       CLEAR IOPL\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTL001,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         B   CLEANUP\n*\n*  PUT OUT USERID TOO LONG MESSAGE\n*\nTOOLONG  EQU *\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC PUTBLOK(PUTLINEL),PUTLINE\n         XC   ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC   IOPLADS,IOPLADS       CLEAR IOPL\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTL006,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         B   CLEANUP\n*\n*  PUT OUT USERID NOT DEFINED IN RACF. SHOULD NOT ADD INTO\n*  SYS1.BRODCAST IF USER IS NOT DEFINED.\n*\nNOTDEFD  EQU *\n         CVD   R15,DOUBLE\n         UNPK  RETURNC(2),DOUBLE+6(2)\n         OI    RETURNC+1,X'F0'\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC PUTBLOK(PUTLINEL),PUTLINE\n         XC   ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC   IOPLADS,IOPLADS       CLEAR IOPL\n         MVC   PUTE005(PUTL5L),PUTL005      SEED ERROR MESSAGE\n         MVC   PUTE5+48(2),RETURNC            PUT IN RC\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTE005,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         MVC  RETCODE(4),EIGHT      SET CP RETURN CODE TO 8\n         B   CLEANUP\n*\n*  PUT OUT USERID DELETE SUCCESSFUL MESSAGE\n*\nDELUSER  EQU *\n*        WTO 'PERFORMING DEL'\n         IKJIFRIF DEL=USRADR,PSCB=CPPLPSCB,ECT=CPPLECT,                X\n               UPT=CPPLUPT,MF=(E,RACFPARM)\n         LTR   R15,R15\n         BZ    SUCCDEL\n         CVD   R15,DOUBLE\n         UNPK  RETURNC(2),DOUBLE+6(2)\n         OI    RETURNC+1,X'F0'\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC   PUTBLOK(PUTLINEL),PUTLINE\n         XC    ECB,ECB               CLEAR COMMAND PROCESSOR'S\n         XC    IOPLADS,IOPLADS       CLEAR IOPL\n         MVC   PUTE004(PUTL4L),PUTL004      SEED ERROR MESSAGE\n         MVC   PUTE4+28(2),RETURNC            PUT IN RC\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTE004,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n         MVC  RETCODE(4),EIGHT      SET CP RETURN CODE TO 8\n         B   CLEANUP\n*\n*  PUT OUT SUCCESS DELETE MESSAGE\n*\nSUCCDEL  EQU *\n         L     R7,CPPLUPT\n         L     R8,CPPLECT\n         MVC   PUTBLOK(PUTLINEL),PUTLINE\n         XC    ECB,ECB            CLEAR COMMAND PROCESSOR'S\n         XC    IOPLADS,IOPLADS    CLEAR IOPL\n         PUTLINE PARM=PUTBLOK,UPT=(R7),ECT=(R8),ECB=ECB,               X\n               OUTPUT=(PUTL002,TERM,SINGLE,DATA),MF=(E,IOPLADS)\n*\n*\n***********************************************************************\n*                                                                     *\n*  CLEANUP AND TERMINATION PROCESSING                                 *\n*                                                                     *\n***********************************************************************\n*\nCLEANUP  DS   0H\n*        WTO 'PERFORMING CLEANUP'\n         L    R1,PPL_PTR             POINT TO PPL IN DYNAMIC WORK AREA\n         FREEMAIN RU,LV=L_PPL,A=(1)  FREE THE STORAGE FOR THE PPL\n         L    R1,ANSWER_PTR          POINT TO THE ANSWER PLACE\n*        L    R1,0(0,R1)             POINT TO THE PDL\n         IKJRLSA (R1)                FREE STORAGE THAT PARSE ALLOCATED\n*                                    FOR THE PDL\n         L    R1,ANSWER_PTR          POINT TO THE ANSWER PLACE\n         FREEMAIN RU,LV=L_ANSWER,A=(1) FREE THE STORAGE FOR THE\n*                                    ANSWER WORD\n         L     R5,RETCODE            SAVE RETURN CODE AROUND FREEMAIN\n         L     R1,WORK_AREA_GM_PTR   POINT TO MODULE WORK AREA\n         FREEMAIN RU,LV=L_WORK_AREA,A=(1)\n*                                    FREE THE MODULE WORKAREA\n         LR    R1,R13                LOAD PROCESS'S SAVE AREA ADDRESS\n         L     R13,4(,R1)            CHAIN TO PREVIOUS SAVE AREA\n         DROP  R13\n  FREEMAIN RU,LV=L_SAVE_AREA,A=(1)   FREE THE MODULE SAVEAREA\n         L     R14,12(,R13)          HERE'S OUR RETURN ADDRESS\n         LR    R15,R5                HERE'S THE RETURN CODE\n         LM    R0,R12,20(R13)        RESTORE REGS 0-12\n         BSM   0,R14                 RETURN TO the TMP\n\n***********************************************************************\n* POSITCHK - IKJPOSIT VALIDITY CHECKING ROUTINE                       *\n*                                                                     *\n* CHECK THE USERID HAS A LENGTH OF 7 OR LESS. IF >7 THE VALIDITY      *\n* CHECKING ROUTINE RETURNS A CODE OF 4 TO PARSE.  THIS RETURN         *\n* CODE INDICATES TO PARSE THAT IT SHOULD ISSUE A MESSAGE TO THE       *\n* TERMINAL AND PROMPT THE USER TO RE-ENTER THE USERID NAME.           *\n*                                                                     *\n***********************************************************************\n         DROP  R10                  WE WILL REUSE REGISTER 10\nPOSITCHK DS    0D\n         STM   R14,R12,12(R13)      SAVE PARSE'S REGISTERS\n         LR    R9,R15\n         USING POSITCHK,R9          ESTABLISH ADDRESSABILITY\n         LR    R2,R1                SAVE THE VALIDITY CHECK PARAMETER\n*                                   LIST PARSE PASSED TO US\n*        WTO 'DOING POSITCHK'\n         GETMAIN RU,LV=L_SAVE_AREA  OBTAIN A DYNAMIC SAVE AREA FOR\n*                                   THE POSITCHK ROUTINE\n         USING SAVEAREA,R1          AND ESTABLISH ADDRESSABILITY\n         ST    R1,8(,R13)           PUT THE ADDRESS OF THIS ROUTINE'S\n*                                   SAVE AREA INTO PARSE'S SAVE AREA\n         ST    R13,4(,R1)           PUT THE ADDRESS OF THIS ROUTINE'S\n*                                   SAVE AREA INTO ITS OWN SAVE AREA\n*                                   FOR CALLING\n         LR    R13,R1               LOAD ADDRESS OF GETMAINED AREA\n         USING SAVEAREA,R13         AND ESTABLISH ADDRESSABILITY\n         L     R10,4(,R2)           POINT TO THE COMMAND PROCESSOR'S\n*                                   ORIGINAL DYNAMIC WORK AREA\n         USING WORKA,R10            DATA AREA SEGMENT BASE REGISTER\n*                                   SAVE THE ADDRESS OF THE VALIDITY\n*                                   CHECK PARAMETER LIST\n         LM    R1,R3,0(R2)          SAVE IT IN WORKAREA\n         STM   R1,R3,VALIDITY_CHECK_PARAMETER_LIST\n*                                   SAVE CONTENTS OF PARAMETER LIST\n         XC    POSITCHK_RETCODE,POSITCHK_RETCODE\n*                                   MAKE SURE WE START WITH A ZERO\n*                                   RETURN CODE\n         L     R4,PDEADR            PTR RELOAD ADDR OF PDE\n         USING USERID_PDE,R4        AND ESTABLISH ADDRESSABILITY TO\n         LH    R15,USERID_LENGTH_1  LOAD LENGTH OF USER1\n*                                   OUR MAPPING OF THE PDE\n         CH    R15,=H'8'            IS THE LENGTH 7 OR LESS ?\n         BL    USERIDOK             NO - USERID LENGTH IS OK\n*        WTO 'POSITCHK LENGTH BAS'\n         L     R5,FOUR              USERID IS INVALID.  SET RC=4\n         ST    R5,POSITCHK_RETCODE  SAVE THE RETURN CODE\nUSERIDOK LR    R1,R13               LOAD ROUTINE'S SAVE AREA ADDRESS\n         L     R13,4(,R1)           CHAIN TO PREVIOUS SAVE AREA\n         L     R5,POSITCHK_RETCODE  LOAD THE RETURN CODE\n         FREEMAIN RU,LV=L_SAVE_AREA,A=(1)\n*                                   FREE THE MODULE WORKAREA\n         L     R14,12(,R13)         HERE'S OUR RETURN ADDRESS\n         LR    R15,R5               HERE'S THE RETURN CODE\n         LM    R0,R12,20(R13)       RESTORE REGS 0-12\n         BSM   0,R14                RETURN TO PARSE\n         DROP  R9\n         DROP  R10\n         DROP  R13\n*\n***********************************************************************\n*                                                                     *\n* DECLARES FOR CONSTANTS                                              *\n*                                                                     *\n***********************************************************************\n*\nPCLADCON      DC   A(PCLDEFS)        ADDRESS OF PCL\nFOUR          DC   F'4'              USED TO SET/TEST RETURN CODE\nEIGHT         DC   F'8'              USED TO SET/TEST RETURN CODE\nTWELVE        DC   F'12'             USED TO SET/TEST RETURN CODE\nERROR         DC   F'12'             USED TO SET/TEST RETURN CODE\nWTOLR1C  WTO 'ACTPCE   ===> XXXX',MF=L\nWTOLR1CL EQU  *-WTOLR1C\nWTOLR2C  WTO 'USERID   ===>         <',MF=L\nWTOLR2CL EQU  *-WTOLR2C\nWTOLR3C  WTO 'USERLEN  ===> XXXX',MF=L\nWTOLR3CL EQU  *-WTOLR3C\n         DS   0F\nINTYLST  ICHEINTY LOCATE,MF=L\nINTYLSTL EQU *-INTYLST\n         DS   0F\nPUTLINE PUTLINE    MF=L               LIST FORM OF THE PUTLINE MACRO\n*                                     INSTRUCTION.\nPUTLINEL EQU *-PUTLINE\n         DS    0F\nPUTL001  DC    AL2(PUTL1L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL1    DC    C'USYNC ADD USER SUCCESSFUL TO SYS1.BRODCAST'\nPUTL1L   EQU   *-PUTL001\n         DS    0F\nPUTL002  DC    AL2(PUTL2L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL2    DC    C'USYNC DELETE USER SUCCESSFUL FROM SYS1.BRODCAST'\nPUTL2L   EQU   *-PUTL002\n         DS    0F\nPUTL003  DC    AL2(PUTL3L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL3    DC    C'USYNC ADD FAILED RC=XX TO SYS1.BRODCAST'\nPUTL3L   EQU   *-PUTL003\n         DS    0F\nPUTL004  DC    AL2(PUTL4L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL4    DC    C'USYNC DELETE USER FAILED RC=XX FROM SYS1.BRODCAST'\nPUTL4L   EQU   *-PUTL004\n         DS    0F\nPUTL005  DC    AL2(PUTL5L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL5    DC    C'USYNC ADD FAILED, USERID NOT DEFINED TO RACF RC=XX'\nPUTL5L   EQU   *-PUTL005\n         DS    0F\nPUTL006  DC    AL2(PUTL6L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL6    DC    C'USYNC USERID LENGTH > 7, REQUEST CANCELLED'\nPUTL6L   EQU   *-PUTL006\nPUTL007  DC    AL2(PUTL7L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL7    DC    C'MUST SPECIFY \"ADD\" OR \"DEL\" AFTER USERID'\nPUTL7L   EQU   *-PUTL007\nPUTL008  DC    AL2(PUTL8L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTL8    DC    C'COMMAND CANCELLED, NO ACTION WAS PERFORMED'\nPUTL8L   EQU   *-PUTL008\n***********************************************************************\n*                                                                     *\n* PARSE MACROS USED TO DESCRIBE THE COMMAND OPERANDS                  *\n*                                                                     *\n***********************************************************************\n*\nPCLSTART DS       0H\nPCLDEFS  IKJPARM  DSECT=PRDSECT\nUSRPCE   IKJPOSIT USERID,                                              +\n               PROMPT='ENTER VALID RACF USERID TO PROCESS.             +\n               ENTER ''?'' FOR HELP',                                  +\n               HELP=('THIS MUST BE A VALID RACF USERID TO ADD OR DELETE+\n                IN SYS1.BRODCAST.')\n*              VALIDCK=POSITCHK    REMOVED POSITCHK -REDUNDANT LMZ\nACTPCE   IKJKEYWD\n         IKJNAME  'ADD'\n         IKJNAME  'DEL'\n         IKJENDP\nLPCL     EQU   *-PCLSTART            LENGTH OF THE PCL\n*\n***********************************************************************\n*                                                                     *\n* DECLARES FOR DYNAMIC VARIABLES                                      *\n*                                                                     *\n***********************************************************************\n*\nSAVE_AREA                DSECT\nSAVEAREA                 DS  18F\nL_SAVE_AREA              EQU *-SAVEAREA\n*\nWORK_AREA                DSECT\nWORKA                    DS  0F      START OF DYNAMIC WORK AREA\nWORK_AREA_GM_LENGTH      DS  F       LENGTH OF WORKAREA\nWORK_AREA_GM_PTR         DS  F       ADDRESS OF WORKAREA\nPPL_LENGTH               DS  F       LENGTH OF PPL\nPPL_PTR                  DS  F       ADDRESS OF PPL\nANSWER_LENGTH            DS  F       LENGTH OF PPL ANSWER AREA\nANSWER_PTR               DS  F       ADDRESS OF PPL ANSWER AREA\nCPPL_PTR                 DS  F       ADDRESS OF THE CPPL FROM TMP\nRETCODE                  DS  F       THE RETURN CODE\nPARSE_RETCODE            DS  F       THE RETURN CODE FROM PARSE\nPOSITCHK_RETCODE         DS  F       THE RETURN CODE FROM THE POSITCHK\n*                                    VALIDATION EXIT\nECB                      DS  F       CP'S EVENT CONTROL BLOCK\nVALIDITY_CHECK_PARAMETER_LIST EQU *  POINTER TO EACH PARAMETER LIST\nPDEADR                   DS  F       ADDRESS OF SYNTACT CORRECT PDE\nUSERWORD                 DS  F       ADDRESS OF USER WORKAREA\nVALMSG                   DS  F       ADDRESS OF USER MSG WHEN FAILED\n*                                    PARAMETER LIST\nRACFPARM       IKJIFRIF MF=L    * define storage for the parameter list\nDOUBLE     DS    D                   DOUBLE WORD WORK AREA\nACTIONCD   DS    CL4\nRETURNC    DS    CL2\nWTOLR1     WTO 'ACTPCE   ===> XXXX',MF=L\nWTOLR2     WTO 'USERID   ===>         <',MF=L\nWTOLR3     WTO 'USERLEN  ===> XXXX',MF=L\n*                                    PARAMETER LIST\n         DS    0F            ALIGNMENT TO WORD BOUNDARY\nUSRADR   DS    0CL12         NAME FIELD AS SPECIFIED BELOW\nNEXT     DS    F             ZERO, IF ONLY ONE ENTRY TO BE ADDED\nUSERID   DS    CL8           NEW  USER BRODCAST ENTRY\n*                            INTY PARAMETER LIST\nINTY     DS    AL1           LENGTH OF USERID (1 TO 8)\nINTYUSER DS    CL8           USERID\n*                            INTY WORK AREA\nINTYWA   DS    0F\n         DS    F             LENGTH OF WORK AREA.\nWR       DS    CL24          RESERVED.\n         DS    F\nINTYWAL  EQU   *-INTYWA      LENGTH OF ICHINTY WORK AREA\n         DS    0F            ALIGNMENT TO WORD BOUNDARY\nINTYWORK ICHEINTY LOCATE,TYPE='USR',ENTRY=INTY,WKAREA=INTYWA,          X\n               MF=L\nIOPLADS  DS    4F'0'\nPUTBLOK  PUTLINE    MF=L              LIST FORM OF THE PUTLINE MACRO\n*                                     INSTRUCTION.\n         DS    0F\nPUTE003  DC    AL2(PUTE3L)             LENGTH OF THE MSG + HEADER.\n         DC    H'0'                    RESERVED.\nPUTE3    DC    C'USYNC ADD FAILED RC=XX TO SYS1.BRODCAST'\nPUTE3L   EQU   *-PUTE003\n         DS    0F\nPUTE004  DC    AL2(PUTE4L)            LENGTH OF THE LINE + HEADER.\n         DC    H'0'                   RESERVED.\nPUTE4    DC    C'USYNC DELETE USER FAILED RC=XX FROM SYS1.BRODCAST'\nPUTE4L   EQU   *-PUTE004\n         DS    0F\nPUTE005  DC    AL2(PUTE5L)            LENGTH OF THE LINE + HEADER.\n         DC    H'0'                   RESERVED.\nPUTE5    DC    C'USYNC ADD FAILED, USERID NOT DEFINED TO RACF RC=XX'\nPUTE5L   EQU   *-PUTE005\nL_WORK_AREA              EQU *-WORKA\n***********************************************************************\n*                                                                     *\n*  MAPPING OF THE PDE BUILT BY PARSE TO DESCRIBE A USERID             *\n*  OPERAND.                                                           *\n*                                                                     *\n***********************************************************************\n*\nUSERID_MAP DSECT                     PDE MAPPING FOR THE FOR USERID\n*\nUSERID_PDE               EQU *\nUSERID_PTR               DS  F       POINTER TO THE USERID\nUSERID_LENGTH_1          DS  H       LENGTH OF THE USERID ENTERED\nUSERID_FLAGS1            DS  CL1     FLAGS BYTE\n*\n*           0... .... THE USERID IS NOT PRESENT\n*           1... .... THE USERID IS PRESENT\n*           .XXX XXXX RESERVED BITS.\n*\n                         DS  CL1     RESERVED\nPASSWORD_PTR             DS  F       POINTER TO THE PASSWORD\nPASSWORD_LENGTH          DS  H       LENGTH OF THE PASSWORD\nUSERID_FLAGS2            DS  CL1     FLAGS BYTE\n*\n*           0... .... THE PASSWORD IS NOT PRESENT\n*           1... .... THE PASSWORD IS PRESENT\n*\n                         DS  CL1     RESERVED\nL_USERID_PDE             EQU *-USERID_PTR\n*\n***********************************************************************\n*                                                                     *\n*  MAPPING OF THE PDE BUILT BY PARSE TO DESCRIBE THE KEYWORD OPERAND  *\n*                                                                     *\n***********************************************************************\n*\nKEYWD_PDE                DSECT\nKEYWD_NUM                DS  H       CONTAINS THE NUMBER OF THE IKJNAME\n*                                    MACRO INSTRUCTION THAT CORRESPONDS\n*                                    TO THE OPERAND ENTERED/DEFAULTED\n*\nL_KEYWD_PDE              EQU *-KEYWD_PDE\n*\n         IKJPPL                 PARSE PARAMETER LIST\nL_PPL    EQU   *-PPL\n*\n         IKJCPPL                COMMAND PROCESSOR PARAMETER LIST\nL_CPPL   EQU  *-CPPL\n*\nANSWER   DSECT\n         DS    F                PARSE ANSWER PLACE.  PARSE PLACES A\n*                               POINTER TO THE PDL HERE\nL_ANSWER EQU *-ANSWER\n*\n         CVT   DSECT=YES        CVT MAPPING NEEDED FOR CALLTSSR MACRO\n         IKJTSVT                TSVT MAPPING REQUIRED IKJIFRIF MACRO\n*\n***********************************************************************\n*                                                                     *\n*   EQUATES                                                           *\n*                                                                     *\n***********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11                      BASE REGISTER\nR12      EQU   12\nR13      EQU   13                      DATA REGISTER\nR14      EQU   14                      RETURN ADDRESS\nR15      EQU   15                      RETURN CODE\n         END   USYNC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "USYNC$": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x18\\x17\\x1f\\x01\\x18\\x17\\x1f#Y\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc1\\xe2\\xd4\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2018-06-20T00:00:00", "modifydate": "2018-06-20T23:59:30", "lines": 28, "newlines": 28, "modlines": 0, "user": "ASMJCL"}, "text": "jobcard\n//*\n//HLASMC  PROC\n//ASSEM   EXEC PGM=ASMA90,REGION=1024K,\n//             PARM='DECK,NOOBJECT'\n//SYSLIB  DD  DSN=SYS1.MACLIB,DISP=SHR\n//        DD  DSN=SYS1.MODGEN,DISP=SHR\n//        DD  DSN=SYS1.AMODGEN,DISP=SHR\n//        DD  DSN=SYS1.SIATMAC,DISP=SHR\n//        DD  DSN=SDMVS.USERMOD.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,(20,5))\n//SYSUT2   DD  UNIT=SYSALLDA,SPACE=(CYL,(10,1))\n//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(CYL,(2,1))\n//SYSPRINT DD  SYSOUT=*\n// PEND\n//ASM1 EXEC HLASMC\n//ASSEM.SYSIN    DD  DSN=USERMOD.SOURCE(USYNC),DISP=SHR\n//ASSEM.SYSPUNCH DD  DSN=USERMOD.OBJ(USYNC),DISP=SHR\n//LKED EXEC PGM=IEWL,PARM='RENT,REUS,AC=1'\n//SYSPRINT DD  SYSOUT=*\n//EXITOBJ  DD  DSN=USERMOD.OBJ,DISP=SHR\n//SYSLMOD  DD  DSN=USERMOD.LOADLIB,DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(4096,(50,50))\n//SYSLIN   DD  *\n INCLUDE EXITOBJ(USYNC)\n ENTRY USYNC\n NAME USYNC(R)\n/*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "USYNC$$": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x18\\x17\\x0f\\x01\\x181\\x9f\\x152\\x00\\x1b\\x00\\x1a\\x00\\x00\\xc1\\xe2\\xd4\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2018-06-19T00:00:00", "modifydate": "2018-11-15T15:32:16", "lines": 27, "newlines": 26, "modlines": 0, "user": "ASMJCL"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,RLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=CBT.CBT496.FILE976.PDS(USYNC)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,20)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,30),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=IEWL,\n//       PARM='NCAL,MAP,LIST,LET,RENT,REUS'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=(OLD,PASS),DSN=&&TEMP\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN   DD  *\n INCLUDE SYSLIB\n SETSSI  CB496976\n SETCODE AC(1)\n ENTRY   USYNC\n NAME    USYNC(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "USYNC#": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x08\\x01\\x181\\x9f\\x01\\x182\\x0f\\x14D\\x00*\\x00!\\x00\\x00\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2018-11-15T00:00:00", "modifydate": "2018-11-16T14:44:08", "lines": 42, "newlines": 33, "modlines": 0, "user": "HELP"}, "text": ")F FUNCTION\n\n\n USYNC   (Add a userid record to SYS1.BRODCAST, or the active\n          Broadcast Dataset, or Delete a userid record from\n          the active Broadcast Dataset.)\n\n Purpose:  To ADD or DELete a Userid (to/from) SYS1.BRODCAST\n           or whatever the *active* Broadcast Dataset is.\n           This will enable the userid to receive user\n           broadcast messages on TSO.\n\n           (8-character userids, defined for z/OS 2.3 and\n           higher releases, are not defined in SYS1.BRODCAST.\n           8-character userids can only receive user messages\n           from TSO Userlogs, if they are defined for that id.\n           However, even if a z/OS 2.3 system is set to allow\n           8-character userids, shorter userids (7 characters\n           or less) can still be defined in the Broadcast\n           Dataset, and will be used, if userlogs are not\n           turned on for the id.)\n\n)X SYNTAX\n USYNC  userid   ADD | DEL\n\n\n)O OPERANDS\n\n))ADD | DEL\n\n   ADD specifies that this userid is to have a userid record\n       added to SYS1.BRODCAST so that this id can receive TSO\n       delayed broadcast messages.\n\n   DEL specifies to delete this userid's user record from\n       SYS1.BRODCAST.\n\n   Note that RACF checking is performed first, to verify that\n       this userid is defined to RACF, before any action is\n       performed.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT976/FILE976.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT976", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}