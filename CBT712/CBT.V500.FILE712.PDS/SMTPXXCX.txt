000100 identification division.
000200 program-id.                     smtpxxcx.
000300*author.                         Paul F. Gorlinsky.
000400*                                Horizon Data Systems, Inc.
000500*                                pfg@hds.bz
000600*
000700*date-written.                   2003/03/04.
000800
000900******************************************************************
001000* This program is used to send mail from CICS using the TCP/IP
001100* SOCKET interface. See SMTPXXIX for the lay out of the calling
001200* parameters.
001300*
001400*
001500* External Documentation:
001600* IBM SC31-8807 - publibz.boulder.ibm.com/epubs/pdf/f1a1g110.pdf
001700*     IP CICS Sockets Guide
001800* RFC2821 - //www.faqs.org/rfcs/rfc2821.html
001900*     Simple Mail Trannsfer Protocol
002000* RFC 854 - //www.faqs.org/rfcs/rfc854.html
002100*     Telnet Protocol Specification
002200*
002300* Calling Program Requirements:
002400* - COBOL COPY SMTPXXIX in Linkage Section of this program and
002500*   WORKING STORAGE SECTION of the callers program.
002600* - CICS GETMAIN setting sm-text-ptr and flength to length of
002700*   message. Initialize to low-values
002800* - Set address of sm-text-data to sm-text-ptr
002900* - Build message in sm-text
003000* - Set sm-head-valid, sm-tail-valid and sm-text-valid to true
003100* - Build sm-rcpts, sm-hdr, sm-sender
003200* - Set sm-rcpt-num and sm-text-len appropriate
003300* - CICS LINK to sm-program
003400* - Validate response.
003500*
003600* Current Restrictions:
003700* - Maximum of 10 Recepiants
003800* - Message length 32760 bytes
003900*
004000* CICS TDQ TCPM is used for error messages.
004100*
004200* CICS INITPARM SMTPXXCX is used to override the default host
004300*   of the SMTP server to be used.
004400*   SMTPXXCX='dotted-ip,host dns name,xyzzy'
004500*   Each of the fields is optional. 'xyzzy' is used to turn debug
004600*   messages on. These message are written using the COBOL
004700*   DISPLAY verb and usually are written to the DDNAME CEEMSG.
004800*   Dotted-ip takes precidence over DNS name.
004900* The default SOCKET server name of TCPIP is used.
005000*
005100*
005200* CHANGES:  THE FOLLOWING CHANGES HAVE BEEN MADE TO THIS MODULE:
005300*    LOG #  DATE:  COMMENT:
005400*    -----  -----  ----------------------------------------------
005500*
005600*           03/03  NEW CODE
005700*
005800******************************************************************
005900
006000 environment division.
006100
006200 configuration section.
006300 source-computer.                ibm-370.
006400 object-computer.                ibm-370.
006500
006600 special-names.
006700
006800 data division.
006900
007000 working-storage section.
007100 01  filler.
007200     03  filler                       pic x(04) value '****'.
007300     03  sm-local-program-name        pic x(08) value 'SMTPXXCX'.
007400     03  filler                       pic x(04) value '****'.
007500
007600 01  wc-filler.
007700     03  wc-eib-taskn                 pic 9(07).
007800     03  wc-eib-time                  pic 9(07).
007900     03  wc-eib-date                  pic 9(07).
008000     03  wc-eib-trnid                 pic x(04).
008100     03  wc-eib-trmid                 pic x(04).
008200     03  wc-cics-resp                 pic 9(08).
008300     03  wc-cics-resp2                pic 9(08).
008400     03  wc-cics-applid               pic x(08).
008500     03  wc-cics-job-name             pic x(08).
008600     03  wc-initparm.
008700         05  wc-cics-initparm         pic x(60).
008800         05  wc-cics-initparmlen      pic 9(04) binary.
008900
009000 01  we-filler.
009100     03  we-msg.
009200         05  we-msg-pgm-id            pic  x(08).
009300         05  we-msg-text              pic  x(91).
009400     03  we-h-num                     pic  9(05).
009500     03  we-f-num                     pic  9(09).
009600     03  we-f-num-2                   pic  9(09).
009700     03  we-sf-num                    pic  s9(8).
009800
009900 01  wi-filler.
010000     03  wi-idx                       pic  9(01) binary.
010100
010200     03  wi-dotted-ip-addr.
010300         05  wi-dotted-ip-n1          pic  9(03).
010400         05  wi-dotted-ip-n2          pic  9(03).
010500         05  wi-dotted-ip-n3          pic  9(03).
010600         05  wi-dotted-ip-n4          pic  9(03).
010700     03  filler redefines wi-dotted-ip-addr.
010800         05  wi-dotted-ip occurs 4 times pic 9(3).
010900
011000     03  wi-bin-ip-num                pic  9(03) binary.
011100     03  filler redefines wi-bin-ip-num.
011200         05  filler                   pic  x(01).
011300         05  wi-bin-ip-bin            pic  x(01).
011400
011500     03  wi-bin-ip-addr               pic  9(08) binary.
011600     03  filler redefines wi-bin-ip-addr.
011700         05  wi-bin-ip-addr-n1        pic  x(01).
011800         05  wi-bin-ip-addr-n2        pic  x(01).
011900         05  wi-bin-ip-addr-n3        pic  x(01).
012000         05  wi-bin-ip-addr-n4        pic  x(01).
012100     03  filler redefines wi-bin-ip-addr.
012200         05  wi-bin-ip      occurs 4 times pic x.
012300
012400 01  ws-filler.
012500     03  filler                       pic x(1).
012600         88 ws-done              value 'Y'.
012700         88 ws-not-done          value 'N'.
012800
012900     03  ws-date                      pic x(32).
013000
013100     03  ws-initparm-1                pic x(60).
013200     03  ws-initparm-2                pic x(60).
013300     03  ws-initparm-3                pic x(60).
013400     03  ws-initparm-4                pic x(60).
013500
013600     03  ws-smtp-host-dotted-ip       pic x(15).
013700     03  ws-smtp-hostname             pic x(60).
013800     03  ws-smtp-hostname-len         pic 9(08) binary.
013900     03  ws-smtp-host-ip              pic 9(08) binary.
014000
014100     03  ws-src-hostname              pic x(60).
014200     03  ws-src-hostname-len          pic 9(08) binary.
014300     03  ws-src-host-ip               pic 9(08) binary.
014400
014500     03  ws-debug-secret-word         pic x(5).
014600         88 ws-default-debug     value spaces.
014700         88 ws-debug-on          value 'XYZZY'.
014800
014900     03  ws-crlf-null                 pic x(3) value x'0d2500'.
015000     03  filler redefines ws-crlf-null.
015100         05 ws-crlf                   pic x(2).
015200         05 filler redefines ws-crlf.
015300            07  ws-cr                 pic x(1).
015400            07  ws-lf                 pic x(1).
015500         05 ws-null                   pic x(1).
015600
015700     03  ws-str-ptr                   pic s9(4) value +1.
015800         88  ws-str-ptr-initial       value +1.
015900
016000     03  ws-loop-cnt                  pic  9(4) binary.
016100
016200     03  ws-str-len                   pic  9(8) binary.
016300
016400 01  wz-soc-function                  pic x(16).
016500     88  wz-soc-fun-is-initapi     value 'INITAPI'.
016600     88  wz-soc-fun-is-socket      value 'SOCKET '.
016700     88  wz-soc-fun-is-connect     value 'CONNECT'.
016800     88  wz-soc-fun-is-shutdown    value 'SHUTDOWN'.
016900     88  wz-soc-fun-is-read        value 'READ   '.
017000     88  wz-soc-fun-is-write       value 'WRITE  '.
017100     88  wz-soc-fun-is-close       value 'CLOSE  '.
017200     88  wz-soc-fun-is-gethostid   value 'GETHOSTID'.
017300     88  wz-soc-fun-is-ghba        value 'GETHOSTBYADDR'.
017400     88  wz-soc-fun-is-ghbn        value 'GETHOSTBYNAME'.
017500     88  wz-soc-fun-is-etoa        value 'ebcdic->ascii'.
017600     88  wz-soc-fun-is-atoe        value 'ascii->ebcdic'.
017700 01  wz-soc-initapi
017800     redefines wz-soc-function        pic x(16).
017900 01  wz-soc-socket
018000     redefines wz-soc-function        pic x(16).
018100 01  wz-soc-connect
018200     redefines wz-soc-function        pic x(16).
018300 01  wz-soc-shutdown
018400     redefines wz-soc-function        pic x(16).
018500 01  wz-soc-read
018600     redefines wz-soc-function        pic x(16).
018700 01  wz-soc-write
018800     redefines wz-soc-function        pic x(16).
018900 01  wz-soc-close
019000     redefines wz-soc-function        pic x(16).
019100 01  wz-soc-get-host-id
019200     redefines wz-soc-function        pic x(16).
019300 01  wz-soc-get-host-by-addr
019400     redefines wz-soc-function        pic x(16).
019500 01  wz-soc-get-host-by-name
019600     redefines wz-soc-function        pic x(16).
019700
019800 01  wz-errno                         pic 9(08) binary.
019900     88  wz-all-epipe              value 32.
020000     88  wz-initapi-ok             value 10197, 0.
020100     88  wz-connect-reset          value 54.
020200     88  wz-connect-timedout       value 60.
020300     88  wz-connect-refused        value 61.
020400     88  wz-write-less-than-one    value 10184, 10186.
020500     88  wz-read-less-than-one     value 10159.
020600     88  wz-gethost-hostent-bad    value 10214.
020700 01  wz-errno-2                       pic 9(08) binary.
020800
020900 01  wz-retcode                       pic s9(8) binary.
021000     88  wz-retcode-ok             value +0.
021100     88  wz-retcode-not-ok         value -1.
021200     88  wz-retcode-nak            value -4.
021300 01  wz-retcode-2                     pic s9(8) binary.
021400
021500 01  wz-soc-maxsoc                    pic s9(4) binary.
021600     88  wz-default-maxsoc         value 100.
021700
021800 01  wz-soc-host-ip                   pic 9(08) binary.
021900
022000 01  wz-soc-hostname                  pic X(255).
022100
022200 01  wz-soc-ident.
022300     03  wz-soc-tcpname               pic x(08).
022400         88  wz-default-tcpname    value 'TCPIP'.
022500     03  wz-soc-adsname               pic x(08).
022600
022700 01  wz-soc-name.
022800     03  wz-soc-name-family           pic 9(4) binary.
022900         88  wz-default-family     value 2.
023000     03  wz-soc-name-port             pic 9(4) binary.
023100         88  wz-default-port       value 25.
023200     03  wz-soc-name-ip               pic 9(8) binary.
023300     03  wz-soc-name-ip-x redefines
023400         wz-soc-name-ip               pic x(4).
023500     03  wz-soc-name-rsvd             pic x(8).
023600
023700 01  wz-soc-subtask                   pic x(08).
023800 01  filler redefines wz-soc-subtask.
023900     03  wz-soc-subtask-eibtaskn      pic 9(07).
024000     03  wz-soc-subtask-char          pic x(01).
024100
024200 01  wz-soc-maxsno                    pic 9(08) binary.
024300     88  wz-default-maxsno         value 99.
024400
024500*           addressing family
024600 01  wz-soc-af                        pic 9(08) binary.
024700     88  wz-default-af             value 2.
024800     88  wz-soc-af-inet            value 2.
024900
025000 01  wz-soc-type                      pic 9(08) binary.
025100     88  wz-default-soctype        value 1.
025200     88  wz-soc-soctype-stream     value 1.
025300     88  wz-soc-soctype-datagram   value 2.
025400     88  wz-soc-soctype-raw        value 3.
025500
025600 01  wz-soc-proto                     pic 9(08) binary.
025700     88  wz-default-proto          value 0.
025800
025900 01  wz-soc-ghbn-hostname             pic x(255).
026000 01  wz-soc-ghbn-namelen              pic 9(08) binary.
026100 01  wz-soc-ghbn-hostent              pic 9(08) binary.
026200
026300 01  wz-soc-ghba-host-ip              pic 9(08) binary.
026400 01  wz-soc-ghba-hostent              pic 9(08) binary.
026500
026600 01  wz-c08-hostent-addr              pic 9(08) binary.
026700 01  wz-c08-hostname-len              pic 9(04) binary.
026800 01  wz-c08-hostname                  pic X(255).
026900 01  wz-c08-hostalias-cnt             pic 9(04) binary value 0.
027000 01  wz-c08-hostalias-seq             pic 9(04) binary value 0.
027100 01  wz-c08-hostalias-len             pic 9(04) binary value 0.
027200 01  wz-c08-hostalias                 pic x(255).
027300 01  wz-c08-host-ip-type              pic 9(04) binary.
027400 01  wz-c08-host-ip-len               pic 9(04) binary.
027500 01  wz-c08-host-ip-cnt               pic 9(04) binary.
027600 01  wz-c08-host-ip-seq               pic 9(04) binary value 0.
027700 01  wz-c08-host-ip                   pic 9(08) binary.
027800
027900 01  wz-soc-s                         pic 9(04) binary.
028000 01  wz-soc-connect-s
028100        redefines wz-soc-s            pic 9(04) binary.
028200 01  wz-soc-read-s
028300        redefines wz-soc-s            pic 9(04) binary.
028400 01  wz-soc-write-s
028500        redefines wz-soc-s            pic 9(04) binary.
028600 01  wz-soc-close-s
028700        redefines wz-soc-s            pic 9(04) binary.
028800
028900 01  wz-soc-work-buffer               pic x(8192).
029000 01  wz-soc-read-cnt                  pic 9(04) binary.
029100
029200 01  wz-soc-read-buffer               pic x(8192).
029300 01  wz-soc-read-nbyte                pic 9(08) binary.
029400     88 wz-soc-read-max            value 8192.
029500
029600 01  wz-soc-write-buffer              pic x(8192).
029700 01  wz-soc-write-nbyte               pic 9(08) binary.
029800 01  wz-soc-write-max                 pic 9(08) binary
029900                                   value 8192.
030000
030100 01  wz-crlf00                        pic x(03) value x'0d0a00'.
030200 01  filler    redefines wz-crlf00.
030300     02 wz-crlf                       pic x(02).
030400     02 filler redefines wz-crlf.
030500        03 wz-cr                      pic x(01).
030600        03 wz-lf                      pic x(01).
030700     02 wz-null                       pic x(01).
030800
030900 01  wzz-soc-fun-is-shutdown          pic x(16) value 'SHUTDOWN'.
031000 01  wzz-soc-shutdown-s               pic 9(04) binary.
031100 01  wzz-soc-shutdown-how             pic 9(08) binary.
031200     88  wzz-shutdown-end-from     value 0.
031300     88  wzz-shutdown-end-to       value 1.
031400     88  wzz-shutdown-end-both     value 2.
031500 01  wzz-errno                        pic 9(08) binary.
031600 01  wzz-retcode                      pic s9(8) binary.
031700     88  wzz-retcode-ok            value +0.
031800     88  wzz-retcode-not-ok        value -1.
031900
032000 01  filler.
032100     03  filler                       pic  x(04) value '****'.
032200     03  filler                       pic  x(08) value 'end  w/s'.
032300     03  filler                       pic  x(04) value '****'.
032400     eject
032500 linkage section.
032600 01  filler                           pic x.
032700     COPY  SMTPXXIX.
032800     eject
032900 procedure division.
033000
033100     perform 1000-initialize thru
033200             1000-initialize-exit
033300
033400     perform 2000-init-tcpip-data thru
033500             2000-init-tcpip-data-exit
033600
033700     perform 2100-obtain-socket thru
033800             2100-obtain-socket-exit
033900
034000     perform 2200-connect-to-server thru
034100             2200-connect-to-server-exit
034200
034300     perform 3000-send-mail-message thru
034400             3000-send-mail-message-exit
034500
034600     perform 4000-close-socket thru
034700             4000-close-socket-exit
034800
034900     exec cics return
035000     end-exec
035100
035200     goback
035300     .
035400
035500 1000-initialize.
035600
035700     move sm-local-program-name
035800       to we-msg-pgm-id
035900
036000     if eibcalen = length of sm-parms
036100         call 'GETDATE' using ws-date
036200
036300         set address of sm-parms
036400          to address of dfhcommarea
036500
036600         if sm-head-valid and sm-tail-valid
036700             set address of sm-text-data
036800              to sm-text-ptr
036900             if sm-text-valid
037000                 set resp-okay to true
037100
037200                 initialize wz-soc-s,
037300                            wz-soc-subtask,
037400                            wz-soc-name,
037500                            wz-soc-ident,
037600                            wz-retcode,
037700                            wz-errno
037800
037900                 exec cics inquire system
038000                      jobname (wc-cics-job-name)
038100                      nohandle
038200                 end-exec
038300
038400                 exec cics assign
038500                      applid (wc-cics-applid)
038600                      initparm (wc-cics-initparm)
038700                      initparmlen (wc-cics-initparmlen)
038800                      nohandle
038900                 end-exec
039000
039100                 perform 7000-get-host-ip thru
039200                         7000-get-host-ip-exit
039300
039400                 move wz-soc-host-ip
039500                   to wz-soc-ghba-host-ip,
039600                      ws-src-host-ip
039700
039800                 perform 7100-get-host-by-addr thru
039900                         7100-get-host-by-addr-exit
040000
040100                 move wz-c08-hostname (1:wz-c08-hostname-len)
040200                   to wz-soc-hostname,
040300                      ws-src-hostname
040400
040500                 perform 1050-process-initparm thru
040600                         1050-process-initparm-exit
040700             else
040800                 set resp-commlen-error to true
040900             end-if
041000         else
041100             set resp-commlen-error to true
041200         end-if
041300     else
041400         set resp-commlen-error to true
041500     end-if
041600     .
041700 1000-initialize-exit. exit.
041800
041900 1050-process-initparm.
042000     move low-values    to ws-initparm-1,
042100                           ws-initparm-2,
042200                           ws-initparm-3,
042300                           ws-initparm-4,
042400                           ws-smtp-hostname,
042500                           ws-smtp-host-dotted-ip,
042600                           ws-debug-secret-word
042700     set ws-default-debug  to true
042800
042900     if  wc-cics-initparmlen > zero
043000         unstring wc-cics-initparm
043100                  delimited by ',' or ' ' or x'00'
043200                  into ws-smtp-host-dotted-ip
043300                       ws-smtp-hostname
043400                       ws-debug-secret-word
043500                       ws-initparm-4
043600         end-unstring
043700
043800         if ws-smtp-host-dotted-ip not = low-values
043900             perform 1100-normalize-ip-addr thru
044000                     1100-normalize-ip-addr-exit
044100             if ws-smtp-hostname = low-values
044200                 move ws-smtp-host-ip
044300                   to wz-soc-ghba-host-ip
044400
044500                 perform 7100-get-host-by-addr thru
044600                         7100-get-host-by-addr-exit
044700
044800                 move wz-c08-hostname (1:wz-c08-hostname-len)
044900                   to ws-smtp-hostname
045000             else
045100                 perform 1200-normalize-hostname thru
045200                         1200-normalize-hostname-exit
045300             end-if
045400         else
045500             if ws-smtp-hostname = low-values
045600                 move ws-src-hostname
045700                   to ws-smtp-hostname
045800                 move ws-src-host-ip
045900                   to ws-smtp-host-ip
046000             else
046100                 perform 1200-normalize-hostname thru
046200                         1200-normalize-hostname-exit
046300                 move ws-smtp-hostname
046400                   to wz-soc-ghbn-hostname
046500                 perform 7200-get-host-by-name thru
046600                         7200-get-host-by-name-exit
046700                 move wz-c08-host-ip
046800                   to ws-smtp-host-ip
046900             end-if
047000         end-if
047100     else
047200         move ws-src-hostname  to ws-smtp-hostname
047300         move ws-src-host-ip   to ws-smtp-host-ip
047400     end-if
047500     .
047600 1050-process-initparm-exit. exit.
047700
047800 1100-normalize-ip-addr.
047900     unstring ws-smtp-host-dotted-ip
048000              delimited by '.' or ' ' or x'00'
048100              into wi-dotted-ip (1)
048200                   wi-dotted-ip (2)
048300                   wi-dotted-ip (3)
048400                   wi-dotted-ip (4)
048500     end-unstring
048600     perform
048700       test after
048800       varying wi-idx from 1 by 1
048900       until wi-idx = 4
049000         if wi-dotted-ip (wi-idx) is numeric
049100             move wi-dotted-ip (wi-idx)
049200               to wi-bin-ip-num
049300             move wi-bin-ip-bin
049400               to wi-bin-ip (wi-idx)
049500         else
049600             move x'00' to wi-bin-ip (wi-idx)
049700         end-if
049800     end-perform
049900     move wi-bin-ip-addr
050000       to ws-smtp-host-ip
050100     .
050200 1100-normalize-ip-addr-exit. exit.
050300
050400 1200-normalize-hostname.
050500     move length of ws-smtp-hostname
050600       to ws-smtp-hostname-len
050700     call 'RMVWHTSP' using ws-smtp-hostname,
050800                           ws-smtp-hostname-len
050900     .
051000 1200-normalize-hostname-exit. exit.
051100
051200 2000-init-tcpip-data.
051300     set wz-default-maxsoc
051400         wz-default-tcpname
051500         wz-default-maxsno
051600         wz-default-af
051700         wz-default-family
051800         wz-default-port
051900         wz-default-soctype
052000         wz-default-proto
052100      to true
052200
052300     move wc-cics-applid
052400       to wz-soc-adsname
052500
052600     move ws-smtp-host-ip
052700       to wz-soc-name-ip
052800
052900     move eibtaskn to wz-soc-subtask-eibtaskn
053000     move 'C'      to wz-soc-subtask-char
053100     move zero     to wz-retcode, wz-errno
053200     .
053300 2000-init-tcpip-data-exit. exit.
053400
053500 2100-obtain-socket.
053600     if wz-retcode-ok
053700         set wz-soc-fun-is-initapi to true
053800         call 'EZACICSO' using wz-soc-initapi
053900                               wz-soc-maxsoc
054000                               wz-soc-ident
054100                               wz-soc-subtask
054200                               wz-soc-maxsno
054300                               wz-errno
054400                               wz-retcode
054500
054600         if wz-initapi-ok
054700             set wz-soc-fun-is-socket to true
054800             call 'EZACICSO' using wz-soc-socket
054900                                   wz-soc-af
055000                                   wz-soc-type
055100                                   wz-soc-proto
055200                                   wz-errno
055300                                   wz-retcode
055400             if wz-retcode >= zero
055500                 compute wz-soc-s = wz-retcode
055600                 compute wz-retcode = zero
055700             else
055800                 set resp-obtain-error to true
055900             end-if
056000         else
056100             set resp-initapi-error to true
056200         end-if
056300     else
056400         continue
056500     end-if
056600     .
056700 2100-obtain-socket-exit. exit.
056800
056900 2200-connect-to-server.
057000     if wz-retcode-ok
057100         set wz-soc-fun-is-connect to true
057200         call 'EZACICSO' using wz-soc-connect
057300                               wz-soc-s
057400                               wz-soc-name
057500                               wz-errno
057600                               wz-retcode
057700         if wz-retcode-ok
057800             perform 6000-read-until-empty thru
057900                     6000-read-until-empty-exit
058000         else
058100             set resp-connect-error to true
058200         end-if
058300     end-if
058400     .
058500 2200-connect-to-server-exit. exit.
058600
058700 3000-send-mail-message.
058800     if wz-retcode-ok
058900         perform 3100-signon thru
059000                 3100-signon-exit
059100         perform 3200-send-header thru
059200                 3200-send-header-exit
059300         perform 3300-send-msg-text thru
059400                 3300-send-msg-text-exit
059500         perform 3400-signoff thru
059600                 3400-signoff-exit
059700     end-if
059800     .
059900 3000-send-mail-message-exit. exit.
060000
060100 3100-signon.
060200     if wz-retcode-ok
060300         set ws-str-ptr-initial     to true
060400         move low-values to wz-soc-write-buffer
060500         string
060600             'HELO '
060700             wc-cics-applid
060800             ws-crlf
060900                delimited by size
061000             into wz-soc-write-buffer
061100             pointer ws-str-ptr
061200         end-string
061300         compute wz-soc-write-nbyte = ws-str-ptr - 1
061400         perform 3900-send-to-server thru
061500                 3900-send-to-server-exit
061600         evaluate true
061700             when ip-rc-250-okay
061800                 continue
061900             when other
062000                 set resp-sm-error to true
062100         end-evaluate
062200     else
062300         continue
062400     end-if
062500     .
062600 3100-signon-exit. exit.
062700
062800 3200-send-header.
062900     if wz-retcode-ok and resp-okay
063000         move length of sm-sender to ws-str-len
063100         call 'RMVWHTSP' using sm-sender,
063200                               ws-str-len
063300         set ws-str-ptr-initial     to true
063400         move low-values to wz-soc-write-buffer
063500         string
063600             'MAIL FROM: '
063700                delimited by size
063800             sm-sender
063900                delimited by x'00'
064000             ws-crlf
064100                delimited by size
064200             into wz-soc-write-buffer
064300             pointer ws-str-ptr
064400         end-string
064500         compute wz-soc-write-nbyte = ws-str-ptr - 1
064600         perform 3900-send-to-server thru
064700                 3900-send-to-server-exit
064800         evaluate true
064900             when ip-rc-250-okay
065000                 set ws-not-done   to true
065100                 perform 3250-send-RCPT-list thru
065200                         3250-send-RCPT-list-exit
065300                     varying ws-loop-cnt from 1 by 1
065400                     until ws-loop-cnt > sm-rcpt-num
065500                        or ws-done
065600             when other
065700                 set resp-sm-error to true
065800         end-evaluate
065900     else
066000         continue
066100     end-if
066200     .
066300 3200-send-header-exit. exit.
066400
066500 3250-send-RCPT-list.
066600     if  wz-retcode-ok
066700         set ws-str-ptr-initial     to true
066800         move low-values to wz-soc-write-buffer
066900         move length of sm-rcpt-addr (ws-loop-cnt)
067000           to ws-str-len
067100         call 'RMVWHTSP' using sm-rcpt-addr ( ws-loop-cnt )
067200                               ws-str-len
067300         move length of sm-rcpt-name (ws-loop-cnt)
067400           to ws-str-len
067500         call 'RMVWHTSP' using sm-rcpt-name ( ws-loop-cnt )
067600                               ws-str-len
067700         string
067800             'RCPT TO: '
067900                delimited by size
068000             sm-rcpt-addr ( ws-loop-cnt )
068100                delimited by x'00'
068200             ws-crlf
068300                delimited by size
068400             into wz-soc-write-buffer
068500             pointer ws-str-ptr
068600         end-string
068700         compute wz-soc-write-nbyte = ws-str-ptr - 1
068800         perform 3900-send-to-server thru
068900                 3900-send-to-server-exit
069000         evaluate true
069100             when ip-rc-250-okay
069200             when ip-rc-251-not-local
069300                 set ws-not-done   to true
069400             when ip-rc-450-no-actn-busy
069500             when ip-rc-451-aborted
069600             when ip-rc-452-no-storage
069700             when ip-rc-550-unavailable
069800                 set ws-not-done   to true
069900             when other
070000                 set resp-sm-error to true
070100                 set ws-done       to true
070200         end-evaluate
070300     else
070400         set ws-done to true
070500     end-if
070600     .
070700 3250-send-RCPT-list-exit. exit.
070800
070900 3300-send-msg-text.
071000     if wz-retcode-ok and resp-okay
071100         set ws-str-ptr-initial     to true
071200         move low-values to wz-soc-write-buffer
071300         string
071400             'DATA'
071500             ws-crlf
071600                delimited by size
071700             into wz-soc-write-buffer
071800             pointer ws-str-ptr
071900         end-string
072000         compute wz-soc-write-nbyte = ws-str-ptr - 1
072100         perform 3900-send-to-server thru
072200                 3900-send-to-server-exit
072300         if ip-rc-354-input-msg
072400             set ws-str-ptr-initial to true
072500             move low-values to wz-soc-write-buffer
072600             perform 3350-build-msg-hdr thru
072700                     3350-build-msg-hdr-exit
072800             move length of sm-text to ws-str-len
072900             call 'RMVWHTSP' using sm-text,
073000                                   ws-str-len
073100             string
073200                 sm-text
073300                 delimited by x'00'
073400                 ws-crlf '.' ws-crlf
073500                 delimited by size
073600                 into wz-soc-write-buffer
073700                 pointer ws-str-ptr
073800             end-string
073900             compute wz-soc-write-nbyte = ws-str-ptr - 1
074000             perform 3900-send-to-server thru
074100                     3900-send-to-server-exit
074200             if ip-rc-250-okay
074300                 continue
074400             else
074500                 set resp-sm-error to true
074600             end-if
074700         else
074800             set resp-sm-error to true
074900         end-if
075000     else
075100         continue
075200     end-if
075300     .
075400 3300-send-msg-text-exit. exit.
075500
075600 3350-build-msg-hdr.
075700     move length of sm-hdr-from             to ws-str-len
075800     call 'RMVWHTSP' using sm-hdr-from         ws-str-len
075900     move length of sm-hdr-subject          to ws-str-len
076000     call 'RMVWHTSP' using sm-hdr-subject      ws-str-len
076100     move length of sm-hdr-reply-to         to ws-str-len
076200     call 'RMVWHTSP' using sm-hdr-reply-to     ws-str-len
076300     move eibtaskn                          to wc-eib-taskn
076400     move eibtime                           to wc-eib-time
076500     move eibdate                           to wc-eib-date
076600     move eibtrnid                          to wc-eib-trnid
076700     if eibtrmid = low-values
076800         move 'bkgn'                        to wc-eib-trmid
076900     else
077000         move eibtrmid                      to wc-eib-trmid
077100     end-if
077200     string
077300             'Date: '        delimited by size
077400             ws-date         delimited by x'00'
077500             ws-crlf         delimited by size
077600             'From: '        delimited by size
077700             sm-hdr-from     delimited by x'00'
077800             ws-crlf         delimited by size
077900             'To:'           delimited by size
078000         into wz-soc-write-buffer
078100         pointer ws-str-ptr
078200     end-string
078300
078400     perform 3355-send-hdr-to-list thru
078500             3355-send-hdr-to-list-exit
078600         varying ws-loop-cnt from 1 by 1
078700         until ws-loop-cnt > sm-rcpt-num
078800
078900     string
079000             'Reply-To: '    delimited by size
079100             sm-hdr-reply-to delimited by x'00'
079200             ws-crlf         delimited by size
079300             'Subject: '     delimited by size
079400             sm-hdr-subject  delimited by x'00'
079500             ws-crlf         delimited by size
079600             'Organization: Oregon Department of Transportation'
079700             ws-crlf
079800             'X-CICS: '
079900                 wc-cics-applid '-'
080000                 wc-eib-date  '-'
080100                 wc-eib-time  '-'
080200                 wc-eib-taskn '-'
080300                 wc-eib-trnid '-'
080400                 wc-eib-trmid
080500             ws-crlf
080600             'Importance: High'
080700             ws-crlf
080800             'X-Mailer: CICS - SMTPXXCX Ver 1.0'
080900             ws-crlf
081000         delimited by size
081100         into wz-soc-write-buffer
081200         pointer ws-str-ptr
081300     end-string
081400     .
081500 3350-build-msg-hdr-exit. exit.
081600
081700 3355-send-hdr-to-list.
081800     string
081900             ' ' delimited by size
082000             sm-rcpt-name ( ws-loop-cnt )
082100                delimited by x'00'
082200             ' ' delimited by size
082300             sm-rcpt-addr ( ws-loop-cnt )
082400                delimited by x'00'
082500         into wz-soc-write-buffer
082600         pointer ws-str-ptr
082700     end-string
082800
082900     if ws-loop-cnt = sm-rcpt-num
083000         string
083100             ws-crlf delimited by size
083200             into wz-soc-write-buffer
083300             pointer ws-str-ptr
083400         end-string
083500     else
083600         string
083700             ',' delimited by size
083800             ws-crlf delimited by size
083900             into wz-soc-write-buffer
084000             pointer ws-str-ptr
084100         end-string
084200     end-if
084300     .
084400 3355-send-hdr-to-list-exit. exit.
084500
084600 3400-signoff.
084700     if wz-retcode-ok
084800         set ws-str-ptr-initial     to true
084900         move low-values to wz-soc-write-buffer
085000         string
085100             'QUIT'
085200             ws-crlf
085300                delimited by size
085400             into wz-soc-write-buffer
085500             pointer ws-str-ptr
085600         end-string
085700         compute wz-soc-write-nbyte = ws-str-ptr - 1
085800         perform 3900-send-to-server thru
085900                 3900-send-to-server-exit
086000     else
086100         continue
086200     end-if
086300     .
086400 3400-signoff-exit. exit.
086500
086600 3900-send-to-server.
086700     perform 5000-write-socket thru
086800             5000-write-socket-exit
086900     perform 6000-read-until-empty thru
087000             6000-read-until-empty-exit
087100     .
087200 3900-send-to-server-exit. exit.
087300
087400 4000-close-socket.
087500     if wz-retcode-ok
087600         set wz-soc-fun-is-close to true
087700         call 'EZACICSO' using wz-soc-close
087800                               wz-soc-close-s
087900                               wz-errno
088000                               wz-retcode
088100         if wz-retcode-ok
088200             continue
088300         else
088400             set resp-close-error to true
088500         end-if
088600     else
088700         move wz-soc-close-s   to wzz-soc-shutdown-s
088800         perform 4500-shutdown-socket thru
088900                 4500-shutdown-socket-exit
089000     end-if
089100     .
089200 4000-close-socket-exit. exit.
089300
089400 4500-shutdown-socket.
089500     set wzz-shutdown-end-both to true
089600     call 'EZACICSO' using wzz-soc-fun-is-shutdown
089700                           wzz-soc-shutdown-s
089800                           wzz-soc-shutdown-how
089900                           wzz-errno
090000                           wzz-retcode
090100     if wzz-retcode-ok
090200         continue
090300     else
090400         set resp-shutdown-error to true
090500     end-if
090600     .
090700 4500-shutdown-socket-exit. exit.
090800
090900 5000-write-socket.
091000     if wz-retcode-ok
091100         if ws-debug-on
091200             move wz-soc-write-nbyte
091300               to we-f-num
091400             string
091500                 '* C:<' we-f-num '>'
091600                 wz-soc-write-buffer(1:80)
091700                 delimited by size
091800                 into we-msg-text
091900             end-string
092000             call 'tcpmessage' using we-msg
092100         end-if
092200         perform 5500-ebcdic-to-ascii thru
092300                 5500-ebcdic-to-ascii-exit
092400         set wz-soc-fun-is-write to true
092500         if wz-soc-write-nbyte >= 0
092600            and wz-soc-write-nbyte <= wz-soc-write-max
092700             call 'EZACICSO' using wz-soc-write
092800                                   wz-soc-write-s
092900                                   wz-soc-write-nbyte
093000                                   wz-soc-write-buffer
093100                                   wz-errno
093200                                   wz-retcode
093300             if wz-retcode > 0
093400                 if wz-retcode = wz-soc-write-nbyte
093500                     continue
093600                 else
093700                     move wz-soc-write-nbyte
093800                       to we-f-num
093900                     move wz-retcode
094000                       to we-f-num-2
094100                     string
094200                         '* I: write count mismatch '
094300                         'IN=' we-f-num
094400                         ', OUT=' we-f-num-2
094500                         delimited by size
094600                         into we-msg-text
094700                     end-string
094800                     call 'tcpmessage' using we-msg
094900                 end-if
095000                 set wz-retcode-ok to true
095100             else
095200                 set resp-write-error to true
095300             end-if
095400         else
095500             set resp-write-error          to true
095600             set resp-write-len-error      to true
095700             compute wz-retcode = -1
095800         end-if
095900     end-if
096000     .
096100 5000-write-socket-exit. exit.
096200
096300 5500-ebcdic-to-ascii.
096400     if wz-retcode-ok
096500         set wz-soc-fun-is-etoa to true
096600         call 'EZACIC04' using wz-soc-write-buffer
096700                               wz-soc-write-nbyte
096800     end-if
096900     .
097000 5500-ebcdic-to-ascii-exit. exit.
097100
097200 6000-read-until-empty.
097300     compute sm-resp-msg-idx = 0
097400     move low-values
097500       to sm-resp-msgs
097600
097700     perform with test after until ip-rc-resp-end or
097800                                   wz-retcode-not-ok
097900         perform 6100-read-socket thru
098000                 6100-read-socket-exit
098100         if wz-retcode > 0
098200             set wz-retcode-ok to true
098300         else
098400             move low-values
098500               to wz-soc-read-buffer
098600         end-if
098700         move wz-soc-read-buffer
098800           to sm-reply-codes
098900         if sm-resp-max-msgs
099000             continue
099100         else
099200             compute sm-resp-msg-idx
099300                   = sm-resp-msg-idx + 1
099400             move sm-reply-codes
099500               to sm-resp-msg (sm-resp-msg-idx)
099600             compute sm-resp-msg-len (sm-resp-msg-idx)
099700                   = wz-retcode
099800         end-if
099900     end-perform
100000     .
100100 6000-read-until-empty-exit. exit.
100200
100300 6100-read-socket.
100400     if wz-retcode-ok
100500         set wz-soc-fun-is-read to true
100600         move zeros             to wz-soc-read-cnt
100700         move low-values        to wz-soc-read-buffer
100800         set ws-not-done        to true
100900
101000         perform until ws-done
101100             move low-values    to wz-soc-work-buffer
101200
101300             set wz-soc-read-max to true
101400
101500             call 'EZACICSO' using wz-soc-read
101600                                   wz-soc-read-s
101700                                   wz-soc-read-nbyte
101800                                   wz-soc-work-buffer
101900                                   wz-errno
102000                                   wz-retcode
102100
102200             if wz-retcode > 0
102300                 if (wz-retcode + wz-soc-read-cnt) >
102400                     length of wz-soc-read-buffer
102500                     set resp-read-error   to true
102600                     set wz-retcode-not-ok to true
102700                     set ws-done           to true
102800                 else
102900                     move wz-soc-work-buffer (1:wz-retcode)
103000                       to wz-soc-read-buffer
103100                          (wz-soc-read-cnt + 1:)
103200                     compute wz-soc-read-cnt =
103300                             wz-soc-read-cnt + wz-retcode
103400                     if wz-soc-work-buffer(wz-retcode - 1:
103500                                 length of wz-crlf)
103600                        = wz-crlf
103700                         set ws-done to true
103800                     else
103900                         continue
104000                     end-if
104100                     compute wz-retcode = wz-soc-read-cnt
104200                 end-if
104300             else
104400                 if wz-read-less-than-one
104500                     set wz-retcode-ok to true
104600                 else
104700                     continue
104800                 end-if
104900                 set ws-done to true
105000             end-if
105100         end-perform
105200
105300         if wz-soc-read-cnt > 0 and wz-retcode >= 0
105400             compute wz-soc-read-nbyte = wz-soc-read-cnt
105500             compute wz-retcode        = wz-soc-read-cnt
105600             perform 6500-ascii-to-ebcdic thru
105700                     6500-ascii-to-ebcdic-exit
105800             if ws-debug-on
105900                 move wz-soc-read-nbyte
106000                   to we-f-num
106100                 string
106200                     '* S:<' we-f-num '>'
106300                      wz-soc-read-buffer(1:80)
106400                     delimited by size
106500                     into we-msg-text
106600                 end-string
106700                 call 'tcpmessage' using we-msg
106800             end-if
106900         else
107000             continue
107100         end-if
107200
107300         if wz-retcode-not-ok
107400             set resp-read-error to true
107500         else
107600             continue
107700         end-if
107800
107900     end-if
108000     .
108100 6100-read-socket-exit. exit.
108200
108300 6500-ascii-to-ebcdic.
108400     if wz-retcode >= 0
108500         set wz-soc-fun-is-atoe to true
108600         call 'EZACIC05' using wz-soc-read-buffer
108700                               wz-soc-read-nbyte
108800     end-if
108900     .
109000 6500-ascii-to-ebcdic-exit. exit.
109100
109200 7000-get-host-ip.
109300         set wz-soc-fun-is-gethostid to true
109400
109500         call 'EZACICSO' using wz-soc-get-host-id
109600                               wz-soc-host-ip
109700     .
109800 7000-get-host-ip-exit. exit.
109900
110000 7100-get-host-by-addr.
110100     if wz-retcode-ok
110200         set wz-soc-fun-is-ghba to true
110300
110400         call 'EZACICSO' using wz-soc-get-host-by-addr
110500                               wz-soc-ghba-host-ip
110600                               wz-errno
110700                               wz-retcode
110800         if wz-gethost-hostent-bad
110900             compute wz-soc-ghba-hostent = 0
111000         else
111100             move wz-errno
111200               to wz-soc-ghba-hostent,
111300                  wz-c08-hostent-addr
111400             call 'EZACIC08' using wz-c08-hostent-addr
111500                             wz-c08-hostname-len
111600                             wz-c08-hostname
111700                             wz-c08-hostalias-cnt
111800                             wz-c08-hostalias-seq
111900                             wz-c08-hostalias-len
112000                             wz-c08-hostalias
112100                             wz-c08-host-ip-type
112200                             wz-c08-host-ip-len
112300                             wz-c08-host-ip-cnt
112400                             wz-c08-host-ip-seq
112500                             wz-c08-host-ip
112600                             wz-retcode
112700         end-if
112800     end-if
112900     .
113000 7100-get-host-by-addr-exit. exit.
113100
113200 7200-get-host-by-name.
113300     if wz-retcode-ok
113400         set wz-soc-fun-is-ghbn to true
113500
113600         move length of wz-soc-ghbn-hostname
113700           to wz-soc-ghbn-namelen
113800         call 'RMVWHTSP' using wz-soc-ghbn-hostname,
113900                               wz-soc-ghbn-namelen
114000         call 'EZACICSO' using wz-soc-get-host-by-name
114100                               wz-soc-ghbn-namelen
114200                               wz-soc-ghbn-hostname
114300                               wz-errno
114400                               wz-retcode
114500         if wz-gethost-hostent-bad
114600             compute wz-soc-ghbn-hostent = 0
114700         else
114800             move wz-errno
114900               to wz-soc-ghbn-hostent,
115000                  wz-c08-hostent-addr
115100             call 'EZACIC08' using wz-c08-hostent-addr
115200                             wz-c08-hostname-len
115300                             wz-c08-hostname
115400                             wz-c08-hostalias-cnt
115500                             wz-c08-hostalias-seq
115600                             wz-c08-hostalias-len
115700                             wz-c08-hostalias
115800                             wz-c08-host-ip-type
115900                             wz-c08-host-ip-len
116000                             wz-c08-host-ip-cnt
116100                             wz-c08-host-ip-seq
116200                             wz-c08-host-ip
116300                             wz-retcode
116400         end-if
116500     end-if
116600     .
116700 7200-get-host-by-name-exit. exit.
116800
116900 identification division.
117000 program-id.                     rmvwhtsp.
117100 data division.
117200 working-storage section.
117300 77  ws-idx                         pic 9(08)  binary.
117400 linkage section.
117500 01  rmv-str                        pic x(32768).
117600 01  rmv-str-len                    pic 9(08)  binary.
117700 01  str-len redefines rmv-str-len  pic 9(08)  binary.
117800 procedure division using rmv-str, rmv-str-len.
117900     evaluate true
118000         when rmv-str-len > 0 and rmv-str-len <= 32768
118100             perform
118200               varying ws-idx from 1 by 1
118300               until rmv-str(1:1) not = space or
118400                     ws-idx = rmv-str-len
118500                 if rmv-str(1:1) = space
118600                     move rmv-str(2:rmv-str-len - 1)
118700                       to rmv-str(1:rmv-str-len)
118800                 end-if
118900             end-perform
119000             perform
119100               varying ws-idx from rmv-str-len by -1
119200               until ( rmv-str(ws-idx:1) not = x'00'  and
119300                       rmv-str(ws-idx:1) not = space ) or
119400                     ws-idx = zero
119500                 move x'00'
119600                   to rmv-str(ws-idx:1)
119700             end-perform
119800             move ws-idx
119900               to str-len
120000             move 0 to return-code
120100         when rmv-str-len = 0
120200             move 4 to return-code
120300         when other
120400             move 8 to return-code
120500     end-evaluate
120600     .
120700 end program rmvwhtsp.
120800
120900 identification division.
121000 program-id.                     getdate.
121100 data division.
121200 working-storage section.
121300 01  ws-filler.
121400     03  ws-current-date              pic x(21).
121500     03  filler redefines ws-current-date.
121600         05 ws-cd-year                pic 9(04).
121700         05 ws-cd-mon                 pic 9(02).
121800         05 ws-cd-day                 pic 9(02).
121900         05 ws-cd-hour                pic 9(02).
122000         05 ws-cd-min                 pic 9(02).
122100         05 ws-cd-sec                 pic 9(02).
122200         05 ws-cd-hun                 pic 9(02).
122300         05 ws-cd-GMT-off             pic x(05).
122400
122500     03  ws-months.
122600         05 filler                    pic x(03) value 'Jan'.
122700         05 filler                    pic x(03) value 'Feb'.
122800         05 filler                    pic x(03) value 'Mar'.
122900         05 filler                    pic x(03) value 'Apr'.
123000         05 filler                    pic x(03) value 'May'.
123100         05 filler                    pic x(03) value 'Jun'.
123200         05 filler                    pic x(03) value 'Jul'.
123300         05 filler                    pic x(03) value 'Aug'.
123400         05 filler                    pic x(03) value 'Sep'.
123500         05 filler                    pic x(03) value 'Oct'.
123600         05 filler                    pic x(03) value 'Nov'.
123700         05 filler                    pic x(03) value 'Dec'.
123800     03  ws-month redefines ws-months
123900                  occurs 12 times     pic x(03).
124000
124100     03  ws-weekday                   pic 9(01).
124200     03  ws-week-days.
124300         05 filler                    pic x(03) value 'Mon'.
124400         05 filler                    pic x(03) value 'Tue'.
124500         05 filler                    pic x(03) value 'Wed'.
124600         05 filler                    pic x(03) value 'Thu'.
124700         05 filler                    pic x(03) value 'Fri'.
124800         05 filler                    pic x(03) value 'Sat'.
124900         05 filler                    pic x(03) value 'Sun'.
125000     03  ws-wd redefines ws-week-days
125100               occurs 7 times         pic x(03).
125200 linkage section.
125300 01  wl-date                          pic x(32).
125400 procedure division using wl-date.
125500     accept ws-weekday from day-of-week
125600     move function current-date
125700       to ws-current-date
125800     string ws-wd ( ws-weekday )   ', '
125900            ws-cd-day              ' '
126000            ws-month ( ws-cd-mon ) ' '
126100            ws-cd-year             ' '
126200            ws-cd-hour             ':'
126300            ws-cd-min              ':'
126400            ws-cd-sec              ' '
126500            ws-cd-GMT-off          x'00'
126600         delimited by size
126700         into wl-date
126800     end-string
126900     .
127000 end program getdate.
127100
127200 identification division.
127300 program-id.                     tcpmessage.
127400 data division.
127500 working-storage section.
127600 01  wc-filler.
127700     03  wc-cics-resp                 pic 9(09).
127800     03  wc-cics-resp2                pic 9(09).
127900     03  wc-cics-length               pic 9(04) binary.
128000     03  wc-cics-td-message           pic x(04) value 'TCPM'.
128100 01  ws-msg                           pic x(132).
128200 01  filler.
128300     03  ws-current-date              pic x(21).
128400     03  filler redefines ws-current-date.
128500         05 ws-cd-year                pic 9(04).
128600         05 ws-cd-mon                 pic 9(02).
128700         05 ws-cd-day                 pic 9(02).
128800         05 ws-cd-hour                pic 9(02).
128900         05 ws-cd-min                 pic 9(02).
129000         05 ws-cd-sec                 pic 9(02).
129100         05 ws-cd-hun                 pic 9(02).
129200         05 ws-cd-GMT-off             pic x(05).
129300
129400 linkage section.
129500 01  wl-msg.
129600     03 filler                        pic x(08).
129700     03 wl-msg-text                   pic x(100).
129800 procedure division using wl-msg.
129900
130000     exec cics address
130100               eib(address of dfheiblk)
130200     end-exec
130300
130400     move low-values to ws-msg
130500
130600     move function current-date
130700       to ws-current-date
130800     compute wc-cics-length = 1
130900     string
131000            eibtrmid
131100            eibtrnid
131200            ' '
131300            ws-cd-year
131400            ws-cd-mon
131500            ws-cd-day
131600            ws-cd-hour
131700            ws-cd-min
131800            ws-cd-sec
131900            ' '
132000            wl-msg
132100            delimited by size
132200       into ws-msg
132300       pointer wc-cics-length
132400     end-string
132500     compute wc-cics-length = wc-cics-length - 1
132600     perform with test after
132700             until wc-cics-resp not = dfhresp(nospace)
132800         exec cics writeq td
132900                   queue  (wc-cics-td-message)
133000                   from   (ws-msg)
133100                   length (wc-cics-length)
133200                   resp   (wc-cics-resp)
133300                   resp2  (wc-cics-resp2)
133400         end-exec
133500     end-perform
133600     move low-values to wl-msg-text
133700     .
133800 end program tcpmessage.
133900
