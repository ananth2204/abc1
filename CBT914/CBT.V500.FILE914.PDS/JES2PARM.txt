/* ***************************************************************** */
/*                                                                   */
/*    THE MODS ON THIS TAPE HAVE BEEN USED SUCCESSFULLY AND TO THE   */
/* BEST OF OUR KNOWLEDGE THEY ARE OPERATIONAL HOWEVER NO WARRANTY IS */
/* MADE TO THE ACCURACY OF THE MODS AND NO RESPONSIBILITY IS ASSUMED */
/* FOR ANY MODIFICATION DIRECTLY OR INDIRECTLY CAUSED BY THE USE OF  */
/* THE MODIFICATIONS.  IT IS THE USERS RESPONSIBILITY TO EVALUATE THE*/
/* USEFULLNESS OF THE MATERIAL.                                      */
/*                                                                   */
/*    WE DO NOT GUARANTEE TO KEEP ANY MATERIAL PROVIDED UP TO DATE,  */
/* NOR DO WE GUARANTEE TO PROVIDE ANY CORRECTIONS OR EXTENSIONS MADE */
/* IN THE FUTURE.                                                    */
/*                                                                   */
/* ***************************************************************** */
/* Note - this sample is for the Shared Spool Mods only - if you use */
/*   any of our other exits, you need to create appropriate exit     */
/*   and loadmod statements for them as well.  The other exits (not  */
/*   ssm exits) are all simple and straightforward.                  */
/* ***************************************************************** */
 /*                                                                */
 /*    First are the loadmod statements -                          */
 /*     watch for the loadmods that must be loaded to csa..        */
 /*                                                                */
LOADMOD(STJTABS)  /*   DYNAMIC TABLE DEFINITIONS FOR JQE EXT.      */
                 /*                                                */
LOADMOD(STSSMTBS) /*     DYNAMIC TABLE DEFINITIONS FOR SSMT        */
LOADMOD(STSCX04A)  /*   CALLS EXIT 54 ROUTINES                     */
LOADMOD(STSCX54A) STORAGE=CSA  /*ROUTE XEQ RESNAME AND VALIDATES   */
LOADMOD(STSCX54B) STORAGE=CSA /*  OTHER SPECIAL JECL STATEMENTS    */
LOADMOD(STSCX06A)   /*  TURNS /*ROUTE CNTL,XX INTO SCHENV= VALUES  */
LOADMOD(STSCX19A)  /* INITIALIZATION STMTS (FOR SSM)               */
LOADMOD(STSCX20A)  /*            JCT TO JQE COPY ROUTINE           */
LOADMOD(STSCX24A)  /* POST-INITIALIZATION (FOR SSM)                */
LOADMOD(STSCX49A)   /* ACCEPTS OR REJECTS JES2 NEXT CHOICE OF JOBS */
                         /* THIS IS THE QGOT ROUTINE               */
LOADMOD(STSCX50A) STORAGE=CSA /* MOVE JCTX TO THE JQE EXTENSION    */
 /*                                                                */
 /*    next the exit statements - if you have exits of your own    */
 /*      you may need to alter the routine parm of the exit        */
 /*      statement, for instance if you have an exit 6 with a      */
 /*      routine name of MYEXIT6, you would change the exit        */
 /*      statement from;                                           */
 /*         exit(006) routine=(exit06a),status=enabled             */
 /*                 to                                             */
 /*         exit(006) routine=(exit06a,myexit6),status=enabled     */
 /*                                                                */
EXIT(004) ROUTINE=(EXIT04A),STATUS=ENABLED
                    /* A = CALLS EXIT54 ROUTINES                   */
EXIT(006) ROUTINE=(EXIT06A),STATUS=ENABLED
                    /*6A = SETS SCHENV BASED ON ROUTE XEQ CARDS    */
EXIT(019) ROUTINE=(EXIT19A),STATUS=ENABLED
EXIT(024) ROUTINE=(EXIT24A),STATUS=ENABLED
                    /* 19A = BUILDS TEMP SSMT NAME/TOKEN PAIR + CB */
                    /* 24A = BUILDS PERM SSMT N/T PAIR             */
EXIT(020) ROUTINE=(EXIT20A),STATUS=ENABLED
EXIT(050) ROUTINE=(EXIT50A),STATUS=ENABLED
                    /* 20A & 50 A COPYS JCT INFO TO JQE EXTENSION  */
EXIT(049) ROUTINE=EXIT49A,STATUS=ENABLED
                    /* IMPLEMENT BEFORE AFTER WITH CNTL STATEMENTS */
EXIT(054) ROUTINE=(EXIT54A,EXIT54B),STATUS=ENABLED
            /* A = GETS ROUTE XEQ INFO                             */
            /* B = GETS "BEFORE/AFTER/INFORM/HOLDFOR/TIL ETC. "    */
 /*                                                                */
 /* finally the SSM parms -                                        */
 /*                                                                */
 /* THESE *MUST* be after the loadmod and exit statements!         */
 /*                                                                */
 /*  These are very benign parms - no smf recording,               */
 /*  BEFORE/AFTER LOGIC IS THE OLD TRADITIONAL METHOD,             */
 /*  NO CHECKS BASED ON JOBNAME, UP TO 256 CONCURRENT JOBS PER UID */
 /*  UP TO 2000 CONCURRENT BATCH JOBS PER USERID (WHAT A LAUGH)    */
 /*  NO LIMITIATIONS BY JOBCLASS (BUT IF IT'S TURNED ON - 255/CLS) */
 /*  BATIME = 0 SECONDS - THIS WILL ONLY BE USED IF BEAFTER IS     */
 /*  CHANGED TO 'DELAY'.                                           */
 /*                                                                */
SSM SMFOPT=NONE,
    SMFNUM=216,
    ALLOWS=ON,
    BEAFTER=PREMOD,
    BATIME=0,
    UIDMAX=2000,
    JBNMAX=0,
    UIDMASK=UUUUUUUU,
    JBNMASK=********,
    CLASSOPT=OFF,
    CLASSLIM(A-Z,0-9)=255
