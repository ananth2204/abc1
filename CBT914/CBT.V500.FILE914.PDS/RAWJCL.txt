./  ADD  NAME=ASMALL,LEVEL=00,SOURCE=0,LIST=ALL
//JOBCARD JOB (4030,37),'ASM  LNK',              <== UPDATE JOBCARD
//        CLASS=X,MSGCLASS=A,
//        NOTIFY=&SYSUID,REGION=3M
//* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//* REVIEW CAREFULLY - UPDATE THE HIGH LEVEL QUALIFIER FOR THE
//*      VARIABLES LISTED BELOW - THEY SHOULD MATCH THE DSNS YOU
//*      ALLOCATED DURING STEP ONE OF THE NON-SMPE INSTALL PROCESS
//*      DSNIN VARIABLE (YOUR.HLQ.SSM.ASM)
//*      MACS VARIABLE (YOUR.HLQ.SSM.MACROS)
//*      SYSLMOD VARIABLE (YOUR.HLQ.SSM.LOADLIB)
//*
//* YOU MAY HAVE TO CHANGE THE NAME FOR SYS1.SHASMAC - IT IS THE DSN
//* THAT YOUR SMPE DDDEF FOR 'SHASMAC' POINTS TO.
//*
//* YOU MAY HAVE TO CHANGE THE NAME FOR SYS1.MACLIB OR SYS1.AMODGEN
//* THE NAMES YOU SHOULD USE, SHOULD MATCH THE SMPE DDDEFS FOR THE
//* NAMES MACLIB AND AMODGEN RESPECTIVELY (THEY ARE USUALLY OK THOUGH)
//*
//*
//* THIS JOB PRODUCES A LOT! OF OUTPUT, AND RUNS FOR QUITE A WHILE,
//* BE PREPARED.
//* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//*
//   SET DSNIN=YOUR.HLQ.SSM.PDS    <<=== UPDATE ALLOCATED ASM DSN
//   SET MACS=YOUR.HLQ.SSM.MACROS <<== UPDATE ALLOCATED MACRO DSN
//   SET SYSLMOD=YOUR.HLQ.SSM.LOADLIB <<== UPDATE TO YOUR NEW LOADLIB
//*
//ASMLNKMM PROC MEM=IEFBR14
//** ------------------------------------------------------------- * **
//** -- FIRST IS THE BASIC ASSEMBLEY STEP                       -- * **
//** ------------------------------------------------------------- * **
//STEPASM  EXEC PGM=ASMA90,
//        PARM='OBJECT,NODECK,ALIGN'
//SYSIN    DD  DISP=SHR,DSN=&DSNIN(&MEM)
//SYSLIB   DD   DISP=SHR,DSN=&MACS
//         DD   DISP=SHR,DSN=SYS1.SHASMAC
//         DD   DISP=SHR,DSN=SYS1.MACLIB
//         DD   DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD   DSN=&&SYSUT1,
//            DCB=BUFNO=1,UNIT=3390,
//            SPACE=(4096,(120,120),,,ROUND)
//SYSPRINT DD   SYSOUT=*
//SYSPUNCH DD   DUMMY
//SYSLIN   DD   DSN=&&OBJ,
//         DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1),
//         DISP=(MOD,PASS),
//         UNIT=3390,SPACE=(3040,(40,40),,,ROUND)
//** ------------------------------------------------------------- * **
//** -- NEXT THE BINDER STEP - INPUT FROM STEPASM STEP          -- * **
//** ------------------------------------------------------------- * **
//STEPLNK  EXEC PGM=IEWBLINK,
//         COND=(8,LT,STEPASM),
//         PARM='LIST,MAP'
//SYSLIB   DD   DISP=SHR,DSN=&SYSLMOD
//SYSLMOD  DD   DISP=SHR,DSN=&SYSLMOD
//SYSPRINT DD   SYSOUT=*
//SYSLIN   DD   DSN=&&OBJ,DISP=(OLD,DELETE,DELETE)
//         DD   DDNAME=SYSIN
//  PEND
//       SET
//STJTABS   EXEC PROC=ASMLNKMM,MEM=STJTABS
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STJTABS(R)
//STSC2050  EXEC PROC=ASMLNKMM,MEM=STSC2050
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSC2050(R)
//STSCX50A  EXEC PROC=ASMLNKMM,MEM=STSCX50A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  ENTRY EXIT50A
  INCLUDE SYSLMOD(STSC2050)
  ORDER STSCX50A,STSC2050
  NAME STSCX50A(R)
//STSCX04A  EXEC PROC=ASMLNKMM,MEM=STSCX04A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX04A(R)
//STSCX54A  EXEC PROC=ASMLNKMM,MEM=STSCX54A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX54A(R)
//STSCX54B  EXEC PROC=ASMLNKMM,MEM=STSCX54B
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX54B(R)
//STSCX06A  EXEC PROC=ASMLNKMM,MEM=STSCX06A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX06A(R)
//STSCX20A  EXEC PROC=ASMLNKMM,MEM=STSCX20A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  INCLUDE SYSLMOD(STSC2050)
  ORDER STSCX20A,STSC2050
  NAME STSCX20A(R)
//STSCX49A  EXEC PROC=ASMLNKMM,MEM=STSCX49A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX49A(R)
//STSCX19A  EXEC PROC=ASMLNKMM,MEM=STSCX19A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX19A(R)
//STSCX24A  EXEC PROC=ASMLNKMM,MEM=STSCX24A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX24A(R)
//STSSMTBS  EXEC PROC=ASMLNKMM,MEM=STSSMTBS
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  ENTRY STSSMTBS
  NAME STSSMTBS(R)
//MSSWAIT   EXEC PROC=ASMLNKMM,MEM=MSSWAIT
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,REUS=REFR)
  ENTRY MSSWAIT
  NAME MSSWAIT(R)
./  ADD  NAME=ASMEXTRA,LEVEL=00,SOURCE=0,LIST=ALL
//JOBNAME  JOB  (ACCTNUM),'ASM EXTRAS',         <== UPDATE JOBCARD!
//         CLASS=A,MSGCLASS=H,
//         NOTIFY=&SYSUID,
//         REGION=2M
//* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//*
//*  NOTE! ! !
//*
//*   This job is used to assemble and link the ** EXTRA ** exits that
//*  have historically been released with the SHARED SPOOL MODS, but
//*  they are NOT part of the SHARED SPOOL MODS.  Review them and use
//*  them if you need them.
//*
//*
//* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//* REVIEW CAREFULLY - UPDATE THE HIGH LEVEL QUALIFIER FOR THE
//*      VARIABLES LISTED BELOW - THEY SHOULD MATCH THE DSNS YOU
//*      ALLOCATED DURING STEP ONE OF THE NON-SMPE INSTALL PROCESS
//*      DSNIN VARIABLE (YOUR.HLQ.SSM.ASM)
//*      MACS VARIABLE (YOUR.HLQ.SSM.MACROS)
//*      SYSLMOD VARIABLE (YOUR.HLQ.SSM.LOADLIB)
//*
//* YOU MAY HAVE TO CHANGE THE NAME FOR SYS1.SHASMAC - IT IS THE DSN
//* THAT YOUR SMPE DDDEF FOR 'SHASMAC' POINTS TO.
//*
//* YOU MAY HAVE TO CHANGE THE NAME FOR SYS1.MACLIB OR SYS1.AMODGEN
//* THE NAMES YOU SHOULD USE, SHOULD MATCH THE SMPE DDDEFS FOR THE
//* NAMES MACLIB AND AMODGEN RESPECTIVELY (THEY ARE USUALLY OK THOUGH)
//*
//*
//* THIS JOB PRODUCES A LOT! OF OUTPUT, AND RUNS FOR QUITE A WHILE,
//* BE PREPARED.
//* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//*
//   SET DSNIN=YOUR.HLQ.SSM.PDS  <<=== UPDATE ALLOCATED ASM DSN
//   SET MACS=YOUR.HLQ.SSM.MACROS <<== UPDATE ALLOCATED MACRO DSN
//   SET SYSLMOD=YOUR.HLQ.SSM.LOADLIB <<== UPDATE TO YOUR NEW LOADLIB
//*
//*
//ASMLNKMM PROC MEM=IEFBR14
//*
//** ------------------------------------------------------------- * **
//** -- FIRST IS THE BASIC ASSEMBLEY STEP                       -- * **
//** ------------------------------------------------------------- * **
//STEPASM  EXEC PGM=ASMA90,
//        PARM='OBJECT,NODECK,ALIGN'
//SYSIN    DD  DISP=SHR,DSN=&DSNIN(&MEM)
//SYSLIB   DD   DISP=SHR,DSN=&MACS
//         DD   DISP=SHR,DSN=SYS1.SHASMAC
//         DD   DISP=SHR,DSN=SYS1.MACLIB
//         DD   DISP=SHR,DSN=SYS1.AMODGEN
//SYSUT1   DD   DSN=&&SYSUT1,
//            DCB=BUFNO=1,UNIT=3390,
//            SPACE=(4096,(120,120),,,ROUND)
//SYSPRINT DD   SYSOUT=*
//SYSPUNCH DD   DUMMY
//SYSLIN   DD   DSN=&&OBJ,
//         DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1),
//         DISP=(MOD,PASS),
//         UNIT=3390,SPACE=(3040,(40,40),,,ROUND)
//** ------------------------------------------------------------- * **
//** -- NEXT THE BINDER STEP - INPUT FROM STEPASM STEP          -- * **
//** ------------------------------------------------------------- * **
//STEPLNK  EXEC PGM=IEWBLINK,
//         COND=(8,LT,STEPASM),
//         PARM='LIST,MAP'
//SYSLIB   DD   DISP=SHR,DSN=&SYSLMOD
//SYSLMOD  DD   DISP=SHR,DSN=&SYSLMOD
//SYSPRINT DD   SYSOUT=*
//SYSLIN   DD   DSN=&&OBJ,DISP=(OLD,DELETE,DELETE)
//         DD   DDNAME=SYSIN
//  PEND
//*
//* THIS IS THE PAGE SEPERATOR EXIT
//STSCX01A  EXEC PROC=ASMLNKMM,MEM=STSCX01A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX01A(R)
//*
//* THIS IS PREVENTS PURGING BY JOB RANGE (INCLUDING $PJ(1-99999)
//STSCX05B  EXEC PROC=ASMLNKMM,MEM=STSCX05B
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX05B(R)
//*
//* THIS EXIT CAUSES FCBS TO BE RELOADED WITH EACH JOB UNLESS STD FORMS
//STSCX15A  EXEC PROC=ASMLNKMM,MEM=STSCX15A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX15A(R)
//*
//* THIS ONE PROVIDES SAF PROCESSINF FOR JOBS COMING IN FROM RJE/NJE
//STSCX36A  EXEC PROC=ASMLNKMM,MEM=STSCX36A
//STEPLNK.SYSIN DD   *
  SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR)
  NAME STSCX36A(R)
./  ENDUP
